<?xml version="1.0" encoding="UTF-8" standalone="yes"?><EtherCATTest Name="TF-4811 RF Power Generator (RF PG) (5003-2011)" RealeaseState="Released" SchemaVersion="1.0.35" TestVendorId="1" TestId="18449" TestVersion="1.0.0" xsi:noNamespaceSchemaLocation="EtherCATTest.xsd" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
	<Comment>Test group and function IDs up to 100 are used for generated test cases and will be overwritten.
Use IDs above for manual written test cases.</Comment>
	<History>
		<HistoryEntry TestVersion="0.0.0" Date="2019-05-02" Editor="F.E.">Date			: 2019.05.02
Based on file		: ETG5003_201x_DC&amp;RF_PG_OD.xlsx
File version		: 1.2.0
Device profile		: 5003
Module profile		: 2011
Included OD		: 5003.1 (file: ..\Part_0001_CommonDeviceProfile\ETG5003_1_CDP_OD.xlsx)
TableParser		: 1.5.0.4
TestFileHandler		: 1.5.6.0
</HistoryEntry>
	</History>
	<TestVariables>
		<TestVariable>
			<Name>bDEBUG</Name>
			<Type>Bool</Type>
			<DefaultValue xsi:type="xsd:boolean">true</DefaultValue>
			<Comment>Development debug Variable (automatic generated variable, will be overwritten when generating new test)</Comment>
		</TestVariable>
		<TestVariable>
			<Name>bIgnoreProfileID</Name>
			<Type>Bool</Type>
			<DefaultValue xsi:type="xsd:boolean">false</DefaultValue>
			<Comment>If true the test is executed even if the Profile IDs does not match (automatic generated variable, will be overwritten when generating new test)</Comment>
		</TestVariable>
		<TestVariable>
			<Name>bAbortTestCaseOnFirstError</Name>
			<Type>Bool</Type>
			<DefaultValue xsi:type="xsd:boolean">true</DefaultValue>
			<Comment>If true the object test case is abort after the first error in one module (automatic generated variable, will be overwritten when generating new test)</Comment>
		</TestVariable>
	</TestVariables>
	<GlobalVariables>
		<GlobalVariable>
			<Name>arrOfflineProfiles</Name>
			<Type>ArrayOfString</Type>
			<Comment>Stores the current offline profiles (automatic generated variable, will be overwritten when generating new test)</Comment>
		</GlobalVariable>
		<GlobalVariable>
			<Name>arrOnlineProfiles</Name>
			<Type>ArrayOfString</Type>
			<Comment>Stores the current online profiles (automatic generated variable, will be overwritten when generating new test)</Comment>
		</GlobalVariable>
	</GlobalVariables>
	<Variables>
		<Variable>
			<Name>strResult</Name>
			<Type>String</Type>
			<Comment>Test function result (automatic generated variable, will be overwritten when generating new test)</Comment>
		</Variable>
		<Variable>
			<Name>odDeviceObjectdictionary</Name>
			<Type>ObjectDictionary</Type>
			<Comment>Current device object dictionary to be tested. (automatic generated variable, will be overwritten when generating new test)</Comment>
		</Variable>
		<Variable>
			<Name>odDeviceObjectdictionaryList</Name>
			<Type>ObjectList</Type>
			<Comment>Tmp variable to get OD length (automatic generated variable, will be overwritten when generating new test)</Comment>
		</Variable>
		<Variable>
			<Name>u32Tmp</Name>
			<Type>UInt32</Type>
			<Comment>Tmp length of offline OD (automatic generated variable, will be overwritten when generating new test)</Comment>
		</Variable>
		<Variable>
			<Name>bAtLeastOneModuleMatch</Name>
			<Type>Bool</Type>
			<Comment>Indicates if at least one matching module was found (automatic generated variable, will be overwritten when generating new test)</Comment>
		</Variable>
		<Variable>
			<Name>arrCurrentProfiles</Name>
			<Type>ArrayOfString</Type>
			<Comment>List of current Profiles (automatic generated variable, will be overwritten when generating new test)</Comment>
		</Variable>
		<Variable>
			<Name>u16ObjectIndexInclOffset</Name>
			<Type>UInt16</Type>
			<Comment>Object index include the module specific offset (automatic generated variable, will be overwritten when generating new test)</Comment>
		</Variable>
		<Variable>
			<Name>VerifyDescriptionError</Name>
			<Type>Bool</Type>
			<Comment>Indicates if an error occured during verification of the object/entry description (automatic generated variable, will be overwritten when generating new test)</Comment>
		</Variable>
		<Variable>
			<Name>i32CurrentBitOffset</Name>
			<Type>Int32</Type>
			<Comment>Bittoffset of the current entry (automatic generated variable, will be overwritten when generating new test)</Comment>
		</Variable>
		<Variable>
			<Name>u32ProfileCounter</Name>
			<Type>UInt32</Type>
			<Comment>Counter of all Profile elements (automatic generated variable, will be overwritten when generating new test)</Comment>
		</Variable>
		<Variable>
			<Name>bObjectOrEntryRequiredLevel</Name>
			<Type>Byte</Type>
			<DefaultValue xsi:type="xsd:int">0</DefaultValue>
			<Comment>Indicates the required level of an object or entry (0='notset'; 1='optional'; 2='recommend'; 3='mandatory') (automatic generated variable, will be overwritten when generating new test)</Comment>
		</Variable>
		<Variable>
			<Name>bConditionTrue</Name>
			<Type>Bool</Type>
			<Comment>Indicates if the condition for the object or entry is fulfilled (automatic generated variable, will be overwritten when generating new test)</Comment>
		</Variable>
		<Variable>
			<Name>u16DataType</Name>
			<Type>UInt16</Type>
			<Comment>Entry Datatype (automatic generated variable, will be overwritten when generating new test)</Comment>
		</Variable>
		<Variable>
			<Name>u32CurrentProfilesLength</Name>
			<Type>UInt32</Type>
			<Comment>Length of the Profile list (automatic generated variable, will be overwritten when generating new test)</Comment>
		</Variable>
		<Variable>
			<Name>strTmpString</Name>
			<Type>String</Type>
			<Comment> (automatic generated variable, will be overwritten when generating new test)</Comment>
		</Variable>
		<Variable>
			<Name>uint16CurDeviceProfile</Name>
			<Type>UInt16</Type>
			<Comment>Current Device Profile (automatic generated variable, will be overwritten when generating new test)</Comment>
		</Variable>
		<Variable>
			<Name>uint16CurModuleProfile</Name>
			<Type>UInt16</Type>
			<Comment>Current Module Profile (automatic generated variable, will be overwritten when generating new test)</Comment>
		</Variable>
		<Variable>
			<Name>uint16CurSubModuleProfile</Name>
			<Type>UInt16</Type>
			<Comment>Current SubModule Profile (automatic generated variable, will be overwritten when generating new test)</Comment>
		</Variable>
		<Variable>
			<Name>u16NextDefObjectIndexInclOffset</Name>
			<Type>UInt16</Type>
			<Comment>Object index of the next defined object (required if a reserved object range shall be testetd) (automatic generated variable, will be overwritten when generating new test)</Comment>
		</Variable>
		<Variable>
			<Name>byteSubIndexInclOffset</Name>
			<Type>Byte</Type>
			<Comment>SubIndex incl. Module specific offset (automatic generated variable, will be overwritten when generating new test)</Comment>
		</Variable>
	</Variables>
	<EcatCmdGrps></EcatCmdGrps>
	<IncludedTestFunctions>
		<FileName>EcBaseFunctions_V1i0i0.xml</FileName>
		<FileName>BF-0040_V1i0i1_ProfileFunctions.xml</FileName>
	</IncludedTestFunctions>
	<TestFunctions>
		<TestFunction Name="IsDcSupported" FunctionId="1">
			<Description>
				<Action>Note : (automatic generated function, will be overwritten when generating new test)</Action>
				<References>
					<Reference></Reference>
				</References>
			</Description>
			<LocalVariables>
				<Name>IsDcSupported.Counter</Name>
				<Type>UInt32</Type>
				<DefaultValue>0</DefaultValue>
			</LocalVariables>
			<LocalVariables>
				<Name>IsDcSupported.AssignActive</Name>
				<Type>UInt16</Type>
				<DefaultValue>0</DefaultValue>
			</LocalVariables>
			<LocalVariables>
				<Name>IsDcSupported.Active</Name>
				<Type>UInt16</Type>
				<DefaultValue>0</DefaultValue>
			</LocalVariables>
			<OutParameter>
				<Name>IsDcSupported.Supported</Name>
				<Type>Bool</Type>
			</OutParameter>
			<TestStep Name="InitReturnValue">
				<SetVariable Target="IsDcSupported.Supported">false</SetVariable>
			</TestStep>
			<TestStep Name="ReturnIfDcNotDefined">
				<Compare>
					<Equal>
						<Value1>DeviceDescr.DC</Value1>
						<Value2>false</Value2>
						<Return Id="7"></Return>
					</Equal>
				</Compare>
			</TestStep>
			<TestStep Name="LoopStart">
				<Compare>
					<GreaterOrEqual>
						<Value1>IsDcSupported.Counter</Value1>
						<Value2>DeviceDescr.DC.OpMode.Count</Value2>
						<Return Id="8"></Return>
					</GreaterOrEqual>
				</Compare>
			</TestStep>
			<TestStep>
				<SetVariable Target="IsDcSupported.AssignActive">DeviceDescr.DC.OpMode[IsDcSupported.Counter].AssignActivate</SetVariable>
			</TestStep>
			<TestStep>
				<GetBits Target="IsDcSupported.Active" Source="IsDcSupported.AssignActive">
					<Offset>8</Offset>
					<Length>3</Length>
				</GetBits>
				<Compare>
					<Greater>
						<Value1>IsDcSupported.Active</Value1>
						<Value2>0</Value2>
						<WriteLine Id="9" Param0="IsDcSupported.Counter" Param1="IsDcSupported.AssignActive" Level="Verbose">DC.OpMode[{0}] supports DC (assign active 0x{1:X}).</WriteLine>
					</Greater>
				</Compare>
				<Compare>
					<Greater>
						<Value1>IsDcSupported.Active</Value1>
						<Value2>0</Value2>
						<SetVariable Target="IsDcSupported.Supported">true</SetVariable>
					</Greater>
				</Compare>
				<Compare>
					<Greater>
						<Value1>IsDcSupported.Active</Value1>
						<Value2>0</Value2>
						<Return Id="10"></Return>
					</Greater>
				</Compare>
			</TestStep>
			<TestStep Name="LoopEnd">
				<SetVariable Target="IsDcSupported.Counter">IsDcSupported.Counter + 1</SetVariable>
				<Compare>
					<Lower>
						<Value1>IsDcSupported.Counter</Value1>
						<Value2>DeviceDescr.DC.OpMode.Count</Value2>
						<GotoStep>LoopStart</GotoStep>
					</Lower>
				</Compare>
			</TestStep>
		</TestFunction>
		<TestFunction Name="IsEntryDefined" FunctionId="2">
			<Description>
				<Action>Note : (automatic generated function, will be overwritten when generating new test)</Action>
				<References>
					<Reference></Reference>
				</References>
			</Description>
			<Parameter>
				<Name>IsEntryDefined.Index</Name>
				<Type>UInt16</Type>
			</Parameter>
			<Parameter>
				<Name>IsEntryDefined.SubIndexIndex</Name>
				<Type>Byte</Type>
			</Parameter>
			<Parameter>
				<Name>IsEntryDefined.OfflineOnline</Name>
				<Type>String</Type>
			</Parameter>
			<LocalVariables>
				<Name>IsEntryDefined.OfflineOd</Name>
				<Type>ObjectDictionary</Type>
			</LocalVariables>
			<LocalVariables>
				<Name>IsEntryDefined.Data</Name>
				<Type>ArrayOfBytes</Type>
			</LocalVariables>
			<LocalVariables>
				<Name>IsEntryDefined.SdoAbort</Name>
				<Type>UInt32</Type>
			</LocalVariables>
			<LocalVariables>
				<Name>IsEntryDefined.MbxAbortMessage</Name>
				<Type>String</Type>
			</LocalVariables>
			<OutParameter>
				<Name>IsEntryDefined.bExists</Name>
				<Type>Bool</Type>
			</OutParameter>
			<TestStep Name="DebugOutput">
				<Compare>
					<Equal>
						<Value1>bDEBUG</Value1>
						<Value2>true</Value2>
						<WriteLine Id="7" Param0="IsEntryDefined.Index" Param1="IsEntryDefined.SubIndexIndex" Param2="IsEntryDefined.OfflineOnline" Level="Verbose">DEBUG | IsEntryDefined (Index 0x{0:X}; SubIndex {1}; OfflineOnline '{2}')</WriteLine>
					</Equal>
				</Compare>
			</TestStep>
			<TestStep Name="InitReturnValue">
				<SetVariable Target="IsEntryDefined.bExists">true</SetVariable>
			</TestStep>
			<TestStep Name="HandleOnlineOffline">
				<Compare>
					<Equal>
						<Value1>IsEntryDefined.OfflineOnline</Value1>
						<Value2>"online"</Value2>
						<GotoStep>HandleOnline</GotoStep>
					</Equal>
				</Compare>
				<Compare>
					<Equal>
						<Value1>IsEntryDefined.OfflineOnline</Value1>
						<Value2>"offline"</Value2>
						<GotoStep>HandleOffline</GotoStep>
					</Equal>
				</Compare>
				<Compare>
					<Equal>
						<Value1>true</Value1>
						<Value2>true</Value2>
						<RaiseError Id="8" Param0="IsEntryDefined.OfflineOnline">IsEntryDefined | OD Type '{0}' not supported.</RaiseError>
					</Equal>
				</Compare>
			</TestStep>
			<TestStep Name="HandleOnline">
				<UploadCoEObject>
					<Index>IsEntryDefined.Index</Index>
					<SubIndex>IsEntryDefined.SubIndexIndex</SubIndex>
					<DataVar>IsEntryDefined.Data</DataVar>
					<AbortCode>IsEntryDefined.SdoAbort</AbortCode>
					<AbortMessage>IsEntryDefined.MbxAbortMessage</AbortMessage>
				</UploadCoEObject>
				<GotoOnFailure>SetEntryDoesNotExists</GotoOnFailure>
			</TestStep>
			<TestStep Name="HandleReturnValue">
				<Compare>
					<NotEqual>
						<Value1>IsEntryDefined.SdoAbort</Value1>
						<Value2>0</Value2>
						<GotoStep>SetEntryDoesNotExists</GotoStep>
					</NotEqual>
				</Compare>
				<Compare>
					<Equal>
						<Value1>IsEntryDefined.SdoAbort</Value1>
						<Value2>0</Value2>
						<Return Id="9"></Return>
					</Equal>
				</Compare>
				<Compare>
					<Equal>
						<Value1>IsEntryDefined.MbxAbortMessage</Value1>
						<Value2>EmptyString</Value2>
						<Return Id="10"></Return>
					</Equal>
				</Compare>
				<Compare>
					<Equal>
						<Value1>IsEntryDefined.MbxAbortMessage</Value1>
						<Value2>null</Value2>
						<Return Id="11"></Return>
					</Equal>
				</Compare>
				<Compare>
					<Equal>
						<Value1>true</Value1>
						<Value2>true</Value2>
						<GotoStep>SetEntryDoesNotExists</GotoStep>
					</Equal>
				</Compare>
			</TestStep>
			<TestStep Name="HandleOffline">
				<GetObjectDictionary Target="IsEntryDefined.OfflineOd">
					<DictionaryType>Offline</DictionaryType>
				</GetObjectDictionary>
			</TestStep>
			<TestStep>
				<GetObjectDescription SourceDictionary="IsEntryDefined.OfflineOd" Index="IsEntryDefined.Index" SubIndex="IsEntryDefined.SubIndexIndex"></GetObjectDescription>
				<ReturnOnSuccess Id="12"></ReturnOnSuccess>
			</TestStep>
			<TestStep Name="SetEntryDoesNotExists">
				<SetVariable Target="IsEntryDefined.bExists">false</SetVariable>
			</TestStep>
		</TestFunction>
	</TestFunctions>
	<TestGroups>
		<TestGroup Name="Verify objects 0x1000 - 0x1FFF (Communication Area)" GroupId="1">
			<TestCase Name="offline | 0x1000 (Device Type)" CaseId="1">
				<Description>
					<PreCondition>- The device profile is 5003
- The module profile is 2011
- The submodule profile is 0</PreCondition>
					<Action>- Iterate over all offline defined modules/channels and if the PreCondition matches the following operations are done:
- Get the offline description of object 0x1000(+module specific offset) 'Device Type' and all entries
 Check:
    (Name)
    BitSize
    DataType
    Rx / Tx mappable
    Default Data
    MinData
    Flags       </Action>
					<PostCondition>Error if
- mandatory object / entry is not defined
- an optional object exists and the entries are invalid
- Object / entry description does not match with the specification</PostCondition>
					<ProposalForSolution>- Define the missing objects
- correct object / entry description</ProposalForSolution>
					<References>
						<Reference Specification="ETG.5003.2011"></Reference>
					</References>
					<Mandatory>true</Mandatory>
				</Description>
				<TestStep Name="InitResult">
					<SetVariable Target="strResult">EmptyString</SetVariable>
				</TestStep>
				<TestStep Name="CheckIfOdAvailable">
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Mailbox</Value1>
							<Value2>false</Value2>
							<SkipCase Id="1">DuT does not support mailbox.</SkipCase>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Mailbox.CoE</Value1>
							<Value2>false</Value2>
							<SkipCase Id="2">DuT does not support CoE.</SkipCase>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep>
					<GetObjectDictionary Target="odDeviceObjectdictionary">
						<DictionaryType>Offline</DictionaryType>
					</GetObjectDictionary>
					<SkipOnFailure Id="3">No offline object dictionary defined.</SkipOnFailure>
				</TestStep>
				<TestStep>
					<GetObjectList Count="u32Tmp" Target="odDeviceObjectdictionaryList" SourceDict="odDeviceObjectdictionary"></GetObjectList>
					<Compare>
						<Equal>
							<Value1>u32Tmp</Value1>
							<Value2>0</Value2>
							<SkipCase Id="4">No offline object dictionary defined.</SkipCase>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="InitAtLeastOneProfileMatch">
					<SetVariable Target="bAtLeastOneModuleMatch">false</SetVariable>
				</TestStep>
				<TestStep Name="GetCurrentProfileList">
					<SizeOf UInt32Var="u32Tmp">arrOfflineProfiles</SizeOf>
					<Compare>
						<Equal>
							<Value1>u32Tmp</Value1>
							<Value2>0</Value2>
							<CallTestFunction Name="GetCurrentProfileList">
								<Parameter>"offline"</Parameter>
								<Parameter>"SafeOP"</Parameter>
								<OutParameter>arrOfflineProfiles</OutParameter>
							</CallTestFunction>
						</Equal>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>u32Tmp</Value1>
							<Value2>0</Value2>
							<WriteLine Id="5" Param0="arrOfflineProfiles" Level="Verbose">Use previously created profile list ({0})</WriteLine>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep>
					<SizeOf UInt32Var="u32Tmp">arrOfflineProfiles</SizeOf>
				</TestStep>
				<TestStep>
					<InitArray TargetArray="arrCurrentProfiles" Length="u32Tmp"></InitArray>
				</TestStep>
				<TestStep>
					<CopyArray>
						<SourceArray>arrOfflineProfiles</SourceArray>
						<DestinationArray>arrCurrentProfiles</DestinationArray>
						<Length>u32Tmp</Length>
					</CopyArray>
				</TestStep>
				<TestStep Name="IsProfileSupported">
					<CallTestFunction Name="DeviceAndModuleProfileDefined">
						<Parameter>arrCurrentProfiles</Parameter>
						<Parameter>5003</Parameter>
						<Parameter>2011</Parameter>
						<OutParameter>bAtLeastOneModuleMatch</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>bAtLeastOneModuleMatch</Value1>
							<Value2>false</Value2>
							<GotoStep>END</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="GetObjectIndexInclOffset">
					<SetVariable Target="u16ObjectIndexInclOffset">#x1000</SetVariable>
					<WriteLine Id="6" Param0="u16ObjectIndexInclOffset" Level="Verbose">ObjectIndex '0x{0:X}' (module independent)</WriteLine>
				</TestStep>
				<TestStep Name="LoadDeviceObjectDictionary">
					<Description Id="7" Level="Verbose">Load 'offline' object dictionary for testing.</Description>
					<GetObjectDictionary Target="odDeviceObjectdictionary">
						<DictionaryType>Offline</DictionaryType>
					</GetObjectDictionary>
					<RaiseErrorOnFailure Id="8">VerifyObject : failed to load offline object dictionary.</RaiseErrorOnFailure>
				</TestStep>
				<TestStep Name="CallCheckObjectDescription">
					<Description Id="9" Param0="u16ObjectIndexInclOffset" Level="Output">Verify the object description 0x{0:X4} 'Device Type'.</Description>
					<CallTestFunction Name="CheckObjectDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"offline"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>"Device Type"</Parameter>
						<Parameter>null</Parameter>
						<Parameter>7</Parameter>
						<Parameter>-1</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<GotoStep>END</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CallSi0CheckEntryDescription">
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"offline"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>0</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>null</Parameter>
						<Parameter>7</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>null</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>32</Parameter>
						<Parameter>i32CurrentBitOffset</Parameter>
						<Parameter>true</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="END">
					<Compare>
						<NotEqual>
							<Value1>bAtLeastOneModuleMatch</Value1>
							<Value2>true</Value2>
							<SkipCase Id="10">SKIP TEST(no module/channel supports the current profile)</SkipCase>
						</NotEqual>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bDEBUG</Value1>
							<Value2>true</Value2>
							<WriteLine Id="11" Param0="strResult" Level="Verbose">DEBUG | Result : '{0}'.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>strResult</Value1>
							<Value2>EmptyString</Value2>
							<ReturnSuccess Id="12">Test succeed</ReturnSuccess>
						</Equal>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>strResult</Value1>
							<Value2>EmptyString</Value2>
							<RaiseError Id="13"></RaiseError>
						</NotEqual>
					</Compare>
				</TestStep>
			</TestCase>
			<TestCase Name="online | 0x1000 (Device Type)" CaseId="2">
				<Description>
					<PreCondition>- The device profile is 5003
- The module profile is 2011
- The submodule profile is 0</PreCondition>
					<Action>- Iterate over all online defined modules/channels and if the PreCondition matches the following operations are done:
- Get the online description of object 0x1000(+module specific offset) 'Device Type' and all entries
 Check:
    (Name)
    BitSize
    DataType
    Rx / Tx mappable
    Default Data
    MinData
    Flags       </Action>
					<PostCondition>Error if
- mandatory object / entry is not defined
- an optional object exists and the entries are invalid
- Object / entry description does not match with the specification</PostCondition>
					<ProposalForSolution>- Define the missing objects
- correct object / entry description</ProposalForSolution>
					<References>
						<Reference Specification="ETG.5003.2011"></Reference>
					</References>
					<Mandatory>true</Mandatory>
				</Description>
				<TestStep Name="InitResult">
					<SetVariable Target="strResult">EmptyString</SetVariable>
				</TestStep>
				<TestStep Name="CheckIfOdAvailable">
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Mailbox</Value1>
							<Value2>false</Value2>
							<SkipCase Id="1">DuT does not support mailbox.</SkipCase>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Mailbox.CoE</Value1>
							<Value2>false</Value2>
							<SkipCase Id="2">DuT does not support CoE.</SkipCase>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Mailbox.CoE.SdoInfo</Value1>
							<Value2>false</Value2>
							<SkipCase Id="3">DuT does not support SDO Info.</SkipCase>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="InitAtLeastOneProfileMatch">
					<SetVariable Target="bAtLeastOneModuleMatch">false</SetVariable>
				</TestStep>
				<TestStep Name="GetCurrentProfileList">
					<SizeOf UInt32Var="u32Tmp">arrOnlineProfiles</SizeOf>
					<Compare>
						<Equal>
							<Value1>u32Tmp</Value1>
							<Value2>0</Value2>
							<CallTestFunction Name="GetCurrentProfileList">
								<Parameter>"online"</Parameter>
								<Parameter>"SafeOP"</Parameter>
								<OutParameter>arrOnlineProfiles</OutParameter>
							</CallTestFunction>
						</Equal>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>u32Tmp</Value1>
							<Value2>0</Value2>
							<WriteLine Id="4" Param0="arrOnlineProfiles" Level="Verbose">Use previously created profile list ({0})</WriteLine>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep>
					<SizeOf UInt32Var="u32Tmp">arrOnlineProfiles</SizeOf>
				</TestStep>
				<TestStep>
					<InitArray TargetArray="arrCurrentProfiles" Length="u32Tmp"></InitArray>
				</TestStep>
				<TestStep>
					<CopyArray>
						<SourceArray>arrOnlineProfiles</SourceArray>
						<DestinationArray>arrCurrentProfiles</DestinationArray>
						<Length>u32Tmp</Length>
					</CopyArray>
				</TestStep>
				<TestStep Name="IsProfileSupported">
					<CallTestFunction Name="DeviceAndModuleProfileDefined">
						<Parameter>arrCurrentProfiles</Parameter>
						<Parameter>5003</Parameter>
						<Parameter>2011</Parameter>
						<OutParameter>bAtLeastOneModuleMatch</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>bAtLeastOneModuleMatch</Value1>
							<Value2>false</Value2>
							<GotoStep>END</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="GetObjectIndexInclOffset">
					<SetVariable Target="u16ObjectIndexInclOffset">#x1000</SetVariable>
					<WriteLine Id="5" Param0="u16ObjectIndexInclOffset" Level="Verbose">ObjectIndex '0x{0:X}' (module independent)</WriteLine>
				</TestStep>
				<TestStep Name="LoadDeviceObjectDictionary">
					<Description Id="6" Level="Verbose">Load 'online' object dictionary for testing.</Description>
					<GetObjectDictionary Target="odDeviceObjectdictionary">
						<DictionaryType>Online</DictionaryType>
					</GetObjectDictionary>
					<RaiseErrorOnFailure Id="7">VerifyObject : failed to load online object dictionary.</RaiseErrorOnFailure>
				</TestStep>
				<TestStep Name="CallCheckObjectDescription">
					<Description Id="8" Param0="u16ObjectIndexInclOffset" Level="Output">Verify the object description 0x{0:X4} 'Device Type'.</Description>
					<CallTestFunction Name="CheckObjectDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"online"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>"Device Type"</Parameter>
						<Parameter>null</Parameter>
						<Parameter>7</Parameter>
						<Parameter>-1</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<GotoStep>END</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CallSi0CheckEntryDescription">
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"online"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>0</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>null</Parameter>
						<Parameter>7</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>null</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>32</Parameter>
						<Parameter>i32CurrentBitOffset</Parameter>
						<Parameter>true</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="END">
					<Compare>
						<NotEqual>
							<Value1>bAtLeastOneModuleMatch</Value1>
							<Value2>true</Value2>
							<SkipCase Id="9">SKIP TEST(no module/channel supports the current profile)</SkipCase>
						</NotEqual>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bDEBUG</Value1>
							<Value2>true</Value2>
							<WriteLine Id="10" Param0="strResult" Level="Verbose">DEBUG | Result : '{0}'.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>strResult</Value1>
							<Value2>EmptyString</Value2>
							<ReturnSuccess Id="11">Test succeed</ReturnSuccess>
						</Equal>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>strResult</Value1>
							<Value2>EmptyString</Value2>
							<RaiseError Id="12"></RaiseError>
						</NotEqual>
					</Compare>
				</TestStep>
			</TestCase>
			<TestCase Name="offline | 0x1008 (Manufacturer Device Name)" CaseId="3">
				<Description>
					<PreCondition>- The device profile is 5003
- The module profile is 2011
- The submodule profile is 0</PreCondition>
					<Action>- Iterate over all offline defined modules/channels and if the PreCondition matches the following operations are done:
- Get the offline description of object 0x1008(+module specific offset) 'Manufacturer Device Name' and all entries
 Check:
    (Name)
    BitSize
    DataType
    Rx / Tx mappable
    Default Data
    MinData
    Flags       </Action>
					<PostCondition>Error if
- mandatory object / entry is not defined
- an optional object exists and the entries are invalid
- Object / entry description does not match with the specification</PostCondition>
					<ProposalForSolution>- Define the missing objects
- correct object / entry description</ProposalForSolution>
					<References>
						<Reference Specification="ETG.5003.2011"></Reference>
					</References>
					<Mandatory>true</Mandatory>
				</Description>
				<TestStep Name="InitResult">
					<SetVariable Target="strResult">EmptyString</SetVariable>
				</TestStep>
				<TestStep Name="CheckIfOdAvailable">
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Mailbox</Value1>
							<Value2>false</Value2>
							<SkipCase Id="1">DuT does not support mailbox.</SkipCase>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Mailbox.CoE</Value1>
							<Value2>false</Value2>
							<SkipCase Id="2">DuT does not support CoE.</SkipCase>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep>
					<GetObjectDictionary Target="odDeviceObjectdictionary">
						<DictionaryType>Offline</DictionaryType>
					</GetObjectDictionary>
					<SkipOnFailure Id="3">No offline object dictionary defined.</SkipOnFailure>
				</TestStep>
				<TestStep>
					<GetObjectList Count="u32Tmp" Target="odDeviceObjectdictionaryList" SourceDict="odDeviceObjectdictionary"></GetObjectList>
					<Compare>
						<Equal>
							<Value1>u32Tmp</Value1>
							<Value2>0</Value2>
							<SkipCase Id="4">No offline object dictionary defined.</SkipCase>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="InitAtLeastOneProfileMatch">
					<SetVariable Target="bAtLeastOneModuleMatch">false</SetVariable>
				</TestStep>
				<TestStep Name="GetCurrentProfileList">
					<SizeOf UInt32Var="u32Tmp">arrOfflineProfiles</SizeOf>
					<Compare>
						<Equal>
							<Value1>u32Tmp</Value1>
							<Value2>0</Value2>
							<CallTestFunction Name="GetCurrentProfileList">
								<Parameter>"offline"</Parameter>
								<Parameter>"SafeOP"</Parameter>
								<OutParameter>arrOfflineProfiles</OutParameter>
							</CallTestFunction>
						</Equal>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>u32Tmp</Value1>
							<Value2>0</Value2>
							<WriteLine Id="5" Param0="arrOfflineProfiles" Level="Verbose">Use previously created profile list ({0})</WriteLine>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep>
					<SizeOf UInt32Var="u32Tmp">arrOfflineProfiles</SizeOf>
				</TestStep>
				<TestStep>
					<InitArray TargetArray="arrCurrentProfiles" Length="u32Tmp"></InitArray>
				</TestStep>
				<TestStep>
					<CopyArray>
						<SourceArray>arrOfflineProfiles</SourceArray>
						<DestinationArray>arrCurrentProfiles</DestinationArray>
						<Length>u32Tmp</Length>
					</CopyArray>
				</TestStep>
				<TestStep Name="IsProfileSupported">
					<CallTestFunction Name="DeviceAndModuleProfileDefined">
						<Parameter>arrCurrentProfiles</Parameter>
						<Parameter>5003</Parameter>
						<Parameter>2011</Parameter>
						<OutParameter>bAtLeastOneModuleMatch</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>bAtLeastOneModuleMatch</Value1>
							<Value2>false</Value2>
							<GotoStep>END</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="GetObjectIndexInclOffset">
					<SetVariable Target="u16ObjectIndexInclOffset">#x1008</SetVariable>
					<WriteLine Id="6" Param0="u16ObjectIndexInclOffset" Level="Verbose">ObjectIndex '0x{0:X}' (module independent)</WriteLine>
				</TestStep>
				<TestStep Name="LoadDeviceObjectDictionary">
					<Description Id="7" Level="Verbose">Load 'offline' object dictionary for testing.</Description>
					<GetObjectDictionary Target="odDeviceObjectdictionary">
						<DictionaryType>Offline</DictionaryType>
					</GetObjectDictionary>
					<RaiseErrorOnFailure Id="8">VerifyObject : failed to load offline object dictionary.</RaiseErrorOnFailure>
				</TestStep>
				<TestStep Name="CallCheckObjectDescription">
					<Description Id="9" Param0="u16ObjectIndexInclOffset" Level="Output">Verify the object description 0x{0:X4} 'Manufacturer Device Name'.</Description>
					<CallTestFunction Name="CheckObjectDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"offline"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>"Manufacturer Device Name"</Parameter>
						<Parameter>null</Parameter>
						<Parameter>7</Parameter>
						<Parameter>-1</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<GotoStep>END</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CallSi0CheckEntryDescription">
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"offline"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>0</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>null</Parameter>
						<Parameter>9</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>null</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>i32CurrentBitOffset</Parameter>
						<Parameter>true</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="END">
					<Compare>
						<NotEqual>
							<Value1>bAtLeastOneModuleMatch</Value1>
							<Value2>true</Value2>
							<SkipCase Id="10">SKIP TEST(no module/channel supports the current profile)</SkipCase>
						</NotEqual>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bDEBUG</Value1>
							<Value2>true</Value2>
							<WriteLine Id="11" Param0="strResult" Level="Verbose">DEBUG | Result : '{0}'.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>strResult</Value1>
							<Value2>EmptyString</Value2>
							<ReturnSuccess Id="12">Test succeed</ReturnSuccess>
						</Equal>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>strResult</Value1>
							<Value2>EmptyString</Value2>
							<RaiseError Id="13"></RaiseError>
						</NotEqual>
					</Compare>
				</TestStep>
			</TestCase>
			<TestCase Name="online | 0x1008 (Manufacturer Device Name)" CaseId="4">
				<Description>
					<PreCondition>- The device profile is 5003
- The module profile is 2011
- The submodule profile is 0</PreCondition>
					<Action>- Iterate over all online defined modules/channels and if the PreCondition matches the following operations are done:
- Get the online description of object 0x1008(+module specific offset) 'Manufacturer Device Name' and all entries
 Check:
    (Name)
    BitSize
    DataType
    Rx / Tx mappable
    Default Data
    MinData
    Flags       </Action>
					<PostCondition>Error if
- mandatory object / entry is not defined
- an optional object exists and the entries are invalid
- Object / entry description does not match with the specification</PostCondition>
					<ProposalForSolution>- Define the missing objects
- correct object / entry description</ProposalForSolution>
					<References>
						<Reference Specification="ETG.5003.2011"></Reference>
					</References>
					<Mandatory>true</Mandatory>
				</Description>
				<TestStep Name="InitResult">
					<SetVariable Target="strResult">EmptyString</SetVariable>
				</TestStep>
				<TestStep Name="CheckIfOdAvailable">
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Mailbox</Value1>
							<Value2>false</Value2>
							<SkipCase Id="1">DuT does not support mailbox.</SkipCase>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Mailbox.CoE</Value1>
							<Value2>false</Value2>
							<SkipCase Id="2">DuT does not support CoE.</SkipCase>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Mailbox.CoE.SdoInfo</Value1>
							<Value2>false</Value2>
							<SkipCase Id="3">DuT does not support SDO Info.</SkipCase>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="InitAtLeastOneProfileMatch">
					<SetVariable Target="bAtLeastOneModuleMatch">false</SetVariable>
				</TestStep>
				<TestStep Name="GetCurrentProfileList">
					<SizeOf UInt32Var="u32Tmp">arrOnlineProfiles</SizeOf>
					<Compare>
						<Equal>
							<Value1>u32Tmp</Value1>
							<Value2>0</Value2>
							<CallTestFunction Name="GetCurrentProfileList">
								<Parameter>"online"</Parameter>
								<Parameter>"SafeOP"</Parameter>
								<OutParameter>arrOnlineProfiles</OutParameter>
							</CallTestFunction>
						</Equal>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>u32Tmp</Value1>
							<Value2>0</Value2>
							<WriteLine Id="4" Param0="arrOnlineProfiles" Level="Verbose">Use previously created profile list ({0})</WriteLine>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep>
					<SizeOf UInt32Var="u32Tmp">arrOnlineProfiles</SizeOf>
				</TestStep>
				<TestStep>
					<InitArray TargetArray="arrCurrentProfiles" Length="u32Tmp"></InitArray>
				</TestStep>
				<TestStep>
					<CopyArray>
						<SourceArray>arrOnlineProfiles</SourceArray>
						<DestinationArray>arrCurrentProfiles</DestinationArray>
						<Length>u32Tmp</Length>
					</CopyArray>
				</TestStep>
				<TestStep Name="IsProfileSupported">
					<CallTestFunction Name="DeviceAndModuleProfileDefined">
						<Parameter>arrCurrentProfiles</Parameter>
						<Parameter>5003</Parameter>
						<Parameter>2011</Parameter>
						<OutParameter>bAtLeastOneModuleMatch</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>bAtLeastOneModuleMatch</Value1>
							<Value2>false</Value2>
							<GotoStep>END</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="GetObjectIndexInclOffset">
					<SetVariable Target="u16ObjectIndexInclOffset">#x1008</SetVariable>
					<WriteLine Id="5" Param0="u16ObjectIndexInclOffset" Level="Verbose">ObjectIndex '0x{0:X}' (module independent)</WriteLine>
				</TestStep>
				<TestStep Name="LoadDeviceObjectDictionary">
					<Description Id="6" Level="Verbose">Load 'online' object dictionary for testing.</Description>
					<GetObjectDictionary Target="odDeviceObjectdictionary">
						<DictionaryType>Online</DictionaryType>
					</GetObjectDictionary>
					<RaiseErrorOnFailure Id="7">VerifyObject : failed to load online object dictionary.</RaiseErrorOnFailure>
				</TestStep>
				<TestStep Name="CallCheckObjectDescription">
					<Description Id="8" Param0="u16ObjectIndexInclOffset" Level="Output">Verify the object description 0x{0:X4} 'Manufacturer Device Name'.</Description>
					<CallTestFunction Name="CheckObjectDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"online"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>"Manufacturer Device Name"</Parameter>
						<Parameter>null</Parameter>
						<Parameter>7</Parameter>
						<Parameter>-1</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<GotoStep>END</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CallSi0CheckEntryDescription">
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"online"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>0</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>null</Parameter>
						<Parameter>9</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>null</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>i32CurrentBitOffset</Parameter>
						<Parameter>true</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="END">
					<Compare>
						<NotEqual>
							<Value1>bAtLeastOneModuleMatch</Value1>
							<Value2>true</Value2>
							<SkipCase Id="9">SKIP TEST(no module/channel supports the current profile)</SkipCase>
						</NotEqual>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bDEBUG</Value1>
							<Value2>true</Value2>
							<WriteLine Id="10" Param0="strResult" Level="Verbose">DEBUG | Result : '{0}'.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>strResult</Value1>
							<Value2>EmptyString</Value2>
							<ReturnSuccess Id="11">Test succeed</ReturnSuccess>
						</Equal>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>strResult</Value1>
							<Value2>EmptyString</Value2>
							<RaiseError Id="12"></RaiseError>
						</NotEqual>
					</Compare>
				</TestStep>
			</TestCase>
			<TestCase Name="offline | 0x1009 (Manufacturer Hardware Version)" CaseId="5">
				<Description>
					<PreCondition>- The device profile is 5003
- The module profile is 2011
- The submodule profile is 0</PreCondition>
					<Action>- Iterate over all offline defined modules/channels and if the PreCondition matches the following operations are done:
- Get the offline description of object 0x1009(+module specific offset) 'Manufacturer Hardware Version' and all entries
 Check:
    (Name)
    BitSize
    DataType
    Rx / Tx mappable
    Default Data
    MinData
    Flags       </Action>
					<PostCondition>Error if
- mandatory object / entry is not defined
- an optional object exists and the entries are invalid
- Object / entry description does not match with the specification</PostCondition>
					<ProposalForSolution>- Define the missing objects
- correct object / entry description</ProposalForSolution>
					<References>
						<Reference Specification="ETG.5003.2011"></Reference>
					</References>
					<Mandatory>true</Mandatory>
				</Description>
				<TestStep Name="InitResult">
					<SetVariable Target="strResult">EmptyString</SetVariable>
				</TestStep>
				<TestStep Name="CheckIfOdAvailable">
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Mailbox</Value1>
							<Value2>false</Value2>
							<SkipCase Id="1">DuT does not support mailbox.</SkipCase>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Mailbox.CoE</Value1>
							<Value2>false</Value2>
							<SkipCase Id="2">DuT does not support CoE.</SkipCase>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep>
					<GetObjectDictionary Target="odDeviceObjectdictionary">
						<DictionaryType>Offline</DictionaryType>
					</GetObjectDictionary>
					<SkipOnFailure Id="3">No offline object dictionary defined.</SkipOnFailure>
				</TestStep>
				<TestStep>
					<GetObjectList Count="u32Tmp" Target="odDeviceObjectdictionaryList" SourceDict="odDeviceObjectdictionary"></GetObjectList>
					<Compare>
						<Equal>
							<Value1>u32Tmp</Value1>
							<Value2>0</Value2>
							<SkipCase Id="4">No offline object dictionary defined.</SkipCase>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="InitAtLeastOneProfileMatch">
					<SetVariable Target="bAtLeastOneModuleMatch">false</SetVariable>
				</TestStep>
				<TestStep Name="GetCurrentProfileList">
					<SizeOf UInt32Var="u32Tmp">arrOfflineProfiles</SizeOf>
					<Compare>
						<Equal>
							<Value1>u32Tmp</Value1>
							<Value2>0</Value2>
							<CallTestFunction Name="GetCurrentProfileList">
								<Parameter>"offline"</Parameter>
								<Parameter>"SafeOP"</Parameter>
								<OutParameter>arrOfflineProfiles</OutParameter>
							</CallTestFunction>
						</Equal>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>u32Tmp</Value1>
							<Value2>0</Value2>
							<WriteLine Id="5" Param0="arrOfflineProfiles" Level="Verbose">Use previously created profile list ({0})</WriteLine>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep>
					<SizeOf UInt32Var="u32Tmp">arrOfflineProfiles</SizeOf>
				</TestStep>
				<TestStep>
					<InitArray TargetArray="arrCurrentProfiles" Length="u32Tmp"></InitArray>
				</TestStep>
				<TestStep>
					<CopyArray>
						<SourceArray>arrOfflineProfiles</SourceArray>
						<DestinationArray>arrCurrentProfiles</DestinationArray>
						<Length>u32Tmp</Length>
					</CopyArray>
				</TestStep>
				<TestStep Name="IsProfileSupported">
					<CallTestFunction Name="DeviceAndModuleProfileDefined">
						<Parameter>arrCurrentProfiles</Parameter>
						<Parameter>5003</Parameter>
						<Parameter>2011</Parameter>
						<OutParameter>bAtLeastOneModuleMatch</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>bAtLeastOneModuleMatch</Value1>
							<Value2>false</Value2>
							<GotoStep>END</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="GetObjectIndexInclOffset">
					<SetVariable Target="u16ObjectIndexInclOffset">#x1009</SetVariable>
					<WriteLine Id="6" Param0="u16ObjectIndexInclOffset" Level="Verbose">ObjectIndex '0x{0:X}' (module independent)</WriteLine>
				</TestStep>
				<TestStep Name="LoadDeviceObjectDictionary">
					<Description Id="7" Level="Verbose">Load 'offline' object dictionary for testing.</Description>
					<GetObjectDictionary Target="odDeviceObjectdictionary">
						<DictionaryType>Offline</DictionaryType>
					</GetObjectDictionary>
					<RaiseErrorOnFailure Id="8">VerifyObject : failed to load offline object dictionary.</RaiseErrorOnFailure>
				</TestStep>
				<TestStep Name="CallCheckObjectDescription">
					<Description Id="9" Param0="u16ObjectIndexInclOffset" Level="Output">Verify the object description 0x{0:X4} 'Manufacturer Hardware Version'.</Description>
					<CallTestFunction Name="CheckObjectDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"offline"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>"Manufacturer Hardware Version"</Parameter>
						<Parameter>null</Parameter>
						<Parameter>7</Parameter>
						<Parameter>-1</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<GotoStep>END</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CallSi0CheckEntryDescription">
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"offline"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>0</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>null</Parameter>
						<Parameter>9</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>null</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>i32CurrentBitOffset</Parameter>
						<Parameter>true</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="END">
					<Compare>
						<NotEqual>
							<Value1>bAtLeastOneModuleMatch</Value1>
							<Value2>true</Value2>
							<SkipCase Id="10">SKIP TEST(no module/channel supports the current profile)</SkipCase>
						</NotEqual>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bDEBUG</Value1>
							<Value2>true</Value2>
							<WriteLine Id="11" Param0="strResult" Level="Verbose">DEBUG | Result : '{0}'.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>strResult</Value1>
							<Value2>EmptyString</Value2>
							<ReturnSuccess Id="12">Test succeed</ReturnSuccess>
						</Equal>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>strResult</Value1>
							<Value2>EmptyString</Value2>
							<RaiseError Id="13"></RaiseError>
						</NotEqual>
					</Compare>
				</TestStep>
			</TestCase>
			<TestCase Name="online | 0x1009 (Manufacturer Hardware Version)" CaseId="6">
				<Description>
					<PreCondition>- The device profile is 5003
- The module profile is 2011
- The submodule profile is 0</PreCondition>
					<Action>- Iterate over all online defined modules/channels and if the PreCondition matches the following operations are done:
- Get the online description of object 0x1009(+module specific offset) 'Manufacturer Hardware Version' and all entries
 Check:
    (Name)
    BitSize
    DataType
    Rx / Tx mappable
    Default Data
    MinData
    Flags       </Action>
					<PostCondition>Error if
- mandatory object / entry is not defined
- an optional object exists and the entries are invalid
- Object / entry description does not match with the specification</PostCondition>
					<ProposalForSolution>- Define the missing objects
- correct object / entry description</ProposalForSolution>
					<References>
						<Reference Specification="ETG.5003.2011"></Reference>
					</References>
					<Mandatory>true</Mandatory>
				</Description>
				<TestStep Name="InitResult">
					<SetVariable Target="strResult">EmptyString</SetVariable>
				</TestStep>
				<TestStep Name="CheckIfOdAvailable">
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Mailbox</Value1>
							<Value2>false</Value2>
							<SkipCase Id="1">DuT does not support mailbox.</SkipCase>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Mailbox.CoE</Value1>
							<Value2>false</Value2>
							<SkipCase Id="2">DuT does not support CoE.</SkipCase>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Mailbox.CoE.SdoInfo</Value1>
							<Value2>false</Value2>
							<SkipCase Id="3">DuT does not support SDO Info.</SkipCase>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="InitAtLeastOneProfileMatch">
					<SetVariable Target="bAtLeastOneModuleMatch">false</SetVariable>
				</TestStep>
				<TestStep Name="GetCurrentProfileList">
					<SizeOf UInt32Var="u32Tmp">arrOnlineProfiles</SizeOf>
					<Compare>
						<Equal>
							<Value1>u32Tmp</Value1>
							<Value2>0</Value2>
							<CallTestFunction Name="GetCurrentProfileList">
								<Parameter>"online"</Parameter>
								<Parameter>"SafeOP"</Parameter>
								<OutParameter>arrOnlineProfiles</OutParameter>
							</CallTestFunction>
						</Equal>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>u32Tmp</Value1>
							<Value2>0</Value2>
							<WriteLine Id="4" Param0="arrOnlineProfiles" Level="Verbose">Use previously created profile list ({0})</WriteLine>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep>
					<SizeOf UInt32Var="u32Tmp">arrOnlineProfiles</SizeOf>
				</TestStep>
				<TestStep>
					<InitArray TargetArray="arrCurrentProfiles" Length="u32Tmp"></InitArray>
				</TestStep>
				<TestStep>
					<CopyArray>
						<SourceArray>arrOnlineProfiles</SourceArray>
						<DestinationArray>arrCurrentProfiles</DestinationArray>
						<Length>u32Tmp</Length>
					</CopyArray>
				</TestStep>
				<TestStep Name="IsProfileSupported">
					<CallTestFunction Name="DeviceAndModuleProfileDefined">
						<Parameter>arrCurrentProfiles</Parameter>
						<Parameter>5003</Parameter>
						<Parameter>2011</Parameter>
						<OutParameter>bAtLeastOneModuleMatch</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>bAtLeastOneModuleMatch</Value1>
							<Value2>false</Value2>
							<GotoStep>END</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="GetObjectIndexInclOffset">
					<SetVariable Target="u16ObjectIndexInclOffset">#x1009</SetVariable>
					<WriteLine Id="5" Param0="u16ObjectIndexInclOffset" Level="Verbose">ObjectIndex '0x{0:X}' (module independent)</WriteLine>
				</TestStep>
				<TestStep Name="LoadDeviceObjectDictionary">
					<Description Id="6" Level="Verbose">Load 'online' object dictionary for testing.</Description>
					<GetObjectDictionary Target="odDeviceObjectdictionary">
						<DictionaryType>Online</DictionaryType>
					</GetObjectDictionary>
					<RaiseErrorOnFailure Id="7">VerifyObject : failed to load online object dictionary.</RaiseErrorOnFailure>
				</TestStep>
				<TestStep Name="CallCheckObjectDescription">
					<Description Id="8" Param0="u16ObjectIndexInclOffset" Level="Output">Verify the object description 0x{0:X4} 'Manufacturer Hardware Version'.</Description>
					<CallTestFunction Name="CheckObjectDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"online"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>"Manufacturer Hardware Version"</Parameter>
						<Parameter>null</Parameter>
						<Parameter>7</Parameter>
						<Parameter>-1</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<GotoStep>END</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CallSi0CheckEntryDescription">
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"online"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>0</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>null</Parameter>
						<Parameter>9</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>null</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>i32CurrentBitOffset</Parameter>
						<Parameter>true</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="END">
					<Compare>
						<NotEqual>
							<Value1>bAtLeastOneModuleMatch</Value1>
							<Value2>true</Value2>
							<SkipCase Id="9">SKIP TEST(no module/channel supports the current profile)</SkipCase>
						</NotEqual>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bDEBUG</Value1>
							<Value2>true</Value2>
							<WriteLine Id="10" Param0="strResult" Level="Verbose">DEBUG | Result : '{0}'.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>strResult</Value1>
							<Value2>EmptyString</Value2>
							<ReturnSuccess Id="11">Test succeed</ReturnSuccess>
						</Equal>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>strResult</Value1>
							<Value2>EmptyString</Value2>
							<RaiseError Id="12"></RaiseError>
						</NotEqual>
					</Compare>
				</TestStep>
			</TestCase>
			<TestCase Name="offline | 0x100A (Manufacturer Software Version)" CaseId="7">
				<Description>
					<PreCondition>- The device profile is 5003
- The module profile is 2011
- The submodule profile is 0</PreCondition>
					<Action>- Iterate over all offline defined modules/channels and if the PreCondition matches the following operations are done:
- Get the offline description of object 0x100A(+module specific offset) 'Manufacturer Software Version' and all entries
 Check:
    (Name)
    BitSize
    DataType
    Rx / Tx mappable
    Default Data
    MinData
    Flags       </Action>
					<PostCondition>Error if
- mandatory object / entry is not defined
- an optional object exists and the entries are invalid
- Object / entry description does not match with the specification</PostCondition>
					<ProposalForSolution>- Define the missing objects
- correct object / entry description</ProposalForSolution>
					<References>
						<Reference Specification="ETG.5003.2011"></Reference>
					</References>
					<Mandatory>true</Mandatory>
				</Description>
				<TestStep Name="InitResult">
					<SetVariable Target="strResult">EmptyString</SetVariable>
				</TestStep>
				<TestStep Name="CheckIfOdAvailable">
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Mailbox</Value1>
							<Value2>false</Value2>
							<SkipCase Id="1">DuT does not support mailbox.</SkipCase>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Mailbox.CoE</Value1>
							<Value2>false</Value2>
							<SkipCase Id="2">DuT does not support CoE.</SkipCase>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep>
					<GetObjectDictionary Target="odDeviceObjectdictionary">
						<DictionaryType>Offline</DictionaryType>
					</GetObjectDictionary>
					<SkipOnFailure Id="3">No offline object dictionary defined.</SkipOnFailure>
				</TestStep>
				<TestStep>
					<GetObjectList Count="u32Tmp" Target="odDeviceObjectdictionaryList" SourceDict="odDeviceObjectdictionary"></GetObjectList>
					<Compare>
						<Equal>
							<Value1>u32Tmp</Value1>
							<Value2>0</Value2>
							<SkipCase Id="4">No offline object dictionary defined.</SkipCase>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="InitAtLeastOneProfileMatch">
					<SetVariable Target="bAtLeastOneModuleMatch">false</SetVariable>
				</TestStep>
				<TestStep Name="GetCurrentProfileList">
					<SizeOf UInt32Var="u32Tmp">arrOfflineProfiles</SizeOf>
					<Compare>
						<Equal>
							<Value1>u32Tmp</Value1>
							<Value2>0</Value2>
							<CallTestFunction Name="GetCurrentProfileList">
								<Parameter>"offline"</Parameter>
								<Parameter>"SafeOP"</Parameter>
								<OutParameter>arrOfflineProfiles</OutParameter>
							</CallTestFunction>
						</Equal>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>u32Tmp</Value1>
							<Value2>0</Value2>
							<WriteLine Id="5" Param0="arrOfflineProfiles" Level="Verbose">Use previously created profile list ({0})</WriteLine>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep>
					<SizeOf UInt32Var="u32Tmp">arrOfflineProfiles</SizeOf>
				</TestStep>
				<TestStep>
					<InitArray TargetArray="arrCurrentProfiles" Length="u32Tmp"></InitArray>
				</TestStep>
				<TestStep>
					<CopyArray>
						<SourceArray>arrOfflineProfiles</SourceArray>
						<DestinationArray>arrCurrentProfiles</DestinationArray>
						<Length>u32Tmp</Length>
					</CopyArray>
				</TestStep>
				<TestStep Name="IsProfileSupported">
					<CallTestFunction Name="DeviceAndModuleProfileDefined">
						<Parameter>arrCurrentProfiles</Parameter>
						<Parameter>5003</Parameter>
						<Parameter>2011</Parameter>
						<OutParameter>bAtLeastOneModuleMatch</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>bAtLeastOneModuleMatch</Value1>
							<Value2>false</Value2>
							<GotoStep>END</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="GetObjectIndexInclOffset">
					<SetVariable Target="u16ObjectIndexInclOffset">#x100A</SetVariable>
					<WriteLine Id="6" Param0="u16ObjectIndexInclOffset" Level="Verbose">ObjectIndex '0x{0:X}' (module independent)</WriteLine>
				</TestStep>
				<TestStep Name="LoadDeviceObjectDictionary">
					<Description Id="7" Level="Verbose">Load 'offline' object dictionary for testing.</Description>
					<GetObjectDictionary Target="odDeviceObjectdictionary">
						<DictionaryType>Offline</DictionaryType>
					</GetObjectDictionary>
					<RaiseErrorOnFailure Id="8">VerifyObject : failed to load offline object dictionary.</RaiseErrorOnFailure>
				</TestStep>
				<TestStep Name="CallCheckObjectDescription">
					<Description Id="9" Param0="u16ObjectIndexInclOffset" Level="Output">Verify the object description 0x{0:X4} 'Manufacturer Software Version'.</Description>
					<CallTestFunction Name="CheckObjectDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"offline"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>"Manufacturer Software Version"</Parameter>
						<Parameter>null</Parameter>
						<Parameter>7</Parameter>
						<Parameter>-1</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<GotoStep>END</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CallSi0CheckEntryDescription">
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"offline"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>0</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>null</Parameter>
						<Parameter>9</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>null</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>i32CurrentBitOffset</Parameter>
						<Parameter>true</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="END">
					<Compare>
						<NotEqual>
							<Value1>bAtLeastOneModuleMatch</Value1>
							<Value2>true</Value2>
							<SkipCase Id="10">SKIP TEST(no module/channel supports the current profile)</SkipCase>
						</NotEqual>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bDEBUG</Value1>
							<Value2>true</Value2>
							<WriteLine Id="11" Param0="strResult" Level="Verbose">DEBUG | Result : '{0}'.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>strResult</Value1>
							<Value2>EmptyString</Value2>
							<ReturnSuccess Id="12">Test succeed</ReturnSuccess>
						</Equal>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>strResult</Value1>
							<Value2>EmptyString</Value2>
							<RaiseError Id="13"></RaiseError>
						</NotEqual>
					</Compare>
				</TestStep>
			</TestCase>
			<TestCase Name="online | 0x100A (Manufacturer Software Version)" CaseId="8">
				<Description>
					<PreCondition>- The device profile is 5003
- The module profile is 2011
- The submodule profile is 0</PreCondition>
					<Action>- Iterate over all online defined modules/channels and if the PreCondition matches the following operations are done:
- Get the online description of object 0x100A(+module specific offset) 'Manufacturer Software Version' and all entries
 Check:
    (Name)
    BitSize
    DataType
    Rx / Tx mappable
    Default Data
    MinData
    Flags       </Action>
					<PostCondition>Error if
- mandatory object / entry is not defined
- an optional object exists and the entries are invalid
- Object / entry description does not match with the specification</PostCondition>
					<ProposalForSolution>- Define the missing objects
- correct object / entry description</ProposalForSolution>
					<References>
						<Reference Specification="ETG.5003.2011"></Reference>
					</References>
					<Mandatory>true</Mandatory>
				</Description>
				<TestStep Name="InitResult">
					<SetVariable Target="strResult">EmptyString</SetVariable>
				</TestStep>
				<TestStep Name="CheckIfOdAvailable">
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Mailbox</Value1>
							<Value2>false</Value2>
							<SkipCase Id="1">DuT does not support mailbox.</SkipCase>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Mailbox.CoE</Value1>
							<Value2>false</Value2>
							<SkipCase Id="2">DuT does not support CoE.</SkipCase>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Mailbox.CoE.SdoInfo</Value1>
							<Value2>false</Value2>
							<SkipCase Id="3">DuT does not support SDO Info.</SkipCase>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="InitAtLeastOneProfileMatch">
					<SetVariable Target="bAtLeastOneModuleMatch">false</SetVariable>
				</TestStep>
				<TestStep Name="GetCurrentProfileList">
					<SizeOf UInt32Var="u32Tmp">arrOnlineProfiles</SizeOf>
					<Compare>
						<Equal>
							<Value1>u32Tmp</Value1>
							<Value2>0</Value2>
							<CallTestFunction Name="GetCurrentProfileList">
								<Parameter>"online"</Parameter>
								<Parameter>"SafeOP"</Parameter>
								<OutParameter>arrOnlineProfiles</OutParameter>
							</CallTestFunction>
						</Equal>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>u32Tmp</Value1>
							<Value2>0</Value2>
							<WriteLine Id="4" Param0="arrOnlineProfiles" Level="Verbose">Use previously created profile list ({0})</WriteLine>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep>
					<SizeOf UInt32Var="u32Tmp">arrOnlineProfiles</SizeOf>
				</TestStep>
				<TestStep>
					<InitArray TargetArray="arrCurrentProfiles" Length="u32Tmp"></InitArray>
				</TestStep>
				<TestStep>
					<CopyArray>
						<SourceArray>arrOnlineProfiles</SourceArray>
						<DestinationArray>arrCurrentProfiles</DestinationArray>
						<Length>u32Tmp</Length>
					</CopyArray>
				</TestStep>
				<TestStep Name="IsProfileSupported">
					<CallTestFunction Name="DeviceAndModuleProfileDefined">
						<Parameter>arrCurrentProfiles</Parameter>
						<Parameter>5003</Parameter>
						<Parameter>2011</Parameter>
						<OutParameter>bAtLeastOneModuleMatch</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>bAtLeastOneModuleMatch</Value1>
							<Value2>false</Value2>
							<GotoStep>END</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="GetObjectIndexInclOffset">
					<SetVariable Target="u16ObjectIndexInclOffset">#x100A</SetVariable>
					<WriteLine Id="5" Param0="u16ObjectIndexInclOffset" Level="Verbose">ObjectIndex '0x{0:X}' (module independent)</WriteLine>
				</TestStep>
				<TestStep Name="LoadDeviceObjectDictionary">
					<Description Id="6" Level="Verbose">Load 'online' object dictionary for testing.</Description>
					<GetObjectDictionary Target="odDeviceObjectdictionary">
						<DictionaryType>Online</DictionaryType>
					</GetObjectDictionary>
					<RaiseErrorOnFailure Id="7">VerifyObject : failed to load online object dictionary.</RaiseErrorOnFailure>
				</TestStep>
				<TestStep Name="CallCheckObjectDescription">
					<Description Id="8" Param0="u16ObjectIndexInclOffset" Level="Output">Verify the object description 0x{0:X4} 'Manufacturer Software Version'.</Description>
					<CallTestFunction Name="CheckObjectDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"online"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>"Manufacturer Software Version"</Parameter>
						<Parameter>null</Parameter>
						<Parameter>7</Parameter>
						<Parameter>-1</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<GotoStep>END</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CallSi0CheckEntryDescription">
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"online"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>0</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>null</Parameter>
						<Parameter>9</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>null</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>i32CurrentBitOffset</Parameter>
						<Parameter>true</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="END">
					<Compare>
						<NotEqual>
							<Value1>bAtLeastOneModuleMatch</Value1>
							<Value2>true</Value2>
							<SkipCase Id="9">SKIP TEST(no module/channel supports the current profile)</SkipCase>
						</NotEqual>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bDEBUG</Value1>
							<Value2>true</Value2>
							<WriteLine Id="10" Param0="strResult" Level="Verbose">DEBUG | Result : '{0}'.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>strResult</Value1>
							<Value2>EmptyString</Value2>
							<ReturnSuccess Id="11">Test succeed</ReturnSuccess>
						</Equal>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>strResult</Value1>
							<Value2>EmptyString</Value2>
							<RaiseError Id="12"></RaiseError>
						</NotEqual>
					</Compare>
				</TestStep>
			</TestCase>
			<TestCase Name="offline | 0x100B (Manufacturer Bootloader Version)" CaseId="9">
				<Description>
					<PreCondition>- The device profile is 5003
- The module profile is 2011
- The submodule profile is 0</PreCondition>
					<Action>- Iterate over all offline defined modules/channels and if the PreCondition matches the following operations are done:
- Get the offline description of object 0x100B(+module specific offset) 'Manufacturer Bootloader Version' and all entries
 Check:
    (Name)
    BitSize
    DataType
    Rx / Tx mappable
    Default Data
    MinData
    Flags       </Action>
					<PostCondition>Error if
- mandatory object / entry is not defined
- an optional object exists and the entries are invalid
- Object / entry description does not match with the specification</PostCondition>
					<ProposalForSolution>- Define the missing objects
- correct object / entry description</ProposalForSolution>
					<References>
						<Reference Specification="ETG.5003.2011"></Reference>
					</References>
					<Mandatory>true</Mandatory>
				</Description>
				<TestStep Name="InitResult">
					<SetVariable Target="strResult">EmptyString</SetVariable>
				</TestStep>
				<TestStep Name="CheckIfOdAvailable">
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Mailbox</Value1>
							<Value2>false</Value2>
							<SkipCase Id="1">DuT does not support mailbox.</SkipCase>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Mailbox.CoE</Value1>
							<Value2>false</Value2>
							<SkipCase Id="2">DuT does not support CoE.</SkipCase>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep>
					<GetObjectDictionary Target="odDeviceObjectdictionary">
						<DictionaryType>Offline</DictionaryType>
					</GetObjectDictionary>
					<SkipOnFailure Id="3">No offline object dictionary defined.</SkipOnFailure>
				</TestStep>
				<TestStep>
					<GetObjectList Count="u32Tmp" Target="odDeviceObjectdictionaryList" SourceDict="odDeviceObjectdictionary"></GetObjectList>
					<Compare>
						<Equal>
							<Value1>u32Tmp</Value1>
							<Value2>0</Value2>
							<SkipCase Id="4">No offline object dictionary defined.</SkipCase>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="InitAtLeastOneProfileMatch">
					<SetVariable Target="bAtLeastOneModuleMatch">false</SetVariable>
				</TestStep>
				<TestStep Name="GetCurrentProfileList">
					<SizeOf UInt32Var="u32Tmp">arrOfflineProfiles</SizeOf>
					<Compare>
						<Equal>
							<Value1>u32Tmp</Value1>
							<Value2>0</Value2>
							<CallTestFunction Name="GetCurrentProfileList">
								<Parameter>"offline"</Parameter>
								<Parameter>"SafeOP"</Parameter>
								<OutParameter>arrOfflineProfiles</OutParameter>
							</CallTestFunction>
						</Equal>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>u32Tmp</Value1>
							<Value2>0</Value2>
							<WriteLine Id="5" Param0="arrOfflineProfiles" Level="Verbose">Use previously created profile list ({0})</WriteLine>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep>
					<SizeOf UInt32Var="u32Tmp">arrOfflineProfiles</SizeOf>
				</TestStep>
				<TestStep>
					<InitArray TargetArray="arrCurrentProfiles" Length="u32Tmp"></InitArray>
				</TestStep>
				<TestStep>
					<CopyArray>
						<SourceArray>arrOfflineProfiles</SourceArray>
						<DestinationArray>arrCurrentProfiles</DestinationArray>
						<Length>u32Tmp</Length>
					</CopyArray>
				</TestStep>
				<TestStep Name="IsProfileSupported">
					<CallTestFunction Name="DeviceAndModuleProfileDefined">
						<Parameter>arrCurrentProfiles</Parameter>
						<Parameter>5003</Parameter>
						<Parameter>2011</Parameter>
						<OutParameter>bAtLeastOneModuleMatch</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>bAtLeastOneModuleMatch</Value1>
							<Value2>false</Value2>
							<GotoStep>END</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="GetObjectIndexInclOffset">
					<SetVariable Target="u16ObjectIndexInclOffset">#x100B</SetVariable>
					<WriteLine Id="6" Param0="u16ObjectIndexInclOffset" Level="Verbose">ObjectIndex '0x{0:X}' (module independent)</WriteLine>
				</TestStep>
				<TestStep Name="LoadDeviceObjectDictionary">
					<Description Id="7" Level="Verbose">Load 'offline' object dictionary for testing.</Description>
					<GetObjectDictionary Target="odDeviceObjectdictionary">
						<DictionaryType>Offline</DictionaryType>
					</GetObjectDictionary>
					<RaiseErrorOnFailure Id="8">VerifyObject : failed to load offline object dictionary.</RaiseErrorOnFailure>
				</TestStep>
				<TestStep Name="CallCheckObjectDescription">
					<Description Id="9" Param0="u16ObjectIndexInclOffset" Level="Output">Verify the object description 0x{0:X4} 'Manufacturer Bootloader Version'.</Description>
					<CallTestFunction Name="CheckObjectDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"offline"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>"Manufacturer Bootloader Version"</Parameter>
						<Parameter>null</Parameter>
						<Parameter>7</Parameter>
						<Parameter>-1</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<GotoStep>END</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CallSi0CheckEntryDescription">
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"offline"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>0</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>null</Parameter>
						<Parameter>9</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>null</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>i32CurrentBitOffset</Parameter>
						<Parameter>true</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="END">
					<Compare>
						<NotEqual>
							<Value1>bAtLeastOneModuleMatch</Value1>
							<Value2>true</Value2>
							<SkipCase Id="10">SKIP TEST(no module/channel supports the current profile)</SkipCase>
						</NotEqual>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bDEBUG</Value1>
							<Value2>true</Value2>
							<WriteLine Id="11" Param0="strResult" Level="Verbose">DEBUG | Result : '{0}'.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>strResult</Value1>
							<Value2>EmptyString</Value2>
							<ReturnSuccess Id="12">Test succeed</ReturnSuccess>
						</Equal>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>strResult</Value1>
							<Value2>EmptyString</Value2>
							<RaiseError Id="13"></RaiseError>
						</NotEqual>
					</Compare>
				</TestStep>
			</TestCase>
			<TestCase Name="online | 0x100B (Manufacturer Bootloader Version)" CaseId="10">
				<Description>
					<PreCondition>- The device profile is 5003
- The module profile is 2011
- The submodule profile is 0</PreCondition>
					<Action>- Iterate over all online defined modules/channels and if the PreCondition matches the following operations are done:
- Get the online description of object 0x100B(+module specific offset) 'Manufacturer Bootloader Version' and all entries
 Check:
    (Name)
    BitSize
    DataType
    Rx / Tx mappable
    Default Data
    MinData
    Flags       </Action>
					<PostCondition>Error if
- mandatory object / entry is not defined
- an optional object exists and the entries are invalid
- Object / entry description does not match with the specification</PostCondition>
					<ProposalForSolution>- Define the missing objects
- correct object / entry description</ProposalForSolution>
					<References>
						<Reference Specification="ETG.5003.2011"></Reference>
					</References>
					<Mandatory>true</Mandatory>
				</Description>
				<TestStep Name="InitResult">
					<SetVariable Target="strResult">EmptyString</SetVariable>
				</TestStep>
				<TestStep Name="CheckIfOdAvailable">
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Mailbox</Value1>
							<Value2>false</Value2>
							<SkipCase Id="1">DuT does not support mailbox.</SkipCase>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Mailbox.CoE</Value1>
							<Value2>false</Value2>
							<SkipCase Id="2">DuT does not support CoE.</SkipCase>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Mailbox.CoE.SdoInfo</Value1>
							<Value2>false</Value2>
							<SkipCase Id="3">DuT does not support SDO Info.</SkipCase>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="InitAtLeastOneProfileMatch">
					<SetVariable Target="bAtLeastOneModuleMatch">false</SetVariable>
				</TestStep>
				<TestStep Name="GetCurrentProfileList">
					<SizeOf UInt32Var="u32Tmp">arrOnlineProfiles</SizeOf>
					<Compare>
						<Equal>
							<Value1>u32Tmp</Value1>
							<Value2>0</Value2>
							<CallTestFunction Name="GetCurrentProfileList">
								<Parameter>"online"</Parameter>
								<Parameter>"SafeOP"</Parameter>
								<OutParameter>arrOnlineProfiles</OutParameter>
							</CallTestFunction>
						</Equal>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>u32Tmp</Value1>
							<Value2>0</Value2>
							<WriteLine Id="4" Param0="arrOnlineProfiles" Level="Verbose">Use previously created profile list ({0})</WriteLine>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep>
					<SizeOf UInt32Var="u32Tmp">arrOnlineProfiles</SizeOf>
				</TestStep>
				<TestStep>
					<InitArray TargetArray="arrCurrentProfiles" Length="u32Tmp"></InitArray>
				</TestStep>
				<TestStep>
					<CopyArray>
						<SourceArray>arrOnlineProfiles</SourceArray>
						<DestinationArray>arrCurrentProfiles</DestinationArray>
						<Length>u32Tmp</Length>
					</CopyArray>
				</TestStep>
				<TestStep Name="IsProfileSupported">
					<CallTestFunction Name="DeviceAndModuleProfileDefined">
						<Parameter>arrCurrentProfiles</Parameter>
						<Parameter>5003</Parameter>
						<Parameter>2011</Parameter>
						<OutParameter>bAtLeastOneModuleMatch</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>bAtLeastOneModuleMatch</Value1>
							<Value2>false</Value2>
							<GotoStep>END</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="GetObjectIndexInclOffset">
					<SetVariable Target="u16ObjectIndexInclOffset">#x100B</SetVariable>
					<WriteLine Id="5" Param0="u16ObjectIndexInclOffset" Level="Verbose">ObjectIndex '0x{0:X}' (module independent)</WriteLine>
				</TestStep>
				<TestStep Name="LoadDeviceObjectDictionary">
					<Description Id="6" Level="Verbose">Load 'online' object dictionary for testing.</Description>
					<GetObjectDictionary Target="odDeviceObjectdictionary">
						<DictionaryType>Online</DictionaryType>
					</GetObjectDictionary>
					<RaiseErrorOnFailure Id="7">VerifyObject : failed to load online object dictionary.</RaiseErrorOnFailure>
				</TestStep>
				<TestStep Name="CallCheckObjectDescription">
					<Description Id="8" Param0="u16ObjectIndexInclOffset" Level="Output">Verify the object description 0x{0:X4} 'Manufacturer Bootloader Version'.</Description>
					<CallTestFunction Name="CheckObjectDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"online"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>"Manufacturer Bootloader Version"</Parameter>
						<Parameter>null</Parameter>
						<Parameter>7</Parameter>
						<Parameter>-1</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<GotoStep>END</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CallSi0CheckEntryDescription">
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"online"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>0</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>null</Parameter>
						<Parameter>9</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>null</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>i32CurrentBitOffset</Parameter>
						<Parameter>true</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="END">
					<Compare>
						<NotEqual>
							<Value1>bAtLeastOneModuleMatch</Value1>
							<Value2>true</Value2>
							<SkipCase Id="9">SKIP TEST(no module/channel supports the current profile)</SkipCase>
						</NotEqual>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bDEBUG</Value1>
							<Value2>true</Value2>
							<WriteLine Id="10" Param0="strResult" Level="Verbose">DEBUG | Result : '{0}'.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>strResult</Value1>
							<Value2>EmptyString</Value2>
							<ReturnSuccess Id="11">Test succeed</ReturnSuccess>
						</Equal>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>strResult</Value1>
							<Value2>EmptyString</Value2>
							<RaiseError Id="12"></RaiseError>
						</NotEqual>
					</Compare>
				</TestStep>
			</TestCase>
			<TestCase Name="offline | 0x1018 (Identity Object)" CaseId="11">
				<Description>
					<PreCondition>- The device profile is 5003
- The module profile is 2011
- The submodule profile is 0</PreCondition>
					<Action>- Iterate over all offline defined modules/channels and if the PreCondition matches the following operations are done:
- Get the offline description of object 0x1018(+module specific offset) 'Identity Object' and all entries
 Check:
    (Name)
    BitSize
    DataType
    Rx / Tx mappable
    Default Data
    MinData
    Flags       </Action>
					<PostCondition>Error if
- mandatory object / entry is not defined
- an optional object exists and the entries are invalid
- Object / entry description does not match with the specification</PostCondition>
					<ProposalForSolution>- Define the missing objects
- correct object / entry description</ProposalForSolution>
					<References>
						<Reference Specification="ETG.5003.2011"></Reference>
					</References>
					<Mandatory>true</Mandatory>
				</Description>
				<TestStep Name="InitResult">
					<SetVariable Target="strResult">EmptyString</SetVariable>
				</TestStep>
				<TestStep Name="CheckIfOdAvailable">
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Mailbox</Value1>
							<Value2>false</Value2>
							<SkipCase Id="1">DuT does not support mailbox.</SkipCase>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Mailbox.CoE</Value1>
							<Value2>false</Value2>
							<SkipCase Id="2">DuT does not support CoE.</SkipCase>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep>
					<GetObjectDictionary Target="odDeviceObjectdictionary">
						<DictionaryType>Offline</DictionaryType>
					</GetObjectDictionary>
					<SkipOnFailure Id="3">No offline object dictionary defined.</SkipOnFailure>
				</TestStep>
				<TestStep>
					<GetObjectList Count="u32Tmp" Target="odDeviceObjectdictionaryList" SourceDict="odDeviceObjectdictionary"></GetObjectList>
					<Compare>
						<Equal>
							<Value1>u32Tmp</Value1>
							<Value2>0</Value2>
							<SkipCase Id="4">No offline object dictionary defined.</SkipCase>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="InitAtLeastOneProfileMatch">
					<SetVariable Target="bAtLeastOneModuleMatch">false</SetVariable>
				</TestStep>
				<TestStep Name="GetCurrentProfileList">
					<SizeOf UInt32Var="u32Tmp">arrOfflineProfiles</SizeOf>
					<Compare>
						<Equal>
							<Value1>u32Tmp</Value1>
							<Value2>0</Value2>
							<CallTestFunction Name="GetCurrentProfileList">
								<Parameter>"offline"</Parameter>
								<Parameter>"SafeOP"</Parameter>
								<OutParameter>arrOfflineProfiles</OutParameter>
							</CallTestFunction>
						</Equal>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>u32Tmp</Value1>
							<Value2>0</Value2>
							<WriteLine Id="5" Param0="arrOfflineProfiles" Level="Verbose">Use previously created profile list ({0})</WriteLine>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep>
					<SizeOf UInt32Var="u32Tmp">arrOfflineProfiles</SizeOf>
				</TestStep>
				<TestStep>
					<InitArray TargetArray="arrCurrentProfiles" Length="u32Tmp"></InitArray>
				</TestStep>
				<TestStep>
					<CopyArray>
						<SourceArray>arrOfflineProfiles</SourceArray>
						<DestinationArray>arrCurrentProfiles</DestinationArray>
						<Length>u32Tmp</Length>
					</CopyArray>
				</TestStep>
				<TestStep Name="IsProfileSupported">
					<CallTestFunction Name="DeviceAndModuleProfileDefined">
						<Parameter>arrCurrentProfiles</Parameter>
						<Parameter>5003</Parameter>
						<Parameter>2011</Parameter>
						<OutParameter>bAtLeastOneModuleMatch</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>bAtLeastOneModuleMatch</Value1>
							<Value2>false</Value2>
							<GotoStep>END</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="GetObjectIndexInclOffset">
					<SetVariable Target="u16ObjectIndexInclOffset">#x1018</SetVariable>
					<WriteLine Id="6" Param0="u16ObjectIndexInclOffset" Level="Verbose">ObjectIndex '0x{0:X}' (module independent)</WriteLine>
				</TestStep>
				<TestStep Name="LoadDeviceObjectDictionary">
					<Description Id="7" Level="Verbose">Load 'offline' object dictionary for testing.</Description>
					<GetObjectDictionary Target="odDeviceObjectdictionary">
						<DictionaryType>Offline</DictionaryType>
					</GetObjectDictionary>
					<RaiseErrorOnFailure Id="8">VerifyObject : failed to load offline object dictionary.</RaiseErrorOnFailure>
				</TestStep>
				<TestStep Name="CallCheckObjectDescription">
					<Description Id="9" Param0="u16ObjectIndexInclOffset" Level="Output">Verify the object description 0x{0:X4} 'Identity Object'.</Description>
					<CallTestFunction Name="CheckObjectDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"offline"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>"Identity Object"</Parameter>
						<Parameter>null</Parameter>
						<Parameter>9</Parameter>
						<Parameter>-1</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<GotoStep>END</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="InitEntryBittOffset">
					<SetVariable Target="i32CurrentBitOffset">0</SetVariable>
				</TestStep>
				<TestStep Name="StartSi0">
					<Description Id="10" Level="Output">Start validate SubIndex0</Description>
					<WriteLine Id="11" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : Subindex '0x{0:X}.0'</WriteLine>
				</TestStep>
				<TestStep Name="CallSi0CheckEntryDescription">
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"offline"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>0</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>null</Parameter>
						<Parameter>5</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>null</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>null</Parameter>
						<Parameter>null</Parameter>
						<Parameter>null</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>8</Parameter>
						<Parameter>i32CurrentBitOffset</Parameter>
						<Parameter>true</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="EndSi0">
					<SetVariable Target="i32CurrentBitOffset">16</SetVariable>
				</TestStep>
				<TestStep Name="StartSi1">
					<Description Id="12" Level="Output">Start validate SubIndex1</Description>
					<WriteLine Id="13" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : Subindex '0x{0:X}.1'</WriteLine>
				</TestStep>
				<TestStep Name="CallSi1CheckEntryDescription">
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"offline"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>1</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>"Vendor ID"</Parameter>
						<Parameter>7</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>null</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>32</Parameter>
						<Parameter>i32CurrentBitOffset</Parameter>
						<Parameter>true</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="EndSi1">
					<SetVariable Target="i32CurrentBitOffset">i32CurrentBitOffset + 32</SetVariable>
				</TestStep>
				<TestStep Name="StartSi2">
					<Description Id="14" Level="Output">Start validate SubIndex2</Description>
					<WriteLine Id="15" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : Subindex '0x{0:X}.2'</WriteLine>
				</TestStep>
				<TestStep Name="CallSi2CheckEntryDescription">
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"offline"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>2</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>"Product Code"</Parameter>
						<Parameter>7</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>null</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>32</Parameter>
						<Parameter>i32CurrentBitOffset</Parameter>
						<Parameter>true</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="EndSi2">
					<SetVariable Target="i32CurrentBitOffset">i32CurrentBitOffset + 32</SetVariable>
				</TestStep>
				<TestStep Name="StartSi3">
					<Description Id="16" Level="Output">Start validate SubIndex3</Description>
					<WriteLine Id="17" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : Subindex '0x{0:X}.3'</WriteLine>
				</TestStep>
				<TestStep Name="CallSi3CheckEntryDescription">
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"offline"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>3</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>"Revision Number"</Parameter>
						<Parameter>7</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>null</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>32</Parameter>
						<Parameter>i32CurrentBitOffset</Parameter>
						<Parameter>true</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="EndSi3">
					<SetVariable Target="i32CurrentBitOffset">i32CurrentBitOffset + 32</SetVariable>
				</TestStep>
				<TestStep Name="StartSi4">
					<Description Id="18" Level="Output">Start validate SubIndex4</Description>
					<WriteLine Id="19" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : Subindex '0x{0:X}.4'</WriteLine>
				</TestStep>
				<TestStep Name="CallSi4CheckEntryDescription">
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"offline"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>4</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>"Serial Number"</Parameter>
						<Parameter>7</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>null</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>32</Parameter>
						<Parameter>i32CurrentBitOffset</Parameter>
						<Parameter>true</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="EndSi4">
					<SetVariable Target="i32CurrentBitOffset">i32CurrentBitOffset + 32</SetVariable>
				</TestStep>
				<TestStep Name="CheckReservedEntryRange_5_to_255">
					<Description Id="20" Level="Output">Start check reserved entry range 5 to 255</Description>
					<CallTestFunction Name="CheckReservedEntryRange">
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>5</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>odDeviceObjectdictionary</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="END">
					<Compare>
						<NotEqual>
							<Value1>bAtLeastOneModuleMatch</Value1>
							<Value2>true</Value2>
							<SkipCase Id="21">SKIP TEST(no module/channel supports the current profile)</SkipCase>
						</NotEqual>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bDEBUG</Value1>
							<Value2>true</Value2>
							<WriteLine Id="22" Param0="strResult" Level="Verbose">DEBUG | Result : '{0}'.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>strResult</Value1>
							<Value2>EmptyString</Value2>
							<ReturnSuccess Id="23">Test succeed</ReturnSuccess>
						</Equal>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>strResult</Value1>
							<Value2>EmptyString</Value2>
							<RaiseError Id="24"></RaiseError>
						</NotEqual>
					</Compare>
				</TestStep>
			</TestCase>
			<TestCase Name="online | 0x1018 (Identity Object)" CaseId="12">
				<Description>
					<PreCondition>- The device profile is 5003
- The module profile is 2011
- The submodule profile is 0</PreCondition>
					<Action>- Iterate over all online defined modules/channels and if the PreCondition matches the following operations are done:
- Get the online description of object 0x1018(+module specific offset) 'Identity Object' and all entries
 Check:
    (Name)
    BitSize
    DataType
    Rx / Tx mappable
    Default Data
    MinData
    Flags       </Action>
					<PostCondition>Error if
- mandatory object / entry is not defined
- an optional object exists and the entries are invalid
- Object / entry description does not match with the specification</PostCondition>
					<ProposalForSolution>- Define the missing objects
- correct object / entry description</ProposalForSolution>
					<References>
						<Reference Specification="ETG.5003.2011"></Reference>
					</References>
					<Mandatory>true</Mandatory>
				</Description>
				<TestStep Name="InitResult">
					<SetVariable Target="strResult">EmptyString</SetVariable>
				</TestStep>
				<TestStep Name="CheckIfOdAvailable">
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Mailbox</Value1>
							<Value2>false</Value2>
							<SkipCase Id="1">DuT does not support mailbox.</SkipCase>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Mailbox.CoE</Value1>
							<Value2>false</Value2>
							<SkipCase Id="2">DuT does not support CoE.</SkipCase>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Mailbox.CoE.SdoInfo</Value1>
							<Value2>false</Value2>
							<SkipCase Id="3">DuT does not support SDO Info.</SkipCase>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="InitAtLeastOneProfileMatch">
					<SetVariable Target="bAtLeastOneModuleMatch">false</SetVariable>
				</TestStep>
				<TestStep Name="GetCurrentProfileList">
					<SizeOf UInt32Var="u32Tmp">arrOnlineProfiles</SizeOf>
					<Compare>
						<Equal>
							<Value1>u32Tmp</Value1>
							<Value2>0</Value2>
							<CallTestFunction Name="GetCurrentProfileList">
								<Parameter>"online"</Parameter>
								<Parameter>"SafeOP"</Parameter>
								<OutParameter>arrOnlineProfiles</OutParameter>
							</CallTestFunction>
						</Equal>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>u32Tmp</Value1>
							<Value2>0</Value2>
							<WriteLine Id="4" Param0="arrOnlineProfiles" Level="Verbose">Use previously created profile list ({0})</WriteLine>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep>
					<SizeOf UInt32Var="u32Tmp">arrOnlineProfiles</SizeOf>
				</TestStep>
				<TestStep>
					<InitArray TargetArray="arrCurrentProfiles" Length="u32Tmp"></InitArray>
				</TestStep>
				<TestStep>
					<CopyArray>
						<SourceArray>arrOnlineProfiles</SourceArray>
						<DestinationArray>arrCurrentProfiles</DestinationArray>
						<Length>u32Tmp</Length>
					</CopyArray>
				</TestStep>
				<TestStep Name="IsProfileSupported">
					<CallTestFunction Name="DeviceAndModuleProfileDefined">
						<Parameter>arrCurrentProfiles</Parameter>
						<Parameter>5003</Parameter>
						<Parameter>2011</Parameter>
						<OutParameter>bAtLeastOneModuleMatch</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>bAtLeastOneModuleMatch</Value1>
							<Value2>false</Value2>
							<GotoStep>END</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="GetObjectIndexInclOffset">
					<SetVariable Target="u16ObjectIndexInclOffset">#x1018</SetVariable>
					<WriteLine Id="5" Param0="u16ObjectIndexInclOffset" Level="Verbose">ObjectIndex '0x{0:X}' (module independent)</WriteLine>
				</TestStep>
				<TestStep Name="LoadDeviceObjectDictionary">
					<Description Id="6" Level="Verbose">Load 'online' object dictionary for testing.</Description>
					<GetObjectDictionary Target="odDeviceObjectdictionary">
						<DictionaryType>Online</DictionaryType>
					</GetObjectDictionary>
					<RaiseErrorOnFailure Id="7">VerifyObject : failed to load online object dictionary.</RaiseErrorOnFailure>
				</TestStep>
				<TestStep Name="CallCheckObjectDescription">
					<Description Id="8" Param0="u16ObjectIndexInclOffset" Level="Output">Verify the object description 0x{0:X4} 'Identity Object'.</Description>
					<CallTestFunction Name="CheckObjectDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"online"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>"Identity Object"</Parameter>
						<Parameter>null</Parameter>
						<Parameter>9</Parameter>
						<Parameter>-1</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<GotoStep>END</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="InitEntryBittOffset">
					<SetVariable Target="i32CurrentBitOffset">0</SetVariable>
				</TestStep>
				<TestStep Name="StartSi0">
					<Description Id="9" Level="Output">Start validate SubIndex0</Description>
					<WriteLine Id="10" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : Subindex '0x{0:X}.0'</WriteLine>
				</TestStep>
				<TestStep Name="CallSi0CheckEntryDescription">
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"online"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>0</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>null</Parameter>
						<Parameter>5</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>null</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>null</Parameter>
						<Parameter>null</Parameter>
						<Parameter>null</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>8</Parameter>
						<Parameter>i32CurrentBitOffset</Parameter>
						<Parameter>true</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="EndSi0">
					<SetVariable Target="i32CurrentBitOffset">16</SetVariable>
				</TestStep>
				<TestStep Name="StartSi1">
					<Description Id="11" Level="Output">Start validate SubIndex1</Description>
					<WriteLine Id="12" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : Subindex '0x{0:X}.1'</WriteLine>
				</TestStep>
				<TestStep Name="CallSi1CheckEntryDescription">
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"online"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>1</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>"Vendor ID"</Parameter>
						<Parameter>7</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>null</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>32</Parameter>
						<Parameter>i32CurrentBitOffset</Parameter>
						<Parameter>true</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="EndSi1">
					<SetVariable Target="i32CurrentBitOffset">i32CurrentBitOffset + 32</SetVariable>
				</TestStep>
				<TestStep Name="StartSi2">
					<Description Id="13" Level="Output">Start validate SubIndex2</Description>
					<WriteLine Id="14" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : Subindex '0x{0:X}.2'</WriteLine>
				</TestStep>
				<TestStep Name="CallSi2CheckEntryDescription">
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"online"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>2</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>"Product Code"</Parameter>
						<Parameter>7</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>null</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>32</Parameter>
						<Parameter>i32CurrentBitOffset</Parameter>
						<Parameter>true</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="EndSi2">
					<SetVariable Target="i32CurrentBitOffset">i32CurrentBitOffset + 32</SetVariable>
				</TestStep>
				<TestStep Name="StartSi3">
					<Description Id="15" Level="Output">Start validate SubIndex3</Description>
					<WriteLine Id="16" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : Subindex '0x{0:X}.3'</WriteLine>
				</TestStep>
				<TestStep Name="CallSi3CheckEntryDescription">
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"online"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>3</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>"Revision Number"</Parameter>
						<Parameter>7</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>null</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>32</Parameter>
						<Parameter>i32CurrentBitOffset</Parameter>
						<Parameter>true</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="EndSi3">
					<SetVariable Target="i32CurrentBitOffset">i32CurrentBitOffset + 32</SetVariable>
				</TestStep>
				<TestStep Name="StartSi4">
					<Description Id="17" Level="Output">Start validate SubIndex4</Description>
					<WriteLine Id="18" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : Subindex '0x{0:X}.4'</WriteLine>
				</TestStep>
				<TestStep Name="CallSi4CheckEntryDescription">
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"online"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>4</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>"Serial Number"</Parameter>
						<Parameter>7</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>null</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>32</Parameter>
						<Parameter>i32CurrentBitOffset</Parameter>
						<Parameter>true</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="EndSi4">
					<SetVariable Target="i32CurrentBitOffset">i32CurrentBitOffset + 32</SetVariable>
				</TestStep>
				<TestStep Name="CheckReservedEntryRange_5_to_255">
					<Description Id="19" Level="Output">Start check reserved entry range 5 to 255</Description>
					<CallTestFunction Name="CheckReservedEntryRange">
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>5</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>odDeviceObjectdictionary</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="END">
					<Compare>
						<NotEqual>
							<Value1>bAtLeastOneModuleMatch</Value1>
							<Value2>true</Value2>
							<SkipCase Id="20">SKIP TEST(no module/channel supports the current profile)</SkipCase>
						</NotEqual>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bDEBUG</Value1>
							<Value2>true</Value2>
							<WriteLine Id="21" Param0="strResult" Level="Verbose">DEBUG | Result : '{0}'.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>strResult</Value1>
							<Value2>EmptyString</Value2>
							<ReturnSuccess Id="22">Test succeed</ReturnSuccess>
						</Equal>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>strResult</Value1>
							<Value2>EmptyString</Value2>
							<RaiseError Id="23"></RaiseError>
						</NotEqual>
					</Compare>
				</TestStep>
			</TestCase>
			<TestCase Name="offline | 0x10F1 (Error Settings)" CaseId="13">
				<Description>
					<PreCondition>- The device profile is 5003
- The module profile is 2011
- The submodule profile is 0</PreCondition>
					<Action>- Iterate over all offline defined modules/channels and if the PreCondition matches the following operations are done:
- Get the offline description of object 0x10F1(+module specific offset) 'Error Settings' and all entries
 Check:
    (Name)
    BitSize
    DataType
    Rx / Tx mappable
    Default Data
    MinData
    Flags       </Action>
					<PostCondition>Error if
- mandatory object / entry is not defined
- an optional object exists and the entries are invalid
- Object / entry description does not match with the specification</PostCondition>
					<ProposalForSolution>- Define the missing objects
- correct object / entry description</ProposalForSolution>
					<References>
						<Reference Specification="ETG.5003.2011"></Reference>
					</References>
					<Mandatory>true</Mandatory>
				</Description>
				<TestStep Name="InitResult">
					<SetVariable Target="strResult">EmptyString</SetVariable>
				</TestStep>
				<TestStep Name="CheckIfOdAvailable">
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Mailbox</Value1>
							<Value2>false</Value2>
							<SkipCase Id="1">DuT does not support mailbox.</SkipCase>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Mailbox.CoE</Value1>
							<Value2>false</Value2>
							<SkipCase Id="2">DuT does not support CoE.</SkipCase>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep>
					<GetObjectDictionary Target="odDeviceObjectdictionary">
						<DictionaryType>Offline</DictionaryType>
					</GetObjectDictionary>
					<SkipOnFailure Id="3">No offline object dictionary defined.</SkipOnFailure>
				</TestStep>
				<TestStep>
					<GetObjectList Count="u32Tmp" Target="odDeviceObjectdictionaryList" SourceDict="odDeviceObjectdictionary"></GetObjectList>
					<Compare>
						<Equal>
							<Value1>u32Tmp</Value1>
							<Value2>0</Value2>
							<SkipCase Id="4">No offline object dictionary defined.</SkipCase>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="InitAtLeastOneProfileMatch">
					<SetVariable Target="bAtLeastOneModuleMatch">false</SetVariable>
				</TestStep>
				<TestStep Name="GetCurrentProfileList">
					<SizeOf UInt32Var="u32Tmp">arrOfflineProfiles</SizeOf>
					<Compare>
						<Equal>
							<Value1>u32Tmp</Value1>
							<Value2>0</Value2>
							<CallTestFunction Name="GetCurrentProfileList">
								<Parameter>"offline"</Parameter>
								<Parameter>"SafeOP"</Parameter>
								<OutParameter>arrOfflineProfiles</OutParameter>
							</CallTestFunction>
						</Equal>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>u32Tmp</Value1>
							<Value2>0</Value2>
							<WriteLine Id="5" Param0="arrOfflineProfiles" Level="Verbose">Use previously created profile list ({0})</WriteLine>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep>
					<SizeOf UInt32Var="u32Tmp">arrOfflineProfiles</SizeOf>
				</TestStep>
				<TestStep>
					<InitArray TargetArray="arrCurrentProfiles" Length="u32Tmp"></InitArray>
				</TestStep>
				<TestStep>
					<CopyArray>
						<SourceArray>arrOfflineProfiles</SourceArray>
						<DestinationArray>arrCurrentProfiles</DestinationArray>
						<Length>u32Tmp</Length>
					</CopyArray>
				</TestStep>
				<TestStep Name="IsProfileSupported">
					<CallTestFunction Name="DeviceAndModuleProfileDefined">
						<Parameter>arrCurrentProfiles</Parameter>
						<Parameter>5003</Parameter>
						<Parameter>2011</Parameter>
						<OutParameter>bAtLeastOneModuleMatch</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>bAtLeastOneModuleMatch</Value1>
							<Value2>false</Value2>
							<GotoStep>END</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="GetObjectIndexInclOffset">
					<SetVariable Target="u16ObjectIndexInclOffset">#x10F1</SetVariable>
					<WriteLine Id="6" Param0="u16ObjectIndexInclOffset" Level="Verbose">ObjectIndex '0x{0:X}' (module independent)</WriteLine>
				</TestStep>
				<TestStep Name="LoadDeviceObjectDictionary">
					<Description Id="7" Level="Verbose">Load 'offline' object dictionary for testing.</Description>
					<GetObjectDictionary Target="odDeviceObjectdictionary">
						<DictionaryType>Offline</DictionaryType>
					</GetObjectDictionary>
					<RaiseErrorOnFailure Id="8">VerifyObject : failed to load offline object dictionary.</RaiseErrorOnFailure>
				</TestStep>
				<TestStep Name="SetObjectRequiredLevel">
					<SetVariable Target="bObjectOrEntryRequiredLevel">1</SetVariable>
					<WriteLine Id="9" Param0="u16ObjectIndexInclOffset" Level="Verbose">0x{0:X4} 'Error Settings' may be available</WriteLine>
				</TestStep>
				<TestStep Name="CheckIfObjectExists">
					<GetObjectDescription SourceDictionary="odDeviceObjectdictionary" Index="u16ObjectIndexInclOffset" SubIndex="-1"></GetObjectDescription>
					<GotoOnSuccess>CallCheckObjectDescription</GotoOnSuccess>
				</TestStep>
				<TestStep Name="HandleNotExistingObject">
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>2</Value2>
							<WriteLine Id="10" Param0="u16ObjectIndexInclOffset" Level="Warning">The object 0x{0:X4} 'Error Settings' does not exists.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>1</Value2>
							<WriteLine Id="11" Param0="u16ObjectIndexInclOffset" Level="Output">The object 0x{0:X4} 'Error Settings' does not exists.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>END</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CallCheckObjectDescription">
					<Description Id="12" Param0="u16ObjectIndexInclOffset" Level="Output">Verify the object description 0x{0:X4} 'Error Settings'.</Description>
					<CallTestFunction Name="CheckObjectDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"offline"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>"Error Settings"</Parameter>
						<Parameter>null</Parameter>
						<Parameter>9</Parameter>
						<Parameter>-1</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<GotoStep>END</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="InitEntryBittOffset">
					<SetVariable Target="i32CurrentBitOffset">0</SetVariable>
				</TestStep>
				<TestStep Name="StartSi0">
					<Description Id="13" Level="Output">Start validate SubIndex0</Description>
					<WriteLine Id="14" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : Subindex '0x{0:X}.0'</WriteLine>
				</TestStep>
				<TestStep Name="CallSi0CheckEntryDescription">
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"offline"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>0</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>null</Parameter>
						<Parameter>5</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>null</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>null</Parameter>
						<Parameter>null</Parameter>
						<Parameter>null</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>8</Parameter>
						<Parameter>i32CurrentBitOffset</Parameter>
						<Parameter>true</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="EndSi0"></TestStep>
				<TestStep Name="StartSi2">
					<Description Id="15" Level="Output">Start validate SubIndex2</Description>
					<WriteLine Id="16" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : Subindex '0x{0:X}.2'</WriteLine>
				</TestStep>
				<TestStep Name="SetSi2RequiredLevel">
					<SetVariable Target="bObjectOrEntryRequiredLevel">1</SetVariable>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<CallTestFunction Name="IsDcSupported">
								<OutParameter>bConditionTrue</OutParameter>
							</CallTestFunction>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bConditionTrue</Value1>
							<Value2>true</Value2>
							<SetVariable Target="bObjectOrEntryRequiredLevel">3</SetVariable>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>3</Value2>
							<WriteLine Id="17" Param0="u16ObjectIndexInclOffset" Level="Verbose">0x{0:X4}.2 'Sync Error Counter Limit' shall be available (DC is supported)</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>1</Value2>
							<WriteLine Id="18" Param0="u16ObjectIndexInclOffset" Level="Verbose">0x{0:X4}.2 'Sync Error Counter Limit' may be available (DC is not supported)</WriteLine>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CheckIfSi2Exists">
					<GetObjectDescription SourceDictionary="odDeviceObjectdictionary" Index="u16ObjectIndexInclOffset" SubIndex="2">
						<Type>u16DataType</Type>
					</GetObjectDescription>
					<GotoOnFailure>HandleNotExistingSi2</GotoOnFailure>
				</TestStep>
				<TestStep>
					<Compare>
						<NotEqual>
							<Value1>u16DataType</Value1>
							<Value2>0</Value2>
							<GotoStep>CallSi2CheckEntryDescription</GotoStep>
						</NotEqual>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>1</Value2>
							<WriteLine Id="19" Param0="u16ObjectIndexInclOffset" Level="Verbose">The entry 0x{0:X4}.2 is defined as a padding entry.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>3</Value2>
							<WriteLine Id="20" Param0="u16ObjectIndexInclOffset" Level="Error">The entry 0x{0:X4}.2 shall not defined as a padding entry.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>3</Value2>
							<SetVariable Target="strResult" Param0="u16ObjectIndexInclOffset">The entry 0x{0:X4}.2 shall not defined as a padding entry.</SetVariable>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>EndSi2</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="HandleNotExistingSi2">
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>3</Value2>
							<SetVariable Target="strResult" Param0="u16ObjectIndexInclOffset">The entry 0x{0:X4}.2 does not exists.</SetVariable>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>3</Value2>
							<WriteLine Id="21" Param0="u16ObjectIndexInclOffset" Level="Error">The entry 0x{0:X4}.2 does not exists.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>3</Value2>
							<GotoStep>EndSi2</GotoStep>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="22" Param0="u16ObjectIndexInclOffset" Level="Output">The entry 0x{0:X4}.2 does not exists.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>EndSi2</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CallSi2CheckEntryDescription">
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"offline"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>2</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>"Sync Error Counter Limit"</Parameter>
						<Parameter>6</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>null</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>16</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>true</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="EndSi2"></TestStep>
				<TestStep Name="END">
					<Compare>
						<NotEqual>
							<Value1>bAtLeastOneModuleMatch</Value1>
							<Value2>true</Value2>
							<SkipCase Id="23">SKIP TEST(no module/channel supports the current profile)</SkipCase>
						</NotEqual>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bDEBUG</Value1>
							<Value2>true</Value2>
							<WriteLine Id="24" Param0="strResult" Level="Verbose">DEBUG | Result : '{0}'.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>strResult</Value1>
							<Value2>EmptyString</Value2>
							<ReturnSuccess Id="25">Test succeed</ReturnSuccess>
						</Equal>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>strResult</Value1>
							<Value2>EmptyString</Value2>
							<RaiseError Id="26"></RaiseError>
						</NotEqual>
					</Compare>
				</TestStep>
			</TestCase>
			<TestCase Name="online | 0x10F1 (Error Settings)" CaseId="14">
				<Description>
					<PreCondition>- The device profile is 5003
- The module profile is 2011
- The submodule profile is 0</PreCondition>
					<Action>- Iterate over all online defined modules/channels and if the PreCondition matches the following operations are done:
- Get the online description of object 0x10F1(+module specific offset) 'Error Settings' and all entries
 Check:
    (Name)
    BitSize
    DataType
    Rx / Tx mappable
    Default Data
    MinData
    Flags       </Action>
					<PostCondition>Error if
- mandatory object / entry is not defined
- an optional object exists and the entries are invalid
- Object / entry description does not match with the specification</PostCondition>
					<ProposalForSolution>- Define the missing objects
- correct object / entry description</ProposalForSolution>
					<References>
						<Reference Specification="ETG.5003.2011"></Reference>
					</References>
					<Mandatory>true</Mandatory>
				</Description>
				<TestStep Name="InitResult">
					<SetVariable Target="strResult">EmptyString</SetVariable>
				</TestStep>
				<TestStep Name="CheckIfOdAvailable">
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Mailbox</Value1>
							<Value2>false</Value2>
							<SkipCase Id="1">DuT does not support mailbox.</SkipCase>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Mailbox.CoE</Value1>
							<Value2>false</Value2>
							<SkipCase Id="2">DuT does not support CoE.</SkipCase>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Mailbox.CoE.SdoInfo</Value1>
							<Value2>false</Value2>
							<SkipCase Id="3">DuT does not support SDO Info.</SkipCase>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="InitAtLeastOneProfileMatch">
					<SetVariable Target="bAtLeastOneModuleMatch">false</SetVariable>
				</TestStep>
				<TestStep Name="GetCurrentProfileList">
					<SizeOf UInt32Var="u32Tmp">arrOnlineProfiles</SizeOf>
					<Compare>
						<Equal>
							<Value1>u32Tmp</Value1>
							<Value2>0</Value2>
							<CallTestFunction Name="GetCurrentProfileList">
								<Parameter>"online"</Parameter>
								<Parameter>"SafeOP"</Parameter>
								<OutParameter>arrOnlineProfiles</OutParameter>
							</CallTestFunction>
						</Equal>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>u32Tmp</Value1>
							<Value2>0</Value2>
							<WriteLine Id="4" Param0="arrOnlineProfiles" Level="Verbose">Use previously created profile list ({0})</WriteLine>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep>
					<SizeOf UInt32Var="u32Tmp">arrOnlineProfiles</SizeOf>
				</TestStep>
				<TestStep>
					<InitArray TargetArray="arrCurrentProfiles" Length="u32Tmp"></InitArray>
				</TestStep>
				<TestStep>
					<CopyArray>
						<SourceArray>arrOnlineProfiles</SourceArray>
						<DestinationArray>arrCurrentProfiles</DestinationArray>
						<Length>u32Tmp</Length>
					</CopyArray>
				</TestStep>
				<TestStep Name="IsProfileSupported">
					<CallTestFunction Name="DeviceAndModuleProfileDefined">
						<Parameter>arrCurrentProfiles</Parameter>
						<Parameter>5003</Parameter>
						<Parameter>2011</Parameter>
						<OutParameter>bAtLeastOneModuleMatch</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>bAtLeastOneModuleMatch</Value1>
							<Value2>false</Value2>
							<GotoStep>END</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="GetObjectIndexInclOffset">
					<SetVariable Target="u16ObjectIndexInclOffset">#x10F1</SetVariable>
					<WriteLine Id="5" Param0="u16ObjectIndexInclOffset" Level="Verbose">ObjectIndex '0x{0:X}' (module independent)</WriteLine>
				</TestStep>
				<TestStep Name="LoadDeviceObjectDictionary">
					<Description Id="6" Level="Verbose">Load 'online' object dictionary for testing.</Description>
					<GetObjectDictionary Target="odDeviceObjectdictionary">
						<DictionaryType>Online</DictionaryType>
					</GetObjectDictionary>
					<RaiseErrorOnFailure Id="7">VerifyObject : failed to load online object dictionary.</RaiseErrorOnFailure>
				</TestStep>
				<TestStep Name="SetObjectRequiredLevel">
					<SetVariable Target="bObjectOrEntryRequiredLevel">1</SetVariable>
					<WriteLine Id="8" Param0="u16ObjectIndexInclOffset" Level="Verbose">0x{0:X4} 'Error Settings' may be available</WriteLine>
				</TestStep>
				<TestStep Name="CheckIfObjectExists">
					<GetObjectDescription SourceDictionary="odDeviceObjectdictionary" Index="u16ObjectIndexInclOffset" SubIndex="-1"></GetObjectDescription>
					<GotoOnSuccess>CallCheckObjectDescription</GotoOnSuccess>
				</TestStep>
				<TestStep Name="HandleNotExistingObject">
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>2</Value2>
							<WriteLine Id="9" Param0="u16ObjectIndexInclOffset" Level="Warning">The object 0x{0:X4} 'Error Settings' does not exists.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>1</Value2>
							<WriteLine Id="10" Param0="u16ObjectIndexInclOffset" Level="Output">The object 0x{0:X4} 'Error Settings' does not exists.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>END</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CallCheckObjectDescription">
					<Description Id="11" Param0="u16ObjectIndexInclOffset" Level="Output">Verify the object description 0x{0:X4} 'Error Settings'.</Description>
					<CallTestFunction Name="CheckObjectDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"online"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>"Error Settings"</Parameter>
						<Parameter>null</Parameter>
						<Parameter>9</Parameter>
						<Parameter>-1</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<GotoStep>END</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="InitEntryBittOffset">
					<SetVariable Target="i32CurrentBitOffset">0</SetVariable>
				</TestStep>
				<TestStep Name="StartSi0">
					<Description Id="12" Level="Output">Start validate SubIndex0</Description>
					<WriteLine Id="13" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : Subindex '0x{0:X}.0'</WriteLine>
				</TestStep>
				<TestStep Name="CallSi0CheckEntryDescription">
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"online"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>0</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>null</Parameter>
						<Parameter>5</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>null</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>null</Parameter>
						<Parameter>null</Parameter>
						<Parameter>null</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>8</Parameter>
						<Parameter>i32CurrentBitOffset</Parameter>
						<Parameter>true</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="EndSi0"></TestStep>
				<TestStep Name="StartSi2">
					<Description Id="14" Level="Output">Start validate SubIndex2</Description>
					<WriteLine Id="15" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : Subindex '0x{0:X}.2'</WriteLine>
				</TestStep>
				<TestStep Name="SetSi2RequiredLevel">
					<SetVariable Target="bObjectOrEntryRequiredLevel">1</SetVariable>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<CallTestFunction Name="IsDcSupported">
								<OutParameter>bConditionTrue</OutParameter>
							</CallTestFunction>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bConditionTrue</Value1>
							<Value2>true</Value2>
							<SetVariable Target="bObjectOrEntryRequiredLevel">3</SetVariable>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>3</Value2>
							<WriteLine Id="16" Param0="u16ObjectIndexInclOffset" Level="Verbose">0x{0:X4}.2 'Sync Error Counter Limit' shall be available (DC is supported)</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>1</Value2>
							<WriteLine Id="17" Param0="u16ObjectIndexInclOffset" Level="Verbose">0x{0:X4}.2 'Sync Error Counter Limit' may be available (DC is not supported)</WriteLine>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CheckIfSi2Exists">
					<GetObjectDescription SourceDictionary="odDeviceObjectdictionary" Index="u16ObjectIndexInclOffset" SubIndex="2">
						<Type>u16DataType</Type>
					</GetObjectDescription>
					<GotoOnFailure>HandleNotExistingSi2</GotoOnFailure>
				</TestStep>
				<TestStep>
					<Compare>
						<NotEqual>
							<Value1>u16DataType</Value1>
							<Value2>0</Value2>
							<GotoStep>CallSi2CheckEntryDescription</GotoStep>
						</NotEqual>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>1</Value2>
							<WriteLine Id="18" Param0="u16ObjectIndexInclOffset" Level="Verbose">The entry 0x{0:X4}.2 is defined as a padding entry.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>3</Value2>
							<WriteLine Id="19" Param0="u16ObjectIndexInclOffset" Level="Error">The entry 0x{0:X4}.2 shall not defined as a padding entry.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>3</Value2>
							<SetVariable Target="strResult" Param0="u16ObjectIndexInclOffset">The entry 0x{0:X4}.2 shall not defined as a padding entry.</SetVariable>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>EndSi2</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="HandleNotExistingSi2">
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>3</Value2>
							<SetVariable Target="strResult" Param0="u16ObjectIndexInclOffset">The entry 0x{0:X4}.2 does not exists.</SetVariable>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>3</Value2>
							<WriteLine Id="20" Param0="u16ObjectIndexInclOffset" Level="Error">The entry 0x{0:X4}.2 does not exists.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>3</Value2>
							<GotoStep>EndSi2</GotoStep>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="21" Param0="u16ObjectIndexInclOffset" Level="Output">The entry 0x{0:X4}.2 does not exists.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>EndSi2</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CallSi2CheckEntryDescription">
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"online"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>2</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>"Sync Error Counter Limit"</Parameter>
						<Parameter>6</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>null</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>16</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>true</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="EndSi2"></TestStep>
				<TestStep Name="END">
					<Compare>
						<NotEqual>
							<Value1>bAtLeastOneModuleMatch</Value1>
							<Value2>true</Value2>
							<SkipCase Id="22">SKIP TEST(no module/channel supports the current profile)</SkipCase>
						</NotEqual>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bDEBUG</Value1>
							<Value2>true</Value2>
							<WriteLine Id="23" Param0="strResult" Level="Verbose">DEBUG | Result : '{0}'.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>strResult</Value1>
							<Value2>EmptyString</Value2>
							<ReturnSuccess Id="24">Test succeed</ReturnSuccess>
						</Equal>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>strResult</Value1>
							<Value2>EmptyString</Value2>
							<RaiseError Id="25"></RaiseError>
						</NotEqual>
					</Compare>
				</TestStep>
			</TestCase>
			<TestCase Name="offline | 0x10F3 (Diagnosis History)" CaseId="15">
				<Description>
					<PreCondition>- The device profile is 5003
- The module profile is 2011
- The submodule profile is 0</PreCondition>
					<Action>- Iterate over all offline defined modules/channels and if the PreCondition matches the following operations are done:
- Get the offline description of object 0x10F3(+module specific offset) 'Diagnosis History' and all entries
 Check:
    (Name)
    BitSize
    DataType
    Rx / Tx mappable
    Default Data
    MinData
    Flags       </Action>
					<PostCondition>Error if
- mandatory object / entry is not defined
- an optional object exists and the entries are invalid
- Object / entry description does not match with the specification</PostCondition>
					<ProposalForSolution>- Define the missing objects
- correct object / entry description</ProposalForSolution>
					<References>
						<Reference Specification="ETG.5003.2011"></Reference>
					</References>
					<Mandatory>true</Mandatory>
				</Description>
				<TestStep Name="InitResult">
					<SetVariable Target="strResult">EmptyString</SetVariable>
				</TestStep>
				<TestStep Name="CheckIfOdAvailable">
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Mailbox</Value1>
							<Value2>false</Value2>
							<SkipCase Id="1">DuT does not support mailbox.</SkipCase>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Mailbox.CoE</Value1>
							<Value2>false</Value2>
							<SkipCase Id="2">DuT does not support CoE.</SkipCase>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep>
					<GetObjectDictionary Target="odDeviceObjectdictionary">
						<DictionaryType>Offline</DictionaryType>
					</GetObjectDictionary>
					<SkipOnFailure Id="3">No offline object dictionary defined.</SkipOnFailure>
				</TestStep>
				<TestStep>
					<GetObjectList Count="u32Tmp" Target="odDeviceObjectdictionaryList" SourceDict="odDeviceObjectdictionary"></GetObjectList>
					<Compare>
						<Equal>
							<Value1>u32Tmp</Value1>
							<Value2>0</Value2>
							<SkipCase Id="4">No offline object dictionary defined.</SkipCase>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="InitAtLeastOneProfileMatch">
					<SetVariable Target="bAtLeastOneModuleMatch">false</SetVariable>
				</TestStep>
				<TestStep Name="GetCurrentProfileList">
					<SizeOf UInt32Var="u32Tmp">arrOfflineProfiles</SizeOf>
					<Compare>
						<Equal>
							<Value1>u32Tmp</Value1>
							<Value2>0</Value2>
							<CallTestFunction Name="GetCurrentProfileList">
								<Parameter>"offline"</Parameter>
								<Parameter>"SafeOP"</Parameter>
								<OutParameter>arrOfflineProfiles</OutParameter>
							</CallTestFunction>
						</Equal>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>u32Tmp</Value1>
							<Value2>0</Value2>
							<WriteLine Id="5" Param0="arrOfflineProfiles" Level="Verbose">Use previously created profile list ({0})</WriteLine>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep>
					<SizeOf UInt32Var="u32Tmp">arrOfflineProfiles</SizeOf>
				</TestStep>
				<TestStep>
					<InitArray TargetArray="arrCurrentProfiles" Length="u32Tmp"></InitArray>
				</TestStep>
				<TestStep>
					<CopyArray>
						<SourceArray>arrOfflineProfiles</SourceArray>
						<DestinationArray>arrCurrentProfiles</DestinationArray>
						<Length>u32Tmp</Length>
					</CopyArray>
				</TestStep>
				<TestStep Name="IsProfileSupported">
					<CallTestFunction Name="DeviceAndModuleProfileDefined">
						<Parameter>arrCurrentProfiles</Parameter>
						<Parameter>5003</Parameter>
						<Parameter>2011</Parameter>
						<OutParameter>bAtLeastOneModuleMatch</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>bAtLeastOneModuleMatch</Value1>
							<Value2>false</Value2>
							<GotoStep>END</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="GetObjectIndexInclOffset">
					<SetVariable Target="u16ObjectIndexInclOffset">#x10F3</SetVariable>
					<WriteLine Id="6" Param0="u16ObjectIndexInclOffset" Level="Verbose">ObjectIndex '0x{0:X}' (module independent)</WriteLine>
				</TestStep>
				<TestStep Name="LoadDeviceObjectDictionary">
					<Description Id="7" Level="Verbose">Load 'offline' object dictionary for testing.</Description>
					<GetObjectDictionary Target="odDeviceObjectdictionary">
						<DictionaryType>Offline</DictionaryType>
					</GetObjectDictionary>
					<RaiseErrorOnFailure Id="8">VerifyObject : failed to load offline object dictionary.</RaiseErrorOnFailure>
				</TestStep>
				<TestStep Name="SetObjectRequiredLevel">
					<SetVariable Target="bObjectOrEntryRequiredLevel">1</SetVariable>
					<WriteLine Id="9" Param0="u16ObjectIndexInclOffset" Level="Verbose">0x{0:X4} 'Diagnosis History' may be available</WriteLine>
				</TestStep>
				<TestStep Name="CheckIfObjectExists">
					<GetObjectDescription SourceDictionary="odDeviceObjectdictionary" Index="u16ObjectIndexInclOffset" SubIndex="-1"></GetObjectDescription>
					<GotoOnSuccess>CallCheckObjectDescription</GotoOnSuccess>
				</TestStep>
				<TestStep Name="HandleNotExistingObject">
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>2</Value2>
							<WriteLine Id="10" Param0="u16ObjectIndexInclOffset" Level="Warning">The object 0x{0:X4} 'Diagnosis History' does not exists.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>1</Value2>
							<WriteLine Id="11" Param0="u16ObjectIndexInclOffset" Level="Output">The object 0x{0:X4} 'Diagnosis History' does not exists.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>END</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CallCheckObjectDescription">
					<Description Id="12" Param0="u16ObjectIndexInclOffset" Level="Output">Verify the object description 0x{0:X4} 'Diagnosis History'.</Description>
					<CallTestFunction Name="CheckObjectDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"offline"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>"Diagnosis History"</Parameter>
						<Parameter>null</Parameter>
						<Parameter>9</Parameter>
						<Parameter>-1</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<GotoStep>END</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="InitEntryBittOffset">
					<SetVariable Target="i32CurrentBitOffset">0</SetVariable>
				</TestStep>
				<TestStep Name="StartSi0">
					<Description Id="13" Level="Output">Start validate SubIndex0</Description>
					<WriteLine Id="14" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : Subindex '0x{0:X}.0'</WriteLine>
				</TestStep>
				<TestStep Name="CallSi0CheckEntryDescription">
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"offline"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>0</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>null</Parameter>
						<Parameter>5</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>null</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>null</Parameter>
						<Parameter>null</Parameter>
						<Parameter>null</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>8</Parameter>
						<Parameter>i32CurrentBitOffset</Parameter>
						<Parameter>true</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="EndSi0"></TestStep>
				<TestStep Name="END">
					<Compare>
						<NotEqual>
							<Value1>bAtLeastOneModuleMatch</Value1>
							<Value2>true</Value2>
							<SkipCase Id="15">SKIP TEST(no module/channel supports the current profile)</SkipCase>
						</NotEqual>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bDEBUG</Value1>
							<Value2>true</Value2>
							<WriteLine Id="16" Param0="strResult" Level="Verbose">DEBUG | Result : '{0}'.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>strResult</Value1>
							<Value2>EmptyString</Value2>
							<ReturnSuccess Id="17">Test succeed</ReturnSuccess>
						</Equal>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>strResult</Value1>
							<Value2>EmptyString</Value2>
							<RaiseError Id="18"></RaiseError>
						</NotEqual>
					</Compare>
				</TestStep>
			</TestCase>
			<TestCase Name="online | 0x10F3 (Diagnosis History)" CaseId="16">
				<Description>
					<PreCondition>- The device profile is 5003
- The module profile is 2011
- The submodule profile is 0</PreCondition>
					<Action>- Iterate over all online defined modules/channels and if the PreCondition matches the following operations are done:
- Get the online description of object 0x10F3(+module specific offset) 'Diagnosis History' and all entries
 Check:
    (Name)
    BitSize
    DataType
    Rx / Tx mappable
    Default Data
    MinData
    Flags       </Action>
					<PostCondition>Error if
- mandatory object / entry is not defined
- an optional object exists and the entries are invalid
- Object / entry description does not match with the specification</PostCondition>
					<ProposalForSolution>- Define the missing objects
- correct object / entry description</ProposalForSolution>
					<References>
						<Reference Specification="ETG.5003.2011"></Reference>
					</References>
					<Mandatory>true</Mandatory>
				</Description>
				<TestStep Name="InitResult">
					<SetVariable Target="strResult">EmptyString</SetVariable>
				</TestStep>
				<TestStep Name="CheckIfOdAvailable">
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Mailbox</Value1>
							<Value2>false</Value2>
							<SkipCase Id="1">DuT does not support mailbox.</SkipCase>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Mailbox.CoE</Value1>
							<Value2>false</Value2>
							<SkipCase Id="2">DuT does not support CoE.</SkipCase>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Mailbox.CoE.SdoInfo</Value1>
							<Value2>false</Value2>
							<SkipCase Id="3">DuT does not support SDO Info.</SkipCase>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="InitAtLeastOneProfileMatch">
					<SetVariable Target="bAtLeastOneModuleMatch">false</SetVariable>
				</TestStep>
				<TestStep Name="GetCurrentProfileList">
					<SizeOf UInt32Var="u32Tmp">arrOnlineProfiles</SizeOf>
					<Compare>
						<Equal>
							<Value1>u32Tmp</Value1>
							<Value2>0</Value2>
							<CallTestFunction Name="GetCurrentProfileList">
								<Parameter>"online"</Parameter>
								<Parameter>"SafeOP"</Parameter>
								<OutParameter>arrOnlineProfiles</OutParameter>
							</CallTestFunction>
						</Equal>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>u32Tmp</Value1>
							<Value2>0</Value2>
							<WriteLine Id="4" Param0="arrOnlineProfiles" Level="Verbose">Use previously created profile list ({0})</WriteLine>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep>
					<SizeOf UInt32Var="u32Tmp">arrOnlineProfiles</SizeOf>
				</TestStep>
				<TestStep>
					<InitArray TargetArray="arrCurrentProfiles" Length="u32Tmp"></InitArray>
				</TestStep>
				<TestStep>
					<CopyArray>
						<SourceArray>arrOnlineProfiles</SourceArray>
						<DestinationArray>arrCurrentProfiles</DestinationArray>
						<Length>u32Tmp</Length>
					</CopyArray>
				</TestStep>
				<TestStep Name="IsProfileSupported">
					<CallTestFunction Name="DeviceAndModuleProfileDefined">
						<Parameter>arrCurrentProfiles</Parameter>
						<Parameter>5003</Parameter>
						<Parameter>2011</Parameter>
						<OutParameter>bAtLeastOneModuleMatch</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>bAtLeastOneModuleMatch</Value1>
							<Value2>false</Value2>
							<GotoStep>END</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="GetObjectIndexInclOffset">
					<SetVariable Target="u16ObjectIndexInclOffset">#x10F3</SetVariable>
					<WriteLine Id="5" Param0="u16ObjectIndexInclOffset" Level="Verbose">ObjectIndex '0x{0:X}' (module independent)</WriteLine>
				</TestStep>
				<TestStep Name="LoadDeviceObjectDictionary">
					<Description Id="6" Level="Verbose">Load 'online' object dictionary for testing.</Description>
					<GetObjectDictionary Target="odDeviceObjectdictionary">
						<DictionaryType>Online</DictionaryType>
					</GetObjectDictionary>
					<RaiseErrorOnFailure Id="7">VerifyObject : failed to load online object dictionary.</RaiseErrorOnFailure>
				</TestStep>
				<TestStep Name="SetObjectRequiredLevel">
					<SetVariable Target="bObjectOrEntryRequiredLevel">1</SetVariable>
					<WriteLine Id="8" Param0="u16ObjectIndexInclOffset" Level="Verbose">0x{0:X4} 'Diagnosis History' may be available</WriteLine>
				</TestStep>
				<TestStep Name="CheckIfObjectExists">
					<GetObjectDescription SourceDictionary="odDeviceObjectdictionary" Index="u16ObjectIndexInclOffset" SubIndex="-1"></GetObjectDescription>
					<GotoOnSuccess>CallCheckObjectDescription</GotoOnSuccess>
				</TestStep>
				<TestStep Name="HandleNotExistingObject">
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>2</Value2>
							<WriteLine Id="9" Param0="u16ObjectIndexInclOffset" Level="Warning">The object 0x{0:X4} 'Diagnosis History' does not exists.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>1</Value2>
							<WriteLine Id="10" Param0="u16ObjectIndexInclOffset" Level="Output">The object 0x{0:X4} 'Diagnosis History' does not exists.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>END</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CallCheckObjectDescription">
					<Description Id="11" Param0="u16ObjectIndexInclOffset" Level="Output">Verify the object description 0x{0:X4} 'Diagnosis History'.</Description>
					<CallTestFunction Name="CheckObjectDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"online"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>"Diagnosis History"</Parameter>
						<Parameter>null</Parameter>
						<Parameter>9</Parameter>
						<Parameter>-1</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<GotoStep>END</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="InitEntryBittOffset">
					<SetVariable Target="i32CurrentBitOffset">0</SetVariable>
				</TestStep>
				<TestStep Name="StartSi0">
					<Description Id="12" Level="Output">Start validate SubIndex0</Description>
					<WriteLine Id="13" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : Subindex '0x{0:X}.0'</WriteLine>
				</TestStep>
				<TestStep Name="CallSi0CheckEntryDescription">
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"online"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>0</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>null</Parameter>
						<Parameter>5</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>null</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>null</Parameter>
						<Parameter>null</Parameter>
						<Parameter>null</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>8</Parameter>
						<Parameter>i32CurrentBitOffset</Parameter>
						<Parameter>true</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="EndSi0"></TestStep>
				<TestStep Name="END">
					<Compare>
						<NotEqual>
							<Value1>bAtLeastOneModuleMatch</Value1>
							<Value2>true</Value2>
							<SkipCase Id="14">SKIP TEST(no module/channel supports the current profile)</SkipCase>
						</NotEqual>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bDEBUG</Value1>
							<Value2>true</Value2>
							<WriteLine Id="15" Param0="strResult" Level="Verbose">DEBUG | Result : '{0}'.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>strResult</Value1>
							<Value2>EmptyString</Value2>
							<ReturnSuccess Id="16">Test succeed</ReturnSuccess>
						</Equal>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>strResult</Value1>
							<Value2>EmptyString</Value2>
							<RaiseError Id="17"></RaiseError>
						</NotEqual>
					</Compare>
				</TestStep>
			</TestCase>
			<TestCase Name="offline | 0x10F8 (Timestamp Object)" CaseId="17">
				<Description>
					<PreCondition>- The device profile is 5003
- The module profile is 2011
- The submodule profile is 0</PreCondition>
					<Action>- Iterate over all offline defined modules/channels and if the PreCondition matches the following operations are done:
- Get the offline description of object 0x10F8(+module specific offset) 'Timestamp Object' and all entries
 Check:
    (Name)
    BitSize
    DataType
    Rx / Tx mappable
    Default Data
    MinData
    Flags       </Action>
					<PostCondition>Error if
- mandatory object / entry is not defined
- an optional object exists and the entries are invalid
- Object / entry description does not match with the specification</PostCondition>
					<ProposalForSolution>- Define the missing objects
- correct object / entry description</ProposalForSolution>
					<References>
						<Reference Specification="ETG.5003.2011"></Reference>
					</References>
					<Mandatory>true</Mandatory>
				</Description>
				<TestStep Name="InitResult">
					<SetVariable Target="strResult">EmptyString</SetVariable>
				</TestStep>
				<TestStep Name="CheckIfOdAvailable">
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Mailbox</Value1>
							<Value2>false</Value2>
							<SkipCase Id="1">DuT does not support mailbox.</SkipCase>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Mailbox.CoE</Value1>
							<Value2>false</Value2>
							<SkipCase Id="2">DuT does not support CoE.</SkipCase>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep>
					<GetObjectDictionary Target="odDeviceObjectdictionary">
						<DictionaryType>Offline</DictionaryType>
					</GetObjectDictionary>
					<SkipOnFailure Id="3">No offline object dictionary defined.</SkipOnFailure>
				</TestStep>
				<TestStep>
					<GetObjectList Count="u32Tmp" Target="odDeviceObjectdictionaryList" SourceDict="odDeviceObjectdictionary"></GetObjectList>
					<Compare>
						<Equal>
							<Value1>u32Tmp</Value1>
							<Value2>0</Value2>
							<SkipCase Id="4">No offline object dictionary defined.</SkipCase>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="InitAtLeastOneProfileMatch">
					<SetVariable Target="bAtLeastOneModuleMatch">false</SetVariable>
				</TestStep>
				<TestStep Name="GetCurrentProfileList">
					<SizeOf UInt32Var="u32Tmp">arrOfflineProfiles</SizeOf>
					<Compare>
						<Equal>
							<Value1>u32Tmp</Value1>
							<Value2>0</Value2>
							<CallTestFunction Name="GetCurrentProfileList">
								<Parameter>"offline"</Parameter>
								<Parameter>"SafeOP"</Parameter>
								<OutParameter>arrOfflineProfiles</OutParameter>
							</CallTestFunction>
						</Equal>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>u32Tmp</Value1>
							<Value2>0</Value2>
							<WriteLine Id="5" Param0="arrOfflineProfiles" Level="Verbose">Use previously created profile list ({0})</WriteLine>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep>
					<SizeOf UInt32Var="u32Tmp">arrOfflineProfiles</SizeOf>
				</TestStep>
				<TestStep>
					<InitArray TargetArray="arrCurrentProfiles" Length="u32Tmp"></InitArray>
				</TestStep>
				<TestStep>
					<CopyArray>
						<SourceArray>arrOfflineProfiles</SourceArray>
						<DestinationArray>arrCurrentProfiles</DestinationArray>
						<Length>u32Tmp</Length>
					</CopyArray>
				</TestStep>
				<TestStep Name="IsProfileSupported">
					<CallTestFunction Name="DeviceAndModuleProfileDefined">
						<Parameter>arrCurrentProfiles</Parameter>
						<Parameter>5003</Parameter>
						<Parameter>2011</Parameter>
						<OutParameter>bAtLeastOneModuleMatch</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>bAtLeastOneModuleMatch</Value1>
							<Value2>false</Value2>
							<GotoStep>END</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="GetObjectIndexInclOffset">
					<SetVariable Target="u16ObjectIndexInclOffset">#x10F8</SetVariable>
					<WriteLine Id="6" Param0="u16ObjectIndexInclOffset" Level="Verbose">ObjectIndex '0x{0:X}' (module independent)</WriteLine>
				</TestStep>
				<TestStep Name="LoadDeviceObjectDictionary">
					<Description Id="7" Level="Verbose">Load 'offline' object dictionary for testing.</Description>
					<GetObjectDictionary Target="odDeviceObjectdictionary">
						<DictionaryType>Offline</DictionaryType>
					</GetObjectDictionary>
					<RaiseErrorOnFailure Id="8">VerifyObject : failed to load offline object dictionary.</RaiseErrorOnFailure>
				</TestStep>
				<TestStep Name="CallCheckObjectDescription">
					<Description Id="9" Param0="u16ObjectIndexInclOffset" Level="Output">Verify the object description 0x{0:X4} 'Timestamp Object'.</Description>
					<CallTestFunction Name="CheckObjectDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"offline"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>"Timestamp Object"</Parameter>
						<Parameter>null</Parameter>
						<Parameter>7</Parameter>
						<Parameter>-1</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<GotoStep>END</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CallSi0CheckEntryDescription">
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"offline"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>0</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>null</Parameter>
						<Parameter>27</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>null</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>64</Parameter>
						<Parameter>i32CurrentBitOffset</Parameter>
						<Parameter>true</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="END">
					<Compare>
						<NotEqual>
							<Value1>bAtLeastOneModuleMatch</Value1>
							<Value2>true</Value2>
							<SkipCase Id="10">SKIP TEST(no module/channel supports the current profile)</SkipCase>
						</NotEqual>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bDEBUG</Value1>
							<Value2>true</Value2>
							<WriteLine Id="11" Param0="strResult" Level="Verbose">DEBUG | Result : '{0}'.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>strResult</Value1>
							<Value2>EmptyString</Value2>
							<ReturnSuccess Id="12">Test succeed</ReturnSuccess>
						</Equal>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>strResult</Value1>
							<Value2>EmptyString</Value2>
							<RaiseError Id="13"></RaiseError>
						</NotEqual>
					</Compare>
				</TestStep>
			</TestCase>
			<TestCase Name="online | 0x10F8 (Timestamp Object)" CaseId="18">
				<Description>
					<PreCondition>- The device profile is 5003
- The module profile is 2011
- The submodule profile is 0</PreCondition>
					<Action>- Iterate over all online defined modules/channels and if the PreCondition matches the following operations are done:
- Get the online description of object 0x10F8(+module specific offset) 'Timestamp Object' and all entries
 Check:
    (Name)
    BitSize
    DataType
    Rx / Tx mappable
    Default Data
    MinData
    Flags       </Action>
					<PostCondition>Error if
- mandatory object / entry is not defined
- an optional object exists and the entries are invalid
- Object / entry description does not match with the specification</PostCondition>
					<ProposalForSolution>- Define the missing objects
- correct object / entry description</ProposalForSolution>
					<References>
						<Reference Specification="ETG.5003.2011"></Reference>
					</References>
					<Mandatory>true</Mandatory>
				</Description>
				<TestStep Name="InitResult">
					<SetVariable Target="strResult">EmptyString</SetVariable>
				</TestStep>
				<TestStep Name="CheckIfOdAvailable">
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Mailbox</Value1>
							<Value2>false</Value2>
							<SkipCase Id="1">DuT does not support mailbox.</SkipCase>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Mailbox.CoE</Value1>
							<Value2>false</Value2>
							<SkipCase Id="2">DuT does not support CoE.</SkipCase>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Mailbox.CoE.SdoInfo</Value1>
							<Value2>false</Value2>
							<SkipCase Id="3">DuT does not support SDO Info.</SkipCase>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="InitAtLeastOneProfileMatch">
					<SetVariable Target="bAtLeastOneModuleMatch">false</SetVariable>
				</TestStep>
				<TestStep Name="GetCurrentProfileList">
					<SizeOf UInt32Var="u32Tmp">arrOnlineProfiles</SizeOf>
					<Compare>
						<Equal>
							<Value1>u32Tmp</Value1>
							<Value2>0</Value2>
							<CallTestFunction Name="GetCurrentProfileList">
								<Parameter>"online"</Parameter>
								<Parameter>"SafeOP"</Parameter>
								<OutParameter>arrOnlineProfiles</OutParameter>
							</CallTestFunction>
						</Equal>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>u32Tmp</Value1>
							<Value2>0</Value2>
							<WriteLine Id="4" Param0="arrOnlineProfiles" Level="Verbose">Use previously created profile list ({0})</WriteLine>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep>
					<SizeOf UInt32Var="u32Tmp">arrOnlineProfiles</SizeOf>
				</TestStep>
				<TestStep>
					<InitArray TargetArray="arrCurrentProfiles" Length="u32Tmp"></InitArray>
				</TestStep>
				<TestStep>
					<CopyArray>
						<SourceArray>arrOnlineProfiles</SourceArray>
						<DestinationArray>arrCurrentProfiles</DestinationArray>
						<Length>u32Tmp</Length>
					</CopyArray>
				</TestStep>
				<TestStep Name="IsProfileSupported">
					<CallTestFunction Name="DeviceAndModuleProfileDefined">
						<Parameter>arrCurrentProfiles</Parameter>
						<Parameter>5003</Parameter>
						<Parameter>2011</Parameter>
						<OutParameter>bAtLeastOneModuleMatch</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>bAtLeastOneModuleMatch</Value1>
							<Value2>false</Value2>
							<GotoStep>END</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="GetObjectIndexInclOffset">
					<SetVariable Target="u16ObjectIndexInclOffset">#x10F8</SetVariable>
					<WriteLine Id="5" Param0="u16ObjectIndexInclOffset" Level="Verbose">ObjectIndex '0x{0:X}' (module independent)</WriteLine>
				</TestStep>
				<TestStep Name="LoadDeviceObjectDictionary">
					<Description Id="6" Level="Verbose">Load 'online' object dictionary for testing.</Description>
					<GetObjectDictionary Target="odDeviceObjectdictionary">
						<DictionaryType>Online</DictionaryType>
					</GetObjectDictionary>
					<RaiseErrorOnFailure Id="7">VerifyObject : failed to load online object dictionary.</RaiseErrorOnFailure>
				</TestStep>
				<TestStep Name="CallCheckObjectDescription">
					<Description Id="8" Param0="u16ObjectIndexInclOffset" Level="Output">Verify the object description 0x{0:X4} 'Timestamp Object'.</Description>
					<CallTestFunction Name="CheckObjectDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"online"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>"Timestamp Object"</Parameter>
						<Parameter>null</Parameter>
						<Parameter>7</Parameter>
						<Parameter>-1</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<GotoStep>END</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CallSi0CheckEntryDescription">
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"online"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>0</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>null</Parameter>
						<Parameter>27</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>null</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>64</Parameter>
						<Parameter>i32CurrentBitOffset</Parameter>
						<Parameter>true</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="END">
					<Compare>
						<NotEqual>
							<Value1>bAtLeastOneModuleMatch</Value1>
							<Value2>true</Value2>
							<SkipCase Id="9">SKIP TEST(no module/channel supports the current profile)</SkipCase>
						</NotEqual>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bDEBUG</Value1>
							<Value2>true</Value2>
							<WriteLine Id="10" Param0="strResult" Level="Verbose">DEBUG | Result : '{0}'.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>strResult</Value1>
							<Value2>EmptyString</Value2>
							<ReturnSuccess Id="11">Test succeed</ReturnSuccess>
						</Equal>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>strResult</Value1>
							<Value2>EmptyString</Value2>
							<RaiseError Id="12"></RaiseError>
						</NotEqual>
					</Compare>
				</TestStep>
			</TestCase>
			<TestCase Name="offline | 0x1C32 (Output SyncManager Parameter)" CaseId="19">
				<Description>
					<PreCondition>- The device profile is 5003
- The module profile is 2011
- The submodule profile is 0</PreCondition>
					<Action>- Iterate over all offline defined modules/channels and if the PreCondition matches the following operations are done:
- Get the offline description of object 0x1C32(+module specific offset) 'Output SyncManager Parameter' and all entries
 Check:
    (Name)
    BitSize
    DataType
    Rx / Tx mappable
    Default Data
    MinData
    Flags       </Action>
					<PostCondition>Error if
- mandatory object / entry is not defined
- an optional object exists and the entries are invalid
- Object / entry description does not match with the specification</PostCondition>
					<ProposalForSolution>- Define the missing objects
- correct object / entry description</ProposalForSolution>
					<References>
						<Reference Specification="ETG.5003.2011"></Reference>
					</References>
					<Mandatory>true</Mandatory>
				</Description>
				<TestStep Name="InitResult">
					<SetVariable Target="strResult">EmptyString</SetVariable>
				</TestStep>
				<TestStep Name="CheckIfOdAvailable">
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Mailbox</Value1>
							<Value2>false</Value2>
							<SkipCase Id="1">DuT does not support mailbox.</SkipCase>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Mailbox.CoE</Value1>
							<Value2>false</Value2>
							<SkipCase Id="2">DuT does not support CoE.</SkipCase>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep>
					<GetObjectDictionary Target="odDeviceObjectdictionary">
						<DictionaryType>Offline</DictionaryType>
					</GetObjectDictionary>
					<SkipOnFailure Id="3">No offline object dictionary defined.</SkipOnFailure>
				</TestStep>
				<TestStep>
					<GetObjectList Count="u32Tmp" Target="odDeviceObjectdictionaryList" SourceDict="odDeviceObjectdictionary"></GetObjectList>
					<Compare>
						<Equal>
							<Value1>u32Tmp</Value1>
							<Value2>0</Value2>
							<SkipCase Id="4">No offline object dictionary defined.</SkipCase>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="InitAtLeastOneProfileMatch">
					<SetVariable Target="bAtLeastOneModuleMatch">false</SetVariable>
				</TestStep>
				<TestStep Name="GetCurrentProfileList">
					<SizeOf UInt32Var="u32Tmp">arrOfflineProfiles</SizeOf>
					<Compare>
						<Equal>
							<Value1>u32Tmp</Value1>
							<Value2>0</Value2>
							<CallTestFunction Name="GetCurrentProfileList">
								<Parameter>"offline"</Parameter>
								<Parameter>"SafeOP"</Parameter>
								<OutParameter>arrOfflineProfiles</OutParameter>
							</CallTestFunction>
						</Equal>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>u32Tmp</Value1>
							<Value2>0</Value2>
							<WriteLine Id="5" Param0="arrOfflineProfiles" Level="Verbose">Use previously created profile list ({0})</WriteLine>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep>
					<SizeOf UInt32Var="u32Tmp">arrOfflineProfiles</SizeOf>
				</TestStep>
				<TestStep>
					<InitArray TargetArray="arrCurrentProfiles" Length="u32Tmp"></InitArray>
				</TestStep>
				<TestStep>
					<CopyArray>
						<SourceArray>arrOfflineProfiles</SourceArray>
						<DestinationArray>arrCurrentProfiles</DestinationArray>
						<Length>u32Tmp</Length>
					</CopyArray>
				</TestStep>
				<TestStep Name="IsProfileSupported">
					<CallTestFunction Name="DeviceAndModuleProfileDefined">
						<Parameter>arrCurrentProfiles</Parameter>
						<Parameter>5003</Parameter>
						<Parameter>2011</Parameter>
						<OutParameter>bAtLeastOneModuleMatch</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>bAtLeastOneModuleMatch</Value1>
							<Value2>false</Value2>
							<GotoStep>END</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="GetObjectIndexInclOffset">
					<SetVariable Target="u16ObjectIndexInclOffset">#x1C32</SetVariable>
					<WriteLine Id="6" Param0="u16ObjectIndexInclOffset" Level="Verbose">ObjectIndex '0x{0:X}' (module independent)</WriteLine>
				</TestStep>
				<TestStep Name="LoadDeviceObjectDictionary">
					<Description Id="7" Level="Verbose">Load 'offline' object dictionary for testing.</Description>
					<GetObjectDictionary Target="odDeviceObjectdictionary">
						<DictionaryType>Offline</DictionaryType>
					</GetObjectDictionary>
					<RaiseErrorOnFailure Id="8">VerifyObject : failed to load offline object dictionary.</RaiseErrorOnFailure>
				</TestStep>
				<TestStep Name="SetObjectRequiredLevel">
					<SetVariable Target="bObjectOrEntryRequiredLevel">1</SetVariable>
					<WriteLine Id="9" Param0="u16ObjectIndexInclOffset" Level="Verbose">0x{0:X4} 'Output SyncManager Parameter' may be available</WriteLine>
				</TestStep>
				<TestStep Name="CheckIfObjectExists">
					<GetObjectDescription SourceDictionary="odDeviceObjectdictionary" Index="u16ObjectIndexInclOffset" SubIndex="-1"></GetObjectDescription>
					<GotoOnSuccess>CallCheckObjectDescription</GotoOnSuccess>
				</TestStep>
				<TestStep Name="HandleNotExistingObject">
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>2</Value2>
							<WriteLine Id="10" Param0="u16ObjectIndexInclOffset" Level="Warning">The object 0x{0:X4} 'Output SyncManager Parameter' does not exists.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>1</Value2>
							<WriteLine Id="11" Param0="u16ObjectIndexInclOffset" Level="Output">The object 0x{0:X4} 'Output SyncManager Parameter' does not exists.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>END</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CallCheckObjectDescription">
					<Description Id="12" Param0="u16ObjectIndexInclOffset" Level="Output">Verify the object description 0x{0:X4} 'Output SyncManager Parameter'.</Description>
					<CallTestFunction Name="CheckObjectDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"offline"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>"Output SyncManager Parameter"</Parameter>
						<Parameter>null</Parameter>
						<Parameter>9</Parameter>
						<Parameter>-1</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<GotoStep>END</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="InitEntryBittOffset">
					<SetVariable Target="i32CurrentBitOffset">0</SetVariable>
				</TestStep>
				<TestStep Name="StartSi0">
					<Description Id="13" Level="Output">Start validate SubIndex0</Description>
					<WriteLine Id="14" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : Subindex '0x{0:X}.0'</WriteLine>
				</TestStep>
				<TestStep Name="CallSi0CheckEntryDescription">
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"offline"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>0</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>null</Parameter>
						<Parameter>5</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>null</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>null</Parameter>
						<Parameter>null</Parameter>
						<Parameter>null</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>8</Parameter>
						<Parameter>i32CurrentBitOffset</Parameter>
						<Parameter>true</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="EndSi0"></TestStep>
				<TestStep Name="StartSi11">
					<Description Id="15" Level="Output">Start validate SubIndex11</Description>
					<WriteLine Id="16" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : Subindex '0x{0:X}.11'</WriteLine>
				</TestStep>
				<TestStep Name="SetSi11RequiredLevel">
					<SetVariable Target="bObjectOrEntryRequiredLevel">1</SetVariable>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<CallTestFunction Name="IsDcSupported">
								<OutParameter>bConditionTrue</OutParameter>
							</CallTestFunction>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bConditionTrue</Value1>
							<Value2>true</Value2>
							<SetVariable Target="bObjectOrEntryRequiredLevel">3</SetVariable>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>3</Value2>
							<WriteLine Id="17" Param0="u16ObjectIndexInclOffset" Level="Verbose">0x{0:X4}.11 'SM-Event Missed' shall be available (DC is supported)</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>1</Value2>
							<WriteLine Id="18" Param0="u16ObjectIndexInclOffset" Level="Verbose">0x{0:X4}.11 'SM-Event Missed' may be available (DC is not supported)</WriteLine>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CheckIfSi11Exists">
					<GetObjectDescription SourceDictionary="odDeviceObjectdictionary" Index="u16ObjectIndexInclOffset" SubIndex="11">
						<Type>u16DataType</Type>
					</GetObjectDescription>
					<GotoOnFailure>HandleNotExistingSi11</GotoOnFailure>
				</TestStep>
				<TestStep>
					<Compare>
						<NotEqual>
							<Value1>u16DataType</Value1>
							<Value2>0</Value2>
							<GotoStep>CallSi11CheckEntryDescription</GotoStep>
						</NotEqual>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>1</Value2>
							<WriteLine Id="19" Param0="u16ObjectIndexInclOffset" Level="Verbose">The entry 0x{0:X4}.11 is defined as a padding entry.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>3</Value2>
							<WriteLine Id="20" Param0="u16ObjectIndexInclOffset" Level="Error">The entry 0x{0:X4}.11 shall not defined as a padding entry.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>3</Value2>
							<SetVariable Target="strResult" Param0="u16ObjectIndexInclOffset">The entry 0x{0:X4}.11 shall not defined as a padding entry.</SetVariable>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>EndSi11</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="HandleNotExistingSi11">
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>3</Value2>
							<SetVariable Target="strResult" Param0="u16ObjectIndexInclOffset">The entry 0x{0:X4}.11 does not exists.</SetVariable>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>3</Value2>
							<WriteLine Id="21" Param0="u16ObjectIndexInclOffset" Level="Error">The entry 0x{0:X4}.11 does not exists.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>3</Value2>
							<GotoStep>EndSi11</GotoStep>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="22" Param0="u16ObjectIndexInclOffset" Level="Output">The entry 0x{0:X4}.11 does not exists.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>EndSi11</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CallSi11CheckEntryDescription">
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"offline"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>11</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>"SM-Event Missed"</Parameter>
						<Parameter>6</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>null</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>16</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>true</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="EndSi11"></TestStep>
				<TestStep Name="StartSi13">
					<Description Id="23" Level="Output">Start validate SubIndex13</Description>
					<WriteLine Id="24" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : Subindex '0x{0:X}.13'</WriteLine>
				</TestStep>
				<TestStep Name="SetSi13RequiredLevel">
					<SetVariable Target="bObjectOrEntryRequiredLevel">1</SetVariable>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<CallTestFunction Name="IsDcSupported">
								<OutParameter>bConditionTrue</OutParameter>
							</CallTestFunction>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bConditionTrue</Value1>
							<Value2>true</Value2>
							<SetVariable Target="bObjectOrEntryRequiredLevel">3</SetVariable>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>3</Value2>
							<WriteLine Id="25" Param0="u16ObjectIndexInclOffset" Level="Verbose">0x{0:X4}.13 'Shift Time Too Short' shall be available (DC is supported)</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>1</Value2>
							<WriteLine Id="26" Param0="u16ObjectIndexInclOffset" Level="Verbose">0x{0:X4}.13 'Shift Time Too Short' may be available (DC is not supported)</WriteLine>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CheckIfSi13Exists">
					<GetObjectDescription SourceDictionary="odDeviceObjectdictionary" Index="u16ObjectIndexInclOffset" SubIndex="13">
						<Type>u16DataType</Type>
					</GetObjectDescription>
					<GotoOnFailure>HandleNotExistingSi13</GotoOnFailure>
				</TestStep>
				<TestStep>
					<Compare>
						<NotEqual>
							<Value1>u16DataType</Value1>
							<Value2>0</Value2>
							<GotoStep>CallSi13CheckEntryDescription</GotoStep>
						</NotEqual>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>1</Value2>
							<WriteLine Id="27" Param0="u16ObjectIndexInclOffset" Level="Verbose">The entry 0x{0:X4}.13 is defined as a padding entry.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>3</Value2>
							<WriteLine Id="28" Param0="u16ObjectIndexInclOffset" Level="Error">The entry 0x{0:X4}.13 shall not defined as a padding entry.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>3</Value2>
							<SetVariable Target="strResult" Param0="u16ObjectIndexInclOffset">The entry 0x{0:X4}.13 shall not defined as a padding entry.</SetVariable>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>EndSi13</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="HandleNotExistingSi13">
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>3</Value2>
							<SetVariable Target="strResult" Param0="u16ObjectIndexInclOffset">The entry 0x{0:X4}.13 does not exists.</SetVariable>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>3</Value2>
							<WriteLine Id="29" Param0="u16ObjectIndexInclOffset" Level="Error">The entry 0x{0:X4}.13 does not exists.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>3</Value2>
							<GotoStep>EndSi13</GotoStep>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="30" Param0="u16ObjectIndexInclOffset" Level="Output">The entry 0x{0:X4}.13 does not exists.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>EndSi13</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CallSi13CheckEntryDescription">
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"offline"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>13</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>"Shift Time Too Short"</Parameter>
						<Parameter>6</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>null</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>16</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>true</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="EndSi13"></TestStep>
				<TestStep Name="StartSi14">
					<Description Id="31" Level="Output">Start validate SubIndex14</Description>
					<WriteLine Id="32" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : Subindex '0x{0:X}.14'</WriteLine>
				</TestStep>
				<TestStep Name="SetSi14RequiredLevel">
					<SetVariable Target="bObjectOrEntryRequiredLevel">1</SetVariable>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<CallTestFunction Name="IsEntryDefined">
								<Parameter>#x7000</Parameter>
								<Parameter>15</Parameter>
								<Parameter>offline</Parameter>
								<OutParameter>bConditionTrue</OutParameter>
							</CallTestFunction>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bConditionTrue</Value1>
							<Value2>true</Value2>
							<SetVariable Target="bObjectOrEntryRequiredLevel">3</SetVariable>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>3</Value2>
							<WriteLine Id="33" Param0="u16ObjectIndexInclOffset" Param1="#x7000" Level="Verbose">0x{0:X4}.14 'RxPDO Toggle Failed' shall be available (the entry 0x{1:X4}.15 is available (offline)</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>1</Value2>
							<WriteLine Id="34" Param0="u16ObjectIndexInclOffset" Param1="#x7000" Level="Verbose">0x{0:X4}.14 'RxPDO Toggle Failed' may be available (the entry 0x{1:X4}.15 is not available (offline)</WriteLine>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CheckIfSi14Exists">
					<GetObjectDescription SourceDictionary="odDeviceObjectdictionary" Index="u16ObjectIndexInclOffset" SubIndex="14">
						<Type>u16DataType</Type>
					</GetObjectDescription>
					<GotoOnFailure>HandleNotExistingSi14</GotoOnFailure>
				</TestStep>
				<TestStep>
					<Compare>
						<NotEqual>
							<Value1>u16DataType</Value1>
							<Value2>0</Value2>
							<GotoStep>CallSi14CheckEntryDescription</GotoStep>
						</NotEqual>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>1</Value2>
							<WriteLine Id="35" Param0="u16ObjectIndexInclOffset" Level="Verbose">The entry 0x{0:X4}.14 is defined as a padding entry.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>3</Value2>
							<WriteLine Id="36" Param0="u16ObjectIndexInclOffset" Level="Error">The entry 0x{0:X4}.14 shall not defined as a padding entry.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>3</Value2>
							<SetVariable Target="strResult" Param0="u16ObjectIndexInclOffset">The entry 0x{0:X4}.14 shall not defined as a padding entry.</SetVariable>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>EndSi14</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="HandleNotExistingSi14">
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>3</Value2>
							<SetVariable Target="strResult" Param0="u16ObjectIndexInclOffset">The entry 0x{0:X4}.14 does not exists.</SetVariable>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>3</Value2>
							<WriteLine Id="37" Param0="u16ObjectIndexInclOffset" Level="Error">The entry 0x{0:X4}.14 does not exists.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>3</Value2>
							<GotoStep>EndSi14</GotoStep>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="38" Param0="u16ObjectIndexInclOffset" Level="Output">The entry 0x{0:X4}.14 does not exists.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>EndSi14</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CallSi14CheckEntryDescription">
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"offline"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>14</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>"RxPDO Toggle Failed"</Parameter>
						<Parameter>6</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>null</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>16</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>true</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="EndSi14"></TestStep>
				<TestStep Name="END">
					<Compare>
						<NotEqual>
							<Value1>bAtLeastOneModuleMatch</Value1>
							<Value2>true</Value2>
							<SkipCase Id="39">SKIP TEST(no module/channel supports the current profile)</SkipCase>
						</NotEqual>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bDEBUG</Value1>
							<Value2>true</Value2>
							<WriteLine Id="40" Param0="strResult" Level="Verbose">DEBUG | Result : '{0}'.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>strResult</Value1>
							<Value2>EmptyString</Value2>
							<ReturnSuccess Id="41">Test succeed</ReturnSuccess>
						</Equal>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>strResult</Value1>
							<Value2>EmptyString</Value2>
							<RaiseError Id="42"></RaiseError>
						</NotEqual>
					</Compare>
				</TestStep>
			</TestCase>
			<TestCase Name="online | 0x1C32 (Output SyncManager Parameter)" CaseId="20">
				<Description>
					<PreCondition>- The device profile is 5003
- The module profile is 2011
- The submodule profile is 0</PreCondition>
					<Action>- Iterate over all online defined modules/channels and if the PreCondition matches the following operations are done:
- Get the online description of object 0x1C32(+module specific offset) 'Output SyncManager Parameter' and all entries
 Check:
    (Name)
    BitSize
    DataType
    Rx / Tx mappable
    Default Data
    MinData
    Flags       </Action>
					<PostCondition>Error if
- mandatory object / entry is not defined
- an optional object exists and the entries are invalid
- Object / entry description does not match with the specification</PostCondition>
					<ProposalForSolution>- Define the missing objects
- correct object / entry description</ProposalForSolution>
					<References>
						<Reference Specification="ETG.5003.2011"></Reference>
					</References>
					<Mandatory>true</Mandatory>
				</Description>
				<TestStep Name="InitResult">
					<SetVariable Target="strResult">EmptyString</SetVariable>
				</TestStep>
				<TestStep Name="CheckIfOdAvailable">
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Mailbox</Value1>
							<Value2>false</Value2>
							<SkipCase Id="1">DuT does not support mailbox.</SkipCase>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Mailbox.CoE</Value1>
							<Value2>false</Value2>
							<SkipCase Id="2">DuT does not support CoE.</SkipCase>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Mailbox.CoE.SdoInfo</Value1>
							<Value2>false</Value2>
							<SkipCase Id="3">DuT does not support SDO Info.</SkipCase>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="InitAtLeastOneProfileMatch">
					<SetVariable Target="bAtLeastOneModuleMatch">false</SetVariable>
				</TestStep>
				<TestStep Name="GetCurrentProfileList">
					<SizeOf UInt32Var="u32Tmp">arrOnlineProfiles</SizeOf>
					<Compare>
						<Equal>
							<Value1>u32Tmp</Value1>
							<Value2>0</Value2>
							<CallTestFunction Name="GetCurrentProfileList">
								<Parameter>"online"</Parameter>
								<Parameter>"SafeOP"</Parameter>
								<OutParameter>arrOnlineProfiles</OutParameter>
							</CallTestFunction>
						</Equal>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>u32Tmp</Value1>
							<Value2>0</Value2>
							<WriteLine Id="4" Param0="arrOnlineProfiles" Level="Verbose">Use previously created profile list ({0})</WriteLine>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep>
					<SizeOf UInt32Var="u32Tmp">arrOnlineProfiles</SizeOf>
				</TestStep>
				<TestStep>
					<InitArray TargetArray="arrCurrentProfiles" Length="u32Tmp"></InitArray>
				</TestStep>
				<TestStep>
					<CopyArray>
						<SourceArray>arrOnlineProfiles</SourceArray>
						<DestinationArray>arrCurrentProfiles</DestinationArray>
						<Length>u32Tmp</Length>
					</CopyArray>
				</TestStep>
				<TestStep Name="IsProfileSupported">
					<CallTestFunction Name="DeviceAndModuleProfileDefined">
						<Parameter>arrCurrentProfiles</Parameter>
						<Parameter>5003</Parameter>
						<Parameter>2011</Parameter>
						<OutParameter>bAtLeastOneModuleMatch</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>bAtLeastOneModuleMatch</Value1>
							<Value2>false</Value2>
							<GotoStep>END</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="GetObjectIndexInclOffset">
					<SetVariable Target="u16ObjectIndexInclOffset">#x1C32</SetVariable>
					<WriteLine Id="5" Param0="u16ObjectIndexInclOffset" Level="Verbose">ObjectIndex '0x{0:X}' (module independent)</WriteLine>
				</TestStep>
				<TestStep Name="LoadDeviceObjectDictionary">
					<Description Id="6" Level="Verbose">Load 'online' object dictionary for testing.</Description>
					<GetObjectDictionary Target="odDeviceObjectdictionary">
						<DictionaryType>Online</DictionaryType>
					</GetObjectDictionary>
					<RaiseErrorOnFailure Id="7">VerifyObject : failed to load online object dictionary.</RaiseErrorOnFailure>
				</TestStep>
				<TestStep Name="SetObjectRequiredLevel">
					<SetVariable Target="bObjectOrEntryRequiredLevel">1</SetVariable>
					<WriteLine Id="8" Param0="u16ObjectIndexInclOffset" Level="Verbose">0x{0:X4} 'Output SyncManager Parameter' may be available</WriteLine>
				</TestStep>
				<TestStep Name="CheckIfObjectExists">
					<GetObjectDescription SourceDictionary="odDeviceObjectdictionary" Index="u16ObjectIndexInclOffset" SubIndex="-1"></GetObjectDescription>
					<GotoOnSuccess>CallCheckObjectDescription</GotoOnSuccess>
				</TestStep>
				<TestStep Name="HandleNotExistingObject">
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>2</Value2>
							<WriteLine Id="9" Param0="u16ObjectIndexInclOffset" Level="Warning">The object 0x{0:X4} 'Output SyncManager Parameter' does not exists.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>1</Value2>
							<WriteLine Id="10" Param0="u16ObjectIndexInclOffset" Level="Output">The object 0x{0:X4} 'Output SyncManager Parameter' does not exists.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>END</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CallCheckObjectDescription">
					<Description Id="11" Param0="u16ObjectIndexInclOffset" Level="Output">Verify the object description 0x{0:X4} 'Output SyncManager Parameter'.</Description>
					<CallTestFunction Name="CheckObjectDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"online"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>"Output SyncManager Parameter"</Parameter>
						<Parameter>null</Parameter>
						<Parameter>9</Parameter>
						<Parameter>-1</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<GotoStep>END</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="InitEntryBittOffset">
					<SetVariable Target="i32CurrentBitOffset">0</SetVariable>
				</TestStep>
				<TestStep Name="StartSi0">
					<Description Id="12" Level="Output">Start validate SubIndex0</Description>
					<WriteLine Id="13" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : Subindex '0x{0:X}.0'</WriteLine>
				</TestStep>
				<TestStep Name="CallSi0CheckEntryDescription">
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"online"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>0</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>null</Parameter>
						<Parameter>5</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>null</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>null</Parameter>
						<Parameter>null</Parameter>
						<Parameter>null</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>8</Parameter>
						<Parameter>i32CurrentBitOffset</Parameter>
						<Parameter>true</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="EndSi0"></TestStep>
				<TestStep Name="StartSi11">
					<Description Id="14" Level="Output">Start validate SubIndex11</Description>
					<WriteLine Id="15" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : Subindex '0x{0:X}.11'</WriteLine>
				</TestStep>
				<TestStep Name="SetSi11RequiredLevel">
					<SetVariable Target="bObjectOrEntryRequiredLevel">1</SetVariable>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<CallTestFunction Name="IsDcSupported">
								<OutParameter>bConditionTrue</OutParameter>
							</CallTestFunction>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bConditionTrue</Value1>
							<Value2>true</Value2>
							<SetVariable Target="bObjectOrEntryRequiredLevel">3</SetVariable>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>3</Value2>
							<WriteLine Id="16" Param0="u16ObjectIndexInclOffset" Level="Verbose">0x{0:X4}.11 'SM-Event Missed' shall be available (DC is supported)</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>1</Value2>
							<WriteLine Id="17" Param0="u16ObjectIndexInclOffset" Level="Verbose">0x{0:X4}.11 'SM-Event Missed' may be available (DC is not supported)</WriteLine>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CheckIfSi11Exists">
					<GetObjectDescription SourceDictionary="odDeviceObjectdictionary" Index="u16ObjectIndexInclOffset" SubIndex="11">
						<Type>u16DataType</Type>
					</GetObjectDescription>
					<GotoOnFailure>HandleNotExistingSi11</GotoOnFailure>
				</TestStep>
				<TestStep>
					<Compare>
						<NotEqual>
							<Value1>u16DataType</Value1>
							<Value2>0</Value2>
							<GotoStep>CallSi11CheckEntryDescription</GotoStep>
						</NotEqual>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>1</Value2>
							<WriteLine Id="18" Param0="u16ObjectIndexInclOffset" Level="Verbose">The entry 0x{0:X4}.11 is defined as a padding entry.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>3</Value2>
							<WriteLine Id="19" Param0="u16ObjectIndexInclOffset" Level="Error">The entry 0x{0:X4}.11 shall not defined as a padding entry.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>3</Value2>
							<SetVariable Target="strResult" Param0="u16ObjectIndexInclOffset">The entry 0x{0:X4}.11 shall not defined as a padding entry.</SetVariable>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>EndSi11</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="HandleNotExistingSi11">
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>3</Value2>
							<SetVariable Target="strResult" Param0="u16ObjectIndexInclOffset">The entry 0x{0:X4}.11 does not exists.</SetVariable>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>3</Value2>
							<WriteLine Id="20" Param0="u16ObjectIndexInclOffset" Level="Error">The entry 0x{0:X4}.11 does not exists.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>3</Value2>
							<GotoStep>EndSi11</GotoStep>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="21" Param0="u16ObjectIndexInclOffset" Level="Output">The entry 0x{0:X4}.11 does not exists.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>EndSi11</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CallSi11CheckEntryDescription">
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"online"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>11</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>"SM-Event Missed"</Parameter>
						<Parameter>6</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>null</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>16</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>true</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="EndSi11"></TestStep>
				<TestStep Name="StartSi13">
					<Description Id="22" Level="Output">Start validate SubIndex13</Description>
					<WriteLine Id="23" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : Subindex '0x{0:X}.13'</WriteLine>
				</TestStep>
				<TestStep Name="SetSi13RequiredLevel">
					<SetVariable Target="bObjectOrEntryRequiredLevel">1</SetVariable>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<CallTestFunction Name="IsDcSupported">
								<OutParameter>bConditionTrue</OutParameter>
							</CallTestFunction>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bConditionTrue</Value1>
							<Value2>true</Value2>
							<SetVariable Target="bObjectOrEntryRequiredLevel">3</SetVariable>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>3</Value2>
							<WriteLine Id="24" Param0="u16ObjectIndexInclOffset" Level="Verbose">0x{0:X4}.13 'Shift Time Too Short' shall be available (DC is supported)</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>1</Value2>
							<WriteLine Id="25" Param0="u16ObjectIndexInclOffset" Level="Verbose">0x{0:X4}.13 'Shift Time Too Short' may be available (DC is not supported)</WriteLine>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CheckIfSi13Exists">
					<GetObjectDescription SourceDictionary="odDeviceObjectdictionary" Index="u16ObjectIndexInclOffset" SubIndex="13">
						<Type>u16DataType</Type>
					</GetObjectDescription>
					<GotoOnFailure>HandleNotExistingSi13</GotoOnFailure>
				</TestStep>
				<TestStep>
					<Compare>
						<NotEqual>
							<Value1>u16DataType</Value1>
							<Value2>0</Value2>
							<GotoStep>CallSi13CheckEntryDescription</GotoStep>
						</NotEqual>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>1</Value2>
							<WriteLine Id="26" Param0="u16ObjectIndexInclOffset" Level="Verbose">The entry 0x{0:X4}.13 is defined as a padding entry.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>3</Value2>
							<WriteLine Id="27" Param0="u16ObjectIndexInclOffset" Level="Error">The entry 0x{0:X4}.13 shall not defined as a padding entry.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>3</Value2>
							<SetVariable Target="strResult" Param0="u16ObjectIndexInclOffset">The entry 0x{0:X4}.13 shall not defined as a padding entry.</SetVariable>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>EndSi13</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="HandleNotExistingSi13">
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>3</Value2>
							<SetVariable Target="strResult" Param0="u16ObjectIndexInclOffset">The entry 0x{0:X4}.13 does not exists.</SetVariable>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>3</Value2>
							<WriteLine Id="28" Param0="u16ObjectIndexInclOffset" Level="Error">The entry 0x{0:X4}.13 does not exists.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>3</Value2>
							<GotoStep>EndSi13</GotoStep>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="29" Param0="u16ObjectIndexInclOffset" Level="Output">The entry 0x{0:X4}.13 does not exists.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>EndSi13</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CallSi13CheckEntryDescription">
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"online"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>13</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>"Shift Time Too Short"</Parameter>
						<Parameter>6</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>null</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>16</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>true</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="EndSi13"></TestStep>
				<TestStep Name="StartSi14">
					<Description Id="30" Level="Output">Start validate SubIndex14</Description>
					<WriteLine Id="31" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : Subindex '0x{0:X}.14'</WriteLine>
				</TestStep>
				<TestStep Name="SetSi14RequiredLevel">
					<SetVariable Target="bObjectOrEntryRequiredLevel">1</SetVariable>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<CallTestFunction Name="IsEntryDefined">
								<Parameter>#x7000</Parameter>
								<Parameter>15</Parameter>
								<Parameter>online</Parameter>
								<OutParameter>bConditionTrue</OutParameter>
							</CallTestFunction>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bConditionTrue</Value1>
							<Value2>true</Value2>
							<SetVariable Target="bObjectOrEntryRequiredLevel">3</SetVariable>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>3</Value2>
							<WriteLine Id="32" Param0="u16ObjectIndexInclOffset" Param1="#x7000" Level="Verbose">0x{0:X4}.14 'RxPDO Toggle Failed' shall be available (the entry 0x{1:X4}.15 is available (online)</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>1</Value2>
							<WriteLine Id="33" Param0="u16ObjectIndexInclOffset" Param1="#x7000" Level="Verbose">0x{0:X4}.14 'RxPDO Toggle Failed' may be available (the entry 0x{1:X4}.15 is not available (online)</WriteLine>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CheckIfSi14Exists">
					<GetObjectDescription SourceDictionary="odDeviceObjectdictionary" Index="u16ObjectIndexInclOffset" SubIndex="14">
						<Type>u16DataType</Type>
					</GetObjectDescription>
					<GotoOnFailure>HandleNotExistingSi14</GotoOnFailure>
				</TestStep>
				<TestStep>
					<Compare>
						<NotEqual>
							<Value1>u16DataType</Value1>
							<Value2>0</Value2>
							<GotoStep>CallSi14CheckEntryDescription</GotoStep>
						</NotEqual>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>1</Value2>
							<WriteLine Id="34" Param0="u16ObjectIndexInclOffset" Level="Verbose">The entry 0x{0:X4}.14 is defined as a padding entry.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>3</Value2>
							<WriteLine Id="35" Param0="u16ObjectIndexInclOffset" Level="Error">The entry 0x{0:X4}.14 shall not defined as a padding entry.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>3</Value2>
							<SetVariable Target="strResult" Param0="u16ObjectIndexInclOffset">The entry 0x{0:X4}.14 shall not defined as a padding entry.</SetVariable>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>EndSi14</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="HandleNotExistingSi14">
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>3</Value2>
							<SetVariable Target="strResult" Param0="u16ObjectIndexInclOffset">The entry 0x{0:X4}.14 does not exists.</SetVariable>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>3</Value2>
							<WriteLine Id="36" Param0="u16ObjectIndexInclOffset" Level="Error">The entry 0x{0:X4}.14 does not exists.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>3</Value2>
							<GotoStep>EndSi14</GotoStep>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="37" Param0="u16ObjectIndexInclOffset" Level="Output">The entry 0x{0:X4}.14 does not exists.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>EndSi14</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CallSi14CheckEntryDescription">
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"online"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>14</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>"RxPDO Toggle Failed"</Parameter>
						<Parameter>6</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>null</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>16</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>true</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="EndSi14"></TestStep>
				<TestStep Name="END">
					<Compare>
						<NotEqual>
							<Value1>bAtLeastOneModuleMatch</Value1>
							<Value2>true</Value2>
							<SkipCase Id="38">SKIP TEST(no module/channel supports the current profile)</SkipCase>
						</NotEqual>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bDEBUG</Value1>
							<Value2>true</Value2>
							<WriteLine Id="39" Param0="strResult" Level="Verbose">DEBUG | Result : '{0}'.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>strResult</Value1>
							<Value2>EmptyString</Value2>
							<ReturnSuccess Id="40">Test succeed</ReturnSuccess>
						</Equal>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>strResult</Value1>
							<Value2>EmptyString</Value2>
							<RaiseError Id="41"></RaiseError>
						</NotEqual>
					</Compare>
				</TestStep>
			</TestCase>
			<TestCase Name="offline | 0x1C33 (Input SyncManager Parameter)" CaseId="21">
				<Description>
					<PreCondition>- The device profile is 5003
- The module profile is 2011
- The submodule profile is 0</PreCondition>
					<Action>- Iterate over all offline defined modules/channels and if the PreCondition matches the following operations are done:
- Get the offline description of object 0x1C33(+module specific offset) 'Input SyncManager Parameter' and all entries
 Check:
    (Name)
    BitSize
    DataType
    Rx / Tx mappable
    Default Data
    MinData
    Flags       </Action>
					<PostCondition>Error if
- mandatory object / entry is not defined
- an optional object exists and the entries are invalid
- Object / entry description does not match with the specification</PostCondition>
					<ProposalForSolution>- Define the missing objects
- correct object / entry description</ProposalForSolution>
					<References>
						<Reference Specification="ETG.5003.2011"></Reference>
					</References>
					<Mandatory>true</Mandatory>
				</Description>
				<TestStep Name="InitResult">
					<SetVariable Target="strResult">EmptyString</SetVariable>
				</TestStep>
				<TestStep Name="CheckIfOdAvailable">
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Mailbox</Value1>
							<Value2>false</Value2>
							<SkipCase Id="1">DuT does not support mailbox.</SkipCase>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Mailbox.CoE</Value1>
							<Value2>false</Value2>
							<SkipCase Id="2">DuT does not support CoE.</SkipCase>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep>
					<GetObjectDictionary Target="odDeviceObjectdictionary">
						<DictionaryType>Offline</DictionaryType>
					</GetObjectDictionary>
					<SkipOnFailure Id="3">No offline object dictionary defined.</SkipOnFailure>
				</TestStep>
				<TestStep>
					<GetObjectList Count="u32Tmp" Target="odDeviceObjectdictionaryList" SourceDict="odDeviceObjectdictionary"></GetObjectList>
					<Compare>
						<Equal>
							<Value1>u32Tmp</Value1>
							<Value2>0</Value2>
							<SkipCase Id="4">No offline object dictionary defined.</SkipCase>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="InitAtLeastOneProfileMatch">
					<SetVariable Target="bAtLeastOneModuleMatch">false</SetVariable>
				</TestStep>
				<TestStep Name="GetCurrentProfileList">
					<SizeOf UInt32Var="u32Tmp">arrOfflineProfiles</SizeOf>
					<Compare>
						<Equal>
							<Value1>u32Tmp</Value1>
							<Value2>0</Value2>
							<CallTestFunction Name="GetCurrentProfileList">
								<Parameter>"offline"</Parameter>
								<Parameter>"SafeOP"</Parameter>
								<OutParameter>arrOfflineProfiles</OutParameter>
							</CallTestFunction>
						</Equal>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>u32Tmp</Value1>
							<Value2>0</Value2>
							<WriteLine Id="5" Param0="arrOfflineProfiles" Level="Verbose">Use previously created profile list ({0})</WriteLine>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep>
					<SizeOf UInt32Var="u32Tmp">arrOfflineProfiles</SizeOf>
				</TestStep>
				<TestStep>
					<InitArray TargetArray="arrCurrentProfiles" Length="u32Tmp"></InitArray>
				</TestStep>
				<TestStep>
					<CopyArray>
						<SourceArray>arrOfflineProfiles</SourceArray>
						<DestinationArray>arrCurrentProfiles</DestinationArray>
						<Length>u32Tmp</Length>
					</CopyArray>
				</TestStep>
				<TestStep Name="IsProfileSupported">
					<CallTestFunction Name="DeviceAndModuleProfileDefined">
						<Parameter>arrCurrentProfiles</Parameter>
						<Parameter>5003</Parameter>
						<Parameter>2011</Parameter>
						<OutParameter>bAtLeastOneModuleMatch</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>bAtLeastOneModuleMatch</Value1>
							<Value2>false</Value2>
							<GotoStep>END</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="GetObjectIndexInclOffset">
					<SetVariable Target="u16ObjectIndexInclOffset">#x1C33</SetVariable>
					<WriteLine Id="6" Param0="u16ObjectIndexInclOffset" Level="Verbose">ObjectIndex '0x{0:X}' (module independent)</WriteLine>
				</TestStep>
				<TestStep Name="LoadDeviceObjectDictionary">
					<Description Id="7" Level="Verbose">Load 'offline' object dictionary for testing.</Description>
					<GetObjectDictionary Target="odDeviceObjectdictionary">
						<DictionaryType>Offline</DictionaryType>
					</GetObjectDictionary>
					<RaiseErrorOnFailure Id="8">VerifyObject : failed to load offline object dictionary.</RaiseErrorOnFailure>
				</TestStep>
				<TestStep Name="SetObjectRequiredLevel">
					<SetVariable Target="bObjectOrEntryRequiredLevel">1</SetVariable>
					<WriteLine Id="9" Param0="u16ObjectIndexInclOffset" Level="Verbose">0x{0:X4} 'Input SyncManager Parameter' may be available</WriteLine>
				</TestStep>
				<TestStep Name="CheckIfObjectExists">
					<GetObjectDescription SourceDictionary="odDeviceObjectdictionary" Index="u16ObjectIndexInclOffset" SubIndex="-1"></GetObjectDescription>
					<GotoOnSuccess>CallCheckObjectDescription</GotoOnSuccess>
				</TestStep>
				<TestStep Name="HandleNotExistingObject">
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>2</Value2>
							<WriteLine Id="10" Param0="u16ObjectIndexInclOffset" Level="Warning">The object 0x{0:X4} 'Input SyncManager Parameter' does not exists.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>1</Value2>
							<WriteLine Id="11" Param0="u16ObjectIndexInclOffset" Level="Output">The object 0x{0:X4} 'Input SyncManager Parameter' does not exists.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>END</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CallCheckObjectDescription">
					<Description Id="12" Param0="u16ObjectIndexInclOffset" Level="Output">Verify the object description 0x{0:X4} 'Input SyncManager Parameter'.</Description>
					<CallTestFunction Name="CheckObjectDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"offline"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>"Input SyncManager Parameter"</Parameter>
						<Parameter>null</Parameter>
						<Parameter>9</Parameter>
						<Parameter>-1</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<GotoStep>END</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="InitEntryBittOffset">
					<SetVariable Target="i32CurrentBitOffset">0</SetVariable>
				</TestStep>
				<TestStep Name="StartSi0">
					<Description Id="13" Level="Output">Start validate SubIndex0</Description>
					<WriteLine Id="14" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : Subindex '0x{0:X}.0'</WriteLine>
				</TestStep>
				<TestStep Name="CallSi0CheckEntryDescription">
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"offline"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>0</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>null</Parameter>
						<Parameter>5</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>null</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>null</Parameter>
						<Parameter>null</Parameter>
						<Parameter>null</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>8</Parameter>
						<Parameter>i32CurrentBitOffset</Parameter>
						<Parameter>true</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="EndSi0"></TestStep>
				<TestStep Name="END">
					<Compare>
						<NotEqual>
							<Value1>bAtLeastOneModuleMatch</Value1>
							<Value2>true</Value2>
							<SkipCase Id="15">SKIP TEST(no module/channel supports the current profile)</SkipCase>
						</NotEqual>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bDEBUG</Value1>
							<Value2>true</Value2>
							<WriteLine Id="16" Param0="strResult" Level="Verbose">DEBUG | Result : '{0}'.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>strResult</Value1>
							<Value2>EmptyString</Value2>
							<ReturnSuccess Id="17">Test succeed</ReturnSuccess>
						</Equal>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>strResult</Value1>
							<Value2>EmptyString</Value2>
							<RaiseError Id="18"></RaiseError>
						</NotEqual>
					</Compare>
				</TestStep>
			</TestCase>
			<TestCase Name="online | 0x1C33 (Input SyncManager Parameter)" CaseId="22">
				<Description>
					<PreCondition>- The device profile is 5003
- The module profile is 2011
- The submodule profile is 0</PreCondition>
					<Action>- Iterate over all online defined modules/channels and if the PreCondition matches the following operations are done:
- Get the online description of object 0x1C33(+module specific offset) 'Input SyncManager Parameter' and all entries
 Check:
    (Name)
    BitSize
    DataType
    Rx / Tx mappable
    Default Data
    MinData
    Flags       </Action>
					<PostCondition>Error if
- mandatory object / entry is not defined
- an optional object exists and the entries are invalid
- Object / entry description does not match with the specification</PostCondition>
					<ProposalForSolution>- Define the missing objects
- correct object / entry description</ProposalForSolution>
					<References>
						<Reference Specification="ETG.5003.2011"></Reference>
					</References>
					<Mandatory>true</Mandatory>
				</Description>
				<TestStep Name="InitResult">
					<SetVariable Target="strResult">EmptyString</SetVariable>
				</TestStep>
				<TestStep Name="CheckIfOdAvailable">
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Mailbox</Value1>
							<Value2>false</Value2>
							<SkipCase Id="1">DuT does not support mailbox.</SkipCase>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Mailbox.CoE</Value1>
							<Value2>false</Value2>
							<SkipCase Id="2">DuT does not support CoE.</SkipCase>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Mailbox.CoE.SdoInfo</Value1>
							<Value2>false</Value2>
							<SkipCase Id="3">DuT does not support SDO Info.</SkipCase>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="InitAtLeastOneProfileMatch">
					<SetVariable Target="bAtLeastOneModuleMatch">false</SetVariable>
				</TestStep>
				<TestStep Name="GetCurrentProfileList">
					<SizeOf UInt32Var="u32Tmp">arrOnlineProfiles</SizeOf>
					<Compare>
						<Equal>
							<Value1>u32Tmp</Value1>
							<Value2>0</Value2>
							<CallTestFunction Name="GetCurrentProfileList">
								<Parameter>"online"</Parameter>
								<Parameter>"SafeOP"</Parameter>
								<OutParameter>arrOnlineProfiles</OutParameter>
							</CallTestFunction>
						</Equal>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>u32Tmp</Value1>
							<Value2>0</Value2>
							<WriteLine Id="4" Param0="arrOnlineProfiles" Level="Verbose">Use previously created profile list ({0})</WriteLine>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep>
					<SizeOf UInt32Var="u32Tmp">arrOnlineProfiles</SizeOf>
				</TestStep>
				<TestStep>
					<InitArray TargetArray="arrCurrentProfiles" Length="u32Tmp"></InitArray>
				</TestStep>
				<TestStep>
					<CopyArray>
						<SourceArray>arrOnlineProfiles</SourceArray>
						<DestinationArray>arrCurrentProfiles</DestinationArray>
						<Length>u32Tmp</Length>
					</CopyArray>
				</TestStep>
				<TestStep Name="IsProfileSupported">
					<CallTestFunction Name="DeviceAndModuleProfileDefined">
						<Parameter>arrCurrentProfiles</Parameter>
						<Parameter>5003</Parameter>
						<Parameter>2011</Parameter>
						<OutParameter>bAtLeastOneModuleMatch</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>bAtLeastOneModuleMatch</Value1>
							<Value2>false</Value2>
							<GotoStep>END</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="GetObjectIndexInclOffset">
					<SetVariable Target="u16ObjectIndexInclOffset">#x1C33</SetVariable>
					<WriteLine Id="5" Param0="u16ObjectIndexInclOffset" Level="Verbose">ObjectIndex '0x{0:X}' (module independent)</WriteLine>
				</TestStep>
				<TestStep Name="LoadDeviceObjectDictionary">
					<Description Id="6" Level="Verbose">Load 'online' object dictionary for testing.</Description>
					<GetObjectDictionary Target="odDeviceObjectdictionary">
						<DictionaryType>Online</DictionaryType>
					</GetObjectDictionary>
					<RaiseErrorOnFailure Id="7">VerifyObject : failed to load online object dictionary.</RaiseErrorOnFailure>
				</TestStep>
				<TestStep Name="SetObjectRequiredLevel">
					<SetVariable Target="bObjectOrEntryRequiredLevel">1</SetVariable>
					<WriteLine Id="8" Param0="u16ObjectIndexInclOffset" Level="Verbose">0x{0:X4} 'Input SyncManager Parameter' may be available</WriteLine>
				</TestStep>
				<TestStep Name="CheckIfObjectExists">
					<GetObjectDescription SourceDictionary="odDeviceObjectdictionary" Index="u16ObjectIndexInclOffset" SubIndex="-1"></GetObjectDescription>
					<GotoOnSuccess>CallCheckObjectDescription</GotoOnSuccess>
				</TestStep>
				<TestStep Name="HandleNotExistingObject">
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>2</Value2>
							<WriteLine Id="9" Param0="u16ObjectIndexInclOffset" Level="Warning">The object 0x{0:X4} 'Input SyncManager Parameter' does not exists.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>1</Value2>
							<WriteLine Id="10" Param0="u16ObjectIndexInclOffset" Level="Output">The object 0x{0:X4} 'Input SyncManager Parameter' does not exists.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>END</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CallCheckObjectDescription">
					<Description Id="11" Param0="u16ObjectIndexInclOffset" Level="Output">Verify the object description 0x{0:X4} 'Input SyncManager Parameter'.</Description>
					<CallTestFunction Name="CheckObjectDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"online"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>"Input SyncManager Parameter"</Parameter>
						<Parameter>null</Parameter>
						<Parameter>9</Parameter>
						<Parameter>-1</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<GotoStep>END</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="InitEntryBittOffset">
					<SetVariable Target="i32CurrentBitOffset">0</SetVariable>
				</TestStep>
				<TestStep Name="StartSi0">
					<Description Id="12" Level="Output">Start validate SubIndex0</Description>
					<WriteLine Id="13" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : Subindex '0x{0:X}.0'</WriteLine>
				</TestStep>
				<TestStep Name="CallSi0CheckEntryDescription">
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"online"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>0</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>null</Parameter>
						<Parameter>5</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>null</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>null</Parameter>
						<Parameter>null</Parameter>
						<Parameter>null</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>8</Parameter>
						<Parameter>i32CurrentBitOffset</Parameter>
						<Parameter>true</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="EndSi0"></TestStep>
				<TestStep Name="END">
					<Compare>
						<NotEqual>
							<Value1>bAtLeastOneModuleMatch</Value1>
							<Value2>true</Value2>
							<SkipCase Id="14">SKIP TEST(no module/channel supports the current profile)</SkipCase>
						</NotEqual>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bDEBUG</Value1>
							<Value2>true</Value2>
							<WriteLine Id="15" Param0="strResult" Level="Verbose">DEBUG | Result : '{0}'.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>strResult</Value1>
							<Value2>EmptyString</Value2>
							<ReturnSuccess Id="16">Test succeed</ReturnSuccess>
						</Equal>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>strResult</Value1>
							<Value2>EmptyString</Value2>
							<RaiseError Id="17"></RaiseError>
						</NotEqual>
					</Compare>
				</TestStep>
			</TestCase>
		</TestGroup>
		<TestGroup Name="Verify objects 0x6nn0 - 0x6nnF (Input Data of the Modules)" GroupId="2">
			<TestCase Name="offline | 0x6000 (Device Status)" CaseId="1">
				<Description>
					<PreCondition>- The device profile is 5003
- The module profile is 2011
- The submodule profile is 0</PreCondition>
					<Action>- Iterate over all offline defined modules/channels and if the PreCondition matches the following operations are done:
- Get the offline description of object 0x6000(+module specific offset) 'Device Status' and all entries
 Check:
    (Name)
    BitSize
    DataType
    Rx / Tx mappable
    Default Data
    MinData
    Flags       </Action>
					<PostCondition>Error if
- mandatory object / entry is not defined
- an optional object exists and the entries are invalid
- Object / entry description does not match with the specification</PostCondition>
					<ProposalForSolution>- Define the missing objects
- correct object / entry description</ProposalForSolution>
					<References>
						<Reference Specification="ETG.5003.2011"></Reference>
					</References>
					<Mandatory>true</Mandatory>
				</Description>
				<TestStep Name="InitResult">
					<SetVariable Target="strResult">EmptyString</SetVariable>
				</TestStep>
				<TestStep Name="CheckIfOdAvailable">
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Mailbox</Value1>
							<Value2>false</Value2>
							<SkipCase Id="1">DuT does not support mailbox.</SkipCase>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Mailbox.CoE</Value1>
							<Value2>false</Value2>
							<SkipCase Id="2">DuT does not support CoE.</SkipCase>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep>
					<GetObjectDictionary Target="odDeviceObjectdictionary">
						<DictionaryType>Offline</DictionaryType>
					</GetObjectDictionary>
					<SkipOnFailure Id="3">No offline object dictionary defined.</SkipOnFailure>
				</TestStep>
				<TestStep>
					<GetObjectList Count="u32Tmp" Target="odDeviceObjectdictionaryList" SourceDict="odDeviceObjectdictionary"></GetObjectList>
					<Compare>
						<Equal>
							<Value1>u32Tmp</Value1>
							<Value2>0</Value2>
							<SkipCase Id="4">No offline object dictionary defined.</SkipCase>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="InitAtLeastOneProfileMatch">
					<SetVariable Target="bAtLeastOneModuleMatch">false</SetVariable>
				</TestStep>
				<TestStep Name="GetCurrentProfileList">
					<SizeOf UInt32Var="u32Tmp">arrOfflineProfiles</SizeOf>
					<Compare>
						<Equal>
							<Value1>u32Tmp</Value1>
							<Value2>0</Value2>
							<CallTestFunction Name="GetCurrentProfileList">
								<Parameter>"offline"</Parameter>
								<Parameter>"SafeOP"</Parameter>
								<OutParameter>arrOfflineProfiles</OutParameter>
							</CallTestFunction>
						</Equal>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>u32Tmp</Value1>
							<Value2>0</Value2>
							<WriteLine Id="5" Param0="arrOfflineProfiles" Level="Verbose">Use previously created profile list ({0})</WriteLine>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep>
					<SizeOf UInt32Var="u32Tmp">arrOfflineProfiles</SizeOf>
				</TestStep>
				<TestStep>
					<InitArray TargetArray="arrCurrentProfiles" Length="u32Tmp"></InitArray>
				</TestStep>
				<TestStep>
					<CopyArray>
						<SourceArray>arrOfflineProfiles</SourceArray>
						<DestinationArray>arrCurrentProfiles</DestinationArray>
						<Length>u32Tmp</Length>
					</CopyArray>
				</TestStep>
				<TestStep Name="InitProfileLoopCounter">
					<SetVariable Target="u32ProfileCounter">0</SetVariable>
				</TestStep>
				<TestStep Name="GetProfileArrayLength">
					<SizeOf UInt32Var="u32CurrentProfilesLength">arrCurrentProfiles</SizeOf>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="6" Param0="u32CurrentProfilesLength" Level="Verbose">'{0}' Profile(s) defined offline.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>u32CurrentProfilesLength</Value1>
							<Value2>0</Value2>
							<SkipCase Id="7">Skip case | no profile defined.</SkipCase>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="ProfileLoopStart">
					<GetArrayItem SourceArray="arrCurrentProfiles" Target="strTmpString" Index="u32ProfileCounter"></GetArrayItem>
				</TestStep>
				<TestStep Name="CheckProfileInformationString">
					<Compare>
						<Equal>
							<Value1>strTmpString</Value1>
							<Value2>null</Value2>
							<RaiseError Id="8" Param0="u32ProfileCounter">Profile Info element [{0}] is null.</RaiseError>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>strTmpString</Value1>
							<Value2>EmptyString</Value2>
							<RaiseError Id="9" Param0="u32ProfileCounter">Profile Info element [{0}] is an empty string.</RaiseError>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="GetDeviceProfile">
					<CallTestFunction Name="GetDeviceProfile">
						<Parameter>strTmpString</Parameter>
						<OutParameter>uint16CurDeviceProfile</OutParameter>
					</CallTestFunction>
				</TestStep>
				<TestStep Name="GetModuleProfile">
					<CallTestFunction Name="GetModuleProfile">
						<Parameter>strTmpString</Parameter>
						<OutParameter>uint16CurModuleProfile</OutParameter>
					</CallTestFunction>
				</TestStep>
				<TestStep Name="GetSubModuleProfile">
					<CallTestFunction Name="GetSubModuleProfile">
						<Parameter>strTmpString</Parameter>
						<OutParameter>uint16CurSubModuleProfile</OutParameter>
					</CallTestFunction>
				</TestStep>
				<TestStep Name="DumpProfileInfo">
					<Description Id="10" Param0="uint16CurDeviceProfile" Param1="uint16CurModuleProfile" Param2="uint16CurSubModuleProfile" Param3="u32ProfileCounter" Level="Output">Module[{3}] : DeviceProfile '{0}' ; ModuleProfile '{1}' ; SubModuleProfile '{2}'</Description>
					<Compare>
						<Equal>
							<Value1>bIgnoreProfileID</Value1>
							<Value2>true</Value2>
							<GotoStep>IndicateThatAtleastOneModuleMatch</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CompareDeviceProfile">
					<Compare>
						<NotEqual>
							<Value1>uint16CurDeviceProfile</Value1>
							<Value2>5003</Value2>
							<WriteLine Id="11" Param0="uint16CurDeviceProfile" Level="Output">Skip Profile  (Test Device Profile '5003' != Cur Device Profile '{0}')</WriteLine>
						</NotEqual>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>uint16CurDeviceProfile</Value1>
							<Value2>5003</Value2>
							<GotoStep>ProfileLoopEnd</GotoStep>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep Name="CompareModuleProfile">
					<Compare>
						<NotEqual>
							<Value1>uint16CurModuleProfile</Value1>
							<Value2>2011</Value2>
							<WriteLine Id="12" Param0="uint16CurModuleProfile" Level="Output">Skip Profile  (Test Module Profile '2011' != Cur Module Profile '{0}')</WriteLine>
						</NotEqual>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>uint16CurModuleProfile</Value1>
							<Value2>2011</Value2>
							<GotoStep>ProfileLoopEnd</GotoStep>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep Name="CompareSubModuleProfile">
					<Compare>
						<NotEqual>
							<Value1>uint16CurSubModuleProfile</Value1>
							<Value2>0</Value2>
							<WriteLine Id="13" Param0="uint16CurSubModuleProfile" Level="Output">Skip Profile  (Test SubModule Profile '0' != Cur SubModule Profile '{0}')</WriteLine>
						</NotEqual>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>uint16CurSubModuleProfile</Value1>
							<Value2>0</Value2>
							<GotoStep>ProfileLoopEnd</GotoStep>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep Name="IndicateThatAtleastOneModuleMatch">
					<SetVariable Target="bAtLeastOneModuleMatch">true</SetVariable>
				</TestStep>
				<TestStep Name="GetObjectIndexInclOffset">
					<SetVariable Target="u16ObjectIndexInclOffset">#x6000 + (u32ProfileCounter * #x10)</SetVariable>
					<WriteLine Id="14" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : ObjectIndex '0x{0:X}'</WriteLine>
				</TestStep>
				<TestStep Name="LoadDeviceObjectDictionary">
					<Description Id="15" Level="Verbose">Load 'offline' object dictionary for testing.</Description>
					<GetObjectDictionary Target="odDeviceObjectdictionary">
						<DictionaryType>Offline</DictionaryType>
					</GetObjectDictionary>
					<RaiseErrorOnFailure Id="16">VerifyObject : failed to load offline object dictionary.</RaiseErrorOnFailure>
				</TestStep>
				<TestStep Name="CallCheckObjectDescription">
					<Description Id="17" Param0="u16ObjectIndexInclOffset" Level="Output">Verify the object description 0x{0:X4} 'Device Status'.</Description>
					<CallTestFunction Name="CheckObjectDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"offline"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>"Device Status"</Parameter>
						<Parameter>null</Parameter>
						<Parameter>9</Parameter>
						<Parameter>-1</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<GotoStep>ProfileLoopEnd</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="InitEntryBittOffset">
					<SetVariable Target="i32CurrentBitOffset">0</SetVariable>
				</TestStep>
				<TestStep Name="StartSi0">
					<Description Id="18" Level="Output">Start validate SubIndex0</Description>
					<WriteLine Id="19" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : Subindex '0x{0:X}.0'</WriteLine>
				</TestStep>
				<TestStep Name="CallSi0CheckEntryDescription">
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"offline"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>0</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>null</Parameter>
						<Parameter>5</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>null</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>null</Parameter>
						<Parameter>null</Parameter>
						<Parameter>null</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>8</Parameter>
						<Parameter>i32CurrentBitOffset</Parameter>
						<Parameter>true</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="EndSi0">
					<SetVariable Target="i32CurrentBitOffset">16</SetVariable>
				</TestStep>
				<TestStep Name="StartSi1">
					<Description Id="20" Level="Output">Start validate SubIndex1</Description>
					<WriteLine Id="21" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : Subindex '0x{0:X}.1'</WriteLine>
				</TestStep>
				<TestStep Name="CallSi1CheckEntryDescription">
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"offline"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>1</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>"RF ON Indication"</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>null</Parameter>
						<Parameter>T</Parameter>
						<Parameter>00</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>i32CurrentBitOffset</Parameter>
						<Parameter>true</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="EndSi1">
					<SetVariable Target="i32CurrentBitOffset">i32CurrentBitOffset + 1</SetVariable>
				</TestStep>
				<TestStep Name="StartSi2">
					<Description Id="22" Level="Output">Start validate SubIndex2</Description>
					<WriteLine Id="23" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : Subindex '0x{0:X}.2'</WriteLine>
				</TestStep>
				<TestStep Name="CallSi2CheckEntryDescription">
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"offline"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>2</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>"RF ON Requested Indication"</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>null</Parameter>
						<Parameter>T</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>i32CurrentBitOffset</Parameter>
						<Parameter>true</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="EndSi2">
					<SetVariable Target="i32CurrentBitOffset">i32CurrentBitOffset + 1</SetVariable>
				</TestStep>
				<TestStep Name="StartSi3">
					<Description Id="24" Level="Output">Start validate SubIndex3</Description>
					<WriteLine Id="25" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : Subindex '0x{0:X}.3'</WriteLine>
				</TestStep>
				<TestStep Name="CallSi3CheckEntryDescription">
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"offline"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>3</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>"ECAT is not active control"</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>null</Parameter>
						<Parameter>T</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>i32CurrentBitOffset</Parameter>
						<Parameter>true</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="EndSi3">
					<SetVariable Target="i32CurrentBitOffset">i32CurrentBitOffset + 1</SetVariable>
				</TestStep>
				<TestStep Name="StartSi4">
					<Description Id="26" Level="Output">Start validate SubIndex4</Description>
					<WriteLine Id="27" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : Subindex '0x{0:X}.4'</WriteLine>
				</TestStep>
				<TestStep Name="CallSi4CheckEntryDescription">
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"offline"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>4</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>"Control value out of range"</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>null</Parameter>
						<Parameter>T</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>i32CurrentBitOffset</Parameter>
						<Parameter>true</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="EndSi4">
					<SetVariable Target="i32CurrentBitOffset">i32CurrentBitOffset + 1</SetVariable>
				</TestStep>
				<TestStep Name="StartSi5">
					<Description Id="28" Level="Output">Start validate SubIndex5</Description>
					<WriteLine Id="29" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : Subindex '0x{0:X}.5'</WriteLine>
				</TestStep>
				<TestStep Name="CallSi5CheckEntryDescription">
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"offline"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>5</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>"Error present"</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>null</Parameter>
						<Parameter>T</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>i32CurrentBitOffset</Parameter>
						<Parameter>true</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="EndSi5">
					<SetVariable Target="i32CurrentBitOffset">i32CurrentBitOffset + 1</SetVariable>
				</TestStep>
				<TestStep Name="StartSi6">
					<Description Id="30" Level="Output">Start validate SubIndex6</Description>
					<WriteLine Id="31" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : Subindex '0x{0:X}.6'</WriteLine>
				</TestStep>
				<TestStep Name="CallSi6CheckEntryDescription">
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"offline"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>6</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>"Warning present"</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>null</Parameter>
						<Parameter>T</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>i32CurrentBitOffset</Parameter>
						<Parameter>true</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="EndSi6">
					<SetVariable Target="i32CurrentBitOffset">i32CurrentBitOffset + 1</SetVariable>
				</TestStep>
				<TestStep Name="CheckReservedEntryRange_7_to_12">
					<Description Id="32" Level="Output">Start check reserved entry range 7 to 12</Description>
					<CallTestFunction Name="CheckReservedEntryRange">
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>7</Parameter>
						<Parameter>13</Parameter>
						<Parameter>odDeviceObjectdictionary</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>i32CurrentBitOffset</Value1>
							<Value2>-1</Value2>
							<SetVariable Target="i32CurrentBitOffset">i32CurrentBitOffset + 6</SetVariable>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep Name="StartSi13">
					<Description Id="33" Level="Output">Start validate SubIndex13</Description>
					<WriteLine Id="34" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : Subindex '0x{0:X}.13'</WriteLine>
				</TestStep>
				<TestStep Name="SetSi13RequiredLevel">
					<SetVariable Target="bObjectOrEntryRequiredLevel">1</SetVariable>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<CallTestFunction Name="IsEntryDefined">
								<Parameter>#x10F3</Parameter>
								<Parameter>0</Parameter>
								<Parameter>offline</Parameter>
								<OutParameter>bConditionTrue</OutParameter>
							</CallTestFunction>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bConditionTrue</Value1>
							<Value2>true</Value2>
							<SetVariable Target="bObjectOrEntryRequiredLevel">3</SetVariable>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>3</Value2>
							<WriteLine Id="35" Param0="u16ObjectIndexInclOffset" Param1="#x10F3" Level="Verbose">0x{0:X4}.13 'new message in diagnosis history' shall be available (the entry 0x{1:X4}.0 is available (offline)</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>1</Value2>
							<WriteLine Id="36" Param0="u16ObjectIndexInclOffset" Param1="#x10F3" Level="Verbose">0x{0:X4}.13 'new message in diagnosis history' may be available (the entry 0x{1:X4}.0 is not available (offline)</WriteLine>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CheckIfSi13Exists">
					<GetObjectDescription SourceDictionary="odDeviceObjectdictionary" Index="u16ObjectIndexInclOffset" SubIndex="13">
						<Type>u16DataType</Type>
					</GetObjectDescription>
					<GotoOnFailure>HandleNotExistingSi13</GotoOnFailure>
				</TestStep>
				<TestStep>
					<Compare>
						<NotEqual>
							<Value1>u16DataType</Value1>
							<Value2>0</Value2>
							<GotoStep>CallSi13CheckEntryDescription</GotoStep>
						</NotEqual>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>1</Value2>
							<WriteLine Id="37" Param0="u16ObjectIndexInclOffset" Level="Verbose">The entry 0x{0:X4}.13 is defined as a padding entry.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>3</Value2>
							<WriteLine Id="38" Param0="u16ObjectIndexInclOffset" Level="Error">The entry 0x{0:X4}.13 shall not defined as a padding entry.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>3</Value2>
							<SetVariable Target="strResult" Param0="u16ObjectIndexInclOffset">The entry 0x{0:X4}.13 shall not defined as a padding entry.</SetVariable>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>EndSi13</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="HandleNotExistingSi13">
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>3</Value2>
							<SetVariable Target="strResult" Param0="u16ObjectIndexInclOffset">The entry 0x{0:X4}.13 does not exists.</SetVariable>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>3</Value2>
							<WriteLine Id="39" Param0="u16ObjectIndexInclOffset" Level="Error">The entry 0x{0:X4}.13 does not exists.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>3</Value2>
							<GotoStep>EndSi13</GotoStep>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="40" Param0="u16ObjectIndexInclOffset" Level="Output">The entry 0x{0:X4}.13 does not exists.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>EndSi13</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CallSi13CheckEntryDescription">
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"offline"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>13</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>"new message in diagnosis history"</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>null</Parameter>
						<Parameter>T</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>i32CurrentBitOffset</Parameter>
						<Parameter>true</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="EndSi13">
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>3</Value2>
							<SetVariable Target="i32CurrentBitOffset">i32CurrentBitOffset + 1</SetVariable>
						</Equal>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>3</Value2>
							<SetVariable Target="i32CurrentBitOffset">-1</SetVariable>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep Name="CheckReservedEntryRange_14_to_14">
					<Description Id="41" Level="Output">Start check reserved entry range 14 to 14</Description>
					<CallTestFunction Name="CheckReservedEntryRange">
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>14</Parameter>
						<Parameter>15</Parameter>
						<Parameter>odDeviceObjectdictionary</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>i32CurrentBitOffset</Value1>
							<Value2>-1</Value2>
							<SetVariable Target="i32CurrentBitOffset">i32CurrentBitOffset + 1</SetVariable>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep Name="StartSi15">
					<Description Id="42" Level="Output">Start validate SubIndex15</Description>
					<WriteLine Id="43" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : Subindex '0x{0:X}.15'</WriteLine>
				</TestStep>
				<TestStep Name="SetSi15RequiredLevel">
					<SetVariable Target="bObjectOrEntryRequiredLevel">1</SetVariable>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<CallTestFunction Name="IsDcSupported">
								<OutParameter>bConditionTrue</OutParameter>
							</CallTestFunction>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bConditionTrue</Value1>
							<Value2>true</Value2>
							<SetVariable Target="bObjectOrEntryRequiredLevel">3</SetVariable>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>3</Value2>
							<WriteLine Id="44" Param0="u16ObjectIndexInclOffset" Level="Verbose">0x{0:X4}.15 'Input Cycle Counter' shall be available (DC is supported)</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>1</Value2>
							<WriteLine Id="45" Param0="u16ObjectIndexInclOffset" Level="Verbose">0x{0:X4}.15 'Input Cycle Counter' may be available (DC is not supported)</WriteLine>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CheckIfSi15Exists">
					<GetObjectDescription SourceDictionary="odDeviceObjectdictionary" Index="u16ObjectIndexInclOffset" SubIndex="15">
						<Type>u16DataType</Type>
					</GetObjectDescription>
					<GotoOnFailure>HandleNotExistingSi15</GotoOnFailure>
				</TestStep>
				<TestStep>
					<Compare>
						<NotEqual>
							<Value1>u16DataType</Value1>
							<Value2>0</Value2>
							<GotoStep>CallSi15CheckEntryDescription</GotoStep>
						</NotEqual>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>1</Value2>
							<WriteLine Id="46" Param0="u16ObjectIndexInclOffset" Level="Verbose">The entry 0x{0:X4}.15 is defined as a padding entry.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>3</Value2>
							<WriteLine Id="47" Param0="u16ObjectIndexInclOffset" Level="Error">The entry 0x{0:X4}.15 shall not defined as a padding entry.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>3</Value2>
							<SetVariable Target="strResult" Param0="u16ObjectIndexInclOffset">The entry 0x{0:X4}.15 shall not defined as a padding entry.</SetVariable>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>EndSi15</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="HandleNotExistingSi15">
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>3</Value2>
							<SetVariable Target="strResult" Param0="u16ObjectIndexInclOffset">The entry 0x{0:X4}.15 does not exists.</SetVariable>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>3</Value2>
							<WriteLine Id="48" Param0="u16ObjectIndexInclOffset" Level="Error">The entry 0x{0:X4}.15 does not exists.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>3</Value2>
							<GotoStep>EndSi15</GotoStep>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="49" Param0="u16ObjectIndexInclOffset" Level="Output">The entry 0x{0:X4}.15 does not exists.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>EndSi15</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CallSi15CheckEntryDescription">
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"offline"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>15</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>"Input Cycle Counter"</Parameter>
						<Parameter>49</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>null</Parameter>
						<Parameter>T</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>2</Parameter>
						<Parameter>i32CurrentBitOffset</Parameter>
						<Parameter>true</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="EndSi15">
					<Compare>
						<Equal>
							<Value1>(bObjectOrEntryRequiredLevel &lt;&gt; 3) OR (i32CurrentBitOffset == -1)</Value1>
							<Value2>true</Value2>
							<SetVariable Target="i32CurrentBitOffset">-1</SetVariable>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>(bObjectOrEntryRequiredLevel &lt;&gt; 3) OR (i32CurrentBitOffset == -1)</Value1>
							<Value2>false</Value2>
							<SetVariable Target="i32CurrentBitOffset">i32CurrentBitOffset + 2</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CheckReservedEntryRange_16_to_255">
					<Description Id="50" Level="Output">Start check reserved entry range 16 to 255</Description>
					<CallTestFunction Name="CheckReservedEntryRange">
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>16</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>odDeviceObjectdictionary</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="ProfileLoopEnd">
					<Compare>
						<Equal>
							<Value1>bAtLeastOneModuleMatch</Value1>
							<Value2>false</Value2>
							<GotoStep>HandleAbortTestCaseOnFirstError</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="HandleAbortTestCaseOnFirstError">
					<Compare>
						<Equal>
							<Value1>bAbortTestCaseOnFirstError</Value1>
							<Value2>false</Value2>
							<GotoStep>ProfileLoopIncrement</GotoStep>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>strResult</Value1>
							<Value2>EmptyString</Value2>
							<GotoStep>ProfileLoopIncrement</GotoStep>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="51" Level="Output">Object verification for all following modules abort because an error was already detected for the current module.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>END</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="ProfileLoopIncrement">
					<SetVariable Target="u32ProfileCounter">u32ProfileCounter + 1</SetVariable>
					<Compare>
						<Greater>
							<Value1>u32CurrentProfilesLength</Value1>
							<Value2>u32ProfileCounter</Value2>
							<GotoStep>ProfileLoopStart</GotoStep>
						</Greater>
					</Compare>
				</TestStep>
				<TestStep Name="END">
					<Compare>
						<NotEqual>
							<Value1>bAtLeastOneModuleMatch</Value1>
							<Value2>true</Value2>
							<SkipCase Id="52">SKIP TEST(no module/channel supports the current profile)</SkipCase>
						</NotEqual>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bDEBUG</Value1>
							<Value2>true</Value2>
							<WriteLine Id="53" Param0="strResult" Level="Verbose">DEBUG | Result : '{0}'.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>strResult</Value1>
							<Value2>EmptyString</Value2>
							<ReturnSuccess Id="54">Test succeed</ReturnSuccess>
						</Equal>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>strResult</Value1>
							<Value2>EmptyString</Value2>
							<RaiseError Id="55"></RaiseError>
						</NotEqual>
					</Compare>
				</TestStep>
			</TestCase>
			<TestCase Name="online | 0x6000 (Device Status)" CaseId="2">
				<Description>
					<PreCondition>- The device profile is 5003
- The module profile is 2011
- The submodule profile is 0</PreCondition>
					<Action>- Iterate over all online defined modules/channels and if the PreCondition matches the following operations are done:
- Get the online description of object 0x6000(+module specific offset) 'Device Status' and all entries
 Check:
    (Name)
    BitSize
    DataType
    Rx / Tx mappable
    Default Data
    MinData
    Flags       </Action>
					<PostCondition>Error if
- mandatory object / entry is not defined
- an optional object exists and the entries are invalid
- Object / entry description does not match with the specification</PostCondition>
					<ProposalForSolution>- Define the missing objects
- correct object / entry description</ProposalForSolution>
					<References>
						<Reference Specification="ETG.5003.2011"></Reference>
					</References>
					<Mandatory>true</Mandatory>
				</Description>
				<TestStep Name="InitResult">
					<SetVariable Target="strResult">EmptyString</SetVariable>
				</TestStep>
				<TestStep Name="CheckIfOdAvailable">
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Mailbox</Value1>
							<Value2>false</Value2>
							<SkipCase Id="1">DuT does not support mailbox.</SkipCase>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Mailbox.CoE</Value1>
							<Value2>false</Value2>
							<SkipCase Id="2">DuT does not support CoE.</SkipCase>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Mailbox.CoE.SdoInfo</Value1>
							<Value2>false</Value2>
							<SkipCase Id="3">DuT does not support SDO Info.</SkipCase>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="InitAtLeastOneProfileMatch">
					<SetVariable Target="bAtLeastOneModuleMatch">false</SetVariable>
				</TestStep>
				<TestStep Name="GetCurrentProfileList">
					<SizeOf UInt32Var="u32Tmp">arrOnlineProfiles</SizeOf>
					<Compare>
						<Equal>
							<Value1>u32Tmp</Value1>
							<Value2>0</Value2>
							<CallTestFunction Name="GetCurrentProfileList">
								<Parameter>"online"</Parameter>
								<Parameter>"SafeOP"</Parameter>
								<OutParameter>arrOnlineProfiles</OutParameter>
							</CallTestFunction>
						</Equal>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>u32Tmp</Value1>
							<Value2>0</Value2>
							<WriteLine Id="4" Param0="arrOnlineProfiles" Level="Verbose">Use previously created profile list ({0})</WriteLine>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep>
					<SizeOf UInt32Var="u32Tmp">arrOnlineProfiles</SizeOf>
				</TestStep>
				<TestStep>
					<InitArray TargetArray="arrCurrentProfiles" Length="u32Tmp"></InitArray>
				</TestStep>
				<TestStep>
					<CopyArray>
						<SourceArray>arrOnlineProfiles</SourceArray>
						<DestinationArray>arrCurrentProfiles</DestinationArray>
						<Length>u32Tmp</Length>
					</CopyArray>
				</TestStep>
				<TestStep Name="InitProfileLoopCounter">
					<SetVariable Target="u32ProfileCounter">0</SetVariable>
				</TestStep>
				<TestStep Name="GetProfileArrayLength">
					<SizeOf UInt32Var="u32CurrentProfilesLength">arrCurrentProfiles</SizeOf>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="5" Param0="u32CurrentProfilesLength" Level="Verbose">'{0}' Profile(s) defined online.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>u32CurrentProfilesLength</Value1>
							<Value2>0</Value2>
							<SkipCase Id="6">Skip case | no profile defined.</SkipCase>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="ProfileLoopStart">
					<GetArrayItem SourceArray="arrCurrentProfiles" Target="strTmpString" Index="u32ProfileCounter"></GetArrayItem>
				</TestStep>
				<TestStep Name="CheckProfileInformationString">
					<Compare>
						<Equal>
							<Value1>strTmpString</Value1>
							<Value2>null</Value2>
							<RaiseError Id="7" Param0="u32ProfileCounter">Profile Info element [{0}] is null.</RaiseError>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>strTmpString</Value1>
							<Value2>EmptyString</Value2>
							<RaiseError Id="8" Param0="u32ProfileCounter">Profile Info element [{0}] is an empty string.</RaiseError>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="GetDeviceProfile">
					<CallTestFunction Name="GetDeviceProfile">
						<Parameter>strTmpString</Parameter>
						<OutParameter>uint16CurDeviceProfile</OutParameter>
					</CallTestFunction>
				</TestStep>
				<TestStep Name="GetModuleProfile">
					<CallTestFunction Name="GetModuleProfile">
						<Parameter>strTmpString</Parameter>
						<OutParameter>uint16CurModuleProfile</OutParameter>
					</CallTestFunction>
				</TestStep>
				<TestStep Name="GetSubModuleProfile">
					<CallTestFunction Name="GetSubModuleProfile">
						<Parameter>strTmpString</Parameter>
						<OutParameter>uint16CurSubModuleProfile</OutParameter>
					</CallTestFunction>
				</TestStep>
				<TestStep Name="DumpProfileInfo">
					<Description Id="9" Param0="uint16CurDeviceProfile" Param1="uint16CurModuleProfile" Param2="uint16CurSubModuleProfile" Param3="u32ProfileCounter" Level="Output">Module[{3}] : DeviceProfile '{0}' ; ModuleProfile '{1}' ; SubModuleProfile '{2}'</Description>
					<Compare>
						<Equal>
							<Value1>bIgnoreProfileID</Value1>
							<Value2>true</Value2>
							<GotoStep>IndicateThatAtleastOneModuleMatch</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CompareDeviceProfile">
					<Compare>
						<NotEqual>
							<Value1>uint16CurDeviceProfile</Value1>
							<Value2>5003</Value2>
							<WriteLine Id="10" Param0="uint16CurDeviceProfile" Level="Output">Skip Profile  (Test Device Profile '5003' != Cur Device Profile '{0}')</WriteLine>
						</NotEqual>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>uint16CurDeviceProfile</Value1>
							<Value2>5003</Value2>
							<GotoStep>ProfileLoopEnd</GotoStep>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep Name="CompareModuleProfile">
					<Compare>
						<NotEqual>
							<Value1>uint16CurModuleProfile</Value1>
							<Value2>2011</Value2>
							<WriteLine Id="11" Param0="uint16CurModuleProfile" Level="Output">Skip Profile  (Test Module Profile '2011' != Cur Module Profile '{0}')</WriteLine>
						</NotEqual>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>uint16CurModuleProfile</Value1>
							<Value2>2011</Value2>
							<GotoStep>ProfileLoopEnd</GotoStep>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep Name="CompareSubModuleProfile">
					<Compare>
						<NotEqual>
							<Value1>uint16CurSubModuleProfile</Value1>
							<Value2>0</Value2>
							<WriteLine Id="12" Param0="uint16CurSubModuleProfile" Level="Output">Skip Profile  (Test SubModule Profile '0' != Cur SubModule Profile '{0}')</WriteLine>
						</NotEqual>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>uint16CurSubModuleProfile</Value1>
							<Value2>0</Value2>
							<GotoStep>ProfileLoopEnd</GotoStep>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep Name="IndicateThatAtleastOneModuleMatch">
					<SetVariable Target="bAtLeastOneModuleMatch">true</SetVariable>
				</TestStep>
				<TestStep Name="GetObjectIndexInclOffset">
					<SetVariable Target="u16ObjectIndexInclOffset">#x6000 + (u32ProfileCounter * #x10)</SetVariable>
					<WriteLine Id="13" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : ObjectIndex '0x{0:X}'</WriteLine>
				</TestStep>
				<TestStep Name="LoadDeviceObjectDictionary">
					<Description Id="14" Level="Verbose">Load 'online' object dictionary for testing.</Description>
					<GetObjectDictionary Target="odDeviceObjectdictionary">
						<DictionaryType>Online</DictionaryType>
					</GetObjectDictionary>
					<RaiseErrorOnFailure Id="15">VerifyObject : failed to load online object dictionary.</RaiseErrorOnFailure>
				</TestStep>
				<TestStep Name="CallCheckObjectDescription">
					<Description Id="16" Param0="u16ObjectIndexInclOffset" Level="Output">Verify the object description 0x{0:X4} 'Device Status'.</Description>
					<CallTestFunction Name="CheckObjectDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"online"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>"Device Status"</Parameter>
						<Parameter>null</Parameter>
						<Parameter>9</Parameter>
						<Parameter>-1</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<GotoStep>ProfileLoopEnd</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="InitEntryBittOffset">
					<SetVariable Target="i32CurrentBitOffset">0</SetVariable>
				</TestStep>
				<TestStep Name="StartSi0">
					<Description Id="17" Level="Output">Start validate SubIndex0</Description>
					<WriteLine Id="18" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : Subindex '0x{0:X}.0'</WriteLine>
				</TestStep>
				<TestStep Name="CallSi0CheckEntryDescription">
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"online"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>0</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>null</Parameter>
						<Parameter>5</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>null</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>null</Parameter>
						<Parameter>null</Parameter>
						<Parameter>null</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>8</Parameter>
						<Parameter>i32CurrentBitOffset</Parameter>
						<Parameter>true</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="EndSi0">
					<SetVariable Target="i32CurrentBitOffset">16</SetVariable>
				</TestStep>
				<TestStep Name="StartSi1">
					<Description Id="19" Level="Output">Start validate SubIndex1</Description>
					<WriteLine Id="20" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : Subindex '0x{0:X}.1'</WriteLine>
				</TestStep>
				<TestStep Name="CallSi1CheckEntryDescription">
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"online"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>1</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>"RF ON Indication"</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>null</Parameter>
						<Parameter>T</Parameter>
						<Parameter>00</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>i32CurrentBitOffset</Parameter>
						<Parameter>true</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="EndSi1">
					<SetVariable Target="i32CurrentBitOffset">i32CurrentBitOffset + 1</SetVariable>
				</TestStep>
				<TestStep Name="StartSi2">
					<Description Id="21" Level="Output">Start validate SubIndex2</Description>
					<WriteLine Id="22" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : Subindex '0x{0:X}.2'</WriteLine>
				</TestStep>
				<TestStep Name="CallSi2CheckEntryDescription">
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"online"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>2</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>"RF ON Requested Indication"</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>null</Parameter>
						<Parameter>T</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>i32CurrentBitOffset</Parameter>
						<Parameter>true</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="EndSi2">
					<SetVariable Target="i32CurrentBitOffset">i32CurrentBitOffset + 1</SetVariable>
				</TestStep>
				<TestStep Name="StartSi3">
					<Description Id="23" Level="Output">Start validate SubIndex3</Description>
					<WriteLine Id="24" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : Subindex '0x{0:X}.3'</WriteLine>
				</TestStep>
				<TestStep Name="CallSi3CheckEntryDescription">
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"online"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>3</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>"ECAT is not active control"</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>null</Parameter>
						<Parameter>T</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>i32CurrentBitOffset</Parameter>
						<Parameter>true</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="EndSi3">
					<SetVariable Target="i32CurrentBitOffset">i32CurrentBitOffset + 1</SetVariable>
				</TestStep>
				<TestStep Name="StartSi4">
					<Description Id="25" Level="Output">Start validate SubIndex4</Description>
					<WriteLine Id="26" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : Subindex '0x{0:X}.4'</WriteLine>
				</TestStep>
				<TestStep Name="CallSi4CheckEntryDescription">
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"online"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>4</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>"Control value out of range"</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>null</Parameter>
						<Parameter>T</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>i32CurrentBitOffset</Parameter>
						<Parameter>true</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="EndSi4">
					<SetVariable Target="i32CurrentBitOffset">i32CurrentBitOffset + 1</SetVariable>
				</TestStep>
				<TestStep Name="StartSi5">
					<Description Id="27" Level="Output">Start validate SubIndex5</Description>
					<WriteLine Id="28" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : Subindex '0x{0:X}.5'</WriteLine>
				</TestStep>
				<TestStep Name="CallSi5CheckEntryDescription">
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"online"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>5</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>"Error present"</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>null</Parameter>
						<Parameter>T</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>i32CurrentBitOffset</Parameter>
						<Parameter>true</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="EndSi5">
					<SetVariable Target="i32CurrentBitOffset">i32CurrentBitOffset + 1</SetVariable>
				</TestStep>
				<TestStep Name="StartSi6">
					<Description Id="29" Level="Output">Start validate SubIndex6</Description>
					<WriteLine Id="30" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : Subindex '0x{0:X}.6'</WriteLine>
				</TestStep>
				<TestStep Name="CallSi6CheckEntryDescription">
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"online"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>6</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>"Warning present"</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>null</Parameter>
						<Parameter>T</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>i32CurrentBitOffset</Parameter>
						<Parameter>true</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="EndSi6">
					<SetVariable Target="i32CurrentBitOffset">i32CurrentBitOffset + 1</SetVariable>
				</TestStep>
				<TestStep Name="CheckReservedEntryRange_7_to_12">
					<Description Id="31" Level="Output">Start check reserved entry range 7 to 12</Description>
					<CallTestFunction Name="CheckReservedEntryRange">
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>7</Parameter>
						<Parameter>13</Parameter>
						<Parameter>odDeviceObjectdictionary</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>i32CurrentBitOffset</Value1>
							<Value2>-1</Value2>
							<SetVariable Target="i32CurrentBitOffset">i32CurrentBitOffset + 6</SetVariable>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep Name="StartSi13">
					<Description Id="32" Level="Output">Start validate SubIndex13</Description>
					<WriteLine Id="33" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : Subindex '0x{0:X}.13'</WriteLine>
				</TestStep>
				<TestStep Name="SetSi13RequiredLevel">
					<SetVariable Target="bObjectOrEntryRequiredLevel">1</SetVariable>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<CallTestFunction Name="IsEntryDefined">
								<Parameter>#x10F3</Parameter>
								<Parameter>0</Parameter>
								<Parameter>online</Parameter>
								<OutParameter>bConditionTrue</OutParameter>
							</CallTestFunction>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bConditionTrue</Value1>
							<Value2>true</Value2>
							<SetVariable Target="bObjectOrEntryRequiredLevel">3</SetVariable>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>3</Value2>
							<WriteLine Id="34" Param0="u16ObjectIndexInclOffset" Param1="#x10F3" Level="Verbose">0x{0:X4}.13 'new message in diagnosis history' shall be available (the entry 0x{1:X4}.0 is available (online)</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>1</Value2>
							<WriteLine Id="35" Param0="u16ObjectIndexInclOffset" Param1="#x10F3" Level="Verbose">0x{0:X4}.13 'new message in diagnosis history' may be available (the entry 0x{1:X4}.0 is not available (online)</WriteLine>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CheckIfSi13Exists">
					<GetObjectDescription SourceDictionary="odDeviceObjectdictionary" Index="u16ObjectIndexInclOffset" SubIndex="13">
						<Type>u16DataType</Type>
					</GetObjectDescription>
					<GotoOnFailure>HandleNotExistingSi13</GotoOnFailure>
				</TestStep>
				<TestStep>
					<Compare>
						<NotEqual>
							<Value1>u16DataType</Value1>
							<Value2>0</Value2>
							<GotoStep>CallSi13CheckEntryDescription</GotoStep>
						</NotEqual>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>1</Value2>
							<WriteLine Id="36" Param0="u16ObjectIndexInclOffset" Level="Verbose">The entry 0x{0:X4}.13 is defined as a padding entry.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>3</Value2>
							<WriteLine Id="37" Param0="u16ObjectIndexInclOffset" Level="Error">The entry 0x{0:X4}.13 shall not defined as a padding entry.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>3</Value2>
							<SetVariable Target="strResult" Param0="u16ObjectIndexInclOffset">The entry 0x{0:X4}.13 shall not defined as a padding entry.</SetVariable>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>EndSi13</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="HandleNotExistingSi13">
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>3</Value2>
							<SetVariable Target="strResult" Param0="u16ObjectIndexInclOffset">The entry 0x{0:X4}.13 does not exists.</SetVariable>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>3</Value2>
							<WriteLine Id="38" Param0="u16ObjectIndexInclOffset" Level="Error">The entry 0x{0:X4}.13 does not exists.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>3</Value2>
							<GotoStep>EndSi13</GotoStep>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="39" Param0="u16ObjectIndexInclOffset" Level="Output">The entry 0x{0:X4}.13 does not exists.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>EndSi13</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CallSi13CheckEntryDescription">
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"online"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>13</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>"new message in diagnosis history"</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>null</Parameter>
						<Parameter>T</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>i32CurrentBitOffset</Parameter>
						<Parameter>true</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="EndSi13">
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>3</Value2>
							<SetVariable Target="i32CurrentBitOffset">i32CurrentBitOffset + 1</SetVariable>
						</Equal>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>3</Value2>
							<SetVariable Target="i32CurrentBitOffset">-1</SetVariable>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep Name="CheckReservedEntryRange_14_to_14">
					<Description Id="40" Level="Output">Start check reserved entry range 14 to 14</Description>
					<CallTestFunction Name="CheckReservedEntryRange">
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>14</Parameter>
						<Parameter>15</Parameter>
						<Parameter>odDeviceObjectdictionary</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>i32CurrentBitOffset</Value1>
							<Value2>-1</Value2>
							<SetVariable Target="i32CurrentBitOffset">i32CurrentBitOffset + 1</SetVariable>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep Name="StartSi15">
					<Description Id="41" Level="Output">Start validate SubIndex15</Description>
					<WriteLine Id="42" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : Subindex '0x{0:X}.15'</WriteLine>
				</TestStep>
				<TestStep Name="SetSi15RequiredLevel">
					<SetVariable Target="bObjectOrEntryRequiredLevel">1</SetVariable>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<CallTestFunction Name="IsDcSupported">
								<OutParameter>bConditionTrue</OutParameter>
							</CallTestFunction>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bConditionTrue</Value1>
							<Value2>true</Value2>
							<SetVariable Target="bObjectOrEntryRequiredLevel">3</SetVariable>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>3</Value2>
							<WriteLine Id="43" Param0="u16ObjectIndexInclOffset" Level="Verbose">0x{0:X4}.15 'Input Cycle Counter' shall be available (DC is supported)</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>1</Value2>
							<WriteLine Id="44" Param0="u16ObjectIndexInclOffset" Level="Verbose">0x{0:X4}.15 'Input Cycle Counter' may be available (DC is not supported)</WriteLine>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CheckIfSi15Exists">
					<GetObjectDescription SourceDictionary="odDeviceObjectdictionary" Index="u16ObjectIndexInclOffset" SubIndex="15">
						<Type>u16DataType</Type>
					</GetObjectDescription>
					<GotoOnFailure>HandleNotExistingSi15</GotoOnFailure>
				</TestStep>
				<TestStep>
					<Compare>
						<NotEqual>
							<Value1>u16DataType</Value1>
							<Value2>0</Value2>
							<GotoStep>CallSi15CheckEntryDescription</GotoStep>
						</NotEqual>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>1</Value2>
							<WriteLine Id="45" Param0="u16ObjectIndexInclOffset" Level="Verbose">The entry 0x{0:X4}.15 is defined as a padding entry.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>3</Value2>
							<WriteLine Id="46" Param0="u16ObjectIndexInclOffset" Level="Error">The entry 0x{0:X4}.15 shall not defined as a padding entry.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>3</Value2>
							<SetVariable Target="strResult" Param0="u16ObjectIndexInclOffset">The entry 0x{0:X4}.15 shall not defined as a padding entry.</SetVariable>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>EndSi15</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="HandleNotExistingSi15">
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>3</Value2>
							<SetVariable Target="strResult" Param0="u16ObjectIndexInclOffset">The entry 0x{0:X4}.15 does not exists.</SetVariable>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>3</Value2>
							<WriteLine Id="47" Param0="u16ObjectIndexInclOffset" Level="Error">The entry 0x{0:X4}.15 does not exists.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>3</Value2>
							<GotoStep>EndSi15</GotoStep>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="48" Param0="u16ObjectIndexInclOffset" Level="Output">The entry 0x{0:X4}.15 does not exists.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>EndSi15</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CallSi15CheckEntryDescription">
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"online"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>15</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>"Input Cycle Counter"</Parameter>
						<Parameter>49</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>null</Parameter>
						<Parameter>T</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>2</Parameter>
						<Parameter>i32CurrentBitOffset</Parameter>
						<Parameter>true</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="EndSi15">
					<Compare>
						<Equal>
							<Value1>(bObjectOrEntryRequiredLevel &lt;&gt; 3) OR (i32CurrentBitOffset == -1)</Value1>
							<Value2>true</Value2>
							<SetVariable Target="i32CurrentBitOffset">-1</SetVariable>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>(bObjectOrEntryRequiredLevel &lt;&gt; 3) OR (i32CurrentBitOffset == -1)</Value1>
							<Value2>false</Value2>
							<SetVariable Target="i32CurrentBitOffset">i32CurrentBitOffset + 2</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CheckReservedEntryRange_16_to_255">
					<Description Id="49" Level="Output">Start check reserved entry range 16 to 255</Description>
					<CallTestFunction Name="CheckReservedEntryRange">
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>16</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>odDeviceObjectdictionary</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="ProfileLoopEnd">
					<Compare>
						<Equal>
							<Value1>bAtLeastOneModuleMatch</Value1>
							<Value2>false</Value2>
							<GotoStep>HandleAbortTestCaseOnFirstError</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="HandleAbortTestCaseOnFirstError">
					<Compare>
						<Equal>
							<Value1>bAbortTestCaseOnFirstError</Value1>
							<Value2>false</Value2>
							<GotoStep>ProfileLoopIncrement</GotoStep>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>strResult</Value1>
							<Value2>EmptyString</Value2>
							<GotoStep>ProfileLoopIncrement</GotoStep>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="50" Level="Output">Object verification for all following modules abort because an error was already detected for the current module.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>END</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="ProfileLoopIncrement">
					<SetVariable Target="u32ProfileCounter">u32ProfileCounter + 1</SetVariable>
					<Compare>
						<Greater>
							<Value1>u32CurrentProfilesLength</Value1>
							<Value2>u32ProfileCounter</Value2>
							<GotoStep>ProfileLoopStart</GotoStep>
						</Greater>
					</Compare>
				</TestStep>
				<TestStep Name="END">
					<Compare>
						<NotEqual>
							<Value1>bAtLeastOneModuleMatch</Value1>
							<Value2>true</Value2>
							<SkipCase Id="51">SKIP TEST(no module/channel supports the current profile)</SkipCase>
						</NotEqual>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bDEBUG</Value1>
							<Value2>true</Value2>
							<WriteLine Id="52" Param0="strResult" Level="Verbose">DEBUG | Result : '{0}'.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>strResult</Value1>
							<Value2>EmptyString</Value2>
							<ReturnSuccess Id="53">Test succeed</ReturnSuccess>
						</Equal>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>strResult</Value1>
							<Value2>EmptyString</Value2>
							<RaiseError Id="54"></RaiseError>
						</NotEqual>
					</Compare>
				</TestStep>
			</TestCase>
			<TestCase Name="offline | 0x6001 (Device Status Configuration)" CaseId="3">
				<Description>
					<PreCondition>- The device profile is 5003
- The module profile is 2011
- The submodule profile is 0</PreCondition>
					<Action>- Iterate over all offline defined modules/channels and if the PreCondition matches the following operations are done:
- Get the offline description of object 0x6001(+module specific offset) 'Device Status Configuration' and all entries
 Check:
    (Name)
    BitSize
    DataType
    Rx / Tx mappable
    Default Data
    MinData
    Flags       </Action>
					<PostCondition>Error if
- mandatory object / entry is not defined
- an optional object exists and the entries are invalid
- Object / entry description does not match with the specification</PostCondition>
					<ProposalForSolution>- Define the missing objects
- correct object / entry description</ProposalForSolution>
					<References>
						<Reference Specification="ETG.5003.2011"></Reference>
					</References>
					<Mandatory>true</Mandatory>
				</Description>
				<TestStep Name="InitResult">
					<SetVariable Target="strResult">EmptyString</SetVariable>
				</TestStep>
				<TestStep Name="CheckIfOdAvailable">
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Mailbox</Value1>
							<Value2>false</Value2>
							<SkipCase Id="1">DuT does not support mailbox.</SkipCase>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Mailbox.CoE</Value1>
							<Value2>false</Value2>
							<SkipCase Id="2">DuT does not support CoE.</SkipCase>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep>
					<GetObjectDictionary Target="odDeviceObjectdictionary">
						<DictionaryType>Offline</DictionaryType>
					</GetObjectDictionary>
					<SkipOnFailure Id="3">No offline object dictionary defined.</SkipOnFailure>
				</TestStep>
				<TestStep>
					<GetObjectList Count="u32Tmp" Target="odDeviceObjectdictionaryList" SourceDict="odDeviceObjectdictionary"></GetObjectList>
					<Compare>
						<Equal>
							<Value1>u32Tmp</Value1>
							<Value2>0</Value2>
							<SkipCase Id="4">No offline object dictionary defined.</SkipCase>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="InitAtLeastOneProfileMatch">
					<SetVariable Target="bAtLeastOneModuleMatch">false</SetVariable>
				</TestStep>
				<TestStep Name="GetCurrentProfileList">
					<SizeOf UInt32Var="u32Tmp">arrOfflineProfiles</SizeOf>
					<Compare>
						<Equal>
							<Value1>u32Tmp</Value1>
							<Value2>0</Value2>
							<CallTestFunction Name="GetCurrentProfileList">
								<Parameter>"offline"</Parameter>
								<Parameter>"SafeOP"</Parameter>
								<OutParameter>arrOfflineProfiles</OutParameter>
							</CallTestFunction>
						</Equal>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>u32Tmp</Value1>
							<Value2>0</Value2>
							<WriteLine Id="5" Param0="arrOfflineProfiles" Level="Verbose">Use previously created profile list ({0})</WriteLine>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep>
					<SizeOf UInt32Var="u32Tmp">arrOfflineProfiles</SizeOf>
				</TestStep>
				<TestStep>
					<InitArray TargetArray="arrCurrentProfiles" Length="u32Tmp"></InitArray>
				</TestStep>
				<TestStep>
					<CopyArray>
						<SourceArray>arrOfflineProfiles</SourceArray>
						<DestinationArray>arrCurrentProfiles</DestinationArray>
						<Length>u32Tmp</Length>
					</CopyArray>
				</TestStep>
				<TestStep Name="InitProfileLoopCounter">
					<SetVariable Target="u32ProfileCounter">0</SetVariable>
				</TestStep>
				<TestStep Name="GetProfileArrayLength">
					<SizeOf UInt32Var="u32CurrentProfilesLength">arrCurrentProfiles</SizeOf>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="6" Param0="u32CurrentProfilesLength" Level="Verbose">'{0}' Profile(s) defined offline.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>u32CurrentProfilesLength</Value1>
							<Value2>0</Value2>
							<SkipCase Id="7">Skip case | no profile defined.</SkipCase>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="ProfileLoopStart">
					<GetArrayItem SourceArray="arrCurrentProfiles" Target="strTmpString" Index="u32ProfileCounter"></GetArrayItem>
				</TestStep>
				<TestStep Name="CheckProfileInformationString">
					<Compare>
						<Equal>
							<Value1>strTmpString</Value1>
							<Value2>null</Value2>
							<RaiseError Id="8" Param0="u32ProfileCounter">Profile Info element [{0}] is null.</RaiseError>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>strTmpString</Value1>
							<Value2>EmptyString</Value2>
							<RaiseError Id="9" Param0="u32ProfileCounter">Profile Info element [{0}] is an empty string.</RaiseError>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="GetDeviceProfile">
					<CallTestFunction Name="GetDeviceProfile">
						<Parameter>strTmpString</Parameter>
						<OutParameter>uint16CurDeviceProfile</OutParameter>
					</CallTestFunction>
				</TestStep>
				<TestStep Name="GetModuleProfile">
					<CallTestFunction Name="GetModuleProfile">
						<Parameter>strTmpString</Parameter>
						<OutParameter>uint16CurModuleProfile</OutParameter>
					</CallTestFunction>
				</TestStep>
				<TestStep Name="GetSubModuleProfile">
					<CallTestFunction Name="GetSubModuleProfile">
						<Parameter>strTmpString</Parameter>
						<OutParameter>uint16CurSubModuleProfile</OutParameter>
					</CallTestFunction>
				</TestStep>
				<TestStep Name="DumpProfileInfo">
					<Description Id="10" Param0="uint16CurDeviceProfile" Param1="uint16CurModuleProfile" Param2="uint16CurSubModuleProfile" Param3="u32ProfileCounter" Level="Output">Module[{3}] : DeviceProfile '{0}' ; ModuleProfile '{1}' ; SubModuleProfile '{2}'</Description>
					<Compare>
						<Equal>
							<Value1>bIgnoreProfileID</Value1>
							<Value2>true</Value2>
							<GotoStep>IndicateThatAtleastOneModuleMatch</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CompareDeviceProfile">
					<Compare>
						<NotEqual>
							<Value1>uint16CurDeviceProfile</Value1>
							<Value2>5003</Value2>
							<WriteLine Id="11" Param0="uint16CurDeviceProfile" Level="Output">Skip Profile  (Test Device Profile '5003' != Cur Device Profile '{0}')</WriteLine>
						</NotEqual>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>uint16CurDeviceProfile</Value1>
							<Value2>5003</Value2>
							<GotoStep>ProfileLoopEnd</GotoStep>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep Name="CompareModuleProfile">
					<Compare>
						<NotEqual>
							<Value1>uint16CurModuleProfile</Value1>
							<Value2>2011</Value2>
							<WriteLine Id="12" Param0="uint16CurModuleProfile" Level="Output">Skip Profile  (Test Module Profile '2011' != Cur Module Profile '{0}')</WriteLine>
						</NotEqual>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>uint16CurModuleProfile</Value1>
							<Value2>2011</Value2>
							<GotoStep>ProfileLoopEnd</GotoStep>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep Name="CompareSubModuleProfile">
					<Compare>
						<NotEqual>
							<Value1>uint16CurSubModuleProfile</Value1>
							<Value2>0</Value2>
							<WriteLine Id="13" Param0="uint16CurSubModuleProfile" Level="Output">Skip Profile  (Test SubModule Profile '0' != Cur SubModule Profile '{0}')</WriteLine>
						</NotEqual>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>uint16CurSubModuleProfile</Value1>
							<Value2>0</Value2>
							<GotoStep>ProfileLoopEnd</GotoStep>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep Name="IndicateThatAtleastOneModuleMatch">
					<SetVariable Target="bAtLeastOneModuleMatch">true</SetVariable>
				</TestStep>
				<TestStep Name="GetObjectIndexInclOffset">
					<SetVariable Target="u16ObjectIndexInclOffset">#x6001 + (u32ProfileCounter * #x10)</SetVariable>
					<WriteLine Id="14" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : ObjectIndex '0x{0:X}'</WriteLine>
				</TestStep>
				<TestStep Name="LoadDeviceObjectDictionary">
					<Description Id="15" Level="Verbose">Load 'offline' object dictionary for testing.</Description>
					<GetObjectDictionary Target="odDeviceObjectdictionary">
						<DictionaryType>Offline</DictionaryType>
					</GetObjectDictionary>
					<RaiseErrorOnFailure Id="16">VerifyObject : failed to load offline object dictionary.</RaiseErrorOnFailure>
				</TestStep>
				<TestStep Name="SetObjectRequiredLevel">
					<SetVariable Target="bObjectOrEntryRequiredLevel">1</SetVariable>
					<WriteLine Id="17" Param0="u16ObjectIndexInclOffset" Level="Verbose">0x{0:X4} 'Device Status Configuration' may be available</WriteLine>
				</TestStep>
				<TestStep Name="CheckIfObjectExists">
					<GetObjectDescription SourceDictionary="odDeviceObjectdictionary" Index="u16ObjectIndexInclOffset" SubIndex="-1"></GetObjectDescription>
					<GotoOnSuccess>CallCheckObjectDescription</GotoOnSuccess>
				</TestStep>
				<TestStep Name="HandleNotExistingObject">
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>2</Value2>
							<WriteLine Id="18" Param0="u16ObjectIndexInclOffset" Level="Warning">The object 0x{0:X4} 'Device Status Configuration' does not exists.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>1</Value2>
							<WriteLine Id="19" Param0="u16ObjectIndexInclOffset" Level="Output">The object 0x{0:X4} 'Device Status Configuration' does not exists.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>ProfileLoopEnd</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CallCheckObjectDescription">
					<Description Id="20" Param0="u16ObjectIndexInclOffset" Level="Output">Verify the object description 0x{0:X4} 'Device Status Configuration'.</Description>
					<CallTestFunction Name="CheckObjectDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"offline"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>"Device Status Configuration"</Parameter>
						<Parameter>null</Parameter>
						<Parameter>9</Parameter>
						<Parameter>-1</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<GotoStep>ProfileLoopEnd</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="InitEntryBittOffset">
					<SetVariable Target="i32CurrentBitOffset">0</SetVariable>
				</TestStep>
				<TestStep Name="StartSi0">
					<Description Id="21" Level="Output">Start validate SubIndex0</Description>
					<WriteLine Id="22" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : Subindex '0x{0:X}.0'</WriteLine>
				</TestStep>
				<TestStep Name="CallSi0CheckEntryDescription">
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"offline"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>0</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>null</Parameter>
						<Parameter>5</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>null</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>null</Parameter>
						<Parameter>null</Parameter>
						<Parameter>null</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>8</Parameter>
						<Parameter>i32CurrentBitOffset</Parameter>
						<Parameter>true</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="EndSi0">
					<SetVariable Target="i32CurrentBitOffset">16</SetVariable>
				</TestStep>
				<TestStep Name="StartSi1">
					<Description Id="23" Level="Output">Start validate SubIndex1</Description>
					<WriteLine Id="24" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : Subindex '0x{0:X}.1'</WriteLine>
				</TestStep>
				<TestStep Name="SetSi1RequiredLevel">
					<SetVariable Target="bObjectOrEntryRequiredLevel">1</SetVariable>
					<WriteLine Id="25" Param0="u16ObjectIndexInclOffset" Level="Verbose">0x{0:X4}.1 'Pulsing Enabled' may be available</WriteLine>
				</TestStep>
				<TestStep Name="CheckIfSi1Exists">
					<GetObjectDescription SourceDictionary="odDeviceObjectdictionary" Index="u16ObjectIndexInclOffset" SubIndex="1">
						<Type>u16DataType</Type>
					</GetObjectDescription>
					<GotoOnFailure>HandleNotExistingSi1</GotoOnFailure>
				</TestStep>
				<TestStep>
					<Compare>
						<NotEqual>
							<Value1>u16DataType</Value1>
							<Value2>0</Value2>
							<GotoStep>CallSi1CheckEntryDescription</GotoStep>
						</NotEqual>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="26" Param0="u16ObjectIndexInclOffset" Level="Verbose">The entry 0x{0:X4}.1 is defined as a padding entry.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>EndSi1</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="HandleNotExistingSi1">
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="27" Param0="u16ObjectIndexInclOffset" Level="Output">The entry 0x{0:X4}.1 does not exists.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>EndSi1</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CallSi1CheckEntryDescription">
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"offline"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>1</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>"Pulsing Enabled"</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>null</Parameter>
						<Parameter>T</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>i32CurrentBitOffset</Parameter>
						<Parameter>true</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="EndSi1">
					<SetVariable Target="i32CurrentBitOffset">-1</SetVariable>
				</TestStep>
				<TestStep Name="StartSi2">
					<Description Id="28" Level="Output">Start validate SubIndex2</Description>
					<WriteLine Id="29" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : Subindex '0x{0:X}.2'</WriteLine>
				</TestStep>
				<TestStep Name="SetSi2RequiredLevel">
					<SetVariable Target="bObjectOrEntryRequiredLevel">1</SetVariable>
					<WriteLine Id="30" Param0="u16ObjectIndexInclOffset" Level="Verbose">0x{0:X4}.2 'Ramping in progress' may be available</WriteLine>
				</TestStep>
				<TestStep Name="CheckIfSi2Exists">
					<GetObjectDescription SourceDictionary="odDeviceObjectdictionary" Index="u16ObjectIndexInclOffset" SubIndex="2">
						<Type>u16DataType</Type>
					</GetObjectDescription>
					<GotoOnFailure>HandleNotExistingSi2</GotoOnFailure>
				</TestStep>
				<TestStep>
					<Compare>
						<NotEqual>
							<Value1>u16DataType</Value1>
							<Value2>0</Value2>
							<GotoStep>CallSi2CheckEntryDescription</GotoStep>
						</NotEqual>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="31" Param0="u16ObjectIndexInclOffset" Level="Verbose">The entry 0x{0:X4}.2 is defined as a padding entry.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>EndSi2</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="HandleNotExistingSi2">
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="32" Param0="u16ObjectIndexInclOffset" Level="Output">The entry 0x{0:X4}.2 does not exists.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>EndSi2</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CallSi2CheckEntryDescription">
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"offline"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>2</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>"Ramping in progress"</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>null</Parameter>
						<Parameter>T</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>true</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="EndSi2"></TestStep>
				<TestStep Name="StartSi3">
					<Description Id="33" Level="Output">Start validate SubIndex3</Description>
					<WriteLine Id="34" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : Subindex '0x{0:X}.3'</WriteLine>
				</TestStep>
				<TestStep Name="SetSi3RequiredLevel">
					<SetVariable Target="bObjectOrEntryRequiredLevel">1</SetVariable>
					<WriteLine Id="35" Param0="u16ObjectIndexInclOffset" Level="Verbose">0x{0:X4}.3 'Arc Detection Enabled' may be available</WriteLine>
				</TestStep>
				<TestStep Name="CheckIfSi3Exists">
					<GetObjectDescription SourceDictionary="odDeviceObjectdictionary" Index="u16ObjectIndexInclOffset" SubIndex="3">
						<Type>u16DataType</Type>
					</GetObjectDescription>
					<GotoOnFailure>HandleNotExistingSi3</GotoOnFailure>
				</TestStep>
				<TestStep>
					<Compare>
						<NotEqual>
							<Value1>u16DataType</Value1>
							<Value2>0</Value2>
							<GotoStep>CallSi3CheckEntryDescription</GotoStep>
						</NotEqual>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="36" Param0="u16ObjectIndexInclOffset" Level="Verbose">The entry 0x{0:X4}.3 is defined as a padding entry.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>EndSi3</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="HandleNotExistingSi3">
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="37" Param0="u16ObjectIndexInclOffset" Level="Output">The entry 0x{0:X4}.3 does not exists.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>EndSi3</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CallSi3CheckEntryDescription">
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"offline"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>3</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>"Arc Detection Enabled"</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>null</Parameter>
						<Parameter>T</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>true</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="EndSi3"></TestStep>
				<TestStep Name="StartSi4">
					<Description Id="38" Level="Output">Start validate SubIndex4</Description>
					<WriteLine Id="39" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : Subindex '0x{0:X}.4'</WriteLine>
				</TestStep>
				<TestStep Name="SetSi4RequiredLevel">
					<SetVariable Target="bObjectOrEntryRequiredLevel">1</SetVariable>
					<WriteLine Id="40" Param0="u16ObjectIndexInclOffset" Level="Verbose">0x{0:X4}.4 'Arc Reaction Enabled' may be available</WriteLine>
				</TestStep>
				<TestStep Name="CheckIfSi4Exists">
					<GetObjectDescription SourceDictionary="odDeviceObjectdictionary" Index="u16ObjectIndexInclOffset" SubIndex="4">
						<Type>u16DataType</Type>
					</GetObjectDescription>
					<GotoOnFailure>HandleNotExistingSi4</GotoOnFailure>
				</TestStep>
				<TestStep>
					<Compare>
						<NotEqual>
							<Value1>u16DataType</Value1>
							<Value2>0</Value2>
							<GotoStep>CallSi4CheckEntryDescription</GotoStep>
						</NotEqual>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="41" Param0="u16ObjectIndexInclOffset" Level="Verbose">The entry 0x{0:X4}.4 is defined as a padding entry.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>EndSi4</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="HandleNotExistingSi4">
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="42" Param0="u16ObjectIndexInclOffset" Level="Output">The entry 0x{0:X4}.4 does not exists.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>EndSi4</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CallSi4CheckEntryDescription">
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"offline"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>4</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>"Arc Reaction Enabled"</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>null</Parameter>
						<Parameter>T</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>true</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="EndSi4"></TestStep>
				<TestStep Name="StartSi5">
					<Description Id="43" Level="Output">Start validate SubIndex5</Description>
					<WriteLine Id="44" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : Subindex '0x{0:X}.5'</WriteLine>
				</TestStep>
				<TestStep Name="SetSi5RequiredLevel">
					<SetVariable Target="bObjectOrEntryRequiredLevel">1</SetVariable>
					<WriteLine Id="45" Param0="u16ObjectIndexInclOffset" Level="Verbose">0x{0:X4}.5 'CEX Enabled' may be available</WriteLine>
				</TestStep>
				<TestStep Name="CheckIfSi5Exists">
					<GetObjectDescription SourceDictionary="odDeviceObjectdictionary" Index="u16ObjectIndexInclOffset" SubIndex="5">
						<Type>u16DataType</Type>
					</GetObjectDescription>
					<GotoOnFailure>HandleNotExistingSi5</GotoOnFailure>
				</TestStep>
				<TestStep>
					<Compare>
						<NotEqual>
							<Value1>u16DataType</Value1>
							<Value2>0</Value2>
							<GotoStep>CallSi5CheckEntryDescription</GotoStep>
						</NotEqual>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="46" Param0="u16ObjectIndexInclOffset" Level="Verbose">The entry 0x{0:X4}.5 is defined as a padding entry.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>EndSi5</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="HandleNotExistingSi5">
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="47" Param0="u16ObjectIndexInclOffset" Level="Output">The entry 0x{0:X4}.5 does not exists.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>EndSi5</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CallSi5CheckEntryDescription">
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"offline"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>5</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>"CEX Enabled"</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>null</Parameter>
						<Parameter>T</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>true</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="EndSi5"></TestStep>
				<TestStep Name="StartSi6">
					<Description Id="48" Level="Output">Start validate SubIndex6</Description>
					<WriteLine Id="49" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : Subindex '0x{0:X}.6'</WriteLine>
				</TestStep>
				<TestStep Name="SetSi6RequiredLevel">
					<SetVariable Target="bObjectOrEntryRequiredLevel">1</SetVariable>
					<WriteLine Id="50" Param0="u16ObjectIndexInclOffset" Level="Verbose">0x{0:X4}.6 'CEX Locked' may be available</WriteLine>
				</TestStep>
				<TestStep Name="CheckIfSi6Exists">
					<GetObjectDescription SourceDictionary="odDeviceObjectdictionary" Index="u16ObjectIndexInclOffset" SubIndex="6">
						<Type>u16DataType</Type>
					</GetObjectDescription>
					<GotoOnFailure>HandleNotExistingSi6</GotoOnFailure>
				</TestStep>
				<TestStep>
					<Compare>
						<NotEqual>
							<Value1>u16DataType</Value1>
							<Value2>0</Value2>
							<GotoStep>CallSi6CheckEntryDescription</GotoStep>
						</NotEqual>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="51" Param0="u16ObjectIndexInclOffset" Level="Verbose">The entry 0x{0:X4}.6 is defined as a padding entry.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>EndSi6</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="HandleNotExistingSi6">
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="52" Param0="u16ObjectIndexInclOffset" Level="Output">The entry 0x{0:X4}.6 does not exists.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>EndSi6</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CallSi6CheckEntryDescription">
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"offline"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>6</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>"CEX Locked"</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>null</Parameter>
						<Parameter>T</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>true</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="EndSi6"></TestStep>
				<TestStep Name="StartSi7">
					<Description Id="53" Level="Output">Start validate SubIndex7</Description>
					<WriteLine Id="54" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : Subindex '0x{0:X}.7'</WriteLine>
				</TestStep>
				<TestStep Name="SetSi7RequiredLevel">
					<SetVariable Target="bObjectOrEntryRequiredLevel">1</SetVariable>
					<WriteLine Id="55" Param0="u16ObjectIndexInclOffset" Level="Verbose">0x{0:X4}.7 'Frequency Tuned' may be available</WriteLine>
				</TestStep>
				<TestStep Name="CheckIfSi7Exists">
					<GetObjectDescription SourceDictionary="odDeviceObjectdictionary" Index="u16ObjectIndexInclOffset" SubIndex="7">
						<Type>u16DataType</Type>
					</GetObjectDescription>
					<GotoOnFailure>HandleNotExistingSi7</GotoOnFailure>
				</TestStep>
				<TestStep>
					<Compare>
						<NotEqual>
							<Value1>u16DataType</Value1>
							<Value2>0</Value2>
							<GotoStep>CallSi7CheckEntryDescription</GotoStep>
						</NotEqual>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="56" Param0="u16ObjectIndexInclOffset" Level="Verbose">The entry 0x{0:X4}.7 is defined as a padding entry.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>EndSi7</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="HandleNotExistingSi7">
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="57" Param0="u16ObjectIndexInclOffset" Level="Output">The entry 0x{0:X4}.7 does not exists.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>EndSi7</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CallSi7CheckEntryDescription">
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"offline"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>7</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>"Frequency Tuned"</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>null</Parameter>
						<Parameter>T</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>true</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="EndSi7"></TestStep>
				<TestStep Name="StartSi8">
					<Description Id="58" Level="Output">Start validate SubIndex8</Description>
					<WriteLine Id="59" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : Subindex '0x{0:X}.8'</WriteLine>
				</TestStep>
				<TestStep Name="SetSi8RequiredLevel">
					<SetVariable Target="bObjectOrEntryRequiredLevel">1</SetVariable>
					<WriteLine Id="60" Param0="u16ObjectIndexInclOffset" Level="Verbose">0x{0:X4}.8 'Joule Mode: Energy limit reached' may be available</WriteLine>
				</TestStep>
				<TestStep Name="CheckIfSi8Exists">
					<GetObjectDescription SourceDictionary="odDeviceObjectdictionary" Index="u16ObjectIndexInclOffset" SubIndex="8">
						<Type>u16DataType</Type>
					</GetObjectDescription>
					<GotoOnFailure>HandleNotExistingSi8</GotoOnFailure>
				</TestStep>
				<TestStep>
					<Compare>
						<NotEqual>
							<Value1>u16DataType</Value1>
							<Value2>0</Value2>
							<GotoStep>CallSi8CheckEntryDescription</GotoStep>
						</NotEqual>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="61" Param0="u16ObjectIndexInclOffset" Level="Verbose">The entry 0x{0:X4}.8 is defined as a padding entry.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>EndSi8</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="HandleNotExistingSi8">
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="62" Param0="u16ObjectIndexInclOffset" Level="Output">The entry 0x{0:X4}.8 does not exists.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>EndSi8</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CallSi8CheckEntryDescription">
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"offline"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>8</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>"Joule Mode: Energy limit reached"</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>null</Parameter>
						<Parameter>T</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>true</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="EndSi8"></TestStep>
				<TestStep Name="StartSi9">
					<Description Id="63" Level="Output">Start validate SubIndex9</Description>
					<WriteLine Id="64" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : Subindex '0x{0:X}.9'</WriteLine>
				</TestStep>
				<TestStep Name="SetSi9RequiredLevel">
					<SetVariable Target="bObjectOrEntryRequiredLevel">1</SetVariable>
					<WriteLine Id="65" Param0="u16ObjectIndexInclOffset" Level="Verbose">0x{0:X4}.9 'Process Timer: End of process time' may be available</WriteLine>
				</TestStep>
				<TestStep Name="CheckIfSi9Exists">
					<GetObjectDescription SourceDictionary="odDeviceObjectdictionary" Index="u16ObjectIndexInclOffset" SubIndex="9">
						<Type>u16DataType</Type>
					</GetObjectDescription>
					<GotoOnFailure>HandleNotExistingSi9</GotoOnFailure>
				</TestStep>
				<TestStep>
					<Compare>
						<NotEqual>
							<Value1>u16DataType</Value1>
							<Value2>0</Value2>
							<GotoStep>CallSi9CheckEntryDescription</GotoStep>
						</NotEqual>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="66" Param0="u16ObjectIndexInclOffset" Level="Verbose">The entry 0x{0:X4}.9 is defined as a padding entry.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>EndSi9</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="HandleNotExistingSi9">
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="67" Param0="u16ObjectIndexInclOffset" Level="Output">The entry 0x{0:X4}.9 does not exists.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>EndSi9</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CallSi9CheckEntryDescription">
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"offline"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>9</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>"Process Timer: End of process time"</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>null</Parameter>
						<Parameter>T</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>true</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="EndSi9"></TestStep>
				<TestStep Name="CheckReservedEntryRange_10_to_255">
					<Description Id="68" Level="Output">Start check reserved entry range 10 to 255</Description>
					<CallTestFunction Name="CheckReservedEntryRange">
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>10</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>odDeviceObjectdictionary</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="ProfileLoopEnd">
					<Compare>
						<Equal>
							<Value1>bAtLeastOneModuleMatch</Value1>
							<Value2>false</Value2>
							<GotoStep>HandleAbortTestCaseOnFirstError</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="HandleAbortTestCaseOnFirstError">
					<Compare>
						<Equal>
							<Value1>bAbortTestCaseOnFirstError</Value1>
							<Value2>false</Value2>
							<GotoStep>ProfileLoopIncrement</GotoStep>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>strResult</Value1>
							<Value2>EmptyString</Value2>
							<GotoStep>ProfileLoopIncrement</GotoStep>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="69" Level="Output">Object verification for all following modules abort because an error was already detected for the current module.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>END</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="ProfileLoopIncrement">
					<SetVariable Target="u32ProfileCounter">u32ProfileCounter + 1</SetVariable>
					<Compare>
						<Greater>
							<Value1>u32CurrentProfilesLength</Value1>
							<Value2>u32ProfileCounter</Value2>
							<GotoStep>ProfileLoopStart</GotoStep>
						</Greater>
					</Compare>
				</TestStep>
				<TestStep Name="END">
					<Compare>
						<NotEqual>
							<Value1>bAtLeastOneModuleMatch</Value1>
							<Value2>true</Value2>
							<SkipCase Id="70">SKIP TEST(no module/channel supports the current profile)</SkipCase>
						</NotEqual>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bDEBUG</Value1>
							<Value2>true</Value2>
							<WriteLine Id="71" Param0="strResult" Level="Verbose">DEBUG | Result : '{0}'.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>strResult</Value1>
							<Value2>EmptyString</Value2>
							<ReturnSuccess Id="72">Test succeed</ReturnSuccess>
						</Equal>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>strResult</Value1>
							<Value2>EmptyString</Value2>
							<RaiseError Id="73"></RaiseError>
						</NotEqual>
					</Compare>
				</TestStep>
			</TestCase>
			<TestCase Name="online | 0x6001 (Device Status Configuration)" CaseId="4">
				<Description>
					<PreCondition>- The device profile is 5003
- The module profile is 2011
- The submodule profile is 0</PreCondition>
					<Action>- Iterate over all online defined modules/channels and if the PreCondition matches the following operations are done:
- Get the online description of object 0x6001(+module specific offset) 'Device Status Configuration' and all entries
 Check:
    (Name)
    BitSize
    DataType
    Rx / Tx mappable
    Default Data
    MinData
    Flags       </Action>
					<PostCondition>Error if
- mandatory object / entry is not defined
- an optional object exists and the entries are invalid
- Object / entry description does not match with the specification</PostCondition>
					<ProposalForSolution>- Define the missing objects
- correct object / entry description</ProposalForSolution>
					<References>
						<Reference Specification="ETG.5003.2011"></Reference>
					</References>
					<Mandatory>true</Mandatory>
				</Description>
				<TestStep Name="InitResult">
					<SetVariable Target="strResult">EmptyString</SetVariable>
				</TestStep>
				<TestStep Name="CheckIfOdAvailable">
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Mailbox</Value1>
							<Value2>false</Value2>
							<SkipCase Id="1">DuT does not support mailbox.</SkipCase>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Mailbox.CoE</Value1>
							<Value2>false</Value2>
							<SkipCase Id="2">DuT does not support CoE.</SkipCase>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Mailbox.CoE.SdoInfo</Value1>
							<Value2>false</Value2>
							<SkipCase Id="3">DuT does not support SDO Info.</SkipCase>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="InitAtLeastOneProfileMatch">
					<SetVariable Target="bAtLeastOneModuleMatch">false</SetVariable>
				</TestStep>
				<TestStep Name="GetCurrentProfileList">
					<SizeOf UInt32Var="u32Tmp">arrOnlineProfiles</SizeOf>
					<Compare>
						<Equal>
							<Value1>u32Tmp</Value1>
							<Value2>0</Value2>
							<CallTestFunction Name="GetCurrentProfileList">
								<Parameter>"online"</Parameter>
								<Parameter>"SafeOP"</Parameter>
								<OutParameter>arrOnlineProfiles</OutParameter>
							</CallTestFunction>
						</Equal>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>u32Tmp</Value1>
							<Value2>0</Value2>
							<WriteLine Id="4" Param0="arrOnlineProfiles" Level="Verbose">Use previously created profile list ({0})</WriteLine>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep>
					<SizeOf UInt32Var="u32Tmp">arrOnlineProfiles</SizeOf>
				</TestStep>
				<TestStep>
					<InitArray TargetArray="arrCurrentProfiles" Length="u32Tmp"></InitArray>
				</TestStep>
				<TestStep>
					<CopyArray>
						<SourceArray>arrOnlineProfiles</SourceArray>
						<DestinationArray>arrCurrentProfiles</DestinationArray>
						<Length>u32Tmp</Length>
					</CopyArray>
				</TestStep>
				<TestStep Name="InitProfileLoopCounter">
					<SetVariable Target="u32ProfileCounter">0</SetVariable>
				</TestStep>
				<TestStep Name="GetProfileArrayLength">
					<SizeOf UInt32Var="u32CurrentProfilesLength">arrCurrentProfiles</SizeOf>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="5" Param0="u32CurrentProfilesLength" Level="Verbose">'{0}' Profile(s) defined online.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>u32CurrentProfilesLength</Value1>
							<Value2>0</Value2>
							<SkipCase Id="6">Skip case | no profile defined.</SkipCase>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="ProfileLoopStart">
					<GetArrayItem SourceArray="arrCurrentProfiles" Target="strTmpString" Index="u32ProfileCounter"></GetArrayItem>
				</TestStep>
				<TestStep Name="CheckProfileInformationString">
					<Compare>
						<Equal>
							<Value1>strTmpString</Value1>
							<Value2>null</Value2>
							<RaiseError Id="7" Param0="u32ProfileCounter">Profile Info element [{0}] is null.</RaiseError>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>strTmpString</Value1>
							<Value2>EmptyString</Value2>
							<RaiseError Id="8" Param0="u32ProfileCounter">Profile Info element [{0}] is an empty string.</RaiseError>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="GetDeviceProfile">
					<CallTestFunction Name="GetDeviceProfile">
						<Parameter>strTmpString</Parameter>
						<OutParameter>uint16CurDeviceProfile</OutParameter>
					</CallTestFunction>
				</TestStep>
				<TestStep Name="GetModuleProfile">
					<CallTestFunction Name="GetModuleProfile">
						<Parameter>strTmpString</Parameter>
						<OutParameter>uint16CurModuleProfile</OutParameter>
					</CallTestFunction>
				</TestStep>
				<TestStep Name="GetSubModuleProfile">
					<CallTestFunction Name="GetSubModuleProfile">
						<Parameter>strTmpString</Parameter>
						<OutParameter>uint16CurSubModuleProfile</OutParameter>
					</CallTestFunction>
				</TestStep>
				<TestStep Name="DumpProfileInfo">
					<Description Id="9" Param0="uint16CurDeviceProfile" Param1="uint16CurModuleProfile" Param2="uint16CurSubModuleProfile" Param3="u32ProfileCounter" Level="Output">Module[{3}] : DeviceProfile '{0}' ; ModuleProfile '{1}' ; SubModuleProfile '{2}'</Description>
					<Compare>
						<Equal>
							<Value1>bIgnoreProfileID</Value1>
							<Value2>true</Value2>
							<GotoStep>IndicateThatAtleastOneModuleMatch</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CompareDeviceProfile">
					<Compare>
						<NotEqual>
							<Value1>uint16CurDeviceProfile</Value1>
							<Value2>5003</Value2>
							<WriteLine Id="10" Param0="uint16CurDeviceProfile" Level="Output">Skip Profile  (Test Device Profile '5003' != Cur Device Profile '{0}')</WriteLine>
						</NotEqual>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>uint16CurDeviceProfile</Value1>
							<Value2>5003</Value2>
							<GotoStep>ProfileLoopEnd</GotoStep>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep Name="CompareModuleProfile">
					<Compare>
						<NotEqual>
							<Value1>uint16CurModuleProfile</Value1>
							<Value2>2011</Value2>
							<WriteLine Id="11" Param0="uint16CurModuleProfile" Level="Output">Skip Profile  (Test Module Profile '2011' != Cur Module Profile '{0}')</WriteLine>
						</NotEqual>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>uint16CurModuleProfile</Value1>
							<Value2>2011</Value2>
							<GotoStep>ProfileLoopEnd</GotoStep>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep Name="CompareSubModuleProfile">
					<Compare>
						<NotEqual>
							<Value1>uint16CurSubModuleProfile</Value1>
							<Value2>0</Value2>
							<WriteLine Id="12" Param0="uint16CurSubModuleProfile" Level="Output">Skip Profile  (Test SubModule Profile '0' != Cur SubModule Profile '{0}')</WriteLine>
						</NotEqual>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>uint16CurSubModuleProfile</Value1>
							<Value2>0</Value2>
							<GotoStep>ProfileLoopEnd</GotoStep>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep Name="IndicateThatAtleastOneModuleMatch">
					<SetVariable Target="bAtLeastOneModuleMatch">true</SetVariable>
				</TestStep>
				<TestStep Name="GetObjectIndexInclOffset">
					<SetVariable Target="u16ObjectIndexInclOffset">#x6001 + (u32ProfileCounter * #x10)</SetVariable>
					<WriteLine Id="13" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : ObjectIndex '0x{0:X}'</WriteLine>
				</TestStep>
				<TestStep Name="LoadDeviceObjectDictionary">
					<Description Id="14" Level="Verbose">Load 'online' object dictionary for testing.</Description>
					<GetObjectDictionary Target="odDeviceObjectdictionary">
						<DictionaryType>Online</DictionaryType>
					</GetObjectDictionary>
					<RaiseErrorOnFailure Id="15">VerifyObject : failed to load online object dictionary.</RaiseErrorOnFailure>
				</TestStep>
				<TestStep Name="SetObjectRequiredLevel">
					<SetVariable Target="bObjectOrEntryRequiredLevel">1</SetVariable>
					<WriteLine Id="16" Param0="u16ObjectIndexInclOffset" Level="Verbose">0x{0:X4} 'Device Status Configuration' may be available</WriteLine>
				</TestStep>
				<TestStep Name="CheckIfObjectExists">
					<GetObjectDescription SourceDictionary="odDeviceObjectdictionary" Index="u16ObjectIndexInclOffset" SubIndex="-1"></GetObjectDescription>
					<GotoOnSuccess>CallCheckObjectDescription</GotoOnSuccess>
				</TestStep>
				<TestStep Name="HandleNotExistingObject">
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>2</Value2>
							<WriteLine Id="17" Param0="u16ObjectIndexInclOffset" Level="Warning">The object 0x{0:X4} 'Device Status Configuration' does not exists.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>1</Value2>
							<WriteLine Id="18" Param0="u16ObjectIndexInclOffset" Level="Output">The object 0x{0:X4} 'Device Status Configuration' does not exists.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>ProfileLoopEnd</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CallCheckObjectDescription">
					<Description Id="19" Param0="u16ObjectIndexInclOffset" Level="Output">Verify the object description 0x{0:X4} 'Device Status Configuration'.</Description>
					<CallTestFunction Name="CheckObjectDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"online"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>"Device Status Configuration"</Parameter>
						<Parameter>null</Parameter>
						<Parameter>9</Parameter>
						<Parameter>-1</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<GotoStep>ProfileLoopEnd</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="InitEntryBittOffset">
					<SetVariable Target="i32CurrentBitOffset">0</SetVariable>
				</TestStep>
				<TestStep Name="StartSi0">
					<Description Id="20" Level="Output">Start validate SubIndex0</Description>
					<WriteLine Id="21" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : Subindex '0x{0:X}.0'</WriteLine>
				</TestStep>
				<TestStep Name="CallSi0CheckEntryDescription">
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"online"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>0</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>null</Parameter>
						<Parameter>5</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>null</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>null</Parameter>
						<Parameter>null</Parameter>
						<Parameter>null</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>8</Parameter>
						<Parameter>i32CurrentBitOffset</Parameter>
						<Parameter>true</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="EndSi0">
					<SetVariable Target="i32CurrentBitOffset">16</SetVariable>
				</TestStep>
				<TestStep Name="StartSi1">
					<Description Id="22" Level="Output">Start validate SubIndex1</Description>
					<WriteLine Id="23" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : Subindex '0x{0:X}.1'</WriteLine>
				</TestStep>
				<TestStep Name="SetSi1RequiredLevel">
					<SetVariable Target="bObjectOrEntryRequiredLevel">1</SetVariable>
					<WriteLine Id="24" Param0="u16ObjectIndexInclOffset" Level="Verbose">0x{0:X4}.1 'Pulsing Enabled' may be available</WriteLine>
				</TestStep>
				<TestStep Name="CheckIfSi1Exists">
					<GetObjectDescription SourceDictionary="odDeviceObjectdictionary" Index="u16ObjectIndexInclOffset" SubIndex="1">
						<Type>u16DataType</Type>
					</GetObjectDescription>
					<GotoOnFailure>HandleNotExistingSi1</GotoOnFailure>
				</TestStep>
				<TestStep>
					<Compare>
						<NotEqual>
							<Value1>u16DataType</Value1>
							<Value2>0</Value2>
							<GotoStep>CallSi1CheckEntryDescription</GotoStep>
						</NotEqual>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="25" Param0="u16ObjectIndexInclOffset" Level="Verbose">The entry 0x{0:X4}.1 is defined as a padding entry.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>EndSi1</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="HandleNotExistingSi1">
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="26" Param0="u16ObjectIndexInclOffset" Level="Output">The entry 0x{0:X4}.1 does not exists.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>EndSi1</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CallSi1CheckEntryDescription">
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"online"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>1</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>"Pulsing Enabled"</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>null</Parameter>
						<Parameter>T</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>i32CurrentBitOffset</Parameter>
						<Parameter>true</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="EndSi1">
					<SetVariable Target="i32CurrentBitOffset">-1</SetVariable>
				</TestStep>
				<TestStep Name="StartSi2">
					<Description Id="27" Level="Output">Start validate SubIndex2</Description>
					<WriteLine Id="28" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : Subindex '0x{0:X}.2'</WriteLine>
				</TestStep>
				<TestStep Name="SetSi2RequiredLevel">
					<SetVariable Target="bObjectOrEntryRequiredLevel">1</SetVariable>
					<WriteLine Id="29" Param0="u16ObjectIndexInclOffset" Level="Verbose">0x{0:X4}.2 'Ramping in progress' may be available</WriteLine>
				</TestStep>
				<TestStep Name="CheckIfSi2Exists">
					<GetObjectDescription SourceDictionary="odDeviceObjectdictionary" Index="u16ObjectIndexInclOffset" SubIndex="2">
						<Type>u16DataType</Type>
					</GetObjectDescription>
					<GotoOnFailure>HandleNotExistingSi2</GotoOnFailure>
				</TestStep>
				<TestStep>
					<Compare>
						<NotEqual>
							<Value1>u16DataType</Value1>
							<Value2>0</Value2>
							<GotoStep>CallSi2CheckEntryDescription</GotoStep>
						</NotEqual>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="30" Param0="u16ObjectIndexInclOffset" Level="Verbose">The entry 0x{0:X4}.2 is defined as a padding entry.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>EndSi2</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="HandleNotExistingSi2">
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="31" Param0="u16ObjectIndexInclOffset" Level="Output">The entry 0x{0:X4}.2 does not exists.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>EndSi2</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CallSi2CheckEntryDescription">
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"online"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>2</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>"Ramping in progress"</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>null</Parameter>
						<Parameter>T</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>true</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="EndSi2"></TestStep>
				<TestStep Name="StartSi3">
					<Description Id="32" Level="Output">Start validate SubIndex3</Description>
					<WriteLine Id="33" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : Subindex '0x{0:X}.3'</WriteLine>
				</TestStep>
				<TestStep Name="SetSi3RequiredLevel">
					<SetVariable Target="bObjectOrEntryRequiredLevel">1</SetVariable>
					<WriteLine Id="34" Param0="u16ObjectIndexInclOffset" Level="Verbose">0x{0:X4}.3 'Arc Detection Enabled' may be available</WriteLine>
				</TestStep>
				<TestStep Name="CheckIfSi3Exists">
					<GetObjectDescription SourceDictionary="odDeviceObjectdictionary" Index="u16ObjectIndexInclOffset" SubIndex="3">
						<Type>u16DataType</Type>
					</GetObjectDescription>
					<GotoOnFailure>HandleNotExistingSi3</GotoOnFailure>
				</TestStep>
				<TestStep>
					<Compare>
						<NotEqual>
							<Value1>u16DataType</Value1>
							<Value2>0</Value2>
							<GotoStep>CallSi3CheckEntryDescription</GotoStep>
						</NotEqual>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="35" Param0="u16ObjectIndexInclOffset" Level="Verbose">The entry 0x{0:X4}.3 is defined as a padding entry.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>EndSi3</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="HandleNotExistingSi3">
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="36" Param0="u16ObjectIndexInclOffset" Level="Output">The entry 0x{0:X4}.3 does not exists.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>EndSi3</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CallSi3CheckEntryDescription">
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"online"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>3</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>"Arc Detection Enabled"</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>null</Parameter>
						<Parameter>T</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>true</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="EndSi3"></TestStep>
				<TestStep Name="StartSi4">
					<Description Id="37" Level="Output">Start validate SubIndex4</Description>
					<WriteLine Id="38" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : Subindex '0x{0:X}.4'</WriteLine>
				</TestStep>
				<TestStep Name="SetSi4RequiredLevel">
					<SetVariable Target="bObjectOrEntryRequiredLevel">1</SetVariable>
					<WriteLine Id="39" Param0="u16ObjectIndexInclOffset" Level="Verbose">0x{0:X4}.4 'Arc Reaction Enabled' may be available</WriteLine>
				</TestStep>
				<TestStep Name="CheckIfSi4Exists">
					<GetObjectDescription SourceDictionary="odDeviceObjectdictionary" Index="u16ObjectIndexInclOffset" SubIndex="4">
						<Type>u16DataType</Type>
					</GetObjectDescription>
					<GotoOnFailure>HandleNotExistingSi4</GotoOnFailure>
				</TestStep>
				<TestStep>
					<Compare>
						<NotEqual>
							<Value1>u16DataType</Value1>
							<Value2>0</Value2>
							<GotoStep>CallSi4CheckEntryDescription</GotoStep>
						</NotEqual>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="40" Param0="u16ObjectIndexInclOffset" Level="Verbose">The entry 0x{0:X4}.4 is defined as a padding entry.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>EndSi4</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="HandleNotExistingSi4">
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="41" Param0="u16ObjectIndexInclOffset" Level="Output">The entry 0x{0:X4}.4 does not exists.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>EndSi4</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CallSi4CheckEntryDescription">
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"online"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>4</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>"Arc Reaction Enabled"</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>null</Parameter>
						<Parameter>T</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>true</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="EndSi4"></TestStep>
				<TestStep Name="StartSi5">
					<Description Id="42" Level="Output">Start validate SubIndex5</Description>
					<WriteLine Id="43" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : Subindex '0x{0:X}.5'</WriteLine>
				</TestStep>
				<TestStep Name="SetSi5RequiredLevel">
					<SetVariable Target="bObjectOrEntryRequiredLevel">1</SetVariable>
					<WriteLine Id="44" Param0="u16ObjectIndexInclOffset" Level="Verbose">0x{0:X4}.5 'CEX Enabled' may be available</WriteLine>
				</TestStep>
				<TestStep Name="CheckIfSi5Exists">
					<GetObjectDescription SourceDictionary="odDeviceObjectdictionary" Index="u16ObjectIndexInclOffset" SubIndex="5">
						<Type>u16DataType</Type>
					</GetObjectDescription>
					<GotoOnFailure>HandleNotExistingSi5</GotoOnFailure>
				</TestStep>
				<TestStep>
					<Compare>
						<NotEqual>
							<Value1>u16DataType</Value1>
							<Value2>0</Value2>
							<GotoStep>CallSi5CheckEntryDescription</GotoStep>
						</NotEqual>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="45" Param0="u16ObjectIndexInclOffset" Level="Verbose">The entry 0x{0:X4}.5 is defined as a padding entry.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>EndSi5</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="HandleNotExistingSi5">
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="46" Param0="u16ObjectIndexInclOffset" Level="Output">The entry 0x{0:X4}.5 does not exists.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>EndSi5</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CallSi5CheckEntryDescription">
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"online"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>5</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>"CEX Enabled"</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>null</Parameter>
						<Parameter>T</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>true</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="EndSi5"></TestStep>
				<TestStep Name="StartSi6">
					<Description Id="47" Level="Output">Start validate SubIndex6</Description>
					<WriteLine Id="48" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : Subindex '0x{0:X}.6'</WriteLine>
				</TestStep>
				<TestStep Name="SetSi6RequiredLevel">
					<SetVariable Target="bObjectOrEntryRequiredLevel">1</SetVariable>
					<WriteLine Id="49" Param0="u16ObjectIndexInclOffset" Level="Verbose">0x{0:X4}.6 'CEX Locked' may be available</WriteLine>
				</TestStep>
				<TestStep Name="CheckIfSi6Exists">
					<GetObjectDescription SourceDictionary="odDeviceObjectdictionary" Index="u16ObjectIndexInclOffset" SubIndex="6">
						<Type>u16DataType</Type>
					</GetObjectDescription>
					<GotoOnFailure>HandleNotExistingSi6</GotoOnFailure>
				</TestStep>
				<TestStep>
					<Compare>
						<NotEqual>
							<Value1>u16DataType</Value1>
							<Value2>0</Value2>
							<GotoStep>CallSi6CheckEntryDescription</GotoStep>
						</NotEqual>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="50" Param0="u16ObjectIndexInclOffset" Level="Verbose">The entry 0x{0:X4}.6 is defined as a padding entry.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>EndSi6</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="HandleNotExistingSi6">
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="51" Param0="u16ObjectIndexInclOffset" Level="Output">The entry 0x{0:X4}.6 does not exists.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>EndSi6</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CallSi6CheckEntryDescription">
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"online"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>6</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>"CEX Locked"</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>null</Parameter>
						<Parameter>T</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>true</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="EndSi6"></TestStep>
				<TestStep Name="StartSi7">
					<Description Id="52" Level="Output">Start validate SubIndex7</Description>
					<WriteLine Id="53" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : Subindex '0x{0:X}.7'</WriteLine>
				</TestStep>
				<TestStep Name="SetSi7RequiredLevel">
					<SetVariable Target="bObjectOrEntryRequiredLevel">1</SetVariable>
					<WriteLine Id="54" Param0="u16ObjectIndexInclOffset" Level="Verbose">0x{0:X4}.7 'Frequency Tuned' may be available</WriteLine>
				</TestStep>
				<TestStep Name="CheckIfSi7Exists">
					<GetObjectDescription SourceDictionary="odDeviceObjectdictionary" Index="u16ObjectIndexInclOffset" SubIndex="7">
						<Type>u16DataType</Type>
					</GetObjectDescription>
					<GotoOnFailure>HandleNotExistingSi7</GotoOnFailure>
				</TestStep>
				<TestStep>
					<Compare>
						<NotEqual>
							<Value1>u16DataType</Value1>
							<Value2>0</Value2>
							<GotoStep>CallSi7CheckEntryDescription</GotoStep>
						</NotEqual>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="55" Param0="u16ObjectIndexInclOffset" Level="Verbose">The entry 0x{0:X4}.7 is defined as a padding entry.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>EndSi7</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="HandleNotExistingSi7">
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="56" Param0="u16ObjectIndexInclOffset" Level="Output">The entry 0x{0:X4}.7 does not exists.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>EndSi7</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CallSi7CheckEntryDescription">
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"online"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>7</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>"Frequency Tuned"</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>null</Parameter>
						<Parameter>T</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>true</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="EndSi7"></TestStep>
				<TestStep Name="StartSi8">
					<Description Id="57" Level="Output">Start validate SubIndex8</Description>
					<WriteLine Id="58" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : Subindex '0x{0:X}.8'</WriteLine>
				</TestStep>
				<TestStep Name="SetSi8RequiredLevel">
					<SetVariable Target="bObjectOrEntryRequiredLevel">1</SetVariable>
					<WriteLine Id="59" Param0="u16ObjectIndexInclOffset" Level="Verbose">0x{0:X4}.8 'Joule Mode: Energy limit reached' may be available</WriteLine>
				</TestStep>
				<TestStep Name="CheckIfSi8Exists">
					<GetObjectDescription SourceDictionary="odDeviceObjectdictionary" Index="u16ObjectIndexInclOffset" SubIndex="8">
						<Type>u16DataType</Type>
					</GetObjectDescription>
					<GotoOnFailure>HandleNotExistingSi8</GotoOnFailure>
				</TestStep>
				<TestStep>
					<Compare>
						<NotEqual>
							<Value1>u16DataType</Value1>
							<Value2>0</Value2>
							<GotoStep>CallSi8CheckEntryDescription</GotoStep>
						</NotEqual>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="60" Param0="u16ObjectIndexInclOffset" Level="Verbose">The entry 0x{0:X4}.8 is defined as a padding entry.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>EndSi8</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="HandleNotExistingSi8">
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="61" Param0="u16ObjectIndexInclOffset" Level="Output">The entry 0x{0:X4}.8 does not exists.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>EndSi8</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CallSi8CheckEntryDescription">
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"online"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>8</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>"Joule Mode: Energy limit reached"</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>null</Parameter>
						<Parameter>T</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>true</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="EndSi8"></TestStep>
				<TestStep Name="StartSi9">
					<Description Id="62" Level="Output">Start validate SubIndex9</Description>
					<WriteLine Id="63" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : Subindex '0x{0:X}.9'</WriteLine>
				</TestStep>
				<TestStep Name="SetSi9RequiredLevel">
					<SetVariable Target="bObjectOrEntryRequiredLevel">1</SetVariable>
					<WriteLine Id="64" Param0="u16ObjectIndexInclOffset" Level="Verbose">0x{0:X4}.9 'Process Timer: End of process time' may be available</WriteLine>
				</TestStep>
				<TestStep Name="CheckIfSi9Exists">
					<GetObjectDescription SourceDictionary="odDeviceObjectdictionary" Index="u16ObjectIndexInclOffset" SubIndex="9">
						<Type>u16DataType</Type>
					</GetObjectDescription>
					<GotoOnFailure>HandleNotExistingSi9</GotoOnFailure>
				</TestStep>
				<TestStep>
					<Compare>
						<NotEqual>
							<Value1>u16DataType</Value1>
							<Value2>0</Value2>
							<GotoStep>CallSi9CheckEntryDescription</GotoStep>
						</NotEqual>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="65" Param0="u16ObjectIndexInclOffset" Level="Verbose">The entry 0x{0:X4}.9 is defined as a padding entry.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>EndSi9</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="HandleNotExistingSi9">
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="66" Param0="u16ObjectIndexInclOffset" Level="Output">The entry 0x{0:X4}.9 does not exists.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>EndSi9</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CallSi9CheckEntryDescription">
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"online"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>9</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>"Process Timer: End of process time"</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>null</Parameter>
						<Parameter>T</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>true</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="EndSi9"></TestStep>
				<TestStep Name="CheckReservedEntryRange_10_to_255">
					<Description Id="67" Level="Output">Start check reserved entry range 10 to 255</Description>
					<CallTestFunction Name="CheckReservedEntryRange">
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>10</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>odDeviceObjectdictionary</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="ProfileLoopEnd">
					<Compare>
						<Equal>
							<Value1>bAtLeastOneModuleMatch</Value1>
							<Value2>false</Value2>
							<GotoStep>HandleAbortTestCaseOnFirstError</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="HandleAbortTestCaseOnFirstError">
					<Compare>
						<Equal>
							<Value1>bAbortTestCaseOnFirstError</Value1>
							<Value2>false</Value2>
							<GotoStep>ProfileLoopIncrement</GotoStep>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>strResult</Value1>
							<Value2>EmptyString</Value2>
							<GotoStep>ProfileLoopIncrement</GotoStep>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="68" Level="Output">Object verification for all following modules abort because an error was already detected for the current module.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>END</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="ProfileLoopIncrement">
					<SetVariable Target="u32ProfileCounter">u32ProfileCounter + 1</SetVariable>
					<Compare>
						<Greater>
							<Value1>u32CurrentProfilesLength</Value1>
							<Value2>u32ProfileCounter</Value2>
							<GotoStep>ProfileLoopStart</GotoStep>
						</Greater>
					</Compare>
				</TestStep>
				<TestStep Name="END">
					<Compare>
						<NotEqual>
							<Value1>bAtLeastOneModuleMatch</Value1>
							<Value2>true</Value2>
							<SkipCase Id="69">SKIP TEST(no module/channel supports the current profile)</SkipCase>
						</NotEqual>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bDEBUG</Value1>
							<Value2>true</Value2>
							<WriteLine Id="70" Param0="strResult" Level="Verbose">DEBUG | Result : '{0}'.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>strResult</Value1>
							<Value2>EmptyString</Value2>
							<ReturnSuccess Id="71">Test succeed</ReturnSuccess>
						</Equal>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>strResult</Value1>
							<Value2>EmptyString</Value2>
							<RaiseError Id="72"></RaiseError>
						</NotEqual>
					</Compare>
				</TestStep>
			</TestCase>
			<TestCase Name="offline | 0x6002 (Device Status Errors)" CaseId="5">
				<Description>
					<PreCondition>- The device profile is 5003
- The module profile is 2011
- The submodule profile is 0</PreCondition>
					<Action>- Iterate over all offline defined modules/channels and if the PreCondition matches the following operations are done:
- Get the offline description of object 0x6002(+module specific offset) 'Device Status Errors' and all entries
 Check:
    (Name)
    BitSize
    DataType
    Rx / Tx mappable
    Default Data
    MinData
    Flags       </Action>
					<PostCondition>Error if
- mandatory object / entry is not defined
- an optional object exists and the entries are invalid
- Object / entry description does not match with the specification</PostCondition>
					<ProposalForSolution>- Define the missing objects
- correct object / entry description</ProposalForSolution>
					<References>
						<Reference Specification="ETG.5003.2011"></Reference>
					</References>
					<Mandatory>true</Mandatory>
				</Description>
				<TestStep Name="InitResult">
					<SetVariable Target="strResult">EmptyString</SetVariable>
				</TestStep>
				<TestStep Name="CheckIfOdAvailable">
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Mailbox</Value1>
							<Value2>false</Value2>
							<SkipCase Id="1">DuT does not support mailbox.</SkipCase>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Mailbox.CoE</Value1>
							<Value2>false</Value2>
							<SkipCase Id="2">DuT does not support CoE.</SkipCase>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep>
					<GetObjectDictionary Target="odDeviceObjectdictionary">
						<DictionaryType>Offline</DictionaryType>
					</GetObjectDictionary>
					<SkipOnFailure Id="3">No offline object dictionary defined.</SkipOnFailure>
				</TestStep>
				<TestStep>
					<GetObjectList Count="u32Tmp" Target="odDeviceObjectdictionaryList" SourceDict="odDeviceObjectdictionary"></GetObjectList>
					<Compare>
						<Equal>
							<Value1>u32Tmp</Value1>
							<Value2>0</Value2>
							<SkipCase Id="4">No offline object dictionary defined.</SkipCase>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="InitAtLeastOneProfileMatch">
					<SetVariable Target="bAtLeastOneModuleMatch">false</SetVariable>
				</TestStep>
				<TestStep Name="GetCurrentProfileList">
					<SizeOf UInt32Var="u32Tmp">arrOfflineProfiles</SizeOf>
					<Compare>
						<Equal>
							<Value1>u32Tmp</Value1>
							<Value2>0</Value2>
							<CallTestFunction Name="GetCurrentProfileList">
								<Parameter>"offline"</Parameter>
								<Parameter>"SafeOP"</Parameter>
								<OutParameter>arrOfflineProfiles</OutParameter>
							</CallTestFunction>
						</Equal>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>u32Tmp</Value1>
							<Value2>0</Value2>
							<WriteLine Id="5" Param0="arrOfflineProfiles" Level="Verbose">Use previously created profile list ({0})</WriteLine>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep>
					<SizeOf UInt32Var="u32Tmp">arrOfflineProfiles</SizeOf>
				</TestStep>
				<TestStep>
					<InitArray TargetArray="arrCurrentProfiles" Length="u32Tmp"></InitArray>
				</TestStep>
				<TestStep>
					<CopyArray>
						<SourceArray>arrOfflineProfiles</SourceArray>
						<DestinationArray>arrCurrentProfiles</DestinationArray>
						<Length>u32Tmp</Length>
					</CopyArray>
				</TestStep>
				<TestStep Name="InitProfileLoopCounter">
					<SetVariable Target="u32ProfileCounter">0</SetVariable>
				</TestStep>
				<TestStep Name="GetProfileArrayLength">
					<SizeOf UInt32Var="u32CurrentProfilesLength">arrCurrentProfiles</SizeOf>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="6" Param0="u32CurrentProfilesLength" Level="Verbose">'{0}' Profile(s) defined offline.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>u32CurrentProfilesLength</Value1>
							<Value2>0</Value2>
							<SkipCase Id="7">Skip case | no profile defined.</SkipCase>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="ProfileLoopStart">
					<GetArrayItem SourceArray="arrCurrentProfiles" Target="strTmpString" Index="u32ProfileCounter"></GetArrayItem>
				</TestStep>
				<TestStep Name="CheckProfileInformationString">
					<Compare>
						<Equal>
							<Value1>strTmpString</Value1>
							<Value2>null</Value2>
							<RaiseError Id="8" Param0="u32ProfileCounter">Profile Info element [{0}] is null.</RaiseError>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>strTmpString</Value1>
							<Value2>EmptyString</Value2>
							<RaiseError Id="9" Param0="u32ProfileCounter">Profile Info element [{0}] is an empty string.</RaiseError>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="GetDeviceProfile">
					<CallTestFunction Name="GetDeviceProfile">
						<Parameter>strTmpString</Parameter>
						<OutParameter>uint16CurDeviceProfile</OutParameter>
					</CallTestFunction>
				</TestStep>
				<TestStep Name="GetModuleProfile">
					<CallTestFunction Name="GetModuleProfile">
						<Parameter>strTmpString</Parameter>
						<OutParameter>uint16CurModuleProfile</OutParameter>
					</CallTestFunction>
				</TestStep>
				<TestStep Name="GetSubModuleProfile">
					<CallTestFunction Name="GetSubModuleProfile">
						<Parameter>strTmpString</Parameter>
						<OutParameter>uint16CurSubModuleProfile</OutParameter>
					</CallTestFunction>
				</TestStep>
				<TestStep Name="DumpProfileInfo">
					<Description Id="10" Param0="uint16CurDeviceProfile" Param1="uint16CurModuleProfile" Param2="uint16CurSubModuleProfile" Param3="u32ProfileCounter" Level="Output">Module[{3}] : DeviceProfile '{0}' ; ModuleProfile '{1}' ; SubModuleProfile '{2}'</Description>
					<Compare>
						<Equal>
							<Value1>bIgnoreProfileID</Value1>
							<Value2>true</Value2>
							<GotoStep>IndicateThatAtleastOneModuleMatch</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CompareDeviceProfile">
					<Compare>
						<NotEqual>
							<Value1>uint16CurDeviceProfile</Value1>
							<Value2>5003</Value2>
							<WriteLine Id="11" Param0="uint16CurDeviceProfile" Level="Output">Skip Profile  (Test Device Profile '5003' != Cur Device Profile '{0}')</WriteLine>
						</NotEqual>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>uint16CurDeviceProfile</Value1>
							<Value2>5003</Value2>
							<GotoStep>ProfileLoopEnd</GotoStep>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep Name="CompareModuleProfile">
					<Compare>
						<NotEqual>
							<Value1>uint16CurModuleProfile</Value1>
							<Value2>2011</Value2>
							<WriteLine Id="12" Param0="uint16CurModuleProfile" Level="Output">Skip Profile  (Test Module Profile '2011' != Cur Module Profile '{0}')</WriteLine>
						</NotEqual>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>uint16CurModuleProfile</Value1>
							<Value2>2011</Value2>
							<GotoStep>ProfileLoopEnd</GotoStep>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep Name="CompareSubModuleProfile">
					<Compare>
						<NotEqual>
							<Value1>uint16CurSubModuleProfile</Value1>
							<Value2>0</Value2>
							<WriteLine Id="13" Param0="uint16CurSubModuleProfile" Level="Output">Skip Profile  (Test SubModule Profile '0' != Cur SubModule Profile '{0}')</WriteLine>
						</NotEqual>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>uint16CurSubModuleProfile</Value1>
							<Value2>0</Value2>
							<GotoStep>ProfileLoopEnd</GotoStep>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep Name="IndicateThatAtleastOneModuleMatch">
					<SetVariable Target="bAtLeastOneModuleMatch">true</SetVariable>
				</TestStep>
				<TestStep Name="GetObjectIndexInclOffset">
					<SetVariable Target="u16ObjectIndexInclOffset">#x6002 + (u32ProfileCounter * #x10)</SetVariable>
					<WriteLine Id="14" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : ObjectIndex '0x{0:X}'</WriteLine>
				</TestStep>
				<TestStep Name="LoadDeviceObjectDictionary">
					<Description Id="15" Level="Verbose">Load 'offline' object dictionary for testing.</Description>
					<GetObjectDictionary Target="odDeviceObjectdictionary">
						<DictionaryType>Offline</DictionaryType>
					</GetObjectDictionary>
					<RaiseErrorOnFailure Id="16">VerifyObject : failed to load offline object dictionary.</RaiseErrorOnFailure>
				</TestStep>
				<TestStep Name="CallCheckObjectDescription">
					<Description Id="17" Param0="u16ObjectIndexInclOffset" Level="Output">Verify the object description 0x{0:X4} 'Device Status Errors'.</Description>
					<CallTestFunction Name="CheckObjectDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"offline"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>"Device Status Errors"</Parameter>
						<Parameter>null</Parameter>
						<Parameter>9</Parameter>
						<Parameter>-1</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<GotoStep>ProfileLoopEnd</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="InitEntryBittOffset">
					<SetVariable Target="i32CurrentBitOffset">0</SetVariable>
				</TestStep>
				<TestStep Name="StartSi0">
					<Description Id="18" Level="Output">Start validate SubIndex0</Description>
					<WriteLine Id="19" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : Subindex '0x{0:X}.0'</WriteLine>
				</TestStep>
				<TestStep Name="CallSi0CheckEntryDescription">
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"offline"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>0</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>null</Parameter>
						<Parameter>5</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>null</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>null</Parameter>
						<Parameter>null</Parameter>
						<Parameter>null</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>8</Parameter>
						<Parameter>i32CurrentBitOffset</Parameter>
						<Parameter>true</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="EndSi0">
					<SetVariable Target="i32CurrentBitOffset">16</SetVariable>
				</TestStep>
				<TestStep Name="StartSi1">
					<Description Id="20" Level="Output">Start validate SubIndex1</Description>
					<WriteLine Id="21" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : Subindex '0x{0:X}.1'</WriteLine>
				</TestStep>
				<TestStep Name="CallSi1CheckEntryDescription">
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"offline"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>1</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>"Interlock open"</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>null</Parameter>
						<Parameter>T</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>i32CurrentBitOffset</Parameter>
						<Parameter>true</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="EndSi1">
					<SetVariable Target="i32CurrentBitOffset">i32CurrentBitOffset + 1</SetVariable>
				</TestStep>
				<TestStep Name="StartSi2">
					<Description Id="22" Level="Output">Start validate SubIndex2</Description>
					<WriteLine Id="23" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : Subindex '0x{0:X}.2'</WriteLine>
				</TestStep>
				<TestStep Name="CallSi2CheckEntryDescription">
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"offline"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>2</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>"OverTemp Error"</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>null</Parameter>
						<Parameter>T</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>i32CurrentBitOffset</Parameter>
						<Parameter>true</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="EndSi2">
					<SetVariable Target="i32CurrentBitOffset">i32CurrentBitOffset + 1</SetVariable>
				</TestStep>
				<TestStep Name="StartSi3">
					<Description Id="24" Level="Output">Start validate SubIndex3</Description>
					<WriteLine Id="25" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : Subindex '0x{0:X}.3'</WriteLine>
				</TestStep>
				<TestStep Name="SetSi3RequiredLevel">
					<SetVariable Target="bObjectOrEntryRequiredLevel">1</SetVariable>
					<WriteLine Id="26" Param0="u16ObjectIndexInclOffset" Level="Verbose">0x{0:X4}.3 'Cooling / Fan Error' may be available</WriteLine>
				</TestStep>
				<TestStep Name="CheckIfSi3Exists">
					<GetObjectDescription SourceDictionary="odDeviceObjectdictionary" Index="u16ObjectIndexInclOffset" SubIndex="3">
						<Type>u16DataType</Type>
					</GetObjectDescription>
					<GotoOnFailure>HandleNotExistingSi3</GotoOnFailure>
				</TestStep>
				<TestStep>
					<Compare>
						<NotEqual>
							<Value1>u16DataType</Value1>
							<Value2>0</Value2>
							<GotoStep>CallSi3CheckEntryDescription</GotoStep>
						</NotEqual>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="27" Param0="u16ObjectIndexInclOffset" Level="Verbose">The entry 0x{0:X4}.3 is defined as a padding entry.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>EndSi3</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="HandleNotExistingSi3">
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="28" Param0="u16ObjectIndexInclOffset" Level="Output">The entry 0x{0:X4}.3 does not exists.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>EndSi3</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CallSi3CheckEntryDescription">
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"offline"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>3</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>"Cooling / Fan Error"</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>null</Parameter>
						<Parameter>T</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>i32CurrentBitOffset</Parameter>
						<Parameter>true</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="EndSi3">
					<SetVariable Target="i32CurrentBitOffset">-1</SetVariable>
				</TestStep>
				<TestStep Name="StartSi4">
					<Description Id="29" Level="Output">Start validate SubIndex4</Description>
					<WriteLine Id="30" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : Subindex '0x{0:X}.4'</WriteLine>
				</TestStep>
				<TestStep Name="SetSi4RequiredLevel">
					<SetVariable Target="bObjectOrEntryRequiredLevel">1</SetVariable>
					<WriteLine Id="31" Param0="u16ObjectIndexInclOffset" Level="Verbose">0x{0:X4}.4 'AC line Error' may be available</WriteLine>
				</TestStep>
				<TestStep Name="CheckIfSi4Exists">
					<GetObjectDescription SourceDictionary="odDeviceObjectdictionary" Index="u16ObjectIndexInclOffset" SubIndex="4">
						<Type>u16DataType</Type>
					</GetObjectDescription>
					<GotoOnFailure>HandleNotExistingSi4</GotoOnFailure>
				</TestStep>
				<TestStep>
					<Compare>
						<NotEqual>
							<Value1>u16DataType</Value1>
							<Value2>0</Value2>
							<GotoStep>CallSi4CheckEntryDescription</GotoStep>
						</NotEqual>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="32" Param0="u16ObjectIndexInclOffset" Level="Verbose">The entry 0x{0:X4}.4 is defined as a padding entry.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>EndSi4</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="HandleNotExistingSi4">
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="33" Param0="u16ObjectIndexInclOffset" Level="Output">The entry 0x{0:X4}.4 does not exists.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>EndSi4</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CallSi4CheckEntryDescription">
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"offline"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>4</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>"AC line Error"</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>null</Parameter>
						<Parameter>T</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>true</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="EndSi4"></TestStep>
				<TestStep Name="CheckReservedEntryRange_5_to_255">
					<Description Id="34" Level="Output">Start check reserved entry range 5 to 255</Description>
					<CallTestFunction Name="CheckReservedEntryRange">
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>5</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>odDeviceObjectdictionary</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="ProfileLoopEnd">
					<Compare>
						<Equal>
							<Value1>bAtLeastOneModuleMatch</Value1>
							<Value2>false</Value2>
							<GotoStep>HandleAbortTestCaseOnFirstError</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="HandleAbortTestCaseOnFirstError">
					<Compare>
						<Equal>
							<Value1>bAbortTestCaseOnFirstError</Value1>
							<Value2>false</Value2>
							<GotoStep>ProfileLoopIncrement</GotoStep>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>strResult</Value1>
							<Value2>EmptyString</Value2>
							<GotoStep>ProfileLoopIncrement</GotoStep>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="35" Level="Output">Object verification for all following modules abort because an error was already detected for the current module.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>END</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="ProfileLoopIncrement">
					<SetVariable Target="u32ProfileCounter">u32ProfileCounter + 1</SetVariable>
					<Compare>
						<Greater>
							<Value1>u32CurrentProfilesLength</Value1>
							<Value2>u32ProfileCounter</Value2>
							<GotoStep>ProfileLoopStart</GotoStep>
						</Greater>
					</Compare>
				</TestStep>
				<TestStep Name="END">
					<Compare>
						<NotEqual>
							<Value1>bAtLeastOneModuleMatch</Value1>
							<Value2>true</Value2>
							<SkipCase Id="36">SKIP TEST(no module/channel supports the current profile)</SkipCase>
						</NotEqual>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bDEBUG</Value1>
							<Value2>true</Value2>
							<WriteLine Id="37" Param0="strResult" Level="Verbose">DEBUG | Result : '{0}'.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>strResult</Value1>
							<Value2>EmptyString</Value2>
							<ReturnSuccess Id="38">Test succeed</ReturnSuccess>
						</Equal>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>strResult</Value1>
							<Value2>EmptyString</Value2>
							<RaiseError Id="39"></RaiseError>
						</NotEqual>
					</Compare>
				</TestStep>
			</TestCase>
			<TestCase Name="online | 0x6002 (Device Status Errors)" CaseId="6">
				<Description>
					<PreCondition>- The device profile is 5003
- The module profile is 2011
- The submodule profile is 0</PreCondition>
					<Action>- Iterate over all online defined modules/channels and if the PreCondition matches the following operations are done:
- Get the online description of object 0x6002(+module specific offset) 'Device Status Errors' and all entries
 Check:
    (Name)
    BitSize
    DataType
    Rx / Tx mappable
    Default Data
    MinData
    Flags       </Action>
					<PostCondition>Error if
- mandatory object / entry is not defined
- an optional object exists and the entries are invalid
- Object / entry description does not match with the specification</PostCondition>
					<ProposalForSolution>- Define the missing objects
- correct object / entry description</ProposalForSolution>
					<References>
						<Reference Specification="ETG.5003.2011"></Reference>
					</References>
					<Mandatory>true</Mandatory>
				</Description>
				<TestStep Name="InitResult">
					<SetVariable Target="strResult">EmptyString</SetVariable>
				</TestStep>
				<TestStep Name="CheckIfOdAvailable">
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Mailbox</Value1>
							<Value2>false</Value2>
							<SkipCase Id="1">DuT does not support mailbox.</SkipCase>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Mailbox.CoE</Value1>
							<Value2>false</Value2>
							<SkipCase Id="2">DuT does not support CoE.</SkipCase>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Mailbox.CoE.SdoInfo</Value1>
							<Value2>false</Value2>
							<SkipCase Id="3">DuT does not support SDO Info.</SkipCase>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="InitAtLeastOneProfileMatch">
					<SetVariable Target="bAtLeastOneModuleMatch">false</SetVariable>
				</TestStep>
				<TestStep Name="GetCurrentProfileList">
					<SizeOf UInt32Var="u32Tmp">arrOnlineProfiles</SizeOf>
					<Compare>
						<Equal>
							<Value1>u32Tmp</Value1>
							<Value2>0</Value2>
							<CallTestFunction Name="GetCurrentProfileList">
								<Parameter>"online"</Parameter>
								<Parameter>"SafeOP"</Parameter>
								<OutParameter>arrOnlineProfiles</OutParameter>
							</CallTestFunction>
						</Equal>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>u32Tmp</Value1>
							<Value2>0</Value2>
							<WriteLine Id="4" Param0="arrOnlineProfiles" Level="Verbose">Use previously created profile list ({0})</WriteLine>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep>
					<SizeOf UInt32Var="u32Tmp">arrOnlineProfiles</SizeOf>
				</TestStep>
				<TestStep>
					<InitArray TargetArray="arrCurrentProfiles" Length="u32Tmp"></InitArray>
				</TestStep>
				<TestStep>
					<CopyArray>
						<SourceArray>arrOnlineProfiles</SourceArray>
						<DestinationArray>arrCurrentProfiles</DestinationArray>
						<Length>u32Tmp</Length>
					</CopyArray>
				</TestStep>
				<TestStep Name="InitProfileLoopCounter">
					<SetVariable Target="u32ProfileCounter">0</SetVariable>
				</TestStep>
				<TestStep Name="GetProfileArrayLength">
					<SizeOf UInt32Var="u32CurrentProfilesLength">arrCurrentProfiles</SizeOf>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="5" Param0="u32CurrentProfilesLength" Level="Verbose">'{0}' Profile(s) defined online.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>u32CurrentProfilesLength</Value1>
							<Value2>0</Value2>
							<SkipCase Id="6">Skip case | no profile defined.</SkipCase>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="ProfileLoopStart">
					<GetArrayItem SourceArray="arrCurrentProfiles" Target="strTmpString" Index="u32ProfileCounter"></GetArrayItem>
				</TestStep>
				<TestStep Name="CheckProfileInformationString">
					<Compare>
						<Equal>
							<Value1>strTmpString</Value1>
							<Value2>null</Value2>
							<RaiseError Id="7" Param0="u32ProfileCounter">Profile Info element [{0}] is null.</RaiseError>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>strTmpString</Value1>
							<Value2>EmptyString</Value2>
							<RaiseError Id="8" Param0="u32ProfileCounter">Profile Info element [{0}] is an empty string.</RaiseError>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="GetDeviceProfile">
					<CallTestFunction Name="GetDeviceProfile">
						<Parameter>strTmpString</Parameter>
						<OutParameter>uint16CurDeviceProfile</OutParameter>
					</CallTestFunction>
				</TestStep>
				<TestStep Name="GetModuleProfile">
					<CallTestFunction Name="GetModuleProfile">
						<Parameter>strTmpString</Parameter>
						<OutParameter>uint16CurModuleProfile</OutParameter>
					</CallTestFunction>
				</TestStep>
				<TestStep Name="GetSubModuleProfile">
					<CallTestFunction Name="GetSubModuleProfile">
						<Parameter>strTmpString</Parameter>
						<OutParameter>uint16CurSubModuleProfile</OutParameter>
					</CallTestFunction>
				</TestStep>
				<TestStep Name="DumpProfileInfo">
					<Description Id="9" Param0="uint16CurDeviceProfile" Param1="uint16CurModuleProfile" Param2="uint16CurSubModuleProfile" Param3="u32ProfileCounter" Level="Output">Module[{3}] : DeviceProfile '{0}' ; ModuleProfile '{1}' ; SubModuleProfile '{2}'</Description>
					<Compare>
						<Equal>
							<Value1>bIgnoreProfileID</Value1>
							<Value2>true</Value2>
							<GotoStep>IndicateThatAtleastOneModuleMatch</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CompareDeviceProfile">
					<Compare>
						<NotEqual>
							<Value1>uint16CurDeviceProfile</Value1>
							<Value2>5003</Value2>
							<WriteLine Id="10" Param0="uint16CurDeviceProfile" Level="Output">Skip Profile  (Test Device Profile '5003' != Cur Device Profile '{0}')</WriteLine>
						</NotEqual>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>uint16CurDeviceProfile</Value1>
							<Value2>5003</Value2>
							<GotoStep>ProfileLoopEnd</GotoStep>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep Name="CompareModuleProfile">
					<Compare>
						<NotEqual>
							<Value1>uint16CurModuleProfile</Value1>
							<Value2>2011</Value2>
							<WriteLine Id="11" Param0="uint16CurModuleProfile" Level="Output">Skip Profile  (Test Module Profile '2011' != Cur Module Profile '{0}')</WriteLine>
						</NotEqual>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>uint16CurModuleProfile</Value1>
							<Value2>2011</Value2>
							<GotoStep>ProfileLoopEnd</GotoStep>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep Name="CompareSubModuleProfile">
					<Compare>
						<NotEqual>
							<Value1>uint16CurSubModuleProfile</Value1>
							<Value2>0</Value2>
							<WriteLine Id="12" Param0="uint16CurSubModuleProfile" Level="Output">Skip Profile  (Test SubModule Profile '0' != Cur SubModule Profile '{0}')</WriteLine>
						</NotEqual>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>uint16CurSubModuleProfile</Value1>
							<Value2>0</Value2>
							<GotoStep>ProfileLoopEnd</GotoStep>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep Name="IndicateThatAtleastOneModuleMatch">
					<SetVariable Target="bAtLeastOneModuleMatch">true</SetVariable>
				</TestStep>
				<TestStep Name="GetObjectIndexInclOffset">
					<SetVariable Target="u16ObjectIndexInclOffset">#x6002 + (u32ProfileCounter * #x10)</SetVariable>
					<WriteLine Id="13" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : ObjectIndex '0x{0:X}'</WriteLine>
				</TestStep>
				<TestStep Name="LoadDeviceObjectDictionary">
					<Description Id="14" Level="Verbose">Load 'online' object dictionary for testing.</Description>
					<GetObjectDictionary Target="odDeviceObjectdictionary">
						<DictionaryType>Online</DictionaryType>
					</GetObjectDictionary>
					<RaiseErrorOnFailure Id="15">VerifyObject : failed to load online object dictionary.</RaiseErrorOnFailure>
				</TestStep>
				<TestStep Name="CallCheckObjectDescription">
					<Description Id="16" Param0="u16ObjectIndexInclOffset" Level="Output">Verify the object description 0x{0:X4} 'Device Status Errors'.</Description>
					<CallTestFunction Name="CheckObjectDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"online"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>"Device Status Errors"</Parameter>
						<Parameter>null</Parameter>
						<Parameter>9</Parameter>
						<Parameter>-1</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<GotoStep>ProfileLoopEnd</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="InitEntryBittOffset">
					<SetVariable Target="i32CurrentBitOffset">0</SetVariable>
				</TestStep>
				<TestStep Name="StartSi0">
					<Description Id="17" Level="Output">Start validate SubIndex0</Description>
					<WriteLine Id="18" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : Subindex '0x{0:X}.0'</WriteLine>
				</TestStep>
				<TestStep Name="CallSi0CheckEntryDescription">
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"online"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>0</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>null</Parameter>
						<Parameter>5</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>null</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>null</Parameter>
						<Parameter>null</Parameter>
						<Parameter>null</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>8</Parameter>
						<Parameter>i32CurrentBitOffset</Parameter>
						<Parameter>true</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="EndSi0">
					<SetVariable Target="i32CurrentBitOffset">16</SetVariable>
				</TestStep>
				<TestStep Name="StartSi1">
					<Description Id="19" Level="Output">Start validate SubIndex1</Description>
					<WriteLine Id="20" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : Subindex '0x{0:X}.1'</WriteLine>
				</TestStep>
				<TestStep Name="CallSi1CheckEntryDescription">
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"online"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>1</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>"Interlock open"</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>null</Parameter>
						<Parameter>T</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>i32CurrentBitOffset</Parameter>
						<Parameter>true</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="EndSi1">
					<SetVariable Target="i32CurrentBitOffset">i32CurrentBitOffset + 1</SetVariable>
				</TestStep>
				<TestStep Name="StartSi2">
					<Description Id="21" Level="Output">Start validate SubIndex2</Description>
					<WriteLine Id="22" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : Subindex '0x{0:X}.2'</WriteLine>
				</TestStep>
				<TestStep Name="CallSi2CheckEntryDescription">
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"online"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>2</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>"OverTemp Error"</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>null</Parameter>
						<Parameter>T</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>i32CurrentBitOffset</Parameter>
						<Parameter>true</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="EndSi2">
					<SetVariable Target="i32CurrentBitOffset">i32CurrentBitOffset + 1</SetVariable>
				</TestStep>
				<TestStep Name="StartSi3">
					<Description Id="23" Level="Output">Start validate SubIndex3</Description>
					<WriteLine Id="24" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : Subindex '0x{0:X}.3'</WriteLine>
				</TestStep>
				<TestStep Name="SetSi3RequiredLevel">
					<SetVariable Target="bObjectOrEntryRequiredLevel">1</SetVariable>
					<WriteLine Id="25" Param0="u16ObjectIndexInclOffset" Level="Verbose">0x{0:X4}.3 'Cooling / Fan Error' may be available</WriteLine>
				</TestStep>
				<TestStep Name="CheckIfSi3Exists">
					<GetObjectDescription SourceDictionary="odDeviceObjectdictionary" Index="u16ObjectIndexInclOffset" SubIndex="3">
						<Type>u16DataType</Type>
					</GetObjectDescription>
					<GotoOnFailure>HandleNotExistingSi3</GotoOnFailure>
				</TestStep>
				<TestStep>
					<Compare>
						<NotEqual>
							<Value1>u16DataType</Value1>
							<Value2>0</Value2>
							<GotoStep>CallSi3CheckEntryDescription</GotoStep>
						</NotEqual>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="26" Param0="u16ObjectIndexInclOffset" Level="Verbose">The entry 0x{0:X4}.3 is defined as a padding entry.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>EndSi3</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="HandleNotExistingSi3">
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="27" Param0="u16ObjectIndexInclOffset" Level="Output">The entry 0x{0:X4}.3 does not exists.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>EndSi3</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CallSi3CheckEntryDescription">
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"online"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>3</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>"Cooling / Fan Error"</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>null</Parameter>
						<Parameter>T</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>i32CurrentBitOffset</Parameter>
						<Parameter>true</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="EndSi3">
					<SetVariable Target="i32CurrentBitOffset">-1</SetVariable>
				</TestStep>
				<TestStep Name="StartSi4">
					<Description Id="28" Level="Output">Start validate SubIndex4</Description>
					<WriteLine Id="29" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : Subindex '0x{0:X}.4'</WriteLine>
				</TestStep>
				<TestStep Name="SetSi4RequiredLevel">
					<SetVariable Target="bObjectOrEntryRequiredLevel">1</SetVariable>
					<WriteLine Id="30" Param0="u16ObjectIndexInclOffset" Level="Verbose">0x{0:X4}.4 'AC line Error' may be available</WriteLine>
				</TestStep>
				<TestStep Name="CheckIfSi4Exists">
					<GetObjectDescription SourceDictionary="odDeviceObjectdictionary" Index="u16ObjectIndexInclOffset" SubIndex="4">
						<Type>u16DataType</Type>
					</GetObjectDescription>
					<GotoOnFailure>HandleNotExistingSi4</GotoOnFailure>
				</TestStep>
				<TestStep>
					<Compare>
						<NotEqual>
							<Value1>u16DataType</Value1>
							<Value2>0</Value2>
							<GotoStep>CallSi4CheckEntryDescription</GotoStep>
						</NotEqual>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="31" Param0="u16ObjectIndexInclOffset" Level="Verbose">The entry 0x{0:X4}.4 is defined as a padding entry.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>EndSi4</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="HandleNotExistingSi4">
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="32" Param0="u16ObjectIndexInclOffset" Level="Output">The entry 0x{0:X4}.4 does not exists.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>EndSi4</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CallSi4CheckEntryDescription">
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"online"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>4</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>"AC line Error"</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>null</Parameter>
						<Parameter>T</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>true</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="EndSi4"></TestStep>
				<TestStep Name="CheckReservedEntryRange_5_to_255">
					<Description Id="33" Level="Output">Start check reserved entry range 5 to 255</Description>
					<CallTestFunction Name="CheckReservedEntryRange">
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>5</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>odDeviceObjectdictionary</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="ProfileLoopEnd">
					<Compare>
						<Equal>
							<Value1>bAtLeastOneModuleMatch</Value1>
							<Value2>false</Value2>
							<GotoStep>HandleAbortTestCaseOnFirstError</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="HandleAbortTestCaseOnFirstError">
					<Compare>
						<Equal>
							<Value1>bAbortTestCaseOnFirstError</Value1>
							<Value2>false</Value2>
							<GotoStep>ProfileLoopIncrement</GotoStep>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>strResult</Value1>
							<Value2>EmptyString</Value2>
							<GotoStep>ProfileLoopIncrement</GotoStep>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="34" Level="Output">Object verification for all following modules abort because an error was already detected for the current module.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>END</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="ProfileLoopIncrement">
					<SetVariable Target="u32ProfileCounter">u32ProfileCounter + 1</SetVariable>
					<Compare>
						<Greater>
							<Value1>u32CurrentProfilesLength</Value1>
							<Value2>u32ProfileCounter</Value2>
							<GotoStep>ProfileLoopStart</GotoStep>
						</Greater>
					</Compare>
				</TestStep>
				<TestStep Name="END">
					<Compare>
						<NotEqual>
							<Value1>bAtLeastOneModuleMatch</Value1>
							<Value2>true</Value2>
							<SkipCase Id="35">SKIP TEST(no module/channel supports the current profile)</SkipCase>
						</NotEqual>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bDEBUG</Value1>
							<Value2>true</Value2>
							<WriteLine Id="36" Param0="strResult" Level="Verbose">DEBUG | Result : '{0}'.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>strResult</Value1>
							<Value2>EmptyString</Value2>
							<ReturnSuccess Id="37">Test succeed</ReturnSuccess>
						</Equal>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>strResult</Value1>
							<Value2>EmptyString</Value2>
							<RaiseError Id="38"></RaiseError>
						</NotEqual>
					</Compare>
				</TestStep>
			</TestCase>
			<TestCase Name="offline | 0x6003 (Device Status Warnings)" CaseId="7">
				<Description>
					<PreCondition>- The device profile is 5003
- The module profile is 2011
- The submodule profile is 0</PreCondition>
					<Action>- Iterate over all offline defined modules/channels and if the PreCondition matches the following operations are done:
- Get the offline description of object 0x6003(+module specific offset) 'Device Status Warnings' and all entries
 Check:
    (Name)
    BitSize
    DataType
    Rx / Tx mappable
    Default Data
    MinData
    Flags       </Action>
					<PostCondition>Error if
- mandatory object / entry is not defined
- an optional object exists and the entries are invalid
- Object / entry description does not match with the specification</PostCondition>
					<ProposalForSolution>- Define the missing objects
- correct object / entry description</ProposalForSolution>
					<References>
						<Reference Specification="ETG.5003.2011"></Reference>
					</References>
					<Mandatory>true</Mandatory>
				</Description>
				<TestStep Name="InitResult">
					<SetVariable Target="strResult">EmptyString</SetVariable>
				</TestStep>
				<TestStep Name="CheckIfOdAvailable">
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Mailbox</Value1>
							<Value2>false</Value2>
							<SkipCase Id="1">DuT does not support mailbox.</SkipCase>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Mailbox.CoE</Value1>
							<Value2>false</Value2>
							<SkipCase Id="2">DuT does not support CoE.</SkipCase>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep>
					<GetObjectDictionary Target="odDeviceObjectdictionary">
						<DictionaryType>Offline</DictionaryType>
					</GetObjectDictionary>
					<SkipOnFailure Id="3">No offline object dictionary defined.</SkipOnFailure>
				</TestStep>
				<TestStep>
					<GetObjectList Count="u32Tmp" Target="odDeviceObjectdictionaryList" SourceDict="odDeviceObjectdictionary"></GetObjectList>
					<Compare>
						<Equal>
							<Value1>u32Tmp</Value1>
							<Value2>0</Value2>
							<SkipCase Id="4">No offline object dictionary defined.</SkipCase>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="InitAtLeastOneProfileMatch">
					<SetVariable Target="bAtLeastOneModuleMatch">false</SetVariable>
				</TestStep>
				<TestStep Name="GetCurrentProfileList">
					<SizeOf UInt32Var="u32Tmp">arrOfflineProfiles</SizeOf>
					<Compare>
						<Equal>
							<Value1>u32Tmp</Value1>
							<Value2>0</Value2>
							<CallTestFunction Name="GetCurrentProfileList">
								<Parameter>"offline"</Parameter>
								<Parameter>"SafeOP"</Parameter>
								<OutParameter>arrOfflineProfiles</OutParameter>
							</CallTestFunction>
						</Equal>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>u32Tmp</Value1>
							<Value2>0</Value2>
							<WriteLine Id="5" Param0="arrOfflineProfiles" Level="Verbose">Use previously created profile list ({0})</WriteLine>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep>
					<SizeOf UInt32Var="u32Tmp">arrOfflineProfiles</SizeOf>
				</TestStep>
				<TestStep>
					<InitArray TargetArray="arrCurrentProfiles" Length="u32Tmp"></InitArray>
				</TestStep>
				<TestStep>
					<CopyArray>
						<SourceArray>arrOfflineProfiles</SourceArray>
						<DestinationArray>arrCurrentProfiles</DestinationArray>
						<Length>u32Tmp</Length>
					</CopyArray>
				</TestStep>
				<TestStep Name="InitProfileLoopCounter">
					<SetVariable Target="u32ProfileCounter">0</SetVariable>
				</TestStep>
				<TestStep Name="GetProfileArrayLength">
					<SizeOf UInt32Var="u32CurrentProfilesLength">arrCurrentProfiles</SizeOf>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="6" Param0="u32CurrentProfilesLength" Level="Verbose">'{0}' Profile(s) defined offline.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>u32CurrentProfilesLength</Value1>
							<Value2>0</Value2>
							<SkipCase Id="7">Skip case | no profile defined.</SkipCase>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="ProfileLoopStart">
					<GetArrayItem SourceArray="arrCurrentProfiles" Target="strTmpString" Index="u32ProfileCounter"></GetArrayItem>
				</TestStep>
				<TestStep Name="CheckProfileInformationString">
					<Compare>
						<Equal>
							<Value1>strTmpString</Value1>
							<Value2>null</Value2>
							<RaiseError Id="8" Param0="u32ProfileCounter">Profile Info element [{0}] is null.</RaiseError>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>strTmpString</Value1>
							<Value2>EmptyString</Value2>
							<RaiseError Id="9" Param0="u32ProfileCounter">Profile Info element [{0}] is an empty string.</RaiseError>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="GetDeviceProfile">
					<CallTestFunction Name="GetDeviceProfile">
						<Parameter>strTmpString</Parameter>
						<OutParameter>uint16CurDeviceProfile</OutParameter>
					</CallTestFunction>
				</TestStep>
				<TestStep Name="GetModuleProfile">
					<CallTestFunction Name="GetModuleProfile">
						<Parameter>strTmpString</Parameter>
						<OutParameter>uint16CurModuleProfile</OutParameter>
					</CallTestFunction>
				</TestStep>
				<TestStep Name="GetSubModuleProfile">
					<CallTestFunction Name="GetSubModuleProfile">
						<Parameter>strTmpString</Parameter>
						<OutParameter>uint16CurSubModuleProfile</OutParameter>
					</CallTestFunction>
				</TestStep>
				<TestStep Name="DumpProfileInfo">
					<Description Id="10" Param0="uint16CurDeviceProfile" Param1="uint16CurModuleProfile" Param2="uint16CurSubModuleProfile" Param3="u32ProfileCounter" Level="Output">Module[{3}] : DeviceProfile '{0}' ; ModuleProfile '{1}' ; SubModuleProfile '{2}'</Description>
					<Compare>
						<Equal>
							<Value1>bIgnoreProfileID</Value1>
							<Value2>true</Value2>
							<GotoStep>IndicateThatAtleastOneModuleMatch</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CompareDeviceProfile">
					<Compare>
						<NotEqual>
							<Value1>uint16CurDeviceProfile</Value1>
							<Value2>5003</Value2>
							<WriteLine Id="11" Param0="uint16CurDeviceProfile" Level="Output">Skip Profile  (Test Device Profile '5003' != Cur Device Profile '{0}')</WriteLine>
						</NotEqual>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>uint16CurDeviceProfile</Value1>
							<Value2>5003</Value2>
							<GotoStep>ProfileLoopEnd</GotoStep>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep Name="CompareModuleProfile">
					<Compare>
						<NotEqual>
							<Value1>uint16CurModuleProfile</Value1>
							<Value2>2011</Value2>
							<WriteLine Id="12" Param0="uint16CurModuleProfile" Level="Output">Skip Profile  (Test Module Profile '2011' != Cur Module Profile '{0}')</WriteLine>
						</NotEqual>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>uint16CurModuleProfile</Value1>
							<Value2>2011</Value2>
							<GotoStep>ProfileLoopEnd</GotoStep>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep Name="CompareSubModuleProfile">
					<Compare>
						<NotEqual>
							<Value1>uint16CurSubModuleProfile</Value1>
							<Value2>0</Value2>
							<WriteLine Id="13" Param0="uint16CurSubModuleProfile" Level="Output">Skip Profile  (Test SubModule Profile '0' != Cur SubModule Profile '{0}')</WriteLine>
						</NotEqual>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>uint16CurSubModuleProfile</Value1>
							<Value2>0</Value2>
							<GotoStep>ProfileLoopEnd</GotoStep>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep Name="IndicateThatAtleastOneModuleMatch">
					<SetVariable Target="bAtLeastOneModuleMatch">true</SetVariable>
				</TestStep>
				<TestStep Name="GetObjectIndexInclOffset">
					<SetVariable Target="u16ObjectIndexInclOffset">#x6003 + (u32ProfileCounter * #x10)</SetVariable>
					<WriteLine Id="14" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : ObjectIndex '0x{0:X}'</WriteLine>
				</TestStep>
				<TestStep Name="LoadDeviceObjectDictionary">
					<Description Id="15" Level="Verbose">Load 'offline' object dictionary for testing.</Description>
					<GetObjectDictionary Target="odDeviceObjectdictionary">
						<DictionaryType>Offline</DictionaryType>
					</GetObjectDictionary>
					<RaiseErrorOnFailure Id="16">VerifyObject : failed to load offline object dictionary.</RaiseErrorOnFailure>
				</TestStep>
				<TestStep Name="SetObjectRequiredLevel">
					<SetVariable Target="bObjectOrEntryRequiredLevel">1</SetVariable>
					<WriteLine Id="17" Param0="u16ObjectIndexInclOffset" Level="Verbose">0x{0:X4} 'Device Status Warnings' may be available</WriteLine>
				</TestStep>
				<TestStep Name="CheckIfObjectExists">
					<GetObjectDescription SourceDictionary="odDeviceObjectdictionary" Index="u16ObjectIndexInclOffset" SubIndex="-1"></GetObjectDescription>
					<GotoOnSuccess>CallCheckObjectDescription</GotoOnSuccess>
				</TestStep>
				<TestStep Name="HandleNotExistingObject">
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>2</Value2>
							<WriteLine Id="18" Param0="u16ObjectIndexInclOffset" Level="Warning">The object 0x{0:X4} 'Device Status Warnings' does not exists.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>1</Value2>
							<WriteLine Id="19" Param0="u16ObjectIndexInclOffset" Level="Output">The object 0x{0:X4} 'Device Status Warnings' does not exists.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>ProfileLoopEnd</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CallCheckObjectDescription">
					<Description Id="20" Param0="u16ObjectIndexInclOffset" Level="Output">Verify the object description 0x{0:X4} 'Device Status Warnings'.</Description>
					<CallTestFunction Name="CheckObjectDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"offline"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>"Device Status Warnings"</Parameter>
						<Parameter>null</Parameter>
						<Parameter>9</Parameter>
						<Parameter>-1</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<GotoStep>ProfileLoopEnd</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="InitEntryBittOffset">
					<SetVariable Target="i32CurrentBitOffset">0</SetVariable>
				</TestStep>
				<TestStep Name="StartSi0">
					<Description Id="21" Level="Output">Start validate SubIndex0</Description>
					<WriteLine Id="22" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : Subindex '0x{0:X}.0'</WriteLine>
				</TestStep>
				<TestStep Name="CallSi0CheckEntryDescription">
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"offline"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>0</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>null</Parameter>
						<Parameter>5</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>null</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>null</Parameter>
						<Parameter>null</Parameter>
						<Parameter>null</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>8</Parameter>
						<Parameter>i32CurrentBitOffset</Parameter>
						<Parameter>true</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="EndSi0">
					<SetVariable Target="i32CurrentBitOffset">16</SetVariable>
				</TestStep>
				<TestStep Name="StartSi1">
					<Description Id="23" Level="Output">Start validate SubIndex1</Description>
					<WriteLine Id="24" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : Subindex '0x{0:X}.1'</WriteLine>
				</TestStep>
				<TestStep Name="SetSi1RequiredLevel">
					<SetVariable Target="bObjectOrEntryRequiredLevel">1</SetVariable>
					<WriteLine Id="25" Param0="u16ObjectIndexInclOffset" Level="Verbose">0x{0:X4}.1 may be available</WriteLine>
				</TestStep>
				<TestStep Name="CheckIfSi1Exists">
					<GetObjectDescription SourceDictionary="odDeviceObjectdictionary" Index="u16ObjectIndexInclOffset" SubIndex="1">
						<Type>u16DataType</Type>
					</GetObjectDescription>
					<GotoOnFailure>HandleNotExistingSi1</GotoOnFailure>
				</TestStep>
				<TestStep>
					<Compare>
						<NotEqual>
							<Value1>u16DataType</Value1>
							<Value2>0</Value2>
							<GotoStep>CallSi1CheckEntryDescription</GotoStep>
						</NotEqual>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="26" Param0="u16ObjectIndexInclOffset" Level="Verbose">The entry 0x{0:X4}.1 is defined as a padding entry.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>EndSi1</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="HandleNotExistingSi1">
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="27" Param0="u16ObjectIndexInclOffset" Level="Output">The entry 0x{0:X4}.1 does not exists.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>EndSi1</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CallSi1CheckEntryDescription">
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"offline"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>1</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>null</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>null</Parameter>
						<Parameter>T</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>i32CurrentBitOffset</Parameter>
						<Parameter>true</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="EndSi1">
					<SetVariable Target="i32CurrentBitOffset">-1</SetVariable>
				</TestStep>
				<TestStep Name="StartSi2">
					<Description Id="28" Level="Output">Start validate SubIndex2</Description>
					<WriteLine Id="29" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : Subindex '0x{0:X}.2'</WriteLine>
				</TestStep>
				<TestStep Name="SetSi2RequiredLevel">
					<SetVariable Target="bObjectOrEntryRequiredLevel">1</SetVariable>
					<WriteLine Id="30" Param0="u16ObjectIndexInclOffset" Level="Verbose">0x{0:X4}.2 'OverTemp Warning' may be available</WriteLine>
				</TestStep>
				<TestStep Name="CheckIfSi2Exists">
					<GetObjectDescription SourceDictionary="odDeviceObjectdictionary" Index="u16ObjectIndexInclOffset" SubIndex="2">
						<Type>u16DataType</Type>
					</GetObjectDescription>
					<GotoOnFailure>HandleNotExistingSi2</GotoOnFailure>
				</TestStep>
				<TestStep>
					<Compare>
						<NotEqual>
							<Value1>u16DataType</Value1>
							<Value2>0</Value2>
							<GotoStep>CallSi2CheckEntryDescription</GotoStep>
						</NotEqual>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="31" Param0="u16ObjectIndexInclOffset" Level="Verbose">The entry 0x{0:X4}.2 is defined as a padding entry.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>EndSi2</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="HandleNotExistingSi2">
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="32" Param0="u16ObjectIndexInclOffset" Level="Output">The entry 0x{0:X4}.2 does not exists.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>EndSi2</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CallSi2CheckEntryDescription">
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"offline"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>2</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>"OverTemp Warning"</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>null</Parameter>
						<Parameter>T</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>true</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="EndSi2"></TestStep>
				<TestStep Name="StartSi3">
					<Description Id="33" Level="Output">Start validate SubIndex3</Description>
					<WriteLine Id="34" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : Subindex '0x{0:X}.3'</WriteLine>
				</TestStep>
				<TestStep Name="SetSi3RequiredLevel">
					<SetVariable Target="bObjectOrEntryRequiredLevel">1</SetVariable>
					<WriteLine Id="35" Param0="u16ObjectIndexInclOffset" Level="Verbose">0x{0:X4}.3 'Cooling / Fan Warning' may be available</WriteLine>
				</TestStep>
				<TestStep Name="CheckIfSi3Exists">
					<GetObjectDescription SourceDictionary="odDeviceObjectdictionary" Index="u16ObjectIndexInclOffset" SubIndex="3">
						<Type>u16DataType</Type>
					</GetObjectDescription>
					<GotoOnFailure>HandleNotExistingSi3</GotoOnFailure>
				</TestStep>
				<TestStep>
					<Compare>
						<NotEqual>
							<Value1>u16DataType</Value1>
							<Value2>0</Value2>
							<GotoStep>CallSi3CheckEntryDescription</GotoStep>
						</NotEqual>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="36" Param0="u16ObjectIndexInclOffset" Level="Verbose">The entry 0x{0:X4}.3 is defined as a padding entry.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>EndSi3</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="HandleNotExistingSi3">
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="37" Param0="u16ObjectIndexInclOffset" Level="Output">The entry 0x{0:X4}.3 does not exists.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>EndSi3</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CallSi3CheckEntryDescription">
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"offline"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>3</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>"Cooling / Fan Warning"</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>null</Parameter>
						<Parameter>T</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>true</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="EndSi3"></TestStep>
				<TestStep Name="StartSi4">
					<Description Id="38" Level="Output">Start validate SubIndex4</Description>
					<WriteLine Id="39" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : Subindex '0x{0:X}.4'</WriteLine>
				</TestStep>
				<TestStep Name="SetSi4RequiredLevel">
					<SetVariable Target="bObjectOrEntryRequiredLevel">1</SetVariable>
					<WriteLine Id="40" Param0="u16ObjectIndexInclOffset" Level="Verbose">0x{0:X4}.4 'AC line Warning' may be available</WriteLine>
				</TestStep>
				<TestStep Name="CheckIfSi4Exists">
					<GetObjectDescription SourceDictionary="odDeviceObjectdictionary" Index="u16ObjectIndexInclOffset" SubIndex="4">
						<Type>u16DataType</Type>
					</GetObjectDescription>
					<GotoOnFailure>HandleNotExistingSi4</GotoOnFailure>
				</TestStep>
				<TestStep>
					<Compare>
						<NotEqual>
							<Value1>u16DataType</Value1>
							<Value2>0</Value2>
							<GotoStep>CallSi4CheckEntryDescription</GotoStep>
						</NotEqual>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="41" Param0="u16ObjectIndexInclOffset" Level="Verbose">The entry 0x{0:X4}.4 is defined as a padding entry.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>EndSi4</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="HandleNotExistingSi4">
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="42" Param0="u16ObjectIndexInclOffset" Level="Output">The entry 0x{0:X4}.4 does not exists.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>EndSi4</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CallSi4CheckEntryDescription">
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"offline"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>4</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>"AC line Warning"</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>null</Parameter>
						<Parameter>T</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>true</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="EndSi4"></TestStep>
				<TestStep Name="CheckReservedEntryRange_5_to_6">
					<Description Id="43" Level="Output">Start check reserved entry range 5 to 6</Description>
					<CallTestFunction Name="CheckReservedEntryRange">
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>5</Parameter>
						<Parameter>7</Parameter>
						<Parameter>odDeviceObjectdictionary</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="StartSi7">
					<Description Id="44" Level="Output">Start validate SubIndex7</Description>
					<WriteLine Id="45" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : Subindex '0x{0:X}.7'</WriteLine>
				</TestStep>
				<TestStep Name="SetSi7RequiredLevel">
					<SetVariable Target="bObjectOrEntryRequiredLevel">1</SetVariable>
					<WriteLine Id="46" Param0="u16ObjectIndexInclOffset" Level="Verbose">0x{0:X4}.7 'Power Limit Exceeded Warning' may be available</WriteLine>
				</TestStep>
				<TestStep Name="CheckIfSi7Exists">
					<GetObjectDescription SourceDictionary="odDeviceObjectdictionary" Index="u16ObjectIndexInclOffset" SubIndex="7">
						<Type>u16DataType</Type>
					</GetObjectDescription>
					<GotoOnFailure>HandleNotExistingSi7</GotoOnFailure>
				</TestStep>
				<TestStep>
					<Compare>
						<NotEqual>
							<Value1>u16DataType</Value1>
							<Value2>0</Value2>
							<GotoStep>CallSi7CheckEntryDescription</GotoStep>
						</NotEqual>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="47" Param0="u16ObjectIndexInclOffset" Level="Verbose">The entry 0x{0:X4}.7 is defined as a padding entry.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>EndSi7</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="HandleNotExistingSi7">
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="48" Param0="u16ObjectIndexInclOffset" Level="Output">The entry 0x{0:X4}.7 does not exists.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>EndSi7</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CallSi7CheckEntryDescription">
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"offline"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>7</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>"Power Limit Exceeded Warning"</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>null</Parameter>
						<Parameter>T</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>true</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="EndSi7"></TestStep>
				<TestStep Name="CheckReservedEntryRange_8_to_255">
					<Description Id="49" Level="Output">Start check reserved entry range 8 to 255</Description>
					<CallTestFunction Name="CheckReservedEntryRange">
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>8</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>odDeviceObjectdictionary</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="ProfileLoopEnd">
					<Compare>
						<Equal>
							<Value1>bAtLeastOneModuleMatch</Value1>
							<Value2>false</Value2>
							<GotoStep>HandleAbortTestCaseOnFirstError</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="HandleAbortTestCaseOnFirstError">
					<Compare>
						<Equal>
							<Value1>bAbortTestCaseOnFirstError</Value1>
							<Value2>false</Value2>
							<GotoStep>ProfileLoopIncrement</GotoStep>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>strResult</Value1>
							<Value2>EmptyString</Value2>
							<GotoStep>ProfileLoopIncrement</GotoStep>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="50" Level="Output">Object verification for all following modules abort because an error was already detected for the current module.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>END</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="ProfileLoopIncrement">
					<SetVariable Target="u32ProfileCounter">u32ProfileCounter + 1</SetVariable>
					<Compare>
						<Greater>
							<Value1>u32CurrentProfilesLength</Value1>
							<Value2>u32ProfileCounter</Value2>
							<GotoStep>ProfileLoopStart</GotoStep>
						</Greater>
					</Compare>
				</TestStep>
				<TestStep Name="END">
					<Compare>
						<NotEqual>
							<Value1>bAtLeastOneModuleMatch</Value1>
							<Value2>true</Value2>
							<SkipCase Id="51">SKIP TEST(no module/channel supports the current profile)</SkipCase>
						</NotEqual>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bDEBUG</Value1>
							<Value2>true</Value2>
							<WriteLine Id="52" Param0="strResult" Level="Verbose">DEBUG | Result : '{0}'.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>strResult</Value1>
							<Value2>EmptyString</Value2>
							<ReturnSuccess Id="53">Test succeed</ReturnSuccess>
						</Equal>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>strResult</Value1>
							<Value2>EmptyString</Value2>
							<RaiseError Id="54"></RaiseError>
						</NotEqual>
					</Compare>
				</TestStep>
			</TestCase>
			<TestCase Name="online | 0x6003 (Device Status Warnings)" CaseId="8">
				<Description>
					<PreCondition>- The device profile is 5003
- The module profile is 2011
- The submodule profile is 0</PreCondition>
					<Action>- Iterate over all online defined modules/channels and if the PreCondition matches the following operations are done:
- Get the online description of object 0x6003(+module specific offset) 'Device Status Warnings' and all entries
 Check:
    (Name)
    BitSize
    DataType
    Rx / Tx mappable
    Default Data
    MinData
    Flags       </Action>
					<PostCondition>Error if
- mandatory object / entry is not defined
- an optional object exists and the entries are invalid
- Object / entry description does not match with the specification</PostCondition>
					<ProposalForSolution>- Define the missing objects
- correct object / entry description</ProposalForSolution>
					<References>
						<Reference Specification="ETG.5003.2011"></Reference>
					</References>
					<Mandatory>true</Mandatory>
				</Description>
				<TestStep Name="InitResult">
					<SetVariable Target="strResult">EmptyString</SetVariable>
				</TestStep>
				<TestStep Name="CheckIfOdAvailable">
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Mailbox</Value1>
							<Value2>false</Value2>
							<SkipCase Id="1">DuT does not support mailbox.</SkipCase>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Mailbox.CoE</Value1>
							<Value2>false</Value2>
							<SkipCase Id="2">DuT does not support CoE.</SkipCase>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Mailbox.CoE.SdoInfo</Value1>
							<Value2>false</Value2>
							<SkipCase Id="3">DuT does not support SDO Info.</SkipCase>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="InitAtLeastOneProfileMatch">
					<SetVariable Target="bAtLeastOneModuleMatch">false</SetVariable>
				</TestStep>
				<TestStep Name="GetCurrentProfileList">
					<SizeOf UInt32Var="u32Tmp">arrOnlineProfiles</SizeOf>
					<Compare>
						<Equal>
							<Value1>u32Tmp</Value1>
							<Value2>0</Value2>
							<CallTestFunction Name="GetCurrentProfileList">
								<Parameter>"online"</Parameter>
								<Parameter>"SafeOP"</Parameter>
								<OutParameter>arrOnlineProfiles</OutParameter>
							</CallTestFunction>
						</Equal>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>u32Tmp</Value1>
							<Value2>0</Value2>
							<WriteLine Id="4" Param0="arrOnlineProfiles" Level="Verbose">Use previously created profile list ({0})</WriteLine>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep>
					<SizeOf UInt32Var="u32Tmp">arrOnlineProfiles</SizeOf>
				</TestStep>
				<TestStep>
					<InitArray TargetArray="arrCurrentProfiles" Length="u32Tmp"></InitArray>
				</TestStep>
				<TestStep>
					<CopyArray>
						<SourceArray>arrOnlineProfiles</SourceArray>
						<DestinationArray>arrCurrentProfiles</DestinationArray>
						<Length>u32Tmp</Length>
					</CopyArray>
				</TestStep>
				<TestStep Name="InitProfileLoopCounter">
					<SetVariable Target="u32ProfileCounter">0</SetVariable>
				</TestStep>
				<TestStep Name="GetProfileArrayLength">
					<SizeOf UInt32Var="u32CurrentProfilesLength">arrCurrentProfiles</SizeOf>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="5" Param0="u32CurrentProfilesLength" Level="Verbose">'{0}' Profile(s) defined online.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>u32CurrentProfilesLength</Value1>
							<Value2>0</Value2>
							<SkipCase Id="6">Skip case | no profile defined.</SkipCase>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="ProfileLoopStart">
					<GetArrayItem SourceArray="arrCurrentProfiles" Target="strTmpString" Index="u32ProfileCounter"></GetArrayItem>
				</TestStep>
				<TestStep Name="CheckProfileInformationString">
					<Compare>
						<Equal>
							<Value1>strTmpString</Value1>
							<Value2>null</Value2>
							<RaiseError Id="7" Param0="u32ProfileCounter">Profile Info element [{0}] is null.</RaiseError>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>strTmpString</Value1>
							<Value2>EmptyString</Value2>
							<RaiseError Id="8" Param0="u32ProfileCounter">Profile Info element [{0}] is an empty string.</RaiseError>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="GetDeviceProfile">
					<CallTestFunction Name="GetDeviceProfile">
						<Parameter>strTmpString</Parameter>
						<OutParameter>uint16CurDeviceProfile</OutParameter>
					</CallTestFunction>
				</TestStep>
				<TestStep Name="GetModuleProfile">
					<CallTestFunction Name="GetModuleProfile">
						<Parameter>strTmpString</Parameter>
						<OutParameter>uint16CurModuleProfile</OutParameter>
					</CallTestFunction>
				</TestStep>
				<TestStep Name="GetSubModuleProfile">
					<CallTestFunction Name="GetSubModuleProfile">
						<Parameter>strTmpString</Parameter>
						<OutParameter>uint16CurSubModuleProfile</OutParameter>
					</CallTestFunction>
				</TestStep>
				<TestStep Name="DumpProfileInfo">
					<Description Id="9" Param0="uint16CurDeviceProfile" Param1="uint16CurModuleProfile" Param2="uint16CurSubModuleProfile" Param3="u32ProfileCounter" Level="Output">Module[{3}] : DeviceProfile '{0}' ; ModuleProfile '{1}' ; SubModuleProfile '{2}'</Description>
					<Compare>
						<Equal>
							<Value1>bIgnoreProfileID</Value1>
							<Value2>true</Value2>
							<GotoStep>IndicateThatAtleastOneModuleMatch</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CompareDeviceProfile">
					<Compare>
						<NotEqual>
							<Value1>uint16CurDeviceProfile</Value1>
							<Value2>5003</Value2>
							<WriteLine Id="10" Param0="uint16CurDeviceProfile" Level="Output">Skip Profile  (Test Device Profile '5003' != Cur Device Profile '{0}')</WriteLine>
						</NotEqual>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>uint16CurDeviceProfile</Value1>
							<Value2>5003</Value2>
							<GotoStep>ProfileLoopEnd</GotoStep>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep Name="CompareModuleProfile">
					<Compare>
						<NotEqual>
							<Value1>uint16CurModuleProfile</Value1>
							<Value2>2011</Value2>
							<WriteLine Id="11" Param0="uint16CurModuleProfile" Level="Output">Skip Profile  (Test Module Profile '2011' != Cur Module Profile '{0}')</WriteLine>
						</NotEqual>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>uint16CurModuleProfile</Value1>
							<Value2>2011</Value2>
							<GotoStep>ProfileLoopEnd</GotoStep>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep Name="CompareSubModuleProfile">
					<Compare>
						<NotEqual>
							<Value1>uint16CurSubModuleProfile</Value1>
							<Value2>0</Value2>
							<WriteLine Id="12" Param0="uint16CurSubModuleProfile" Level="Output">Skip Profile  (Test SubModule Profile '0' != Cur SubModule Profile '{0}')</WriteLine>
						</NotEqual>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>uint16CurSubModuleProfile</Value1>
							<Value2>0</Value2>
							<GotoStep>ProfileLoopEnd</GotoStep>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep Name="IndicateThatAtleastOneModuleMatch">
					<SetVariable Target="bAtLeastOneModuleMatch">true</SetVariable>
				</TestStep>
				<TestStep Name="GetObjectIndexInclOffset">
					<SetVariable Target="u16ObjectIndexInclOffset">#x6003 + (u32ProfileCounter * #x10)</SetVariable>
					<WriteLine Id="13" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : ObjectIndex '0x{0:X}'</WriteLine>
				</TestStep>
				<TestStep Name="LoadDeviceObjectDictionary">
					<Description Id="14" Level="Verbose">Load 'online' object dictionary for testing.</Description>
					<GetObjectDictionary Target="odDeviceObjectdictionary">
						<DictionaryType>Online</DictionaryType>
					</GetObjectDictionary>
					<RaiseErrorOnFailure Id="15">VerifyObject : failed to load online object dictionary.</RaiseErrorOnFailure>
				</TestStep>
				<TestStep Name="SetObjectRequiredLevel">
					<SetVariable Target="bObjectOrEntryRequiredLevel">1</SetVariable>
					<WriteLine Id="16" Param0="u16ObjectIndexInclOffset" Level="Verbose">0x{0:X4} 'Device Status Warnings' may be available</WriteLine>
				</TestStep>
				<TestStep Name="CheckIfObjectExists">
					<GetObjectDescription SourceDictionary="odDeviceObjectdictionary" Index="u16ObjectIndexInclOffset" SubIndex="-1"></GetObjectDescription>
					<GotoOnSuccess>CallCheckObjectDescription</GotoOnSuccess>
				</TestStep>
				<TestStep Name="HandleNotExistingObject">
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>2</Value2>
							<WriteLine Id="17" Param0="u16ObjectIndexInclOffset" Level="Warning">The object 0x{0:X4} 'Device Status Warnings' does not exists.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>1</Value2>
							<WriteLine Id="18" Param0="u16ObjectIndexInclOffset" Level="Output">The object 0x{0:X4} 'Device Status Warnings' does not exists.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>ProfileLoopEnd</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CallCheckObjectDescription">
					<Description Id="19" Param0="u16ObjectIndexInclOffset" Level="Output">Verify the object description 0x{0:X4} 'Device Status Warnings'.</Description>
					<CallTestFunction Name="CheckObjectDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"online"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>"Device Status Warnings"</Parameter>
						<Parameter>null</Parameter>
						<Parameter>9</Parameter>
						<Parameter>-1</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<GotoStep>ProfileLoopEnd</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="InitEntryBittOffset">
					<SetVariable Target="i32CurrentBitOffset">0</SetVariable>
				</TestStep>
				<TestStep Name="StartSi0">
					<Description Id="20" Level="Output">Start validate SubIndex0</Description>
					<WriteLine Id="21" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : Subindex '0x{0:X}.0'</WriteLine>
				</TestStep>
				<TestStep Name="CallSi0CheckEntryDescription">
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"online"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>0</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>null</Parameter>
						<Parameter>5</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>null</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>null</Parameter>
						<Parameter>null</Parameter>
						<Parameter>null</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>8</Parameter>
						<Parameter>i32CurrentBitOffset</Parameter>
						<Parameter>true</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="EndSi0">
					<SetVariable Target="i32CurrentBitOffset">16</SetVariable>
				</TestStep>
				<TestStep Name="StartSi1">
					<Description Id="22" Level="Output">Start validate SubIndex1</Description>
					<WriteLine Id="23" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : Subindex '0x{0:X}.1'</WriteLine>
				</TestStep>
				<TestStep Name="SetSi1RequiredLevel">
					<SetVariable Target="bObjectOrEntryRequiredLevel">1</SetVariable>
					<WriteLine Id="24" Param0="u16ObjectIndexInclOffset" Level="Verbose">0x{0:X4}.1 may be available</WriteLine>
				</TestStep>
				<TestStep Name="CheckIfSi1Exists">
					<GetObjectDescription SourceDictionary="odDeviceObjectdictionary" Index="u16ObjectIndexInclOffset" SubIndex="1">
						<Type>u16DataType</Type>
					</GetObjectDescription>
					<GotoOnFailure>HandleNotExistingSi1</GotoOnFailure>
				</TestStep>
				<TestStep>
					<Compare>
						<NotEqual>
							<Value1>u16DataType</Value1>
							<Value2>0</Value2>
							<GotoStep>CallSi1CheckEntryDescription</GotoStep>
						</NotEqual>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="25" Param0="u16ObjectIndexInclOffset" Level="Verbose">The entry 0x{0:X4}.1 is defined as a padding entry.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>EndSi1</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="HandleNotExistingSi1">
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="26" Param0="u16ObjectIndexInclOffset" Level="Output">The entry 0x{0:X4}.1 does not exists.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>EndSi1</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CallSi1CheckEntryDescription">
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"online"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>1</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>null</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>null</Parameter>
						<Parameter>T</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>i32CurrentBitOffset</Parameter>
						<Parameter>true</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="EndSi1">
					<SetVariable Target="i32CurrentBitOffset">-1</SetVariable>
				</TestStep>
				<TestStep Name="StartSi2">
					<Description Id="27" Level="Output">Start validate SubIndex2</Description>
					<WriteLine Id="28" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : Subindex '0x{0:X}.2'</WriteLine>
				</TestStep>
				<TestStep Name="SetSi2RequiredLevel">
					<SetVariable Target="bObjectOrEntryRequiredLevel">1</SetVariable>
					<WriteLine Id="29" Param0="u16ObjectIndexInclOffset" Level="Verbose">0x{0:X4}.2 'OverTemp Warning' may be available</WriteLine>
				</TestStep>
				<TestStep Name="CheckIfSi2Exists">
					<GetObjectDescription SourceDictionary="odDeviceObjectdictionary" Index="u16ObjectIndexInclOffset" SubIndex="2">
						<Type>u16DataType</Type>
					</GetObjectDescription>
					<GotoOnFailure>HandleNotExistingSi2</GotoOnFailure>
				</TestStep>
				<TestStep>
					<Compare>
						<NotEqual>
							<Value1>u16DataType</Value1>
							<Value2>0</Value2>
							<GotoStep>CallSi2CheckEntryDescription</GotoStep>
						</NotEqual>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="30" Param0="u16ObjectIndexInclOffset" Level="Verbose">The entry 0x{0:X4}.2 is defined as a padding entry.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>EndSi2</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="HandleNotExistingSi2">
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="31" Param0="u16ObjectIndexInclOffset" Level="Output">The entry 0x{0:X4}.2 does not exists.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>EndSi2</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CallSi2CheckEntryDescription">
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"online"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>2</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>"OverTemp Warning"</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>null</Parameter>
						<Parameter>T</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>true</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="EndSi2"></TestStep>
				<TestStep Name="StartSi3">
					<Description Id="32" Level="Output">Start validate SubIndex3</Description>
					<WriteLine Id="33" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : Subindex '0x{0:X}.3'</WriteLine>
				</TestStep>
				<TestStep Name="SetSi3RequiredLevel">
					<SetVariable Target="bObjectOrEntryRequiredLevel">1</SetVariable>
					<WriteLine Id="34" Param0="u16ObjectIndexInclOffset" Level="Verbose">0x{0:X4}.3 'Cooling / Fan Warning' may be available</WriteLine>
				</TestStep>
				<TestStep Name="CheckIfSi3Exists">
					<GetObjectDescription SourceDictionary="odDeviceObjectdictionary" Index="u16ObjectIndexInclOffset" SubIndex="3">
						<Type>u16DataType</Type>
					</GetObjectDescription>
					<GotoOnFailure>HandleNotExistingSi3</GotoOnFailure>
				</TestStep>
				<TestStep>
					<Compare>
						<NotEqual>
							<Value1>u16DataType</Value1>
							<Value2>0</Value2>
							<GotoStep>CallSi3CheckEntryDescription</GotoStep>
						</NotEqual>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="35" Param0="u16ObjectIndexInclOffset" Level="Verbose">The entry 0x{0:X4}.3 is defined as a padding entry.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>EndSi3</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="HandleNotExistingSi3">
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="36" Param0="u16ObjectIndexInclOffset" Level="Output">The entry 0x{0:X4}.3 does not exists.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>EndSi3</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CallSi3CheckEntryDescription">
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"online"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>3</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>"Cooling / Fan Warning"</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>null</Parameter>
						<Parameter>T</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>true</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="EndSi3"></TestStep>
				<TestStep Name="StartSi4">
					<Description Id="37" Level="Output">Start validate SubIndex4</Description>
					<WriteLine Id="38" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : Subindex '0x{0:X}.4'</WriteLine>
				</TestStep>
				<TestStep Name="SetSi4RequiredLevel">
					<SetVariable Target="bObjectOrEntryRequiredLevel">1</SetVariable>
					<WriteLine Id="39" Param0="u16ObjectIndexInclOffset" Level="Verbose">0x{0:X4}.4 'AC line Warning' may be available</WriteLine>
				</TestStep>
				<TestStep Name="CheckIfSi4Exists">
					<GetObjectDescription SourceDictionary="odDeviceObjectdictionary" Index="u16ObjectIndexInclOffset" SubIndex="4">
						<Type>u16DataType</Type>
					</GetObjectDescription>
					<GotoOnFailure>HandleNotExistingSi4</GotoOnFailure>
				</TestStep>
				<TestStep>
					<Compare>
						<NotEqual>
							<Value1>u16DataType</Value1>
							<Value2>0</Value2>
							<GotoStep>CallSi4CheckEntryDescription</GotoStep>
						</NotEqual>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="40" Param0="u16ObjectIndexInclOffset" Level="Verbose">The entry 0x{0:X4}.4 is defined as a padding entry.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>EndSi4</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="HandleNotExistingSi4">
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="41" Param0="u16ObjectIndexInclOffset" Level="Output">The entry 0x{0:X4}.4 does not exists.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>EndSi4</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CallSi4CheckEntryDescription">
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"online"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>4</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>"AC line Warning"</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>null</Parameter>
						<Parameter>T</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>true</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="EndSi4"></TestStep>
				<TestStep Name="CheckReservedEntryRange_5_to_6">
					<Description Id="42" Level="Output">Start check reserved entry range 5 to 6</Description>
					<CallTestFunction Name="CheckReservedEntryRange">
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>5</Parameter>
						<Parameter>7</Parameter>
						<Parameter>odDeviceObjectdictionary</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="StartSi7">
					<Description Id="43" Level="Output">Start validate SubIndex7</Description>
					<WriteLine Id="44" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : Subindex '0x{0:X}.7'</WriteLine>
				</TestStep>
				<TestStep Name="SetSi7RequiredLevel">
					<SetVariable Target="bObjectOrEntryRequiredLevel">1</SetVariable>
					<WriteLine Id="45" Param0="u16ObjectIndexInclOffset" Level="Verbose">0x{0:X4}.7 'Power Limit Exceeded Warning' may be available</WriteLine>
				</TestStep>
				<TestStep Name="CheckIfSi7Exists">
					<GetObjectDescription SourceDictionary="odDeviceObjectdictionary" Index="u16ObjectIndexInclOffset" SubIndex="7">
						<Type>u16DataType</Type>
					</GetObjectDescription>
					<GotoOnFailure>HandleNotExistingSi7</GotoOnFailure>
				</TestStep>
				<TestStep>
					<Compare>
						<NotEqual>
							<Value1>u16DataType</Value1>
							<Value2>0</Value2>
							<GotoStep>CallSi7CheckEntryDescription</GotoStep>
						</NotEqual>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="46" Param0="u16ObjectIndexInclOffset" Level="Verbose">The entry 0x{0:X4}.7 is defined as a padding entry.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>EndSi7</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="HandleNotExistingSi7">
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="47" Param0="u16ObjectIndexInclOffset" Level="Output">The entry 0x{0:X4}.7 does not exists.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>EndSi7</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CallSi7CheckEntryDescription">
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"online"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>7</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>"Power Limit Exceeded Warning"</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>null</Parameter>
						<Parameter>T</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>true</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="EndSi7"></TestStep>
				<TestStep Name="CheckReservedEntryRange_8_to_255">
					<Description Id="48" Level="Output">Start check reserved entry range 8 to 255</Description>
					<CallTestFunction Name="CheckReservedEntryRange">
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>8</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>odDeviceObjectdictionary</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="ProfileLoopEnd">
					<Compare>
						<Equal>
							<Value1>bAtLeastOneModuleMatch</Value1>
							<Value2>false</Value2>
							<GotoStep>HandleAbortTestCaseOnFirstError</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="HandleAbortTestCaseOnFirstError">
					<Compare>
						<Equal>
							<Value1>bAbortTestCaseOnFirstError</Value1>
							<Value2>false</Value2>
							<GotoStep>ProfileLoopIncrement</GotoStep>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>strResult</Value1>
							<Value2>EmptyString</Value2>
							<GotoStep>ProfileLoopIncrement</GotoStep>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="49" Level="Output">Object verification for all following modules abort because an error was already detected for the current module.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>END</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="ProfileLoopIncrement">
					<SetVariable Target="u32ProfileCounter">u32ProfileCounter + 1</SetVariable>
					<Compare>
						<Greater>
							<Value1>u32CurrentProfilesLength</Value1>
							<Value2>u32ProfileCounter</Value2>
							<GotoStep>ProfileLoopStart</GotoStep>
						</Greater>
					</Compare>
				</TestStep>
				<TestStep Name="END">
					<Compare>
						<NotEqual>
							<Value1>bAtLeastOneModuleMatch</Value1>
							<Value2>true</Value2>
							<SkipCase Id="50">SKIP TEST(no module/channel supports the current profile)</SkipCase>
						</NotEqual>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bDEBUG</Value1>
							<Value2>true</Value2>
							<WriteLine Id="51" Param0="strResult" Level="Verbose">DEBUG | Result : '{0}'.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>strResult</Value1>
							<Value2>EmptyString</Value2>
							<ReturnSuccess Id="52">Test succeed</ReturnSuccess>
						</Equal>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>strResult</Value1>
							<Value2>EmptyString</Value2>
							<RaiseError Id="53"></RaiseError>
						</NotEqual>
					</Compare>
				</TestStep>
			</TestCase>
			<TestCase Name="offline | 0x6004 (Regulation / Control Mode Display)" CaseId="9">
				<Description>
					<PreCondition>- The device profile is 5003
- The module profile is 2011
- The submodule profile is 0</PreCondition>
					<Action>- Iterate over all offline defined modules/channels and if the PreCondition matches the following operations are done:
- Get the offline description of object 0x6004(+module specific offset) 'Regulation / Control Mode Display' and all entries
 Check:
    (Name)
    BitSize
    DataType
    Rx / Tx mappable
    Default Data
    MinData
    Flags       </Action>
					<PostCondition>Error if
- mandatory object / entry is not defined
- an optional object exists and the entries are invalid
- Object / entry description does not match with the specification</PostCondition>
					<ProposalForSolution>- Define the missing objects
- correct object / entry description</ProposalForSolution>
					<References>
						<Reference Specification="ETG.5003.2011"></Reference>
					</References>
					<Mandatory>true</Mandatory>
				</Description>
				<TestStep Name="InitResult">
					<SetVariable Target="strResult">EmptyString</SetVariable>
				</TestStep>
				<TestStep Name="CheckIfOdAvailable">
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Mailbox</Value1>
							<Value2>false</Value2>
							<SkipCase Id="1">DuT does not support mailbox.</SkipCase>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Mailbox.CoE</Value1>
							<Value2>false</Value2>
							<SkipCase Id="2">DuT does not support CoE.</SkipCase>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep>
					<GetObjectDictionary Target="odDeviceObjectdictionary">
						<DictionaryType>Offline</DictionaryType>
					</GetObjectDictionary>
					<SkipOnFailure Id="3">No offline object dictionary defined.</SkipOnFailure>
				</TestStep>
				<TestStep>
					<GetObjectList Count="u32Tmp" Target="odDeviceObjectdictionaryList" SourceDict="odDeviceObjectdictionary"></GetObjectList>
					<Compare>
						<Equal>
							<Value1>u32Tmp</Value1>
							<Value2>0</Value2>
							<SkipCase Id="4">No offline object dictionary defined.</SkipCase>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="InitAtLeastOneProfileMatch">
					<SetVariable Target="bAtLeastOneModuleMatch">false</SetVariable>
				</TestStep>
				<TestStep Name="GetCurrentProfileList">
					<SizeOf UInt32Var="u32Tmp">arrOfflineProfiles</SizeOf>
					<Compare>
						<Equal>
							<Value1>u32Tmp</Value1>
							<Value2>0</Value2>
							<CallTestFunction Name="GetCurrentProfileList">
								<Parameter>"offline"</Parameter>
								<Parameter>"SafeOP"</Parameter>
								<OutParameter>arrOfflineProfiles</OutParameter>
							</CallTestFunction>
						</Equal>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>u32Tmp</Value1>
							<Value2>0</Value2>
							<WriteLine Id="5" Param0="arrOfflineProfiles" Level="Verbose">Use previously created profile list ({0})</WriteLine>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep>
					<SizeOf UInt32Var="u32Tmp">arrOfflineProfiles</SizeOf>
				</TestStep>
				<TestStep>
					<InitArray TargetArray="arrCurrentProfiles" Length="u32Tmp"></InitArray>
				</TestStep>
				<TestStep>
					<CopyArray>
						<SourceArray>arrOfflineProfiles</SourceArray>
						<DestinationArray>arrCurrentProfiles</DestinationArray>
						<Length>u32Tmp</Length>
					</CopyArray>
				</TestStep>
				<TestStep Name="InitProfileLoopCounter">
					<SetVariable Target="u32ProfileCounter">0</SetVariable>
				</TestStep>
				<TestStep Name="GetProfileArrayLength">
					<SizeOf UInt32Var="u32CurrentProfilesLength">arrCurrentProfiles</SizeOf>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="6" Param0="u32CurrentProfilesLength" Level="Verbose">'{0}' Profile(s) defined offline.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>u32CurrentProfilesLength</Value1>
							<Value2>0</Value2>
							<SkipCase Id="7">Skip case | no profile defined.</SkipCase>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="ProfileLoopStart">
					<GetArrayItem SourceArray="arrCurrentProfiles" Target="strTmpString" Index="u32ProfileCounter"></GetArrayItem>
				</TestStep>
				<TestStep Name="CheckProfileInformationString">
					<Compare>
						<Equal>
							<Value1>strTmpString</Value1>
							<Value2>null</Value2>
							<RaiseError Id="8" Param0="u32ProfileCounter">Profile Info element [{0}] is null.</RaiseError>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>strTmpString</Value1>
							<Value2>EmptyString</Value2>
							<RaiseError Id="9" Param0="u32ProfileCounter">Profile Info element [{0}] is an empty string.</RaiseError>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="GetDeviceProfile">
					<CallTestFunction Name="GetDeviceProfile">
						<Parameter>strTmpString</Parameter>
						<OutParameter>uint16CurDeviceProfile</OutParameter>
					</CallTestFunction>
				</TestStep>
				<TestStep Name="GetModuleProfile">
					<CallTestFunction Name="GetModuleProfile">
						<Parameter>strTmpString</Parameter>
						<OutParameter>uint16CurModuleProfile</OutParameter>
					</CallTestFunction>
				</TestStep>
				<TestStep Name="GetSubModuleProfile">
					<CallTestFunction Name="GetSubModuleProfile">
						<Parameter>strTmpString</Parameter>
						<OutParameter>uint16CurSubModuleProfile</OutParameter>
					</CallTestFunction>
				</TestStep>
				<TestStep Name="DumpProfileInfo">
					<Description Id="10" Param0="uint16CurDeviceProfile" Param1="uint16CurModuleProfile" Param2="uint16CurSubModuleProfile" Param3="u32ProfileCounter" Level="Output">Module[{3}] : DeviceProfile '{0}' ; ModuleProfile '{1}' ; SubModuleProfile '{2}'</Description>
					<Compare>
						<Equal>
							<Value1>bIgnoreProfileID</Value1>
							<Value2>true</Value2>
							<GotoStep>IndicateThatAtleastOneModuleMatch</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CompareDeviceProfile">
					<Compare>
						<NotEqual>
							<Value1>uint16CurDeviceProfile</Value1>
							<Value2>5003</Value2>
							<WriteLine Id="11" Param0="uint16CurDeviceProfile" Level="Output">Skip Profile  (Test Device Profile '5003' != Cur Device Profile '{0}')</WriteLine>
						</NotEqual>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>uint16CurDeviceProfile</Value1>
							<Value2>5003</Value2>
							<GotoStep>ProfileLoopEnd</GotoStep>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep Name="CompareModuleProfile">
					<Compare>
						<NotEqual>
							<Value1>uint16CurModuleProfile</Value1>
							<Value2>2011</Value2>
							<WriteLine Id="12" Param0="uint16CurModuleProfile" Level="Output">Skip Profile  (Test Module Profile '2011' != Cur Module Profile '{0}')</WriteLine>
						</NotEqual>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>uint16CurModuleProfile</Value1>
							<Value2>2011</Value2>
							<GotoStep>ProfileLoopEnd</GotoStep>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep Name="CompareSubModuleProfile">
					<Compare>
						<NotEqual>
							<Value1>uint16CurSubModuleProfile</Value1>
							<Value2>0</Value2>
							<WriteLine Id="13" Param0="uint16CurSubModuleProfile" Level="Output">Skip Profile  (Test SubModule Profile '0' != Cur SubModule Profile '{0}')</WriteLine>
						</NotEqual>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>uint16CurSubModuleProfile</Value1>
							<Value2>0</Value2>
							<GotoStep>ProfileLoopEnd</GotoStep>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep Name="IndicateThatAtleastOneModuleMatch">
					<SetVariable Target="bAtLeastOneModuleMatch">true</SetVariable>
				</TestStep>
				<TestStep Name="GetObjectIndexInclOffset">
					<SetVariable Target="u16ObjectIndexInclOffset">#x6004 + (u32ProfileCounter * #x10)</SetVariable>
					<WriteLine Id="14" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : ObjectIndex '0x{0:X}'</WriteLine>
				</TestStep>
				<TestStep Name="LoadDeviceObjectDictionary">
					<Description Id="15" Level="Verbose">Load 'offline' object dictionary for testing.</Description>
					<GetObjectDictionary Target="odDeviceObjectdictionary">
						<DictionaryType>Offline</DictionaryType>
					</GetObjectDictionary>
					<RaiseErrorOnFailure Id="16">VerifyObject : failed to load offline object dictionary.</RaiseErrorOnFailure>
				</TestStep>
				<TestStep Name="CallCheckObjectDescription">
					<Description Id="17" Param0="u16ObjectIndexInclOffset" Level="Output">Verify the object description 0x{0:X4} 'Regulation / Control Mode Display'.</Description>
					<CallTestFunction Name="CheckObjectDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"offline"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>"Regulation / Control Mode Display"</Parameter>
						<Parameter>null</Parameter>
						<Parameter>9</Parameter>
						<Parameter>-1</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<GotoStep>ProfileLoopEnd</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="InitEntryBittOffset">
					<SetVariable Target="i32CurrentBitOffset">0</SetVariable>
				</TestStep>
				<TestStep Name="StartSi0">
					<Description Id="18" Level="Output">Start validate SubIndex0</Description>
					<WriteLine Id="19" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : Subindex '0x{0:X}.0'</WriteLine>
				</TestStep>
				<TestStep Name="CallSi0CheckEntryDescription">
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"offline"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>0</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>null</Parameter>
						<Parameter>5</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>null</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>null</Parameter>
						<Parameter>null</Parameter>
						<Parameter>null</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>8</Parameter>
						<Parameter>i32CurrentBitOffset</Parameter>
						<Parameter>true</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="EndSi0">
					<SetVariable Target="i32CurrentBitOffset">16</SetVariable>
				</TestStep>
				<TestStep Name="StartSi1">
					<Description Id="20" Level="Output">Start validate SubIndex1</Description>
					<WriteLine Id="21" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : Subindex '0x{0:X}.1'</WriteLine>
				</TestStep>
				<TestStep Name="CallSi1CheckEntryDescription">
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"offline"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>1</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>"Regulation / Control Mode Display"</Parameter>
						<Parameter>5</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>null</Parameter>
						<Parameter>T</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>8</Parameter>
						<Parameter>i32CurrentBitOffset</Parameter>
						<Parameter>true</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="EndSi1">
					<SetVariable Target="i32CurrentBitOffset">i32CurrentBitOffset + 8</SetVariable>
				</TestStep>
				<TestStep Name="CheckReservedEntryRange_2_to_255">
					<Description Id="22" Level="Output">Start check reserved entry range 2 to 255</Description>
					<CallTestFunction Name="CheckReservedEntryRange">
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>2</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>odDeviceObjectdictionary</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="ProfileLoopEnd">
					<Compare>
						<Equal>
							<Value1>bAtLeastOneModuleMatch</Value1>
							<Value2>false</Value2>
							<GotoStep>HandleAbortTestCaseOnFirstError</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="HandleAbortTestCaseOnFirstError">
					<Compare>
						<Equal>
							<Value1>bAbortTestCaseOnFirstError</Value1>
							<Value2>false</Value2>
							<GotoStep>ProfileLoopIncrement</GotoStep>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>strResult</Value1>
							<Value2>EmptyString</Value2>
							<GotoStep>ProfileLoopIncrement</GotoStep>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="23" Level="Output">Object verification for all following modules abort because an error was already detected for the current module.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>END</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="ProfileLoopIncrement">
					<SetVariable Target="u32ProfileCounter">u32ProfileCounter + 1</SetVariable>
					<Compare>
						<Greater>
							<Value1>u32CurrentProfilesLength</Value1>
							<Value2>u32ProfileCounter</Value2>
							<GotoStep>ProfileLoopStart</GotoStep>
						</Greater>
					</Compare>
				</TestStep>
				<TestStep Name="END">
					<Compare>
						<NotEqual>
							<Value1>bAtLeastOneModuleMatch</Value1>
							<Value2>true</Value2>
							<SkipCase Id="24">SKIP TEST(no module/channel supports the current profile)</SkipCase>
						</NotEqual>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bDEBUG</Value1>
							<Value2>true</Value2>
							<WriteLine Id="25" Param0="strResult" Level="Verbose">DEBUG | Result : '{0}'.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>strResult</Value1>
							<Value2>EmptyString</Value2>
							<ReturnSuccess Id="26">Test succeed</ReturnSuccess>
						</Equal>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>strResult</Value1>
							<Value2>EmptyString</Value2>
							<RaiseError Id="27"></RaiseError>
						</NotEqual>
					</Compare>
				</TestStep>
			</TestCase>
			<TestCase Name="online | 0x6004 (Regulation / Control Mode Display)" CaseId="10">
				<Description>
					<PreCondition>- The device profile is 5003
- The module profile is 2011
- The submodule profile is 0</PreCondition>
					<Action>- Iterate over all online defined modules/channels and if the PreCondition matches the following operations are done:
- Get the online description of object 0x6004(+module specific offset) 'Regulation / Control Mode Display' and all entries
 Check:
    (Name)
    BitSize
    DataType
    Rx / Tx mappable
    Default Data
    MinData
    Flags       </Action>
					<PostCondition>Error if
- mandatory object / entry is not defined
- an optional object exists and the entries are invalid
- Object / entry description does not match with the specification</PostCondition>
					<ProposalForSolution>- Define the missing objects
- correct object / entry description</ProposalForSolution>
					<References>
						<Reference Specification="ETG.5003.2011"></Reference>
					</References>
					<Mandatory>true</Mandatory>
				</Description>
				<TestStep Name="InitResult">
					<SetVariable Target="strResult">EmptyString</SetVariable>
				</TestStep>
				<TestStep Name="CheckIfOdAvailable">
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Mailbox</Value1>
							<Value2>false</Value2>
							<SkipCase Id="1">DuT does not support mailbox.</SkipCase>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Mailbox.CoE</Value1>
							<Value2>false</Value2>
							<SkipCase Id="2">DuT does not support CoE.</SkipCase>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Mailbox.CoE.SdoInfo</Value1>
							<Value2>false</Value2>
							<SkipCase Id="3">DuT does not support SDO Info.</SkipCase>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="InitAtLeastOneProfileMatch">
					<SetVariable Target="bAtLeastOneModuleMatch">false</SetVariable>
				</TestStep>
				<TestStep Name="GetCurrentProfileList">
					<SizeOf UInt32Var="u32Tmp">arrOnlineProfiles</SizeOf>
					<Compare>
						<Equal>
							<Value1>u32Tmp</Value1>
							<Value2>0</Value2>
							<CallTestFunction Name="GetCurrentProfileList">
								<Parameter>"online"</Parameter>
								<Parameter>"SafeOP"</Parameter>
								<OutParameter>arrOnlineProfiles</OutParameter>
							</CallTestFunction>
						</Equal>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>u32Tmp</Value1>
							<Value2>0</Value2>
							<WriteLine Id="4" Param0="arrOnlineProfiles" Level="Verbose">Use previously created profile list ({0})</WriteLine>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep>
					<SizeOf UInt32Var="u32Tmp">arrOnlineProfiles</SizeOf>
				</TestStep>
				<TestStep>
					<InitArray TargetArray="arrCurrentProfiles" Length="u32Tmp"></InitArray>
				</TestStep>
				<TestStep>
					<CopyArray>
						<SourceArray>arrOnlineProfiles</SourceArray>
						<DestinationArray>arrCurrentProfiles</DestinationArray>
						<Length>u32Tmp</Length>
					</CopyArray>
				</TestStep>
				<TestStep Name="InitProfileLoopCounter">
					<SetVariable Target="u32ProfileCounter">0</SetVariable>
				</TestStep>
				<TestStep Name="GetProfileArrayLength">
					<SizeOf UInt32Var="u32CurrentProfilesLength">arrCurrentProfiles</SizeOf>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="5" Param0="u32CurrentProfilesLength" Level="Verbose">'{0}' Profile(s) defined online.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>u32CurrentProfilesLength</Value1>
							<Value2>0</Value2>
							<SkipCase Id="6">Skip case | no profile defined.</SkipCase>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="ProfileLoopStart">
					<GetArrayItem SourceArray="arrCurrentProfiles" Target="strTmpString" Index="u32ProfileCounter"></GetArrayItem>
				</TestStep>
				<TestStep Name="CheckProfileInformationString">
					<Compare>
						<Equal>
							<Value1>strTmpString</Value1>
							<Value2>null</Value2>
							<RaiseError Id="7" Param0="u32ProfileCounter">Profile Info element [{0}] is null.</RaiseError>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>strTmpString</Value1>
							<Value2>EmptyString</Value2>
							<RaiseError Id="8" Param0="u32ProfileCounter">Profile Info element [{0}] is an empty string.</RaiseError>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="GetDeviceProfile">
					<CallTestFunction Name="GetDeviceProfile">
						<Parameter>strTmpString</Parameter>
						<OutParameter>uint16CurDeviceProfile</OutParameter>
					</CallTestFunction>
				</TestStep>
				<TestStep Name="GetModuleProfile">
					<CallTestFunction Name="GetModuleProfile">
						<Parameter>strTmpString</Parameter>
						<OutParameter>uint16CurModuleProfile</OutParameter>
					</CallTestFunction>
				</TestStep>
				<TestStep Name="GetSubModuleProfile">
					<CallTestFunction Name="GetSubModuleProfile">
						<Parameter>strTmpString</Parameter>
						<OutParameter>uint16CurSubModuleProfile</OutParameter>
					</CallTestFunction>
				</TestStep>
				<TestStep Name="DumpProfileInfo">
					<Description Id="9" Param0="uint16CurDeviceProfile" Param1="uint16CurModuleProfile" Param2="uint16CurSubModuleProfile" Param3="u32ProfileCounter" Level="Output">Module[{3}] : DeviceProfile '{0}' ; ModuleProfile '{1}' ; SubModuleProfile '{2}'</Description>
					<Compare>
						<Equal>
							<Value1>bIgnoreProfileID</Value1>
							<Value2>true</Value2>
							<GotoStep>IndicateThatAtleastOneModuleMatch</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CompareDeviceProfile">
					<Compare>
						<NotEqual>
							<Value1>uint16CurDeviceProfile</Value1>
							<Value2>5003</Value2>
							<WriteLine Id="10" Param0="uint16CurDeviceProfile" Level="Output">Skip Profile  (Test Device Profile '5003' != Cur Device Profile '{0}')</WriteLine>
						</NotEqual>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>uint16CurDeviceProfile</Value1>
							<Value2>5003</Value2>
							<GotoStep>ProfileLoopEnd</GotoStep>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep Name="CompareModuleProfile">
					<Compare>
						<NotEqual>
							<Value1>uint16CurModuleProfile</Value1>
							<Value2>2011</Value2>
							<WriteLine Id="11" Param0="uint16CurModuleProfile" Level="Output">Skip Profile  (Test Module Profile '2011' != Cur Module Profile '{0}')</WriteLine>
						</NotEqual>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>uint16CurModuleProfile</Value1>
							<Value2>2011</Value2>
							<GotoStep>ProfileLoopEnd</GotoStep>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep Name="CompareSubModuleProfile">
					<Compare>
						<NotEqual>
							<Value1>uint16CurSubModuleProfile</Value1>
							<Value2>0</Value2>
							<WriteLine Id="12" Param0="uint16CurSubModuleProfile" Level="Output">Skip Profile  (Test SubModule Profile '0' != Cur SubModule Profile '{0}')</WriteLine>
						</NotEqual>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>uint16CurSubModuleProfile</Value1>
							<Value2>0</Value2>
							<GotoStep>ProfileLoopEnd</GotoStep>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep Name="IndicateThatAtleastOneModuleMatch">
					<SetVariable Target="bAtLeastOneModuleMatch">true</SetVariable>
				</TestStep>
				<TestStep Name="GetObjectIndexInclOffset">
					<SetVariable Target="u16ObjectIndexInclOffset">#x6004 + (u32ProfileCounter * #x10)</SetVariable>
					<WriteLine Id="13" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : ObjectIndex '0x{0:X}'</WriteLine>
				</TestStep>
				<TestStep Name="LoadDeviceObjectDictionary">
					<Description Id="14" Level="Verbose">Load 'online' object dictionary for testing.</Description>
					<GetObjectDictionary Target="odDeviceObjectdictionary">
						<DictionaryType>Online</DictionaryType>
					</GetObjectDictionary>
					<RaiseErrorOnFailure Id="15">VerifyObject : failed to load online object dictionary.</RaiseErrorOnFailure>
				</TestStep>
				<TestStep Name="CallCheckObjectDescription">
					<Description Id="16" Param0="u16ObjectIndexInclOffset" Level="Output">Verify the object description 0x{0:X4} 'Regulation / Control Mode Display'.</Description>
					<CallTestFunction Name="CheckObjectDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"online"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>"Regulation / Control Mode Display"</Parameter>
						<Parameter>null</Parameter>
						<Parameter>9</Parameter>
						<Parameter>-1</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<GotoStep>ProfileLoopEnd</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="InitEntryBittOffset">
					<SetVariable Target="i32CurrentBitOffset">0</SetVariable>
				</TestStep>
				<TestStep Name="StartSi0">
					<Description Id="17" Level="Output">Start validate SubIndex0</Description>
					<WriteLine Id="18" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : Subindex '0x{0:X}.0'</WriteLine>
				</TestStep>
				<TestStep Name="CallSi0CheckEntryDescription">
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"online"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>0</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>null</Parameter>
						<Parameter>5</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>null</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>null</Parameter>
						<Parameter>null</Parameter>
						<Parameter>null</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>8</Parameter>
						<Parameter>i32CurrentBitOffset</Parameter>
						<Parameter>true</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="EndSi0">
					<SetVariable Target="i32CurrentBitOffset">16</SetVariable>
				</TestStep>
				<TestStep Name="StartSi1">
					<Description Id="19" Level="Output">Start validate SubIndex1</Description>
					<WriteLine Id="20" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : Subindex '0x{0:X}.1'</WriteLine>
				</TestStep>
				<TestStep Name="CallSi1CheckEntryDescription">
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"online"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>1</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>"Regulation / Control Mode Display"</Parameter>
						<Parameter>5</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>null</Parameter>
						<Parameter>T</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>8</Parameter>
						<Parameter>i32CurrentBitOffset</Parameter>
						<Parameter>true</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="EndSi1">
					<SetVariable Target="i32CurrentBitOffset">i32CurrentBitOffset + 8</SetVariable>
				</TestStep>
				<TestStep Name="CheckReservedEntryRange_2_to_255">
					<Description Id="21" Level="Output">Start check reserved entry range 2 to 255</Description>
					<CallTestFunction Name="CheckReservedEntryRange">
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>2</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>odDeviceObjectdictionary</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="ProfileLoopEnd">
					<Compare>
						<Equal>
							<Value1>bAtLeastOneModuleMatch</Value1>
							<Value2>false</Value2>
							<GotoStep>HandleAbortTestCaseOnFirstError</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="HandleAbortTestCaseOnFirstError">
					<Compare>
						<Equal>
							<Value1>bAbortTestCaseOnFirstError</Value1>
							<Value2>false</Value2>
							<GotoStep>ProfileLoopIncrement</GotoStep>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>strResult</Value1>
							<Value2>EmptyString</Value2>
							<GotoStep>ProfileLoopIncrement</GotoStep>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="22" Level="Output">Object verification for all following modules abort because an error was already detected for the current module.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>END</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="ProfileLoopIncrement">
					<SetVariable Target="u32ProfileCounter">u32ProfileCounter + 1</SetVariable>
					<Compare>
						<Greater>
							<Value1>u32CurrentProfilesLength</Value1>
							<Value2>u32ProfileCounter</Value2>
							<GotoStep>ProfileLoopStart</GotoStep>
						</Greater>
					</Compare>
				</TestStep>
				<TestStep Name="END">
					<Compare>
						<NotEqual>
							<Value1>bAtLeastOneModuleMatch</Value1>
							<Value2>true</Value2>
							<SkipCase Id="23">SKIP TEST(no module/channel supports the current profile)</SkipCase>
						</NotEqual>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bDEBUG</Value1>
							<Value2>true</Value2>
							<WriteLine Id="24" Param0="strResult" Level="Verbose">DEBUG | Result : '{0}'.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>strResult</Value1>
							<Value2>EmptyString</Value2>
							<ReturnSuccess Id="25">Test succeed</ReturnSuccess>
						</Equal>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>strResult</Value1>
							<Value2>EmptyString</Value2>
							<RaiseError Id="26"></RaiseError>
						</NotEqual>
					</Compare>
				</TestStep>
			</TestCase>
			<TestCase Name="offline | 0x6005 (Actual Setpoint)" CaseId="11">
				<Description>
					<PreCondition>- The device profile is 5003
- The module profile is 2011
- The submodule profile is 0</PreCondition>
					<Action>- Iterate over all offline defined modules/channels and if the PreCondition matches the following operations are done:
- Get the offline description of object 0x6005(+module specific offset) 'Actual Setpoint' and all entries
 Check:
    (Name)
    BitSize
    DataType
    Rx / Tx mappable
    Default Data
    MinData
    Flags       </Action>
					<PostCondition>Error if
- mandatory object / entry is not defined
- an optional object exists and the entries are invalid
- Object / entry description does not match with the specification</PostCondition>
					<ProposalForSolution>- Define the missing objects
- correct object / entry description</ProposalForSolution>
					<References>
						<Reference Specification="ETG.5003.2011"></Reference>
					</References>
					<Mandatory>true</Mandatory>
				</Description>
				<TestStep Name="InitResult">
					<SetVariable Target="strResult">EmptyString</SetVariable>
				</TestStep>
				<TestStep Name="CheckIfOdAvailable">
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Mailbox</Value1>
							<Value2>false</Value2>
							<SkipCase Id="1">DuT does not support mailbox.</SkipCase>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Mailbox.CoE</Value1>
							<Value2>false</Value2>
							<SkipCase Id="2">DuT does not support CoE.</SkipCase>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep>
					<GetObjectDictionary Target="odDeviceObjectdictionary">
						<DictionaryType>Offline</DictionaryType>
					</GetObjectDictionary>
					<SkipOnFailure Id="3">No offline object dictionary defined.</SkipOnFailure>
				</TestStep>
				<TestStep>
					<GetObjectList Count="u32Tmp" Target="odDeviceObjectdictionaryList" SourceDict="odDeviceObjectdictionary"></GetObjectList>
					<Compare>
						<Equal>
							<Value1>u32Tmp</Value1>
							<Value2>0</Value2>
							<SkipCase Id="4">No offline object dictionary defined.</SkipCase>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="InitAtLeastOneProfileMatch">
					<SetVariable Target="bAtLeastOneModuleMatch">false</SetVariable>
				</TestStep>
				<TestStep Name="GetCurrentProfileList">
					<SizeOf UInt32Var="u32Tmp">arrOfflineProfiles</SizeOf>
					<Compare>
						<Equal>
							<Value1>u32Tmp</Value1>
							<Value2>0</Value2>
							<CallTestFunction Name="GetCurrentProfileList">
								<Parameter>"offline"</Parameter>
								<Parameter>"SafeOP"</Parameter>
								<OutParameter>arrOfflineProfiles</OutParameter>
							</CallTestFunction>
						</Equal>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>u32Tmp</Value1>
							<Value2>0</Value2>
							<WriteLine Id="5" Param0="arrOfflineProfiles" Level="Verbose">Use previously created profile list ({0})</WriteLine>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep>
					<SizeOf UInt32Var="u32Tmp">arrOfflineProfiles</SizeOf>
				</TestStep>
				<TestStep>
					<InitArray TargetArray="arrCurrentProfiles" Length="u32Tmp"></InitArray>
				</TestStep>
				<TestStep>
					<CopyArray>
						<SourceArray>arrOfflineProfiles</SourceArray>
						<DestinationArray>arrCurrentProfiles</DestinationArray>
						<Length>u32Tmp</Length>
					</CopyArray>
				</TestStep>
				<TestStep Name="InitProfileLoopCounter">
					<SetVariable Target="u32ProfileCounter">0</SetVariable>
				</TestStep>
				<TestStep Name="GetProfileArrayLength">
					<SizeOf UInt32Var="u32CurrentProfilesLength">arrCurrentProfiles</SizeOf>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="6" Param0="u32CurrentProfilesLength" Level="Verbose">'{0}' Profile(s) defined offline.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>u32CurrentProfilesLength</Value1>
							<Value2>0</Value2>
							<SkipCase Id="7">Skip case | no profile defined.</SkipCase>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="ProfileLoopStart">
					<GetArrayItem SourceArray="arrCurrentProfiles" Target="strTmpString" Index="u32ProfileCounter"></GetArrayItem>
				</TestStep>
				<TestStep Name="CheckProfileInformationString">
					<Compare>
						<Equal>
							<Value1>strTmpString</Value1>
							<Value2>null</Value2>
							<RaiseError Id="8" Param0="u32ProfileCounter">Profile Info element [{0}] is null.</RaiseError>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>strTmpString</Value1>
							<Value2>EmptyString</Value2>
							<RaiseError Id="9" Param0="u32ProfileCounter">Profile Info element [{0}] is an empty string.</RaiseError>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="GetDeviceProfile">
					<CallTestFunction Name="GetDeviceProfile">
						<Parameter>strTmpString</Parameter>
						<OutParameter>uint16CurDeviceProfile</OutParameter>
					</CallTestFunction>
				</TestStep>
				<TestStep Name="GetModuleProfile">
					<CallTestFunction Name="GetModuleProfile">
						<Parameter>strTmpString</Parameter>
						<OutParameter>uint16CurModuleProfile</OutParameter>
					</CallTestFunction>
				</TestStep>
				<TestStep Name="GetSubModuleProfile">
					<CallTestFunction Name="GetSubModuleProfile">
						<Parameter>strTmpString</Parameter>
						<OutParameter>uint16CurSubModuleProfile</OutParameter>
					</CallTestFunction>
				</TestStep>
				<TestStep Name="DumpProfileInfo">
					<Description Id="10" Param0="uint16CurDeviceProfile" Param1="uint16CurModuleProfile" Param2="uint16CurSubModuleProfile" Param3="u32ProfileCounter" Level="Output">Module[{3}] : DeviceProfile '{0}' ; ModuleProfile '{1}' ; SubModuleProfile '{2}'</Description>
					<Compare>
						<Equal>
							<Value1>bIgnoreProfileID</Value1>
							<Value2>true</Value2>
							<GotoStep>IndicateThatAtleastOneModuleMatch</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CompareDeviceProfile">
					<Compare>
						<NotEqual>
							<Value1>uint16CurDeviceProfile</Value1>
							<Value2>5003</Value2>
							<WriteLine Id="11" Param0="uint16CurDeviceProfile" Level="Output">Skip Profile  (Test Device Profile '5003' != Cur Device Profile '{0}')</WriteLine>
						</NotEqual>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>uint16CurDeviceProfile</Value1>
							<Value2>5003</Value2>
							<GotoStep>ProfileLoopEnd</GotoStep>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep Name="CompareModuleProfile">
					<Compare>
						<NotEqual>
							<Value1>uint16CurModuleProfile</Value1>
							<Value2>2011</Value2>
							<WriteLine Id="12" Param0="uint16CurModuleProfile" Level="Output">Skip Profile  (Test Module Profile '2011' != Cur Module Profile '{0}')</WriteLine>
						</NotEqual>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>uint16CurModuleProfile</Value1>
							<Value2>2011</Value2>
							<GotoStep>ProfileLoopEnd</GotoStep>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep Name="CompareSubModuleProfile">
					<Compare>
						<NotEqual>
							<Value1>uint16CurSubModuleProfile</Value1>
							<Value2>0</Value2>
							<WriteLine Id="13" Param0="uint16CurSubModuleProfile" Level="Output">Skip Profile  (Test SubModule Profile '0' != Cur SubModule Profile '{0}')</WriteLine>
						</NotEqual>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>uint16CurSubModuleProfile</Value1>
							<Value2>0</Value2>
							<GotoStep>ProfileLoopEnd</GotoStep>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep Name="IndicateThatAtleastOneModuleMatch">
					<SetVariable Target="bAtLeastOneModuleMatch">true</SetVariable>
				</TestStep>
				<TestStep Name="GetObjectIndexInclOffset">
					<SetVariable Target="u16ObjectIndexInclOffset">#x6005 + (u32ProfileCounter * #x10)</SetVariable>
					<WriteLine Id="14" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : ObjectIndex '0x{0:X}'</WriteLine>
				</TestStep>
				<TestStep Name="LoadDeviceObjectDictionary">
					<Description Id="15" Level="Verbose">Load 'offline' object dictionary for testing.</Description>
					<GetObjectDictionary Target="odDeviceObjectdictionary">
						<DictionaryType>Offline</DictionaryType>
					</GetObjectDictionary>
					<RaiseErrorOnFailure Id="16">VerifyObject : failed to load offline object dictionary.</RaiseErrorOnFailure>
				</TestStep>
				<TestStep Name="CallCheckObjectDescription">
					<Description Id="17" Param0="u16ObjectIndexInclOffset" Level="Output">Verify the object description 0x{0:X4} 'Actual Setpoint'.</Description>
					<CallTestFunction Name="CheckObjectDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"offline"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>"Actual Setpoint"</Parameter>
						<Parameter>null</Parameter>
						<Parameter>9</Parameter>
						<Parameter>-1</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<GotoStep>ProfileLoopEnd</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="InitEntryBittOffset">
					<SetVariable Target="i32CurrentBitOffset">0</SetVariable>
				</TestStep>
				<TestStep Name="StartSi0">
					<Description Id="18" Level="Output">Start validate SubIndex0</Description>
					<WriteLine Id="19" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : Subindex '0x{0:X}.0'</WriteLine>
				</TestStep>
				<TestStep Name="CallSi0CheckEntryDescription">
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"offline"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>0</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>null</Parameter>
						<Parameter>5</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>null</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>null</Parameter>
						<Parameter>null</Parameter>
						<Parameter>null</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>8</Parameter>
						<Parameter>i32CurrentBitOffset</Parameter>
						<Parameter>true</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="EndSi0">
					<SetVariable Target="i32CurrentBitOffset">16</SetVariable>
				</TestStep>
				<TestStep Name="StartSi1">
					<Description Id="20" Level="Output">Start validate SubIndex1</Description>
					<WriteLine Id="21" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : Subindex '0x{0:X}.1'</WriteLine>
				</TestStep>
				<TestStep Name="CallSi1CheckEntryDescription">
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"offline"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>1</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>"Actual Setpoint"</Parameter>
						<Parameter>8</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>null</Parameter>
						<Parameter>T</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>32</Parameter>
						<Parameter>i32CurrentBitOffset</Parameter>
						<Parameter>true</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="EndSi1">
					<SetVariable Target="i32CurrentBitOffset">i32CurrentBitOffset + 32</SetVariable>
				</TestStep>
				<TestStep Name="CheckReservedEntryRange_2_to_255">
					<Description Id="22" Level="Output">Start check reserved entry range 2 to 255</Description>
					<CallTestFunction Name="CheckReservedEntryRange">
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>2</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>odDeviceObjectdictionary</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="ProfileLoopEnd">
					<Compare>
						<Equal>
							<Value1>bAtLeastOneModuleMatch</Value1>
							<Value2>false</Value2>
							<GotoStep>HandleAbortTestCaseOnFirstError</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="HandleAbortTestCaseOnFirstError">
					<Compare>
						<Equal>
							<Value1>bAbortTestCaseOnFirstError</Value1>
							<Value2>false</Value2>
							<GotoStep>ProfileLoopIncrement</GotoStep>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>strResult</Value1>
							<Value2>EmptyString</Value2>
							<GotoStep>ProfileLoopIncrement</GotoStep>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="23" Level="Output">Object verification for all following modules abort because an error was already detected for the current module.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>END</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="ProfileLoopIncrement">
					<SetVariable Target="u32ProfileCounter">u32ProfileCounter + 1</SetVariable>
					<Compare>
						<Greater>
							<Value1>u32CurrentProfilesLength</Value1>
							<Value2>u32ProfileCounter</Value2>
							<GotoStep>ProfileLoopStart</GotoStep>
						</Greater>
					</Compare>
				</TestStep>
				<TestStep Name="END">
					<Compare>
						<NotEqual>
							<Value1>bAtLeastOneModuleMatch</Value1>
							<Value2>true</Value2>
							<SkipCase Id="24">SKIP TEST(no module/channel supports the current profile)</SkipCase>
						</NotEqual>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bDEBUG</Value1>
							<Value2>true</Value2>
							<WriteLine Id="25" Param0="strResult" Level="Verbose">DEBUG | Result : '{0}'.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>strResult</Value1>
							<Value2>EmptyString</Value2>
							<ReturnSuccess Id="26">Test succeed</ReturnSuccess>
						</Equal>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>strResult</Value1>
							<Value2>EmptyString</Value2>
							<RaiseError Id="27"></RaiseError>
						</NotEqual>
					</Compare>
				</TestStep>
			</TestCase>
			<TestCase Name="online | 0x6005 (Actual Setpoint)" CaseId="12">
				<Description>
					<PreCondition>- The device profile is 5003
- The module profile is 2011
- The submodule profile is 0</PreCondition>
					<Action>- Iterate over all online defined modules/channels and if the PreCondition matches the following operations are done:
- Get the online description of object 0x6005(+module specific offset) 'Actual Setpoint' and all entries
 Check:
    (Name)
    BitSize
    DataType
    Rx / Tx mappable
    Default Data
    MinData
    Flags       </Action>
					<PostCondition>Error if
- mandatory object / entry is not defined
- an optional object exists and the entries are invalid
- Object / entry description does not match with the specification</PostCondition>
					<ProposalForSolution>- Define the missing objects
- correct object / entry description</ProposalForSolution>
					<References>
						<Reference Specification="ETG.5003.2011"></Reference>
					</References>
					<Mandatory>true</Mandatory>
				</Description>
				<TestStep Name="InitResult">
					<SetVariable Target="strResult">EmptyString</SetVariable>
				</TestStep>
				<TestStep Name="CheckIfOdAvailable">
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Mailbox</Value1>
							<Value2>false</Value2>
							<SkipCase Id="1">DuT does not support mailbox.</SkipCase>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Mailbox.CoE</Value1>
							<Value2>false</Value2>
							<SkipCase Id="2">DuT does not support CoE.</SkipCase>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Mailbox.CoE.SdoInfo</Value1>
							<Value2>false</Value2>
							<SkipCase Id="3">DuT does not support SDO Info.</SkipCase>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="InitAtLeastOneProfileMatch">
					<SetVariable Target="bAtLeastOneModuleMatch">false</SetVariable>
				</TestStep>
				<TestStep Name="GetCurrentProfileList">
					<SizeOf UInt32Var="u32Tmp">arrOnlineProfiles</SizeOf>
					<Compare>
						<Equal>
							<Value1>u32Tmp</Value1>
							<Value2>0</Value2>
							<CallTestFunction Name="GetCurrentProfileList">
								<Parameter>"online"</Parameter>
								<Parameter>"SafeOP"</Parameter>
								<OutParameter>arrOnlineProfiles</OutParameter>
							</CallTestFunction>
						</Equal>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>u32Tmp</Value1>
							<Value2>0</Value2>
							<WriteLine Id="4" Param0="arrOnlineProfiles" Level="Verbose">Use previously created profile list ({0})</WriteLine>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep>
					<SizeOf UInt32Var="u32Tmp">arrOnlineProfiles</SizeOf>
				</TestStep>
				<TestStep>
					<InitArray TargetArray="arrCurrentProfiles" Length="u32Tmp"></InitArray>
				</TestStep>
				<TestStep>
					<CopyArray>
						<SourceArray>arrOnlineProfiles</SourceArray>
						<DestinationArray>arrCurrentProfiles</DestinationArray>
						<Length>u32Tmp</Length>
					</CopyArray>
				</TestStep>
				<TestStep Name="InitProfileLoopCounter">
					<SetVariable Target="u32ProfileCounter">0</SetVariable>
				</TestStep>
				<TestStep Name="GetProfileArrayLength">
					<SizeOf UInt32Var="u32CurrentProfilesLength">arrCurrentProfiles</SizeOf>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="5" Param0="u32CurrentProfilesLength" Level="Verbose">'{0}' Profile(s) defined online.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>u32CurrentProfilesLength</Value1>
							<Value2>0</Value2>
							<SkipCase Id="6">Skip case | no profile defined.</SkipCase>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="ProfileLoopStart">
					<GetArrayItem SourceArray="arrCurrentProfiles" Target="strTmpString" Index="u32ProfileCounter"></GetArrayItem>
				</TestStep>
				<TestStep Name="CheckProfileInformationString">
					<Compare>
						<Equal>
							<Value1>strTmpString</Value1>
							<Value2>null</Value2>
							<RaiseError Id="7" Param0="u32ProfileCounter">Profile Info element [{0}] is null.</RaiseError>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>strTmpString</Value1>
							<Value2>EmptyString</Value2>
							<RaiseError Id="8" Param0="u32ProfileCounter">Profile Info element [{0}] is an empty string.</RaiseError>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="GetDeviceProfile">
					<CallTestFunction Name="GetDeviceProfile">
						<Parameter>strTmpString</Parameter>
						<OutParameter>uint16CurDeviceProfile</OutParameter>
					</CallTestFunction>
				</TestStep>
				<TestStep Name="GetModuleProfile">
					<CallTestFunction Name="GetModuleProfile">
						<Parameter>strTmpString</Parameter>
						<OutParameter>uint16CurModuleProfile</OutParameter>
					</CallTestFunction>
				</TestStep>
				<TestStep Name="GetSubModuleProfile">
					<CallTestFunction Name="GetSubModuleProfile">
						<Parameter>strTmpString</Parameter>
						<OutParameter>uint16CurSubModuleProfile</OutParameter>
					</CallTestFunction>
				</TestStep>
				<TestStep Name="DumpProfileInfo">
					<Description Id="9" Param0="uint16CurDeviceProfile" Param1="uint16CurModuleProfile" Param2="uint16CurSubModuleProfile" Param3="u32ProfileCounter" Level="Output">Module[{3}] : DeviceProfile '{0}' ; ModuleProfile '{1}' ; SubModuleProfile '{2}'</Description>
					<Compare>
						<Equal>
							<Value1>bIgnoreProfileID</Value1>
							<Value2>true</Value2>
							<GotoStep>IndicateThatAtleastOneModuleMatch</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CompareDeviceProfile">
					<Compare>
						<NotEqual>
							<Value1>uint16CurDeviceProfile</Value1>
							<Value2>5003</Value2>
							<WriteLine Id="10" Param0="uint16CurDeviceProfile" Level="Output">Skip Profile  (Test Device Profile '5003' != Cur Device Profile '{0}')</WriteLine>
						</NotEqual>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>uint16CurDeviceProfile</Value1>
							<Value2>5003</Value2>
							<GotoStep>ProfileLoopEnd</GotoStep>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep Name="CompareModuleProfile">
					<Compare>
						<NotEqual>
							<Value1>uint16CurModuleProfile</Value1>
							<Value2>2011</Value2>
							<WriteLine Id="11" Param0="uint16CurModuleProfile" Level="Output">Skip Profile  (Test Module Profile '2011' != Cur Module Profile '{0}')</WriteLine>
						</NotEqual>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>uint16CurModuleProfile</Value1>
							<Value2>2011</Value2>
							<GotoStep>ProfileLoopEnd</GotoStep>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep Name="CompareSubModuleProfile">
					<Compare>
						<NotEqual>
							<Value1>uint16CurSubModuleProfile</Value1>
							<Value2>0</Value2>
							<WriteLine Id="12" Param0="uint16CurSubModuleProfile" Level="Output">Skip Profile  (Test SubModule Profile '0' != Cur SubModule Profile '{0}')</WriteLine>
						</NotEqual>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>uint16CurSubModuleProfile</Value1>
							<Value2>0</Value2>
							<GotoStep>ProfileLoopEnd</GotoStep>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep Name="IndicateThatAtleastOneModuleMatch">
					<SetVariable Target="bAtLeastOneModuleMatch">true</SetVariable>
				</TestStep>
				<TestStep Name="GetObjectIndexInclOffset">
					<SetVariable Target="u16ObjectIndexInclOffset">#x6005 + (u32ProfileCounter * #x10)</SetVariable>
					<WriteLine Id="13" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : ObjectIndex '0x{0:X}'</WriteLine>
				</TestStep>
				<TestStep Name="LoadDeviceObjectDictionary">
					<Description Id="14" Level="Verbose">Load 'online' object dictionary for testing.</Description>
					<GetObjectDictionary Target="odDeviceObjectdictionary">
						<DictionaryType>Online</DictionaryType>
					</GetObjectDictionary>
					<RaiseErrorOnFailure Id="15">VerifyObject : failed to load online object dictionary.</RaiseErrorOnFailure>
				</TestStep>
				<TestStep Name="CallCheckObjectDescription">
					<Description Id="16" Param0="u16ObjectIndexInclOffset" Level="Output">Verify the object description 0x{0:X4} 'Actual Setpoint'.</Description>
					<CallTestFunction Name="CheckObjectDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"online"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>"Actual Setpoint"</Parameter>
						<Parameter>null</Parameter>
						<Parameter>9</Parameter>
						<Parameter>-1</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<GotoStep>ProfileLoopEnd</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="InitEntryBittOffset">
					<SetVariable Target="i32CurrentBitOffset">0</SetVariable>
				</TestStep>
				<TestStep Name="StartSi0">
					<Description Id="17" Level="Output">Start validate SubIndex0</Description>
					<WriteLine Id="18" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : Subindex '0x{0:X}.0'</WriteLine>
				</TestStep>
				<TestStep Name="CallSi0CheckEntryDescription">
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"online"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>0</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>null</Parameter>
						<Parameter>5</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>null</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>null</Parameter>
						<Parameter>null</Parameter>
						<Parameter>null</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>8</Parameter>
						<Parameter>i32CurrentBitOffset</Parameter>
						<Parameter>true</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="EndSi0">
					<SetVariable Target="i32CurrentBitOffset">16</SetVariable>
				</TestStep>
				<TestStep Name="StartSi1">
					<Description Id="19" Level="Output">Start validate SubIndex1</Description>
					<WriteLine Id="20" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : Subindex '0x{0:X}.1'</WriteLine>
				</TestStep>
				<TestStep Name="CallSi1CheckEntryDescription">
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"online"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>1</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>"Actual Setpoint"</Parameter>
						<Parameter>8</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>null</Parameter>
						<Parameter>T</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>32</Parameter>
						<Parameter>i32CurrentBitOffset</Parameter>
						<Parameter>true</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="EndSi1">
					<SetVariable Target="i32CurrentBitOffset">i32CurrentBitOffset + 32</SetVariable>
				</TestStep>
				<TestStep Name="CheckReservedEntryRange_2_to_255">
					<Description Id="21" Level="Output">Start check reserved entry range 2 to 255</Description>
					<CallTestFunction Name="CheckReservedEntryRange">
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>2</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>odDeviceObjectdictionary</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="ProfileLoopEnd">
					<Compare>
						<Equal>
							<Value1>bAtLeastOneModuleMatch</Value1>
							<Value2>false</Value2>
							<GotoStep>HandleAbortTestCaseOnFirstError</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="HandleAbortTestCaseOnFirstError">
					<Compare>
						<Equal>
							<Value1>bAbortTestCaseOnFirstError</Value1>
							<Value2>false</Value2>
							<GotoStep>ProfileLoopIncrement</GotoStep>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>strResult</Value1>
							<Value2>EmptyString</Value2>
							<GotoStep>ProfileLoopIncrement</GotoStep>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="22" Level="Output">Object verification for all following modules abort because an error was already detected for the current module.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>END</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="ProfileLoopIncrement">
					<SetVariable Target="u32ProfileCounter">u32ProfileCounter + 1</SetVariable>
					<Compare>
						<Greater>
							<Value1>u32CurrentProfilesLength</Value1>
							<Value2>u32ProfileCounter</Value2>
							<GotoStep>ProfileLoopStart</GotoStep>
						</Greater>
					</Compare>
				</TestStep>
				<TestStep Name="END">
					<Compare>
						<NotEqual>
							<Value1>bAtLeastOneModuleMatch</Value1>
							<Value2>true</Value2>
							<SkipCase Id="23">SKIP TEST(no module/channel supports the current profile)</SkipCase>
						</NotEqual>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bDEBUG</Value1>
							<Value2>true</Value2>
							<WriteLine Id="24" Param0="strResult" Level="Verbose">DEBUG | Result : '{0}'.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>strResult</Value1>
							<Value2>EmptyString</Value2>
							<ReturnSuccess Id="25">Test succeed</ReturnSuccess>
						</Equal>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>strResult</Value1>
							<Value2>EmptyString</Value2>
							<RaiseError Id="26"></RaiseError>
						</NotEqual>
					</Compare>
				</TestStep>
			</TestCase>
			<TestCase Name="offline | 0x6006 (Actual Values)" CaseId="13">
				<Description>
					<PreCondition>- The device profile is 5003
- The module profile is 2011
- The submodule profile is 0</PreCondition>
					<Action>- Iterate over all offline defined modules/channels and if the PreCondition matches the following operations are done:
- Get the offline description of object 0x6006(+module specific offset) 'Actual Values' and all entries
 Check:
    (Name)
    BitSize
    DataType
    Rx / Tx mappable
    Default Data
    MinData
    Flags       </Action>
					<PostCondition>Error if
- mandatory object / entry is not defined
- an optional object exists and the entries are invalid
- Object / entry description does not match with the specification</PostCondition>
					<ProposalForSolution>- Define the missing objects
- correct object / entry description</ProposalForSolution>
					<References>
						<Reference Specification="ETG.5003.2011"></Reference>
					</References>
					<Mandatory>true</Mandatory>
				</Description>
				<TestStep Name="InitResult">
					<SetVariable Target="strResult">EmptyString</SetVariable>
				</TestStep>
				<TestStep Name="CheckIfOdAvailable">
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Mailbox</Value1>
							<Value2>false</Value2>
							<SkipCase Id="1">DuT does not support mailbox.</SkipCase>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Mailbox.CoE</Value1>
							<Value2>false</Value2>
							<SkipCase Id="2">DuT does not support CoE.</SkipCase>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep>
					<GetObjectDictionary Target="odDeviceObjectdictionary">
						<DictionaryType>Offline</DictionaryType>
					</GetObjectDictionary>
					<SkipOnFailure Id="3">No offline object dictionary defined.</SkipOnFailure>
				</TestStep>
				<TestStep>
					<GetObjectList Count="u32Tmp" Target="odDeviceObjectdictionaryList" SourceDict="odDeviceObjectdictionary"></GetObjectList>
					<Compare>
						<Equal>
							<Value1>u32Tmp</Value1>
							<Value2>0</Value2>
							<SkipCase Id="4">No offline object dictionary defined.</SkipCase>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="InitAtLeastOneProfileMatch">
					<SetVariable Target="bAtLeastOneModuleMatch">false</SetVariable>
				</TestStep>
				<TestStep Name="GetCurrentProfileList">
					<SizeOf UInt32Var="u32Tmp">arrOfflineProfiles</SizeOf>
					<Compare>
						<Equal>
							<Value1>u32Tmp</Value1>
							<Value2>0</Value2>
							<CallTestFunction Name="GetCurrentProfileList">
								<Parameter>"offline"</Parameter>
								<Parameter>"SafeOP"</Parameter>
								<OutParameter>arrOfflineProfiles</OutParameter>
							</CallTestFunction>
						</Equal>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>u32Tmp</Value1>
							<Value2>0</Value2>
							<WriteLine Id="5" Param0="arrOfflineProfiles" Level="Verbose">Use previously created profile list ({0})</WriteLine>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep>
					<SizeOf UInt32Var="u32Tmp">arrOfflineProfiles</SizeOf>
				</TestStep>
				<TestStep>
					<InitArray TargetArray="arrCurrentProfiles" Length="u32Tmp"></InitArray>
				</TestStep>
				<TestStep>
					<CopyArray>
						<SourceArray>arrOfflineProfiles</SourceArray>
						<DestinationArray>arrCurrentProfiles</DestinationArray>
						<Length>u32Tmp</Length>
					</CopyArray>
				</TestStep>
				<TestStep Name="InitProfileLoopCounter">
					<SetVariable Target="u32ProfileCounter">0</SetVariable>
				</TestStep>
				<TestStep Name="GetProfileArrayLength">
					<SizeOf UInt32Var="u32CurrentProfilesLength">arrCurrentProfiles</SizeOf>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="6" Param0="u32CurrentProfilesLength" Level="Verbose">'{0}' Profile(s) defined offline.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>u32CurrentProfilesLength</Value1>
							<Value2>0</Value2>
							<SkipCase Id="7">Skip case | no profile defined.</SkipCase>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="ProfileLoopStart">
					<GetArrayItem SourceArray="arrCurrentProfiles" Target="strTmpString" Index="u32ProfileCounter"></GetArrayItem>
				</TestStep>
				<TestStep Name="CheckProfileInformationString">
					<Compare>
						<Equal>
							<Value1>strTmpString</Value1>
							<Value2>null</Value2>
							<RaiseError Id="8" Param0="u32ProfileCounter">Profile Info element [{0}] is null.</RaiseError>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>strTmpString</Value1>
							<Value2>EmptyString</Value2>
							<RaiseError Id="9" Param0="u32ProfileCounter">Profile Info element [{0}] is an empty string.</RaiseError>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="GetDeviceProfile">
					<CallTestFunction Name="GetDeviceProfile">
						<Parameter>strTmpString</Parameter>
						<OutParameter>uint16CurDeviceProfile</OutParameter>
					</CallTestFunction>
				</TestStep>
				<TestStep Name="GetModuleProfile">
					<CallTestFunction Name="GetModuleProfile">
						<Parameter>strTmpString</Parameter>
						<OutParameter>uint16CurModuleProfile</OutParameter>
					</CallTestFunction>
				</TestStep>
				<TestStep Name="GetSubModuleProfile">
					<CallTestFunction Name="GetSubModuleProfile">
						<Parameter>strTmpString</Parameter>
						<OutParameter>uint16CurSubModuleProfile</OutParameter>
					</CallTestFunction>
				</TestStep>
				<TestStep Name="DumpProfileInfo">
					<Description Id="10" Param0="uint16CurDeviceProfile" Param1="uint16CurModuleProfile" Param2="uint16CurSubModuleProfile" Param3="u32ProfileCounter" Level="Output">Module[{3}] : DeviceProfile '{0}' ; ModuleProfile '{1}' ; SubModuleProfile '{2}'</Description>
					<Compare>
						<Equal>
							<Value1>bIgnoreProfileID</Value1>
							<Value2>true</Value2>
							<GotoStep>IndicateThatAtleastOneModuleMatch</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CompareDeviceProfile">
					<Compare>
						<NotEqual>
							<Value1>uint16CurDeviceProfile</Value1>
							<Value2>5003</Value2>
							<WriteLine Id="11" Param0="uint16CurDeviceProfile" Level="Output">Skip Profile  (Test Device Profile '5003' != Cur Device Profile '{0}')</WriteLine>
						</NotEqual>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>uint16CurDeviceProfile</Value1>
							<Value2>5003</Value2>
							<GotoStep>ProfileLoopEnd</GotoStep>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep Name="CompareModuleProfile">
					<Compare>
						<NotEqual>
							<Value1>uint16CurModuleProfile</Value1>
							<Value2>2011</Value2>
							<WriteLine Id="12" Param0="uint16CurModuleProfile" Level="Output">Skip Profile  (Test Module Profile '2011' != Cur Module Profile '{0}')</WriteLine>
						</NotEqual>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>uint16CurModuleProfile</Value1>
							<Value2>2011</Value2>
							<GotoStep>ProfileLoopEnd</GotoStep>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep Name="CompareSubModuleProfile">
					<Compare>
						<NotEqual>
							<Value1>uint16CurSubModuleProfile</Value1>
							<Value2>0</Value2>
							<WriteLine Id="13" Param0="uint16CurSubModuleProfile" Level="Output">Skip Profile  (Test SubModule Profile '0' != Cur SubModule Profile '{0}')</WriteLine>
						</NotEqual>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>uint16CurSubModuleProfile</Value1>
							<Value2>0</Value2>
							<GotoStep>ProfileLoopEnd</GotoStep>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep Name="IndicateThatAtleastOneModuleMatch">
					<SetVariable Target="bAtLeastOneModuleMatch">true</SetVariable>
				</TestStep>
				<TestStep Name="GetObjectIndexInclOffset">
					<SetVariable Target="u16ObjectIndexInclOffset">#x6006 + (u32ProfileCounter * #x10)</SetVariable>
					<WriteLine Id="14" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : ObjectIndex '0x{0:X}'</WriteLine>
				</TestStep>
				<TestStep Name="LoadDeviceObjectDictionary">
					<Description Id="15" Level="Verbose">Load 'offline' object dictionary for testing.</Description>
					<GetObjectDictionary Target="odDeviceObjectdictionary">
						<DictionaryType>Offline</DictionaryType>
					</GetObjectDictionary>
					<RaiseErrorOnFailure Id="16">VerifyObject : failed to load offline object dictionary.</RaiseErrorOnFailure>
				</TestStep>
				<TestStep Name="CallCheckObjectDescription">
					<Description Id="17" Param0="u16ObjectIndexInclOffset" Level="Output">Verify the object description 0x{0:X4} 'Actual Values'.</Description>
					<CallTestFunction Name="CheckObjectDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"offline"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>"Actual Values"</Parameter>
						<Parameter>null</Parameter>
						<Parameter>9</Parameter>
						<Parameter>-1</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<GotoStep>ProfileLoopEnd</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="InitEntryBittOffset">
					<SetVariable Target="i32CurrentBitOffset">0</SetVariable>
				</TestStep>
				<TestStep Name="StartSi0">
					<Description Id="18" Level="Output">Start validate SubIndex0</Description>
					<WriteLine Id="19" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : Subindex '0x{0:X}.0'</WriteLine>
				</TestStep>
				<TestStep Name="CallSi0CheckEntryDescription">
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"offline"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>0</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>null</Parameter>
						<Parameter>5</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>null</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>null</Parameter>
						<Parameter>null</Parameter>
						<Parameter>null</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>8</Parameter>
						<Parameter>i32CurrentBitOffset</Parameter>
						<Parameter>true</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="EndSi0">
					<SetVariable Target="i32CurrentBitOffset">16</SetVariable>
				</TestStep>
				<TestStep Name="StartSi1">
					<Description Id="20" Level="Output">Start validate SubIndex1</Description>
					<WriteLine Id="21" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : Subindex '0x{0:X}.1'</WriteLine>
				</TestStep>
				<TestStep Name="CallSi1CheckEntryDescription">
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"offline"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>1</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>"Actual Forward Power"</Parameter>
						<Parameter>8</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>null</Parameter>
						<Parameter>T</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>32</Parameter>
						<Parameter>i32CurrentBitOffset</Parameter>
						<Parameter>true</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="EndSi1">
					<SetVariable Target="i32CurrentBitOffset">i32CurrentBitOffset + 32</SetVariable>
				</TestStep>
				<TestStep Name="StartSi2">
					<Description Id="22" Level="Output">Start validate SubIndex2</Description>
					<WriteLine Id="23" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : Subindex '0x{0:X}.2'</WriteLine>
				</TestStep>
				<TestStep Name="CallSi2CheckEntryDescription">
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"offline"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>2</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>"Actual Reflected Power"</Parameter>
						<Parameter>8</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>null</Parameter>
						<Parameter>T</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>32</Parameter>
						<Parameter>i32CurrentBitOffset</Parameter>
						<Parameter>true</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="EndSi2">
					<SetVariable Target="i32CurrentBitOffset">i32CurrentBitOffset + 32</SetVariable>
				</TestStep>
				<TestStep Name="StartSi3">
					<Description Id="24" Level="Output">Start validate SubIndex3</Description>
					<WriteLine Id="25" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : Subindex '0x{0:X}.3'</WriteLine>
				</TestStep>
				<TestStep Name="CallSi3CheckEntryDescription">
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"offline"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>3</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>"Actual Delivered Power"</Parameter>
						<Parameter>8</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>null</Parameter>
						<Parameter>T</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>32</Parameter>
						<Parameter>i32CurrentBitOffset</Parameter>
						<Parameter>true</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="EndSi3">
					<SetVariable Target="i32CurrentBitOffset">i32CurrentBitOffset + 32</SetVariable>
				</TestStep>
				<TestStep Name="CheckReservedEntryRange_4_to_255">
					<Description Id="26" Level="Output">Start check reserved entry range 4 to 255</Description>
					<CallTestFunction Name="CheckReservedEntryRange">
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>4</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>odDeviceObjectdictionary</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="ProfileLoopEnd">
					<Compare>
						<Equal>
							<Value1>bAtLeastOneModuleMatch</Value1>
							<Value2>false</Value2>
							<GotoStep>HandleAbortTestCaseOnFirstError</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="HandleAbortTestCaseOnFirstError">
					<Compare>
						<Equal>
							<Value1>bAbortTestCaseOnFirstError</Value1>
							<Value2>false</Value2>
							<GotoStep>ProfileLoopIncrement</GotoStep>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>strResult</Value1>
							<Value2>EmptyString</Value2>
							<GotoStep>ProfileLoopIncrement</GotoStep>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="27" Level="Output">Object verification for all following modules abort because an error was already detected for the current module.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>END</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="ProfileLoopIncrement">
					<SetVariable Target="u32ProfileCounter">u32ProfileCounter + 1</SetVariable>
					<Compare>
						<Greater>
							<Value1>u32CurrentProfilesLength</Value1>
							<Value2>u32ProfileCounter</Value2>
							<GotoStep>ProfileLoopStart</GotoStep>
						</Greater>
					</Compare>
				</TestStep>
				<TestStep Name="END">
					<Compare>
						<NotEqual>
							<Value1>bAtLeastOneModuleMatch</Value1>
							<Value2>true</Value2>
							<SkipCase Id="28">SKIP TEST(no module/channel supports the current profile)</SkipCase>
						</NotEqual>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bDEBUG</Value1>
							<Value2>true</Value2>
							<WriteLine Id="29" Param0="strResult" Level="Verbose">DEBUG | Result : '{0}'.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>strResult</Value1>
							<Value2>EmptyString</Value2>
							<ReturnSuccess Id="30">Test succeed</ReturnSuccess>
						</Equal>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>strResult</Value1>
							<Value2>EmptyString</Value2>
							<RaiseError Id="31"></RaiseError>
						</NotEqual>
					</Compare>
				</TestStep>
			</TestCase>
			<TestCase Name="online | 0x6006 (Actual Values)" CaseId="14">
				<Description>
					<PreCondition>- The device profile is 5003
- The module profile is 2011
- The submodule profile is 0</PreCondition>
					<Action>- Iterate over all online defined modules/channels and if the PreCondition matches the following operations are done:
- Get the online description of object 0x6006(+module specific offset) 'Actual Values' and all entries
 Check:
    (Name)
    BitSize
    DataType
    Rx / Tx mappable
    Default Data
    MinData
    Flags       </Action>
					<PostCondition>Error if
- mandatory object / entry is not defined
- an optional object exists and the entries are invalid
- Object / entry description does not match with the specification</PostCondition>
					<ProposalForSolution>- Define the missing objects
- correct object / entry description</ProposalForSolution>
					<References>
						<Reference Specification="ETG.5003.2011"></Reference>
					</References>
					<Mandatory>true</Mandatory>
				</Description>
				<TestStep Name="InitResult">
					<SetVariable Target="strResult">EmptyString</SetVariable>
				</TestStep>
				<TestStep Name="CheckIfOdAvailable">
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Mailbox</Value1>
							<Value2>false</Value2>
							<SkipCase Id="1">DuT does not support mailbox.</SkipCase>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Mailbox.CoE</Value1>
							<Value2>false</Value2>
							<SkipCase Id="2">DuT does not support CoE.</SkipCase>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Mailbox.CoE.SdoInfo</Value1>
							<Value2>false</Value2>
							<SkipCase Id="3">DuT does not support SDO Info.</SkipCase>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="InitAtLeastOneProfileMatch">
					<SetVariable Target="bAtLeastOneModuleMatch">false</SetVariable>
				</TestStep>
				<TestStep Name="GetCurrentProfileList">
					<SizeOf UInt32Var="u32Tmp">arrOnlineProfiles</SizeOf>
					<Compare>
						<Equal>
							<Value1>u32Tmp</Value1>
							<Value2>0</Value2>
							<CallTestFunction Name="GetCurrentProfileList">
								<Parameter>"online"</Parameter>
								<Parameter>"SafeOP"</Parameter>
								<OutParameter>arrOnlineProfiles</OutParameter>
							</CallTestFunction>
						</Equal>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>u32Tmp</Value1>
							<Value2>0</Value2>
							<WriteLine Id="4" Param0="arrOnlineProfiles" Level="Verbose">Use previously created profile list ({0})</WriteLine>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep>
					<SizeOf UInt32Var="u32Tmp">arrOnlineProfiles</SizeOf>
				</TestStep>
				<TestStep>
					<InitArray TargetArray="arrCurrentProfiles" Length="u32Tmp"></InitArray>
				</TestStep>
				<TestStep>
					<CopyArray>
						<SourceArray>arrOnlineProfiles</SourceArray>
						<DestinationArray>arrCurrentProfiles</DestinationArray>
						<Length>u32Tmp</Length>
					</CopyArray>
				</TestStep>
				<TestStep Name="InitProfileLoopCounter">
					<SetVariable Target="u32ProfileCounter">0</SetVariable>
				</TestStep>
				<TestStep Name="GetProfileArrayLength">
					<SizeOf UInt32Var="u32CurrentProfilesLength">arrCurrentProfiles</SizeOf>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="5" Param0="u32CurrentProfilesLength" Level="Verbose">'{0}' Profile(s) defined online.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>u32CurrentProfilesLength</Value1>
							<Value2>0</Value2>
							<SkipCase Id="6">Skip case | no profile defined.</SkipCase>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="ProfileLoopStart">
					<GetArrayItem SourceArray="arrCurrentProfiles" Target="strTmpString" Index="u32ProfileCounter"></GetArrayItem>
				</TestStep>
				<TestStep Name="CheckProfileInformationString">
					<Compare>
						<Equal>
							<Value1>strTmpString</Value1>
							<Value2>null</Value2>
							<RaiseError Id="7" Param0="u32ProfileCounter">Profile Info element [{0}] is null.</RaiseError>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>strTmpString</Value1>
							<Value2>EmptyString</Value2>
							<RaiseError Id="8" Param0="u32ProfileCounter">Profile Info element [{0}] is an empty string.</RaiseError>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="GetDeviceProfile">
					<CallTestFunction Name="GetDeviceProfile">
						<Parameter>strTmpString</Parameter>
						<OutParameter>uint16CurDeviceProfile</OutParameter>
					</CallTestFunction>
				</TestStep>
				<TestStep Name="GetModuleProfile">
					<CallTestFunction Name="GetModuleProfile">
						<Parameter>strTmpString</Parameter>
						<OutParameter>uint16CurModuleProfile</OutParameter>
					</CallTestFunction>
				</TestStep>
				<TestStep Name="GetSubModuleProfile">
					<CallTestFunction Name="GetSubModuleProfile">
						<Parameter>strTmpString</Parameter>
						<OutParameter>uint16CurSubModuleProfile</OutParameter>
					</CallTestFunction>
				</TestStep>
				<TestStep Name="DumpProfileInfo">
					<Description Id="9" Param0="uint16CurDeviceProfile" Param1="uint16CurModuleProfile" Param2="uint16CurSubModuleProfile" Param3="u32ProfileCounter" Level="Output">Module[{3}] : DeviceProfile '{0}' ; ModuleProfile '{1}' ; SubModuleProfile '{2}'</Description>
					<Compare>
						<Equal>
							<Value1>bIgnoreProfileID</Value1>
							<Value2>true</Value2>
							<GotoStep>IndicateThatAtleastOneModuleMatch</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CompareDeviceProfile">
					<Compare>
						<NotEqual>
							<Value1>uint16CurDeviceProfile</Value1>
							<Value2>5003</Value2>
							<WriteLine Id="10" Param0="uint16CurDeviceProfile" Level="Output">Skip Profile  (Test Device Profile '5003' != Cur Device Profile '{0}')</WriteLine>
						</NotEqual>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>uint16CurDeviceProfile</Value1>
							<Value2>5003</Value2>
							<GotoStep>ProfileLoopEnd</GotoStep>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep Name="CompareModuleProfile">
					<Compare>
						<NotEqual>
							<Value1>uint16CurModuleProfile</Value1>
							<Value2>2011</Value2>
							<WriteLine Id="11" Param0="uint16CurModuleProfile" Level="Output">Skip Profile  (Test Module Profile '2011' != Cur Module Profile '{0}')</WriteLine>
						</NotEqual>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>uint16CurModuleProfile</Value1>
							<Value2>2011</Value2>
							<GotoStep>ProfileLoopEnd</GotoStep>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep Name="CompareSubModuleProfile">
					<Compare>
						<NotEqual>
							<Value1>uint16CurSubModuleProfile</Value1>
							<Value2>0</Value2>
							<WriteLine Id="12" Param0="uint16CurSubModuleProfile" Level="Output">Skip Profile  (Test SubModule Profile '0' != Cur SubModule Profile '{0}')</WriteLine>
						</NotEqual>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>uint16CurSubModuleProfile</Value1>
							<Value2>0</Value2>
							<GotoStep>ProfileLoopEnd</GotoStep>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep Name="IndicateThatAtleastOneModuleMatch">
					<SetVariable Target="bAtLeastOneModuleMatch">true</SetVariable>
				</TestStep>
				<TestStep Name="GetObjectIndexInclOffset">
					<SetVariable Target="u16ObjectIndexInclOffset">#x6006 + (u32ProfileCounter * #x10)</SetVariable>
					<WriteLine Id="13" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : ObjectIndex '0x{0:X}'</WriteLine>
				</TestStep>
				<TestStep Name="LoadDeviceObjectDictionary">
					<Description Id="14" Level="Verbose">Load 'online' object dictionary for testing.</Description>
					<GetObjectDictionary Target="odDeviceObjectdictionary">
						<DictionaryType>Online</DictionaryType>
					</GetObjectDictionary>
					<RaiseErrorOnFailure Id="15">VerifyObject : failed to load online object dictionary.</RaiseErrorOnFailure>
				</TestStep>
				<TestStep Name="CallCheckObjectDescription">
					<Description Id="16" Param0="u16ObjectIndexInclOffset" Level="Output">Verify the object description 0x{0:X4} 'Actual Values'.</Description>
					<CallTestFunction Name="CheckObjectDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"online"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>"Actual Values"</Parameter>
						<Parameter>null</Parameter>
						<Parameter>9</Parameter>
						<Parameter>-1</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<GotoStep>ProfileLoopEnd</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="InitEntryBittOffset">
					<SetVariable Target="i32CurrentBitOffset">0</SetVariable>
				</TestStep>
				<TestStep Name="StartSi0">
					<Description Id="17" Level="Output">Start validate SubIndex0</Description>
					<WriteLine Id="18" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : Subindex '0x{0:X}.0'</WriteLine>
				</TestStep>
				<TestStep Name="CallSi0CheckEntryDescription">
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"online"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>0</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>null</Parameter>
						<Parameter>5</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>null</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>null</Parameter>
						<Parameter>null</Parameter>
						<Parameter>null</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>8</Parameter>
						<Parameter>i32CurrentBitOffset</Parameter>
						<Parameter>true</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="EndSi0">
					<SetVariable Target="i32CurrentBitOffset">16</SetVariable>
				</TestStep>
				<TestStep Name="StartSi1">
					<Description Id="19" Level="Output">Start validate SubIndex1</Description>
					<WriteLine Id="20" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : Subindex '0x{0:X}.1'</WriteLine>
				</TestStep>
				<TestStep Name="CallSi1CheckEntryDescription">
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"online"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>1</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>"Actual Forward Power"</Parameter>
						<Parameter>8</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>null</Parameter>
						<Parameter>T</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>32</Parameter>
						<Parameter>i32CurrentBitOffset</Parameter>
						<Parameter>true</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="EndSi1">
					<SetVariable Target="i32CurrentBitOffset">i32CurrentBitOffset + 32</SetVariable>
				</TestStep>
				<TestStep Name="StartSi2">
					<Description Id="21" Level="Output">Start validate SubIndex2</Description>
					<WriteLine Id="22" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : Subindex '0x{0:X}.2'</WriteLine>
				</TestStep>
				<TestStep Name="CallSi2CheckEntryDescription">
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"online"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>2</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>"Actual Reflected Power"</Parameter>
						<Parameter>8</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>null</Parameter>
						<Parameter>T</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>32</Parameter>
						<Parameter>i32CurrentBitOffset</Parameter>
						<Parameter>true</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="EndSi2">
					<SetVariable Target="i32CurrentBitOffset">i32CurrentBitOffset + 32</SetVariable>
				</TestStep>
				<TestStep Name="StartSi3">
					<Description Id="23" Level="Output">Start validate SubIndex3</Description>
					<WriteLine Id="24" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : Subindex '0x{0:X}.3'</WriteLine>
				</TestStep>
				<TestStep Name="CallSi3CheckEntryDescription">
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"online"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>3</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>"Actual Delivered Power"</Parameter>
						<Parameter>8</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>null</Parameter>
						<Parameter>T</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>32</Parameter>
						<Parameter>i32CurrentBitOffset</Parameter>
						<Parameter>true</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="EndSi3">
					<SetVariable Target="i32CurrentBitOffset">i32CurrentBitOffset + 32</SetVariable>
				</TestStep>
				<TestStep Name="CheckReservedEntryRange_4_to_255">
					<Description Id="25" Level="Output">Start check reserved entry range 4 to 255</Description>
					<CallTestFunction Name="CheckReservedEntryRange">
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>4</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>odDeviceObjectdictionary</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="ProfileLoopEnd">
					<Compare>
						<Equal>
							<Value1>bAtLeastOneModuleMatch</Value1>
							<Value2>false</Value2>
							<GotoStep>HandleAbortTestCaseOnFirstError</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="HandleAbortTestCaseOnFirstError">
					<Compare>
						<Equal>
							<Value1>bAbortTestCaseOnFirstError</Value1>
							<Value2>false</Value2>
							<GotoStep>ProfileLoopIncrement</GotoStep>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>strResult</Value1>
							<Value2>EmptyString</Value2>
							<GotoStep>ProfileLoopIncrement</GotoStep>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="26" Level="Output">Object verification for all following modules abort because an error was already detected for the current module.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>END</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="ProfileLoopIncrement">
					<SetVariable Target="u32ProfileCounter">u32ProfileCounter + 1</SetVariable>
					<Compare>
						<Greater>
							<Value1>u32CurrentProfilesLength</Value1>
							<Value2>u32ProfileCounter</Value2>
							<GotoStep>ProfileLoopStart</GotoStep>
						</Greater>
					</Compare>
				</TestStep>
				<TestStep Name="END">
					<Compare>
						<NotEqual>
							<Value1>bAtLeastOneModuleMatch</Value1>
							<Value2>true</Value2>
							<SkipCase Id="27">SKIP TEST(no module/channel supports the current profile)</SkipCase>
						</NotEqual>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bDEBUG</Value1>
							<Value2>true</Value2>
							<WriteLine Id="28" Param0="strResult" Level="Verbose">DEBUG | Result : '{0}'.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>strResult</Value1>
							<Value2>EmptyString</Value2>
							<ReturnSuccess Id="29">Test succeed</ReturnSuccess>
						</Equal>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>strResult</Value1>
							<Value2>EmptyString</Value2>
							<RaiseError Id="30"></RaiseError>
						</NotEqual>
					</Compare>
				</TestStep>
			</TestCase>
			<TestCase Name="offline | 0x6007 (reserved object)" CaseId="15">
				<Description>
					<PreCondition>- The device profile is 5003
- The module profile is 2011
- The submodule profile is 0</PreCondition>
					<Action>- Iterate over all offline defined modules/channels and if the PreCondition matches the check if one object in the reserved range is defined</Action>
					<PostCondition>- Error if at least one object is defined</PostCondition>
					<ProposalForSolution>- Remove the defined objects
</ProposalForSolution>
					<References>
						<Reference Specification="ETG.5003.2011"></Reference>
					</References>
					<Mandatory>true</Mandatory>
				</Description>
				<TestStep Name="InitResult">
					<SetVariable Target="strResult">EmptyString</SetVariable>
				</TestStep>
				<TestStep Name="CheckIfOdAvailable">
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Mailbox</Value1>
							<Value2>false</Value2>
							<SkipCase Id="1">DuT does not support mailbox.</SkipCase>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Mailbox.CoE</Value1>
							<Value2>false</Value2>
							<SkipCase Id="2">DuT does not support CoE.</SkipCase>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep>
					<GetObjectDictionary Target="odDeviceObjectdictionary">
						<DictionaryType>Offline</DictionaryType>
					</GetObjectDictionary>
					<SkipOnFailure Id="3">No offline object dictionary defined.</SkipOnFailure>
				</TestStep>
				<TestStep>
					<GetObjectList Count="u32Tmp" Target="odDeviceObjectdictionaryList" SourceDict="odDeviceObjectdictionary"></GetObjectList>
					<Compare>
						<Equal>
							<Value1>u32Tmp</Value1>
							<Value2>0</Value2>
							<SkipCase Id="4">No offline object dictionary defined.</SkipCase>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="InitAtLeastOneProfileMatch">
					<SetVariable Target="bAtLeastOneModuleMatch">false</SetVariable>
				</TestStep>
				<TestStep Name="GetCurrentProfileList">
					<SizeOf UInt32Var="u32Tmp">arrOfflineProfiles</SizeOf>
					<Compare>
						<Equal>
							<Value1>u32Tmp</Value1>
							<Value2>0</Value2>
							<CallTestFunction Name="GetCurrentProfileList">
								<Parameter>"offline"</Parameter>
								<Parameter>"SafeOP"</Parameter>
								<OutParameter>arrOfflineProfiles</OutParameter>
							</CallTestFunction>
						</Equal>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>u32Tmp</Value1>
							<Value2>0</Value2>
							<WriteLine Id="5" Param0="arrOfflineProfiles" Level="Verbose">Use previously created profile list ({0})</WriteLine>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep>
					<SizeOf UInt32Var="u32Tmp">arrOfflineProfiles</SizeOf>
				</TestStep>
				<TestStep>
					<InitArray TargetArray="arrCurrentProfiles" Length="u32Tmp"></InitArray>
				</TestStep>
				<TestStep>
					<CopyArray>
						<SourceArray>arrOfflineProfiles</SourceArray>
						<DestinationArray>arrCurrentProfiles</DestinationArray>
						<Length>u32Tmp</Length>
					</CopyArray>
				</TestStep>
				<TestStep Name="InitProfileLoopCounter">
					<SetVariable Target="u32ProfileCounter">0</SetVariable>
				</TestStep>
				<TestStep Name="GetProfileArrayLength">
					<SizeOf UInt32Var="u32CurrentProfilesLength">arrCurrentProfiles</SizeOf>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="6" Param0="u32CurrentProfilesLength" Level="Verbose">'{0}' Profile(s) defined offline.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>u32CurrentProfilesLength</Value1>
							<Value2>0</Value2>
							<SkipCase Id="7">Skip case | no profile defined.</SkipCase>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="ProfileLoopStart">
					<GetArrayItem SourceArray="arrCurrentProfiles" Target="strTmpString" Index="u32ProfileCounter"></GetArrayItem>
				</TestStep>
				<TestStep Name="CheckProfileInformationString">
					<Compare>
						<Equal>
							<Value1>strTmpString</Value1>
							<Value2>null</Value2>
							<RaiseError Id="8" Param0="u32ProfileCounter">Profile Info element [{0}] is null.</RaiseError>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>strTmpString</Value1>
							<Value2>EmptyString</Value2>
							<RaiseError Id="9" Param0="u32ProfileCounter">Profile Info element [{0}] is an empty string.</RaiseError>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="GetDeviceProfile">
					<CallTestFunction Name="GetDeviceProfile">
						<Parameter>strTmpString</Parameter>
						<OutParameter>uint16CurDeviceProfile</OutParameter>
					</CallTestFunction>
				</TestStep>
				<TestStep Name="GetModuleProfile">
					<CallTestFunction Name="GetModuleProfile">
						<Parameter>strTmpString</Parameter>
						<OutParameter>uint16CurModuleProfile</OutParameter>
					</CallTestFunction>
				</TestStep>
				<TestStep Name="GetSubModuleProfile">
					<CallTestFunction Name="GetSubModuleProfile">
						<Parameter>strTmpString</Parameter>
						<OutParameter>uint16CurSubModuleProfile</OutParameter>
					</CallTestFunction>
				</TestStep>
				<TestStep Name="DumpProfileInfo">
					<Description Id="10" Param0="uint16CurDeviceProfile" Param1="uint16CurModuleProfile" Param2="uint16CurSubModuleProfile" Param3="u32ProfileCounter" Level="Output">Module[{3}] : DeviceProfile '{0}' ; ModuleProfile '{1}' ; SubModuleProfile '{2}'</Description>
					<Compare>
						<Equal>
							<Value1>bIgnoreProfileID</Value1>
							<Value2>true</Value2>
							<GotoStep>IndicateThatAtleastOneModuleMatch</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CompareDeviceProfile">
					<Compare>
						<NotEqual>
							<Value1>uint16CurDeviceProfile</Value1>
							<Value2>5003</Value2>
							<WriteLine Id="11" Param0="uint16CurDeviceProfile" Level="Output">Skip Profile  (Test Device Profile '5003' != Cur Device Profile '{0}')</WriteLine>
						</NotEqual>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>uint16CurDeviceProfile</Value1>
							<Value2>5003</Value2>
							<GotoStep>ProfileLoopEnd</GotoStep>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep Name="CompareModuleProfile">
					<Compare>
						<NotEqual>
							<Value1>uint16CurModuleProfile</Value1>
							<Value2>2011</Value2>
							<WriteLine Id="12" Param0="uint16CurModuleProfile" Level="Output">Skip Profile  (Test Module Profile '2011' != Cur Module Profile '{0}')</WriteLine>
						</NotEqual>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>uint16CurModuleProfile</Value1>
							<Value2>2011</Value2>
							<GotoStep>ProfileLoopEnd</GotoStep>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep Name="CompareSubModuleProfile">
					<Compare>
						<NotEqual>
							<Value1>uint16CurSubModuleProfile</Value1>
							<Value2>0</Value2>
							<WriteLine Id="13" Param0="uint16CurSubModuleProfile" Level="Output">Skip Profile  (Test SubModule Profile '0' != Cur SubModule Profile '{0}')</WriteLine>
						</NotEqual>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>uint16CurSubModuleProfile</Value1>
							<Value2>0</Value2>
							<GotoStep>ProfileLoopEnd</GotoStep>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep Name="IndicateThatAtleastOneModuleMatch">
					<SetVariable Target="bAtLeastOneModuleMatch">true</SetVariable>
				</TestStep>
				<TestStep Name="GetFirstReservedObjectIndexInlcOffset">
					<SetVariable Target="u16ObjectIndexInclOffset">#x6007 + (u32ProfileCounter * #x10)</SetVariable>
					<WriteLine Id="14" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : First reserved object index '0x{0:X}'</WriteLine>
				</TestStep>
				<TestStep Name="GetNextDefinedObjectIndexInlcOffset">
					<SetVariable Target="u16NextDefObjectIndexInclOffset">#x6008 + (u32ProfileCounter * #x0010)</SetVariable>
					<WriteLine Id="15" Param0="u16NextDefObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : Next defined object index '0x{0:X}'</WriteLine>
				</TestStep>
				<TestStep Name="CallCheckReservedObjectRange">
					<Description Id="16" Level="Verbose">VerifyObject : Load 'offline' object dictionary for testing.</Description>
					<CallTestFunction Name="CheckReservedObjectRange">
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>u16NextDefObjectIndexInclOffset</Parameter>
						<Parameter>odDeviceObjectdictionary</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<GotoStep>ProfileLoopEnd</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="ProfileLoopEnd">
					<Compare>
						<Equal>
							<Value1>bAtLeastOneModuleMatch</Value1>
							<Value2>false</Value2>
							<GotoStep>HandleAbortTestCaseOnFirstError</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="HandleAbortTestCaseOnFirstError">
					<Compare>
						<Equal>
							<Value1>bAbortTestCaseOnFirstError</Value1>
							<Value2>false</Value2>
							<GotoStep>ProfileLoopIncrement</GotoStep>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>strResult</Value1>
							<Value2>EmptyString</Value2>
							<GotoStep>ProfileLoopIncrement</GotoStep>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="17" Level="Output">Object verification for all following modules abort because an error was already detected for the current module.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>END</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="ProfileLoopIncrement">
					<SetVariable Target="u32ProfileCounter">u32ProfileCounter + 1</SetVariable>
					<Compare>
						<Greater>
							<Value1>u32CurrentProfilesLength</Value1>
							<Value2>u32ProfileCounter</Value2>
							<GotoStep>ProfileLoopStart</GotoStep>
						</Greater>
					</Compare>
				</TestStep>
				<TestStep Name="END">
					<Compare>
						<NotEqual>
							<Value1>bAtLeastOneModuleMatch</Value1>
							<Value2>true</Value2>
							<SkipCase Id="18">SKIP TEST(no module/channel supports the current profile)</SkipCase>
						</NotEqual>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bDEBUG</Value1>
							<Value2>true</Value2>
							<WriteLine Id="19" Param0="strResult" Level="Verbose">DEBUG | Result : '{0}'.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>strResult</Value1>
							<Value2>EmptyString</Value2>
							<ReturnSuccess Id="20">Test succeed</ReturnSuccess>
						</Equal>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>strResult</Value1>
							<Value2>EmptyString</Value2>
							<RaiseError Id="21"></RaiseError>
						</NotEqual>
					</Compare>
				</TestStep>
			</TestCase>
			<TestCase Name="online | 0x6007 (reserved object)" CaseId="16">
				<Description>
					<PreCondition>- The device profile is 5003
- The module profile is 2011
- The submodule profile is 0</PreCondition>
					<Action>- Iterate over all online defined modules/channels and if the PreCondition matches the check if one object in the reserved range is defined</Action>
					<PostCondition>- Error if at least one object is defined</PostCondition>
					<ProposalForSolution>- Remove the defined objects
</ProposalForSolution>
					<References>
						<Reference Specification="ETG.5003.2011"></Reference>
					</References>
					<Mandatory>true</Mandatory>
				</Description>
				<TestStep Name="InitResult">
					<SetVariable Target="strResult">EmptyString</SetVariable>
				</TestStep>
				<TestStep Name="CheckIfOdAvailable">
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Mailbox</Value1>
							<Value2>false</Value2>
							<SkipCase Id="1">DuT does not support mailbox.</SkipCase>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Mailbox.CoE</Value1>
							<Value2>false</Value2>
							<SkipCase Id="2">DuT does not support CoE.</SkipCase>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Mailbox.CoE.SdoInfo</Value1>
							<Value2>false</Value2>
							<SkipCase Id="3">DuT does not support SDO Info.</SkipCase>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="InitAtLeastOneProfileMatch">
					<SetVariable Target="bAtLeastOneModuleMatch">false</SetVariable>
				</TestStep>
				<TestStep Name="GetCurrentProfileList">
					<SizeOf UInt32Var="u32Tmp">arrOnlineProfiles</SizeOf>
					<Compare>
						<Equal>
							<Value1>u32Tmp</Value1>
							<Value2>0</Value2>
							<CallTestFunction Name="GetCurrentProfileList">
								<Parameter>"online"</Parameter>
								<Parameter>"SafeOP"</Parameter>
								<OutParameter>arrOnlineProfiles</OutParameter>
							</CallTestFunction>
						</Equal>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>u32Tmp</Value1>
							<Value2>0</Value2>
							<WriteLine Id="4" Param0="arrOnlineProfiles" Level="Verbose">Use previously created profile list ({0})</WriteLine>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep>
					<SizeOf UInt32Var="u32Tmp">arrOnlineProfiles</SizeOf>
				</TestStep>
				<TestStep>
					<InitArray TargetArray="arrCurrentProfiles" Length="u32Tmp"></InitArray>
				</TestStep>
				<TestStep>
					<CopyArray>
						<SourceArray>arrOnlineProfiles</SourceArray>
						<DestinationArray>arrCurrentProfiles</DestinationArray>
						<Length>u32Tmp</Length>
					</CopyArray>
				</TestStep>
				<TestStep Name="InitProfileLoopCounter">
					<SetVariable Target="u32ProfileCounter">0</SetVariable>
				</TestStep>
				<TestStep Name="GetProfileArrayLength">
					<SizeOf UInt32Var="u32CurrentProfilesLength">arrCurrentProfiles</SizeOf>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="5" Param0="u32CurrentProfilesLength" Level="Verbose">'{0}' Profile(s) defined online.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>u32CurrentProfilesLength</Value1>
							<Value2>0</Value2>
							<SkipCase Id="6">Skip case | no profile defined.</SkipCase>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="ProfileLoopStart">
					<GetArrayItem SourceArray="arrCurrentProfiles" Target="strTmpString" Index="u32ProfileCounter"></GetArrayItem>
				</TestStep>
				<TestStep Name="CheckProfileInformationString">
					<Compare>
						<Equal>
							<Value1>strTmpString</Value1>
							<Value2>null</Value2>
							<RaiseError Id="7" Param0="u32ProfileCounter">Profile Info element [{0}] is null.</RaiseError>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>strTmpString</Value1>
							<Value2>EmptyString</Value2>
							<RaiseError Id="8" Param0="u32ProfileCounter">Profile Info element [{0}] is an empty string.</RaiseError>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="GetDeviceProfile">
					<CallTestFunction Name="GetDeviceProfile">
						<Parameter>strTmpString</Parameter>
						<OutParameter>uint16CurDeviceProfile</OutParameter>
					</CallTestFunction>
				</TestStep>
				<TestStep Name="GetModuleProfile">
					<CallTestFunction Name="GetModuleProfile">
						<Parameter>strTmpString</Parameter>
						<OutParameter>uint16CurModuleProfile</OutParameter>
					</CallTestFunction>
				</TestStep>
				<TestStep Name="GetSubModuleProfile">
					<CallTestFunction Name="GetSubModuleProfile">
						<Parameter>strTmpString</Parameter>
						<OutParameter>uint16CurSubModuleProfile</OutParameter>
					</CallTestFunction>
				</TestStep>
				<TestStep Name="DumpProfileInfo">
					<Description Id="9" Param0="uint16CurDeviceProfile" Param1="uint16CurModuleProfile" Param2="uint16CurSubModuleProfile" Param3="u32ProfileCounter" Level="Output">Module[{3}] : DeviceProfile '{0}' ; ModuleProfile '{1}' ; SubModuleProfile '{2}'</Description>
					<Compare>
						<Equal>
							<Value1>bIgnoreProfileID</Value1>
							<Value2>true</Value2>
							<GotoStep>IndicateThatAtleastOneModuleMatch</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CompareDeviceProfile">
					<Compare>
						<NotEqual>
							<Value1>uint16CurDeviceProfile</Value1>
							<Value2>5003</Value2>
							<WriteLine Id="10" Param0="uint16CurDeviceProfile" Level="Output">Skip Profile  (Test Device Profile '5003' != Cur Device Profile '{0}')</WriteLine>
						</NotEqual>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>uint16CurDeviceProfile</Value1>
							<Value2>5003</Value2>
							<GotoStep>ProfileLoopEnd</GotoStep>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep Name="CompareModuleProfile">
					<Compare>
						<NotEqual>
							<Value1>uint16CurModuleProfile</Value1>
							<Value2>2011</Value2>
							<WriteLine Id="11" Param0="uint16CurModuleProfile" Level="Output">Skip Profile  (Test Module Profile '2011' != Cur Module Profile '{0}')</WriteLine>
						</NotEqual>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>uint16CurModuleProfile</Value1>
							<Value2>2011</Value2>
							<GotoStep>ProfileLoopEnd</GotoStep>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep Name="CompareSubModuleProfile">
					<Compare>
						<NotEqual>
							<Value1>uint16CurSubModuleProfile</Value1>
							<Value2>0</Value2>
							<WriteLine Id="12" Param0="uint16CurSubModuleProfile" Level="Output">Skip Profile  (Test SubModule Profile '0' != Cur SubModule Profile '{0}')</WriteLine>
						</NotEqual>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>uint16CurSubModuleProfile</Value1>
							<Value2>0</Value2>
							<GotoStep>ProfileLoopEnd</GotoStep>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep Name="IndicateThatAtleastOneModuleMatch">
					<SetVariable Target="bAtLeastOneModuleMatch">true</SetVariable>
				</TestStep>
				<TestStep Name="GetFirstReservedObjectIndexInlcOffset">
					<SetVariable Target="u16ObjectIndexInclOffset">#x6007 + (u32ProfileCounter * #x10)</SetVariable>
					<WriteLine Id="13" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : First reserved object index '0x{0:X}'</WriteLine>
				</TestStep>
				<TestStep Name="GetNextDefinedObjectIndexInlcOffset">
					<SetVariable Target="u16NextDefObjectIndexInclOffset">#x6008 + (u32ProfileCounter * #x0010)</SetVariable>
					<WriteLine Id="14" Param0="u16NextDefObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : Next defined object index '0x{0:X}'</WriteLine>
				</TestStep>
				<TestStep Name="CallCheckReservedObjectRange">
					<Description Id="15" Level="Verbose">VerifyObject : Load 'online' object dictionary for testing.</Description>
					<CallTestFunction Name="CheckReservedObjectRange">
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>u16NextDefObjectIndexInclOffset</Parameter>
						<Parameter>odDeviceObjectdictionary</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<GotoStep>ProfileLoopEnd</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="ProfileLoopEnd">
					<Compare>
						<Equal>
							<Value1>bAtLeastOneModuleMatch</Value1>
							<Value2>false</Value2>
							<GotoStep>HandleAbortTestCaseOnFirstError</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="HandleAbortTestCaseOnFirstError">
					<Compare>
						<Equal>
							<Value1>bAbortTestCaseOnFirstError</Value1>
							<Value2>false</Value2>
							<GotoStep>ProfileLoopIncrement</GotoStep>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>strResult</Value1>
							<Value2>EmptyString</Value2>
							<GotoStep>ProfileLoopIncrement</GotoStep>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="16" Level="Output">Object verification for all following modules abort because an error was already detected for the current module.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>END</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="ProfileLoopIncrement">
					<SetVariable Target="u32ProfileCounter">u32ProfileCounter + 1</SetVariable>
					<Compare>
						<Greater>
							<Value1>u32CurrentProfilesLength</Value1>
							<Value2>u32ProfileCounter</Value2>
							<GotoStep>ProfileLoopStart</GotoStep>
						</Greater>
					</Compare>
				</TestStep>
				<TestStep Name="END">
					<Compare>
						<NotEqual>
							<Value1>bAtLeastOneModuleMatch</Value1>
							<Value2>true</Value2>
							<SkipCase Id="17">SKIP TEST(no module/channel supports the current profile)</SkipCase>
						</NotEqual>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bDEBUG</Value1>
							<Value2>true</Value2>
							<WriteLine Id="18" Param0="strResult" Level="Verbose">DEBUG | Result : '{0}'.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>strResult</Value1>
							<Value2>EmptyString</Value2>
							<ReturnSuccess Id="19">Test succeed</ReturnSuccess>
						</Equal>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>strResult</Value1>
							<Value2>EmptyString</Value2>
							<RaiseError Id="20"></RaiseError>
						</NotEqual>
					</Compare>
				</TestStep>
			</TestCase>
			<TestCase Name="offline | 0x6008 (Internal Device Temperatures)" CaseId="17">
				<Description>
					<PreCondition>- The device profile is 5003
- The module profile is 2011
- The submodule profile is 0</PreCondition>
					<Action>- Iterate over all offline defined modules/channels and if the PreCondition matches the following operations are done:
- Get the offline description of object 0x6008(+module specific offset) 'Internal Device Temperatures' and all entries
 Check:
    (Name)
    BitSize
    DataType
    Rx / Tx mappable
    Default Data
    MinData
    Flags       </Action>
					<PostCondition>Error if
- mandatory object / entry is not defined
- an optional object exists and the entries are invalid
- Object / entry description does not match with the specification</PostCondition>
					<ProposalForSolution>- Define the missing objects
- correct object / entry description</ProposalForSolution>
					<References>
						<Reference Specification="ETG.5003.2011"></Reference>
					</References>
					<Mandatory>true</Mandatory>
				</Description>
				<TestStep Name="InitResult">
					<SetVariable Target="strResult">EmptyString</SetVariable>
				</TestStep>
				<TestStep Name="CheckIfOdAvailable">
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Mailbox</Value1>
							<Value2>false</Value2>
							<SkipCase Id="1">DuT does not support mailbox.</SkipCase>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Mailbox.CoE</Value1>
							<Value2>false</Value2>
							<SkipCase Id="2">DuT does not support CoE.</SkipCase>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep>
					<GetObjectDictionary Target="odDeviceObjectdictionary">
						<DictionaryType>Offline</DictionaryType>
					</GetObjectDictionary>
					<SkipOnFailure Id="3">No offline object dictionary defined.</SkipOnFailure>
				</TestStep>
				<TestStep>
					<GetObjectList Count="u32Tmp" Target="odDeviceObjectdictionaryList" SourceDict="odDeviceObjectdictionary"></GetObjectList>
					<Compare>
						<Equal>
							<Value1>u32Tmp</Value1>
							<Value2>0</Value2>
							<SkipCase Id="4">No offline object dictionary defined.</SkipCase>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="InitAtLeastOneProfileMatch">
					<SetVariable Target="bAtLeastOneModuleMatch">false</SetVariable>
				</TestStep>
				<TestStep Name="GetCurrentProfileList">
					<SizeOf UInt32Var="u32Tmp">arrOfflineProfiles</SizeOf>
					<Compare>
						<Equal>
							<Value1>u32Tmp</Value1>
							<Value2>0</Value2>
							<CallTestFunction Name="GetCurrentProfileList">
								<Parameter>"offline"</Parameter>
								<Parameter>"SafeOP"</Parameter>
								<OutParameter>arrOfflineProfiles</OutParameter>
							</CallTestFunction>
						</Equal>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>u32Tmp</Value1>
							<Value2>0</Value2>
							<WriteLine Id="5" Param0="arrOfflineProfiles" Level="Verbose">Use previously created profile list ({0})</WriteLine>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep>
					<SizeOf UInt32Var="u32Tmp">arrOfflineProfiles</SizeOf>
				</TestStep>
				<TestStep>
					<InitArray TargetArray="arrCurrentProfiles" Length="u32Tmp"></InitArray>
				</TestStep>
				<TestStep>
					<CopyArray>
						<SourceArray>arrOfflineProfiles</SourceArray>
						<DestinationArray>arrCurrentProfiles</DestinationArray>
						<Length>u32Tmp</Length>
					</CopyArray>
				</TestStep>
				<TestStep Name="InitProfileLoopCounter">
					<SetVariable Target="u32ProfileCounter">0</SetVariable>
				</TestStep>
				<TestStep Name="GetProfileArrayLength">
					<SizeOf UInt32Var="u32CurrentProfilesLength">arrCurrentProfiles</SizeOf>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="6" Param0="u32CurrentProfilesLength" Level="Verbose">'{0}' Profile(s) defined offline.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>u32CurrentProfilesLength</Value1>
							<Value2>0</Value2>
							<SkipCase Id="7">Skip case | no profile defined.</SkipCase>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="ProfileLoopStart">
					<GetArrayItem SourceArray="arrCurrentProfiles" Target="strTmpString" Index="u32ProfileCounter"></GetArrayItem>
				</TestStep>
				<TestStep Name="CheckProfileInformationString">
					<Compare>
						<Equal>
							<Value1>strTmpString</Value1>
							<Value2>null</Value2>
							<RaiseError Id="8" Param0="u32ProfileCounter">Profile Info element [{0}] is null.</RaiseError>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>strTmpString</Value1>
							<Value2>EmptyString</Value2>
							<RaiseError Id="9" Param0="u32ProfileCounter">Profile Info element [{0}] is an empty string.</RaiseError>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="GetDeviceProfile">
					<CallTestFunction Name="GetDeviceProfile">
						<Parameter>strTmpString</Parameter>
						<OutParameter>uint16CurDeviceProfile</OutParameter>
					</CallTestFunction>
				</TestStep>
				<TestStep Name="GetModuleProfile">
					<CallTestFunction Name="GetModuleProfile">
						<Parameter>strTmpString</Parameter>
						<OutParameter>uint16CurModuleProfile</OutParameter>
					</CallTestFunction>
				</TestStep>
				<TestStep Name="GetSubModuleProfile">
					<CallTestFunction Name="GetSubModuleProfile">
						<Parameter>strTmpString</Parameter>
						<OutParameter>uint16CurSubModuleProfile</OutParameter>
					</CallTestFunction>
				</TestStep>
				<TestStep Name="DumpProfileInfo">
					<Description Id="10" Param0="uint16CurDeviceProfile" Param1="uint16CurModuleProfile" Param2="uint16CurSubModuleProfile" Param3="u32ProfileCounter" Level="Output">Module[{3}] : DeviceProfile '{0}' ; ModuleProfile '{1}' ; SubModuleProfile '{2}'</Description>
					<Compare>
						<Equal>
							<Value1>bIgnoreProfileID</Value1>
							<Value2>true</Value2>
							<GotoStep>IndicateThatAtleastOneModuleMatch</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CompareDeviceProfile">
					<Compare>
						<NotEqual>
							<Value1>uint16CurDeviceProfile</Value1>
							<Value2>5003</Value2>
							<WriteLine Id="11" Param0="uint16CurDeviceProfile" Level="Output">Skip Profile  (Test Device Profile '5003' != Cur Device Profile '{0}')</WriteLine>
						</NotEqual>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>uint16CurDeviceProfile</Value1>
							<Value2>5003</Value2>
							<GotoStep>ProfileLoopEnd</GotoStep>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep Name="CompareModuleProfile">
					<Compare>
						<NotEqual>
							<Value1>uint16CurModuleProfile</Value1>
							<Value2>2011</Value2>
							<WriteLine Id="12" Param0="uint16CurModuleProfile" Level="Output">Skip Profile  (Test Module Profile '2011' != Cur Module Profile '{0}')</WriteLine>
						</NotEqual>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>uint16CurModuleProfile</Value1>
							<Value2>2011</Value2>
							<GotoStep>ProfileLoopEnd</GotoStep>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep Name="CompareSubModuleProfile">
					<Compare>
						<NotEqual>
							<Value1>uint16CurSubModuleProfile</Value1>
							<Value2>0</Value2>
							<WriteLine Id="13" Param0="uint16CurSubModuleProfile" Level="Output">Skip Profile  (Test SubModule Profile '0' != Cur SubModule Profile '{0}')</WriteLine>
						</NotEqual>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>uint16CurSubModuleProfile</Value1>
							<Value2>0</Value2>
							<GotoStep>ProfileLoopEnd</GotoStep>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep Name="IndicateThatAtleastOneModuleMatch">
					<SetVariable Target="bAtLeastOneModuleMatch">true</SetVariable>
				</TestStep>
				<TestStep Name="GetObjectIndexInclOffset">
					<SetVariable Target="u16ObjectIndexInclOffset">#x6008 + (u32ProfileCounter * #x10)</SetVariable>
					<WriteLine Id="14" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : ObjectIndex '0x{0:X}'</WriteLine>
				</TestStep>
				<TestStep Name="LoadDeviceObjectDictionary">
					<Description Id="15" Level="Verbose">Load 'offline' object dictionary for testing.</Description>
					<GetObjectDictionary Target="odDeviceObjectdictionary">
						<DictionaryType>Offline</DictionaryType>
					</GetObjectDictionary>
					<RaiseErrorOnFailure Id="16">VerifyObject : failed to load offline object dictionary.</RaiseErrorOnFailure>
				</TestStep>
				<TestStep Name="SetObjectRequiredLevel">
					<SetVariable Target="bObjectOrEntryRequiredLevel">1</SetVariable>
					<WriteLine Id="17" Param0="u16ObjectIndexInclOffset" Level="Verbose">0x{0:X4} 'Internal Device Temperatures' may be available</WriteLine>
				</TestStep>
				<TestStep Name="CheckIfObjectExists">
					<GetObjectDescription SourceDictionary="odDeviceObjectdictionary" Index="u16ObjectIndexInclOffset" SubIndex="-1"></GetObjectDescription>
					<GotoOnSuccess>CallCheckObjectDescription</GotoOnSuccess>
				</TestStep>
				<TestStep Name="HandleNotExistingObject">
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>2</Value2>
							<WriteLine Id="18" Param0="u16ObjectIndexInclOffset" Level="Warning">The object 0x{0:X4} 'Internal Device Temperatures' does not exists.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>1</Value2>
							<WriteLine Id="19" Param0="u16ObjectIndexInclOffset" Level="Output">The object 0x{0:X4} 'Internal Device Temperatures' does not exists.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>ProfileLoopEnd</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CallCheckObjectDescription">
					<Description Id="20" Param0="u16ObjectIndexInclOffset" Level="Output">Verify the object description 0x{0:X4} 'Internal Device Temperatures'.</Description>
					<CallTestFunction Name="CheckObjectDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"offline"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>"Internal Device Temperatures"</Parameter>
						<Parameter>null</Parameter>
						<Parameter>9</Parameter>
						<Parameter>-1</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<GotoStep>ProfileLoopEnd</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="InitEntryBittOffset">
					<SetVariable Target="i32CurrentBitOffset">0</SetVariable>
				</TestStep>
				<TestStep Name="StartSi0">
					<Description Id="21" Level="Output">Start validate SubIndex0</Description>
					<WriteLine Id="22" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : Subindex '0x{0:X}.0'</WriteLine>
				</TestStep>
				<TestStep Name="CallSi0CheckEntryDescription">
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"offline"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>0</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>null</Parameter>
						<Parameter>5</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>null</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>null</Parameter>
						<Parameter>null</Parameter>
						<Parameter>null</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>8</Parameter>
						<Parameter>i32CurrentBitOffset</Parameter>
						<Parameter>true</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="EndSi0">
					<SetVariable Target="i32CurrentBitOffset">16</SetVariable>
				</TestStep>
				<TestStep Name="StartSi1">
					<Description Id="23" Level="Output">Start validate SubIndex1</Description>
					<WriteLine Id="24" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : Subindex '0x{0:X}.1'</WriteLine>
				</TestStep>
				<TestStep Name="SetSi1RequiredLevel">
					<SetVariable Target="bObjectOrEntryRequiredLevel">1</SetVariable>
					<WriteLine Id="25" Param0="u16ObjectIndexInclOffset" Level="Verbose">0x{0:X4}.1 'Temp Water' may be available</WriteLine>
				</TestStep>
				<TestStep Name="CheckIfSi1Exists">
					<GetObjectDescription SourceDictionary="odDeviceObjectdictionary" Index="u16ObjectIndexInclOffset" SubIndex="1">
						<Type>u16DataType</Type>
					</GetObjectDescription>
					<GotoOnFailure>HandleNotExistingSi1</GotoOnFailure>
				</TestStep>
				<TestStep>
					<Compare>
						<NotEqual>
							<Value1>u16DataType</Value1>
							<Value2>0</Value2>
							<GotoStep>CallSi1CheckEntryDescription</GotoStep>
						</NotEqual>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="26" Param0="u16ObjectIndexInclOffset" Level="Verbose">The entry 0x{0:X4}.1 is defined as a padding entry.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>EndSi1</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="HandleNotExistingSi1">
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="27" Param0="u16ObjectIndexInclOffset" Level="Output">The entry 0x{0:X4}.1 does not exists.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>EndSi1</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CallSi1CheckEntryDescription">
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"offline"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>1</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>"Temp Water"</Parameter>
						<Parameter>8</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>null</Parameter>
						<Parameter>T</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>32</Parameter>
						<Parameter>i32CurrentBitOffset</Parameter>
						<Parameter>true</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="EndSi1">
					<SetVariable Target="i32CurrentBitOffset">-1</SetVariable>
				</TestStep>
				<TestStep Name="StartSi2">
					<Description Id="28" Level="Output">Start validate SubIndex2</Description>
					<WriteLine Id="29" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : Subindex '0x{0:X}.2'</WriteLine>
				</TestStep>
				<TestStep Name="SetSi2RequiredLevel">
					<SetVariable Target="bObjectOrEntryRequiredLevel">1</SetVariable>
					<WriteLine Id="30" Param0="u16ObjectIndexInclOffset" Level="Verbose">0x{0:X4}.2 'Temp Air' may be available</WriteLine>
				</TestStep>
				<TestStep Name="CheckIfSi2Exists">
					<GetObjectDescription SourceDictionary="odDeviceObjectdictionary" Index="u16ObjectIndexInclOffset" SubIndex="2">
						<Type>u16DataType</Type>
					</GetObjectDescription>
					<GotoOnFailure>HandleNotExistingSi2</GotoOnFailure>
				</TestStep>
				<TestStep>
					<Compare>
						<NotEqual>
							<Value1>u16DataType</Value1>
							<Value2>0</Value2>
							<GotoStep>CallSi2CheckEntryDescription</GotoStep>
						</NotEqual>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="31" Param0="u16ObjectIndexInclOffset" Level="Verbose">The entry 0x{0:X4}.2 is defined as a padding entry.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>EndSi2</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="HandleNotExistingSi2">
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="32" Param0="u16ObjectIndexInclOffset" Level="Output">The entry 0x{0:X4}.2 does not exists.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>EndSi2</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CallSi2CheckEntryDescription">
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"offline"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>2</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>"Temp Air"</Parameter>
						<Parameter>8</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>null</Parameter>
						<Parameter>T</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>32</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>true</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="EndSi2"></TestStep>
				<TestStep Name="CheckReservedEntryRange_3_to_255">
					<Description Id="33" Level="Output">Start check reserved entry range 3 to 255</Description>
					<CallTestFunction Name="CheckReservedEntryRange">
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>3</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>odDeviceObjectdictionary</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="ProfileLoopEnd">
					<Compare>
						<Equal>
							<Value1>bAtLeastOneModuleMatch</Value1>
							<Value2>false</Value2>
							<GotoStep>HandleAbortTestCaseOnFirstError</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="HandleAbortTestCaseOnFirstError">
					<Compare>
						<Equal>
							<Value1>bAbortTestCaseOnFirstError</Value1>
							<Value2>false</Value2>
							<GotoStep>ProfileLoopIncrement</GotoStep>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>strResult</Value1>
							<Value2>EmptyString</Value2>
							<GotoStep>ProfileLoopIncrement</GotoStep>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="34" Level="Output">Object verification for all following modules abort because an error was already detected for the current module.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>END</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="ProfileLoopIncrement">
					<SetVariable Target="u32ProfileCounter">u32ProfileCounter + 1</SetVariable>
					<Compare>
						<Greater>
							<Value1>u32CurrentProfilesLength</Value1>
							<Value2>u32ProfileCounter</Value2>
							<GotoStep>ProfileLoopStart</GotoStep>
						</Greater>
					</Compare>
				</TestStep>
				<TestStep Name="END">
					<Compare>
						<NotEqual>
							<Value1>bAtLeastOneModuleMatch</Value1>
							<Value2>true</Value2>
							<SkipCase Id="35">SKIP TEST(no module/channel supports the current profile)</SkipCase>
						</NotEqual>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bDEBUG</Value1>
							<Value2>true</Value2>
							<WriteLine Id="36" Param0="strResult" Level="Verbose">DEBUG | Result : '{0}'.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>strResult</Value1>
							<Value2>EmptyString</Value2>
							<ReturnSuccess Id="37">Test succeed</ReturnSuccess>
						</Equal>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>strResult</Value1>
							<Value2>EmptyString</Value2>
							<RaiseError Id="38"></RaiseError>
						</NotEqual>
					</Compare>
				</TestStep>
			</TestCase>
			<TestCase Name="online | 0x6008 (Internal Device Temperatures)" CaseId="18">
				<Description>
					<PreCondition>- The device profile is 5003
- The module profile is 2011
- The submodule profile is 0</PreCondition>
					<Action>- Iterate over all online defined modules/channels and if the PreCondition matches the following operations are done:
- Get the online description of object 0x6008(+module specific offset) 'Internal Device Temperatures' and all entries
 Check:
    (Name)
    BitSize
    DataType
    Rx / Tx mappable
    Default Data
    MinData
    Flags       </Action>
					<PostCondition>Error if
- mandatory object / entry is not defined
- an optional object exists and the entries are invalid
- Object / entry description does not match with the specification</PostCondition>
					<ProposalForSolution>- Define the missing objects
- correct object / entry description</ProposalForSolution>
					<References>
						<Reference Specification="ETG.5003.2011"></Reference>
					</References>
					<Mandatory>true</Mandatory>
				</Description>
				<TestStep Name="InitResult">
					<SetVariable Target="strResult">EmptyString</SetVariable>
				</TestStep>
				<TestStep Name="CheckIfOdAvailable">
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Mailbox</Value1>
							<Value2>false</Value2>
							<SkipCase Id="1">DuT does not support mailbox.</SkipCase>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Mailbox.CoE</Value1>
							<Value2>false</Value2>
							<SkipCase Id="2">DuT does not support CoE.</SkipCase>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Mailbox.CoE.SdoInfo</Value1>
							<Value2>false</Value2>
							<SkipCase Id="3">DuT does not support SDO Info.</SkipCase>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="InitAtLeastOneProfileMatch">
					<SetVariable Target="bAtLeastOneModuleMatch">false</SetVariable>
				</TestStep>
				<TestStep Name="GetCurrentProfileList">
					<SizeOf UInt32Var="u32Tmp">arrOnlineProfiles</SizeOf>
					<Compare>
						<Equal>
							<Value1>u32Tmp</Value1>
							<Value2>0</Value2>
							<CallTestFunction Name="GetCurrentProfileList">
								<Parameter>"online"</Parameter>
								<Parameter>"SafeOP"</Parameter>
								<OutParameter>arrOnlineProfiles</OutParameter>
							</CallTestFunction>
						</Equal>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>u32Tmp</Value1>
							<Value2>0</Value2>
							<WriteLine Id="4" Param0="arrOnlineProfiles" Level="Verbose">Use previously created profile list ({0})</WriteLine>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep>
					<SizeOf UInt32Var="u32Tmp">arrOnlineProfiles</SizeOf>
				</TestStep>
				<TestStep>
					<InitArray TargetArray="arrCurrentProfiles" Length="u32Tmp"></InitArray>
				</TestStep>
				<TestStep>
					<CopyArray>
						<SourceArray>arrOnlineProfiles</SourceArray>
						<DestinationArray>arrCurrentProfiles</DestinationArray>
						<Length>u32Tmp</Length>
					</CopyArray>
				</TestStep>
				<TestStep Name="InitProfileLoopCounter">
					<SetVariable Target="u32ProfileCounter">0</SetVariable>
				</TestStep>
				<TestStep Name="GetProfileArrayLength">
					<SizeOf UInt32Var="u32CurrentProfilesLength">arrCurrentProfiles</SizeOf>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="5" Param0="u32CurrentProfilesLength" Level="Verbose">'{0}' Profile(s) defined online.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>u32CurrentProfilesLength</Value1>
							<Value2>0</Value2>
							<SkipCase Id="6">Skip case | no profile defined.</SkipCase>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="ProfileLoopStart">
					<GetArrayItem SourceArray="arrCurrentProfiles" Target="strTmpString" Index="u32ProfileCounter"></GetArrayItem>
				</TestStep>
				<TestStep Name="CheckProfileInformationString">
					<Compare>
						<Equal>
							<Value1>strTmpString</Value1>
							<Value2>null</Value2>
							<RaiseError Id="7" Param0="u32ProfileCounter">Profile Info element [{0}] is null.</RaiseError>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>strTmpString</Value1>
							<Value2>EmptyString</Value2>
							<RaiseError Id="8" Param0="u32ProfileCounter">Profile Info element [{0}] is an empty string.</RaiseError>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="GetDeviceProfile">
					<CallTestFunction Name="GetDeviceProfile">
						<Parameter>strTmpString</Parameter>
						<OutParameter>uint16CurDeviceProfile</OutParameter>
					</CallTestFunction>
				</TestStep>
				<TestStep Name="GetModuleProfile">
					<CallTestFunction Name="GetModuleProfile">
						<Parameter>strTmpString</Parameter>
						<OutParameter>uint16CurModuleProfile</OutParameter>
					</CallTestFunction>
				</TestStep>
				<TestStep Name="GetSubModuleProfile">
					<CallTestFunction Name="GetSubModuleProfile">
						<Parameter>strTmpString</Parameter>
						<OutParameter>uint16CurSubModuleProfile</OutParameter>
					</CallTestFunction>
				</TestStep>
				<TestStep Name="DumpProfileInfo">
					<Description Id="9" Param0="uint16CurDeviceProfile" Param1="uint16CurModuleProfile" Param2="uint16CurSubModuleProfile" Param3="u32ProfileCounter" Level="Output">Module[{3}] : DeviceProfile '{0}' ; ModuleProfile '{1}' ; SubModuleProfile '{2}'</Description>
					<Compare>
						<Equal>
							<Value1>bIgnoreProfileID</Value1>
							<Value2>true</Value2>
							<GotoStep>IndicateThatAtleastOneModuleMatch</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CompareDeviceProfile">
					<Compare>
						<NotEqual>
							<Value1>uint16CurDeviceProfile</Value1>
							<Value2>5003</Value2>
							<WriteLine Id="10" Param0="uint16CurDeviceProfile" Level="Output">Skip Profile  (Test Device Profile '5003' != Cur Device Profile '{0}')</WriteLine>
						</NotEqual>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>uint16CurDeviceProfile</Value1>
							<Value2>5003</Value2>
							<GotoStep>ProfileLoopEnd</GotoStep>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep Name="CompareModuleProfile">
					<Compare>
						<NotEqual>
							<Value1>uint16CurModuleProfile</Value1>
							<Value2>2011</Value2>
							<WriteLine Id="11" Param0="uint16CurModuleProfile" Level="Output">Skip Profile  (Test Module Profile '2011' != Cur Module Profile '{0}')</WriteLine>
						</NotEqual>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>uint16CurModuleProfile</Value1>
							<Value2>2011</Value2>
							<GotoStep>ProfileLoopEnd</GotoStep>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep Name="CompareSubModuleProfile">
					<Compare>
						<NotEqual>
							<Value1>uint16CurSubModuleProfile</Value1>
							<Value2>0</Value2>
							<WriteLine Id="12" Param0="uint16CurSubModuleProfile" Level="Output">Skip Profile  (Test SubModule Profile '0' != Cur SubModule Profile '{0}')</WriteLine>
						</NotEqual>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>uint16CurSubModuleProfile</Value1>
							<Value2>0</Value2>
							<GotoStep>ProfileLoopEnd</GotoStep>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep Name="IndicateThatAtleastOneModuleMatch">
					<SetVariable Target="bAtLeastOneModuleMatch">true</SetVariable>
				</TestStep>
				<TestStep Name="GetObjectIndexInclOffset">
					<SetVariable Target="u16ObjectIndexInclOffset">#x6008 + (u32ProfileCounter * #x10)</SetVariable>
					<WriteLine Id="13" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : ObjectIndex '0x{0:X}'</WriteLine>
				</TestStep>
				<TestStep Name="LoadDeviceObjectDictionary">
					<Description Id="14" Level="Verbose">Load 'online' object dictionary for testing.</Description>
					<GetObjectDictionary Target="odDeviceObjectdictionary">
						<DictionaryType>Online</DictionaryType>
					</GetObjectDictionary>
					<RaiseErrorOnFailure Id="15">VerifyObject : failed to load online object dictionary.</RaiseErrorOnFailure>
				</TestStep>
				<TestStep Name="SetObjectRequiredLevel">
					<SetVariable Target="bObjectOrEntryRequiredLevel">1</SetVariable>
					<WriteLine Id="16" Param0="u16ObjectIndexInclOffset" Level="Verbose">0x{0:X4} 'Internal Device Temperatures' may be available</WriteLine>
				</TestStep>
				<TestStep Name="CheckIfObjectExists">
					<GetObjectDescription SourceDictionary="odDeviceObjectdictionary" Index="u16ObjectIndexInclOffset" SubIndex="-1"></GetObjectDescription>
					<GotoOnSuccess>CallCheckObjectDescription</GotoOnSuccess>
				</TestStep>
				<TestStep Name="HandleNotExistingObject">
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>2</Value2>
							<WriteLine Id="17" Param0="u16ObjectIndexInclOffset" Level="Warning">The object 0x{0:X4} 'Internal Device Temperatures' does not exists.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>1</Value2>
							<WriteLine Id="18" Param0="u16ObjectIndexInclOffset" Level="Output">The object 0x{0:X4} 'Internal Device Temperatures' does not exists.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>ProfileLoopEnd</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CallCheckObjectDescription">
					<Description Id="19" Param0="u16ObjectIndexInclOffset" Level="Output">Verify the object description 0x{0:X4} 'Internal Device Temperatures'.</Description>
					<CallTestFunction Name="CheckObjectDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"online"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>"Internal Device Temperatures"</Parameter>
						<Parameter>null</Parameter>
						<Parameter>9</Parameter>
						<Parameter>-1</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<GotoStep>ProfileLoopEnd</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="InitEntryBittOffset">
					<SetVariable Target="i32CurrentBitOffset">0</SetVariable>
				</TestStep>
				<TestStep Name="StartSi0">
					<Description Id="20" Level="Output">Start validate SubIndex0</Description>
					<WriteLine Id="21" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : Subindex '0x{0:X}.0'</WriteLine>
				</TestStep>
				<TestStep Name="CallSi0CheckEntryDescription">
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"online"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>0</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>null</Parameter>
						<Parameter>5</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>null</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>null</Parameter>
						<Parameter>null</Parameter>
						<Parameter>null</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>8</Parameter>
						<Parameter>i32CurrentBitOffset</Parameter>
						<Parameter>true</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="EndSi0">
					<SetVariable Target="i32CurrentBitOffset">16</SetVariable>
				</TestStep>
				<TestStep Name="StartSi1">
					<Description Id="22" Level="Output">Start validate SubIndex1</Description>
					<WriteLine Id="23" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : Subindex '0x{0:X}.1'</WriteLine>
				</TestStep>
				<TestStep Name="SetSi1RequiredLevel">
					<SetVariable Target="bObjectOrEntryRequiredLevel">1</SetVariable>
					<WriteLine Id="24" Param0="u16ObjectIndexInclOffset" Level="Verbose">0x{0:X4}.1 'Temp Water' may be available</WriteLine>
				</TestStep>
				<TestStep Name="CheckIfSi1Exists">
					<GetObjectDescription SourceDictionary="odDeviceObjectdictionary" Index="u16ObjectIndexInclOffset" SubIndex="1">
						<Type>u16DataType</Type>
					</GetObjectDescription>
					<GotoOnFailure>HandleNotExistingSi1</GotoOnFailure>
				</TestStep>
				<TestStep>
					<Compare>
						<NotEqual>
							<Value1>u16DataType</Value1>
							<Value2>0</Value2>
							<GotoStep>CallSi1CheckEntryDescription</GotoStep>
						</NotEqual>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="25" Param0="u16ObjectIndexInclOffset" Level="Verbose">The entry 0x{0:X4}.1 is defined as a padding entry.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>EndSi1</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="HandleNotExistingSi1">
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="26" Param0="u16ObjectIndexInclOffset" Level="Output">The entry 0x{0:X4}.1 does not exists.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>EndSi1</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CallSi1CheckEntryDescription">
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"online"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>1</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>"Temp Water"</Parameter>
						<Parameter>8</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>null</Parameter>
						<Parameter>T</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>32</Parameter>
						<Parameter>i32CurrentBitOffset</Parameter>
						<Parameter>true</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="EndSi1">
					<SetVariable Target="i32CurrentBitOffset">-1</SetVariable>
				</TestStep>
				<TestStep Name="StartSi2">
					<Description Id="27" Level="Output">Start validate SubIndex2</Description>
					<WriteLine Id="28" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : Subindex '0x{0:X}.2'</WriteLine>
				</TestStep>
				<TestStep Name="SetSi2RequiredLevel">
					<SetVariable Target="bObjectOrEntryRequiredLevel">1</SetVariable>
					<WriteLine Id="29" Param0="u16ObjectIndexInclOffset" Level="Verbose">0x{0:X4}.2 'Temp Air' may be available</WriteLine>
				</TestStep>
				<TestStep Name="CheckIfSi2Exists">
					<GetObjectDescription SourceDictionary="odDeviceObjectdictionary" Index="u16ObjectIndexInclOffset" SubIndex="2">
						<Type>u16DataType</Type>
					</GetObjectDescription>
					<GotoOnFailure>HandleNotExistingSi2</GotoOnFailure>
				</TestStep>
				<TestStep>
					<Compare>
						<NotEqual>
							<Value1>u16DataType</Value1>
							<Value2>0</Value2>
							<GotoStep>CallSi2CheckEntryDescription</GotoStep>
						</NotEqual>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="30" Param0="u16ObjectIndexInclOffset" Level="Verbose">The entry 0x{0:X4}.2 is defined as a padding entry.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>EndSi2</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="HandleNotExistingSi2">
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="31" Param0="u16ObjectIndexInclOffset" Level="Output">The entry 0x{0:X4}.2 does not exists.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>EndSi2</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CallSi2CheckEntryDescription">
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"online"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>2</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>"Temp Air"</Parameter>
						<Parameter>8</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>null</Parameter>
						<Parameter>T</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>32</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>true</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="EndSi2"></TestStep>
				<TestStep Name="CheckReservedEntryRange_3_to_255">
					<Description Id="32" Level="Output">Start check reserved entry range 3 to 255</Description>
					<CallTestFunction Name="CheckReservedEntryRange">
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>3</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>odDeviceObjectdictionary</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="ProfileLoopEnd">
					<Compare>
						<Equal>
							<Value1>bAtLeastOneModuleMatch</Value1>
							<Value2>false</Value2>
							<GotoStep>HandleAbortTestCaseOnFirstError</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="HandleAbortTestCaseOnFirstError">
					<Compare>
						<Equal>
							<Value1>bAbortTestCaseOnFirstError</Value1>
							<Value2>false</Value2>
							<GotoStep>ProfileLoopIncrement</GotoStep>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>strResult</Value1>
							<Value2>EmptyString</Value2>
							<GotoStep>ProfileLoopIncrement</GotoStep>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="33" Level="Output">Object verification for all following modules abort because an error was already detected for the current module.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>END</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="ProfileLoopIncrement">
					<SetVariable Target="u32ProfileCounter">u32ProfileCounter + 1</SetVariable>
					<Compare>
						<Greater>
							<Value1>u32CurrentProfilesLength</Value1>
							<Value2>u32ProfileCounter</Value2>
							<GotoStep>ProfileLoopStart</GotoStep>
						</Greater>
					</Compare>
				</TestStep>
				<TestStep Name="END">
					<Compare>
						<NotEqual>
							<Value1>bAtLeastOneModuleMatch</Value1>
							<Value2>true</Value2>
							<SkipCase Id="34">SKIP TEST(no module/channel supports the current profile)</SkipCase>
						</NotEqual>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bDEBUG</Value1>
							<Value2>true</Value2>
							<WriteLine Id="35" Param0="strResult" Level="Verbose">DEBUG | Result : '{0}'.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>strResult</Value1>
							<Value2>EmptyString</Value2>
							<ReturnSuccess Id="36">Test succeed</ReturnSuccess>
						</Equal>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>strResult</Value1>
							<Value2>EmptyString</Value2>
							<RaiseError Id="37"></RaiseError>
						</NotEqual>
					</Compare>
				</TestStep>
			</TestCase>
			<TestCase Name="offline | 0x6009 (Pulse Status)" CaseId="19">
				<Description>
					<PreCondition>- The device profile is 5003
- The module profile is 2011
- The submodule profile is 0</PreCondition>
					<Action>- Iterate over all offline defined modules/channels and if the PreCondition matches the following operations are done:
- Get the offline description of object 0x6009(+module specific offset) 'Pulse Status' and all entries
 Check:
    (Name)
    BitSize
    DataType
    Rx / Tx mappable
    Default Data
    MinData
    Flags       </Action>
					<PostCondition>Error if
- mandatory object / entry is not defined
- an optional object exists and the entries are invalid
- Object / entry description does not match with the specification</PostCondition>
					<ProposalForSolution>- Define the missing objects
- correct object / entry description</ProposalForSolution>
					<References>
						<Reference Specification="ETG.5003.2011"></Reference>
					</References>
					<Mandatory>true</Mandatory>
				</Description>
				<TestStep Name="InitResult">
					<SetVariable Target="strResult">EmptyString</SetVariable>
				</TestStep>
				<TestStep Name="CheckIfOdAvailable">
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Mailbox</Value1>
							<Value2>false</Value2>
							<SkipCase Id="1">DuT does not support mailbox.</SkipCase>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Mailbox.CoE</Value1>
							<Value2>false</Value2>
							<SkipCase Id="2">DuT does not support CoE.</SkipCase>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep>
					<GetObjectDictionary Target="odDeviceObjectdictionary">
						<DictionaryType>Offline</DictionaryType>
					</GetObjectDictionary>
					<SkipOnFailure Id="3">No offline object dictionary defined.</SkipOnFailure>
				</TestStep>
				<TestStep>
					<GetObjectList Count="u32Tmp" Target="odDeviceObjectdictionaryList" SourceDict="odDeviceObjectdictionary"></GetObjectList>
					<Compare>
						<Equal>
							<Value1>u32Tmp</Value1>
							<Value2>0</Value2>
							<SkipCase Id="4">No offline object dictionary defined.</SkipCase>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="InitAtLeastOneProfileMatch">
					<SetVariable Target="bAtLeastOneModuleMatch">false</SetVariable>
				</TestStep>
				<TestStep Name="GetCurrentProfileList">
					<SizeOf UInt32Var="u32Tmp">arrOfflineProfiles</SizeOf>
					<Compare>
						<Equal>
							<Value1>u32Tmp</Value1>
							<Value2>0</Value2>
							<CallTestFunction Name="GetCurrentProfileList">
								<Parameter>"offline"</Parameter>
								<Parameter>"SafeOP"</Parameter>
								<OutParameter>arrOfflineProfiles</OutParameter>
							</CallTestFunction>
						</Equal>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>u32Tmp</Value1>
							<Value2>0</Value2>
							<WriteLine Id="5" Param0="arrOfflineProfiles" Level="Verbose">Use previously created profile list ({0})</WriteLine>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep>
					<SizeOf UInt32Var="u32Tmp">arrOfflineProfiles</SizeOf>
				</TestStep>
				<TestStep>
					<InitArray TargetArray="arrCurrentProfiles" Length="u32Tmp"></InitArray>
				</TestStep>
				<TestStep>
					<CopyArray>
						<SourceArray>arrOfflineProfiles</SourceArray>
						<DestinationArray>arrCurrentProfiles</DestinationArray>
						<Length>u32Tmp</Length>
					</CopyArray>
				</TestStep>
				<TestStep Name="InitProfileLoopCounter">
					<SetVariable Target="u32ProfileCounter">0</SetVariable>
				</TestStep>
				<TestStep Name="GetProfileArrayLength">
					<SizeOf UInt32Var="u32CurrentProfilesLength">arrCurrentProfiles</SizeOf>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="6" Param0="u32CurrentProfilesLength" Level="Verbose">'{0}' Profile(s) defined offline.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>u32CurrentProfilesLength</Value1>
							<Value2>0</Value2>
							<SkipCase Id="7">Skip case | no profile defined.</SkipCase>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="ProfileLoopStart">
					<GetArrayItem SourceArray="arrCurrentProfiles" Target="strTmpString" Index="u32ProfileCounter"></GetArrayItem>
				</TestStep>
				<TestStep Name="CheckProfileInformationString">
					<Compare>
						<Equal>
							<Value1>strTmpString</Value1>
							<Value2>null</Value2>
							<RaiseError Id="8" Param0="u32ProfileCounter">Profile Info element [{0}] is null.</RaiseError>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>strTmpString</Value1>
							<Value2>EmptyString</Value2>
							<RaiseError Id="9" Param0="u32ProfileCounter">Profile Info element [{0}] is an empty string.</RaiseError>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="GetDeviceProfile">
					<CallTestFunction Name="GetDeviceProfile">
						<Parameter>strTmpString</Parameter>
						<OutParameter>uint16CurDeviceProfile</OutParameter>
					</CallTestFunction>
				</TestStep>
				<TestStep Name="GetModuleProfile">
					<CallTestFunction Name="GetModuleProfile">
						<Parameter>strTmpString</Parameter>
						<OutParameter>uint16CurModuleProfile</OutParameter>
					</CallTestFunction>
				</TestStep>
				<TestStep Name="GetSubModuleProfile">
					<CallTestFunction Name="GetSubModuleProfile">
						<Parameter>strTmpString</Parameter>
						<OutParameter>uint16CurSubModuleProfile</OutParameter>
					</CallTestFunction>
				</TestStep>
				<TestStep Name="DumpProfileInfo">
					<Description Id="10" Param0="uint16CurDeviceProfile" Param1="uint16CurModuleProfile" Param2="uint16CurSubModuleProfile" Param3="u32ProfileCounter" Level="Output">Module[{3}] : DeviceProfile '{0}' ; ModuleProfile '{1}' ; SubModuleProfile '{2}'</Description>
					<Compare>
						<Equal>
							<Value1>bIgnoreProfileID</Value1>
							<Value2>true</Value2>
							<GotoStep>IndicateThatAtleastOneModuleMatch</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CompareDeviceProfile">
					<Compare>
						<NotEqual>
							<Value1>uint16CurDeviceProfile</Value1>
							<Value2>5003</Value2>
							<WriteLine Id="11" Param0="uint16CurDeviceProfile" Level="Output">Skip Profile  (Test Device Profile '5003' != Cur Device Profile '{0}')</WriteLine>
						</NotEqual>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>uint16CurDeviceProfile</Value1>
							<Value2>5003</Value2>
							<GotoStep>ProfileLoopEnd</GotoStep>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep Name="CompareModuleProfile">
					<Compare>
						<NotEqual>
							<Value1>uint16CurModuleProfile</Value1>
							<Value2>2011</Value2>
							<WriteLine Id="12" Param0="uint16CurModuleProfile" Level="Output">Skip Profile  (Test Module Profile '2011' != Cur Module Profile '{0}')</WriteLine>
						</NotEqual>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>uint16CurModuleProfile</Value1>
							<Value2>2011</Value2>
							<GotoStep>ProfileLoopEnd</GotoStep>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep Name="CompareSubModuleProfile">
					<Compare>
						<NotEqual>
							<Value1>uint16CurSubModuleProfile</Value1>
							<Value2>0</Value2>
							<WriteLine Id="13" Param0="uint16CurSubModuleProfile" Level="Output">Skip Profile  (Test SubModule Profile '0' != Cur SubModule Profile '{0}')</WriteLine>
						</NotEqual>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>uint16CurSubModuleProfile</Value1>
							<Value2>0</Value2>
							<GotoStep>ProfileLoopEnd</GotoStep>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep Name="IndicateThatAtleastOneModuleMatch">
					<SetVariable Target="bAtLeastOneModuleMatch">true</SetVariable>
				</TestStep>
				<TestStep Name="GetObjectIndexInclOffset">
					<SetVariable Target="u16ObjectIndexInclOffset">#x6009 + (u32ProfileCounter * #x10)</SetVariable>
					<WriteLine Id="14" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : ObjectIndex '0x{0:X}'</WriteLine>
				</TestStep>
				<TestStep Name="LoadDeviceObjectDictionary">
					<Description Id="15" Level="Verbose">Load 'offline' object dictionary for testing.</Description>
					<GetObjectDictionary Target="odDeviceObjectdictionary">
						<DictionaryType>Offline</DictionaryType>
					</GetObjectDictionary>
					<RaiseErrorOnFailure Id="16">VerifyObject : failed to load offline object dictionary.</RaiseErrorOnFailure>
				</TestStep>
				<TestStep Name="SetObjectRequiredLevel">
					<SetVariable Target="bObjectOrEntryRequiredLevel">1</SetVariable>
					<WriteLine Id="17" Param0="u16ObjectIndexInclOffset" Level="Verbose">0x{0:X4} 'Pulse Status' may be available</WriteLine>
				</TestStep>
				<TestStep Name="CheckIfObjectExists">
					<GetObjectDescription SourceDictionary="odDeviceObjectdictionary" Index="u16ObjectIndexInclOffset" SubIndex="-1"></GetObjectDescription>
					<GotoOnSuccess>CallCheckObjectDescription</GotoOnSuccess>
				</TestStep>
				<TestStep Name="HandleNotExistingObject">
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>2</Value2>
							<WriteLine Id="18" Param0="u16ObjectIndexInclOffset" Level="Warning">The object 0x{0:X4} 'Pulse Status' does not exists.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>1</Value2>
							<WriteLine Id="19" Param0="u16ObjectIndexInclOffset" Level="Output">The object 0x{0:X4} 'Pulse Status' does not exists.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>ProfileLoopEnd</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CallCheckObjectDescription">
					<Description Id="20" Param0="u16ObjectIndexInclOffset" Level="Output">Verify the object description 0x{0:X4} 'Pulse Status'.</Description>
					<CallTestFunction Name="CheckObjectDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"offline"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>"Pulse Status"</Parameter>
						<Parameter>null</Parameter>
						<Parameter>9</Parameter>
						<Parameter>-1</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<GotoStep>ProfileLoopEnd</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="InitEntryBittOffset">
					<SetVariable Target="i32CurrentBitOffset">0</SetVariable>
				</TestStep>
				<TestStep Name="StartSi0">
					<Description Id="21" Level="Output">Start validate SubIndex0</Description>
					<WriteLine Id="22" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : Subindex '0x{0:X}.0'</WriteLine>
				</TestStep>
				<TestStep Name="CallSi0CheckEntryDescription">
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"offline"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>0</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>null</Parameter>
						<Parameter>5</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>null</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>null</Parameter>
						<Parameter>null</Parameter>
						<Parameter>null</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>8</Parameter>
						<Parameter>i32CurrentBitOffset</Parameter>
						<Parameter>true</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="EndSi0">
					<SetVariable Target="i32CurrentBitOffset">16</SetVariable>
				</TestStep>
				<TestStep Name="StartSi1">
					<Description Id="23" Level="Output">Start validate SubIndex1</Description>
					<WriteLine Id="24" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : Subindex '0x{0:X}.1'</WriteLine>
				</TestStep>
				<TestStep Name="SetSi1RequiredLevel">
					<SetVariable Target="bObjectOrEntryRequiredLevel">1</SetVariable>
					<WriteLine Id="25" Param0="u16ObjectIndexInclOffset" Level="Verbose">0x{0:X4}.1 'Pulse Width' may be available</WriteLine>
				</TestStep>
				<TestStep Name="CheckIfSi1Exists">
					<GetObjectDescription SourceDictionary="odDeviceObjectdictionary" Index="u16ObjectIndexInclOffset" SubIndex="1">
						<Type>u16DataType</Type>
					</GetObjectDescription>
					<GotoOnFailure>HandleNotExistingSi1</GotoOnFailure>
				</TestStep>
				<TestStep>
					<Compare>
						<NotEqual>
							<Value1>u16DataType</Value1>
							<Value2>0</Value2>
							<GotoStep>CallSi1CheckEntryDescription</GotoStep>
						</NotEqual>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="26" Param0="u16ObjectIndexInclOffset" Level="Verbose">The entry 0x{0:X4}.1 is defined as a padding entry.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>EndSi1</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="HandleNotExistingSi1">
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="27" Param0="u16ObjectIndexInclOffset" Level="Output">The entry 0x{0:X4}.1 does not exists.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>EndSi1</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CallSi1CheckEntryDescription">
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"offline"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>1</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>"Pulse Width"</Parameter>
						<Parameter>8</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>null</Parameter>
						<Parameter>T</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>32</Parameter>
						<Parameter>i32CurrentBitOffset</Parameter>
						<Parameter>true</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="EndSi1">
					<SetVariable Target="i32CurrentBitOffset">-1</SetVariable>
				</TestStep>
				<TestStep Name="CheckReservedEntryRange_2_to_15">
					<Description Id="28" Level="Output">Start check reserved entry range 2 to 15</Description>
					<CallTestFunction Name="CheckReservedEntryRange">
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>2</Parameter>
						<Parameter>16</Parameter>
						<Parameter>odDeviceObjectdictionary</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="StartSi16">
					<Description Id="29" Level="Output">Start validate SubIndex16</Description>
					<WriteLine Id="30" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : Subindex '0x{0:X}.16'</WriteLine>
				</TestStep>
				<TestStep Name="SetSi16RequiredLevel">
					<SetVariable Target="bObjectOrEntryRequiredLevel">1</SetVariable>
					<WriteLine Id="31" Param0="u16ObjectIndexInclOffset" Level="Verbose">0x{0:X4}.16 'Forward Power 1' may be available</WriteLine>
				</TestStep>
				<TestStep Name="CheckIfSi16Exists">
					<GetObjectDescription SourceDictionary="odDeviceObjectdictionary" Index="u16ObjectIndexInclOffset" SubIndex="16">
						<Type>u16DataType</Type>
					</GetObjectDescription>
					<GotoOnFailure>HandleNotExistingSi16</GotoOnFailure>
				</TestStep>
				<TestStep>
					<Compare>
						<NotEqual>
							<Value1>u16DataType</Value1>
							<Value2>0</Value2>
							<GotoStep>CallSi16CheckEntryDescription</GotoStep>
						</NotEqual>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="32" Param0="u16ObjectIndexInclOffset" Level="Verbose">The entry 0x{0:X4}.16 is defined as a padding entry.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>EndSi16</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="HandleNotExistingSi16">
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="33" Param0="u16ObjectIndexInclOffset" Level="Output">The entry 0x{0:X4}.16 does not exists.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>EndSi16</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CallSi16CheckEntryDescription">
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"offline"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>16</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>"Forward Power 1"</Parameter>
						<Parameter>8</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>null</Parameter>
						<Parameter>T</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>32</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>true</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="EndSi16"></TestStep>
				<TestStep Name="StartSi17">
					<Description Id="34" Level="Output">Start validate SubIndex17</Description>
					<WriteLine Id="35" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : Subindex '0x{0:X}.17'</WriteLine>
				</TestStep>
				<TestStep Name="SetSi17RequiredLevel">
					<SetVariable Target="bObjectOrEntryRequiredLevel">1</SetVariable>
					<WriteLine Id="36" Param0="u16ObjectIndexInclOffset" Level="Verbose">0x{0:X4}.17 'Reflected Power 1' may be available</WriteLine>
				</TestStep>
				<TestStep Name="CheckIfSi17Exists">
					<GetObjectDescription SourceDictionary="odDeviceObjectdictionary" Index="u16ObjectIndexInclOffset" SubIndex="17">
						<Type>u16DataType</Type>
					</GetObjectDescription>
					<GotoOnFailure>HandleNotExistingSi17</GotoOnFailure>
				</TestStep>
				<TestStep>
					<Compare>
						<NotEqual>
							<Value1>u16DataType</Value1>
							<Value2>0</Value2>
							<GotoStep>CallSi17CheckEntryDescription</GotoStep>
						</NotEqual>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="37" Param0="u16ObjectIndexInclOffset" Level="Verbose">The entry 0x{0:X4}.17 is defined as a padding entry.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>EndSi17</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="HandleNotExistingSi17">
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="38" Param0="u16ObjectIndexInclOffset" Level="Output">The entry 0x{0:X4}.17 does not exists.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>EndSi17</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CallSi17CheckEntryDescription">
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"offline"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>17</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>"Reflected Power 1"</Parameter>
						<Parameter>8</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>null</Parameter>
						<Parameter>T</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>32</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>true</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="EndSi17"></TestStep>
				<TestStep Name="StartSi18">
					<Description Id="39" Level="Output">Start validate SubIndex18</Description>
					<WriteLine Id="40" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : Subindex '0x{0:X}.18'</WriteLine>
				</TestStep>
				<TestStep Name="SetSi18RequiredLevel">
					<SetVariable Target="bObjectOrEntryRequiredLevel">1</SetVariable>
					<WriteLine Id="41" Param0="u16ObjectIndexInclOffset" Level="Verbose">0x{0:X4}.18 'Delivered Power 1' may be available</WriteLine>
				</TestStep>
				<TestStep Name="CheckIfSi18Exists">
					<GetObjectDescription SourceDictionary="odDeviceObjectdictionary" Index="u16ObjectIndexInclOffset" SubIndex="18">
						<Type>u16DataType</Type>
					</GetObjectDescription>
					<GotoOnFailure>HandleNotExistingSi18</GotoOnFailure>
				</TestStep>
				<TestStep>
					<Compare>
						<NotEqual>
							<Value1>u16DataType</Value1>
							<Value2>0</Value2>
							<GotoStep>CallSi18CheckEntryDescription</GotoStep>
						</NotEqual>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="42" Param0="u16ObjectIndexInclOffset" Level="Verbose">The entry 0x{0:X4}.18 is defined as a padding entry.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>EndSi18</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="HandleNotExistingSi18">
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="43" Param0="u16ObjectIndexInclOffset" Level="Output">The entry 0x{0:X4}.18 does not exists.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>EndSi18</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CallSi18CheckEntryDescription">
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"offline"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>18</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>"Delivered Power 1"</Parameter>
						<Parameter>8</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>null</Parameter>
						<Parameter>T</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>32</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>true</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="EndSi18"></TestStep>
				<TestStep Name="StartSi19">
					<Description Id="44" Level="Output">Start validate SubIndex19</Description>
					<WriteLine Id="45" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : Subindex '0x{0:X}.19'</WriteLine>
				</TestStep>
				<TestStep Name="SetSi19RequiredLevel">
					<SetVariable Target="bObjectOrEntryRequiredLevel">1</SetVariable>
					<WriteLine Id="46" Param0="u16ObjectIndexInclOffset" Level="Verbose">0x{0:X4}.19 'RF Output Frequency 1' may be available</WriteLine>
				</TestStep>
				<TestStep Name="CheckIfSi19Exists">
					<GetObjectDescription SourceDictionary="odDeviceObjectdictionary" Index="u16ObjectIndexInclOffset" SubIndex="19">
						<Type>u16DataType</Type>
					</GetObjectDescription>
					<GotoOnFailure>HandleNotExistingSi19</GotoOnFailure>
				</TestStep>
				<TestStep>
					<Compare>
						<NotEqual>
							<Value1>u16DataType</Value1>
							<Value2>0</Value2>
							<GotoStep>CallSi19CheckEntryDescription</GotoStep>
						</NotEqual>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="47" Param0="u16ObjectIndexInclOffset" Level="Verbose">The entry 0x{0:X4}.19 is defined as a padding entry.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>EndSi19</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="HandleNotExistingSi19">
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="48" Param0="u16ObjectIndexInclOffset" Level="Output">The entry 0x{0:X4}.19 does not exists.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>EndSi19</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CallSi19CheckEntryDescription">
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"offline"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>19</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>"RF Output Frequency 1"</Parameter>
						<Parameter>7</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>null</Parameter>
						<Parameter>T</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>32</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>true</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="EndSi19"></TestStep>
				<TestStep Name="StartSi20">
					<Description Id="49" Level="Output">Start validate SubIndex20</Description>
					<WriteLine Id="50" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : Subindex '0x{0:X}.20'</WriteLine>
				</TestStep>
				<TestStep Name="SetSi20RequiredLevel">
					<SetVariable Target="bObjectOrEntryRequiredLevel">1</SetVariable>
					<WriteLine Id="51" Param0="u16ObjectIndexInclOffset" Level="Verbose">0x{0:X4}.20 'Gamma Real 1' may be available</WriteLine>
				</TestStep>
				<TestStep Name="CheckIfSi20Exists">
					<GetObjectDescription SourceDictionary="odDeviceObjectdictionary" Index="u16ObjectIndexInclOffset" SubIndex="20">
						<Type>u16DataType</Type>
					</GetObjectDescription>
					<GotoOnFailure>HandleNotExistingSi20</GotoOnFailure>
				</TestStep>
				<TestStep>
					<Compare>
						<NotEqual>
							<Value1>u16DataType</Value1>
							<Value2>0</Value2>
							<GotoStep>CallSi20CheckEntryDescription</GotoStep>
						</NotEqual>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="52" Param0="u16ObjectIndexInclOffset" Level="Verbose">The entry 0x{0:X4}.20 is defined as a padding entry.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>EndSi20</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="HandleNotExistingSi20">
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="53" Param0="u16ObjectIndexInclOffset" Level="Output">The entry 0x{0:X4}.20 does not exists.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>EndSi20</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CallSi20CheckEntryDescription">
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"offline"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>20</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>"Gamma Real 1"</Parameter>
						<Parameter>8</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>null</Parameter>
						<Parameter>T</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>32</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>true</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="EndSi20"></TestStep>
				<TestStep Name="StartSi21">
					<Description Id="54" Level="Output">Start validate SubIndex21</Description>
					<WriteLine Id="55" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : Subindex '0x{0:X}.21'</WriteLine>
				</TestStep>
				<TestStep Name="SetSi21RequiredLevel">
					<SetVariable Target="bObjectOrEntryRequiredLevel">1</SetVariable>
					<WriteLine Id="56" Param0="u16ObjectIndexInclOffset" Level="Verbose">0x{0:X4}.21 'Gamma Imaginary 1' may be available</WriteLine>
				</TestStep>
				<TestStep Name="CheckIfSi21Exists">
					<GetObjectDescription SourceDictionary="odDeviceObjectdictionary" Index="u16ObjectIndexInclOffset" SubIndex="21">
						<Type>u16DataType</Type>
					</GetObjectDescription>
					<GotoOnFailure>HandleNotExistingSi21</GotoOnFailure>
				</TestStep>
				<TestStep>
					<Compare>
						<NotEqual>
							<Value1>u16DataType</Value1>
							<Value2>0</Value2>
							<GotoStep>CallSi21CheckEntryDescription</GotoStep>
						</NotEqual>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="57" Param0="u16ObjectIndexInclOffset" Level="Verbose">The entry 0x{0:X4}.21 is defined as a padding entry.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>EndSi21</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="HandleNotExistingSi21">
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="58" Param0="u16ObjectIndexInclOffset" Level="Output">The entry 0x{0:X4}.21 does not exists.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>EndSi21</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CallSi21CheckEntryDescription">
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"offline"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>21</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>"Gamma Imaginary 1"</Parameter>
						<Parameter>8</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>null</Parameter>
						<Parameter>T</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>32</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>true</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="EndSi21"></TestStep>
				<TestStep Name="StartSi22">
					<Description Id="59" Level="Output">Start validate SubIndex22</Description>
					<WriteLine Id="60" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : Subindex '0x{0:X}.22'</WriteLine>
				</TestStep>
				<TestStep Name="SetSi22RequiredLevel">
					<SetVariable Target="bObjectOrEntryRequiredLevel">1</SetVariable>
					<WriteLine Id="61" Param0="u16ObjectIndexInclOffset" Level="Verbose">0x{0:X4}.22 'Voltage Real 1' may be available</WriteLine>
				</TestStep>
				<TestStep Name="CheckIfSi22Exists">
					<GetObjectDescription SourceDictionary="odDeviceObjectdictionary" Index="u16ObjectIndexInclOffset" SubIndex="22">
						<Type>u16DataType</Type>
					</GetObjectDescription>
					<GotoOnFailure>HandleNotExistingSi22</GotoOnFailure>
				</TestStep>
				<TestStep>
					<Compare>
						<NotEqual>
							<Value1>u16DataType</Value1>
							<Value2>0</Value2>
							<GotoStep>CallSi22CheckEntryDescription</GotoStep>
						</NotEqual>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="62" Param0="u16ObjectIndexInclOffset" Level="Verbose">The entry 0x{0:X4}.22 is defined as a padding entry.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>EndSi22</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="HandleNotExistingSi22">
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="63" Param0="u16ObjectIndexInclOffset" Level="Output">The entry 0x{0:X4}.22 does not exists.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>EndSi22</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CallSi22CheckEntryDescription">
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"offline"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>22</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>"Voltage Real 1"</Parameter>
						<Parameter>8</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>null</Parameter>
						<Parameter>T</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>32</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>true</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="EndSi22"></TestStep>
				<TestStep Name="StartSi23">
					<Description Id="64" Level="Output">Start validate SubIndex23</Description>
					<WriteLine Id="65" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : Subindex '0x{0:X}.23'</WriteLine>
				</TestStep>
				<TestStep Name="SetSi23RequiredLevel">
					<SetVariable Target="bObjectOrEntryRequiredLevel">1</SetVariable>
					<WriteLine Id="66" Param0="u16ObjectIndexInclOffset" Level="Verbose">0x{0:X4}.23 'Voltage Imaginary 1' may be available</WriteLine>
				</TestStep>
				<TestStep Name="CheckIfSi23Exists">
					<GetObjectDescription SourceDictionary="odDeviceObjectdictionary" Index="u16ObjectIndexInclOffset" SubIndex="23">
						<Type>u16DataType</Type>
					</GetObjectDescription>
					<GotoOnFailure>HandleNotExistingSi23</GotoOnFailure>
				</TestStep>
				<TestStep>
					<Compare>
						<NotEqual>
							<Value1>u16DataType</Value1>
							<Value2>0</Value2>
							<GotoStep>CallSi23CheckEntryDescription</GotoStep>
						</NotEqual>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="67" Param0="u16ObjectIndexInclOffset" Level="Verbose">The entry 0x{0:X4}.23 is defined as a padding entry.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>EndSi23</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="HandleNotExistingSi23">
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="68" Param0="u16ObjectIndexInclOffset" Level="Output">The entry 0x{0:X4}.23 does not exists.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>EndSi23</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CallSi23CheckEntryDescription">
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"offline"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>23</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>"Voltage Imaginary 1"</Parameter>
						<Parameter>8</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>null</Parameter>
						<Parameter>T</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>32</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>true</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="EndSi23"></TestStep>
				<TestStep Name="StartSi24">
					<Description Id="69" Level="Output">Start validate SubIndex24</Description>
					<WriteLine Id="70" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : Subindex '0x{0:X}.24'</WriteLine>
				</TestStep>
				<TestStep Name="SetSi24RequiredLevel">
					<SetVariable Target="bObjectOrEntryRequiredLevel">1</SetVariable>
					<WriteLine Id="71" Param0="u16ObjectIndexInclOffset" Level="Verbose">0x{0:X4}.24 'Current Real 1' may be available</WriteLine>
				</TestStep>
				<TestStep Name="CheckIfSi24Exists">
					<GetObjectDescription SourceDictionary="odDeviceObjectdictionary" Index="u16ObjectIndexInclOffset" SubIndex="24">
						<Type>u16DataType</Type>
					</GetObjectDescription>
					<GotoOnFailure>HandleNotExistingSi24</GotoOnFailure>
				</TestStep>
				<TestStep>
					<Compare>
						<NotEqual>
							<Value1>u16DataType</Value1>
							<Value2>0</Value2>
							<GotoStep>CallSi24CheckEntryDescription</GotoStep>
						</NotEqual>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="72" Param0="u16ObjectIndexInclOffset" Level="Verbose">The entry 0x{0:X4}.24 is defined as a padding entry.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>EndSi24</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="HandleNotExistingSi24">
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="73" Param0="u16ObjectIndexInclOffset" Level="Output">The entry 0x{0:X4}.24 does not exists.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>EndSi24</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CallSi24CheckEntryDescription">
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"offline"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>24</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>"Current Real 1"</Parameter>
						<Parameter>8</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>null</Parameter>
						<Parameter>T</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>32</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>true</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="EndSi24"></TestStep>
				<TestStep Name="StartSi25">
					<Description Id="74" Level="Output">Start validate SubIndex25</Description>
					<WriteLine Id="75" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : Subindex '0x{0:X}.25'</WriteLine>
				</TestStep>
				<TestStep Name="SetSi25RequiredLevel">
					<SetVariable Target="bObjectOrEntryRequiredLevel">1</SetVariable>
					<WriteLine Id="76" Param0="u16ObjectIndexInclOffset" Level="Verbose">0x{0:X4}.25 'Current Imaginary 1' may be available</WriteLine>
				</TestStep>
				<TestStep Name="CheckIfSi25Exists">
					<GetObjectDescription SourceDictionary="odDeviceObjectdictionary" Index="u16ObjectIndexInclOffset" SubIndex="25">
						<Type>u16DataType</Type>
					</GetObjectDescription>
					<GotoOnFailure>HandleNotExistingSi25</GotoOnFailure>
				</TestStep>
				<TestStep>
					<Compare>
						<NotEqual>
							<Value1>u16DataType</Value1>
							<Value2>0</Value2>
							<GotoStep>CallSi25CheckEntryDescription</GotoStep>
						</NotEqual>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="77" Param0="u16ObjectIndexInclOffset" Level="Verbose">The entry 0x{0:X4}.25 is defined as a padding entry.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>EndSi25</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="HandleNotExistingSi25">
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="78" Param0="u16ObjectIndexInclOffset" Level="Output">The entry 0x{0:X4}.25 does not exists.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>EndSi25</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CallSi25CheckEntryDescription">
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"offline"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>25</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>"Current Imaginary 1"</Parameter>
						<Parameter>8</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>null</Parameter>
						<Parameter>T</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>32</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>true</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="EndSi25"></TestStep>
				<TestStep Name="CheckReservedEntryRange_26_to_31">
					<Description Id="79" Level="Output">Start check reserved entry range 26 to 31</Description>
					<CallTestFunction Name="CheckReservedEntryRange">
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>26</Parameter>
						<Parameter>32</Parameter>
						<Parameter>odDeviceObjectdictionary</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="StartSi32">
					<Description Id="80" Level="Output">Start validate SubIndex32</Description>
					<WriteLine Id="81" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : Subindex '0x{0:X}.32'</WriteLine>
				</TestStep>
				<TestStep Name="SetSi32RequiredLevel">
					<SetVariable Target="bObjectOrEntryRequiredLevel">1</SetVariable>
					<WriteLine Id="82" Param0="u16ObjectIndexInclOffset" Level="Verbose">0x{0:X4}.32 'Forward Power 2' may be available</WriteLine>
				</TestStep>
				<TestStep Name="CheckIfSi32Exists">
					<GetObjectDescription SourceDictionary="odDeviceObjectdictionary" Index="u16ObjectIndexInclOffset" SubIndex="32">
						<Type>u16DataType</Type>
					</GetObjectDescription>
					<GotoOnFailure>HandleNotExistingSi32</GotoOnFailure>
				</TestStep>
				<TestStep>
					<Compare>
						<NotEqual>
							<Value1>u16DataType</Value1>
							<Value2>0</Value2>
							<GotoStep>CallSi32CheckEntryDescription</GotoStep>
						</NotEqual>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="83" Param0="u16ObjectIndexInclOffset" Level="Verbose">The entry 0x{0:X4}.32 is defined as a padding entry.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>EndSi32</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="HandleNotExistingSi32">
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="84" Param0="u16ObjectIndexInclOffset" Level="Output">The entry 0x{0:X4}.32 does not exists.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>EndSi32</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CallSi32CheckEntryDescription">
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"offline"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>32</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>"Forward Power 2"</Parameter>
						<Parameter>8</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>null</Parameter>
						<Parameter>T</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>32</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>true</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="EndSi32"></TestStep>
				<TestStep Name="StartSi33">
					<Description Id="85" Level="Output">Start validate SubIndex33</Description>
					<WriteLine Id="86" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : Subindex '0x{0:X}.33'</WriteLine>
				</TestStep>
				<TestStep Name="SetSi33RequiredLevel">
					<SetVariable Target="bObjectOrEntryRequiredLevel">1</SetVariable>
					<WriteLine Id="87" Param0="u16ObjectIndexInclOffset" Level="Verbose">0x{0:X4}.33 'Reflected Power 2' may be available</WriteLine>
				</TestStep>
				<TestStep Name="CheckIfSi33Exists">
					<GetObjectDescription SourceDictionary="odDeviceObjectdictionary" Index="u16ObjectIndexInclOffset" SubIndex="33">
						<Type>u16DataType</Type>
					</GetObjectDescription>
					<GotoOnFailure>HandleNotExistingSi33</GotoOnFailure>
				</TestStep>
				<TestStep>
					<Compare>
						<NotEqual>
							<Value1>u16DataType</Value1>
							<Value2>0</Value2>
							<GotoStep>CallSi33CheckEntryDescription</GotoStep>
						</NotEqual>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="88" Param0="u16ObjectIndexInclOffset" Level="Verbose">The entry 0x{0:X4}.33 is defined as a padding entry.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>EndSi33</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="HandleNotExistingSi33">
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="89" Param0="u16ObjectIndexInclOffset" Level="Output">The entry 0x{0:X4}.33 does not exists.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>EndSi33</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CallSi33CheckEntryDescription">
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"offline"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>33</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>"Reflected Power 2"</Parameter>
						<Parameter>8</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>null</Parameter>
						<Parameter>T</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>32</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>true</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="EndSi33"></TestStep>
				<TestStep Name="StartSi34">
					<Description Id="90" Level="Output">Start validate SubIndex34</Description>
					<WriteLine Id="91" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : Subindex '0x{0:X}.34'</WriteLine>
				</TestStep>
				<TestStep Name="SetSi34RequiredLevel">
					<SetVariable Target="bObjectOrEntryRequiredLevel">1</SetVariable>
					<WriteLine Id="92" Param0="u16ObjectIndexInclOffset" Level="Verbose">0x{0:X4}.34 'Delivered Power 2' may be available</WriteLine>
				</TestStep>
				<TestStep Name="CheckIfSi34Exists">
					<GetObjectDescription SourceDictionary="odDeviceObjectdictionary" Index="u16ObjectIndexInclOffset" SubIndex="34">
						<Type>u16DataType</Type>
					</GetObjectDescription>
					<GotoOnFailure>HandleNotExistingSi34</GotoOnFailure>
				</TestStep>
				<TestStep>
					<Compare>
						<NotEqual>
							<Value1>u16DataType</Value1>
							<Value2>0</Value2>
							<GotoStep>CallSi34CheckEntryDescription</GotoStep>
						</NotEqual>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="93" Param0="u16ObjectIndexInclOffset" Level="Verbose">The entry 0x{0:X4}.34 is defined as a padding entry.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>EndSi34</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="HandleNotExistingSi34">
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="94" Param0="u16ObjectIndexInclOffset" Level="Output">The entry 0x{0:X4}.34 does not exists.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>EndSi34</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CallSi34CheckEntryDescription">
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"offline"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>34</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>"Delivered Power 2"</Parameter>
						<Parameter>8</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>null</Parameter>
						<Parameter>T</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>32</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>true</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="EndSi34"></TestStep>
				<TestStep Name="StartSi35">
					<Description Id="95" Level="Output">Start validate SubIndex35</Description>
					<WriteLine Id="96" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : Subindex '0x{0:X}.35'</WriteLine>
				</TestStep>
				<TestStep Name="SetSi35RequiredLevel">
					<SetVariable Target="bObjectOrEntryRequiredLevel">1</SetVariable>
					<WriteLine Id="97" Param0="u16ObjectIndexInclOffset" Level="Verbose">0x{0:X4}.35 'RF Output Frequency 2' may be available</WriteLine>
				</TestStep>
				<TestStep Name="CheckIfSi35Exists">
					<GetObjectDescription SourceDictionary="odDeviceObjectdictionary" Index="u16ObjectIndexInclOffset" SubIndex="35">
						<Type>u16DataType</Type>
					</GetObjectDescription>
					<GotoOnFailure>HandleNotExistingSi35</GotoOnFailure>
				</TestStep>
				<TestStep>
					<Compare>
						<NotEqual>
							<Value1>u16DataType</Value1>
							<Value2>0</Value2>
							<GotoStep>CallSi35CheckEntryDescription</GotoStep>
						</NotEqual>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="98" Param0="u16ObjectIndexInclOffset" Level="Verbose">The entry 0x{0:X4}.35 is defined as a padding entry.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>EndSi35</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="HandleNotExistingSi35">
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="99" Param0="u16ObjectIndexInclOffset" Level="Output">The entry 0x{0:X4}.35 does not exists.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>EndSi35</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CallSi35CheckEntryDescription">
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"offline"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>35</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>"RF Output Frequency 2"</Parameter>
						<Parameter>7</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>null</Parameter>
						<Parameter>T</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>32</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>true</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="EndSi35"></TestStep>
				<TestStep Name="StartSi36">
					<Description Id="100" Level="Output">Start validate SubIndex36</Description>
					<WriteLine Id="101" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : Subindex '0x{0:X}.36'</WriteLine>
				</TestStep>
				<TestStep Name="SetSi36RequiredLevel">
					<SetVariable Target="bObjectOrEntryRequiredLevel">1</SetVariable>
					<WriteLine Id="102" Param0="u16ObjectIndexInclOffset" Level="Verbose">0x{0:X4}.36 'Gamma Real 2' may be available</WriteLine>
				</TestStep>
				<TestStep Name="CheckIfSi36Exists">
					<GetObjectDescription SourceDictionary="odDeviceObjectdictionary" Index="u16ObjectIndexInclOffset" SubIndex="36">
						<Type>u16DataType</Type>
					</GetObjectDescription>
					<GotoOnFailure>HandleNotExistingSi36</GotoOnFailure>
				</TestStep>
				<TestStep>
					<Compare>
						<NotEqual>
							<Value1>u16DataType</Value1>
							<Value2>0</Value2>
							<GotoStep>CallSi36CheckEntryDescription</GotoStep>
						</NotEqual>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="103" Param0="u16ObjectIndexInclOffset" Level="Verbose">The entry 0x{0:X4}.36 is defined as a padding entry.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>EndSi36</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="HandleNotExistingSi36">
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="104" Param0="u16ObjectIndexInclOffset" Level="Output">The entry 0x{0:X4}.36 does not exists.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>EndSi36</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CallSi36CheckEntryDescription">
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"offline"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>36</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>"Gamma Real 2"</Parameter>
						<Parameter>8</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>null</Parameter>
						<Parameter>T</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>32</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>true</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="EndSi36"></TestStep>
				<TestStep Name="StartSi37">
					<Description Id="105" Level="Output">Start validate SubIndex37</Description>
					<WriteLine Id="106" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : Subindex '0x{0:X}.37'</WriteLine>
				</TestStep>
				<TestStep Name="SetSi37RequiredLevel">
					<SetVariable Target="bObjectOrEntryRequiredLevel">1</SetVariable>
					<WriteLine Id="107" Param0="u16ObjectIndexInclOffset" Level="Verbose">0x{0:X4}.37 'Gamma Imaginary 2' may be available</WriteLine>
				</TestStep>
				<TestStep Name="CheckIfSi37Exists">
					<GetObjectDescription SourceDictionary="odDeviceObjectdictionary" Index="u16ObjectIndexInclOffset" SubIndex="37">
						<Type>u16DataType</Type>
					</GetObjectDescription>
					<GotoOnFailure>HandleNotExistingSi37</GotoOnFailure>
				</TestStep>
				<TestStep>
					<Compare>
						<NotEqual>
							<Value1>u16DataType</Value1>
							<Value2>0</Value2>
							<GotoStep>CallSi37CheckEntryDescription</GotoStep>
						</NotEqual>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="108" Param0="u16ObjectIndexInclOffset" Level="Verbose">The entry 0x{0:X4}.37 is defined as a padding entry.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>EndSi37</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="HandleNotExistingSi37">
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="109" Param0="u16ObjectIndexInclOffset" Level="Output">The entry 0x{0:X4}.37 does not exists.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>EndSi37</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CallSi37CheckEntryDescription">
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"offline"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>37</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>"Gamma Imaginary 2"</Parameter>
						<Parameter>8</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>null</Parameter>
						<Parameter>T</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>32</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>true</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="EndSi37"></TestStep>
				<TestStep Name="StartSi38">
					<Description Id="110" Level="Output">Start validate SubIndex38</Description>
					<WriteLine Id="111" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : Subindex '0x{0:X}.38'</WriteLine>
				</TestStep>
				<TestStep Name="SetSi38RequiredLevel">
					<SetVariable Target="bObjectOrEntryRequiredLevel">1</SetVariable>
					<WriteLine Id="112" Param0="u16ObjectIndexInclOffset" Level="Verbose">0x{0:X4}.38 'Voltage Real 2' may be available</WriteLine>
				</TestStep>
				<TestStep Name="CheckIfSi38Exists">
					<GetObjectDescription SourceDictionary="odDeviceObjectdictionary" Index="u16ObjectIndexInclOffset" SubIndex="38">
						<Type>u16DataType</Type>
					</GetObjectDescription>
					<GotoOnFailure>HandleNotExistingSi38</GotoOnFailure>
				</TestStep>
				<TestStep>
					<Compare>
						<NotEqual>
							<Value1>u16DataType</Value1>
							<Value2>0</Value2>
							<GotoStep>CallSi38CheckEntryDescription</GotoStep>
						</NotEqual>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="113" Param0="u16ObjectIndexInclOffset" Level="Verbose">The entry 0x{0:X4}.38 is defined as a padding entry.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>EndSi38</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="HandleNotExistingSi38">
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="114" Param0="u16ObjectIndexInclOffset" Level="Output">The entry 0x{0:X4}.38 does not exists.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>EndSi38</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CallSi38CheckEntryDescription">
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"offline"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>38</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>"Voltage Real 2"</Parameter>
						<Parameter>8</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>null</Parameter>
						<Parameter>T</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>32</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>true</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="EndSi38"></TestStep>
				<TestStep Name="StartSi39">
					<Description Id="115" Level="Output">Start validate SubIndex39</Description>
					<WriteLine Id="116" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : Subindex '0x{0:X}.39'</WriteLine>
				</TestStep>
				<TestStep Name="SetSi39RequiredLevel">
					<SetVariable Target="bObjectOrEntryRequiredLevel">1</SetVariable>
					<WriteLine Id="117" Param0="u16ObjectIndexInclOffset" Level="Verbose">0x{0:X4}.39 'Voltage Imaginary 2' may be available</WriteLine>
				</TestStep>
				<TestStep Name="CheckIfSi39Exists">
					<GetObjectDescription SourceDictionary="odDeviceObjectdictionary" Index="u16ObjectIndexInclOffset" SubIndex="39">
						<Type>u16DataType</Type>
					</GetObjectDescription>
					<GotoOnFailure>HandleNotExistingSi39</GotoOnFailure>
				</TestStep>
				<TestStep>
					<Compare>
						<NotEqual>
							<Value1>u16DataType</Value1>
							<Value2>0</Value2>
							<GotoStep>CallSi39CheckEntryDescription</GotoStep>
						</NotEqual>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="118" Param0="u16ObjectIndexInclOffset" Level="Verbose">The entry 0x{0:X4}.39 is defined as a padding entry.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>EndSi39</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="HandleNotExistingSi39">
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="119" Param0="u16ObjectIndexInclOffset" Level="Output">The entry 0x{0:X4}.39 does not exists.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>EndSi39</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CallSi39CheckEntryDescription">
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"offline"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>39</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>"Voltage Imaginary 2"</Parameter>
						<Parameter>8</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>null</Parameter>
						<Parameter>T</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>32</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>true</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="EndSi39"></TestStep>
				<TestStep Name="StartSi40">
					<Description Id="120" Level="Output">Start validate SubIndex40</Description>
					<WriteLine Id="121" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : Subindex '0x{0:X}.40'</WriteLine>
				</TestStep>
				<TestStep Name="SetSi40RequiredLevel">
					<SetVariable Target="bObjectOrEntryRequiredLevel">1</SetVariable>
					<WriteLine Id="122" Param0="u16ObjectIndexInclOffset" Level="Verbose">0x{0:X4}.40 'Current Real 2' may be available</WriteLine>
				</TestStep>
				<TestStep Name="CheckIfSi40Exists">
					<GetObjectDescription SourceDictionary="odDeviceObjectdictionary" Index="u16ObjectIndexInclOffset" SubIndex="40">
						<Type>u16DataType</Type>
					</GetObjectDescription>
					<GotoOnFailure>HandleNotExistingSi40</GotoOnFailure>
				</TestStep>
				<TestStep>
					<Compare>
						<NotEqual>
							<Value1>u16DataType</Value1>
							<Value2>0</Value2>
							<GotoStep>CallSi40CheckEntryDescription</GotoStep>
						</NotEqual>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="123" Param0="u16ObjectIndexInclOffset" Level="Verbose">The entry 0x{0:X4}.40 is defined as a padding entry.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>EndSi40</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="HandleNotExistingSi40">
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="124" Param0="u16ObjectIndexInclOffset" Level="Output">The entry 0x{0:X4}.40 does not exists.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>EndSi40</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CallSi40CheckEntryDescription">
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"offline"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>40</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>"Current Real 2"</Parameter>
						<Parameter>8</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>null</Parameter>
						<Parameter>T</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>32</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>true</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="EndSi40"></TestStep>
				<TestStep Name="StartSi41">
					<Description Id="125" Level="Output">Start validate SubIndex41</Description>
					<WriteLine Id="126" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : Subindex '0x{0:X}.41'</WriteLine>
				</TestStep>
				<TestStep Name="SetSi41RequiredLevel">
					<SetVariable Target="bObjectOrEntryRequiredLevel">1</SetVariable>
					<WriteLine Id="127" Param0="u16ObjectIndexInclOffset" Level="Verbose">0x{0:X4}.41 'Current Imaginary 2' may be available</WriteLine>
				</TestStep>
				<TestStep Name="CheckIfSi41Exists">
					<GetObjectDescription SourceDictionary="odDeviceObjectdictionary" Index="u16ObjectIndexInclOffset" SubIndex="41">
						<Type>u16DataType</Type>
					</GetObjectDescription>
					<GotoOnFailure>HandleNotExistingSi41</GotoOnFailure>
				</TestStep>
				<TestStep>
					<Compare>
						<NotEqual>
							<Value1>u16DataType</Value1>
							<Value2>0</Value2>
							<GotoStep>CallSi41CheckEntryDescription</GotoStep>
						</NotEqual>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="128" Param0="u16ObjectIndexInclOffset" Level="Verbose">The entry 0x{0:X4}.41 is defined as a padding entry.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>EndSi41</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="HandleNotExistingSi41">
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="129" Param0="u16ObjectIndexInclOffset" Level="Output">The entry 0x{0:X4}.41 does not exists.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>EndSi41</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CallSi41CheckEntryDescription">
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"offline"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>41</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>"Current Imaginary 2"</Parameter>
						<Parameter>8</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>null</Parameter>
						<Parameter>T</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>32</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>true</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="EndSi41"></TestStep>
				<TestStep Name="CheckReservedEntryRange_42_to_255">
					<Description Id="130" Level="Output">Start check reserved entry range 42 to 255</Description>
					<CallTestFunction Name="CheckReservedEntryRange">
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>42</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>odDeviceObjectdictionary</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="ProfileLoopEnd">
					<Compare>
						<Equal>
							<Value1>bAtLeastOneModuleMatch</Value1>
							<Value2>false</Value2>
							<GotoStep>HandleAbortTestCaseOnFirstError</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="HandleAbortTestCaseOnFirstError">
					<Compare>
						<Equal>
							<Value1>bAbortTestCaseOnFirstError</Value1>
							<Value2>false</Value2>
							<GotoStep>ProfileLoopIncrement</GotoStep>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>strResult</Value1>
							<Value2>EmptyString</Value2>
							<GotoStep>ProfileLoopIncrement</GotoStep>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="131" Level="Output">Object verification for all following modules abort because an error was already detected for the current module.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>END</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="ProfileLoopIncrement">
					<SetVariable Target="u32ProfileCounter">u32ProfileCounter + 1</SetVariable>
					<Compare>
						<Greater>
							<Value1>u32CurrentProfilesLength</Value1>
							<Value2>u32ProfileCounter</Value2>
							<GotoStep>ProfileLoopStart</GotoStep>
						</Greater>
					</Compare>
				</TestStep>
				<TestStep Name="END">
					<Compare>
						<NotEqual>
							<Value1>bAtLeastOneModuleMatch</Value1>
							<Value2>true</Value2>
							<SkipCase Id="132">SKIP TEST(no module/channel supports the current profile)</SkipCase>
						</NotEqual>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bDEBUG</Value1>
							<Value2>true</Value2>
							<WriteLine Id="133" Param0="strResult" Level="Verbose">DEBUG | Result : '{0}'.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>strResult</Value1>
							<Value2>EmptyString</Value2>
							<ReturnSuccess Id="134">Test succeed</ReturnSuccess>
						</Equal>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>strResult</Value1>
							<Value2>EmptyString</Value2>
							<RaiseError Id="135"></RaiseError>
						</NotEqual>
					</Compare>
				</TestStep>
			</TestCase>
			<TestCase Name="online | 0x6009 (Pulse Status)" CaseId="20">
				<Description>
					<PreCondition>- The device profile is 5003
- The module profile is 2011
- The submodule profile is 0</PreCondition>
					<Action>- Iterate over all online defined modules/channels and if the PreCondition matches the following operations are done:
- Get the online description of object 0x6009(+module specific offset) 'Pulse Status' and all entries
 Check:
    (Name)
    BitSize
    DataType
    Rx / Tx mappable
    Default Data
    MinData
    Flags       </Action>
					<PostCondition>Error if
- mandatory object / entry is not defined
- an optional object exists and the entries are invalid
- Object / entry description does not match with the specification</PostCondition>
					<ProposalForSolution>- Define the missing objects
- correct object / entry description</ProposalForSolution>
					<References>
						<Reference Specification="ETG.5003.2011"></Reference>
					</References>
					<Mandatory>true</Mandatory>
				</Description>
				<TestStep Name="InitResult">
					<SetVariable Target="strResult">EmptyString</SetVariable>
				</TestStep>
				<TestStep Name="CheckIfOdAvailable">
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Mailbox</Value1>
							<Value2>false</Value2>
							<SkipCase Id="1">DuT does not support mailbox.</SkipCase>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Mailbox.CoE</Value1>
							<Value2>false</Value2>
							<SkipCase Id="2">DuT does not support CoE.</SkipCase>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Mailbox.CoE.SdoInfo</Value1>
							<Value2>false</Value2>
							<SkipCase Id="3">DuT does not support SDO Info.</SkipCase>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="InitAtLeastOneProfileMatch">
					<SetVariable Target="bAtLeastOneModuleMatch">false</SetVariable>
				</TestStep>
				<TestStep Name="GetCurrentProfileList">
					<SizeOf UInt32Var="u32Tmp">arrOnlineProfiles</SizeOf>
					<Compare>
						<Equal>
							<Value1>u32Tmp</Value1>
							<Value2>0</Value2>
							<CallTestFunction Name="GetCurrentProfileList">
								<Parameter>"online"</Parameter>
								<Parameter>"SafeOP"</Parameter>
								<OutParameter>arrOnlineProfiles</OutParameter>
							</CallTestFunction>
						</Equal>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>u32Tmp</Value1>
							<Value2>0</Value2>
							<WriteLine Id="4" Param0="arrOnlineProfiles" Level="Verbose">Use previously created profile list ({0})</WriteLine>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep>
					<SizeOf UInt32Var="u32Tmp">arrOnlineProfiles</SizeOf>
				</TestStep>
				<TestStep>
					<InitArray TargetArray="arrCurrentProfiles" Length="u32Tmp"></InitArray>
				</TestStep>
				<TestStep>
					<CopyArray>
						<SourceArray>arrOnlineProfiles</SourceArray>
						<DestinationArray>arrCurrentProfiles</DestinationArray>
						<Length>u32Tmp</Length>
					</CopyArray>
				</TestStep>
				<TestStep Name="InitProfileLoopCounter">
					<SetVariable Target="u32ProfileCounter">0</SetVariable>
				</TestStep>
				<TestStep Name="GetProfileArrayLength">
					<SizeOf UInt32Var="u32CurrentProfilesLength">arrCurrentProfiles</SizeOf>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="5" Param0="u32CurrentProfilesLength" Level="Verbose">'{0}' Profile(s) defined online.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>u32CurrentProfilesLength</Value1>
							<Value2>0</Value2>
							<SkipCase Id="6">Skip case | no profile defined.</SkipCase>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="ProfileLoopStart">
					<GetArrayItem SourceArray="arrCurrentProfiles" Target="strTmpString" Index="u32ProfileCounter"></GetArrayItem>
				</TestStep>
				<TestStep Name="CheckProfileInformationString">
					<Compare>
						<Equal>
							<Value1>strTmpString</Value1>
							<Value2>null</Value2>
							<RaiseError Id="7" Param0="u32ProfileCounter">Profile Info element [{0}] is null.</RaiseError>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>strTmpString</Value1>
							<Value2>EmptyString</Value2>
							<RaiseError Id="8" Param0="u32ProfileCounter">Profile Info element [{0}] is an empty string.</RaiseError>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="GetDeviceProfile">
					<CallTestFunction Name="GetDeviceProfile">
						<Parameter>strTmpString</Parameter>
						<OutParameter>uint16CurDeviceProfile</OutParameter>
					</CallTestFunction>
				</TestStep>
				<TestStep Name="GetModuleProfile">
					<CallTestFunction Name="GetModuleProfile">
						<Parameter>strTmpString</Parameter>
						<OutParameter>uint16CurModuleProfile</OutParameter>
					</CallTestFunction>
				</TestStep>
				<TestStep Name="GetSubModuleProfile">
					<CallTestFunction Name="GetSubModuleProfile">
						<Parameter>strTmpString</Parameter>
						<OutParameter>uint16CurSubModuleProfile</OutParameter>
					</CallTestFunction>
				</TestStep>
				<TestStep Name="DumpProfileInfo">
					<Description Id="9" Param0="uint16CurDeviceProfile" Param1="uint16CurModuleProfile" Param2="uint16CurSubModuleProfile" Param3="u32ProfileCounter" Level="Output">Module[{3}] : DeviceProfile '{0}' ; ModuleProfile '{1}' ; SubModuleProfile '{2}'</Description>
					<Compare>
						<Equal>
							<Value1>bIgnoreProfileID</Value1>
							<Value2>true</Value2>
							<GotoStep>IndicateThatAtleastOneModuleMatch</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CompareDeviceProfile">
					<Compare>
						<NotEqual>
							<Value1>uint16CurDeviceProfile</Value1>
							<Value2>5003</Value2>
							<WriteLine Id="10" Param0="uint16CurDeviceProfile" Level="Output">Skip Profile  (Test Device Profile '5003' != Cur Device Profile '{0}')</WriteLine>
						</NotEqual>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>uint16CurDeviceProfile</Value1>
							<Value2>5003</Value2>
							<GotoStep>ProfileLoopEnd</GotoStep>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep Name="CompareModuleProfile">
					<Compare>
						<NotEqual>
							<Value1>uint16CurModuleProfile</Value1>
							<Value2>2011</Value2>
							<WriteLine Id="11" Param0="uint16CurModuleProfile" Level="Output">Skip Profile  (Test Module Profile '2011' != Cur Module Profile '{0}')</WriteLine>
						</NotEqual>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>uint16CurModuleProfile</Value1>
							<Value2>2011</Value2>
							<GotoStep>ProfileLoopEnd</GotoStep>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep Name="CompareSubModuleProfile">
					<Compare>
						<NotEqual>
							<Value1>uint16CurSubModuleProfile</Value1>
							<Value2>0</Value2>
							<WriteLine Id="12" Param0="uint16CurSubModuleProfile" Level="Output">Skip Profile  (Test SubModule Profile '0' != Cur SubModule Profile '{0}')</WriteLine>
						</NotEqual>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>uint16CurSubModuleProfile</Value1>
							<Value2>0</Value2>
							<GotoStep>ProfileLoopEnd</GotoStep>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep Name="IndicateThatAtleastOneModuleMatch">
					<SetVariable Target="bAtLeastOneModuleMatch">true</SetVariable>
				</TestStep>
				<TestStep Name="GetObjectIndexInclOffset">
					<SetVariable Target="u16ObjectIndexInclOffset">#x6009 + (u32ProfileCounter * #x10)</SetVariable>
					<WriteLine Id="13" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : ObjectIndex '0x{0:X}'</WriteLine>
				</TestStep>
				<TestStep Name="LoadDeviceObjectDictionary">
					<Description Id="14" Level="Verbose">Load 'online' object dictionary for testing.</Description>
					<GetObjectDictionary Target="odDeviceObjectdictionary">
						<DictionaryType>Online</DictionaryType>
					</GetObjectDictionary>
					<RaiseErrorOnFailure Id="15">VerifyObject : failed to load online object dictionary.</RaiseErrorOnFailure>
				</TestStep>
				<TestStep Name="SetObjectRequiredLevel">
					<SetVariable Target="bObjectOrEntryRequiredLevel">1</SetVariable>
					<WriteLine Id="16" Param0="u16ObjectIndexInclOffset" Level="Verbose">0x{0:X4} 'Pulse Status' may be available</WriteLine>
				</TestStep>
				<TestStep Name="CheckIfObjectExists">
					<GetObjectDescription SourceDictionary="odDeviceObjectdictionary" Index="u16ObjectIndexInclOffset" SubIndex="-1"></GetObjectDescription>
					<GotoOnSuccess>CallCheckObjectDescription</GotoOnSuccess>
				</TestStep>
				<TestStep Name="HandleNotExistingObject">
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>2</Value2>
							<WriteLine Id="17" Param0="u16ObjectIndexInclOffset" Level="Warning">The object 0x{0:X4} 'Pulse Status' does not exists.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>1</Value2>
							<WriteLine Id="18" Param0="u16ObjectIndexInclOffset" Level="Output">The object 0x{0:X4} 'Pulse Status' does not exists.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>ProfileLoopEnd</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CallCheckObjectDescription">
					<Description Id="19" Param0="u16ObjectIndexInclOffset" Level="Output">Verify the object description 0x{0:X4} 'Pulse Status'.</Description>
					<CallTestFunction Name="CheckObjectDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"online"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>"Pulse Status"</Parameter>
						<Parameter>null</Parameter>
						<Parameter>9</Parameter>
						<Parameter>-1</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<GotoStep>ProfileLoopEnd</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="InitEntryBittOffset">
					<SetVariable Target="i32CurrentBitOffset">0</SetVariable>
				</TestStep>
				<TestStep Name="StartSi0">
					<Description Id="20" Level="Output">Start validate SubIndex0</Description>
					<WriteLine Id="21" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : Subindex '0x{0:X}.0'</WriteLine>
				</TestStep>
				<TestStep Name="CallSi0CheckEntryDescription">
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"online"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>0</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>null</Parameter>
						<Parameter>5</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>null</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>null</Parameter>
						<Parameter>null</Parameter>
						<Parameter>null</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>8</Parameter>
						<Parameter>i32CurrentBitOffset</Parameter>
						<Parameter>true</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="EndSi0">
					<SetVariable Target="i32CurrentBitOffset">16</SetVariable>
				</TestStep>
				<TestStep Name="StartSi1">
					<Description Id="22" Level="Output">Start validate SubIndex1</Description>
					<WriteLine Id="23" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : Subindex '0x{0:X}.1'</WriteLine>
				</TestStep>
				<TestStep Name="SetSi1RequiredLevel">
					<SetVariable Target="bObjectOrEntryRequiredLevel">1</SetVariable>
					<WriteLine Id="24" Param0="u16ObjectIndexInclOffset" Level="Verbose">0x{0:X4}.1 'Pulse Width' may be available</WriteLine>
				</TestStep>
				<TestStep Name="CheckIfSi1Exists">
					<GetObjectDescription SourceDictionary="odDeviceObjectdictionary" Index="u16ObjectIndexInclOffset" SubIndex="1">
						<Type>u16DataType</Type>
					</GetObjectDescription>
					<GotoOnFailure>HandleNotExistingSi1</GotoOnFailure>
				</TestStep>
				<TestStep>
					<Compare>
						<NotEqual>
							<Value1>u16DataType</Value1>
							<Value2>0</Value2>
							<GotoStep>CallSi1CheckEntryDescription</GotoStep>
						</NotEqual>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="25" Param0="u16ObjectIndexInclOffset" Level="Verbose">The entry 0x{0:X4}.1 is defined as a padding entry.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>EndSi1</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="HandleNotExistingSi1">
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="26" Param0="u16ObjectIndexInclOffset" Level="Output">The entry 0x{0:X4}.1 does not exists.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>EndSi1</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CallSi1CheckEntryDescription">
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"online"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>1</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>"Pulse Width"</Parameter>
						<Parameter>8</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>null</Parameter>
						<Parameter>T</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>32</Parameter>
						<Parameter>i32CurrentBitOffset</Parameter>
						<Parameter>true</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="EndSi1">
					<SetVariable Target="i32CurrentBitOffset">-1</SetVariable>
				</TestStep>
				<TestStep Name="CheckReservedEntryRange_2_to_15">
					<Description Id="27" Level="Output">Start check reserved entry range 2 to 15</Description>
					<CallTestFunction Name="CheckReservedEntryRange">
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>2</Parameter>
						<Parameter>16</Parameter>
						<Parameter>odDeviceObjectdictionary</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="StartSi16">
					<Description Id="28" Level="Output">Start validate SubIndex16</Description>
					<WriteLine Id="29" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : Subindex '0x{0:X}.16'</WriteLine>
				</TestStep>
				<TestStep Name="SetSi16RequiredLevel">
					<SetVariable Target="bObjectOrEntryRequiredLevel">1</SetVariable>
					<WriteLine Id="30" Param0="u16ObjectIndexInclOffset" Level="Verbose">0x{0:X4}.16 'Forward Power 1' may be available</WriteLine>
				</TestStep>
				<TestStep Name="CheckIfSi16Exists">
					<GetObjectDescription SourceDictionary="odDeviceObjectdictionary" Index="u16ObjectIndexInclOffset" SubIndex="16">
						<Type>u16DataType</Type>
					</GetObjectDescription>
					<GotoOnFailure>HandleNotExistingSi16</GotoOnFailure>
				</TestStep>
				<TestStep>
					<Compare>
						<NotEqual>
							<Value1>u16DataType</Value1>
							<Value2>0</Value2>
							<GotoStep>CallSi16CheckEntryDescription</GotoStep>
						</NotEqual>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="31" Param0="u16ObjectIndexInclOffset" Level="Verbose">The entry 0x{0:X4}.16 is defined as a padding entry.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>EndSi16</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="HandleNotExistingSi16">
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="32" Param0="u16ObjectIndexInclOffset" Level="Output">The entry 0x{0:X4}.16 does not exists.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>EndSi16</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CallSi16CheckEntryDescription">
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"online"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>16</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>"Forward Power 1"</Parameter>
						<Parameter>8</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>null</Parameter>
						<Parameter>T</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>32</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>true</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="EndSi16"></TestStep>
				<TestStep Name="StartSi17">
					<Description Id="33" Level="Output">Start validate SubIndex17</Description>
					<WriteLine Id="34" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : Subindex '0x{0:X}.17'</WriteLine>
				</TestStep>
				<TestStep Name="SetSi17RequiredLevel">
					<SetVariable Target="bObjectOrEntryRequiredLevel">1</SetVariable>
					<WriteLine Id="35" Param0="u16ObjectIndexInclOffset" Level="Verbose">0x{0:X4}.17 'Reflected Power 1' may be available</WriteLine>
				</TestStep>
				<TestStep Name="CheckIfSi17Exists">
					<GetObjectDescription SourceDictionary="odDeviceObjectdictionary" Index="u16ObjectIndexInclOffset" SubIndex="17">
						<Type>u16DataType</Type>
					</GetObjectDescription>
					<GotoOnFailure>HandleNotExistingSi17</GotoOnFailure>
				</TestStep>
				<TestStep>
					<Compare>
						<NotEqual>
							<Value1>u16DataType</Value1>
							<Value2>0</Value2>
							<GotoStep>CallSi17CheckEntryDescription</GotoStep>
						</NotEqual>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="36" Param0="u16ObjectIndexInclOffset" Level="Verbose">The entry 0x{0:X4}.17 is defined as a padding entry.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>EndSi17</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="HandleNotExistingSi17">
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="37" Param0="u16ObjectIndexInclOffset" Level="Output">The entry 0x{0:X4}.17 does not exists.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>EndSi17</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CallSi17CheckEntryDescription">
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"online"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>17</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>"Reflected Power 1"</Parameter>
						<Parameter>8</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>null</Parameter>
						<Parameter>T</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>32</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>true</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="EndSi17"></TestStep>
				<TestStep Name="StartSi18">
					<Description Id="38" Level="Output">Start validate SubIndex18</Description>
					<WriteLine Id="39" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : Subindex '0x{0:X}.18'</WriteLine>
				</TestStep>
				<TestStep Name="SetSi18RequiredLevel">
					<SetVariable Target="bObjectOrEntryRequiredLevel">1</SetVariable>
					<WriteLine Id="40" Param0="u16ObjectIndexInclOffset" Level="Verbose">0x{0:X4}.18 'Delivered Power 1' may be available</WriteLine>
				</TestStep>
				<TestStep Name="CheckIfSi18Exists">
					<GetObjectDescription SourceDictionary="odDeviceObjectdictionary" Index="u16ObjectIndexInclOffset" SubIndex="18">
						<Type>u16DataType</Type>
					</GetObjectDescription>
					<GotoOnFailure>HandleNotExistingSi18</GotoOnFailure>
				</TestStep>
				<TestStep>
					<Compare>
						<NotEqual>
							<Value1>u16DataType</Value1>
							<Value2>0</Value2>
							<GotoStep>CallSi18CheckEntryDescription</GotoStep>
						</NotEqual>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="41" Param0="u16ObjectIndexInclOffset" Level="Verbose">The entry 0x{0:X4}.18 is defined as a padding entry.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>EndSi18</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="HandleNotExistingSi18">
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="42" Param0="u16ObjectIndexInclOffset" Level="Output">The entry 0x{0:X4}.18 does not exists.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>EndSi18</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CallSi18CheckEntryDescription">
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"online"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>18</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>"Delivered Power 1"</Parameter>
						<Parameter>8</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>null</Parameter>
						<Parameter>T</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>32</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>true</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="EndSi18"></TestStep>
				<TestStep Name="StartSi19">
					<Description Id="43" Level="Output">Start validate SubIndex19</Description>
					<WriteLine Id="44" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : Subindex '0x{0:X}.19'</WriteLine>
				</TestStep>
				<TestStep Name="SetSi19RequiredLevel">
					<SetVariable Target="bObjectOrEntryRequiredLevel">1</SetVariable>
					<WriteLine Id="45" Param0="u16ObjectIndexInclOffset" Level="Verbose">0x{0:X4}.19 'RF Output Frequency 1' may be available</WriteLine>
				</TestStep>
				<TestStep Name="CheckIfSi19Exists">
					<GetObjectDescription SourceDictionary="odDeviceObjectdictionary" Index="u16ObjectIndexInclOffset" SubIndex="19">
						<Type>u16DataType</Type>
					</GetObjectDescription>
					<GotoOnFailure>HandleNotExistingSi19</GotoOnFailure>
				</TestStep>
				<TestStep>
					<Compare>
						<NotEqual>
							<Value1>u16DataType</Value1>
							<Value2>0</Value2>
							<GotoStep>CallSi19CheckEntryDescription</GotoStep>
						</NotEqual>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="46" Param0="u16ObjectIndexInclOffset" Level="Verbose">The entry 0x{0:X4}.19 is defined as a padding entry.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>EndSi19</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="HandleNotExistingSi19">
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="47" Param0="u16ObjectIndexInclOffset" Level="Output">The entry 0x{0:X4}.19 does not exists.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>EndSi19</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CallSi19CheckEntryDescription">
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"online"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>19</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>"RF Output Frequency 1"</Parameter>
						<Parameter>7</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>null</Parameter>
						<Parameter>T</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>32</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>true</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="EndSi19"></TestStep>
				<TestStep Name="StartSi20">
					<Description Id="48" Level="Output">Start validate SubIndex20</Description>
					<WriteLine Id="49" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : Subindex '0x{0:X}.20'</WriteLine>
				</TestStep>
				<TestStep Name="SetSi20RequiredLevel">
					<SetVariable Target="bObjectOrEntryRequiredLevel">1</SetVariable>
					<WriteLine Id="50" Param0="u16ObjectIndexInclOffset" Level="Verbose">0x{0:X4}.20 'Gamma Real 1' may be available</WriteLine>
				</TestStep>
				<TestStep Name="CheckIfSi20Exists">
					<GetObjectDescription SourceDictionary="odDeviceObjectdictionary" Index="u16ObjectIndexInclOffset" SubIndex="20">
						<Type>u16DataType</Type>
					</GetObjectDescription>
					<GotoOnFailure>HandleNotExistingSi20</GotoOnFailure>
				</TestStep>
				<TestStep>
					<Compare>
						<NotEqual>
							<Value1>u16DataType</Value1>
							<Value2>0</Value2>
							<GotoStep>CallSi20CheckEntryDescription</GotoStep>
						</NotEqual>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="51" Param0="u16ObjectIndexInclOffset" Level="Verbose">The entry 0x{0:X4}.20 is defined as a padding entry.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>EndSi20</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="HandleNotExistingSi20">
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="52" Param0="u16ObjectIndexInclOffset" Level="Output">The entry 0x{0:X4}.20 does not exists.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>EndSi20</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CallSi20CheckEntryDescription">
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"online"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>20</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>"Gamma Real 1"</Parameter>
						<Parameter>8</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>null</Parameter>
						<Parameter>T</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>32</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>true</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="EndSi20"></TestStep>
				<TestStep Name="StartSi21">
					<Description Id="53" Level="Output">Start validate SubIndex21</Description>
					<WriteLine Id="54" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : Subindex '0x{0:X}.21'</WriteLine>
				</TestStep>
				<TestStep Name="SetSi21RequiredLevel">
					<SetVariable Target="bObjectOrEntryRequiredLevel">1</SetVariable>
					<WriteLine Id="55" Param0="u16ObjectIndexInclOffset" Level="Verbose">0x{0:X4}.21 'Gamma Imaginary 1' may be available</WriteLine>
				</TestStep>
				<TestStep Name="CheckIfSi21Exists">
					<GetObjectDescription SourceDictionary="odDeviceObjectdictionary" Index="u16ObjectIndexInclOffset" SubIndex="21">
						<Type>u16DataType</Type>
					</GetObjectDescription>
					<GotoOnFailure>HandleNotExistingSi21</GotoOnFailure>
				</TestStep>
				<TestStep>
					<Compare>
						<NotEqual>
							<Value1>u16DataType</Value1>
							<Value2>0</Value2>
							<GotoStep>CallSi21CheckEntryDescription</GotoStep>
						</NotEqual>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="56" Param0="u16ObjectIndexInclOffset" Level="Verbose">The entry 0x{0:X4}.21 is defined as a padding entry.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>EndSi21</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="HandleNotExistingSi21">
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="57" Param0="u16ObjectIndexInclOffset" Level="Output">The entry 0x{0:X4}.21 does not exists.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>EndSi21</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CallSi21CheckEntryDescription">
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"online"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>21</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>"Gamma Imaginary 1"</Parameter>
						<Parameter>8</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>null</Parameter>
						<Parameter>T</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>32</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>true</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="EndSi21"></TestStep>
				<TestStep Name="StartSi22">
					<Description Id="58" Level="Output">Start validate SubIndex22</Description>
					<WriteLine Id="59" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : Subindex '0x{0:X}.22'</WriteLine>
				</TestStep>
				<TestStep Name="SetSi22RequiredLevel">
					<SetVariable Target="bObjectOrEntryRequiredLevel">1</SetVariable>
					<WriteLine Id="60" Param0="u16ObjectIndexInclOffset" Level="Verbose">0x{0:X4}.22 'Voltage Real 1' may be available</WriteLine>
				</TestStep>
				<TestStep Name="CheckIfSi22Exists">
					<GetObjectDescription SourceDictionary="odDeviceObjectdictionary" Index="u16ObjectIndexInclOffset" SubIndex="22">
						<Type>u16DataType</Type>
					</GetObjectDescription>
					<GotoOnFailure>HandleNotExistingSi22</GotoOnFailure>
				</TestStep>
				<TestStep>
					<Compare>
						<NotEqual>
							<Value1>u16DataType</Value1>
							<Value2>0</Value2>
							<GotoStep>CallSi22CheckEntryDescription</GotoStep>
						</NotEqual>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="61" Param0="u16ObjectIndexInclOffset" Level="Verbose">The entry 0x{0:X4}.22 is defined as a padding entry.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>EndSi22</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="HandleNotExistingSi22">
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="62" Param0="u16ObjectIndexInclOffset" Level="Output">The entry 0x{0:X4}.22 does not exists.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>EndSi22</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CallSi22CheckEntryDescription">
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"online"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>22</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>"Voltage Real 1"</Parameter>
						<Parameter>8</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>null</Parameter>
						<Parameter>T</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>32</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>true</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="EndSi22"></TestStep>
				<TestStep Name="StartSi23">
					<Description Id="63" Level="Output">Start validate SubIndex23</Description>
					<WriteLine Id="64" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : Subindex '0x{0:X}.23'</WriteLine>
				</TestStep>
				<TestStep Name="SetSi23RequiredLevel">
					<SetVariable Target="bObjectOrEntryRequiredLevel">1</SetVariable>
					<WriteLine Id="65" Param0="u16ObjectIndexInclOffset" Level="Verbose">0x{0:X4}.23 'Voltage Imaginary 1' may be available</WriteLine>
				</TestStep>
				<TestStep Name="CheckIfSi23Exists">
					<GetObjectDescription SourceDictionary="odDeviceObjectdictionary" Index="u16ObjectIndexInclOffset" SubIndex="23">
						<Type>u16DataType</Type>
					</GetObjectDescription>
					<GotoOnFailure>HandleNotExistingSi23</GotoOnFailure>
				</TestStep>
				<TestStep>
					<Compare>
						<NotEqual>
							<Value1>u16DataType</Value1>
							<Value2>0</Value2>
							<GotoStep>CallSi23CheckEntryDescription</GotoStep>
						</NotEqual>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="66" Param0="u16ObjectIndexInclOffset" Level="Verbose">The entry 0x{0:X4}.23 is defined as a padding entry.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>EndSi23</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="HandleNotExistingSi23">
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="67" Param0="u16ObjectIndexInclOffset" Level="Output">The entry 0x{0:X4}.23 does not exists.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>EndSi23</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CallSi23CheckEntryDescription">
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"online"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>23</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>"Voltage Imaginary 1"</Parameter>
						<Parameter>8</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>null</Parameter>
						<Parameter>T</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>32</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>true</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="EndSi23"></TestStep>
				<TestStep Name="StartSi24">
					<Description Id="68" Level="Output">Start validate SubIndex24</Description>
					<WriteLine Id="69" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : Subindex '0x{0:X}.24'</WriteLine>
				</TestStep>
				<TestStep Name="SetSi24RequiredLevel">
					<SetVariable Target="bObjectOrEntryRequiredLevel">1</SetVariable>
					<WriteLine Id="70" Param0="u16ObjectIndexInclOffset" Level="Verbose">0x{0:X4}.24 'Current Real 1' may be available</WriteLine>
				</TestStep>
				<TestStep Name="CheckIfSi24Exists">
					<GetObjectDescription SourceDictionary="odDeviceObjectdictionary" Index="u16ObjectIndexInclOffset" SubIndex="24">
						<Type>u16DataType</Type>
					</GetObjectDescription>
					<GotoOnFailure>HandleNotExistingSi24</GotoOnFailure>
				</TestStep>
				<TestStep>
					<Compare>
						<NotEqual>
							<Value1>u16DataType</Value1>
							<Value2>0</Value2>
							<GotoStep>CallSi24CheckEntryDescription</GotoStep>
						</NotEqual>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="71" Param0="u16ObjectIndexInclOffset" Level="Verbose">The entry 0x{0:X4}.24 is defined as a padding entry.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>EndSi24</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="HandleNotExistingSi24">
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="72" Param0="u16ObjectIndexInclOffset" Level="Output">The entry 0x{0:X4}.24 does not exists.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>EndSi24</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CallSi24CheckEntryDescription">
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"online"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>24</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>"Current Real 1"</Parameter>
						<Parameter>8</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>null</Parameter>
						<Parameter>T</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>32</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>true</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="EndSi24"></TestStep>
				<TestStep Name="StartSi25">
					<Description Id="73" Level="Output">Start validate SubIndex25</Description>
					<WriteLine Id="74" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : Subindex '0x{0:X}.25'</WriteLine>
				</TestStep>
				<TestStep Name="SetSi25RequiredLevel">
					<SetVariable Target="bObjectOrEntryRequiredLevel">1</SetVariable>
					<WriteLine Id="75" Param0="u16ObjectIndexInclOffset" Level="Verbose">0x{0:X4}.25 'Current Imaginary 1' may be available</WriteLine>
				</TestStep>
				<TestStep Name="CheckIfSi25Exists">
					<GetObjectDescription SourceDictionary="odDeviceObjectdictionary" Index="u16ObjectIndexInclOffset" SubIndex="25">
						<Type>u16DataType</Type>
					</GetObjectDescription>
					<GotoOnFailure>HandleNotExistingSi25</GotoOnFailure>
				</TestStep>
				<TestStep>
					<Compare>
						<NotEqual>
							<Value1>u16DataType</Value1>
							<Value2>0</Value2>
							<GotoStep>CallSi25CheckEntryDescription</GotoStep>
						</NotEqual>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="76" Param0="u16ObjectIndexInclOffset" Level="Verbose">The entry 0x{0:X4}.25 is defined as a padding entry.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>EndSi25</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="HandleNotExistingSi25">
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="77" Param0="u16ObjectIndexInclOffset" Level="Output">The entry 0x{0:X4}.25 does not exists.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>EndSi25</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CallSi25CheckEntryDescription">
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"online"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>25</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>"Current Imaginary 1"</Parameter>
						<Parameter>8</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>null</Parameter>
						<Parameter>T</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>32</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>true</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="EndSi25"></TestStep>
				<TestStep Name="CheckReservedEntryRange_26_to_31">
					<Description Id="78" Level="Output">Start check reserved entry range 26 to 31</Description>
					<CallTestFunction Name="CheckReservedEntryRange">
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>26</Parameter>
						<Parameter>32</Parameter>
						<Parameter>odDeviceObjectdictionary</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="StartSi32">
					<Description Id="79" Level="Output">Start validate SubIndex32</Description>
					<WriteLine Id="80" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : Subindex '0x{0:X}.32'</WriteLine>
				</TestStep>
				<TestStep Name="SetSi32RequiredLevel">
					<SetVariable Target="bObjectOrEntryRequiredLevel">1</SetVariable>
					<WriteLine Id="81" Param0="u16ObjectIndexInclOffset" Level="Verbose">0x{0:X4}.32 'Forward Power 2' may be available</WriteLine>
				</TestStep>
				<TestStep Name="CheckIfSi32Exists">
					<GetObjectDescription SourceDictionary="odDeviceObjectdictionary" Index="u16ObjectIndexInclOffset" SubIndex="32">
						<Type>u16DataType</Type>
					</GetObjectDescription>
					<GotoOnFailure>HandleNotExistingSi32</GotoOnFailure>
				</TestStep>
				<TestStep>
					<Compare>
						<NotEqual>
							<Value1>u16DataType</Value1>
							<Value2>0</Value2>
							<GotoStep>CallSi32CheckEntryDescription</GotoStep>
						</NotEqual>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="82" Param0="u16ObjectIndexInclOffset" Level="Verbose">The entry 0x{0:X4}.32 is defined as a padding entry.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>EndSi32</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="HandleNotExistingSi32">
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="83" Param0="u16ObjectIndexInclOffset" Level="Output">The entry 0x{0:X4}.32 does not exists.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>EndSi32</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CallSi32CheckEntryDescription">
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"online"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>32</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>"Forward Power 2"</Parameter>
						<Parameter>8</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>null</Parameter>
						<Parameter>T</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>32</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>true</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="EndSi32"></TestStep>
				<TestStep Name="StartSi33">
					<Description Id="84" Level="Output">Start validate SubIndex33</Description>
					<WriteLine Id="85" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : Subindex '0x{0:X}.33'</WriteLine>
				</TestStep>
				<TestStep Name="SetSi33RequiredLevel">
					<SetVariable Target="bObjectOrEntryRequiredLevel">1</SetVariable>
					<WriteLine Id="86" Param0="u16ObjectIndexInclOffset" Level="Verbose">0x{0:X4}.33 'Reflected Power 2' may be available</WriteLine>
				</TestStep>
				<TestStep Name="CheckIfSi33Exists">
					<GetObjectDescription SourceDictionary="odDeviceObjectdictionary" Index="u16ObjectIndexInclOffset" SubIndex="33">
						<Type>u16DataType</Type>
					</GetObjectDescription>
					<GotoOnFailure>HandleNotExistingSi33</GotoOnFailure>
				</TestStep>
				<TestStep>
					<Compare>
						<NotEqual>
							<Value1>u16DataType</Value1>
							<Value2>0</Value2>
							<GotoStep>CallSi33CheckEntryDescription</GotoStep>
						</NotEqual>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="87" Param0="u16ObjectIndexInclOffset" Level="Verbose">The entry 0x{0:X4}.33 is defined as a padding entry.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>EndSi33</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="HandleNotExistingSi33">
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="88" Param0="u16ObjectIndexInclOffset" Level="Output">The entry 0x{0:X4}.33 does not exists.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>EndSi33</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CallSi33CheckEntryDescription">
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"online"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>33</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>"Reflected Power 2"</Parameter>
						<Parameter>8</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>null</Parameter>
						<Parameter>T</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>32</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>true</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="EndSi33"></TestStep>
				<TestStep Name="StartSi34">
					<Description Id="89" Level="Output">Start validate SubIndex34</Description>
					<WriteLine Id="90" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : Subindex '0x{0:X}.34'</WriteLine>
				</TestStep>
				<TestStep Name="SetSi34RequiredLevel">
					<SetVariable Target="bObjectOrEntryRequiredLevel">1</SetVariable>
					<WriteLine Id="91" Param0="u16ObjectIndexInclOffset" Level="Verbose">0x{0:X4}.34 'Delivered Power 2' may be available</WriteLine>
				</TestStep>
				<TestStep Name="CheckIfSi34Exists">
					<GetObjectDescription SourceDictionary="odDeviceObjectdictionary" Index="u16ObjectIndexInclOffset" SubIndex="34">
						<Type>u16DataType</Type>
					</GetObjectDescription>
					<GotoOnFailure>HandleNotExistingSi34</GotoOnFailure>
				</TestStep>
				<TestStep>
					<Compare>
						<NotEqual>
							<Value1>u16DataType</Value1>
							<Value2>0</Value2>
							<GotoStep>CallSi34CheckEntryDescription</GotoStep>
						</NotEqual>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="92" Param0="u16ObjectIndexInclOffset" Level="Verbose">The entry 0x{0:X4}.34 is defined as a padding entry.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>EndSi34</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="HandleNotExistingSi34">
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="93" Param0="u16ObjectIndexInclOffset" Level="Output">The entry 0x{0:X4}.34 does not exists.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>EndSi34</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CallSi34CheckEntryDescription">
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"online"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>34</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>"Delivered Power 2"</Parameter>
						<Parameter>8</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>null</Parameter>
						<Parameter>T</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>32</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>true</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="EndSi34"></TestStep>
				<TestStep Name="StartSi35">
					<Description Id="94" Level="Output">Start validate SubIndex35</Description>
					<WriteLine Id="95" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : Subindex '0x{0:X}.35'</WriteLine>
				</TestStep>
				<TestStep Name="SetSi35RequiredLevel">
					<SetVariable Target="bObjectOrEntryRequiredLevel">1</SetVariable>
					<WriteLine Id="96" Param0="u16ObjectIndexInclOffset" Level="Verbose">0x{0:X4}.35 'RF Output Frequency 2' may be available</WriteLine>
				</TestStep>
				<TestStep Name="CheckIfSi35Exists">
					<GetObjectDescription SourceDictionary="odDeviceObjectdictionary" Index="u16ObjectIndexInclOffset" SubIndex="35">
						<Type>u16DataType</Type>
					</GetObjectDescription>
					<GotoOnFailure>HandleNotExistingSi35</GotoOnFailure>
				</TestStep>
				<TestStep>
					<Compare>
						<NotEqual>
							<Value1>u16DataType</Value1>
							<Value2>0</Value2>
							<GotoStep>CallSi35CheckEntryDescription</GotoStep>
						</NotEqual>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="97" Param0="u16ObjectIndexInclOffset" Level="Verbose">The entry 0x{0:X4}.35 is defined as a padding entry.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>EndSi35</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="HandleNotExistingSi35">
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="98" Param0="u16ObjectIndexInclOffset" Level="Output">The entry 0x{0:X4}.35 does not exists.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>EndSi35</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CallSi35CheckEntryDescription">
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"online"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>35</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>"RF Output Frequency 2"</Parameter>
						<Parameter>7</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>null</Parameter>
						<Parameter>T</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>32</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>true</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="EndSi35"></TestStep>
				<TestStep Name="StartSi36">
					<Description Id="99" Level="Output">Start validate SubIndex36</Description>
					<WriteLine Id="100" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : Subindex '0x{0:X}.36'</WriteLine>
				</TestStep>
				<TestStep Name="SetSi36RequiredLevel">
					<SetVariable Target="bObjectOrEntryRequiredLevel">1</SetVariable>
					<WriteLine Id="101" Param0="u16ObjectIndexInclOffset" Level="Verbose">0x{0:X4}.36 'Gamma Real 2' may be available</WriteLine>
				</TestStep>
				<TestStep Name="CheckIfSi36Exists">
					<GetObjectDescription SourceDictionary="odDeviceObjectdictionary" Index="u16ObjectIndexInclOffset" SubIndex="36">
						<Type>u16DataType</Type>
					</GetObjectDescription>
					<GotoOnFailure>HandleNotExistingSi36</GotoOnFailure>
				</TestStep>
				<TestStep>
					<Compare>
						<NotEqual>
							<Value1>u16DataType</Value1>
							<Value2>0</Value2>
							<GotoStep>CallSi36CheckEntryDescription</GotoStep>
						</NotEqual>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="102" Param0="u16ObjectIndexInclOffset" Level="Verbose">The entry 0x{0:X4}.36 is defined as a padding entry.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>EndSi36</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="HandleNotExistingSi36">
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="103" Param0="u16ObjectIndexInclOffset" Level="Output">The entry 0x{0:X4}.36 does not exists.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>EndSi36</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CallSi36CheckEntryDescription">
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"online"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>36</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>"Gamma Real 2"</Parameter>
						<Parameter>8</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>null</Parameter>
						<Parameter>T</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>32</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>true</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="EndSi36"></TestStep>
				<TestStep Name="StartSi37">
					<Description Id="104" Level="Output">Start validate SubIndex37</Description>
					<WriteLine Id="105" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : Subindex '0x{0:X}.37'</WriteLine>
				</TestStep>
				<TestStep Name="SetSi37RequiredLevel">
					<SetVariable Target="bObjectOrEntryRequiredLevel">1</SetVariable>
					<WriteLine Id="106" Param0="u16ObjectIndexInclOffset" Level="Verbose">0x{0:X4}.37 'Gamma Imaginary 2' may be available</WriteLine>
				</TestStep>
				<TestStep Name="CheckIfSi37Exists">
					<GetObjectDescription SourceDictionary="odDeviceObjectdictionary" Index="u16ObjectIndexInclOffset" SubIndex="37">
						<Type>u16DataType</Type>
					</GetObjectDescription>
					<GotoOnFailure>HandleNotExistingSi37</GotoOnFailure>
				</TestStep>
				<TestStep>
					<Compare>
						<NotEqual>
							<Value1>u16DataType</Value1>
							<Value2>0</Value2>
							<GotoStep>CallSi37CheckEntryDescription</GotoStep>
						</NotEqual>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="107" Param0="u16ObjectIndexInclOffset" Level="Verbose">The entry 0x{0:X4}.37 is defined as a padding entry.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>EndSi37</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="HandleNotExistingSi37">
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="108" Param0="u16ObjectIndexInclOffset" Level="Output">The entry 0x{0:X4}.37 does not exists.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>EndSi37</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CallSi37CheckEntryDescription">
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"online"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>37</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>"Gamma Imaginary 2"</Parameter>
						<Parameter>8</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>null</Parameter>
						<Parameter>T</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>32</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>true</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="EndSi37"></TestStep>
				<TestStep Name="StartSi38">
					<Description Id="109" Level="Output">Start validate SubIndex38</Description>
					<WriteLine Id="110" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : Subindex '0x{0:X}.38'</WriteLine>
				</TestStep>
				<TestStep Name="SetSi38RequiredLevel">
					<SetVariable Target="bObjectOrEntryRequiredLevel">1</SetVariable>
					<WriteLine Id="111" Param0="u16ObjectIndexInclOffset" Level="Verbose">0x{0:X4}.38 'Voltage Real 2' may be available</WriteLine>
				</TestStep>
				<TestStep Name="CheckIfSi38Exists">
					<GetObjectDescription SourceDictionary="odDeviceObjectdictionary" Index="u16ObjectIndexInclOffset" SubIndex="38">
						<Type>u16DataType</Type>
					</GetObjectDescription>
					<GotoOnFailure>HandleNotExistingSi38</GotoOnFailure>
				</TestStep>
				<TestStep>
					<Compare>
						<NotEqual>
							<Value1>u16DataType</Value1>
							<Value2>0</Value2>
							<GotoStep>CallSi38CheckEntryDescription</GotoStep>
						</NotEqual>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="112" Param0="u16ObjectIndexInclOffset" Level="Verbose">The entry 0x{0:X4}.38 is defined as a padding entry.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>EndSi38</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="HandleNotExistingSi38">
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="113" Param0="u16ObjectIndexInclOffset" Level="Output">The entry 0x{0:X4}.38 does not exists.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>EndSi38</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CallSi38CheckEntryDescription">
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"online"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>38</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>"Voltage Real 2"</Parameter>
						<Parameter>8</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>null</Parameter>
						<Parameter>T</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>32</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>true</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="EndSi38"></TestStep>
				<TestStep Name="StartSi39">
					<Description Id="114" Level="Output">Start validate SubIndex39</Description>
					<WriteLine Id="115" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : Subindex '0x{0:X}.39'</WriteLine>
				</TestStep>
				<TestStep Name="SetSi39RequiredLevel">
					<SetVariable Target="bObjectOrEntryRequiredLevel">1</SetVariable>
					<WriteLine Id="116" Param0="u16ObjectIndexInclOffset" Level="Verbose">0x{0:X4}.39 'Voltage Imaginary 2' may be available</WriteLine>
				</TestStep>
				<TestStep Name="CheckIfSi39Exists">
					<GetObjectDescription SourceDictionary="odDeviceObjectdictionary" Index="u16ObjectIndexInclOffset" SubIndex="39">
						<Type>u16DataType</Type>
					</GetObjectDescription>
					<GotoOnFailure>HandleNotExistingSi39</GotoOnFailure>
				</TestStep>
				<TestStep>
					<Compare>
						<NotEqual>
							<Value1>u16DataType</Value1>
							<Value2>0</Value2>
							<GotoStep>CallSi39CheckEntryDescription</GotoStep>
						</NotEqual>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="117" Param0="u16ObjectIndexInclOffset" Level="Verbose">The entry 0x{0:X4}.39 is defined as a padding entry.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>EndSi39</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="HandleNotExistingSi39">
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="118" Param0="u16ObjectIndexInclOffset" Level="Output">The entry 0x{0:X4}.39 does not exists.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>EndSi39</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CallSi39CheckEntryDescription">
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"online"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>39</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>"Voltage Imaginary 2"</Parameter>
						<Parameter>8</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>null</Parameter>
						<Parameter>T</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>32</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>true</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="EndSi39"></TestStep>
				<TestStep Name="StartSi40">
					<Description Id="119" Level="Output">Start validate SubIndex40</Description>
					<WriteLine Id="120" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : Subindex '0x{0:X}.40'</WriteLine>
				</TestStep>
				<TestStep Name="SetSi40RequiredLevel">
					<SetVariable Target="bObjectOrEntryRequiredLevel">1</SetVariable>
					<WriteLine Id="121" Param0="u16ObjectIndexInclOffset" Level="Verbose">0x{0:X4}.40 'Current Real 2' may be available</WriteLine>
				</TestStep>
				<TestStep Name="CheckIfSi40Exists">
					<GetObjectDescription SourceDictionary="odDeviceObjectdictionary" Index="u16ObjectIndexInclOffset" SubIndex="40">
						<Type>u16DataType</Type>
					</GetObjectDescription>
					<GotoOnFailure>HandleNotExistingSi40</GotoOnFailure>
				</TestStep>
				<TestStep>
					<Compare>
						<NotEqual>
							<Value1>u16DataType</Value1>
							<Value2>0</Value2>
							<GotoStep>CallSi40CheckEntryDescription</GotoStep>
						</NotEqual>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="122" Param0="u16ObjectIndexInclOffset" Level="Verbose">The entry 0x{0:X4}.40 is defined as a padding entry.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>EndSi40</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="HandleNotExistingSi40">
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="123" Param0="u16ObjectIndexInclOffset" Level="Output">The entry 0x{0:X4}.40 does not exists.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>EndSi40</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CallSi40CheckEntryDescription">
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"online"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>40</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>"Current Real 2"</Parameter>
						<Parameter>8</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>null</Parameter>
						<Parameter>T</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>32</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>true</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="EndSi40"></TestStep>
				<TestStep Name="StartSi41">
					<Description Id="124" Level="Output">Start validate SubIndex41</Description>
					<WriteLine Id="125" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : Subindex '0x{0:X}.41'</WriteLine>
				</TestStep>
				<TestStep Name="SetSi41RequiredLevel">
					<SetVariable Target="bObjectOrEntryRequiredLevel">1</SetVariable>
					<WriteLine Id="126" Param0="u16ObjectIndexInclOffset" Level="Verbose">0x{0:X4}.41 'Current Imaginary 2' may be available</WriteLine>
				</TestStep>
				<TestStep Name="CheckIfSi41Exists">
					<GetObjectDescription SourceDictionary="odDeviceObjectdictionary" Index="u16ObjectIndexInclOffset" SubIndex="41">
						<Type>u16DataType</Type>
					</GetObjectDescription>
					<GotoOnFailure>HandleNotExistingSi41</GotoOnFailure>
				</TestStep>
				<TestStep>
					<Compare>
						<NotEqual>
							<Value1>u16DataType</Value1>
							<Value2>0</Value2>
							<GotoStep>CallSi41CheckEntryDescription</GotoStep>
						</NotEqual>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="127" Param0="u16ObjectIndexInclOffset" Level="Verbose">The entry 0x{0:X4}.41 is defined as a padding entry.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>EndSi41</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="HandleNotExistingSi41">
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="128" Param0="u16ObjectIndexInclOffset" Level="Output">The entry 0x{0:X4}.41 does not exists.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>EndSi41</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CallSi41CheckEntryDescription">
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"online"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>41</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>"Current Imaginary 2"</Parameter>
						<Parameter>8</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>null</Parameter>
						<Parameter>T</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>32</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>true</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="EndSi41"></TestStep>
				<TestStep Name="CheckReservedEntryRange_42_to_255">
					<Description Id="129" Level="Output">Start check reserved entry range 42 to 255</Description>
					<CallTestFunction Name="CheckReservedEntryRange">
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>42</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>odDeviceObjectdictionary</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="ProfileLoopEnd">
					<Compare>
						<Equal>
							<Value1>bAtLeastOneModuleMatch</Value1>
							<Value2>false</Value2>
							<GotoStep>HandleAbortTestCaseOnFirstError</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="HandleAbortTestCaseOnFirstError">
					<Compare>
						<Equal>
							<Value1>bAbortTestCaseOnFirstError</Value1>
							<Value2>false</Value2>
							<GotoStep>ProfileLoopIncrement</GotoStep>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>strResult</Value1>
							<Value2>EmptyString</Value2>
							<GotoStep>ProfileLoopIncrement</GotoStep>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="130" Level="Output">Object verification for all following modules abort because an error was already detected for the current module.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>END</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="ProfileLoopIncrement">
					<SetVariable Target="u32ProfileCounter">u32ProfileCounter + 1</SetVariable>
					<Compare>
						<Greater>
							<Value1>u32CurrentProfilesLength</Value1>
							<Value2>u32ProfileCounter</Value2>
							<GotoStep>ProfileLoopStart</GotoStep>
						</Greater>
					</Compare>
				</TestStep>
				<TestStep Name="END">
					<Compare>
						<NotEqual>
							<Value1>bAtLeastOneModuleMatch</Value1>
							<Value2>true</Value2>
							<SkipCase Id="131">SKIP TEST(no module/channel supports the current profile)</SkipCase>
						</NotEqual>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bDEBUG</Value1>
							<Value2>true</Value2>
							<WriteLine Id="132" Param0="strResult" Level="Verbose">DEBUG | Result : '{0}'.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>strResult</Value1>
							<Value2>EmptyString</Value2>
							<ReturnSuccess Id="133">Test succeed</ReturnSuccess>
						</Equal>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>strResult</Value1>
							<Value2>EmptyString</Value2>
							<RaiseError Id="134"></RaiseError>
						</NotEqual>
					</Compare>
				</TestStep>
			</TestCase>
			<TestCase Name="offline | 0x600A (Arc Counters)" CaseId="21">
				<Description>
					<PreCondition>- The device profile is 5003
- The module profile is 2011
- The submodule profile is 0</PreCondition>
					<Action>- Iterate over all offline defined modules/channels and if the PreCondition matches the following operations are done:
- Get the offline description of object 0x600A(+module specific offset) 'Arc Counters' and all entries
 Check:
    (Name)
    BitSize
    DataType
    Rx / Tx mappable
    Default Data
    MinData
    Flags       </Action>
					<PostCondition>Error if
- mandatory object / entry is not defined
- an optional object exists and the entries are invalid
- Object / entry description does not match with the specification</PostCondition>
					<ProposalForSolution>- Define the missing objects
- correct object / entry description</ProposalForSolution>
					<References>
						<Reference Specification="ETG.5003.2011"></Reference>
					</References>
					<Mandatory>true</Mandatory>
				</Description>
				<TestStep Name="InitResult">
					<SetVariable Target="strResult">EmptyString</SetVariable>
				</TestStep>
				<TestStep Name="CheckIfOdAvailable">
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Mailbox</Value1>
							<Value2>false</Value2>
							<SkipCase Id="1">DuT does not support mailbox.</SkipCase>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Mailbox.CoE</Value1>
							<Value2>false</Value2>
							<SkipCase Id="2">DuT does not support CoE.</SkipCase>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep>
					<GetObjectDictionary Target="odDeviceObjectdictionary">
						<DictionaryType>Offline</DictionaryType>
					</GetObjectDictionary>
					<SkipOnFailure Id="3">No offline object dictionary defined.</SkipOnFailure>
				</TestStep>
				<TestStep>
					<GetObjectList Count="u32Tmp" Target="odDeviceObjectdictionaryList" SourceDict="odDeviceObjectdictionary"></GetObjectList>
					<Compare>
						<Equal>
							<Value1>u32Tmp</Value1>
							<Value2>0</Value2>
							<SkipCase Id="4">No offline object dictionary defined.</SkipCase>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="InitAtLeastOneProfileMatch">
					<SetVariable Target="bAtLeastOneModuleMatch">false</SetVariable>
				</TestStep>
				<TestStep Name="GetCurrentProfileList">
					<SizeOf UInt32Var="u32Tmp">arrOfflineProfiles</SizeOf>
					<Compare>
						<Equal>
							<Value1>u32Tmp</Value1>
							<Value2>0</Value2>
							<CallTestFunction Name="GetCurrentProfileList">
								<Parameter>"offline"</Parameter>
								<Parameter>"SafeOP"</Parameter>
								<OutParameter>arrOfflineProfiles</OutParameter>
							</CallTestFunction>
						</Equal>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>u32Tmp</Value1>
							<Value2>0</Value2>
							<WriteLine Id="5" Param0="arrOfflineProfiles" Level="Verbose">Use previously created profile list ({0})</WriteLine>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep>
					<SizeOf UInt32Var="u32Tmp">arrOfflineProfiles</SizeOf>
				</TestStep>
				<TestStep>
					<InitArray TargetArray="arrCurrentProfiles" Length="u32Tmp"></InitArray>
				</TestStep>
				<TestStep>
					<CopyArray>
						<SourceArray>arrOfflineProfiles</SourceArray>
						<DestinationArray>arrCurrentProfiles</DestinationArray>
						<Length>u32Tmp</Length>
					</CopyArray>
				</TestStep>
				<TestStep Name="InitProfileLoopCounter">
					<SetVariable Target="u32ProfileCounter">0</SetVariable>
				</TestStep>
				<TestStep Name="GetProfileArrayLength">
					<SizeOf UInt32Var="u32CurrentProfilesLength">arrCurrentProfiles</SizeOf>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="6" Param0="u32CurrentProfilesLength" Level="Verbose">'{0}' Profile(s) defined offline.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>u32CurrentProfilesLength</Value1>
							<Value2>0</Value2>
							<SkipCase Id="7">Skip case | no profile defined.</SkipCase>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="ProfileLoopStart">
					<GetArrayItem SourceArray="arrCurrentProfiles" Target="strTmpString" Index="u32ProfileCounter"></GetArrayItem>
				</TestStep>
				<TestStep Name="CheckProfileInformationString">
					<Compare>
						<Equal>
							<Value1>strTmpString</Value1>
							<Value2>null</Value2>
							<RaiseError Id="8" Param0="u32ProfileCounter">Profile Info element [{0}] is null.</RaiseError>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>strTmpString</Value1>
							<Value2>EmptyString</Value2>
							<RaiseError Id="9" Param0="u32ProfileCounter">Profile Info element [{0}] is an empty string.</RaiseError>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="GetDeviceProfile">
					<CallTestFunction Name="GetDeviceProfile">
						<Parameter>strTmpString</Parameter>
						<OutParameter>uint16CurDeviceProfile</OutParameter>
					</CallTestFunction>
				</TestStep>
				<TestStep Name="GetModuleProfile">
					<CallTestFunction Name="GetModuleProfile">
						<Parameter>strTmpString</Parameter>
						<OutParameter>uint16CurModuleProfile</OutParameter>
					</CallTestFunction>
				</TestStep>
				<TestStep Name="GetSubModuleProfile">
					<CallTestFunction Name="GetSubModuleProfile">
						<Parameter>strTmpString</Parameter>
						<OutParameter>uint16CurSubModuleProfile</OutParameter>
					</CallTestFunction>
				</TestStep>
				<TestStep Name="DumpProfileInfo">
					<Description Id="10" Param0="uint16CurDeviceProfile" Param1="uint16CurModuleProfile" Param2="uint16CurSubModuleProfile" Param3="u32ProfileCounter" Level="Output">Module[{3}] : DeviceProfile '{0}' ; ModuleProfile '{1}' ; SubModuleProfile '{2}'</Description>
					<Compare>
						<Equal>
							<Value1>bIgnoreProfileID</Value1>
							<Value2>true</Value2>
							<GotoStep>IndicateThatAtleastOneModuleMatch</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CompareDeviceProfile">
					<Compare>
						<NotEqual>
							<Value1>uint16CurDeviceProfile</Value1>
							<Value2>5003</Value2>
							<WriteLine Id="11" Param0="uint16CurDeviceProfile" Level="Output">Skip Profile  (Test Device Profile '5003' != Cur Device Profile '{0}')</WriteLine>
						</NotEqual>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>uint16CurDeviceProfile</Value1>
							<Value2>5003</Value2>
							<GotoStep>ProfileLoopEnd</GotoStep>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep Name="CompareModuleProfile">
					<Compare>
						<NotEqual>
							<Value1>uint16CurModuleProfile</Value1>
							<Value2>2011</Value2>
							<WriteLine Id="12" Param0="uint16CurModuleProfile" Level="Output">Skip Profile  (Test Module Profile '2011' != Cur Module Profile '{0}')</WriteLine>
						</NotEqual>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>uint16CurModuleProfile</Value1>
							<Value2>2011</Value2>
							<GotoStep>ProfileLoopEnd</GotoStep>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep Name="CompareSubModuleProfile">
					<Compare>
						<NotEqual>
							<Value1>uint16CurSubModuleProfile</Value1>
							<Value2>0</Value2>
							<WriteLine Id="13" Param0="uint16CurSubModuleProfile" Level="Output">Skip Profile  (Test SubModule Profile '0' != Cur SubModule Profile '{0}')</WriteLine>
						</NotEqual>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>uint16CurSubModuleProfile</Value1>
							<Value2>0</Value2>
							<GotoStep>ProfileLoopEnd</GotoStep>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep Name="IndicateThatAtleastOneModuleMatch">
					<SetVariable Target="bAtLeastOneModuleMatch">true</SetVariable>
				</TestStep>
				<TestStep Name="GetObjectIndexInclOffset">
					<SetVariable Target="u16ObjectIndexInclOffset">#x600A + (u32ProfileCounter * #x10)</SetVariable>
					<WriteLine Id="14" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : ObjectIndex '0x{0:X}'</WriteLine>
				</TestStep>
				<TestStep Name="LoadDeviceObjectDictionary">
					<Description Id="15" Level="Verbose">Load 'offline' object dictionary for testing.</Description>
					<GetObjectDictionary Target="odDeviceObjectdictionary">
						<DictionaryType>Offline</DictionaryType>
					</GetObjectDictionary>
					<RaiseErrorOnFailure Id="16">VerifyObject : failed to load offline object dictionary.</RaiseErrorOnFailure>
				</TestStep>
				<TestStep Name="SetObjectRequiredLevel">
					<SetVariable Target="bObjectOrEntryRequiredLevel">1</SetVariable>
					<WriteLine Id="17" Param0="u16ObjectIndexInclOffset" Level="Verbose">0x{0:X4} 'Arc Counters' may be available</WriteLine>
				</TestStep>
				<TestStep Name="CheckIfObjectExists">
					<GetObjectDescription SourceDictionary="odDeviceObjectdictionary" Index="u16ObjectIndexInclOffset" SubIndex="-1"></GetObjectDescription>
					<GotoOnSuccess>CallCheckObjectDescription</GotoOnSuccess>
				</TestStep>
				<TestStep Name="HandleNotExistingObject">
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>2</Value2>
							<WriteLine Id="18" Param0="u16ObjectIndexInclOffset" Level="Warning">The object 0x{0:X4} 'Arc Counters' does not exists.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>1</Value2>
							<WriteLine Id="19" Param0="u16ObjectIndexInclOffset" Level="Output">The object 0x{0:X4} 'Arc Counters' does not exists.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>ProfileLoopEnd</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CallCheckObjectDescription">
					<Description Id="20" Param0="u16ObjectIndexInclOffset" Level="Output">Verify the object description 0x{0:X4} 'Arc Counters'.</Description>
					<CallTestFunction Name="CheckObjectDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"offline"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>"Arc Counters"</Parameter>
						<Parameter>null</Parameter>
						<Parameter>9</Parameter>
						<Parameter>-1</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<GotoStep>ProfileLoopEnd</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="InitEntryBittOffset">
					<SetVariable Target="i32CurrentBitOffset">0</SetVariable>
				</TestStep>
				<TestStep Name="StartSi0">
					<Description Id="21" Level="Output">Start validate SubIndex0</Description>
					<WriteLine Id="22" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : Subindex '0x{0:X}.0'</WriteLine>
				</TestStep>
				<TestStep Name="CallSi0CheckEntryDescription">
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"offline"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>0</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>null</Parameter>
						<Parameter>5</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>null</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>null</Parameter>
						<Parameter>null</Parameter>
						<Parameter>null</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>8</Parameter>
						<Parameter>i32CurrentBitOffset</Parameter>
						<Parameter>true</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="EndSi0">
					<SetVariable Target="i32CurrentBitOffset">16</SetVariable>
				</TestStep>
				<TestStep Name="StartSi1">
					<Description Id="23" Level="Output">Start validate SubIndex1</Description>
					<WriteLine Id="24" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : Subindex '0x{0:X}.1'</WriteLine>
				</TestStep>
				<TestStep Name="SetSi1RequiredLevel">
					<SetVariable Target="bObjectOrEntryRequiredLevel">1</SetVariable>
					<WriteLine Id="25" Param0="u16ObjectIndexInclOffset" Level="Verbose">0x{0:X4}.1 'Arc Count Since RF ON' may be available</WriteLine>
				</TestStep>
				<TestStep Name="CheckIfSi1Exists">
					<GetObjectDescription SourceDictionary="odDeviceObjectdictionary" Index="u16ObjectIndexInclOffset" SubIndex="1">
						<Type>u16DataType</Type>
					</GetObjectDescription>
					<GotoOnFailure>HandleNotExistingSi1</GotoOnFailure>
				</TestStep>
				<TestStep>
					<Compare>
						<NotEqual>
							<Value1>u16DataType</Value1>
							<Value2>0</Value2>
							<GotoStep>CallSi1CheckEntryDescription</GotoStep>
						</NotEqual>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="26" Param0="u16ObjectIndexInclOffset" Level="Verbose">The entry 0x{0:X4}.1 is defined as a padding entry.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>EndSi1</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="HandleNotExistingSi1">
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="27" Param0="u16ObjectIndexInclOffset" Level="Output">The entry 0x{0:X4}.1 does not exists.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>EndSi1</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CallSi1CheckEntryDescription">
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"offline"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>1</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>"Arc Count Since RF ON"</Parameter>
						<Parameter>7</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>null</Parameter>
						<Parameter>T</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>32</Parameter>
						<Parameter>i32CurrentBitOffset</Parameter>
						<Parameter>true</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="EndSi1">
					<SetVariable Target="i32CurrentBitOffset">-1</SetVariable>
				</TestStep>
				<TestStep Name="CheckReservedEntryRange_2_to_255">
					<Description Id="28" Level="Output">Start check reserved entry range 2 to 255</Description>
					<CallTestFunction Name="CheckReservedEntryRange">
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>2</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>odDeviceObjectdictionary</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="ProfileLoopEnd">
					<Compare>
						<Equal>
							<Value1>bAtLeastOneModuleMatch</Value1>
							<Value2>false</Value2>
							<GotoStep>HandleAbortTestCaseOnFirstError</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="HandleAbortTestCaseOnFirstError">
					<Compare>
						<Equal>
							<Value1>bAbortTestCaseOnFirstError</Value1>
							<Value2>false</Value2>
							<GotoStep>ProfileLoopIncrement</GotoStep>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>strResult</Value1>
							<Value2>EmptyString</Value2>
							<GotoStep>ProfileLoopIncrement</GotoStep>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="29" Level="Output">Object verification for all following modules abort because an error was already detected for the current module.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>END</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="ProfileLoopIncrement">
					<SetVariable Target="u32ProfileCounter">u32ProfileCounter + 1</SetVariable>
					<Compare>
						<Greater>
							<Value1>u32CurrentProfilesLength</Value1>
							<Value2>u32ProfileCounter</Value2>
							<GotoStep>ProfileLoopStart</GotoStep>
						</Greater>
					</Compare>
				</TestStep>
				<TestStep Name="END">
					<Compare>
						<NotEqual>
							<Value1>bAtLeastOneModuleMatch</Value1>
							<Value2>true</Value2>
							<SkipCase Id="30">SKIP TEST(no module/channel supports the current profile)</SkipCase>
						</NotEqual>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bDEBUG</Value1>
							<Value2>true</Value2>
							<WriteLine Id="31" Param0="strResult" Level="Verbose">DEBUG | Result : '{0}'.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>strResult</Value1>
							<Value2>EmptyString</Value2>
							<ReturnSuccess Id="32">Test succeed</ReturnSuccess>
						</Equal>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>strResult</Value1>
							<Value2>EmptyString</Value2>
							<RaiseError Id="33"></RaiseError>
						</NotEqual>
					</Compare>
				</TestStep>
			</TestCase>
			<TestCase Name="online | 0x600A (Arc Counters)" CaseId="22">
				<Description>
					<PreCondition>- The device profile is 5003
- The module profile is 2011
- The submodule profile is 0</PreCondition>
					<Action>- Iterate over all online defined modules/channels and if the PreCondition matches the following operations are done:
- Get the online description of object 0x600A(+module specific offset) 'Arc Counters' and all entries
 Check:
    (Name)
    BitSize
    DataType
    Rx / Tx mappable
    Default Data
    MinData
    Flags       </Action>
					<PostCondition>Error if
- mandatory object / entry is not defined
- an optional object exists and the entries are invalid
- Object / entry description does not match with the specification</PostCondition>
					<ProposalForSolution>- Define the missing objects
- correct object / entry description</ProposalForSolution>
					<References>
						<Reference Specification="ETG.5003.2011"></Reference>
					</References>
					<Mandatory>true</Mandatory>
				</Description>
				<TestStep Name="InitResult">
					<SetVariable Target="strResult">EmptyString</SetVariable>
				</TestStep>
				<TestStep Name="CheckIfOdAvailable">
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Mailbox</Value1>
							<Value2>false</Value2>
							<SkipCase Id="1">DuT does not support mailbox.</SkipCase>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Mailbox.CoE</Value1>
							<Value2>false</Value2>
							<SkipCase Id="2">DuT does not support CoE.</SkipCase>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Mailbox.CoE.SdoInfo</Value1>
							<Value2>false</Value2>
							<SkipCase Id="3">DuT does not support SDO Info.</SkipCase>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="InitAtLeastOneProfileMatch">
					<SetVariable Target="bAtLeastOneModuleMatch">false</SetVariable>
				</TestStep>
				<TestStep Name="GetCurrentProfileList">
					<SizeOf UInt32Var="u32Tmp">arrOnlineProfiles</SizeOf>
					<Compare>
						<Equal>
							<Value1>u32Tmp</Value1>
							<Value2>0</Value2>
							<CallTestFunction Name="GetCurrentProfileList">
								<Parameter>"online"</Parameter>
								<Parameter>"SafeOP"</Parameter>
								<OutParameter>arrOnlineProfiles</OutParameter>
							</CallTestFunction>
						</Equal>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>u32Tmp</Value1>
							<Value2>0</Value2>
							<WriteLine Id="4" Param0="arrOnlineProfiles" Level="Verbose">Use previously created profile list ({0})</WriteLine>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep>
					<SizeOf UInt32Var="u32Tmp">arrOnlineProfiles</SizeOf>
				</TestStep>
				<TestStep>
					<InitArray TargetArray="arrCurrentProfiles" Length="u32Tmp"></InitArray>
				</TestStep>
				<TestStep>
					<CopyArray>
						<SourceArray>arrOnlineProfiles</SourceArray>
						<DestinationArray>arrCurrentProfiles</DestinationArray>
						<Length>u32Tmp</Length>
					</CopyArray>
				</TestStep>
				<TestStep Name="InitProfileLoopCounter">
					<SetVariable Target="u32ProfileCounter">0</SetVariable>
				</TestStep>
				<TestStep Name="GetProfileArrayLength">
					<SizeOf UInt32Var="u32CurrentProfilesLength">arrCurrentProfiles</SizeOf>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="5" Param0="u32CurrentProfilesLength" Level="Verbose">'{0}' Profile(s) defined online.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>u32CurrentProfilesLength</Value1>
							<Value2>0</Value2>
							<SkipCase Id="6">Skip case | no profile defined.</SkipCase>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="ProfileLoopStart">
					<GetArrayItem SourceArray="arrCurrentProfiles" Target="strTmpString" Index="u32ProfileCounter"></GetArrayItem>
				</TestStep>
				<TestStep Name="CheckProfileInformationString">
					<Compare>
						<Equal>
							<Value1>strTmpString</Value1>
							<Value2>null</Value2>
							<RaiseError Id="7" Param0="u32ProfileCounter">Profile Info element [{0}] is null.</RaiseError>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>strTmpString</Value1>
							<Value2>EmptyString</Value2>
							<RaiseError Id="8" Param0="u32ProfileCounter">Profile Info element [{0}] is an empty string.</RaiseError>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="GetDeviceProfile">
					<CallTestFunction Name="GetDeviceProfile">
						<Parameter>strTmpString</Parameter>
						<OutParameter>uint16CurDeviceProfile</OutParameter>
					</CallTestFunction>
				</TestStep>
				<TestStep Name="GetModuleProfile">
					<CallTestFunction Name="GetModuleProfile">
						<Parameter>strTmpString</Parameter>
						<OutParameter>uint16CurModuleProfile</OutParameter>
					</CallTestFunction>
				</TestStep>
				<TestStep Name="GetSubModuleProfile">
					<CallTestFunction Name="GetSubModuleProfile">
						<Parameter>strTmpString</Parameter>
						<OutParameter>uint16CurSubModuleProfile</OutParameter>
					</CallTestFunction>
				</TestStep>
				<TestStep Name="DumpProfileInfo">
					<Description Id="9" Param0="uint16CurDeviceProfile" Param1="uint16CurModuleProfile" Param2="uint16CurSubModuleProfile" Param3="u32ProfileCounter" Level="Output">Module[{3}] : DeviceProfile '{0}' ; ModuleProfile '{1}' ; SubModuleProfile '{2}'</Description>
					<Compare>
						<Equal>
							<Value1>bIgnoreProfileID</Value1>
							<Value2>true</Value2>
							<GotoStep>IndicateThatAtleastOneModuleMatch</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CompareDeviceProfile">
					<Compare>
						<NotEqual>
							<Value1>uint16CurDeviceProfile</Value1>
							<Value2>5003</Value2>
							<WriteLine Id="10" Param0="uint16CurDeviceProfile" Level="Output">Skip Profile  (Test Device Profile '5003' != Cur Device Profile '{0}')</WriteLine>
						</NotEqual>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>uint16CurDeviceProfile</Value1>
							<Value2>5003</Value2>
							<GotoStep>ProfileLoopEnd</GotoStep>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep Name="CompareModuleProfile">
					<Compare>
						<NotEqual>
							<Value1>uint16CurModuleProfile</Value1>
							<Value2>2011</Value2>
							<WriteLine Id="11" Param0="uint16CurModuleProfile" Level="Output">Skip Profile  (Test Module Profile '2011' != Cur Module Profile '{0}')</WriteLine>
						</NotEqual>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>uint16CurModuleProfile</Value1>
							<Value2>2011</Value2>
							<GotoStep>ProfileLoopEnd</GotoStep>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep Name="CompareSubModuleProfile">
					<Compare>
						<NotEqual>
							<Value1>uint16CurSubModuleProfile</Value1>
							<Value2>0</Value2>
							<WriteLine Id="12" Param0="uint16CurSubModuleProfile" Level="Output">Skip Profile  (Test SubModule Profile '0' != Cur SubModule Profile '{0}')</WriteLine>
						</NotEqual>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>uint16CurSubModuleProfile</Value1>
							<Value2>0</Value2>
							<GotoStep>ProfileLoopEnd</GotoStep>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep Name="IndicateThatAtleastOneModuleMatch">
					<SetVariable Target="bAtLeastOneModuleMatch">true</SetVariable>
				</TestStep>
				<TestStep Name="GetObjectIndexInclOffset">
					<SetVariable Target="u16ObjectIndexInclOffset">#x600A + (u32ProfileCounter * #x10)</SetVariable>
					<WriteLine Id="13" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : ObjectIndex '0x{0:X}'</WriteLine>
				</TestStep>
				<TestStep Name="LoadDeviceObjectDictionary">
					<Description Id="14" Level="Verbose">Load 'online' object dictionary for testing.</Description>
					<GetObjectDictionary Target="odDeviceObjectdictionary">
						<DictionaryType>Online</DictionaryType>
					</GetObjectDictionary>
					<RaiseErrorOnFailure Id="15">VerifyObject : failed to load online object dictionary.</RaiseErrorOnFailure>
				</TestStep>
				<TestStep Name="SetObjectRequiredLevel">
					<SetVariable Target="bObjectOrEntryRequiredLevel">1</SetVariable>
					<WriteLine Id="16" Param0="u16ObjectIndexInclOffset" Level="Verbose">0x{0:X4} 'Arc Counters' may be available</WriteLine>
				</TestStep>
				<TestStep Name="CheckIfObjectExists">
					<GetObjectDescription SourceDictionary="odDeviceObjectdictionary" Index="u16ObjectIndexInclOffset" SubIndex="-1"></GetObjectDescription>
					<GotoOnSuccess>CallCheckObjectDescription</GotoOnSuccess>
				</TestStep>
				<TestStep Name="HandleNotExistingObject">
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>2</Value2>
							<WriteLine Id="17" Param0="u16ObjectIndexInclOffset" Level="Warning">The object 0x{0:X4} 'Arc Counters' does not exists.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>1</Value2>
							<WriteLine Id="18" Param0="u16ObjectIndexInclOffset" Level="Output">The object 0x{0:X4} 'Arc Counters' does not exists.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>ProfileLoopEnd</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CallCheckObjectDescription">
					<Description Id="19" Param0="u16ObjectIndexInclOffset" Level="Output">Verify the object description 0x{0:X4} 'Arc Counters'.</Description>
					<CallTestFunction Name="CheckObjectDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"online"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>"Arc Counters"</Parameter>
						<Parameter>null</Parameter>
						<Parameter>9</Parameter>
						<Parameter>-1</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<GotoStep>ProfileLoopEnd</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="InitEntryBittOffset">
					<SetVariable Target="i32CurrentBitOffset">0</SetVariable>
				</TestStep>
				<TestStep Name="StartSi0">
					<Description Id="20" Level="Output">Start validate SubIndex0</Description>
					<WriteLine Id="21" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : Subindex '0x{0:X}.0'</WriteLine>
				</TestStep>
				<TestStep Name="CallSi0CheckEntryDescription">
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"online"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>0</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>null</Parameter>
						<Parameter>5</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>null</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>null</Parameter>
						<Parameter>null</Parameter>
						<Parameter>null</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>8</Parameter>
						<Parameter>i32CurrentBitOffset</Parameter>
						<Parameter>true</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="EndSi0">
					<SetVariable Target="i32CurrentBitOffset">16</SetVariable>
				</TestStep>
				<TestStep Name="StartSi1">
					<Description Id="22" Level="Output">Start validate SubIndex1</Description>
					<WriteLine Id="23" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : Subindex '0x{0:X}.1'</WriteLine>
				</TestStep>
				<TestStep Name="SetSi1RequiredLevel">
					<SetVariable Target="bObjectOrEntryRequiredLevel">1</SetVariable>
					<WriteLine Id="24" Param0="u16ObjectIndexInclOffset" Level="Verbose">0x{0:X4}.1 'Arc Count Since RF ON' may be available</WriteLine>
				</TestStep>
				<TestStep Name="CheckIfSi1Exists">
					<GetObjectDescription SourceDictionary="odDeviceObjectdictionary" Index="u16ObjectIndexInclOffset" SubIndex="1">
						<Type>u16DataType</Type>
					</GetObjectDescription>
					<GotoOnFailure>HandleNotExistingSi1</GotoOnFailure>
				</TestStep>
				<TestStep>
					<Compare>
						<NotEqual>
							<Value1>u16DataType</Value1>
							<Value2>0</Value2>
							<GotoStep>CallSi1CheckEntryDescription</GotoStep>
						</NotEqual>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="25" Param0="u16ObjectIndexInclOffset" Level="Verbose">The entry 0x{0:X4}.1 is defined as a padding entry.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>EndSi1</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="HandleNotExistingSi1">
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="26" Param0="u16ObjectIndexInclOffset" Level="Output">The entry 0x{0:X4}.1 does not exists.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>EndSi1</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CallSi1CheckEntryDescription">
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"online"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>1</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>"Arc Count Since RF ON"</Parameter>
						<Parameter>7</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>null</Parameter>
						<Parameter>T</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>32</Parameter>
						<Parameter>i32CurrentBitOffset</Parameter>
						<Parameter>true</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="EndSi1">
					<SetVariable Target="i32CurrentBitOffset">-1</SetVariable>
				</TestStep>
				<TestStep Name="CheckReservedEntryRange_2_to_255">
					<Description Id="27" Level="Output">Start check reserved entry range 2 to 255</Description>
					<CallTestFunction Name="CheckReservedEntryRange">
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>2</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>odDeviceObjectdictionary</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="ProfileLoopEnd">
					<Compare>
						<Equal>
							<Value1>bAtLeastOneModuleMatch</Value1>
							<Value2>false</Value2>
							<GotoStep>HandleAbortTestCaseOnFirstError</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="HandleAbortTestCaseOnFirstError">
					<Compare>
						<Equal>
							<Value1>bAbortTestCaseOnFirstError</Value1>
							<Value2>false</Value2>
							<GotoStep>ProfileLoopIncrement</GotoStep>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>strResult</Value1>
							<Value2>EmptyString</Value2>
							<GotoStep>ProfileLoopIncrement</GotoStep>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="28" Level="Output">Object verification for all following modules abort because an error was already detected for the current module.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>END</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="ProfileLoopIncrement">
					<SetVariable Target="u32ProfileCounter">u32ProfileCounter + 1</SetVariable>
					<Compare>
						<Greater>
							<Value1>u32CurrentProfilesLength</Value1>
							<Value2>u32ProfileCounter</Value2>
							<GotoStep>ProfileLoopStart</GotoStep>
						</Greater>
					</Compare>
				</TestStep>
				<TestStep Name="END">
					<Compare>
						<NotEqual>
							<Value1>bAtLeastOneModuleMatch</Value1>
							<Value2>true</Value2>
							<SkipCase Id="29">SKIP TEST(no module/channel supports the current profile)</SkipCase>
						</NotEqual>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bDEBUG</Value1>
							<Value2>true</Value2>
							<WriteLine Id="30" Param0="strResult" Level="Verbose">DEBUG | Result : '{0}'.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>strResult</Value1>
							<Value2>EmptyString</Value2>
							<ReturnSuccess Id="31">Test succeed</ReturnSuccess>
						</Equal>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>strResult</Value1>
							<Value2>EmptyString</Value2>
							<RaiseError Id="32"></RaiseError>
						</NotEqual>
					</Compare>
				</TestStep>
			</TestCase>
			<TestCase Name="offline | 0x600B (Actual frequency)" CaseId="23">
				<Description>
					<PreCondition>- The device profile is 5003
- The module profile is 2011
- The submodule profile is 0</PreCondition>
					<Action>- Iterate over all offline defined modules/channels and if the PreCondition matches the following operations are done:
- Get the offline description of object 0x600B(+module specific offset) 'Actual frequency' and all entries
 Check:
    (Name)
    BitSize
    DataType
    Rx / Tx mappable
    Default Data
    MinData
    Flags       </Action>
					<PostCondition>Error if
- mandatory object / entry is not defined
- an optional object exists and the entries are invalid
- Object / entry description does not match with the specification</PostCondition>
					<ProposalForSolution>- Define the missing objects
- correct object / entry description</ProposalForSolution>
					<References>
						<Reference Specification="ETG.5003.2011"></Reference>
					</References>
					<Mandatory>true</Mandatory>
				</Description>
				<TestStep Name="InitResult">
					<SetVariable Target="strResult">EmptyString</SetVariable>
				</TestStep>
				<TestStep Name="CheckIfOdAvailable">
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Mailbox</Value1>
							<Value2>false</Value2>
							<SkipCase Id="1">DuT does not support mailbox.</SkipCase>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Mailbox.CoE</Value1>
							<Value2>false</Value2>
							<SkipCase Id="2">DuT does not support CoE.</SkipCase>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep>
					<GetObjectDictionary Target="odDeviceObjectdictionary">
						<DictionaryType>Offline</DictionaryType>
					</GetObjectDictionary>
					<SkipOnFailure Id="3">No offline object dictionary defined.</SkipOnFailure>
				</TestStep>
				<TestStep>
					<GetObjectList Count="u32Tmp" Target="odDeviceObjectdictionaryList" SourceDict="odDeviceObjectdictionary"></GetObjectList>
					<Compare>
						<Equal>
							<Value1>u32Tmp</Value1>
							<Value2>0</Value2>
							<SkipCase Id="4">No offline object dictionary defined.</SkipCase>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="InitAtLeastOneProfileMatch">
					<SetVariable Target="bAtLeastOneModuleMatch">false</SetVariable>
				</TestStep>
				<TestStep Name="GetCurrentProfileList">
					<SizeOf UInt32Var="u32Tmp">arrOfflineProfiles</SizeOf>
					<Compare>
						<Equal>
							<Value1>u32Tmp</Value1>
							<Value2>0</Value2>
							<CallTestFunction Name="GetCurrentProfileList">
								<Parameter>"offline"</Parameter>
								<Parameter>"SafeOP"</Parameter>
								<OutParameter>arrOfflineProfiles</OutParameter>
							</CallTestFunction>
						</Equal>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>u32Tmp</Value1>
							<Value2>0</Value2>
							<WriteLine Id="5" Param0="arrOfflineProfiles" Level="Verbose">Use previously created profile list ({0})</WriteLine>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep>
					<SizeOf UInt32Var="u32Tmp">arrOfflineProfiles</SizeOf>
				</TestStep>
				<TestStep>
					<InitArray TargetArray="arrCurrentProfiles" Length="u32Tmp"></InitArray>
				</TestStep>
				<TestStep>
					<CopyArray>
						<SourceArray>arrOfflineProfiles</SourceArray>
						<DestinationArray>arrCurrentProfiles</DestinationArray>
						<Length>u32Tmp</Length>
					</CopyArray>
				</TestStep>
				<TestStep Name="InitProfileLoopCounter">
					<SetVariable Target="u32ProfileCounter">0</SetVariable>
				</TestStep>
				<TestStep Name="GetProfileArrayLength">
					<SizeOf UInt32Var="u32CurrentProfilesLength">arrCurrentProfiles</SizeOf>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="6" Param0="u32CurrentProfilesLength" Level="Verbose">'{0}' Profile(s) defined offline.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>u32CurrentProfilesLength</Value1>
							<Value2>0</Value2>
							<SkipCase Id="7">Skip case | no profile defined.</SkipCase>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="ProfileLoopStart">
					<GetArrayItem SourceArray="arrCurrentProfiles" Target="strTmpString" Index="u32ProfileCounter"></GetArrayItem>
				</TestStep>
				<TestStep Name="CheckProfileInformationString">
					<Compare>
						<Equal>
							<Value1>strTmpString</Value1>
							<Value2>null</Value2>
							<RaiseError Id="8" Param0="u32ProfileCounter">Profile Info element [{0}] is null.</RaiseError>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>strTmpString</Value1>
							<Value2>EmptyString</Value2>
							<RaiseError Id="9" Param0="u32ProfileCounter">Profile Info element [{0}] is an empty string.</RaiseError>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="GetDeviceProfile">
					<CallTestFunction Name="GetDeviceProfile">
						<Parameter>strTmpString</Parameter>
						<OutParameter>uint16CurDeviceProfile</OutParameter>
					</CallTestFunction>
				</TestStep>
				<TestStep Name="GetModuleProfile">
					<CallTestFunction Name="GetModuleProfile">
						<Parameter>strTmpString</Parameter>
						<OutParameter>uint16CurModuleProfile</OutParameter>
					</CallTestFunction>
				</TestStep>
				<TestStep Name="GetSubModuleProfile">
					<CallTestFunction Name="GetSubModuleProfile">
						<Parameter>strTmpString</Parameter>
						<OutParameter>uint16CurSubModuleProfile</OutParameter>
					</CallTestFunction>
				</TestStep>
				<TestStep Name="DumpProfileInfo">
					<Description Id="10" Param0="uint16CurDeviceProfile" Param1="uint16CurModuleProfile" Param2="uint16CurSubModuleProfile" Param3="u32ProfileCounter" Level="Output">Module[{3}] : DeviceProfile '{0}' ; ModuleProfile '{1}' ; SubModuleProfile '{2}'</Description>
					<Compare>
						<Equal>
							<Value1>bIgnoreProfileID</Value1>
							<Value2>true</Value2>
							<GotoStep>IndicateThatAtleastOneModuleMatch</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CompareDeviceProfile">
					<Compare>
						<NotEqual>
							<Value1>uint16CurDeviceProfile</Value1>
							<Value2>5003</Value2>
							<WriteLine Id="11" Param0="uint16CurDeviceProfile" Level="Output">Skip Profile  (Test Device Profile '5003' != Cur Device Profile '{0}')</WriteLine>
						</NotEqual>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>uint16CurDeviceProfile</Value1>
							<Value2>5003</Value2>
							<GotoStep>ProfileLoopEnd</GotoStep>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep Name="CompareModuleProfile">
					<Compare>
						<NotEqual>
							<Value1>uint16CurModuleProfile</Value1>
							<Value2>2011</Value2>
							<WriteLine Id="12" Param0="uint16CurModuleProfile" Level="Output">Skip Profile  (Test Module Profile '2011' != Cur Module Profile '{0}')</WriteLine>
						</NotEqual>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>uint16CurModuleProfile</Value1>
							<Value2>2011</Value2>
							<GotoStep>ProfileLoopEnd</GotoStep>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep Name="CompareSubModuleProfile">
					<Compare>
						<NotEqual>
							<Value1>uint16CurSubModuleProfile</Value1>
							<Value2>0</Value2>
							<WriteLine Id="13" Param0="uint16CurSubModuleProfile" Level="Output">Skip Profile  (Test SubModule Profile '0' != Cur SubModule Profile '{0}')</WriteLine>
						</NotEqual>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>uint16CurSubModuleProfile</Value1>
							<Value2>0</Value2>
							<GotoStep>ProfileLoopEnd</GotoStep>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep Name="IndicateThatAtleastOneModuleMatch">
					<SetVariable Target="bAtLeastOneModuleMatch">true</SetVariable>
				</TestStep>
				<TestStep Name="GetObjectIndexInclOffset">
					<SetVariable Target="u16ObjectIndexInclOffset">#x600B + (u32ProfileCounter * #x10)</SetVariable>
					<WriteLine Id="14" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : ObjectIndex '0x{0:X}'</WriteLine>
				</TestStep>
				<TestStep Name="LoadDeviceObjectDictionary">
					<Description Id="15" Level="Verbose">Load 'offline' object dictionary for testing.</Description>
					<GetObjectDictionary Target="odDeviceObjectdictionary">
						<DictionaryType>Offline</DictionaryType>
					</GetObjectDictionary>
					<RaiseErrorOnFailure Id="16">VerifyObject : failed to load offline object dictionary.</RaiseErrorOnFailure>
				</TestStep>
				<TestStep Name="SetObjectRequiredLevel">
					<SetVariable Target="bObjectOrEntryRequiredLevel">1</SetVariable>
					<WriteLine Id="17" Param0="u16ObjectIndexInclOffset" Level="Verbose">0x{0:X4} 'Actual frequency' may be available</WriteLine>
				</TestStep>
				<TestStep Name="CheckIfObjectExists">
					<GetObjectDescription SourceDictionary="odDeviceObjectdictionary" Index="u16ObjectIndexInclOffset" SubIndex="-1"></GetObjectDescription>
					<GotoOnSuccess>CallCheckObjectDescription</GotoOnSuccess>
				</TestStep>
				<TestStep Name="HandleNotExistingObject">
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>2</Value2>
							<WriteLine Id="18" Param0="u16ObjectIndexInclOffset" Level="Warning">The object 0x{0:X4} 'Actual frequency' does not exists.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>1</Value2>
							<WriteLine Id="19" Param0="u16ObjectIndexInclOffset" Level="Output">The object 0x{0:X4} 'Actual frequency' does not exists.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>ProfileLoopEnd</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CallCheckObjectDescription">
					<Description Id="20" Param0="u16ObjectIndexInclOffset" Level="Output">Verify the object description 0x{0:X4} 'Actual frequency'.</Description>
					<CallTestFunction Name="CheckObjectDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"offline"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>"Actual frequency"</Parameter>
						<Parameter>null</Parameter>
						<Parameter>9</Parameter>
						<Parameter>-1</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<GotoStep>ProfileLoopEnd</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="InitEntryBittOffset">
					<SetVariable Target="i32CurrentBitOffset">0</SetVariable>
				</TestStep>
				<TestStep Name="StartSi0">
					<Description Id="21" Level="Output">Start validate SubIndex0</Description>
					<WriteLine Id="22" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : Subindex '0x{0:X}.0'</WriteLine>
				</TestStep>
				<TestStep Name="CallSi0CheckEntryDescription">
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"offline"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>0</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>null</Parameter>
						<Parameter>5</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>null</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>null</Parameter>
						<Parameter>null</Parameter>
						<Parameter>null</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>8</Parameter>
						<Parameter>i32CurrentBitOffset</Parameter>
						<Parameter>true</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="EndSi0">
					<SetVariable Target="i32CurrentBitOffset">16</SetVariable>
				</TestStep>
				<TestStep Name="StartSi1">
					<Description Id="23" Level="Output">Start validate SubIndex1</Description>
					<WriteLine Id="24" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : Subindex '0x{0:X}.1'</WriteLine>
				</TestStep>
				<TestStep Name="SetSi1RequiredLevel">
					<SetVariable Target="bObjectOrEntryRequiredLevel">1</SetVariable>
					<WriteLine Id="25" Param0="u16ObjectIndexInclOffset" Level="Verbose">0x{0:X4}.1 'Actual frequency' may be available</WriteLine>
				</TestStep>
				<TestStep Name="CheckIfSi1Exists">
					<GetObjectDescription SourceDictionary="odDeviceObjectdictionary" Index="u16ObjectIndexInclOffset" SubIndex="1">
						<Type>u16DataType</Type>
					</GetObjectDescription>
					<GotoOnFailure>HandleNotExistingSi1</GotoOnFailure>
				</TestStep>
				<TestStep>
					<Compare>
						<NotEqual>
							<Value1>u16DataType</Value1>
							<Value2>0</Value2>
							<GotoStep>CallSi1CheckEntryDescription</GotoStep>
						</NotEqual>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="26" Param0="u16ObjectIndexInclOffset" Level="Verbose">The entry 0x{0:X4}.1 is defined as a padding entry.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>EndSi1</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="HandleNotExistingSi1">
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="27" Param0="u16ObjectIndexInclOffset" Level="Output">The entry 0x{0:X4}.1 does not exists.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>EndSi1</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CallSi1CheckEntryDescription">
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"offline"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>1</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>"Actual frequency"</Parameter>
						<Parameter>8</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>null</Parameter>
						<Parameter>T</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>32</Parameter>
						<Parameter>i32CurrentBitOffset</Parameter>
						<Parameter>true</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="EndSi1">
					<SetVariable Target="i32CurrentBitOffset">-1</SetVariable>
				</TestStep>
				<TestStep Name="CheckReservedEntryRange_2_to_255">
					<Description Id="28" Level="Output">Start check reserved entry range 2 to 255</Description>
					<CallTestFunction Name="CheckReservedEntryRange">
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>2</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>odDeviceObjectdictionary</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="ProfileLoopEnd">
					<Compare>
						<Equal>
							<Value1>bAtLeastOneModuleMatch</Value1>
							<Value2>false</Value2>
							<GotoStep>HandleAbortTestCaseOnFirstError</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="HandleAbortTestCaseOnFirstError">
					<Compare>
						<Equal>
							<Value1>bAbortTestCaseOnFirstError</Value1>
							<Value2>false</Value2>
							<GotoStep>ProfileLoopIncrement</GotoStep>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>strResult</Value1>
							<Value2>EmptyString</Value2>
							<GotoStep>ProfileLoopIncrement</GotoStep>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="29" Level="Output">Object verification for all following modules abort because an error was already detected for the current module.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>END</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="ProfileLoopIncrement">
					<SetVariable Target="u32ProfileCounter">u32ProfileCounter + 1</SetVariable>
					<Compare>
						<Greater>
							<Value1>u32CurrentProfilesLength</Value1>
							<Value2>u32ProfileCounter</Value2>
							<GotoStep>ProfileLoopStart</GotoStep>
						</Greater>
					</Compare>
				</TestStep>
				<TestStep Name="END">
					<Compare>
						<NotEqual>
							<Value1>bAtLeastOneModuleMatch</Value1>
							<Value2>true</Value2>
							<SkipCase Id="30">SKIP TEST(no module/channel supports the current profile)</SkipCase>
						</NotEqual>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bDEBUG</Value1>
							<Value2>true</Value2>
							<WriteLine Id="31" Param0="strResult" Level="Verbose">DEBUG | Result : '{0}'.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>strResult</Value1>
							<Value2>EmptyString</Value2>
							<ReturnSuccess Id="32">Test succeed</ReturnSuccess>
						</Equal>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>strResult</Value1>
							<Value2>EmptyString</Value2>
							<RaiseError Id="33"></RaiseError>
						</NotEqual>
					</Compare>
				</TestStep>
			</TestCase>
			<TestCase Name="online | 0x600B (Actual frequency)" CaseId="24">
				<Description>
					<PreCondition>- The device profile is 5003
- The module profile is 2011
- The submodule profile is 0</PreCondition>
					<Action>- Iterate over all online defined modules/channels and if the PreCondition matches the following operations are done:
- Get the online description of object 0x600B(+module specific offset) 'Actual frequency' and all entries
 Check:
    (Name)
    BitSize
    DataType
    Rx / Tx mappable
    Default Data
    MinData
    Flags       </Action>
					<PostCondition>Error if
- mandatory object / entry is not defined
- an optional object exists and the entries are invalid
- Object / entry description does not match with the specification</PostCondition>
					<ProposalForSolution>- Define the missing objects
- correct object / entry description</ProposalForSolution>
					<References>
						<Reference Specification="ETG.5003.2011"></Reference>
					</References>
					<Mandatory>true</Mandatory>
				</Description>
				<TestStep Name="InitResult">
					<SetVariable Target="strResult">EmptyString</SetVariable>
				</TestStep>
				<TestStep Name="CheckIfOdAvailable">
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Mailbox</Value1>
							<Value2>false</Value2>
							<SkipCase Id="1">DuT does not support mailbox.</SkipCase>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Mailbox.CoE</Value1>
							<Value2>false</Value2>
							<SkipCase Id="2">DuT does not support CoE.</SkipCase>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Mailbox.CoE.SdoInfo</Value1>
							<Value2>false</Value2>
							<SkipCase Id="3">DuT does not support SDO Info.</SkipCase>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="InitAtLeastOneProfileMatch">
					<SetVariable Target="bAtLeastOneModuleMatch">false</SetVariable>
				</TestStep>
				<TestStep Name="GetCurrentProfileList">
					<SizeOf UInt32Var="u32Tmp">arrOnlineProfiles</SizeOf>
					<Compare>
						<Equal>
							<Value1>u32Tmp</Value1>
							<Value2>0</Value2>
							<CallTestFunction Name="GetCurrentProfileList">
								<Parameter>"online"</Parameter>
								<Parameter>"SafeOP"</Parameter>
								<OutParameter>arrOnlineProfiles</OutParameter>
							</CallTestFunction>
						</Equal>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>u32Tmp</Value1>
							<Value2>0</Value2>
							<WriteLine Id="4" Param0="arrOnlineProfiles" Level="Verbose">Use previously created profile list ({0})</WriteLine>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep>
					<SizeOf UInt32Var="u32Tmp">arrOnlineProfiles</SizeOf>
				</TestStep>
				<TestStep>
					<InitArray TargetArray="arrCurrentProfiles" Length="u32Tmp"></InitArray>
				</TestStep>
				<TestStep>
					<CopyArray>
						<SourceArray>arrOnlineProfiles</SourceArray>
						<DestinationArray>arrCurrentProfiles</DestinationArray>
						<Length>u32Tmp</Length>
					</CopyArray>
				</TestStep>
				<TestStep Name="InitProfileLoopCounter">
					<SetVariable Target="u32ProfileCounter">0</SetVariable>
				</TestStep>
				<TestStep Name="GetProfileArrayLength">
					<SizeOf UInt32Var="u32CurrentProfilesLength">arrCurrentProfiles</SizeOf>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="5" Param0="u32CurrentProfilesLength" Level="Verbose">'{0}' Profile(s) defined online.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>u32CurrentProfilesLength</Value1>
							<Value2>0</Value2>
							<SkipCase Id="6">Skip case | no profile defined.</SkipCase>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="ProfileLoopStart">
					<GetArrayItem SourceArray="arrCurrentProfiles" Target="strTmpString" Index="u32ProfileCounter"></GetArrayItem>
				</TestStep>
				<TestStep Name="CheckProfileInformationString">
					<Compare>
						<Equal>
							<Value1>strTmpString</Value1>
							<Value2>null</Value2>
							<RaiseError Id="7" Param0="u32ProfileCounter">Profile Info element [{0}] is null.</RaiseError>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>strTmpString</Value1>
							<Value2>EmptyString</Value2>
							<RaiseError Id="8" Param0="u32ProfileCounter">Profile Info element [{0}] is an empty string.</RaiseError>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="GetDeviceProfile">
					<CallTestFunction Name="GetDeviceProfile">
						<Parameter>strTmpString</Parameter>
						<OutParameter>uint16CurDeviceProfile</OutParameter>
					</CallTestFunction>
				</TestStep>
				<TestStep Name="GetModuleProfile">
					<CallTestFunction Name="GetModuleProfile">
						<Parameter>strTmpString</Parameter>
						<OutParameter>uint16CurModuleProfile</OutParameter>
					</CallTestFunction>
				</TestStep>
				<TestStep Name="GetSubModuleProfile">
					<CallTestFunction Name="GetSubModuleProfile">
						<Parameter>strTmpString</Parameter>
						<OutParameter>uint16CurSubModuleProfile</OutParameter>
					</CallTestFunction>
				</TestStep>
				<TestStep Name="DumpProfileInfo">
					<Description Id="9" Param0="uint16CurDeviceProfile" Param1="uint16CurModuleProfile" Param2="uint16CurSubModuleProfile" Param3="u32ProfileCounter" Level="Output">Module[{3}] : DeviceProfile '{0}' ; ModuleProfile '{1}' ; SubModuleProfile '{2}'</Description>
					<Compare>
						<Equal>
							<Value1>bIgnoreProfileID</Value1>
							<Value2>true</Value2>
							<GotoStep>IndicateThatAtleastOneModuleMatch</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CompareDeviceProfile">
					<Compare>
						<NotEqual>
							<Value1>uint16CurDeviceProfile</Value1>
							<Value2>5003</Value2>
							<WriteLine Id="10" Param0="uint16CurDeviceProfile" Level="Output">Skip Profile  (Test Device Profile '5003' != Cur Device Profile '{0}')</WriteLine>
						</NotEqual>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>uint16CurDeviceProfile</Value1>
							<Value2>5003</Value2>
							<GotoStep>ProfileLoopEnd</GotoStep>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep Name="CompareModuleProfile">
					<Compare>
						<NotEqual>
							<Value1>uint16CurModuleProfile</Value1>
							<Value2>2011</Value2>
							<WriteLine Id="11" Param0="uint16CurModuleProfile" Level="Output">Skip Profile  (Test Module Profile '2011' != Cur Module Profile '{0}')</WriteLine>
						</NotEqual>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>uint16CurModuleProfile</Value1>
							<Value2>2011</Value2>
							<GotoStep>ProfileLoopEnd</GotoStep>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep Name="CompareSubModuleProfile">
					<Compare>
						<NotEqual>
							<Value1>uint16CurSubModuleProfile</Value1>
							<Value2>0</Value2>
							<WriteLine Id="12" Param0="uint16CurSubModuleProfile" Level="Output">Skip Profile  (Test SubModule Profile '0' != Cur SubModule Profile '{0}')</WriteLine>
						</NotEqual>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>uint16CurSubModuleProfile</Value1>
							<Value2>0</Value2>
							<GotoStep>ProfileLoopEnd</GotoStep>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep Name="IndicateThatAtleastOneModuleMatch">
					<SetVariable Target="bAtLeastOneModuleMatch">true</SetVariable>
				</TestStep>
				<TestStep Name="GetObjectIndexInclOffset">
					<SetVariable Target="u16ObjectIndexInclOffset">#x600B + (u32ProfileCounter * #x10)</SetVariable>
					<WriteLine Id="13" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : ObjectIndex '0x{0:X}'</WriteLine>
				</TestStep>
				<TestStep Name="LoadDeviceObjectDictionary">
					<Description Id="14" Level="Verbose">Load 'online' object dictionary for testing.</Description>
					<GetObjectDictionary Target="odDeviceObjectdictionary">
						<DictionaryType>Online</DictionaryType>
					</GetObjectDictionary>
					<RaiseErrorOnFailure Id="15">VerifyObject : failed to load online object dictionary.</RaiseErrorOnFailure>
				</TestStep>
				<TestStep Name="SetObjectRequiredLevel">
					<SetVariable Target="bObjectOrEntryRequiredLevel">1</SetVariable>
					<WriteLine Id="16" Param0="u16ObjectIndexInclOffset" Level="Verbose">0x{0:X4} 'Actual frequency' may be available</WriteLine>
				</TestStep>
				<TestStep Name="CheckIfObjectExists">
					<GetObjectDescription SourceDictionary="odDeviceObjectdictionary" Index="u16ObjectIndexInclOffset" SubIndex="-1"></GetObjectDescription>
					<GotoOnSuccess>CallCheckObjectDescription</GotoOnSuccess>
				</TestStep>
				<TestStep Name="HandleNotExistingObject">
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>2</Value2>
							<WriteLine Id="17" Param0="u16ObjectIndexInclOffset" Level="Warning">The object 0x{0:X4} 'Actual frequency' does not exists.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>1</Value2>
							<WriteLine Id="18" Param0="u16ObjectIndexInclOffset" Level="Output">The object 0x{0:X4} 'Actual frequency' does not exists.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>ProfileLoopEnd</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CallCheckObjectDescription">
					<Description Id="19" Param0="u16ObjectIndexInclOffset" Level="Output">Verify the object description 0x{0:X4} 'Actual frequency'.</Description>
					<CallTestFunction Name="CheckObjectDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"online"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>"Actual frequency"</Parameter>
						<Parameter>null</Parameter>
						<Parameter>9</Parameter>
						<Parameter>-1</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<GotoStep>ProfileLoopEnd</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="InitEntryBittOffset">
					<SetVariable Target="i32CurrentBitOffset">0</SetVariable>
				</TestStep>
				<TestStep Name="StartSi0">
					<Description Id="20" Level="Output">Start validate SubIndex0</Description>
					<WriteLine Id="21" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : Subindex '0x{0:X}.0'</WriteLine>
				</TestStep>
				<TestStep Name="CallSi0CheckEntryDescription">
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"online"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>0</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>null</Parameter>
						<Parameter>5</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>null</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>null</Parameter>
						<Parameter>null</Parameter>
						<Parameter>null</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>8</Parameter>
						<Parameter>i32CurrentBitOffset</Parameter>
						<Parameter>true</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="EndSi0">
					<SetVariable Target="i32CurrentBitOffset">16</SetVariable>
				</TestStep>
				<TestStep Name="StartSi1">
					<Description Id="22" Level="Output">Start validate SubIndex1</Description>
					<WriteLine Id="23" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : Subindex '0x{0:X}.1'</WriteLine>
				</TestStep>
				<TestStep Name="SetSi1RequiredLevel">
					<SetVariable Target="bObjectOrEntryRequiredLevel">1</SetVariable>
					<WriteLine Id="24" Param0="u16ObjectIndexInclOffset" Level="Verbose">0x{0:X4}.1 'Actual frequency' may be available</WriteLine>
				</TestStep>
				<TestStep Name="CheckIfSi1Exists">
					<GetObjectDescription SourceDictionary="odDeviceObjectdictionary" Index="u16ObjectIndexInclOffset" SubIndex="1">
						<Type>u16DataType</Type>
					</GetObjectDescription>
					<GotoOnFailure>HandleNotExistingSi1</GotoOnFailure>
				</TestStep>
				<TestStep>
					<Compare>
						<NotEqual>
							<Value1>u16DataType</Value1>
							<Value2>0</Value2>
							<GotoStep>CallSi1CheckEntryDescription</GotoStep>
						</NotEqual>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="25" Param0="u16ObjectIndexInclOffset" Level="Verbose">The entry 0x{0:X4}.1 is defined as a padding entry.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>EndSi1</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="HandleNotExistingSi1">
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="26" Param0="u16ObjectIndexInclOffset" Level="Output">The entry 0x{0:X4}.1 does not exists.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>EndSi1</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CallSi1CheckEntryDescription">
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"online"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>1</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>"Actual frequency"</Parameter>
						<Parameter>8</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>null</Parameter>
						<Parameter>T</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>32</Parameter>
						<Parameter>i32CurrentBitOffset</Parameter>
						<Parameter>true</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="EndSi1">
					<SetVariable Target="i32CurrentBitOffset">-1</SetVariable>
				</TestStep>
				<TestStep Name="CheckReservedEntryRange_2_to_255">
					<Description Id="27" Level="Output">Start check reserved entry range 2 to 255</Description>
					<CallTestFunction Name="CheckReservedEntryRange">
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>2</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>odDeviceObjectdictionary</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="ProfileLoopEnd">
					<Compare>
						<Equal>
							<Value1>bAtLeastOneModuleMatch</Value1>
							<Value2>false</Value2>
							<GotoStep>HandleAbortTestCaseOnFirstError</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="HandleAbortTestCaseOnFirstError">
					<Compare>
						<Equal>
							<Value1>bAbortTestCaseOnFirstError</Value1>
							<Value2>false</Value2>
							<GotoStep>ProfileLoopIncrement</GotoStep>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>strResult</Value1>
							<Value2>EmptyString</Value2>
							<GotoStep>ProfileLoopIncrement</GotoStep>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="28" Level="Output">Object verification for all following modules abort because an error was already detected for the current module.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>END</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="ProfileLoopIncrement">
					<SetVariable Target="u32ProfileCounter">u32ProfileCounter + 1</SetVariable>
					<Compare>
						<Greater>
							<Value1>u32CurrentProfilesLength</Value1>
							<Value2>u32ProfileCounter</Value2>
							<GotoStep>ProfileLoopStart</GotoStep>
						</Greater>
					</Compare>
				</TestStep>
				<TestStep Name="END">
					<Compare>
						<NotEqual>
							<Value1>bAtLeastOneModuleMatch</Value1>
							<Value2>true</Value2>
							<SkipCase Id="29">SKIP TEST(no module/channel supports the current profile)</SkipCase>
						</NotEqual>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bDEBUG</Value1>
							<Value2>true</Value2>
							<WriteLine Id="30" Param0="strResult" Level="Verbose">DEBUG | Result : '{0}'.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>strResult</Value1>
							<Value2>EmptyString</Value2>
							<ReturnSuccess Id="31">Test succeed</ReturnSuccess>
						</Equal>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>strResult</Value1>
							<Value2>EmptyString</Value2>
							<RaiseError Id="32"></RaiseError>
						</NotEqual>
					</Compare>
				</TestStep>
			</TestCase>
			<TestCase Name="offline | 0x600C (Impedance)" CaseId="25">
				<Description>
					<PreCondition>- The device profile is 5003
- The module profile is 2011
- The submodule profile is 0</PreCondition>
					<Action>- Iterate over all offline defined modules/channels and if the PreCondition matches the following operations are done:
- Get the offline description of object 0x600C(+module specific offset) 'Impedance' and all entries
 Check:
    (Name)
    BitSize
    DataType
    Rx / Tx mappable
    Default Data
    MinData
    Flags       </Action>
					<PostCondition>Error if
- mandatory object / entry is not defined
- an optional object exists and the entries are invalid
- Object / entry description does not match with the specification</PostCondition>
					<ProposalForSolution>- Define the missing objects
- correct object / entry description</ProposalForSolution>
					<References>
						<Reference Specification="ETG.5003.2011"></Reference>
					</References>
					<Mandatory>true</Mandatory>
				</Description>
				<TestStep Name="InitResult">
					<SetVariable Target="strResult">EmptyString</SetVariable>
				</TestStep>
				<TestStep Name="CheckIfOdAvailable">
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Mailbox</Value1>
							<Value2>false</Value2>
							<SkipCase Id="1">DuT does not support mailbox.</SkipCase>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Mailbox.CoE</Value1>
							<Value2>false</Value2>
							<SkipCase Id="2">DuT does not support CoE.</SkipCase>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep>
					<GetObjectDictionary Target="odDeviceObjectdictionary">
						<DictionaryType>Offline</DictionaryType>
					</GetObjectDictionary>
					<SkipOnFailure Id="3">No offline object dictionary defined.</SkipOnFailure>
				</TestStep>
				<TestStep>
					<GetObjectList Count="u32Tmp" Target="odDeviceObjectdictionaryList" SourceDict="odDeviceObjectdictionary"></GetObjectList>
					<Compare>
						<Equal>
							<Value1>u32Tmp</Value1>
							<Value2>0</Value2>
							<SkipCase Id="4">No offline object dictionary defined.</SkipCase>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="InitAtLeastOneProfileMatch">
					<SetVariable Target="bAtLeastOneModuleMatch">false</SetVariable>
				</TestStep>
				<TestStep Name="GetCurrentProfileList">
					<SizeOf UInt32Var="u32Tmp">arrOfflineProfiles</SizeOf>
					<Compare>
						<Equal>
							<Value1>u32Tmp</Value1>
							<Value2>0</Value2>
							<CallTestFunction Name="GetCurrentProfileList">
								<Parameter>"offline"</Parameter>
								<Parameter>"SafeOP"</Parameter>
								<OutParameter>arrOfflineProfiles</OutParameter>
							</CallTestFunction>
						</Equal>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>u32Tmp</Value1>
							<Value2>0</Value2>
							<WriteLine Id="5" Param0="arrOfflineProfiles" Level="Verbose">Use previously created profile list ({0})</WriteLine>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep>
					<SizeOf UInt32Var="u32Tmp">arrOfflineProfiles</SizeOf>
				</TestStep>
				<TestStep>
					<InitArray TargetArray="arrCurrentProfiles" Length="u32Tmp"></InitArray>
				</TestStep>
				<TestStep>
					<CopyArray>
						<SourceArray>arrOfflineProfiles</SourceArray>
						<DestinationArray>arrCurrentProfiles</DestinationArray>
						<Length>u32Tmp</Length>
					</CopyArray>
				</TestStep>
				<TestStep Name="InitProfileLoopCounter">
					<SetVariable Target="u32ProfileCounter">0</SetVariable>
				</TestStep>
				<TestStep Name="GetProfileArrayLength">
					<SizeOf UInt32Var="u32CurrentProfilesLength">arrCurrentProfiles</SizeOf>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="6" Param0="u32CurrentProfilesLength" Level="Verbose">'{0}' Profile(s) defined offline.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>u32CurrentProfilesLength</Value1>
							<Value2>0</Value2>
							<SkipCase Id="7">Skip case | no profile defined.</SkipCase>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="ProfileLoopStart">
					<GetArrayItem SourceArray="arrCurrentProfiles" Target="strTmpString" Index="u32ProfileCounter"></GetArrayItem>
				</TestStep>
				<TestStep Name="CheckProfileInformationString">
					<Compare>
						<Equal>
							<Value1>strTmpString</Value1>
							<Value2>null</Value2>
							<RaiseError Id="8" Param0="u32ProfileCounter">Profile Info element [{0}] is null.</RaiseError>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>strTmpString</Value1>
							<Value2>EmptyString</Value2>
							<RaiseError Id="9" Param0="u32ProfileCounter">Profile Info element [{0}] is an empty string.</RaiseError>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="GetDeviceProfile">
					<CallTestFunction Name="GetDeviceProfile">
						<Parameter>strTmpString</Parameter>
						<OutParameter>uint16CurDeviceProfile</OutParameter>
					</CallTestFunction>
				</TestStep>
				<TestStep Name="GetModuleProfile">
					<CallTestFunction Name="GetModuleProfile">
						<Parameter>strTmpString</Parameter>
						<OutParameter>uint16CurModuleProfile</OutParameter>
					</CallTestFunction>
				</TestStep>
				<TestStep Name="GetSubModuleProfile">
					<CallTestFunction Name="GetSubModuleProfile">
						<Parameter>strTmpString</Parameter>
						<OutParameter>uint16CurSubModuleProfile</OutParameter>
					</CallTestFunction>
				</TestStep>
				<TestStep Name="DumpProfileInfo">
					<Description Id="10" Param0="uint16CurDeviceProfile" Param1="uint16CurModuleProfile" Param2="uint16CurSubModuleProfile" Param3="u32ProfileCounter" Level="Output">Module[{3}] : DeviceProfile '{0}' ; ModuleProfile '{1}' ; SubModuleProfile '{2}'</Description>
					<Compare>
						<Equal>
							<Value1>bIgnoreProfileID</Value1>
							<Value2>true</Value2>
							<GotoStep>IndicateThatAtleastOneModuleMatch</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CompareDeviceProfile">
					<Compare>
						<NotEqual>
							<Value1>uint16CurDeviceProfile</Value1>
							<Value2>5003</Value2>
							<WriteLine Id="11" Param0="uint16CurDeviceProfile" Level="Output">Skip Profile  (Test Device Profile '5003' != Cur Device Profile '{0}')</WriteLine>
						</NotEqual>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>uint16CurDeviceProfile</Value1>
							<Value2>5003</Value2>
							<GotoStep>ProfileLoopEnd</GotoStep>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep Name="CompareModuleProfile">
					<Compare>
						<NotEqual>
							<Value1>uint16CurModuleProfile</Value1>
							<Value2>2011</Value2>
							<WriteLine Id="12" Param0="uint16CurModuleProfile" Level="Output">Skip Profile  (Test Module Profile '2011' != Cur Module Profile '{0}')</WriteLine>
						</NotEqual>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>uint16CurModuleProfile</Value1>
							<Value2>2011</Value2>
							<GotoStep>ProfileLoopEnd</GotoStep>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep Name="CompareSubModuleProfile">
					<Compare>
						<NotEqual>
							<Value1>uint16CurSubModuleProfile</Value1>
							<Value2>0</Value2>
							<WriteLine Id="13" Param0="uint16CurSubModuleProfile" Level="Output">Skip Profile  (Test SubModule Profile '0' != Cur SubModule Profile '{0}')</WriteLine>
						</NotEqual>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>uint16CurSubModuleProfile</Value1>
							<Value2>0</Value2>
							<GotoStep>ProfileLoopEnd</GotoStep>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep Name="IndicateThatAtleastOneModuleMatch">
					<SetVariable Target="bAtLeastOneModuleMatch">true</SetVariable>
				</TestStep>
				<TestStep Name="GetObjectIndexInclOffset">
					<SetVariable Target="u16ObjectIndexInclOffset">#x600C + (u32ProfileCounter * #x10)</SetVariable>
					<WriteLine Id="14" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : ObjectIndex '0x{0:X}'</WriteLine>
				</TestStep>
				<TestStep Name="LoadDeviceObjectDictionary">
					<Description Id="15" Level="Verbose">Load 'offline' object dictionary for testing.</Description>
					<GetObjectDictionary Target="odDeviceObjectdictionary">
						<DictionaryType>Offline</DictionaryType>
					</GetObjectDictionary>
					<RaiseErrorOnFailure Id="16">VerifyObject : failed to load offline object dictionary.</RaiseErrorOnFailure>
				</TestStep>
				<TestStep Name="SetObjectRequiredLevel">
					<SetVariable Target="bObjectOrEntryRequiredLevel">1</SetVariable>
					<WriteLine Id="17" Param0="u16ObjectIndexInclOffset" Level="Verbose">0x{0:X4} 'Impedance' may be available</WriteLine>
				</TestStep>
				<TestStep Name="CheckIfObjectExists">
					<GetObjectDescription SourceDictionary="odDeviceObjectdictionary" Index="u16ObjectIndexInclOffset" SubIndex="-1"></GetObjectDescription>
					<GotoOnSuccess>CallCheckObjectDescription</GotoOnSuccess>
				</TestStep>
				<TestStep Name="HandleNotExistingObject">
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>2</Value2>
							<WriteLine Id="18" Param0="u16ObjectIndexInclOffset" Level="Warning">The object 0x{0:X4} 'Impedance' does not exists.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>1</Value2>
							<WriteLine Id="19" Param0="u16ObjectIndexInclOffset" Level="Output">The object 0x{0:X4} 'Impedance' does not exists.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>ProfileLoopEnd</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CallCheckObjectDescription">
					<Description Id="20" Param0="u16ObjectIndexInclOffset" Level="Output">Verify the object description 0x{0:X4} 'Impedance'.</Description>
					<CallTestFunction Name="CheckObjectDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"offline"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>"Impedance"</Parameter>
						<Parameter>null</Parameter>
						<Parameter>9</Parameter>
						<Parameter>-1</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<GotoStep>ProfileLoopEnd</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="InitEntryBittOffset">
					<SetVariable Target="i32CurrentBitOffset">0</SetVariable>
				</TestStep>
				<TestStep Name="StartSi0">
					<Description Id="21" Level="Output">Start validate SubIndex0</Description>
					<WriteLine Id="22" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : Subindex '0x{0:X}.0'</WriteLine>
				</TestStep>
				<TestStep Name="CallSi0CheckEntryDescription">
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"offline"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>0</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>null</Parameter>
						<Parameter>5</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>null</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>null</Parameter>
						<Parameter>null</Parameter>
						<Parameter>null</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>8</Parameter>
						<Parameter>i32CurrentBitOffset</Parameter>
						<Parameter>true</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="EndSi0">
					<SetVariable Target="i32CurrentBitOffset">16</SetVariable>
				</TestStep>
				<TestStep Name="StartSi1">
					<Description Id="23" Level="Output">Start validate SubIndex1</Description>
					<WriteLine Id="24" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : Subindex '0x{0:X}.1'</WriteLine>
				</TestStep>
				<TestStep Name="SetSi1RequiredLevel">
					<SetVariable Target="bObjectOrEntryRequiredLevel">1</SetVariable>
					<WriteLine Id="25" Param0="u16ObjectIndexInclOffset" Level="Verbose">0x{0:X4}.1 'Real impedance' may be available</WriteLine>
				</TestStep>
				<TestStep Name="CheckIfSi1Exists">
					<GetObjectDescription SourceDictionary="odDeviceObjectdictionary" Index="u16ObjectIndexInclOffset" SubIndex="1">
						<Type>u16DataType</Type>
					</GetObjectDescription>
					<GotoOnFailure>HandleNotExistingSi1</GotoOnFailure>
				</TestStep>
				<TestStep>
					<Compare>
						<NotEqual>
							<Value1>u16DataType</Value1>
							<Value2>0</Value2>
							<GotoStep>CallSi1CheckEntryDescription</GotoStep>
						</NotEqual>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="26" Param0="u16ObjectIndexInclOffset" Level="Verbose">The entry 0x{0:X4}.1 is defined as a padding entry.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>EndSi1</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="HandleNotExistingSi1">
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="27" Param0="u16ObjectIndexInclOffset" Level="Output">The entry 0x{0:X4}.1 does not exists.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>EndSi1</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CallSi1CheckEntryDescription">
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"offline"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>1</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>"Real impedance"</Parameter>
						<Parameter>8</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>null</Parameter>
						<Parameter>T</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>32</Parameter>
						<Parameter>i32CurrentBitOffset</Parameter>
						<Parameter>true</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="EndSi1">
					<SetVariable Target="i32CurrentBitOffset">-1</SetVariable>
				</TestStep>
				<TestStep Name="StartSi2">
					<Description Id="28" Level="Output">Start validate SubIndex2</Description>
					<WriteLine Id="29" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : Subindex '0x{0:X}.2'</WriteLine>
				</TestStep>
				<TestStep Name="SetSi2RequiredLevel">
					<SetVariable Target="bObjectOrEntryRequiredLevel">1</SetVariable>
					<WriteLine Id="30" Param0="u16ObjectIndexInclOffset" Level="Verbose">0x{0:X4}.2 'Reactive impedance' may be available</WriteLine>
				</TestStep>
				<TestStep Name="CheckIfSi2Exists">
					<GetObjectDescription SourceDictionary="odDeviceObjectdictionary" Index="u16ObjectIndexInclOffset" SubIndex="2">
						<Type>u16DataType</Type>
					</GetObjectDescription>
					<GotoOnFailure>HandleNotExistingSi2</GotoOnFailure>
				</TestStep>
				<TestStep>
					<Compare>
						<NotEqual>
							<Value1>u16DataType</Value1>
							<Value2>0</Value2>
							<GotoStep>CallSi2CheckEntryDescription</GotoStep>
						</NotEqual>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="31" Param0="u16ObjectIndexInclOffset" Level="Verbose">The entry 0x{0:X4}.2 is defined as a padding entry.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>EndSi2</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="HandleNotExistingSi2">
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="32" Param0="u16ObjectIndexInclOffset" Level="Output">The entry 0x{0:X4}.2 does not exists.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>EndSi2</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CallSi2CheckEntryDescription">
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"offline"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>2</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>"Reactive impedance"</Parameter>
						<Parameter>8</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>null</Parameter>
						<Parameter>T</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>32</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>true</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="EndSi2"></TestStep>
				<TestStep Name="CheckReservedEntryRange_3_to_255">
					<Description Id="33" Level="Output">Start check reserved entry range 3 to 255</Description>
					<CallTestFunction Name="CheckReservedEntryRange">
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>3</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>odDeviceObjectdictionary</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="ProfileLoopEnd">
					<Compare>
						<Equal>
							<Value1>bAtLeastOneModuleMatch</Value1>
							<Value2>false</Value2>
							<GotoStep>HandleAbortTestCaseOnFirstError</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="HandleAbortTestCaseOnFirstError">
					<Compare>
						<Equal>
							<Value1>bAbortTestCaseOnFirstError</Value1>
							<Value2>false</Value2>
							<GotoStep>ProfileLoopIncrement</GotoStep>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>strResult</Value1>
							<Value2>EmptyString</Value2>
							<GotoStep>ProfileLoopIncrement</GotoStep>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="34" Level="Output">Object verification for all following modules abort because an error was already detected for the current module.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>END</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="ProfileLoopIncrement">
					<SetVariable Target="u32ProfileCounter">u32ProfileCounter + 1</SetVariable>
					<Compare>
						<Greater>
							<Value1>u32CurrentProfilesLength</Value1>
							<Value2>u32ProfileCounter</Value2>
							<GotoStep>ProfileLoopStart</GotoStep>
						</Greater>
					</Compare>
				</TestStep>
				<TestStep Name="END">
					<Compare>
						<NotEqual>
							<Value1>bAtLeastOneModuleMatch</Value1>
							<Value2>true</Value2>
							<SkipCase Id="35">SKIP TEST(no module/channel supports the current profile)</SkipCase>
						</NotEqual>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bDEBUG</Value1>
							<Value2>true</Value2>
							<WriteLine Id="36" Param0="strResult" Level="Verbose">DEBUG | Result : '{0}'.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>strResult</Value1>
							<Value2>EmptyString</Value2>
							<ReturnSuccess Id="37">Test succeed</ReturnSuccess>
						</Equal>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>strResult</Value1>
							<Value2>EmptyString</Value2>
							<RaiseError Id="38"></RaiseError>
						</NotEqual>
					</Compare>
				</TestStep>
			</TestCase>
			<TestCase Name="online | 0x600C (Impedance)" CaseId="26">
				<Description>
					<PreCondition>- The device profile is 5003
- The module profile is 2011
- The submodule profile is 0</PreCondition>
					<Action>- Iterate over all online defined modules/channels and if the PreCondition matches the following operations are done:
- Get the online description of object 0x600C(+module specific offset) 'Impedance' and all entries
 Check:
    (Name)
    BitSize
    DataType
    Rx / Tx mappable
    Default Data
    MinData
    Flags       </Action>
					<PostCondition>Error if
- mandatory object / entry is not defined
- an optional object exists and the entries are invalid
- Object / entry description does not match with the specification</PostCondition>
					<ProposalForSolution>- Define the missing objects
- correct object / entry description</ProposalForSolution>
					<References>
						<Reference Specification="ETG.5003.2011"></Reference>
					</References>
					<Mandatory>true</Mandatory>
				</Description>
				<TestStep Name="InitResult">
					<SetVariable Target="strResult">EmptyString</SetVariable>
				</TestStep>
				<TestStep Name="CheckIfOdAvailable">
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Mailbox</Value1>
							<Value2>false</Value2>
							<SkipCase Id="1">DuT does not support mailbox.</SkipCase>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Mailbox.CoE</Value1>
							<Value2>false</Value2>
							<SkipCase Id="2">DuT does not support CoE.</SkipCase>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Mailbox.CoE.SdoInfo</Value1>
							<Value2>false</Value2>
							<SkipCase Id="3">DuT does not support SDO Info.</SkipCase>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="InitAtLeastOneProfileMatch">
					<SetVariable Target="bAtLeastOneModuleMatch">false</SetVariable>
				</TestStep>
				<TestStep Name="GetCurrentProfileList">
					<SizeOf UInt32Var="u32Tmp">arrOnlineProfiles</SizeOf>
					<Compare>
						<Equal>
							<Value1>u32Tmp</Value1>
							<Value2>0</Value2>
							<CallTestFunction Name="GetCurrentProfileList">
								<Parameter>"online"</Parameter>
								<Parameter>"SafeOP"</Parameter>
								<OutParameter>arrOnlineProfiles</OutParameter>
							</CallTestFunction>
						</Equal>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>u32Tmp</Value1>
							<Value2>0</Value2>
							<WriteLine Id="4" Param0="arrOnlineProfiles" Level="Verbose">Use previously created profile list ({0})</WriteLine>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep>
					<SizeOf UInt32Var="u32Tmp">arrOnlineProfiles</SizeOf>
				</TestStep>
				<TestStep>
					<InitArray TargetArray="arrCurrentProfiles" Length="u32Tmp"></InitArray>
				</TestStep>
				<TestStep>
					<CopyArray>
						<SourceArray>arrOnlineProfiles</SourceArray>
						<DestinationArray>arrCurrentProfiles</DestinationArray>
						<Length>u32Tmp</Length>
					</CopyArray>
				</TestStep>
				<TestStep Name="InitProfileLoopCounter">
					<SetVariable Target="u32ProfileCounter">0</SetVariable>
				</TestStep>
				<TestStep Name="GetProfileArrayLength">
					<SizeOf UInt32Var="u32CurrentProfilesLength">arrCurrentProfiles</SizeOf>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="5" Param0="u32CurrentProfilesLength" Level="Verbose">'{0}' Profile(s) defined online.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>u32CurrentProfilesLength</Value1>
							<Value2>0</Value2>
							<SkipCase Id="6">Skip case | no profile defined.</SkipCase>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="ProfileLoopStart">
					<GetArrayItem SourceArray="arrCurrentProfiles" Target="strTmpString" Index="u32ProfileCounter"></GetArrayItem>
				</TestStep>
				<TestStep Name="CheckProfileInformationString">
					<Compare>
						<Equal>
							<Value1>strTmpString</Value1>
							<Value2>null</Value2>
							<RaiseError Id="7" Param0="u32ProfileCounter">Profile Info element [{0}] is null.</RaiseError>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>strTmpString</Value1>
							<Value2>EmptyString</Value2>
							<RaiseError Id="8" Param0="u32ProfileCounter">Profile Info element [{0}] is an empty string.</RaiseError>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="GetDeviceProfile">
					<CallTestFunction Name="GetDeviceProfile">
						<Parameter>strTmpString</Parameter>
						<OutParameter>uint16CurDeviceProfile</OutParameter>
					</CallTestFunction>
				</TestStep>
				<TestStep Name="GetModuleProfile">
					<CallTestFunction Name="GetModuleProfile">
						<Parameter>strTmpString</Parameter>
						<OutParameter>uint16CurModuleProfile</OutParameter>
					</CallTestFunction>
				</TestStep>
				<TestStep Name="GetSubModuleProfile">
					<CallTestFunction Name="GetSubModuleProfile">
						<Parameter>strTmpString</Parameter>
						<OutParameter>uint16CurSubModuleProfile</OutParameter>
					</CallTestFunction>
				</TestStep>
				<TestStep Name="DumpProfileInfo">
					<Description Id="9" Param0="uint16CurDeviceProfile" Param1="uint16CurModuleProfile" Param2="uint16CurSubModuleProfile" Param3="u32ProfileCounter" Level="Output">Module[{3}] : DeviceProfile '{0}' ; ModuleProfile '{1}' ; SubModuleProfile '{2}'</Description>
					<Compare>
						<Equal>
							<Value1>bIgnoreProfileID</Value1>
							<Value2>true</Value2>
							<GotoStep>IndicateThatAtleastOneModuleMatch</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CompareDeviceProfile">
					<Compare>
						<NotEqual>
							<Value1>uint16CurDeviceProfile</Value1>
							<Value2>5003</Value2>
							<WriteLine Id="10" Param0="uint16CurDeviceProfile" Level="Output">Skip Profile  (Test Device Profile '5003' != Cur Device Profile '{0}')</WriteLine>
						</NotEqual>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>uint16CurDeviceProfile</Value1>
							<Value2>5003</Value2>
							<GotoStep>ProfileLoopEnd</GotoStep>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep Name="CompareModuleProfile">
					<Compare>
						<NotEqual>
							<Value1>uint16CurModuleProfile</Value1>
							<Value2>2011</Value2>
							<WriteLine Id="11" Param0="uint16CurModuleProfile" Level="Output">Skip Profile  (Test Module Profile '2011' != Cur Module Profile '{0}')</WriteLine>
						</NotEqual>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>uint16CurModuleProfile</Value1>
							<Value2>2011</Value2>
							<GotoStep>ProfileLoopEnd</GotoStep>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep Name="CompareSubModuleProfile">
					<Compare>
						<NotEqual>
							<Value1>uint16CurSubModuleProfile</Value1>
							<Value2>0</Value2>
							<WriteLine Id="12" Param0="uint16CurSubModuleProfile" Level="Output">Skip Profile  (Test SubModule Profile '0' != Cur SubModule Profile '{0}')</WriteLine>
						</NotEqual>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>uint16CurSubModuleProfile</Value1>
							<Value2>0</Value2>
							<GotoStep>ProfileLoopEnd</GotoStep>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep Name="IndicateThatAtleastOneModuleMatch">
					<SetVariable Target="bAtLeastOneModuleMatch">true</SetVariable>
				</TestStep>
				<TestStep Name="GetObjectIndexInclOffset">
					<SetVariable Target="u16ObjectIndexInclOffset">#x600C + (u32ProfileCounter * #x10)</SetVariable>
					<WriteLine Id="13" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : ObjectIndex '0x{0:X}'</WriteLine>
				</TestStep>
				<TestStep Name="LoadDeviceObjectDictionary">
					<Description Id="14" Level="Verbose">Load 'online' object dictionary for testing.</Description>
					<GetObjectDictionary Target="odDeviceObjectdictionary">
						<DictionaryType>Online</DictionaryType>
					</GetObjectDictionary>
					<RaiseErrorOnFailure Id="15">VerifyObject : failed to load online object dictionary.</RaiseErrorOnFailure>
				</TestStep>
				<TestStep Name="SetObjectRequiredLevel">
					<SetVariable Target="bObjectOrEntryRequiredLevel">1</SetVariable>
					<WriteLine Id="16" Param0="u16ObjectIndexInclOffset" Level="Verbose">0x{0:X4} 'Impedance' may be available</WriteLine>
				</TestStep>
				<TestStep Name="CheckIfObjectExists">
					<GetObjectDescription SourceDictionary="odDeviceObjectdictionary" Index="u16ObjectIndexInclOffset" SubIndex="-1"></GetObjectDescription>
					<GotoOnSuccess>CallCheckObjectDescription</GotoOnSuccess>
				</TestStep>
				<TestStep Name="HandleNotExistingObject">
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>2</Value2>
							<WriteLine Id="17" Param0="u16ObjectIndexInclOffset" Level="Warning">The object 0x{0:X4} 'Impedance' does not exists.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>1</Value2>
							<WriteLine Id="18" Param0="u16ObjectIndexInclOffset" Level="Output">The object 0x{0:X4} 'Impedance' does not exists.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>ProfileLoopEnd</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CallCheckObjectDescription">
					<Description Id="19" Param0="u16ObjectIndexInclOffset" Level="Output">Verify the object description 0x{0:X4} 'Impedance'.</Description>
					<CallTestFunction Name="CheckObjectDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"online"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>"Impedance"</Parameter>
						<Parameter>null</Parameter>
						<Parameter>9</Parameter>
						<Parameter>-1</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<GotoStep>ProfileLoopEnd</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="InitEntryBittOffset">
					<SetVariable Target="i32CurrentBitOffset">0</SetVariable>
				</TestStep>
				<TestStep Name="StartSi0">
					<Description Id="20" Level="Output">Start validate SubIndex0</Description>
					<WriteLine Id="21" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : Subindex '0x{0:X}.0'</WriteLine>
				</TestStep>
				<TestStep Name="CallSi0CheckEntryDescription">
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"online"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>0</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>null</Parameter>
						<Parameter>5</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>null</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>null</Parameter>
						<Parameter>null</Parameter>
						<Parameter>null</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>8</Parameter>
						<Parameter>i32CurrentBitOffset</Parameter>
						<Parameter>true</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="EndSi0">
					<SetVariable Target="i32CurrentBitOffset">16</SetVariable>
				</TestStep>
				<TestStep Name="StartSi1">
					<Description Id="22" Level="Output">Start validate SubIndex1</Description>
					<WriteLine Id="23" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : Subindex '0x{0:X}.1'</WriteLine>
				</TestStep>
				<TestStep Name="SetSi1RequiredLevel">
					<SetVariable Target="bObjectOrEntryRequiredLevel">1</SetVariable>
					<WriteLine Id="24" Param0="u16ObjectIndexInclOffset" Level="Verbose">0x{0:X4}.1 'Real impedance' may be available</WriteLine>
				</TestStep>
				<TestStep Name="CheckIfSi1Exists">
					<GetObjectDescription SourceDictionary="odDeviceObjectdictionary" Index="u16ObjectIndexInclOffset" SubIndex="1">
						<Type>u16DataType</Type>
					</GetObjectDescription>
					<GotoOnFailure>HandleNotExistingSi1</GotoOnFailure>
				</TestStep>
				<TestStep>
					<Compare>
						<NotEqual>
							<Value1>u16DataType</Value1>
							<Value2>0</Value2>
							<GotoStep>CallSi1CheckEntryDescription</GotoStep>
						</NotEqual>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="25" Param0="u16ObjectIndexInclOffset" Level="Verbose">The entry 0x{0:X4}.1 is defined as a padding entry.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>EndSi1</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="HandleNotExistingSi1">
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="26" Param0="u16ObjectIndexInclOffset" Level="Output">The entry 0x{0:X4}.1 does not exists.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>EndSi1</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CallSi1CheckEntryDescription">
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"online"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>1</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>"Real impedance"</Parameter>
						<Parameter>8</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>null</Parameter>
						<Parameter>T</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>32</Parameter>
						<Parameter>i32CurrentBitOffset</Parameter>
						<Parameter>true</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="EndSi1">
					<SetVariable Target="i32CurrentBitOffset">-1</SetVariable>
				</TestStep>
				<TestStep Name="StartSi2">
					<Description Id="27" Level="Output">Start validate SubIndex2</Description>
					<WriteLine Id="28" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : Subindex '0x{0:X}.2'</WriteLine>
				</TestStep>
				<TestStep Name="SetSi2RequiredLevel">
					<SetVariable Target="bObjectOrEntryRequiredLevel">1</SetVariable>
					<WriteLine Id="29" Param0="u16ObjectIndexInclOffset" Level="Verbose">0x{0:X4}.2 'Reactive impedance' may be available</WriteLine>
				</TestStep>
				<TestStep Name="CheckIfSi2Exists">
					<GetObjectDescription SourceDictionary="odDeviceObjectdictionary" Index="u16ObjectIndexInclOffset" SubIndex="2">
						<Type>u16DataType</Type>
					</GetObjectDescription>
					<GotoOnFailure>HandleNotExistingSi2</GotoOnFailure>
				</TestStep>
				<TestStep>
					<Compare>
						<NotEqual>
							<Value1>u16DataType</Value1>
							<Value2>0</Value2>
							<GotoStep>CallSi2CheckEntryDescription</GotoStep>
						</NotEqual>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="30" Param0="u16ObjectIndexInclOffset" Level="Verbose">The entry 0x{0:X4}.2 is defined as a padding entry.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>EndSi2</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="HandleNotExistingSi2">
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="31" Param0="u16ObjectIndexInclOffset" Level="Output">The entry 0x{0:X4}.2 does not exists.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>EndSi2</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CallSi2CheckEntryDescription">
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"online"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>2</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>"Reactive impedance"</Parameter>
						<Parameter>8</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>null</Parameter>
						<Parameter>T</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>32</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>true</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="EndSi2"></TestStep>
				<TestStep Name="CheckReservedEntryRange_3_to_255">
					<Description Id="32" Level="Output">Start check reserved entry range 3 to 255</Description>
					<CallTestFunction Name="CheckReservedEntryRange">
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>3</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>odDeviceObjectdictionary</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="ProfileLoopEnd">
					<Compare>
						<Equal>
							<Value1>bAtLeastOneModuleMatch</Value1>
							<Value2>false</Value2>
							<GotoStep>HandleAbortTestCaseOnFirstError</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="HandleAbortTestCaseOnFirstError">
					<Compare>
						<Equal>
							<Value1>bAbortTestCaseOnFirstError</Value1>
							<Value2>false</Value2>
							<GotoStep>ProfileLoopIncrement</GotoStep>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>strResult</Value1>
							<Value2>EmptyString</Value2>
							<GotoStep>ProfileLoopIncrement</GotoStep>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="33" Level="Output">Object verification for all following modules abort because an error was already detected for the current module.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>END</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="ProfileLoopIncrement">
					<SetVariable Target="u32ProfileCounter">u32ProfileCounter + 1</SetVariable>
					<Compare>
						<Greater>
							<Value1>u32CurrentProfilesLength</Value1>
							<Value2>u32ProfileCounter</Value2>
							<GotoStep>ProfileLoopStart</GotoStep>
						</Greater>
					</Compare>
				</TestStep>
				<TestStep Name="END">
					<Compare>
						<NotEqual>
							<Value1>bAtLeastOneModuleMatch</Value1>
							<Value2>true</Value2>
							<SkipCase Id="34">SKIP TEST(no module/channel supports the current profile)</SkipCase>
						</NotEqual>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bDEBUG</Value1>
							<Value2>true</Value2>
							<WriteLine Id="35" Param0="strResult" Level="Verbose">DEBUG | Result : '{0}'.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>strResult</Value1>
							<Value2>EmptyString</Value2>
							<ReturnSuccess Id="36">Test succeed</ReturnSuccess>
						</Equal>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>strResult</Value1>
							<Value2>EmptyString</Value2>
							<RaiseError Id="37"></RaiseError>
						</NotEqual>
					</Compare>
				</TestStep>
			</TestCase>
			<TestCase Name="offline | 0x600D to 0x600F (reserved range)" CaseId="27">
				<Description>
					<PreCondition>- The device profile is 5003
- The module profile is 2011
- The submodule profile is 0</PreCondition>
					<Action>- Iterate over all offline defined modules/channels and if the PreCondition matches the check if one object in the reserved range is defined</Action>
					<PostCondition>- Error if at least one object is defined</PostCondition>
					<ProposalForSolution>- Remove the defined objects
</ProposalForSolution>
					<References>
						<Reference Specification="ETG.5003.2011"></Reference>
					</References>
					<Mandatory>true</Mandatory>
				</Description>
				<TestStep Name="InitResult">
					<SetVariable Target="strResult">EmptyString</SetVariable>
				</TestStep>
				<TestStep Name="CheckIfOdAvailable">
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Mailbox</Value1>
							<Value2>false</Value2>
							<SkipCase Id="1">DuT does not support mailbox.</SkipCase>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Mailbox.CoE</Value1>
							<Value2>false</Value2>
							<SkipCase Id="2">DuT does not support CoE.</SkipCase>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep>
					<GetObjectDictionary Target="odDeviceObjectdictionary">
						<DictionaryType>Offline</DictionaryType>
					</GetObjectDictionary>
					<SkipOnFailure Id="3">No offline object dictionary defined.</SkipOnFailure>
				</TestStep>
				<TestStep>
					<GetObjectList Count="u32Tmp" Target="odDeviceObjectdictionaryList" SourceDict="odDeviceObjectdictionary"></GetObjectList>
					<Compare>
						<Equal>
							<Value1>u32Tmp</Value1>
							<Value2>0</Value2>
							<SkipCase Id="4">No offline object dictionary defined.</SkipCase>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="InitAtLeastOneProfileMatch">
					<SetVariable Target="bAtLeastOneModuleMatch">false</SetVariable>
				</TestStep>
				<TestStep Name="GetCurrentProfileList">
					<SizeOf UInt32Var="u32Tmp">arrOfflineProfiles</SizeOf>
					<Compare>
						<Equal>
							<Value1>u32Tmp</Value1>
							<Value2>0</Value2>
							<CallTestFunction Name="GetCurrentProfileList">
								<Parameter>"offline"</Parameter>
								<Parameter>"SafeOP"</Parameter>
								<OutParameter>arrOfflineProfiles</OutParameter>
							</CallTestFunction>
						</Equal>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>u32Tmp</Value1>
							<Value2>0</Value2>
							<WriteLine Id="5" Param0="arrOfflineProfiles" Level="Verbose">Use previously created profile list ({0})</WriteLine>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep>
					<SizeOf UInt32Var="u32Tmp">arrOfflineProfiles</SizeOf>
				</TestStep>
				<TestStep>
					<InitArray TargetArray="arrCurrentProfiles" Length="u32Tmp"></InitArray>
				</TestStep>
				<TestStep>
					<CopyArray>
						<SourceArray>arrOfflineProfiles</SourceArray>
						<DestinationArray>arrCurrentProfiles</DestinationArray>
						<Length>u32Tmp</Length>
					</CopyArray>
				</TestStep>
				<TestStep Name="InitProfileLoopCounter">
					<SetVariable Target="u32ProfileCounter">0</SetVariable>
				</TestStep>
				<TestStep Name="GetProfileArrayLength">
					<SizeOf UInt32Var="u32CurrentProfilesLength">arrCurrentProfiles</SizeOf>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="6" Param0="u32CurrentProfilesLength" Level="Verbose">'{0}' Profile(s) defined offline.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>u32CurrentProfilesLength</Value1>
							<Value2>0</Value2>
							<SkipCase Id="7">Skip case | no profile defined.</SkipCase>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="ProfileLoopStart">
					<GetArrayItem SourceArray="arrCurrentProfiles" Target="strTmpString" Index="u32ProfileCounter"></GetArrayItem>
				</TestStep>
				<TestStep Name="CheckProfileInformationString">
					<Compare>
						<Equal>
							<Value1>strTmpString</Value1>
							<Value2>null</Value2>
							<RaiseError Id="8" Param0="u32ProfileCounter">Profile Info element [{0}] is null.</RaiseError>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>strTmpString</Value1>
							<Value2>EmptyString</Value2>
							<RaiseError Id="9" Param0="u32ProfileCounter">Profile Info element [{0}] is an empty string.</RaiseError>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="GetDeviceProfile">
					<CallTestFunction Name="GetDeviceProfile">
						<Parameter>strTmpString</Parameter>
						<OutParameter>uint16CurDeviceProfile</OutParameter>
					</CallTestFunction>
				</TestStep>
				<TestStep Name="GetModuleProfile">
					<CallTestFunction Name="GetModuleProfile">
						<Parameter>strTmpString</Parameter>
						<OutParameter>uint16CurModuleProfile</OutParameter>
					</CallTestFunction>
				</TestStep>
				<TestStep Name="GetSubModuleProfile">
					<CallTestFunction Name="GetSubModuleProfile">
						<Parameter>strTmpString</Parameter>
						<OutParameter>uint16CurSubModuleProfile</OutParameter>
					</CallTestFunction>
				</TestStep>
				<TestStep Name="DumpProfileInfo">
					<Description Id="10" Param0="uint16CurDeviceProfile" Param1="uint16CurModuleProfile" Param2="uint16CurSubModuleProfile" Param3="u32ProfileCounter" Level="Output">Module[{3}] : DeviceProfile '{0}' ; ModuleProfile '{1}' ; SubModuleProfile '{2}'</Description>
					<Compare>
						<Equal>
							<Value1>bIgnoreProfileID</Value1>
							<Value2>true</Value2>
							<GotoStep>IndicateThatAtleastOneModuleMatch</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CompareDeviceProfile">
					<Compare>
						<NotEqual>
							<Value1>uint16CurDeviceProfile</Value1>
							<Value2>5003</Value2>
							<WriteLine Id="11" Param0="uint16CurDeviceProfile" Level="Output">Skip Profile  (Test Device Profile '5003' != Cur Device Profile '{0}')</WriteLine>
						</NotEqual>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>uint16CurDeviceProfile</Value1>
							<Value2>5003</Value2>
							<GotoStep>ProfileLoopEnd</GotoStep>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep Name="CompareModuleProfile">
					<Compare>
						<NotEqual>
							<Value1>uint16CurModuleProfile</Value1>
							<Value2>2011</Value2>
							<WriteLine Id="12" Param0="uint16CurModuleProfile" Level="Output">Skip Profile  (Test Module Profile '2011' != Cur Module Profile '{0}')</WriteLine>
						</NotEqual>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>uint16CurModuleProfile</Value1>
							<Value2>2011</Value2>
							<GotoStep>ProfileLoopEnd</GotoStep>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep Name="CompareSubModuleProfile">
					<Compare>
						<NotEqual>
							<Value1>uint16CurSubModuleProfile</Value1>
							<Value2>0</Value2>
							<WriteLine Id="13" Param0="uint16CurSubModuleProfile" Level="Output">Skip Profile  (Test SubModule Profile '0' != Cur SubModule Profile '{0}')</WriteLine>
						</NotEqual>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>uint16CurSubModuleProfile</Value1>
							<Value2>0</Value2>
							<GotoStep>ProfileLoopEnd</GotoStep>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep Name="IndicateThatAtleastOneModuleMatch">
					<SetVariable Target="bAtLeastOneModuleMatch">true</SetVariable>
				</TestStep>
				<TestStep Name="GetFirstReservedObjectIndexInlcOffset">
					<SetVariable Target="u16ObjectIndexInclOffset">#x600D + (u32ProfileCounter * #x10)</SetVariable>
					<WriteLine Id="14" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : First reserved object index '0x{0:X}'</WriteLine>
				</TestStep>
				<TestStep Name="GetNextDefinedObjectIndexInlcOffset">
					<SetVariable Target="u16NextDefObjectIndexInclOffset">#x6010 + (u32ProfileCounter * #x0010)</SetVariable>
					<WriteLine Id="15" Param0="u16NextDefObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : Next defined object index '0x{0:X}'</WriteLine>
				</TestStep>
				<TestStep Name="CallCheckReservedObjectRange">
					<Description Id="16" Level="Verbose">VerifyObject : Load 'offline' object dictionary for testing.</Description>
					<CallTestFunction Name="CheckReservedObjectRange">
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>u16NextDefObjectIndexInclOffset</Parameter>
						<Parameter>odDeviceObjectdictionary</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<GotoStep>ProfileLoopEnd</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="ProfileLoopEnd">
					<Compare>
						<Equal>
							<Value1>bAtLeastOneModuleMatch</Value1>
							<Value2>false</Value2>
							<GotoStep>HandleAbortTestCaseOnFirstError</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="HandleAbortTestCaseOnFirstError">
					<Compare>
						<Equal>
							<Value1>bAbortTestCaseOnFirstError</Value1>
							<Value2>false</Value2>
							<GotoStep>ProfileLoopIncrement</GotoStep>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>strResult</Value1>
							<Value2>EmptyString</Value2>
							<GotoStep>ProfileLoopIncrement</GotoStep>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="17" Level="Output">Object verification for all following modules abort because an error was already detected for the current module.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>END</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="ProfileLoopIncrement">
					<SetVariable Target="u32ProfileCounter">u32ProfileCounter + 1</SetVariable>
					<Compare>
						<Greater>
							<Value1>u32CurrentProfilesLength</Value1>
							<Value2>u32ProfileCounter</Value2>
							<GotoStep>ProfileLoopStart</GotoStep>
						</Greater>
					</Compare>
				</TestStep>
				<TestStep Name="END">
					<Compare>
						<NotEqual>
							<Value1>bAtLeastOneModuleMatch</Value1>
							<Value2>true</Value2>
							<SkipCase Id="18">SKIP TEST(no module/channel supports the current profile)</SkipCase>
						</NotEqual>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bDEBUG</Value1>
							<Value2>true</Value2>
							<WriteLine Id="19" Param0="strResult" Level="Verbose">DEBUG | Result : '{0}'.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>strResult</Value1>
							<Value2>EmptyString</Value2>
							<ReturnSuccess Id="20">Test succeed</ReturnSuccess>
						</Equal>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>strResult</Value1>
							<Value2>EmptyString</Value2>
							<RaiseError Id="21"></RaiseError>
						</NotEqual>
					</Compare>
				</TestStep>
			</TestCase>
			<TestCase Name="online | 0x600D to 0x600F (reserved range)" CaseId="28">
				<Description>
					<PreCondition>- The device profile is 5003
- The module profile is 2011
- The submodule profile is 0</PreCondition>
					<Action>- Iterate over all online defined modules/channels and if the PreCondition matches the check if one object in the reserved range is defined</Action>
					<PostCondition>- Error if at least one object is defined</PostCondition>
					<ProposalForSolution>- Remove the defined objects
</ProposalForSolution>
					<References>
						<Reference Specification="ETG.5003.2011"></Reference>
					</References>
					<Mandatory>true</Mandatory>
				</Description>
				<TestStep Name="InitResult">
					<SetVariable Target="strResult">EmptyString</SetVariable>
				</TestStep>
				<TestStep Name="CheckIfOdAvailable">
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Mailbox</Value1>
							<Value2>false</Value2>
							<SkipCase Id="1">DuT does not support mailbox.</SkipCase>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Mailbox.CoE</Value1>
							<Value2>false</Value2>
							<SkipCase Id="2">DuT does not support CoE.</SkipCase>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Mailbox.CoE.SdoInfo</Value1>
							<Value2>false</Value2>
							<SkipCase Id="3">DuT does not support SDO Info.</SkipCase>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="InitAtLeastOneProfileMatch">
					<SetVariable Target="bAtLeastOneModuleMatch">false</SetVariable>
				</TestStep>
				<TestStep Name="GetCurrentProfileList">
					<SizeOf UInt32Var="u32Tmp">arrOnlineProfiles</SizeOf>
					<Compare>
						<Equal>
							<Value1>u32Tmp</Value1>
							<Value2>0</Value2>
							<CallTestFunction Name="GetCurrentProfileList">
								<Parameter>"online"</Parameter>
								<Parameter>"SafeOP"</Parameter>
								<OutParameter>arrOnlineProfiles</OutParameter>
							</CallTestFunction>
						</Equal>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>u32Tmp</Value1>
							<Value2>0</Value2>
							<WriteLine Id="4" Param0="arrOnlineProfiles" Level="Verbose">Use previously created profile list ({0})</WriteLine>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep>
					<SizeOf UInt32Var="u32Tmp">arrOnlineProfiles</SizeOf>
				</TestStep>
				<TestStep>
					<InitArray TargetArray="arrCurrentProfiles" Length="u32Tmp"></InitArray>
				</TestStep>
				<TestStep>
					<CopyArray>
						<SourceArray>arrOnlineProfiles</SourceArray>
						<DestinationArray>arrCurrentProfiles</DestinationArray>
						<Length>u32Tmp</Length>
					</CopyArray>
				</TestStep>
				<TestStep Name="InitProfileLoopCounter">
					<SetVariable Target="u32ProfileCounter">0</SetVariable>
				</TestStep>
				<TestStep Name="GetProfileArrayLength">
					<SizeOf UInt32Var="u32CurrentProfilesLength">arrCurrentProfiles</SizeOf>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="5" Param0="u32CurrentProfilesLength" Level="Verbose">'{0}' Profile(s) defined online.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>u32CurrentProfilesLength</Value1>
							<Value2>0</Value2>
							<SkipCase Id="6">Skip case | no profile defined.</SkipCase>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="ProfileLoopStart">
					<GetArrayItem SourceArray="arrCurrentProfiles" Target="strTmpString" Index="u32ProfileCounter"></GetArrayItem>
				</TestStep>
				<TestStep Name="CheckProfileInformationString">
					<Compare>
						<Equal>
							<Value1>strTmpString</Value1>
							<Value2>null</Value2>
							<RaiseError Id="7" Param0="u32ProfileCounter">Profile Info element [{0}] is null.</RaiseError>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>strTmpString</Value1>
							<Value2>EmptyString</Value2>
							<RaiseError Id="8" Param0="u32ProfileCounter">Profile Info element [{0}] is an empty string.</RaiseError>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="GetDeviceProfile">
					<CallTestFunction Name="GetDeviceProfile">
						<Parameter>strTmpString</Parameter>
						<OutParameter>uint16CurDeviceProfile</OutParameter>
					</CallTestFunction>
				</TestStep>
				<TestStep Name="GetModuleProfile">
					<CallTestFunction Name="GetModuleProfile">
						<Parameter>strTmpString</Parameter>
						<OutParameter>uint16CurModuleProfile</OutParameter>
					</CallTestFunction>
				</TestStep>
				<TestStep Name="GetSubModuleProfile">
					<CallTestFunction Name="GetSubModuleProfile">
						<Parameter>strTmpString</Parameter>
						<OutParameter>uint16CurSubModuleProfile</OutParameter>
					</CallTestFunction>
				</TestStep>
				<TestStep Name="DumpProfileInfo">
					<Description Id="9" Param0="uint16CurDeviceProfile" Param1="uint16CurModuleProfile" Param2="uint16CurSubModuleProfile" Param3="u32ProfileCounter" Level="Output">Module[{3}] : DeviceProfile '{0}' ; ModuleProfile '{1}' ; SubModuleProfile '{2}'</Description>
					<Compare>
						<Equal>
							<Value1>bIgnoreProfileID</Value1>
							<Value2>true</Value2>
							<GotoStep>IndicateThatAtleastOneModuleMatch</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CompareDeviceProfile">
					<Compare>
						<NotEqual>
							<Value1>uint16CurDeviceProfile</Value1>
							<Value2>5003</Value2>
							<WriteLine Id="10" Param0="uint16CurDeviceProfile" Level="Output">Skip Profile  (Test Device Profile '5003' != Cur Device Profile '{0}')</WriteLine>
						</NotEqual>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>uint16CurDeviceProfile</Value1>
							<Value2>5003</Value2>
							<GotoStep>ProfileLoopEnd</GotoStep>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep Name="CompareModuleProfile">
					<Compare>
						<NotEqual>
							<Value1>uint16CurModuleProfile</Value1>
							<Value2>2011</Value2>
							<WriteLine Id="11" Param0="uint16CurModuleProfile" Level="Output">Skip Profile  (Test Module Profile '2011' != Cur Module Profile '{0}')</WriteLine>
						</NotEqual>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>uint16CurModuleProfile</Value1>
							<Value2>2011</Value2>
							<GotoStep>ProfileLoopEnd</GotoStep>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep Name="CompareSubModuleProfile">
					<Compare>
						<NotEqual>
							<Value1>uint16CurSubModuleProfile</Value1>
							<Value2>0</Value2>
							<WriteLine Id="12" Param0="uint16CurSubModuleProfile" Level="Output">Skip Profile  (Test SubModule Profile '0' != Cur SubModule Profile '{0}')</WriteLine>
						</NotEqual>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>uint16CurSubModuleProfile</Value1>
							<Value2>0</Value2>
							<GotoStep>ProfileLoopEnd</GotoStep>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep Name="IndicateThatAtleastOneModuleMatch">
					<SetVariable Target="bAtLeastOneModuleMatch">true</SetVariable>
				</TestStep>
				<TestStep Name="GetFirstReservedObjectIndexInlcOffset">
					<SetVariable Target="u16ObjectIndexInclOffset">#x600D + (u32ProfileCounter * #x10)</SetVariable>
					<WriteLine Id="13" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : First reserved object index '0x{0:X}'</WriteLine>
				</TestStep>
				<TestStep Name="GetNextDefinedObjectIndexInlcOffset">
					<SetVariable Target="u16NextDefObjectIndexInclOffset">#x6010 + (u32ProfileCounter * #x0010)</SetVariable>
					<WriteLine Id="14" Param0="u16NextDefObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : Next defined object index '0x{0:X}'</WriteLine>
				</TestStep>
				<TestStep Name="CallCheckReservedObjectRange">
					<Description Id="15" Level="Verbose">VerifyObject : Load 'online' object dictionary for testing.</Description>
					<CallTestFunction Name="CheckReservedObjectRange">
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>u16NextDefObjectIndexInclOffset</Parameter>
						<Parameter>odDeviceObjectdictionary</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<GotoStep>ProfileLoopEnd</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="ProfileLoopEnd">
					<Compare>
						<Equal>
							<Value1>bAtLeastOneModuleMatch</Value1>
							<Value2>false</Value2>
							<GotoStep>HandleAbortTestCaseOnFirstError</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="HandleAbortTestCaseOnFirstError">
					<Compare>
						<Equal>
							<Value1>bAbortTestCaseOnFirstError</Value1>
							<Value2>false</Value2>
							<GotoStep>ProfileLoopIncrement</GotoStep>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>strResult</Value1>
							<Value2>EmptyString</Value2>
							<GotoStep>ProfileLoopIncrement</GotoStep>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="16" Level="Output">Object verification for all following modules abort because an error was already detected for the current module.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>END</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="ProfileLoopIncrement">
					<SetVariable Target="u32ProfileCounter">u32ProfileCounter + 1</SetVariable>
					<Compare>
						<Greater>
							<Value1>u32CurrentProfilesLength</Value1>
							<Value2>u32ProfileCounter</Value2>
							<GotoStep>ProfileLoopStart</GotoStep>
						</Greater>
					</Compare>
				</TestStep>
				<TestStep Name="END">
					<Compare>
						<NotEqual>
							<Value1>bAtLeastOneModuleMatch</Value1>
							<Value2>true</Value2>
							<SkipCase Id="17">SKIP TEST(no module/channel supports the current profile)</SkipCase>
						</NotEqual>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bDEBUG</Value1>
							<Value2>true</Value2>
							<WriteLine Id="18" Param0="strResult" Level="Verbose">DEBUG | Result : '{0}'.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>strResult</Value1>
							<Value2>EmptyString</Value2>
							<ReturnSuccess Id="19">Test succeed</ReturnSuccess>
						</Equal>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>strResult</Value1>
							<Value2>EmptyString</Value2>
							<RaiseError Id="20"></RaiseError>
						</NotEqual>
					</Compare>
				</TestStep>
			</TestCase>
		</TestGroup>
		<TestGroup Name="Verify objects 0x7nn0 - 0x7nnF (Output Data of the Modules)" GroupId="3">
			<TestCase Name="offline | 0x7000 (Device Control)" CaseId="1">
				<Description>
					<PreCondition>- The device profile is 5003
- The module profile is 2011
- The submodule profile is 0</PreCondition>
					<Action>- Iterate over all offline defined modules/channels and if the PreCondition matches the following operations are done:
- Get the offline description of object 0x7000(+module specific offset) 'Device Control' and all entries
 Check:
    (Name)
    BitSize
    DataType
    Rx / Tx mappable
    Default Data
    MinData
    Flags       </Action>
					<PostCondition>Error if
- mandatory object / entry is not defined
- an optional object exists and the entries are invalid
- Object / entry description does not match with the specification</PostCondition>
					<ProposalForSolution>- Define the missing objects
- correct object / entry description</ProposalForSolution>
					<References>
						<Reference Specification="ETG.5003.2011"></Reference>
					</References>
					<Mandatory>true</Mandatory>
				</Description>
				<TestStep Name="InitResult">
					<SetVariable Target="strResult">EmptyString</SetVariable>
				</TestStep>
				<TestStep Name="CheckIfOdAvailable">
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Mailbox</Value1>
							<Value2>false</Value2>
							<SkipCase Id="1">DuT does not support mailbox.</SkipCase>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Mailbox.CoE</Value1>
							<Value2>false</Value2>
							<SkipCase Id="2">DuT does not support CoE.</SkipCase>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep>
					<GetObjectDictionary Target="odDeviceObjectdictionary">
						<DictionaryType>Offline</DictionaryType>
					</GetObjectDictionary>
					<SkipOnFailure Id="3">No offline object dictionary defined.</SkipOnFailure>
				</TestStep>
				<TestStep>
					<GetObjectList Count="u32Tmp" Target="odDeviceObjectdictionaryList" SourceDict="odDeviceObjectdictionary"></GetObjectList>
					<Compare>
						<Equal>
							<Value1>u32Tmp</Value1>
							<Value2>0</Value2>
							<SkipCase Id="4">No offline object dictionary defined.</SkipCase>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="InitAtLeastOneProfileMatch">
					<SetVariable Target="bAtLeastOneModuleMatch">false</SetVariable>
				</TestStep>
				<TestStep Name="GetCurrentProfileList">
					<SizeOf UInt32Var="u32Tmp">arrOfflineProfiles</SizeOf>
					<Compare>
						<Equal>
							<Value1>u32Tmp</Value1>
							<Value2>0</Value2>
							<CallTestFunction Name="GetCurrentProfileList">
								<Parameter>"offline"</Parameter>
								<Parameter>"SafeOP"</Parameter>
								<OutParameter>arrOfflineProfiles</OutParameter>
							</CallTestFunction>
						</Equal>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>u32Tmp</Value1>
							<Value2>0</Value2>
							<WriteLine Id="5" Param0="arrOfflineProfiles" Level="Verbose">Use previously created profile list ({0})</WriteLine>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep>
					<SizeOf UInt32Var="u32Tmp">arrOfflineProfiles</SizeOf>
				</TestStep>
				<TestStep>
					<InitArray TargetArray="arrCurrentProfiles" Length="u32Tmp"></InitArray>
				</TestStep>
				<TestStep>
					<CopyArray>
						<SourceArray>arrOfflineProfiles</SourceArray>
						<DestinationArray>arrCurrentProfiles</DestinationArray>
						<Length>u32Tmp</Length>
					</CopyArray>
				</TestStep>
				<TestStep Name="InitProfileLoopCounter">
					<SetVariable Target="u32ProfileCounter">0</SetVariable>
				</TestStep>
				<TestStep Name="GetProfileArrayLength">
					<SizeOf UInt32Var="u32CurrentProfilesLength">arrCurrentProfiles</SizeOf>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="6" Param0="u32CurrentProfilesLength" Level="Verbose">'{0}' Profile(s) defined offline.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>u32CurrentProfilesLength</Value1>
							<Value2>0</Value2>
							<SkipCase Id="7">Skip case | no profile defined.</SkipCase>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="ProfileLoopStart">
					<GetArrayItem SourceArray="arrCurrentProfiles" Target="strTmpString" Index="u32ProfileCounter"></GetArrayItem>
				</TestStep>
				<TestStep Name="CheckProfileInformationString">
					<Compare>
						<Equal>
							<Value1>strTmpString</Value1>
							<Value2>null</Value2>
							<RaiseError Id="8" Param0="u32ProfileCounter">Profile Info element [{0}] is null.</RaiseError>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>strTmpString</Value1>
							<Value2>EmptyString</Value2>
							<RaiseError Id="9" Param0="u32ProfileCounter">Profile Info element [{0}] is an empty string.</RaiseError>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="GetDeviceProfile">
					<CallTestFunction Name="GetDeviceProfile">
						<Parameter>strTmpString</Parameter>
						<OutParameter>uint16CurDeviceProfile</OutParameter>
					</CallTestFunction>
				</TestStep>
				<TestStep Name="GetModuleProfile">
					<CallTestFunction Name="GetModuleProfile">
						<Parameter>strTmpString</Parameter>
						<OutParameter>uint16CurModuleProfile</OutParameter>
					</CallTestFunction>
				</TestStep>
				<TestStep Name="GetSubModuleProfile">
					<CallTestFunction Name="GetSubModuleProfile">
						<Parameter>strTmpString</Parameter>
						<OutParameter>uint16CurSubModuleProfile</OutParameter>
					</CallTestFunction>
				</TestStep>
				<TestStep Name="DumpProfileInfo">
					<Description Id="10" Param0="uint16CurDeviceProfile" Param1="uint16CurModuleProfile" Param2="uint16CurSubModuleProfile" Param3="u32ProfileCounter" Level="Output">Module[{3}] : DeviceProfile '{0}' ; ModuleProfile '{1}' ; SubModuleProfile '{2}'</Description>
					<Compare>
						<Equal>
							<Value1>bIgnoreProfileID</Value1>
							<Value2>true</Value2>
							<GotoStep>IndicateThatAtleastOneModuleMatch</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CompareDeviceProfile">
					<Compare>
						<NotEqual>
							<Value1>uint16CurDeviceProfile</Value1>
							<Value2>5003</Value2>
							<WriteLine Id="11" Param0="uint16CurDeviceProfile" Level="Output">Skip Profile  (Test Device Profile '5003' != Cur Device Profile '{0}')</WriteLine>
						</NotEqual>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>uint16CurDeviceProfile</Value1>
							<Value2>5003</Value2>
							<GotoStep>ProfileLoopEnd</GotoStep>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep Name="CompareModuleProfile">
					<Compare>
						<NotEqual>
							<Value1>uint16CurModuleProfile</Value1>
							<Value2>2011</Value2>
							<WriteLine Id="12" Param0="uint16CurModuleProfile" Level="Output">Skip Profile  (Test Module Profile '2011' != Cur Module Profile '{0}')</WriteLine>
						</NotEqual>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>uint16CurModuleProfile</Value1>
							<Value2>2011</Value2>
							<GotoStep>ProfileLoopEnd</GotoStep>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep Name="CompareSubModuleProfile">
					<Compare>
						<NotEqual>
							<Value1>uint16CurSubModuleProfile</Value1>
							<Value2>0</Value2>
							<WriteLine Id="13" Param0="uint16CurSubModuleProfile" Level="Output">Skip Profile  (Test SubModule Profile '0' != Cur SubModule Profile '{0}')</WriteLine>
						</NotEqual>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>uint16CurSubModuleProfile</Value1>
							<Value2>0</Value2>
							<GotoStep>ProfileLoopEnd</GotoStep>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep Name="IndicateThatAtleastOneModuleMatch">
					<SetVariable Target="bAtLeastOneModuleMatch">true</SetVariable>
				</TestStep>
				<TestStep Name="GetObjectIndexInclOffset">
					<SetVariable Target="u16ObjectIndexInclOffset">#x7000 + (u32ProfileCounter * #x10)</SetVariable>
					<WriteLine Id="14" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : ObjectIndex '0x{0:X}'</WriteLine>
				</TestStep>
				<TestStep Name="LoadDeviceObjectDictionary">
					<Description Id="15" Level="Verbose">Load 'offline' object dictionary for testing.</Description>
					<GetObjectDictionary Target="odDeviceObjectdictionary">
						<DictionaryType>Offline</DictionaryType>
					</GetObjectDictionary>
					<RaiseErrorOnFailure Id="16">VerifyObject : failed to load offline object dictionary.</RaiseErrorOnFailure>
				</TestStep>
				<TestStep Name="CallCheckObjectDescription">
					<Description Id="17" Param0="u16ObjectIndexInclOffset" Level="Output">Verify the object description 0x{0:X4} 'Device Control'.</Description>
					<CallTestFunction Name="CheckObjectDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"offline"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>"Device Control"</Parameter>
						<Parameter>null</Parameter>
						<Parameter>9</Parameter>
						<Parameter>-1</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<GotoStep>ProfileLoopEnd</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="InitEntryBittOffset">
					<SetVariable Target="i32CurrentBitOffset">0</SetVariable>
				</TestStep>
				<TestStep Name="StartSi0">
					<Description Id="18" Level="Output">Start validate SubIndex0</Description>
					<WriteLine Id="19" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : Subindex '0x{0:X}.0'</WriteLine>
				</TestStep>
				<TestStep Name="CallSi0CheckEntryDescription">
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"offline"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>0</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>null</Parameter>
						<Parameter>5</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>null</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>null</Parameter>
						<Parameter>null</Parameter>
						<Parameter>null</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>8</Parameter>
						<Parameter>i32CurrentBitOffset</Parameter>
						<Parameter>true</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="EndSi0">
					<SetVariable Target="i32CurrentBitOffset">16</SetVariable>
				</TestStep>
				<TestStep Name="StartSi1">
					<Description Id="20" Level="Output">Start validate SubIndex1</Description>
					<WriteLine Id="21" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : Subindex '0x{0:X}.1'</WriteLine>
				</TestStep>
				<TestStep Name="CallSi1CheckEntryDescription">
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"offline"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>1</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>"RF ON Request"</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>null</Parameter>
						<Parameter>R</Parameter>
						<Parameter>00</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>i32CurrentBitOffset</Parameter>
						<Parameter>true</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="EndSi1">
					<SetVariable Target="i32CurrentBitOffset">i32CurrentBitOffset + 1</SetVariable>
				</TestStep>
				<TestStep Name="StartSi2">
					<Description Id="22" Level="Output">Start validate SubIndex2</Description>
					<WriteLine Id="23" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : Subindex '0x{0:X}.2'</WriteLine>
				</TestStep>
				<TestStep Name="CallSi2CheckEntryDescription">
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"offline"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>2</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>"Error Reset"</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>null</Parameter>
						<Parameter>R</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>i32CurrentBitOffset</Parameter>
						<Parameter>true</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="EndSi2">
					<SetVariable Target="i32CurrentBitOffset">i32CurrentBitOffset + 1</SetVariable>
				</TestStep>
				<TestStep Name="CheckReservedEntryRange_3_to_14">
					<Description Id="24" Level="Output">Start check reserved entry range 3 to 14</Description>
					<CallTestFunction Name="CheckReservedEntryRange">
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>3</Parameter>
						<Parameter>15</Parameter>
						<Parameter>odDeviceObjectdictionary</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>i32CurrentBitOffset</Value1>
							<Value2>-1</Value2>
							<SetVariable Target="i32CurrentBitOffset">i32CurrentBitOffset + 12</SetVariable>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep Name="StartSi15">
					<Description Id="25" Level="Output">Start validate SubIndex15</Description>
					<WriteLine Id="26" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : Subindex '0x{0:X}.15'</WriteLine>
				</TestStep>
				<TestStep Name="SetSi15RequiredLevel">
					<SetVariable Target="bObjectOrEntryRequiredLevel">1</SetVariable>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<CallTestFunction Name="IsDcSupported">
								<OutParameter>bConditionTrue</OutParameter>
							</CallTestFunction>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bConditionTrue</Value1>
							<Value2>true</Value2>
							<SetVariable Target="bObjectOrEntryRequiredLevel">3</SetVariable>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>3</Value2>
							<WriteLine Id="27" Param0="u16ObjectIndexInclOffset" Level="Verbose">0x{0:X4}.15 'Output Cycle Counter' shall be available (DC is supported)</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>1</Value2>
							<WriteLine Id="28" Param0="u16ObjectIndexInclOffset" Level="Verbose">0x{0:X4}.15 'Output Cycle Counter' may be available (DC is not supported)</WriteLine>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CheckIfSi15Exists">
					<GetObjectDescription SourceDictionary="odDeviceObjectdictionary" Index="u16ObjectIndexInclOffset" SubIndex="15">
						<Type>u16DataType</Type>
					</GetObjectDescription>
					<GotoOnFailure>HandleNotExistingSi15</GotoOnFailure>
				</TestStep>
				<TestStep>
					<Compare>
						<NotEqual>
							<Value1>u16DataType</Value1>
							<Value2>0</Value2>
							<GotoStep>CallSi15CheckEntryDescription</GotoStep>
						</NotEqual>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>1</Value2>
							<WriteLine Id="29" Param0="u16ObjectIndexInclOffset" Level="Verbose">The entry 0x{0:X4}.15 is defined as a padding entry.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>3</Value2>
							<WriteLine Id="30" Param0="u16ObjectIndexInclOffset" Level="Error">The entry 0x{0:X4}.15 shall not defined as a padding entry.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>3</Value2>
							<SetVariable Target="strResult" Param0="u16ObjectIndexInclOffset">The entry 0x{0:X4}.15 shall not defined as a padding entry.</SetVariable>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>EndSi15</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="HandleNotExistingSi15">
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>3</Value2>
							<SetVariable Target="strResult" Param0="u16ObjectIndexInclOffset">The entry 0x{0:X4}.15 does not exists.</SetVariable>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>3</Value2>
							<WriteLine Id="31" Param0="u16ObjectIndexInclOffset" Level="Error">The entry 0x{0:X4}.15 does not exists.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>3</Value2>
							<GotoStep>EndSi15</GotoStep>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="32" Param0="u16ObjectIndexInclOffset" Level="Output">The entry 0x{0:X4}.15 does not exists.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>EndSi15</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CallSi15CheckEntryDescription">
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"offline"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>15</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>"Output Cycle Counter"</Parameter>
						<Parameter>49</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>null</Parameter>
						<Parameter>R</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>2</Parameter>
						<Parameter>i32CurrentBitOffset</Parameter>
						<Parameter>true</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="EndSi15">
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>3</Value2>
							<SetVariable Target="i32CurrentBitOffset">i32CurrentBitOffset + 2</SetVariable>
						</Equal>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>3</Value2>
							<SetVariable Target="i32CurrentBitOffset">-1</SetVariable>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep Name="CheckReservedEntryRange_16_to_255">
					<Description Id="33" Level="Output">Start check reserved entry range 16 to 255</Description>
					<CallTestFunction Name="CheckReservedEntryRange">
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>16</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>odDeviceObjectdictionary</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="ProfileLoopEnd">
					<Compare>
						<Equal>
							<Value1>bAtLeastOneModuleMatch</Value1>
							<Value2>false</Value2>
							<GotoStep>HandleAbortTestCaseOnFirstError</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="HandleAbortTestCaseOnFirstError">
					<Compare>
						<Equal>
							<Value1>bAbortTestCaseOnFirstError</Value1>
							<Value2>false</Value2>
							<GotoStep>ProfileLoopIncrement</GotoStep>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>strResult</Value1>
							<Value2>EmptyString</Value2>
							<GotoStep>ProfileLoopIncrement</GotoStep>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="34" Level="Output">Object verification for all following modules abort because an error was already detected for the current module.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>END</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="ProfileLoopIncrement">
					<SetVariable Target="u32ProfileCounter">u32ProfileCounter + 1</SetVariable>
					<Compare>
						<Greater>
							<Value1>u32CurrentProfilesLength</Value1>
							<Value2>u32ProfileCounter</Value2>
							<GotoStep>ProfileLoopStart</GotoStep>
						</Greater>
					</Compare>
				</TestStep>
				<TestStep Name="END">
					<Compare>
						<NotEqual>
							<Value1>bAtLeastOneModuleMatch</Value1>
							<Value2>true</Value2>
							<SkipCase Id="35">SKIP TEST(no module/channel supports the current profile)</SkipCase>
						</NotEqual>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bDEBUG</Value1>
							<Value2>true</Value2>
							<WriteLine Id="36" Param0="strResult" Level="Verbose">DEBUG | Result : '{0}'.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>strResult</Value1>
							<Value2>EmptyString</Value2>
							<ReturnSuccess Id="37">Test succeed</ReturnSuccess>
						</Equal>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>strResult</Value1>
							<Value2>EmptyString</Value2>
							<RaiseError Id="38"></RaiseError>
						</NotEqual>
					</Compare>
				</TestStep>
			</TestCase>
			<TestCase Name="online | 0x7000 (Device Control)" CaseId="2">
				<Description>
					<PreCondition>- The device profile is 5003
- The module profile is 2011
- The submodule profile is 0</PreCondition>
					<Action>- Iterate over all online defined modules/channels and if the PreCondition matches the following operations are done:
- Get the online description of object 0x7000(+module specific offset) 'Device Control' and all entries
 Check:
    (Name)
    BitSize
    DataType
    Rx / Tx mappable
    Default Data
    MinData
    Flags       </Action>
					<PostCondition>Error if
- mandatory object / entry is not defined
- an optional object exists and the entries are invalid
- Object / entry description does not match with the specification</PostCondition>
					<ProposalForSolution>- Define the missing objects
- correct object / entry description</ProposalForSolution>
					<References>
						<Reference Specification="ETG.5003.2011"></Reference>
					</References>
					<Mandatory>true</Mandatory>
				</Description>
				<TestStep Name="InitResult">
					<SetVariable Target="strResult">EmptyString</SetVariable>
				</TestStep>
				<TestStep Name="CheckIfOdAvailable">
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Mailbox</Value1>
							<Value2>false</Value2>
							<SkipCase Id="1">DuT does not support mailbox.</SkipCase>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Mailbox.CoE</Value1>
							<Value2>false</Value2>
							<SkipCase Id="2">DuT does not support CoE.</SkipCase>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Mailbox.CoE.SdoInfo</Value1>
							<Value2>false</Value2>
							<SkipCase Id="3">DuT does not support SDO Info.</SkipCase>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="InitAtLeastOneProfileMatch">
					<SetVariable Target="bAtLeastOneModuleMatch">false</SetVariable>
				</TestStep>
				<TestStep Name="GetCurrentProfileList">
					<SizeOf UInt32Var="u32Tmp">arrOnlineProfiles</SizeOf>
					<Compare>
						<Equal>
							<Value1>u32Tmp</Value1>
							<Value2>0</Value2>
							<CallTestFunction Name="GetCurrentProfileList">
								<Parameter>"online"</Parameter>
								<Parameter>"SafeOP"</Parameter>
								<OutParameter>arrOnlineProfiles</OutParameter>
							</CallTestFunction>
						</Equal>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>u32Tmp</Value1>
							<Value2>0</Value2>
							<WriteLine Id="4" Param0="arrOnlineProfiles" Level="Verbose">Use previously created profile list ({0})</WriteLine>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep>
					<SizeOf UInt32Var="u32Tmp">arrOnlineProfiles</SizeOf>
				</TestStep>
				<TestStep>
					<InitArray TargetArray="arrCurrentProfiles" Length="u32Tmp"></InitArray>
				</TestStep>
				<TestStep>
					<CopyArray>
						<SourceArray>arrOnlineProfiles</SourceArray>
						<DestinationArray>arrCurrentProfiles</DestinationArray>
						<Length>u32Tmp</Length>
					</CopyArray>
				</TestStep>
				<TestStep Name="InitProfileLoopCounter">
					<SetVariable Target="u32ProfileCounter">0</SetVariable>
				</TestStep>
				<TestStep Name="GetProfileArrayLength">
					<SizeOf UInt32Var="u32CurrentProfilesLength">arrCurrentProfiles</SizeOf>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="5" Param0="u32CurrentProfilesLength" Level="Verbose">'{0}' Profile(s) defined online.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>u32CurrentProfilesLength</Value1>
							<Value2>0</Value2>
							<SkipCase Id="6">Skip case | no profile defined.</SkipCase>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="ProfileLoopStart">
					<GetArrayItem SourceArray="arrCurrentProfiles" Target="strTmpString" Index="u32ProfileCounter"></GetArrayItem>
				</TestStep>
				<TestStep Name="CheckProfileInformationString">
					<Compare>
						<Equal>
							<Value1>strTmpString</Value1>
							<Value2>null</Value2>
							<RaiseError Id="7" Param0="u32ProfileCounter">Profile Info element [{0}] is null.</RaiseError>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>strTmpString</Value1>
							<Value2>EmptyString</Value2>
							<RaiseError Id="8" Param0="u32ProfileCounter">Profile Info element [{0}] is an empty string.</RaiseError>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="GetDeviceProfile">
					<CallTestFunction Name="GetDeviceProfile">
						<Parameter>strTmpString</Parameter>
						<OutParameter>uint16CurDeviceProfile</OutParameter>
					</CallTestFunction>
				</TestStep>
				<TestStep Name="GetModuleProfile">
					<CallTestFunction Name="GetModuleProfile">
						<Parameter>strTmpString</Parameter>
						<OutParameter>uint16CurModuleProfile</OutParameter>
					</CallTestFunction>
				</TestStep>
				<TestStep Name="GetSubModuleProfile">
					<CallTestFunction Name="GetSubModuleProfile">
						<Parameter>strTmpString</Parameter>
						<OutParameter>uint16CurSubModuleProfile</OutParameter>
					</CallTestFunction>
				</TestStep>
				<TestStep Name="DumpProfileInfo">
					<Description Id="9" Param0="uint16CurDeviceProfile" Param1="uint16CurModuleProfile" Param2="uint16CurSubModuleProfile" Param3="u32ProfileCounter" Level="Output">Module[{3}] : DeviceProfile '{0}' ; ModuleProfile '{1}' ; SubModuleProfile '{2}'</Description>
					<Compare>
						<Equal>
							<Value1>bIgnoreProfileID</Value1>
							<Value2>true</Value2>
							<GotoStep>IndicateThatAtleastOneModuleMatch</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CompareDeviceProfile">
					<Compare>
						<NotEqual>
							<Value1>uint16CurDeviceProfile</Value1>
							<Value2>5003</Value2>
							<WriteLine Id="10" Param0="uint16CurDeviceProfile" Level="Output">Skip Profile  (Test Device Profile '5003' != Cur Device Profile '{0}')</WriteLine>
						</NotEqual>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>uint16CurDeviceProfile</Value1>
							<Value2>5003</Value2>
							<GotoStep>ProfileLoopEnd</GotoStep>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep Name="CompareModuleProfile">
					<Compare>
						<NotEqual>
							<Value1>uint16CurModuleProfile</Value1>
							<Value2>2011</Value2>
							<WriteLine Id="11" Param0="uint16CurModuleProfile" Level="Output">Skip Profile  (Test Module Profile '2011' != Cur Module Profile '{0}')</WriteLine>
						</NotEqual>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>uint16CurModuleProfile</Value1>
							<Value2>2011</Value2>
							<GotoStep>ProfileLoopEnd</GotoStep>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep Name="CompareSubModuleProfile">
					<Compare>
						<NotEqual>
							<Value1>uint16CurSubModuleProfile</Value1>
							<Value2>0</Value2>
							<WriteLine Id="12" Param0="uint16CurSubModuleProfile" Level="Output">Skip Profile  (Test SubModule Profile '0' != Cur SubModule Profile '{0}')</WriteLine>
						</NotEqual>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>uint16CurSubModuleProfile</Value1>
							<Value2>0</Value2>
							<GotoStep>ProfileLoopEnd</GotoStep>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep Name="IndicateThatAtleastOneModuleMatch">
					<SetVariable Target="bAtLeastOneModuleMatch">true</SetVariable>
				</TestStep>
				<TestStep Name="GetObjectIndexInclOffset">
					<SetVariable Target="u16ObjectIndexInclOffset">#x7000 + (u32ProfileCounter * #x10)</SetVariable>
					<WriteLine Id="13" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : ObjectIndex '0x{0:X}'</WriteLine>
				</TestStep>
				<TestStep Name="LoadDeviceObjectDictionary">
					<Description Id="14" Level="Verbose">Load 'online' object dictionary for testing.</Description>
					<GetObjectDictionary Target="odDeviceObjectdictionary">
						<DictionaryType>Online</DictionaryType>
					</GetObjectDictionary>
					<RaiseErrorOnFailure Id="15">VerifyObject : failed to load online object dictionary.</RaiseErrorOnFailure>
				</TestStep>
				<TestStep Name="CallCheckObjectDescription">
					<Description Id="16" Param0="u16ObjectIndexInclOffset" Level="Output">Verify the object description 0x{0:X4} 'Device Control'.</Description>
					<CallTestFunction Name="CheckObjectDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"online"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>"Device Control"</Parameter>
						<Parameter>null</Parameter>
						<Parameter>9</Parameter>
						<Parameter>-1</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<GotoStep>ProfileLoopEnd</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="InitEntryBittOffset">
					<SetVariable Target="i32CurrentBitOffset">0</SetVariable>
				</TestStep>
				<TestStep Name="StartSi0">
					<Description Id="17" Level="Output">Start validate SubIndex0</Description>
					<WriteLine Id="18" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : Subindex '0x{0:X}.0'</WriteLine>
				</TestStep>
				<TestStep Name="CallSi0CheckEntryDescription">
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"online"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>0</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>null</Parameter>
						<Parameter>5</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>null</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>null</Parameter>
						<Parameter>null</Parameter>
						<Parameter>null</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>8</Parameter>
						<Parameter>i32CurrentBitOffset</Parameter>
						<Parameter>true</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="EndSi0">
					<SetVariable Target="i32CurrentBitOffset">16</SetVariable>
				</TestStep>
				<TestStep Name="StartSi1">
					<Description Id="19" Level="Output">Start validate SubIndex1</Description>
					<WriteLine Id="20" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : Subindex '0x{0:X}.1'</WriteLine>
				</TestStep>
				<TestStep Name="CallSi1CheckEntryDescription">
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"online"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>1</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>"RF ON Request"</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>null</Parameter>
						<Parameter>R</Parameter>
						<Parameter>00</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>i32CurrentBitOffset</Parameter>
						<Parameter>true</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="EndSi1">
					<SetVariable Target="i32CurrentBitOffset">i32CurrentBitOffset + 1</SetVariable>
				</TestStep>
				<TestStep Name="StartSi2">
					<Description Id="21" Level="Output">Start validate SubIndex2</Description>
					<WriteLine Id="22" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : Subindex '0x{0:X}.2'</WriteLine>
				</TestStep>
				<TestStep Name="CallSi2CheckEntryDescription">
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"online"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>2</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>"Error Reset"</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>null</Parameter>
						<Parameter>R</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>i32CurrentBitOffset</Parameter>
						<Parameter>true</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="EndSi2">
					<SetVariable Target="i32CurrentBitOffset">i32CurrentBitOffset + 1</SetVariable>
				</TestStep>
				<TestStep Name="CheckReservedEntryRange_3_to_14">
					<Description Id="23" Level="Output">Start check reserved entry range 3 to 14</Description>
					<CallTestFunction Name="CheckReservedEntryRange">
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>3</Parameter>
						<Parameter>15</Parameter>
						<Parameter>odDeviceObjectdictionary</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>i32CurrentBitOffset</Value1>
							<Value2>-1</Value2>
							<SetVariable Target="i32CurrentBitOffset">i32CurrentBitOffset + 12</SetVariable>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep Name="StartSi15">
					<Description Id="24" Level="Output">Start validate SubIndex15</Description>
					<WriteLine Id="25" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : Subindex '0x{0:X}.15'</WriteLine>
				</TestStep>
				<TestStep Name="SetSi15RequiredLevel">
					<SetVariable Target="bObjectOrEntryRequiredLevel">1</SetVariable>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<CallTestFunction Name="IsDcSupported">
								<OutParameter>bConditionTrue</OutParameter>
							</CallTestFunction>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bConditionTrue</Value1>
							<Value2>true</Value2>
							<SetVariable Target="bObjectOrEntryRequiredLevel">3</SetVariable>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>3</Value2>
							<WriteLine Id="26" Param0="u16ObjectIndexInclOffset" Level="Verbose">0x{0:X4}.15 'Output Cycle Counter' shall be available (DC is supported)</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>1</Value2>
							<WriteLine Id="27" Param0="u16ObjectIndexInclOffset" Level="Verbose">0x{0:X4}.15 'Output Cycle Counter' may be available (DC is not supported)</WriteLine>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CheckIfSi15Exists">
					<GetObjectDescription SourceDictionary="odDeviceObjectdictionary" Index="u16ObjectIndexInclOffset" SubIndex="15">
						<Type>u16DataType</Type>
					</GetObjectDescription>
					<GotoOnFailure>HandleNotExistingSi15</GotoOnFailure>
				</TestStep>
				<TestStep>
					<Compare>
						<NotEqual>
							<Value1>u16DataType</Value1>
							<Value2>0</Value2>
							<GotoStep>CallSi15CheckEntryDescription</GotoStep>
						</NotEqual>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>1</Value2>
							<WriteLine Id="28" Param0="u16ObjectIndexInclOffset" Level="Verbose">The entry 0x{0:X4}.15 is defined as a padding entry.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>3</Value2>
							<WriteLine Id="29" Param0="u16ObjectIndexInclOffset" Level="Error">The entry 0x{0:X4}.15 shall not defined as a padding entry.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>3</Value2>
							<SetVariable Target="strResult" Param0="u16ObjectIndexInclOffset">The entry 0x{0:X4}.15 shall not defined as a padding entry.</SetVariable>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>EndSi15</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="HandleNotExistingSi15">
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>3</Value2>
							<SetVariable Target="strResult" Param0="u16ObjectIndexInclOffset">The entry 0x{0:X4}.15 does not exists.</SetVariable>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>3</Value2>
							<WriteLine Id="30" Param0="u16ObjectIndexInclOffset" Level="Error">The entry 0x{0:X4}.15 does not exists.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>3</Value2>
							<GotoStep>EndSi15</GotoStep>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="31" Param0="u16ObjectIndexInclOffset" Level="Output">The entry 0x{0:X4}.15 does not exists.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>EndSi15</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CallSi15CheckEntryDescription">
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"online"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>15</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>"Output Cycle Counter"</Parameter>
						<Parameter>49</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>null</Parameter>
						<Parameter>R</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>2</Parameter>
						<Parameter>i32CurrentBitOffset</Parameter>
						<Parameter>true</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="EndSi15">
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>3</Value2>
							<SetVariable Target="i32CurrentBitOffset">i32CurrentBitOffset + 2</SetVariable>
						</Equal>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>3</Value2>
							<SetVariable Target="i32CurrentBitOffset">-1</SetVariable>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep Name="CheckReservedEntryRange_16_to_255">
					<Description Id="32" Level="Output">Start check reserved entry range 16 to 255</Description>
					<CallTestFunction Name="CheckReservedEntryRange">
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>16</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>odDeviceObjectdictionary</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="ProfileLoopEnd">
					<Compare>
						<Equal>
							<Value1>bAtLeastOneModuleMatch</Value1>
							<Value2>false</Value2>
							<GotoStep>HandleAbortTestCaseOnFirstError</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="HandleAbortTestCaseOnFirstError">
					<Compare>
						<Equal>
							<Value1>bAbortTestCaseOnFirstError</Value1>
							<Value2>false</Value2>
							<GotoStep>ProfileLoopIncrement</GotoStep>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>strResult</Value1>
							<Value2>EmptyString</Value2>
							<GotoStep>ProfileLoopIncrement</GotoStep>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="33" Level="Output">Object verification for all following modules abort because an error was already detected for the current module.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>END</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="ProfileLoopIncrement">
					<SetVariable Target="u32ProfileCounter">u32ProfileCounter + 1</SetVariable>
					<Compare>
						<Greater>
							<Value1>u32CurrentProfilesLength</Value1>
							<Value2>u32ProfileCounter</Value2>
							<GotoStep>ProfileLoopStart</GotoStep>
						</Greater>
					</Compare>
				</TestStep>
				<TestStep Name="END">
					<Compare>
						<NotEqual>
							<Value1>bAtLeastOneModuleMatch</Value1>
							<Value2>true</Value2>
							<SkipCase Id="34">SKIP TEST(no module/channel supports the current profile)</SkipCase>
						</NotEqual>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bDEBUG</Value1>
							<Value2>true</Value2>
							<WriteLine Id="35" Param0="strResult" Level="Verbose">DEBUG | Result : '{0}'.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>strResult</Value1>
							<Value2>EmptyString</Value2>
							<ReturnSuccess Id="36">Test succeed</ReturnSuccess>
						</Equal>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>strResult</Value1>
							<Value2>EmptyString</Value2>
							<RaiseError Id="37"></RaiseError>
						</NotEqual>
					</Compare>
				</TestStep>
			</TestCase>
			<TestCase Name="offline | 0x7001 (Device Control Configuration)" CaseId="3">
				<Description>
					<PreCondition>- The device profile is 5003
- The module profile is 2011
- The submodule profile is 0</PreCondition>
					<Action>- Iterate over all offline defined modules/channels and if the PreCondition matches the following operations are done:
- Get the offline description of object 0x7001(+module specific offset) 'Device Control Configuration' and all entries
 Check:
    (Name)
    BitSize
    DataType
    Rx / Tx mappable
    Default Data
    MinData
    Flags       </Action>
					<PostCondition>Error if
- mandatory object / entry is not defined
- an optional object exists and the entries are invalid
- Object / entry description does not match with the specification</PostCondition>
					<ProposalForSolution>- Define the missing objects
- correct object / entry description</ProposalForSolution>
					<References>
						<Reference Specification="ETG.5003.2011"></Reference>
					</References>
					<Mandatory>true</Mandatory>
				</Description>
				<TestStep Name="InitResult">
					<SetVariable Target="strResult">EmptyString</SetVariable>
				</TestStep>
				<TestStep Name="CheckIfOdAvailable">
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Mailbox</Value1>
							<Value2>false</Value2>
							<SkipCase Id="1">DuT does not support mailbox.</SkipCase>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Mailbox.CoE</Value1>
							<Value2>false</Value2>
							<SkipCase Id="2">DuT does not support CoE.</SkipCase>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep>
					<GetObjectDictionary Target="odDeviceObjectdictionary">
						<DictionaryType>Offline</DictionaryType>
					</GetObjectDictionary>
					<SkipOnFailure Id="3">No offline object dictionary defined.</SkipOnFailure>
				</TestStep>
				<TestStep>
					<GetObjectList Count="u32Tmp" Target="odDeviceObjectdictionaryList" SourceDict="odDeviceObjectdictionary"></GetObjectList>
					<Compare>
						<Equal>
							<Value1>u32Tmp</Value1>
							<Value2>0</Value2>
							<SkipCase Id="4">No offline object dictionary defined.</SkipCase>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="InitAtLeastOneProfileMatch">
					<SetVariable Target="bAtLeastOneModuleMatch">false</SetVariable>
				</TestStep>
				<TestStep Name="GetCurrentProfileList">
					<SizeOf UInt32Var="u32Tmp">arrOfflineProfiles</SizeOf>
					<Compare>
						<Equal>
							<Value1>u32Tmp</Value1>
							<Value2>0</Value2>
							<CallTestFunction Name="GetCurrentProfileList">
								<Parameter>"offline"</Parameter>
								<Parameter>"SafeOP"</Parameter>
								<OutParameter>arrOfflineProfiles</OutParameter>
							</CallTestFunction>
						</Equal>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>u32Tmp</Value1>
							<Value2>0</Value2>
							<WriteLine Id="5" Param0="arrOfflineProfiles" Level="Verbose">Use previously created profile list ({0})</WriteLine>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep>
					<SizeOf UInt32Var="u32Tmp">arrOfflineProfiles</SizeOf>
				</TestStep>
				<TestStep>
					<InitArray TargetArray="arrCurrentProfiles" Length="u32Tmp"></InitArray>
				</TestStep>
				<TestStep>
					<CopyArray>
						<SourceArray>arrOfflineProfiles</SourceArray>
						<DestinationArray>arrCurrentProfiles</DestinationArray>
						<Length>u32Tmp</Length>
					</CopyArray>
				</TestStep>
				<TestStep Name="InitProfileLoopCounter">
					<SetVariable Target="u32ProfileCounter">0</SetVariable>
				</TestStep>
				<TestStep Name="GetProfileArrayLength">
					<SizeOf UInt32Var="u32CurrentProfilesLength">arrCurrentProfiles</SizeOf>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="6" Param0="u32CurrentProfilesLength" Level="Verbose">'{0}' Profile(s) defined offline.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>u32CurrentProfilesLength</Value1>
							<Value2>0</Value2>
							<SkipCase Id="7">Skip case | no profile defined.</SkipCase>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="ProfileLoopStart">
					<GetArrayItem SourceArray="arrCurrentProfiles" Target="strTmpString" Index="u32ProfileCounter"></GetArrayItem>
				</TestStep>
				<TestStep Name="CheckProfileInformationString">
					<Compare>
						<Equal>
							<Value1>strTmpString</Value1>
							<Value2>null</Value2>
							<RaiseError Id="8" Param0="u32ProfileCounter">Profile Info element [{0}] is null.</RaiseError>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>strTmpString</Value1>
							<Value2>EmptyString</Value2>
							<RaiseError Id="9" Param0="u32ProfileCounter">Profile Info element [{0}] is an empty string.</RaiseError>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="GetDeviceProfile">
					<CallTestFunction Name="GetDeviceProfile">
						<Parameter>strTmpString</Parameter>
						<OutParameter>uint16CurDeviceProfile</OutParameter>
					</CallTestFunction>
				</TestStep>
				<TestStep Name="GetModuleProfile">
					<CallTestFunction Name="GetModuleProfile">
						<Parameter>strTmpString</Parameter>
						<OutParameter>uint16CurModuleProfile</OutParameter>
					</CallTestFunction>
				</TestStep>
				<TestStep Name="GetSubModuleProfile">
					<CallTestFunction Name="GetSubModuleProfile">
						<Parameter>strTmpString</Parameter>
						<OutParameter>uint16CurSubModuleProfile</OutParameter>
					</CallTestFunction>
				</TestStep>
				<TestStep Name="DumpProfileInfo">
					<Description Id="10" Param0="uint16CurDeviceProfile" Param1="uint16CurModuleProfile" Param2="uint16CurSubModuleProfile" Param3="u32ProfileCounter" Level="Output">Module[{3}] : DeviceProfile '{0}' ; ModuleProfile '{1}' ; SubModuleProfile '{2}'</Description>
					<Compare>
						<Equal>
							<Value1>bIgnoreProfileID</Value1>
							<Value2>true</Value2>
							<GotoStep>IndicateThatAtleastOneModuleMatch</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CompareDeviceProfile">
					<Compare>
						<NotEqual>
							<Value1>uint16CurDeviceProfile</Value1>
							<Value2>5003</Value2>
							<WriteLine Id="11" Param0="uint16CurDeviceProfile" Level="Output">Skip Profile  (Test Device Profile '5003' != Cur Device Profile '{0}')</WriteLine>
						</NotEqual>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>uint16CurDeviceProfile</Value1>
							<Value2>5003</Value2>
							<GotoStep>ProfileLoopEnd</GotoStep>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep Name="CompareModuleProfile">
					<Compare>
						<NotEqual>
							<Value1>uint16CurModuleProfile</Value1>
							<Value2>2011</Value2>
							<WriteLine Id="12" Param0="uint16CurModuleProfile" Level="Output">Skip Profile  (Test Module Profile '2011' != Cur Module Profile '{0}')</WriteLine>
						</NotEqual>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>uint16CurModuleProfile</Value1>
							<Value2>2011</Value2>
							<GotoStep>ProfileLoopEnd</GotoStep>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep Name="CompareSubModuleProfile">
					<Compare>
						<NotEqual>
							<Value1>uint16CurSubModuleProfile</Value1>
							<Value2>0</Value2>
							<WriteLine Id="13" Param0="uint16CurSubModuleProfile" Level="Output">Skip Profile  (Test SubModule Profile '0' != Cur SubModule Profile '{0}')</WriteLine>
						</NotEqual>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>uint16CurSubModuleProfile</Value1>
							<Value2>0</Value2>
							<GotoStep>ProfileLoopEnd</GotoStep>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep Name="IndicateThatAtleastOneModuleMatch">
					<SetVariable Target="bAtLeastOneModuleMatch">true</SetVariable>
				</TestStep>
				<TestStep Name="GetObjectIndexInclOffset">
					<SetVariable Target="u16ObjectIndexInclOffset">#x7001 + (u32ProfileCounter * #x10)</SetVariable>
					<WriteLine Id="14" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : ObjectIndex '0x{0:X}'</WriteLine>
				</TestStep>
				<TestStep Name="LoadDeviceObjectDictionary">
					<Description Id="15" Level="Verbose">Load 'offline' object dictionary for testing.</Description>
					<GetObjectDictionary Target="odDeviceObjectdictionary">
						<DictionaryType>Offline</DictionaryType>
					</GetObjectDictionary>
					<RaiseErrorOnFailure Id="16">VerifyObject : failed to load offline object dictionary.</RaiseErrorOnFailure>
				</TestStep>
				<TestStep Name="SetObjectRequiredLevel">
					<SetVariable Target="bObjectOrEntryRequiredLevel">1</SetVariable>
					<WriteLine Id="17" Param0="u16ObjectIndexInclOffset" Level="Verbose">0x{0:X4} 'Device Control Configuration' may be available</WriteLine>
				</TestStep>
				<TestStep Name="CheckIfObjectExists">
					<GetObjectDescription SourceDictionary="odDeviceObjectdictionary" Index="u16ObjectIndexInclOffset" SubIndex="-1"></GetObjectDescription>
					<GotoOnSuccess>CallCheckObjectDescription</GotoOnSuccess>
				</TestStep>
				<TestStep Name="HandleNotExistingObject">
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>2</Value2>
							<WriteLine Id="18" Param0="u16ObjectIndexInclOffset" Level="Warning">The object 0x{0:X4} 'Device Control Configuration' does not exists.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>1</Value2>
							<WriteLine Id="19" Param0="u16ObjectIndexInclOffset" Level="Output">The object 0x{0:X4} 'Device Control Configuration' does not exists.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>ProfileLoopEnd</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CallCheckObjectDescription">
					<Description Id="20" Param0="u16ObjectIndexInclOffset" Level="Output">Verify the object description 0x{0:X4} 'Device Control Configuration'.</Description>
					<CallTestFunction Name="CheckObjectDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"offline"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>"Device Control Configuration"</Parameter>
						<Parameter>null</Parameter>
						<Parameter>9</Parameter>
						<Parameter>-1</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<GotoStep>ProfileLoopEnd</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="InitEntryBittOffset">
					<SetVariable Target="i32CurrentBitOffset">0</SetVariable>
				</TestStep>
				<TestStep Name="StartSi0">
					<Description Id="21" Level="Output">Start validate SubIndex0</Description>
					<WriteLine Id="22" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : Subindex '0x{0:X}.0'</WriteLine>
				</TestStep>
				<TestStep Name="CallSi0CheckEntryDescription">
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"offline"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>0</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>null</Parameter>
						<Parameter>5</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>null</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>null</Parameter>
						<Parameter>null</Parameter>
						<Parameter>null</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>8</Parameter>
						<Parameter>i32CurrentBitOffset</Parameter>
						<Parameter>true</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="EndSi0">
					<SetVariable Target="i32CurrentBitOffset">16</SetVariable>
				</TestStep>
				<TestStep Name="StartSi1">
					<Description Id="23" Level="Output">Start validate SubIndex1</Description>
					<WriteLine Id="24" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : Subindex '0x{0:X}.1'</WriteLine>
				</TestStep>
				<TestStep Name="SetSi1RequiredLevel">
					<SetVariable Target="bObjectOrEntryRequiredLevel">1</SetVariable>
					<WriteLine Id="25" Param0="u16ObjectIndexInclOffset" Level="Verbose">0x{0:X4}.1 'Pulsing ON' may be available</WriteLine>
				</TestStep>
				<TestStep Name="CheckIfSi1Exists">
					<GetObjectDescription SourceDictionary="odDeviceObjectdictionary" Index="u16ObjectIndexInclOffset" SubIndex="1">
						<Type>u16DataType</Type>
					</GetObjectDescription>
					<GotoOnFailure>HandleNotExistingSi1</GotoOnFailure>
				</TestStep>
				<TestStep>
					<Compare>
						<NotEqual>
							<Value1>u16DataType</Value1>
							<Value2>0</Value2>
							<GotoStep>CallSi1CheckEntryDescription</GotoStep>
						</NotEqual>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="26" Param0="u16ObjectIndexInclOffset" Level="Verbose">The entry 0x{0:X4}.1 is defined as a padding entry.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>EndSi1</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="HandleNotExistingSi1">
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="27" Param0="u16ObjectIndexInclOffset" Level="Output">The entry 0x{0:X4}.1 does not exists.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>EndSi1</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CallSi1CheckEntryDescription">
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"offline"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>1</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>"Pulsing ON"</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>null</Parameter>
						<Parameter>R</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>i32CurrentBitOffset</Parameter>
						<Parameter>true</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="EndSi1">
					<SetVariable Target="i32CurrentBitOffset">-1</SetVariable>
				</TestStep>
				<TestStep Name="StartSi2">
					<Description Id="28" Level="Output">Start validate SubIndex2</Description>
					<WriteLine Id="29" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : Subindex '0x{0:X}.2'</WriteLine>
				</TestStep>
				<TestStep Name="SetSi2RequiredLevel">
					<SetVariable Target="bObjectOrEntryRequiredLevel">1</SetVariable>
					<WriteLine Id="30" Param0="u16ObjectIndexInclOffset" Level="Verbose">0x{0:X4}.2 'Arc Detection ON' may be available</WriteLine>
				</TestStep>
				<TestStep Name="CheckIfSi2Exists">
					<GetObjectDescription SourceDictionary="odDeviceObjectdictionary" Index="u16ObjectIndexInclOffset" SubIndex="2">
						<Type>u16DataType</Type>
					</GetObjectDescription>
					<GotoOnFailure>HandleNotExistingSi2</GotoOnFailure>
				</TestStep>
				<TestStep>
					<Compare>
						<NotEqual>
							<Value1>u16DataType</Value1>
							<Value2>0</Value2>
							<GotoStep>CallSi2CheckEntryDescription</GotoStep>
						</NotEqual>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="31" Param0="u16ObjectIndexInclOffset" Level="Verbose">The entry 0x{0:X4}.2 is defined as a padding entry.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>EndSi2</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="HandleNotExistingSi2">
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="32" Param0="u16ObjectIndexInclOffset" Level="Output">The entry 0x{0:X4}.2 does not exists.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>EndSi2</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CallSi2CheckEntryDescription">
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"offline"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>2</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>"Arc Detection ON"</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>null</Parameter>
						<Parameter>R</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>true</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="EndSi2"></TestStep>
				<TestStep Name="StartSi3">
					<Description Id="33" Level="Output">Start validate SubIndex3</Description>
					<WriteLine Id="34" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : Subindex '0x{0:X}.3'</WriteLine>
				</TestStep>
				<TestStep Name="SetSi3RequiredLevel">
					<SetVariable Target="bObjectOrEntryRequiredLevel">1</SetVariable>
					<WriteLine Id="35" Param0="u16ObjectIndexInclOffset" Level="Verbose">0x{0:X4}.3 'Arc Reaction ON' may be available</WriteLine>
				</TestStep>
				<TestStep Name="CheckIfSi3Exists">
					<GetObjectDescription SourceDictionary="odDeviceObjectdictionary" Index="u16ObjectIndexInclOffset" SubIndex="3">
						<Type>u16DataType</Type>
					</GetObjectDescription>
					<GotoOnFailure>HandleNotExistingSi3</GotoOnFailure>
				</TestStep>
				<TestStep>
					<Compare>
						<NotEqual>
							<Value1>u16DataType</Value1>
							<Value2>0</Value2>
							<GotoStep>CallSi3CheckEntryDescription</GotoStep>
						</NotEqual>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="36" Param0="u16ObjectIndexInclOffset" Level="Verbose">The entry 0x{0:X4}.3 is defined as a padding entry.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>EndSi3</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="HandleNotExistingSi3">
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="37" Param0="u16ObjectIndexInclOffset" Level="Output">The entry 0x{0:X4}.3 does not exists.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>EndSi3</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CallSi3CheckEntryDescription">
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"offline"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>3</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>"Arc Reaction ON"</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>null</Parameter>
						<Parameter>R</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>true</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="EndSi3"></TestStep>
				<TestStep Name="StartSi4">
					<Description Id="38" Level="Output">Start validate SubIndex4</Description>
					<WriteLine Id="39" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : Subindex '0x{0:X}.4'</WriteLine>
				</TestStep>
				<TestStep Name="SetSi4RequiredLevel">
					<SetVariable Target="bObjectOrEntryRequiredLevel">1</SetVariable>
					<WriteLine Id="40" Param0="u16ObjectIndexInclOffset" Level="Verbose">0x{0:X4}.4 'Arc Counter Reset' may be available</WriteLine>
				</TestStep>
				<TestStep Name="CheckIfSi4Exists">
					<GetObjectDescription SourceDictionary="odDeviceObjectdictionary" Index="u16ObjectIndexInclOffset" SubIndex="4">
						<Type>u16DataType</Type>
					</GetObjectDescription>
					<GotoOnFailure>HandleNotExistingSi4</GotoOnFailure>
				</TestStep>
				<TestStep>
					<Compare>
						<NotEqual>
							<Value1>u16DataType</Value1>
							<Value2>0</Value2>
							<GotoStep>CallSi4CheckEntryDescription</GotoStep>
						</NotEqual>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="41" Param0="u16ObjectIndexInclOffset" Level="Verbose">The entry 0x{0:X4}.4 is defined as a padding entry.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>EndSi4</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="HandleNotExistingSi4">
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="42" Param0="u16ObjectIndexInclOffset" Level="Output">The entry 0x{0:X4}.4 does not exists.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>EndSi4</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CallSi4CheckEntryDescription">
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"offline"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>4</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>"Arc Counter Reset"</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>null</Parameter>
						<Parameter>R</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>true</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="EndSi4"></TestStep>
				<TestStep Name="StartSi5">
					<Description Id="43" Level="Output">Start validate SubIndex5</Description>
					<WriteLine Id="44" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : Subindex '0x{0:X}.5'</WriteLine>
				</TestStep>
				<TestStep Name="SetSi5RequiredLevel">
					<SetVariable Target="bObjectOrEntryRequiredLevel">1</SetVariable>
					<WriteLine Id="45" Param0="u16ObjectIndexInclOffset" Level="Verbose">0x{0:X4}.5 'CEX ON' may be available</WriteLine>
				</TestStep>
				<TestStep Name="CheckIfSi5Exists">
					<GetObjectDescription SourceDictionary="odDeviceObjectdictionary" Index="u16ObjectIndexInclOffset" SubIndex="5">
						<Type>u16DataType</Type>
					</GetObjectDescription>
					<GotoOnFailure>HandleNotExistingSi5</GotoOnFailure>
				</TestStep>
				<TestStep>
					<Compare>
						<NotEqual>
							<Value1>u16DataType</Value1>
							<Value2>0</Value2>
							<GotoStep>CallSi5CheckEntryDescription</GotoStep>
						</NotEqual>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="46" Param0="u16ObjectIndexInclOffset" Level="Verbose">The entry 0x{0:X4}.5 is defined as a padding entry.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>EndSi5</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="HandleNotExistingSi5">
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="47" Param0="u16ObjectIndexInclOffset" Level="Output">The entry 0x{0:X4}.5 does not exists.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>EndSi5</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CallSi5CheckEntryDescription">
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"offline"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>5</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>"CEX ON"</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>null</Parameter>
						<Parameter>R</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>true</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="EndSi5"></TestStep>
				<TestStep Name="StartSi6">
					<Description Id="48" Level="Output">Start validate SubIndex6</Description>
					<WriteLine Id="49" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : Subindex '0x{0:X}.6'</WriteLine>
				</TestStep>
				<TestStep Name="SetSi6RequiredLevel">
					<SetVariable Target="bObjectOrEntryRequiredLevel">1</SetVariable>
					<WriteLine Id="50" Param0="u16ObjectIndexInclOffset" Level="Verbose">0x{0:X4}.6 'Frequency Mode' may be available</WriteLine>
				</TestStep>
				<TestStep Name="CheckIfSi6Exists">
					<GetObjectDescription SourceDictionary="odDeviceObjectdictionary" Index="u16ObjectIndexInclOffset" SubIndex="6">
						<Type>u16DataType</Type>
					</GetObjectDescription>
					<GotoOnFailure>HandleNotExistingSi6</GotoOnFailure>
				</TestStep>
				<TestStep>
					<Compare>
						<NotEqual>
							<Value1>u16DataType</Value1>
							<Value2>0</Value2>
							<GotoStep>CallSi6CheckEntryDescription</GotoStep>
						</NotEqual>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="51" Param0="u16ObjectIndexInclOffset" Level="Verbose">The entry 0x{0:X4}.6 is defined as a padding entry.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>EndSi6</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="HandleNotExistingSi6">
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="52" Param0="u16ObjectIndexInclOffset" Level="Output">The entry 0x{0:X4}.6 does not exists.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>EndSi6</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CallSi6CheckEntryDescription">
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"offline"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>6</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>"Frequency Mode"</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>null</Parameter>
						<Parameter>R</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>true</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="EndSi6"></TestStep>
				<TestStep Name="CheckReservedEntryRange_7_to_255">
					<Description Id="53" Level="Output">Start check reserved entry range 7 to 255</Description>
					<CallTestFunction Name="CheckReservedEntryRange">
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>7</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>odDeviceObjectdictionary</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="ProfileLoopEnd">
					<Compare>
						<Equal>
							<Value1>bAtLeastOneModuleMatch</Value1>
							<Value2>false</Value2>
							<GotoStep>HandleAbortTestCaseOnFirstError</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="HandleAbortTestCaseOnFirstError">
					<Compare>
						<Equal>
							<Value1>bAbortTestCaseOnFirstError</Value1>
							<Value2>false</Value2>
							<GotoStep>ProfileLoopIncrement</GotoStep>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>strResult</Value1>
							<Value2>EmptyString</Value2>
							<GotoStep>ProfileLoopIncrement</GotoStep>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="54" Level="Output">Object verification for all following modules abort because an error was already detected for the current module.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>END</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="ProfileLoopIncrement">
					<SetVariable Target="u32ProfileCounter">u32ProfileCounter + 1</SetVariable>
					<Compare>
						<Greater>
							<Value1>u32CurrentProfilesLength</Value1>
							<Value2>u32ProfileCounter</Value2>
							<GotoStep>ProfileLoopStart</GotoStep>
						</Greater>
					</Compare>
				</TestStep>
				<TestStep Name="END">
					<Compare>
						<NotEqual>
							<Value1>bAtLeastOneModuleMatch</Value1>
							<Value2>true</Value2>
							<SkipCase Id="55">SKIP TEST(no module/channel supports the current profile)</SkipCase>
						</NotEqual>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bDEBUG</Value1>
							<Value2>true</Value2>
							<WriteLine Id="56" Param0="strResult" Level="Verbose">DEBUG | Result : '{0}'.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>strResult</Value1>
							<Value2>EmptyString</Value2>
							<ReturnSuccess Id="57">Test succeed</ReturnSuccess>
						</Equal>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>strResult</Value1>
							<Value2>EmptyString</Value2>
							<RaiseError Id="58"></RaiseError>
						</NotEqual>
					</Compare>
				</TestStep>
			</TestCase>
			<TestCase Name="online | 0x7001 (Device Control Configuration)" CaseId="4">
				<Description>
					<PreCondition>- The device profile is 5003
- The module profile is 2011
- The submodule profile is 0</PreCondition>
					<Action>- Iterate over all online defined modules/channels and if the PreCondition matches the following operations are done:
- Get the online description of object 0x7001(+module specific offset) 'Device Control Configuration' and all entries
 Check:
    (Name)
    BitSize
    DataType
    Rx / Tx mappable
    Default Data
    MinData
    Flags       </Action>
					<PostCondition>Error if
- mandatory object / entry is not defined
- an optional object exists and the entries are invalid
- Object / entry description does not match with the specification</PostCondition>
					<ProposalForSolution>- Define the missing objects
- correct object / entry description</ProposalForSolution>
					<References>
						<Reference Specification="ETG.5003.2011"></Reference>
					</References>
					<Mandatory>true</Mandatory>
				</Description>
				<TestStep Name="InitResult">
					<SetVariable Target="strResult">EmptyString</SetVariable>
				</TestStep>
				<TestStep Name="CheckIfOdAvailable">
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Mailbox</Value1>
							<Value2>false</Value2>
							<SkipCase Id="1">DuT does not support mailbox.</SkipCase>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Mailbox.CoE</Value1>
							<Value2>false</Value2>
							<SkipCase Id="2">DuT does not support CoE.</SkipCase>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Mailbox.CoE.SdoInfo</Value1>
							<Value2>false</Value2>
							<SkipCase Id="3">DuT does not support SDO Info.</SkipCase>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="InitAtLeastOneProfileMatch">
					<SetVariable Target="bAtLeastOneModuleMatch">false</SetVariable>
				</TestStep>
				<TestStep Name="GetCurrentProfileList">
					<SizeOf UInt32Var="u32Tmp">arrOnlineProfiles</SizeOf>
					<Compare>
						<Equal>
							<Value1>u32Tmp</Value1>
							<Value2>0</Value2>
							<CallTestFunction Name="GetCurrentProfileList">
								<Parameter>"online"</Parameter>
								<Parameter>"SafeOP"</Parameter>
								<OutParameter>arrOnlineProfiles</OutParameter>
							</CallTestFunction>
						</Equal>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>u32Tmp</Value1>
							<Value2>0</Value2>
							<WriteLine Id="4" Param0="arrOnlineProfiles" Level="Verbose">Use previously created profile list ({0})</WriteLine>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep>
					<SizeOf UInt32Var="u32Tmp">arrOnlineProfiles</SizeOf>
				</TestStep>
				<TestStep>
					<InitArray TargetArray="arrCurrentProfiles" Length="u32Tmp"></InitArray>
				</TestStep>
				<TestStep>
					<CopyArray>
						<SourceArray>arrOnlineProfiles</SourceArray>
						<DestinationArray>arrCurrentProfiles</DestinationArray>
						<Length>u32Tmp</Length>
					</CopyArray>
				</TestStep>
				<TestStep Name="InitProfileLoopCounter">
					<SetVariable Target="u32ProfileCounter">0</SetVariable>
				</TestStep>
				<TestStep Name="GetProfileArrayLength">
					<SizeOf UInt32Var="u32CurrentProfilesLength">arrCurrentProfiles</SizeOf>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="5" Param0="u32CurrentProfilesLength" Level="Verbose">'{0}' Profile(s) defined online.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>u32CurrentProfilesLength</Value1>
							<Value2>0</Value2>
							<SkipCase Id="6">Skip case | no profile defined.</SkipCase>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="ProfileLoopStart">
					<GetArrayItem SourceArray="arrCurrentProfiles" Target="strTmpString" Index="u32ProfileCounter"></GetArrayItem>
				</TestStep>
				<TestStep Name="CheckProfileInformationString">
					<Compare>
						<Equal>
							<Value1>strTmpString</Value1>
							<Value2>null</Value2>
							<RaiseError Id="7" Param0="u32ProfileCounter">Profile Info element [{0}] is null.</RaiseError>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>strTmpString</Value1>
							<Value2>EmptyString</Value2>
							<RaiseError Id="8" Param0="u32ProfileCounter">Profile Info element [{0}] is an empty string.</RaiseError>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="GetDeviceProfile">
					<CallTestFunction Name="GetDeviceProfile">
						<Parameter>strTmpString</Parameter>
						<OutParameter>uint16CurDeviceProfile</OutParameter>
					</CallTestFunction>
				</TestStep>
				<TestStep Name="GetModuleProfile">
					<CallTestFunction Name="GetModuleProfile">
						<Parameter>strTmpString</Parameter>
						<OutParameter>uint16CurModuleProfile</OutParameter>
					</CallTestFunction>
				</TestStep>
				<TestStep Name="GetSubModuleProfile">
					<CallTestFunction Name="GetSubModuleProfile">
						<Parameter>strTmpString</Parameter>
						<OutParameter>uint16CurSubModuleProfile</OutParameter>
					</CallTestFunction>
				</TestStep>
				<TestStep Name="DumpProfileInfo">
					<Description Id="9" Param0="uint16CurDeviceProfile" Param1="uint16CurModuleProfile" Param2="uint16CurSubModuleProfile" Param3="u32ProfileCounter" Level="Output">Module[{3}] : DeviceProfile '{0}' ; ModuleProfile '{1}' ; SubModuleProfile '{2}'</Description>
					<Compare>
						<Equal>
							<Value1>bIgnoreProfileID</Value1>
							<Value2>true</Value2>
							<GotoStep>IndicateThatAtleastOneModuleMatch</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CompareDeviceProfile">
					<Compare>
						<NotEqual>
							<Value1>uint16CurDeviceProfile</Value1>
							<Value2>5003</Value2>
							<WriteLine Id="10" Param0="uint16CurDeviceProfile" Level="Output">Skip Profile  (Test Device Profile '5003' != Cur Device Profile '{0}')</WriteLine>
						</NotEqual>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>uint16CurDeviceProfile</Value1>
							<Value2>5003</Value2>
							<GotoStep>ProfileLoopEnd</GotoStep>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep Name="CompareModuleProfile">
					<Compare>
						<NotEqual>
							<Value1>uint16CurModuleProfile</Value1>
							<Value2>2011</Value2>
							<WriteLine Id="11" Param0="uint16CurModuleProfile" Level="Output">Skip Profile  (Test Module Profile '2011' != Cur Module Profile '{0}')</WriteLine>
						</NotEqual>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>uint16CurModuleProfile</Value1>
							<Value2>2011</Value2>
							<GotoStep>ProfileLoopEnd</GotoStep>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep Name="CompareSubModuleProfile">
					<Compare>
						<NotEqual>
							<Value1>uint16CurSubModuleProfile</Value1>
							<Value2>0</Value2>
							<WriteLine Id="12" Param0="uint16CurSubModuleProfile" Level="Output">Skip Profile  (Test SubModule Profile '0' != Cur SubModule Profile '{0}')</WriteLine>
						</NotEqual>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>uint16CurSubModuleProfile</Value1>
							<Value2>0</Value2>
							<GotoStep>ProfileLoopEnd</GotoStep>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep Name="IndicateThatAtleastOneModuleMatch">
					<SetVariable Target="bAtLeastOneModuleMatch">true</SetVariable>
				</TestStep>
				<TestStep Name="GetObjectIndexInclOffset">
					<SetVariable Target="u16ObjectIndexInclOffset">#x7001 + (u32ProfileCounter * #x10)</SetVariable>
					<WriteLine Id="13" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : ObjectIndex '0x{0:X}'</WriteLine>
				</TestStep>
				<TestStep Name="LoadDeviceObjectDictionary">
					<Description Id="14" Level="Verbose">Load 'online' object dictionary for testing.</Description>
					<GetObjectDictionary Target="odDeviceObjectdictionary">
						<DictionaryType>Online</DictionaryType>
					</GetObjectDictionary>
					<RaiseErrorOnFailure Id="15">VerifyObject : failed to load online object dictionary.</RaiseErrorOnFailure>
				</TestStep>
				<TestStep Name="SetObjectRequiredLevel">
					<SetVariable Target="bObjectOrEntryRequiredLevel">1</SetVariable>
					<WriteLine Id="16" Param0="u16ObjectIndexInclOffset" Level="Verbose">0x{0:X4} 'Device Control Configuration' may be available</WriteLine>
				</TestStep>
				<TestStep Name="CheckIfObjectExists">
					<GetObjectDescription SourceDictionary="odDeviceObjectdictionary" Index="u16ObjectIndexInclOffset" SubIndex="-1"></GetObjectDescription>
					<GotoOnSuccess>CallCheckObjectDescription</GotoOnSuccess>
				</TestStep>
				<TestStep Name="HandleNotExistingObject">
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>2</Value2>
							<WriteLine Id="17" Param0="u16ObjectIndexInclOffset" Level="Warning">The object 0x{0:X4} 'Device Control Configuration' does not exists.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>1</Value2>
							<WriteLine Id="18" Param0="u16ObjectIndexInclOffset" Level="Output">The object 0x{0:X4} 'Device Control Configuration' does not exists.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>ProfileLoopEnd</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CallCheckObjectDescription">
					<Description Id="19" Param0="u16ObjectIndexInclOffset" Level="Output">Verify the object description 0x{0:X4} 'Device Control Configuration'.</Description>
					<CallTestFunction Name="CheckObjectDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"online"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>"Device Control Configuration"</Parameter>
						<Parameter>null</Parameter>
						<Parameter>9</Parameter>
						<Parameter>-1</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<GotoStep>ProfileLoopEnd</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="InitEntryBittOffset">
					<SetVariable Target="i32CurrentBitOffset">0</SetVariable>
				</TestStep>
				<TestStep Name="StartSi0">
					<Description Id="20" Level="Output">Start validate SubIndex0</Description>
					<WriteLine Id="21" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : Subindex '0x{0:X}.0'</WriteLine>
				</TestStep>
				<TestStep Name="CallSi0CheckEntryDescription">
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"online"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>0</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>null</Parameter>
						<Parameter>5</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>null</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>null</Parameter>
						<Parameter>null</Parameter>
						<Parameter>null</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>8</Parameter>
						<Parameter>i32CurrentBitOffset</Parameter>
						<Parameter>true</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="EndSi0">
					<SetVariable Target="i32CurrentBitOffset">16</SetVariable>
				</TestStep>
				<TestStep Name="StartSi1">
					<Description Id="22" Level="Output">Start validate SubIndex1</Description>
					<WriteLine Id="23" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : Subindex '0x{0:X}.1'</WriteLine>
				</TestStep>
				<TestStep Name="SetSi1RequiredLevel">
					<SetVariable Target="bObjectOrEntryRequiredLevel">1</SetVariable>
					<WriteLine Id="24" Param0="u16ObjectIndexInclOffset" Level="Verbose">0x{0:X4}.1 'Pulsing ON' may be available</WriteLine>
				</TestStep>
				<TestStep Name="CheckIfSi1Exists">
					<GetObjectDescription SourceDictionary="odDeviceObjectdictionary" Index="u16ObjectIndexInclOffset" SubIndex="1">
						<Type>u16DataType</Type>
					</GetObjectDescription>
					<GotoOnFailure>HandleNotExistingSi1</GotoOnFailure>
				</TestStep>
				<TestStep>
					<Compare>
						<NotEqual>
							<Value1>u16DataType</Value1>
							<Value2>0</Value2>
							<GotoStep>CallSi1CheckEntryDescription</GotoStep>
						</NotEqual>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="25" Param0="u16ObjectIndexInclOffset" Level="Verbose">The entry 0x{0:X4}.1 is defined as a padding entry.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>EndSi1</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="HandleNotExistingSi1">
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="26" Param0="u16ObjectIndexInclOffset" Level="Output">The entry 0x{0:X4}.1 does not exists.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>EndSi1</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CallSi1CheckEntryDescription">
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"online"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>1</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>"Pulsing ON"</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>null</Parameter>
						<Parameter>R</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>i32CurrentBitOffset</Parameter>
						<Parameter>true</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="EndSi1">
					<SetVariable Target="i32CurrentBitOffset">-1</SetVariable>
				</TestStep>
				<TestStep Name="StartSi2">
					<Description Id="27" Level="Output">Start validate SubIndex2</Description>
					<WriteLine Id="28" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : Subindex '0x{0:X}.2'</WriteLine>
				</TestStep>
				<TestStep Name="SetSi2RequiredLevel">
					<SetVariable Target="bObjectOrEntryRequiredLevel">1</SetVariable>
					<WriteLine Id="29" Param0="u16ObjectIndexInclOffset" Level="Verbose">0x{0:X4}.2 'Arc Detection ON' may be available</WriteLine>
				</TestStep>
				<TestStep Name="CheckIfSi2Exists">
					<GetObjectDescription SourceDictionary="odDeviceObjectdictionary" Index="u16ObjectIndexInclOffset" SubIndex="2">
						<Type>u16DataType</Type>
					</GetObjectDescription>
					<GotoOnFailure>HandleNotExistingSi2</GotoOnFailure>
				</TestStep>
				<TestStep>
					<Compare>
						<NotEqual>
							<Value1>u16DataType</Value1>
							<Value2>0</Value2>
							<GotoStep>CallSi2CheckEntryDescription</GotoStep>
						</NotEqual>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="30" Param0="u16ObjectIndexInclOffset" Level="Verbose">The entry 0x{0:X4}.2 is defined as a padding entry.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>EndSi2</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="HandleNotExistingSi2">
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="31" Param0="u16ObjectIndexInclOffset" Level="Output">The entry 0x{0:X4}.2 does not exists.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>EndSi2</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CallSi2CheckEntryDescription">
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"online"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>2</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>"Arc Detection ON"</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>null</Parameter>
						<Parameter>R</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>true</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="EndSi2"></TestStep>
				<TestStep Name="StartSi3">
					<Description Id="32" Level="Output">Start validate SubIndex3</Description>
					<WriteLine Id="33" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : Subindex '0x{0:X}.3'</WriteLine>
				</TestStep>
				<TestStep Name="SetSi3RequiredLevel">
					<SetVariable Target="bObjectOrEntryRequiredLevel">1</SetVariable>
					<WriteLine Id="34" Param0="u16ObjectIndexInclOffset" Level="Verbose">0x{0:X4}.3 'Arc Reaction ON' may be available</WriteLine>
				</TestStep>
				<TestStep Name="CheckIfSi3Exists">
					<GetObjectDescription SourceDictionary="odDeviceObjectdictionary" Index="u16ObjectIndexInclOffset" SubIndex="3">
						<Type>u16DataType</Type>
					</GetObjectDescription>
					<GotoOnFailure>HandleNotExistingSi3</GotoOnFailure>
				</TestStep>
				<TestStep>
					<Compare>
						<NotEqual>
							<Value1>u16DataType</Value1>
							<Value2>0</Value2>
							<GotoStep>CallSi3CheckEntryDescription</GotoStep>
						</NotEqual>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="35" Param0="u16ObjectIndexInclOffset" Level="Verbose">The entry 0x{0:X4}.3 is defined as a padding entry.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>EndSi3</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="HandleNotExistingSi3">
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="36" Param0="u16ObjectIndexInclOffset" Level="Output">The entry 0x{0:X4}.3 does not exists.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>EndSi3</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CallSi3CheckEntryDescription">
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"online"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>3</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>"Arc Reaction ON"</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>null</Parameter>
						<Parameter>R</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>true</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="EndSi3"></TestStep>
				<TestStep Name="StartSi4">
					<Description Id="37" Level="Output">Start validate SubIndex4</Description>
					<WriteLine Id="38" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : Subindex '0x{0:X}.4'</WriteLine>
				</TestStep>
				<TestStep Name="SetSi4RequiredLevel">
					<SetVariable Target="bObjectOrEntryRequiredLevel">1</SetVariable>
					<WriteLine Id="39" Param0="u16ObjectIndexInclOffset" Level="Verbose">0x{0:X4}.4 'Arc Counter Reset' may be available</WriteLine>
				</TestStep>
				<TestStep Name="CheckIfSi4Exists">
					<GetObjectDescription SourceDictionary="odDeviceObjectdictionary" Index="u16ObjectIndexInclOffset" SubIndex="4">
						<Type>u16DataType</Type>
					</GetObjectDescription>
					<GotoOnFailure>HandleNotExistingSi4</GotoOnFailure>
				</TestStep>
				<TestStep>
					<Compare>
						<NotEqual>
							<Value1>u16DataType</Value1>
							<Value2>0</Value2>
							<GotoStep>CallSi4CheckEntryDescription</GotoStep>
						</NotEqual>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="40" Param0="u16ObjectIndexInclOffset" Level="Verbose">The entry 0x{0:X4}.4 is defined as a padding entry.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>EndSi4</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="HandleNotExistingSi4">
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="41" Param0="u16ObjectIndexInclOffset" Level="Output">The entry 0x{0:X4}.4 does not exists.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>EndSi4</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CallSi4CheckEntryDescription">
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"online"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>4</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>"Arc Counter Reset"</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>null</Parameter>
						<Parameter>R</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>true</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="EndSi4"></TestStep>
				<TestStep Name="StartSi5">
					<Description Id="42" Level="Output">Start validate SubIndex5</Description>
					<WriteLine Id="43" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : Subindex '0x{0:X}.5'</WriteLine>
				</TestStep>
				<TestStep Name="SetSi5RequiredLevel">
					<SetVariable Target="bObjectOrEntryRequiredLevel">1</SetVariable>
					<WriteLine Id="44" Param0="u16ObjectIndexInclOffset" Level="Verbose">0x{0:X4}.5 'CEX ON' may be available</WriteLine>
				</TestStep>
				<TestStep Name="CheckIfSi5Exists">
					<GetObjectDescription SourceDictionary="odDeviceObjectdictionary" Index="u16ObjectIndexInclOffset" SubIndex="5">
						<Type>u16DataType</Type>
					</GetObjectDescription>
					<GotoOnFailure>HandleNotExistingSi5</GotoOnFailure>
				</TestStep>
				<TestStep>
					<Compare>
						<NotEqual>
							<Value1>u16DataType</Value1>
							<Value2>0</Value2>
							<GotoStep>CallSi5CheckEntryDescription</GotoStep>
						</NotEqual>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="45" Param0="u16ObjectIndexInclOffset" Level="Verbose">The entry 0x{0:X4}.5 is defined as a padding entry.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>EndSi5</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="HandleNotExistingSi5">
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="46" Param0="u16ObjectIndexInclOffset" Level="Output">The entry 0x{0:X4}.5 does not exists.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>EndSi5</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CallSi5CheckEntryDescription">
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"online"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>5</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>"CEX ON"</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>null</Parameter>
						<Parameter>R</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>true</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="EndSi5"></TestStep>
				<TestStep Name="StartSi6">
					<Description Id="47" Level="Output">Start validate SubIndex6</Description>
					<WriteLine Id="48" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : Subindex '0x{0:X}.6'</WriteLine>
				</TestStep>
				<TestStep Name="SetSi6RequiredLevel">
					<SetVariable Target="bObjectOrEntryRequiredLevel">1</SetVariable>
					<WriteLine Id="49" Param0="u16ObjectIndexInclOffset" Level="Verbose">0x{0:X4}.6 'Frequency Mode' may be available</WriteLine>
				</TestStep>
				<TestStep Name="CheckIfSi6Exists">
					<GetObjectDescription SourceDictionary="odDeviceObjectdictionary" Index="u16ObjectIndexInclOffset" SubIndex="6">
						<Type>u16DataType</Type>
					</GetObjectDescription>
					<GotoOnFailure>HandleNotExistingSi6</GotoOnFailure>
				</TestStep>
				<TestStep>
					<Compare>
						<NotEqual>
							<Value1>u16DataType</Value1>
							<Value2>0</Value2>
							<GotoStep>CallSi6CheckEntryDescription</GotoStep>
						</NotEqual>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="50" Param0="u16ObjectIndexInclOffset" Level="Verbose">The entry 0x{0:X4}.6 is defined as a padding entry.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>EndSi6</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="HandleNotExistingSi6">
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="51" Param0="u16ObjectIndexInclOffset" Level="Output">The entry 0x{0:X4}.6 does not exists.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>EndSi6</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CallSi6CheckEntryDescription">
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"online"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>6</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>"Frequency Mode"</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>null</Parameter>
						<Parameter>R</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>true</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="EndSi6"></TestStep>
				<TestStep Name="CheckReservedEntryRange_7_to_255">
					<Description Id="52" Level="Output">Start check reserved entry range 7 to 255</Description>
					<CallTestFunction Name="CheckReservedEntryRange">
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>7</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>odDeviceObjectdictionary</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="ProfileLoopEnd">
					<Compare>
						<Equal>
							<Value1>bAtLeastOneModuleMatch</Value1>
							<Value2>false</Value2>
							<GotoStep>HandleAbortTestCaseOnFirstError</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="HandleAbortTestCaseOnFirstError">
					<Compare>
						<Equal>
							<Value1>bAbortTestCaseOnFirstError</Value1>
							<Value2>false</Value2>
							<GotoStep>ProfileLoopIncrement</GotoStep>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>strResult</Value1>
							<Value2>EmptyString</Value2>
							<GotoStep>ProfileLoopIncrement</GotoStep>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="53" Level="Output">Object verification for all following modules abort because an error was already detected for the current module.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>END</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="ProfileLoopIncrement">
					<SetVariable Target="u32ProfileCounter">u32ProfileCounter + 1</SetVariable>
					<Compare>
						<Greater>
							<Value1>u32CurrentProfilesLength</Value1>
							<Value2>u32ProfileCounter</Value2>
							<GotoStep>ProfileLoopStart</GotoStep>
						</Greater>
					</Compare>
				</TestStep>
				<TestStep Name="END">
					<Compare>
						<NotEqual>
							<Value1>bAtLeastOneModuleMatch</Value1>
							<Value2>true</Value2>
							<SkipCase Id="54">SKIP TEST(no module/channel supports the current profile)</SkipCase>
						</NotEqual>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bDEBUG</Value1>
							<Value2>true</Value2>
							<WriteLine Id="55" Param0="strResult" Level="Verbose">DEBUG | Result : '{0}'.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>strResult</Value1>
							<Value2>EmptyString</Value2>
							<ReturnSuccess Id="56">Test succeed</ReturnSuccess>
						</Equal>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>strResult</Value1>
							<Value2>EmptyString</Value2>
							<RaiseError Id="57"></RaiseError>
						</NotEqual>
					</Compare>
				</TestStep>
			</TestCase>
			<TestCase Name="offline | 0x7002 to 0x7003 (reserved range)" CaseId="5">
				<Description>
					<PreCondition>- The device profile is 5003
- The module profile is 2011
- The submodule profile is 0</PreCondition>
					<Action>- Iterate over all offline defined modules/channels and if the PreCondition matches the check if one object in the reserved range is defined</Action>
					<PostCondition>- Error if at least one object is defined</PostCondition>
					<ProposalForSolution>- Remove the defined objects
</ProposalForSolution>
					<References>
						<Reference Specification="ETG.5003.2011"></Reference>
					</References>
					<Mandatory>true</Mandatory>
				</Description>
				<TestStep Name="InitResult">
					<SetVariable Target="strResult">EmptyString</SetVariable>
				</TestStep>
				<TestStep Name="CheckIfOdAvailable">
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Mailbox</Value1>
							<Value2>false</Value2>
							<SkipCase Id="1">DuT does not support mailbox.</SkipCase>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Mailbox.CoE</Value1>
							<Value2>false</Value2>
							<SkipCase Id="2">DuT does not support CoE.</SkipCase>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep>
					<GetObjectDictionary Target="odDeviceObjectdictionary">
						<DictionaryType>Offline</DictionaryType>
					</GetObjectDictionary>
					<SkipOnFailure Id="3">No offline object dictionary defined.</SkipOnFailure>
				</TestStep>
				<TestStep>
					<GetObjectList Count="u32Tmp" Target="odDeviceObjectdictionaryList" SourceDict="odDeviceObjectdictionary"></GetObjectList>
					<Compare>
						<Equal>
							<Value1>u32Tmp</Value1>
							<Value2>0</Value2>
							<SkipCase Id="4">No offline object dictionary defined.</SkipCase>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="InitAtLeastOneProfileMatch">
					<SetVariable Target="bAtLeastOneModuleMatch">false</SetVariable>
				</TestStep>
				<TestStep Name="GetCurrentProfileList">
					<SizeOf UInt32Var="u32Tmp">arrOfflineProfiles</SizeOf>
					<Compare>
						<Equal>
							<Value1>u32Tmp</Value1>
							<Value2>0</Value2>
							<CallTestFunction Name="GetCurrentProfileList">
								<Parameter>"offline"</Parameter>
								<Parameter>"SafeOP"</Parameter>
								<OutParameter>arrOfflineProfiles</OutParameter>
							</CallTestFunction>
						</Equal>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>u32Tmp</Value1>
							<Value2>0</Value2>
							<WriteLine Id="5" Param0="arrOfflineProfiles" Level="Verbose">Use previously created profile list ({0})</WriteLine>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep>
					<SizeOf UInt32Var="u32Tmp">arrOfflineProfiles</SizeOf>
				</TestStep>
				<TestStep>
					<InitArray TargetArray="arrCurrentProfiles" Length="u32Tmp"></InitArray>
				</TestStep>
				<TestStep>
					<CopyArray>
						<SourceArray>arrOfflineProfiles</SourceArray>
						<DestinationArray>arrCurrentProfiles</DestinationArray>
						<Length>u32Tmp</Length>
					</CopyArray>
				</TestStep>
				<TestStep Name="InitProfileLoopCounter">
					<SetVariable Target="u32ProfileCounter">0</SetVariable>
				</TestStep>
				<TestStep Name="GetProfileArrayLength">
					<SizeOf UInt32Var="u32CurrentProfilesLength">arrCurrentProfiles</SizeOf>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="6" Param0="u32CurrentProfilesLength" Level="Verbose">'{0}' Profile(s) defined offline.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>u32CurrentProfilesLength</Value1>
							<Value2>0</Value2>
							<SkipCase Id="7">Skip case | no profile defined.</SkipCase>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="ProfileLoopStart">
					<GetArrayItem SourceArray="arrCurrentProfiles" Target="strTmpString" Index="u32ProfileCounter"></GetArrayItem>
				</TestStep>
				<TestStep Name="CheckProfileInformationString">
					<Compare>
						<Equal>
							<Value1>strTmpString</Value1>
							<Value2>null</Value2>
							<RaiseError Id="8" Param0="u32ProfileCounter">Profile Info element [{0}] is null.</RaiseError>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>strTmpString</Value1>
							<Value2>EmptyString</Value2>
							<RaiseError Id="9" Param0="u32ProfileCounter">Profile Info element [{0}] is an empty string.</RaiseError>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="GetDeviceProfile">
					<CallTestFunction Name="GetDeviceProfile">
						<Parameter>strTmpString</Parameter>
						<OutParameter>uint16CurDeviceProfile</OutParameter>
					</CallTestFunction>
				</TestStep>
				<TestStep Name="GetModuleProfile">
					<CallTestFunction Name="GetModuleProfile">
						<Parameter>strTmpString</Parameter>
						<OutParameter>uint16CurModuleProfile</OutParameter>
					</CallTestFunction>
				</TestStep>
				<TestStep Name="GetSubModuleProfile">
					<CallTestFunction Name="GetSubModuleProfile">
						<Parameter>strTmpString</Parameter>
						<OutParameter>uint16CurSubModuleProfile</OutParameter>
					</CallTestFunction>
				</TestStep>
				<TestStep Name="DumpProfileInfo">
					<Description Id="10" Param0="uint16CurDeviceProfile" Param1="uint16CurModuleProfile" Param2="uint16CurSubModuleProfile" Param3="u32ProfileCounter" Level="Output">Module[{3}] : DeviceProfile '{0}' ; ModuleProfile '{1}' ; SubModuleProfile '{2}'</Description>
					<Compare>
						<Equal>
							<Value1>bIgnoreProfileID</Value1>
							<Value2>true</Value2>
							<GotoStep>IndicateThatAtleastOneModuleMatch</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CompareDeviceProfile">
					<Compare>
						<NotEqual>
							<Value1>uint16CurDeviceProfile</Value1>
							<Value2>5003</Value2>
							<WriteLine Id="11" Param0="uint16CurDeviceProfile" Level="Output">Skip Profile  (Test Device Profile '5003' != Cur Device Profile '{0}')</WriteLine>
						</NotEqual>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>uint16CurDeviceProfile</Value1>
							<Value2>5003</Value2>
							<GotoStep>ProfileLoopEnd</GotoStep>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep Name="CompareModuleProfile">
					<Compare>
						<NotEqual>
							<Value1>uint16CurModuleProfile</Value1>
							<Value2>2011</Value2>
							<WriteLine Id="12" Param0="uint16CurModuleProfile" Level="Output">Skip Profile  (Test Module Profile '2011' != Cur Module Profile '{0}')</WriteLine>
						</NotEqual>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>uint16CurModuleProfile</Value1>
							<Value2>2011</Value2>
							<GotoStep>ProfileLoopEnd</GotoStep>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep Name="CompareSubModuleProfile">
					<Compare>
						<NotEqual>
							<Value1>uint16CurSubModuleProfile</Value1>
							<Value2>0</Value2>
							<WriteLine Id="13" Param0="uint16CurSubModuleProfile" Level="Output">Skip Profile  (Test SubModule Profile '0' != Cur SubModule Profile '{0}')</WriteLine>
						</NotEqual>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>uint16CurSubModuleProfile</Value1>
							<Value2>0</Value2>
							<GotoStep>ProfileLoopEnd</GotoStep>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep Name="IndicateThatAtleastOneModuleMatch">
					<SetVariable Target="bAtLeastOneModuleMatch">true</SetVariable>
				</TestStep>
				<TestStep Name="GetFirstReservedObjectIndexInlcOffset">
					<SetVariable Target="u16ObjectIndexInclOffset">#x7002 + (u32ProfileCounter * #x10)</SetVariable>
					<WriteLine Id="14" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : First reserved object index '0x{0:X}'</WriteLine>
				</TestStep>
				<TestStep Name="GetNextDefinedObjectIndexInlcOffset">
					<SetVariable Target="u16NextDefObjectIndexInclOffset">#x7004 + (u32ProfileCounter * #x0010)</SetVariable>
					<WriteLine Id="15" Param0="u16NextDefObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : Next defined object index '0x{0:X}'</WriteLine>
				</TestStep>
				<TestStep Name="CallCheckReservedObjectRange">
					<Description Id="16" Level="Verbose">VerifyObject : Load 'offline' object dictionary for testing.</Description>
					<CallTestFunction Name="CheckReservedObjectRange">
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>u16NextDefObjectIndexInclOffset</Parameter>
						<Parameter>odDeviceObjectdictionary</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<GotoStep>ProfileLoopEnd</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="ProfileLoopEnd">
					<Compare>
						<Equal>
							<Value1>bAtLeastOneModuleMatch</Value1>
							<Value2>false</Value2>
							<GotoStep>HandleAbortTestCaseOnFirstError</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="HandleAbortTestCaseOnFirstError">
					<Compare>
						<Equal>
							<Value1>bAbortTestCaseOnFirstError</Value1>
							<Value2>false</Value2>
							<GotoStep>ProfileLoopIncrement</GotoStep>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>strResult</Value1>
							<Value2>EmptyString</Value2>
							<GotoStep>ProfileLoopIncrement</GotoStep>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="17" Level="Output">Object verification for all following modules abort because an error was already detected for the current module.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>END</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="ProfileLoopIncrement">
					<SetVariable Target="u32ProfileCounter">u32ProfileCounter + 1</SetVariable>
					<Compare>
						<Greater>
							<Value1>u32CurrentProfilesLength</Value1>
							<Value2>u32ProfileCounter</Value2>
							<GotoStep>ProfileLoopStart</GotoStep>
						</Greater>
					</Compare>
				</TestStep>
				<TestStep Name="END">
					<Compare>
						<NotEqual>
							<Value1>bAtLeastOneModuleMatch</Value1>
							<Value2>true</Value2>
							<SkipCase Id="18">SKIP TEST(no module/channel supports the current profile)</SkipCase>
						</NotEqual>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bDEBUG</Value1>
							<Value2>true</Value2>
							<WriteLine Id="19" Param0="strResult" Level="Verbose">DEBUG | Result : '{0}'.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>strResult</Value1>
							<Value2>EmptyString</Value2>
							<ReturnSuccess Id="20">Test succeed</ReturnSuccess>
						</Equal>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>strResult</Value1>
							<Value2>EmptyString</Value2>
							<RaiseError Id="21"></RaiseError>
						</NotEqual>
					</Compare>
				</TestStep>
			</TestCase>
			<TestCase Name="online | 0x7002 to 0x7003 (reserved range)" CaseId="6">
				<Description>
					<PreCondition>- The device profile is 5003
- The module profile is 2011
- The submodule profile is 0</PreCondition>
					<Action>- Iterate over all online defined modules/channels and if the PreCondition matches the check if one object in the reserved range is defined</Action>
					<PostCondition>- Error if at least one object is defined</PostCondition>
					<ProposalForSolution>- Remove the defined objects
</ProposalForSolution>
					<References>
						<Reference Specification="ETG.5003.2011"></Reference>
					</References>
					<Mandatory>true</Mandatory>
				</Description>
				<TestStep Name="InitResult">
					<SetVariable Target="strResult">EmptyString</SetVariable>
				</TestStep>
				<TestStep Name="CheckIfOdAvailable">
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Mailbox</Value1>
							<Value2>false</Value2>
							<SkipCase Id="1">DuT does not support mailbox.</SkipCase>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Mailbox.CoE</Value1>
							<Value2>false</Value2>
							<SkipCase Id="2">DuT does not support CoE.</SkipCase>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Mailbox.CoE.SdoInfo</Value1>
							<Value2>false</Value2>
							<SkipCase Id="3">DuT does not support SDO Info.</SkipCase>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="InitAtLeastOneProfileMatch">
					<SetVariable Target="bAtLeastOneModuleMatch">false</SetVariable>
				</TestStep>
				<TestStep Name="GetCurrentProfileList">
					<SizeOf UInt32Var="u32Tmp">arrOnlineProfiles</SizeOf>
					<Compare>
						<Equal>
							<Value1>u32Tmp</Value1>
							<Value2>0</Value2>
							<CallTestFunction Name="GetCurrentProfileList">
								<Parameter>"online"</Parameter>
								<Parameter>"SafeOP"</Parameter>
								<OutParameter>arrOnlineProfiles</OutParameter>
							</CallTestFunction>
						</Equal>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>u32Tmp</Value1>
							<Value2>0</Value2>
							<WriteLine Id="4" Param0="arrOnlineProfiles" Level="Verbose">Use previously created profile list ({0})</WriteLine>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep>
					<SizeOf UInt32Var="u32Tmp">arrOnlineProfiles</SizeOf>
				</TestStep>
				<TestStep>
					<InitArray TargetArray="arrCurrentProfiles" Length="u32Tmp"></InitArray>
				</TestStep>
				<TestStep>
					<CopyArray>
						<SourceArray>arrOnlineProfiles</SourceArray>
						<DestinationArray>arrCurrentProfiles</DestinationArray>
						<Length>u32Tmp</Length>
					</CopyArray>
				</TestStep>
				<TestStep Name="InitProfileLoopCounter">
					<SetVariable Target="u32ProfileCounter">0</SetVariable>
				</TestStep>
				<TestStep Name="GetProfileArrayLength">
					<SizeOf UInt32Var="u32CurrentProfilesLength">arrCurrentProfiles</SizeOf>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="5" Param0="u32CurrentProfilesLength" Level="Verbose">'{0}' Profile(s) defined online.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>u32CurrentProfilesLength</Value1>
							<Value2>0</Value2>
							<SkipCase Id="6">Skip case | no profile defined.</SkipCase>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="ProfileLoopStart">
					<GetArrayItem SourceArray="arrCurrentProfiles" Target="strTmpString" Index="u32ProfileCounter"></GetArrayItem>
				</TestStep>
				<TestStep Name="CheckProfileInformationString">
					<Compare>
						<Equal>
							<Value1>strTmpString</Value1>
							<Value2>null</Value2>
							<RaiseError Id="7" Param0="u32ProfileCounter">Profile Info element [{0}] is null.</RaiseError>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>strTmpString</Value1>
							<Value2>EmptyString</Value2>
							<RaiseError Id="8" Param0="u32ProfileCounter">Profile Info element [{0}] is an empty string.</RaiseError>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="GetDeviceProfile">
					<CallTestFunction Name="GetDeviceProfile">
						<Parameter>strTmpString</Parameter>
						<OutParameter>uint16CurDeviceProfile</OutParameter>
					</CallTestFunction>
				</TestStep>
				<TestStep Name="GetModuleProfile">
					<CallTestFunction Name="GetModuleProfile">
						<Parameter>strTmpString</Parameter>
						<OutParameter>uint16CurModuleProfile</OutParameter>
					</CallTestFunction>
				</TestStep>
				<TestStep Name="GetSubModuleProfile">
					<CallTestFunction Name="GetSubModuleProfile">
						<Parameter>strTmpString</Parameter>
						<OutParameter>uint16CurSubModuleProfile</OutParameter>
					</CallTestFunction>
				</TestStep>
				<TestStep Name="DumpProfileInfo">
					<Description Id="9" Param0="uint16CurDeviceProfile" Param1="uint16CurModuleProfile" Param2="uint16CurSubModuleProfile" Param3="u32ProfileCounter" Level="Output">Module[{3}] : DeviceProfile '{0}' ; ModuleProfile '{1}' ; SubModuleProfile '{2}'</Description>
					<Compare>
						<Equal>
							<Value1>bIgnoreProfileID</Value1>
							<Value2>true</Value2>
							<GotoStep>IndicateThatAtleastOneModuleMatch</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CompareDeviceProfile">
					<Compare>
						<NotEqual>
							<Value1>uint16CurDeviceProfile</Value1>
							<Value2>5003</Value2>
							<WriteLine Id="10" Param0="uint16CurDeviceProfile" Level="Output">Skip Profile  (Test Device Profile '5003' != Cur Device Profile '{0}')</WriteLine>
						</NotEqual>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>uint16CurDeviceProfile</Value1>
							<Value2>5003</Value2>
							<GotoStep>ProfileLoopEnd</GotoStep>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep Name="CompareModuleProfile">
					<Compare>
						<NotEqual>
							<Value1>uint16CurModuleProfile</Value1>
							<Value2>2011</Value2>
							<WriteLine Id="11" Param0="uint16CurModuleProfile" Level="Output">Skip Profile  (Test Module Profile '2011' != Cur Module Profile '{0}')</WriteLine>
						</NotEqual>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>uint16CurModuleProfile</Value1>
							<Value2>2011</Value2>
							<GotoStep>ProfileLoopEnd</GotoStep>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep Name="CompareSubModuleProfile">
					<Compare>
						<NotEqual>
							<Value1>uint16CurSubModuleProfile</Value1>
							<Value2>0</Value2>
							<WriteLine Id="12" Param0="uint16CurSubModuleProfile" Level="Output">Skip Profile  (Test SubModule Profile '0' != Cur SubModule Profile '{0}')</WriteLine>
						</NotEqual>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>uint16CurSubModuleProfile</Value1>
							<Value2>0</Value2>
							<GotoStep>ProfileLoopEnd</GotoStep>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep Name="IndicateThatAtleastOneModuleMatch">
					<SetVariable Target="bAtLeastOneModuleMatch">true</SetVariable>
				</TestStep>
				<TestStep Name="GetFirstReservedObjectIndexInlcOffset">
					<SetVariable Target="u16ObjectIndexInclOffset">#x7002 + (u32ProfileCounter * #x10)</SetVariable>
					<WriteLine Id="13" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : First reserved object index '0x{0:X}'</WriteLine>
				</TestStep>
				<TestStep Name="GetNextDefinedObjectIndexInlcOffset">
					<SetVariable Target="u16NextDefObjectIndexInclOffset">#x7004 + (u32ProfileCounter * #x0010)</SetVariable>
					<WriteLine Id="14" Param0="u16NextDefObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : Next defined object index '0x{0:X}'</WriteLine>
				</TestStep>
				<TestStep Name="CallCheckReservedObjectRange">
					<Description Id="15" Level="Verbose">VerifyObject : Load 'online' object dictionary for testing.</Description>
					<CallTestFunction Name="CheckReservedObjectRange">
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>u16NextDefObjectIndexInclOffset</Parameter>
						<Parameter>odDeviceObjectdictionary</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<GotoStep>ProfileLoopEnd</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="ProfileLoopEnd">
					<Compare>
						<Equal>
							<Value1>bAtLeastOneModuleMatch</Value1>
							<Value2>false</Value2>
							<GotoStep>HandleAbortTestCaseOnFirstError</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="HandleAbortTestCaseOnFirstError">
					<Compare>
						<Equal>
							<Value1>bAbortTestCaseOnFirstError</Value1>
							<Value2>false</Value2>
							<GotoStep>ProfileLoopIncrement</GotoStep>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>strResult</Value1>
							<Value2>EmptyString</Value2>
							<GotoStep>ProfileLoopIncrement</GotoStep>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="16" Level="Output">Object verification for all following modules abort because an error was already detected for the current module.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>END</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="ProfileLoopIncrement">
					<SetVariable Target="u32ProfileCounter">u32ProfileCounter + 1</SetVariable>
					<Compare>
						<Greater>
							<Value1>u32CurrentProfilesLength</Value1>
							<Value2>u32ProfileCounter</Value2>
							<GotoStep>ProfileLoopStart</GotoStep>
						</Greater>
					</Compare>
				</TestStep>
				<TestStep Name="END">
					<Compare>
						<NotEqual>
							<Value1>bAtLeastOneModuleMatch</Value1>
							<Value2>true</Value2>
							<SkipCase Id="17">SKIP TEST(no module/channel supports the current profile)</SkipCase>
						</NotEqual>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bDEBUG</Value1>
							<Value2>true</Value2>
							<WriteLine Id="18" Param0="strResult" Level="Verbose">DEBUG | Result : '{0}'.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>strResult</Value1>
							<Value2>EmptyString</Value2>
							<ReturnSuccess Id="19">Test succeed</ReturnSuccess>
						</Equal>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>strResult</Value1>
							<Value2>EmptyString</Value2>
							<RaiseError Id="20"></RaiseError>
						</NotEqual>
					</Compare>
				</TestStep>
			</TestCase>
			<TestCase Name="offline | 0x7004 (Regulation / Control Mode)" CaseId="7">
				<Description>
					<PreCondition>- The device profile is 5003
- The module profile is 2011
- The submodule profile is 0</PreCondition>
					<Action>- Iterate over all offline defined modules/channels and if the PreCondition matches the following operations are done:
- Get the offline description of object 0x7004(+module specific offset) 'Regulation / Control Mode' and all entries
 Check:
    (Name)
    BitSize
    DataType
    Rx / Tx mappable
    Default Data
    MinData
    Flags       </Action>
					<PostCondition>Error if
- mandatory object / entry is not defined
- an optional object exists and the entries are invalid
- Object / entry description does not match with the specification</PostCondition>
					<ProposalForSolution>- Define the missing objects
- correct object / entry description</ProposalForSolution>
					<References>
						<Reference Specification="ETG.5003.2011"></Reference>
					</References>
					<Mandatory>true</Mandatory>
				</Description>
				<TestStep Name="InitResult">
					<SetVariable Target="strResult">EmptyString</SetVariable>
				</TestStep>
				<TestStep Name="CheckIfOdAvailable">
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Mailbox</Value1>
							<Value2>false</Value2>
							<SkipCase Id="1">DuT does not support mailbox.</SkipCase>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Mailbox.CoE</Value1>
							<Value2>false</Value2>
							<SkipCase Id="2">DuT does not support CoE.</SkipCase>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep>
					<GetObjectDictionary Target="odDeviceObjectdictionary">
						<DictionaryType>Offline</DictionaryType>
					</GetObjectDictionary>
					<SkipOnFailure Id="3">No offline object dictionary defined.</SkipOnFailure>
				</TestStep>
				<TestStep>
					<GetObjectList Count="u32Tmp" Target="odDeviceObjectdictionaryList" SourceDict="odDeviceObjectdictionary"></GetObjectList>
					<Compare>
						<Equal>
							<Value1>u32Tmp</Value1>
							<Value2>0</Value2>
							<SkipCase Id="4">No offline object dictionary defined.</SkipCase>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="InitAtLeastOneProfileMatch">
					<SetVariable Target="bAtLeastOneModuleMatch">false</SetVariable>
				</TestStep>
				<TestStep Name="GetCurrentProfileList">
					<SizeOf UInt32Var="u32Tmp">arrOfflineProfiles</SizeOf>
					<Compare>
						<Equal>
							<Value1>u32Tmp</Value1>
							<Value2>0</Value2>
							<CallTestFunction Name="GetCurrentProfileList">
								<Parameter>"offline"</Parameter>
								<Parameter>"SafeOP"</Parameter>
								<OutParameter>arrOfflineProfiles</OutParameter>
							</CallTestFunction>
						</Equal>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>u32Tmp</Value1>
							<Value2>0</Value2>
							<WriteLine Id="5" Param0="arrOfflineProfiles" Level="Verbose">Use previously created profile list ({0})</WriteLine>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep>
					<SizeOf UInt32Var="u32Tmp">arrOfflineProfiles</SizeOf>
				</TestStep>
				<TestStep>
					<InitArray TargetArray="arrCurrentProfiles" Length="u32Tmp"></InitArray>
				</TestStep>
				<TestStep>
					<CopyArray>
						<SourceArray>arrOfflineProfiles</SourceArray>
						<DestinationArray>arrCurrentProfiles</DestinationArray>
						<Length>u32Tmp</Length>
					</CopyArray>
				</TestStep>
				<TestStep Name="InitProfileLoopCounter">
					<SetVariable Target="u32ProfileCounter">0</SetVariable>
				</TestStep>
				<TestStep Name="GetProfileArrayLength">
					<SizeOf UInt32Var="u32CurrentProfilesLength">arrCurrentProfiles</SizeOf>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="6" Param0="u32CurrentProfilesLength" Level="Verbose">'{0}' Profile(s) defined offline.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>u32CurrentProfilesLength</Value1>
							<Value2>0</Value2>
							<SkipCase Id="7">Skip case | no profile defined.</SkipCase>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="ProfileLoopStart">
					<GetArrayItem SourceArray="arrCurrentProfiles" Target="strTmpString" Index="u32ProfileCounter"></GetArrayItem>
				</TestStep>
				<TestStep Name="CheckProfileInformationString">
					<Compare>
						<Equal>
							<Value1>strTmpString</Value1>
							<Value2>null</Value2>
							<RaiseError Id="8" Param0="u32ProfileCounter">Profile Info element [{0}] is null.</RaiseError>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>strTmpString</Value1>
							<Value2>EmptyString</Value2>
							<RaiseError Id="9" Param0="u32ProfileCounter">Profile Info element [{0}] is an empty string.</RaiseError>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="GetDeviceProfile">
					<CallTestFunction Name="GetDeviceProfile">
						<Parameter>strTmpString</Parameter>
						<OutParameter>uint16CurDeviceProfile</OutParameter>
					</CallTestFunction>
				</TestStep>
				<TestStep Name="GetModuleProfile">
					<CallTestFunction Name="GetModuleProfile">
						<Parameter>strTmpString</Parameter>
						<OutParameter>uint16CurModuleProfile</OutParameter>
					</CallTestFunction>
				</TestStep>
				<TestStep Name="GetSubModuleProfile">
					<CallTestFunction Name="GetSubModuleProfile">
						<Parameter>strTmpString</Parameter>
						<OutParameter>uint16CurSubModuleProfile</OutParameter>
					</CallTestFunction>
				</TestStep>
				<TestStep Name="DumpProfileInfo">
					<Description Id="10" Param0="uint16CurDeviceProfile" Param1="uint16CurModuleProfile" Param2="uint16CurSubModuleProfile" Param3="u32ProfileCounter" Level="Output">Module[{3}] : DeviceProfile '{0}' ; ModuleProfile '{1}' ; SubModuleProfile '{2}'</Description>
					<Compare>
						<Equal>
							<Value1>bIgnoreProfileID</Value1>
							<Value2>true</Value2>
							<GotoStep>IndicateThatAtleastOneModuleMatch</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CompareDeviceProfile">
					<Compare>
						<NotEqual>
							<Value1>uint16CurDeviceProfile</Value1>
							<Value2>5003</Value2>
							<WriteLine Id="11" Param0="uint16CurDeviceProfile" Level="Output">Skip Profile  (Test Device Profile '5003' != Cur Device Profile '{0}')</WriteLine>
						</NotEqual>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>uint16CurDeviceProfile</Value1>
							<Value2>5003</Value2>
							<GotoStep>ProfileLoopEnd</GotoStep>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep Name="CompareModuleProfile">
					<Compare>
						<NotEqual>
							<Value1>uint16CurModuleProfile</Value1>
							<Value2>2011</Value2>
							<WriteLine Id="12" Param0="uint16CurModuleProfile" Level="Output">Skip Profile  (Test Module Profile '2011' != Cur Module Profile '{0}')</WriteLine>
						</NotEqual>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>uint16CurModuleProfile</Value1>
							<Value2>2011</Value2>
							<GotoStep>ProfileLoopEnd</GotoStep>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep Name="CompareSubModuleProfile">
					<Compare>
						<NotEqual>
							<Value1>uint16CurSubModuleProfile</Value1>
							<Value2>0</Value2>
							<WriteLine Id="13" Param0="uint16CurSubModuleProfile" Level="Output">Skip Profile  (Test SubModule Profile '0' != Cur SubModule Profile '{0}')</WriteLine>
						</NotEqual>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>uint16CurSubModuleProfile</Value1>
							<Value2>0</Value2>
							<GotoStep>ProfileLoopEnd</GotoStep>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep Name="IndicateThatAtleastOneModuleMatch">
					<SetVariable Target="bAtLeastOneModuleMatch">true</SetVariable>
				</TestStep>
				<TestStep Name="GetObjectIndexInclOffset">
					<SetVariable Target="u16ObjectIndexInclOffset">#x7004 + (u32ProfileCounter * #x10)</SetVariable>
					<WriteLine Id="14" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : ObjectIndex '0x{0:X}'</WriteLine>
				</TestStep>
				<TestStep Name="LoadDeviceObjectDictionary">
					<Description Id="15" Level="Verbose">Load 'offline' object dictionary for testing.</Description>
					<GetObjectDictionary Target="odDeviceObjectdictionary">
						<DictionaryType>Offline</DictionaryType>
					</GetObjectDictionary>
					<RaiseErrorOnFailure Id="16">VerifyObject : failed to load offline object dictionary.</RaiseErrorOnFailure>
				</TestStep>
				<TestStep Name="CallCheckObjectDescription">
					<Description Id="17" Param0="u16ObjectIndexInclOffset" Level="Output">Verify the object description 0x{0:X4} 'Regulation / Control Mode'.</Description>
					<CallTestFunction Name="CheckObjectDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"offline"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>"Regulation / Control Mode"</Parameter>
						<Parameter>null</Parameter>
						<Parameter>9</Parameter>
						<Parameter>-1</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<GotoStep>ProfileLoopEnd</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="InitEntryBittOffset">
					<SetVariable Target="i32CurrentBitOffset">0</SetVariable>
				</TestStep>
				<TestStep Name="StartSi0">
					<Description Id="18" Level="Output">Start validate SubIndex0</Description>
					<WriteLine Id="19" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : Subindex '0x{0:X}.0'</WriteLine>
				</TestStep>
				<TestStep Name="CallSi0CheckEntryDescription">
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"offline"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>0</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>null</Parameter>
						<Parameter>5</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>null</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>null</Parameter>
						<Parameter>null</Parameter>
						<Parameter>null</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>8</Parameter>
						<Parameter>i32CurrentBitOffset</Parameter>
						<Parameter>true</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="EndSi0">
					<SetVariable Target="i32CurrentBitOffset">16</SetVariable>
				</TestStep>
				<TestStep Name="StartSi1">
					<Description Id="20" Level="Output">Start validate SubIndex1</Description>
					<WriteLine Id="21" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : Subindex '0x{0:X}.1'</WriteLine>
				</TestStep>
				<TestStep Name="CallSi1CheckEntryDescription">
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"offline"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>1</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>"Regulation / Control Mode"</Parameter>
						<Parameter>5</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>null</Parameter>
						<Parameter>R</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>8</Parameter>
						<Parameter>i32CurrentBitOffset</Parameter>
						<Parameter>true</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="EndSi1">
					<SetVariable Target="i32CurrentBitOffset">i32CurrentBitOffset + 8</SetVariable>
				</TestStep>
				<TestStep Name="CheckReservedEntryRange_2_to_255">
					<Description Id="22" Level="Output">Start check reserved entry range 2 to 255</Description>
					<CallTestFunction Name="CheckReservedEntryRange">
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>2</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>odDeviceObjectdictionary</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="ProfileLoopEnd">
					<Compare>
						<Equal>
							<Value1>bAtLeastOneModuleMatch</Value1>
							<Value2>false</Value2>
							<GotoStep>HandleAbortTestCaseOnFirstError</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="HandleAbortTestCaseOnFirstError">
					<Compare>
						<Equal>
							<Value1>bAbortTestCaseOnFirstError</Value1>
							<Value2>false</Value2>
							<GotoStep>ProfileLoopIncrement</GotoStep>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>strResult</Value1>
							<Value2>EmptyString</Value2>
							<GotoStep>ProfileLoopIncrement</GotoStep>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="23" Level="Output">Object verification for all following modules abort because an error was already detected for the current module.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>END</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="ProfileLoopIncrement">
					<SetVariable Target="u32ProfileCounter">u32ProfileCounter + 1</SetVariable>
					<Compare>
						<Greater>
							<Value1>u32CurrentProfilesLength</Value1>
							<Value2>u32ProfileCounter</Value2>
							<GotoStep>ProfileLoopStart</GotoStep>
						</Greater>
					</Compare>
				</TestStep>
				<TestStep Name="END">
					<Compare>
						<NotEqual>
							<Value1>bAtLeastOneModuleMatch</Value1>
							<Value2>true</Value2>
							<SkipCase Id="24">SKIP TEST(no module/channel supports the current profile)</SkipCase>
						</NotEqual>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bDEBUG</Value1>
							<Value2>true</Value2>
							<WriteLine Id="25" Param0="strResult" Level="Verbose">DEBUG | Result : '{0}'.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>strResult</Value1>
							<Value2>EmptyString</Value2>
							<ReturnSuccess Id="26">Test succeed</ReturnSuccess>
						</Equal>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>strResult</Value1>
							<Value2>EmptyString</Value2>
							<RaiseError Id="27"></RaiseError>
						</NotEqual>
					</Compare>
				</TestStep>
			</TestCase>
			<TestCase Name="online | 0x7004 (Regulation / Control Mode)" CaseId="8">
				<Description>
					<PreCondition>- The device profile is 5003
- The module profile is 2011
- The submodule profile is 0</PreCondition>
					<Action>- Iterate over all online defined modules/channels and if the PreCondition matches the following operations are done:
- Get the online description of object 0x7004(+module specific offset) 'Regulation / Control Mode' and all entries
 Check:
    (Name)
    BitSize
    DataType
    Rx / Tx mappable
    Default Data
    MinData
    Flags       </Action>
					<PostCondition>Error if
- mandatory object / entry is not defined
- an optional object exists and the entries are invalid
- Object / entry description does not match with the specification</PostCondition>
					<ProposalForSolution>- Define the missing objects
- correct object / entry description</ProposalForSolution>
					<References>
						<Reference Specification="ETG.5003.2011"></Reference>
					</References>
					<Mandatory>true</Mandatory>
				</Description>
				<TestStep Name="InitResult">
					<SetVariable Target="strResult">EmptyString</SetVariable>
				</TestStep>
				<TestStep Name="CheckIfOdAvailable">
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Mailbox</Value1>
							<Value2>false</Value2>
							<SkipCase Id="1">DuT does not support mailbox.</SkipCase>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Mailbox.CoE</Value1>
							<Value2>false</Value2>
							<SkipCase Id="2">DuT does not support CoE.</SkipCase>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Mailbox.CoE.SdoInfo</Value1>
							<Value2>false</Value2>
							<SkipCase Id="3">DuT does not support SDO Info.</SkipCase>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="InitAtLeastOneProfileMatch">
					<SetVariable Target="bAtLeastOneModuleMatch">false</SetVariable>
				</TestStep>
				<TestStep Name="GetCurrentProfileList">
					<SizeOf UInt32Var="u32Tmp">arrOnlineProfiles</SizeOf>
					<Compare>
						<Equal>
							<Value1>u32Tmp</Value1>
							<Value2>0</Value2>
							<CallTestFunction Name="GetCurrentProfileList">
								<Parameter>"online"</Parameter>
								<Parameter>"SafeOP"</Parameter>
								<OutParameter>arrOnlineProfiles</OutParameter>
							</CallTestFunction>
						</Equal>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>u32Tmp</Value1>
							<Value2>0</Value2>
							<WriteLine Id="4" Param0="arrOnlineProfiles" Level="Verbose">Use previously created profile list ({0})</WriteLine>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep>
					<SizeOf UInt32Var="u32Tmp">arrOnlineProfiles</SizeOf>
				</TestStep>
				<TestStep>
					<InitArray TargetArray="arrCurrentProfiles" Length="u32Tmp"></InitArray>
				</TestStep>
				<TestStep>
					<CopyArray>
						<SourceArray>arrOnlineProfiles</SourceArray>
						<DestinationArray>arrCurrentProfiles</DestinationArray>
						<Length>u32Tmp</Length>
					</CopyArray>
				</TestStep>
				<TestStep Name="InitProfileLoopCounter">
					<SetVariable Target="u32ProfileCounter">0</SetVariable>
				</TestStep>
				<TestStep Name="GetProfileArrayLength">
					<SizeOf UInt32Var="u32CurrentProfilesLength">arrCurrentProfiles</SizeOf>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="5" Param0="u32CurrentProfilesLength" Level="Verbose">'{0}' Profile(s) defined online.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>u32CurrentProfilesLength</Value1>
							<Value2>0</Value2>
							<SkipCase Id="6">Skip case | no profile defined.</SkipCase>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="ProfileLoopStart">
					<GetArrayItem SourceArray="arrCurrentProfiles" Target="strTmpString" Index="u32ProfileCounter"></GetArrayItem>
				</TestStep>
				<TestStep Name="CheckProfileInformationString">
					<Compare>
						<Equal>
							<Value1>strTmpString</Value1>
							<Value2>null</Value2>
							<RaiseError Id="7" Param0="u32ProfileCounter">Profile Info element [{0}] is null.</RaiseError>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>strTmpString</Value1>
							<Value2>EmptyString</Value2>
							<RaiseError Id="8" Param0="u32ProfileCounter">Profile Info element [{0}] is an empty string.</RaiseError>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="GetDeviceProfile">
					<CallTestFunction Name="GetDeviceProfile">
						<Parameter>strTmpString</Parameter>
						<OutParameter>uint16CurDeviceProfile</OutParameter>
					</CallTestFunction>
				</TestStep>
				<TestStep Name="GetModuleProfile">
					<CallTestFunction Name="GetModuleProfile">
						<Parameter>strTmpString</Parameter>
						<OutParameter>uint16CurModuleProfile</OutParameter>
					</CallTestFunction>
				</TestStep>
				<TestStep Name="GetSubModuleProfile">
					<CallTestFunction Name="GetSubModuleProfile">
						<Parameter>strTmpString</Parameter>
						<OutParameter>uint16CurSubModuleProfile</OutParameter>
					</CallTestFunction>
				</TestStep>
				<TestStep Name="DumpProfileInfo">
					<Description Id="9" Param0="uint16CurDeviceProfile" Param1="uint16CurModuleProfile" Param2="uint16CurSubModuleProfile" Param3="u32ProfileCounter" Level="Output">Module[{3}] : DeviceProfile '{0}' ; ModuleProfile '{1}' ; SubModuleProfile '{2}'</Description>
					<Compare>
						<Equal>
							<Value1>bIgnoreProfileID</Value1>
							<Value2>true</Value2>
							<GotoStep>IndicateThatAtleastOneModuleMatch</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CompareDeviceProfile">
					<Compare>
						<NotEqual>
							<Value1>uint16CurDeviceProfile</Value1>
							<Value2>5003</Value2>
							<WriteLine Id="10" Param0="uint16CurDeviceProfile" Level="Output">Skip Profile  (Test Device Profile '5003' != Cur Device Profile '{0}')</WriteLine>
						</NotEqual>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>uint16CurDeviceProfile</Value1>
							<Value2>5003</Value2>
							<GotoStep>ProfileLoopEnd</GotoStep>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep Name="CompareModuleProfile">
					<Compare>
						<NotEqual>
							<Value1>uint16CurModuleProfile</Value1>
							<Value2>2011</Value2>
							<WriteLine Id="11" Param0="uint16CurModuleProfile" Level="Output">Skip Profile  (Test Module Profile '2011' != Cur Module Profile '{0}')</WriteLine>
						</NotEqual>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>uint16CurModuleProfile</Value1>
							<Value2>2011</Value2>
							<GotoStep>ProfileLoopEnd</GotoStep>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep Name="CompareSubModuleProfile">
					<Compare>
						<NotEqual>
							<Value1>uint16CurSubModuleProfile</Value1>
							<Value2>0</Value2>
							<WriteLine Id="12" Param0="uint16CurSubModuleProfile" Level="Output">Skip Profile  (Test SubModule Profile '0' != Cur SubModule Profile '{0}')</WriteLine>
						</NotEqual>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>uint16CurSubModuleProfile</Value1>
							<Value2>0</Value2>
							<GotoStep>ProfileLoopEnd</GotoStep>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep Name="IndicateThatAtleastOneModuleMatch">
					<SetVariable Target="bAtLeastOneModuleMatch">true</SetVariable>
				</TestStep>
				<TestStep Name="GetObjectIndexInclOffset">
					<SetVariable Target="u16ObjectIndexInclOffset">#x7004 + (u32ProfileCounter * #x10)</SetVariable>
					<WriteLine Id="13" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : ObjectIndex '0x{0:X}'</WriteLine>
				</TestStep>
				<TestStep Name="LoadDeviceObjectDictionary">
					<Description Id="14" Level="Verbose">Load 'online' object dictionary for testing.</Description>
					<GetObjectDictionary Target="odDeviceObjectdictionary">
						<DictionaryType>Online</DictionaryType>
					</GetObjectDictionary>
					<RaiseErrorOnFailure Id="15">VerifyObject : failed to load online object dictionary.</RaiseErrorOnFailure>
				</TestStep>
				<TestStep Name="CallCheckObjectDescription">
					<Description Id="16" Param0="u16ObjectIndexInclOffset" Level="Output">Verify the object description 0x{0:X4} 'Regulation / Control Mode'.</Description>
					<CallTestFunction Name="CheckObjectDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"online"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>"Regulation / Control Mode"</Parameter>
						<Parameter>null</Parameter>
						<Parameter>9</Parameter>
						<Parameter>-1</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<GotoStep>ProfileLoopEnd</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="InitEntryBittOffset">
					<SetVariable Target="i32CurrentBitOffset">0</SetVariable>
				</TestStep>
				<TestStep Name="StartSi0">
					<Description Id="17" Level="Output">Start validate SubIndex0</Description>
					<WriteLine Id="18" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : Subindex '0x{0:X}.0'</WriteLine>
				</TestStep>
				<TestStep Name="CallSi0CheckEntryDescription">
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"online"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>0</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>null</Parameter>
						<Parameter>5</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>null</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>null</Parameter>
						<Parameter>null</Parameter>
						<Parameter>null</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>8</Parameter>
						<Parameter>i32CurrentBitOffset</Parameter>
						<Parameter>true</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="EndSi0">
					<SetVariable Target="i32CurrentBitOffset">16</SetVariable>
				</TestStep>
				<TestStep Name="StartSi1">
					<Description Id="19" Level="Output">Start validate SubIndex1</Description>
					<WriteLine Id="20" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : Subindex '0x{0:X}.1'</WriteLine>
				</TestStep>
				<TestStep Name="CallSi1CheckEntryDescription">
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"online"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>1</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>"Regulation / Control Mode"</Parameter>
						<Parameter>5</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>null</Parameter>
						<Parameter>R</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>8</Parameter>
						<Parameter>i32CurrentBitOffset</Parameter>
						<Parameter>true</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="EndSi1">
					<SetVariable Target="i32CurrentBitOffset">i32CurrentBitOffset + 8</SetVariable>
				</TestStep>
				<TestStep Name="CheckReservedEntryRange_2_to_255">
					<Description Id="21" Level="Output">Start check reserved entry range 2 to 255</Description>
					<CallTestFunction Name="CheckReservedEntryRange">
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>2</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>odDeviceObjectdictionary</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="ProfileLoopEnd">
					<Compare>
						<Equal>
							<Value1>bAtLeastOneModuleMatch</Value1>
							<Value2>false</Value2>
							<GotoStep>HandleAbortTestCaseOnFirstError</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="HandleAbortTestCaseOnFirstError">
					<Compare>
						<Equal>
							<Value1>bAbortTestCaseOnFirstError</Value1>
							<Value2>false</Value2>
							<GotoStep>ProfileLoopIncrement</GotoStep>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>strResult</Value1>
							<Value2>EmptyString</Value2>
							<GotoStep>ProfileLoopIncrement</GotoStep>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="22" Level="Output">Object verification for all following modules abort because an error was already detected for the current module.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>END</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="ProfileLoopIncrement">
					<SetVariable Target="u32ProfileCounter">u32ProfileCounter + 1</SetVariable>
					<Compare>
						<Greater>
							<Value1>u32CurrentProfilesLength</Value1>
							<Value2>u32ProfileCounter</Value2>
							<GotoStep>ProfileLoopStart</GotoStep>
						</Greater>
					</Compare>
				</TestStep>
				<TestStep Name="END">
					<Compare>
						<NotEqual>
							<Value1>bAtLeastOneModuleMatch</Value1>
							<Value2>true</Value2>
							<SkipCase Id="23">SKIP TEST(no module/channel supports the current profile)</SkipCase>
						</NotEqual>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bDEBUG</Value1>
							<Value2>true</Value2>
							<WriteLine Id="24" Param0="strResult" Level="Verbose">DEBUG | Result : '{0}'.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>strResult</Value1>
							<Value2>EmptyString</Value2>
							<ReturnSuccess Id="25">Test succeed</ReturnSuccess>
						</Equal>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>strResult</Value1>
							<Value2>EmptyString</Value2>
							<RaiseError Id="26"></RaiseError>
						</NotEqual>
					</Compare>
				</TestStep>
			</TestCase>
			<TestCase Name="offline | 0x7005 (Setpoint)" CaseId="9">
				<Description>
					<PreCondition>- The device profile is 5003
- The module profile is 2011
- The submodule profile is 0</PreCondition>
					<Action>- Iterate over all offline defined modules/channels and if the PreCondition matches the following operations are done:
- Get the offline description of object 0x7005(+module specific offset) 'Setpoint' and all entries
 Check:
    (Name)
    BitSize
    DataType
    Rx / Tx mappable
    Default Data
    MinData
    Flags       </Action>
					<PostCondition>Error if
- mandatory object / entry is not defined
- an optional object exists and the entries are invalid
- Object / entry description does not match with the specification</PostCondition>
					<ProposalForSolution>- Define the missing objects
- correct object / entry description</ProposalForSolution>
					<References>
						<Reference Specification="ETG.5003.2011"></Reference>
					</References>
					<Mandatory>true</Mandatory>
				</Description>
				<TestStep Name="InitResult">
					<SetVariable Target="strResult">EmptyString</SetVariable>
				</TestStep>
				<TestStep Name="CheckIfOdAvailable">
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Mailbox</Value1>
							<Value2>false</Value2>
							<SkipCase Id="1">DuT does not support mailbox.</SkipCase>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Mailbox.CoE</Value1>
							<Value2>false</Value2>
							<SkipCase Id="2">DuT does not support CoE.</SkipCase>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep>
					<GetObjectDictionary Target="odDeviceObjectdictionary">
						<DictionaryType>Offline</DictionaryType>
					</GetObjectDictionary>
					<SkipOnFailure Id="3">No offline object dictionary defined.</SkipOnFailure>
				</TestStep>
				<TestStep>
					<GetObjectList Count="u32Tmp" Target="odDeviceObjectdictionaryList" SourceDict="odDeviceObjectdictionary"></GetObjectList>
					<Compare>
						<Equal>
							<Value1>u32Tmp</Value1>
							<Value2>0</Value2>
							<SkipCase Id="4">No offline object dictionary defined.</SkipCase>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="InitAtLeastOneProfileMatch">
					<SetVariable Target="bAtLeastOneModuleMatch">false</SetVariable>
				</TestStep>
				<TestStep Name="GetCurrentProfileList">
					<SizeOf UInt32Var="u32Tmp">arrOfflineProfiles</SizeOf>
					<Compare>
						<Equal>
							<Value1>u32Tmp</Value1>
							<Value2>0</Value2>
							<CallTestFunction Name="GetCurrentProfileList">
								<Parameter>"offline"</Parameter>
								<Parameter>"SafeOP"</Parameter>
								<OutParameter>arrOfflineProfiles</OutParameter>
							</CallTestFunction>
						</Equal>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>u32Tmp</Value1>
							<Value2>0</Value2>
							<WriteLine Id="5" Param0="arrOfflineProfiles" Level="Verbose">Use previously created profile list ({0})</WriteLine>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep>
					<SizeOf UInt32Var="u32Tmp">arrOfflineProfiles</SizeOf>
				</TestStep>
				<TestStep>
					<InitArray TargetArray="arrCurrentProfiles" Length="u32Tmp"></InitArray>
				</TestStep>
				<TestStep>
					<CopyArray>
						<SourceArray>arrOfflineProfiles</SourceArray>
						<DestinationArray>arrCurrentProfiles</DestinationArray>
						<Length>u32Tmp</Length>
					</CopyArray>
				</TestStep>
				<TestStep Name="InitProfileLoopCounter">
					<SetVariable Target="u32ProfileCounter">0</SetVariable>
				</TestStep>
				<TestStep Name="GetProfileArrayLength">
					<SizeOf UInt32Var="u32CurrentProfilesLength">arrCurrentProfiles</SizeOf>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="6" Param0="u32CurrentProfilesLength" Level="Verbose">'{0}' Profile(s) defined offline.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>u32CurrentProfilesLength</Value1>
							<Value2>0</Value2>
							<SkipCase Id="7">Skip case | no profile defined.</SkipCase>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="ProfileLoopStart">
					<GetArrayItem SourceArray="arrCurrentProfiles" Target="strTmpString" Index="u32ProfileCounter"></GetArrayItem>
				</TestStep>
				<TestStep Name="CheckProfileInformationString">
					<Compare>
						<Equal>
							<Value1>strTmpString</Value1>
							<Value2>null</Value2>
							<RaiseError Id="8" Param0="u32ProfileCounter">Profile Info element [{0}] is null.</RaiseError>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>strTmpString</Value1>
							<Value2>EmptyString</Value2>
							<RaiseError Id="9" Param0="u32ProfileCounter">Profile Info element [{0}] is an empty string.</RaiseError>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="GetDeviceProfile">
					<CallTestFunction Name="GetDeviceProfile">
						<Parameter>strTmpString</Parameter>
						<OutParameter>uint16CurDeviceProfile</OutParameter>
					</CallTestFunction>
				</TestStep>
				<TestStep Name="GetModuleProfile">
					<CallTestFunction Name="GetModuleProfile">
						<Parameter>strTmpString</Parameter>
						<OutParameter>uint16CurModuleProfile</OutParameter>
					</CallTestFunction>
				</TestStep>
				<TestStep Name="GetSubModuleProfile">
					<CallTestFunction Name="GetSubModuleProfile">
						<Parameter>strTmpString</Parameter>
						<OutParameter>uint16CurSubModuleProfile</OutParameter>
					</CallTestFunction>
				</TestStep>
				<TestStep Name="DumpProfileInfo">
					<Description Id="10" Param0="uint16CurDeviceProfile" Param1="uint16CurModuleProfile" Param2="uint16CurSubModuleProfile" Param3="u32ProfileCounter" Level="Output">Module[{3}] : DeviceProfile '{0}' ; ModuleProfile '{1}' ; SubModuleProfile '{2}'</Description>
					<Compare>
						<Equal>
							<Value1>bIgnoreProfileID</Value1>
							<Value2>true</Value2>
							<GotoStep>IndicateThatAtleastOneModuleMatch</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CompareDeviceProfile">
					<Compare>
						<NotEqual>
							<Value1>uint16CurDeviceProfile</Value1>
							<Value2>5003</Value2>
							<WriteLine Id="11" Param0="uint16CurDeviceProfile" Level="Output">Skip Profile  (Test Device Profile '5003' != Cur Device Profile '{0}')</WriteLine>
						</NotEqual>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>uint16CurDeviceProfile</Value1>
							<Value2>5003</Value2>
							<GotoStep>ProfileLoopEnd</GotoStep>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep Name="CompareModuleProfile">
					<Compare>
						<NotEqual>
							<Value1>uint16CurModuleProfile</Value1>
							<Value2>2011</Value2>
							<WriteLine Id="12" Param0="uint16CurModuleProfile" Level="Output">Skip Profile  (Test Module Profile '2011' != Cur Module Profile '{0}')</WriteLine>
						</NotEqual>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>uint16CurModuleProfile</Value1>
							<Value2>2011</Value2>
							<GotoStep>ProfileLoopEnd</GotoStep>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep Name="CompareSubModuleProfile">
					<Compare>
						<NotEqual>
							<Value1>uint16CurSubModuleProfile</Value1>
							<Value2>0</Value2>
							<WriteLine Id="13" Param0="uint16CurSubModuleProfile" Level="Output">Skip Profile  (Test SubModule Profile '0' != Cur SubModule Profile '{0}')</WriteLine>
						</NotEqual>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>uint16CurSubModuleProfile</Value1>
							<Value2>0</Value2>
							<GotoStep>ProfileLoopEnd</GotoStep>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep Name="IndicateThatAtleastOneModuleMatch">
					<SetVariable Target="bAtLeastOneModuleMatch">true</SetVariable>
				</TestStep>
				<TestStep Name="GetObjectIndexInclOffset">
					<SetVariable Target="u16ObjectIndexInclOffset">#x7005 + (u32ProfileCounter * #x10)</SetVariable>
					<WriteLine Id="14" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : ObjectIndex '0x{0:X}'</WriteLine>
				</TestStep>
				<TestStep Name="LoadDeviceObjectDictionary">
					<Description Id="15" Level="Verbose">Load 'offline' object dictionary for testing.</Description>
					<GetObjectDictionary Target="odDeviceObjectdictionary">
						<DictionaryType>Offline</DictionaryType>
					</GetObjectDictionary>
					<RaiseErrorOnFailure Id="16">VerifyObject : failed to load offline object dictionary.</RaiseErrorOnFailure>
				</TestStep>
				<TestStep Name="CallCheckObjectDescription">
					<Description Id="17" Param0="u16ObjectIndexInclOffset" Level="Output">Verify the object description 0x{0:X4} 'Setpoint'.</Description>
					<CallTestFunction Name="CheckObjectDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"offline"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>"Setpoint"</Parameter>
						<Parameter>null</Parameter>
						<Parameter>9</Parameter>
						<Parameter>-1</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<GotoStep>ProfileLoopEnd</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="InitEntryBittOffset">
					<SetVariable Target="i32CurrentBitOffset">0</SetVariable>
				</TestStep>
				<TestStep Name="StartSi0">
					<Description Id="18" Level="Output">Start validate SubIndex0</Description>
					<WriteLine Id="19" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : Subindex '0x{0:X}.0'</WriteLine>
				</TestStep>
				<TestStep Name="CallSi0CheckEntryDescription">
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"offline"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>0</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>null</Parameter>
						<Parameter>5</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>null</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>null</Parameter>
						<Parameter>null</Parameter>
						<Parameter>null</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>8</Parameter>
						<Parameter>i32CurrentBitOffset</Parameter>
						<Parameter>true</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="EndSi0">
					<SetVariable Target="i32CurrentBitOffset">16</SetVariable>
				</TestStep>
				<TestStep Name="StartSi1">
					<Description Id="20" Level="Output">Start validate SubIndex1</Description>
					<WriteLine Id="21" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : Subindex '0x{0:X}.1'</WriteLine>
				</TestStep>
				<TestStep Name="CallSi1CheckEntryDescription">
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"offline"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>1</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>"Setpoint"</Parameter>
						<Parameter>8</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>null</Parameter>
						<Parameter>R</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>32</Parameter>
						<Parameter>i32CurrentBitOffset</Parameter>
						<Parameter>true</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="EndSi1">
					<SetVariable Target="i32CurrentBitOffset">i32CurrentBitOffset + 32</SetVariable>
				</TestStep>
				<TestStep Name="CheckReservedEntryRange_2_to_255">
					<Description Id="22" Level="Output">Start check reserved entry range 2 to 255</Description>
					<CallTestFunction Name="CheckReservedEntryRange">
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>2</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>odDeviceObjectdictionary</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="ProfileLoopEnd">
					<Compare>
						<Equal>
							<Value1>bAtLeastOneModuleMatch</Value1>
							<Value2>false</Value2>
							<GotoStep>HandleAbortTestCaseOnFirstError</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="HandleAbortTestCaseOnFirstError">
					<Compare>
						<Equal>
							<Value1>bAbortTestCaseOnFirstError</Value1>
							<Value2>false</Value2>
							<GotoStep>ProfileLoopIncrement</GotoStep>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>strResult</Value1>
							<Value2>EmptyString</Value2>
							<GotoStep>ProfileLoopIncrement</GotoStep>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="23" Level="Output">Object verification for all following modules abort because an error was already detected for the current module.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>END</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="ProfileLoopIncrement">
					<SetVariable Target="u32ProfileCounter">u32ProfileCounter + 1</SetVariable>
					<Compare>
						<Greater>
							<Value1>u32CurrentProfilesLength</Value1>
							<Value2>u32ProfileCounter</Value2>
							<GotoStep>ProfileLoopStart</GotoStep>
						</Greater>
					</Compare>
				</TestStep>
				<TestStep Name="END">
					<Compare>
						<NotEqual>
							<Value1>bAtLeastOneModuleMatch</Value1>
							<Value2>true</Value2>
							<SkipCase Id="24">SKIP TEST(no module/channel supports the current profile)</SkipCase>
						</NotEqual>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bDEBUG</Value1>
							<Value2>true</Value2>
							<WriteLine Id="25" Param0="strResult" Level="Verbose">DEBUG | Result : '{0}'.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>strResult</Value1>
							<Value2>EmptyString</Value2>
							<ReturnSuccess Id="26">Test succeed</ReturnSuccess>
						</Equal>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>strResult</Value1>
							<Value2>EmptyString</Value2>
							<RaiseError Id="27"></RaiseError>
						</NotEqual>
					</Compare>
				</TestStep>
			</TestCase>
			<TestCase Name="online | 0x7005 (Setpoint)" CaseId="10">
				<Description>
					<PreCondition>- The device profile is 5003
- The module profile is 2011
- The submodule profile is 0</PreCondition>
					<Action>- Iterate over all online defined modules/channels and if the PreCondition matches the following operations are done:
- Get the online description of object 0x7005(+module specific offset) 'Setpoint' and all entries
 Check:
    (Name)
    BitSize
    DataType
    Rx / Tx mappable
    Default Data
    MinData
    Flags       </Action>
					<PostCondition>Error if
- mandatory object / entry is not defined
- an optional object exists and the entries are invalid
- Object / entry description does not match with the specification</PostCondition>
					<ProposalForSolution>- Define the missing objects
- correct object / entry description</ProposalForSolution>
					<References>
						<Reference Specification="ETG.5003.2011"></Reference>
					</References>
					<Mandatory>true</Mandatory>
				</Description>
				<TestStep Name="InitResult">
					<SetVariable Target="strResult">EmptyString</SetVariable>
				</TestStep>
				<TestStep Name="CheckIfOdAvailable">
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Mailbox</Value1>
							<Value2>false</Value2>
							<SkipCase Id="1">DuT does not support mailbox.</SkipCase>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Mailbox.CoE</Value1>
							<Value2>false</Value2>
							<SkipCase Id="2">DuT does not support CoE.</SkipCase>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Mailbox.CoE.SdoInfo</Value1>
							<Value2>false</Value2>
							<SkipCase Id="3">DuT does not support SDO Info.</SkipCase>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="InitAtLeastOneProfileMatch">
					<SetVariable Target="bAtLeastOneModuleMatch">false</SetVariable>
				</TestStep>
				<TestStep Name="GetCurrentProfileList">
					<SizeOf UInt32Var="u32Tmp">arrOnlineProfiles</SizeOf>
					<Compare>
						<Equal>
							<Value1>u32Tmp</Value1>
							<Value2>0</Value2>
							<CallTestFunction Name="GetCurrentProfileList">
								<Parameter>"online"</Parameter>
								<Parameter>"SafeOP"</Parameter>
								<OutParameter>arrOnlineProfiles</OutParameter>
							</CallTestFunction>
						</Equal>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>u32Tmp</Value1>
							<Value2>0</Value2>
							<WriteLine Id="4" Param0="arrOnlineProfiles" Level="Verbose">Use previously created profile list ({0})</WriteLine>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep>
					<SizeOf UInt32Var="u32Tmp">arrOnlineProfiles</SizeOf>
				</TestStep>
				<TestStep>
					<InitArray TargetArray="arrCurrentProfiles" Length="u32Tmp"></InitArray>
				</TestStep>
				<TestStep>
					<CopyArray>
						<SourceArray>arrOnlineProfiles</SourceArray>
						<DestinationArray>arrCurrentProfiles</DestinationArray>
						<Length>u32Tmp</Length>
					</CopyArray>
				</TestStep>
				<TestStep Name="InitProfileLoopCounter">
					<SetVariable Target="u32ProfileCounter">0</SetVariable>
				</TestStep>
				<TestStep Name="GetProfileArrayLength">
					<SizeOf UInt32Var="u32CurrentProfilesLength">arrCurrentProfiles</SizeOf>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="5" Param0="u32CurrentProfilesLength" Level="Verbose">'{0}' Profile(s) defined online.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>u32CurrentProfilesLength</Value1>
							<Value2>0</Value2>
							<SkipCase Id="6">Skip case | no profile defined.</SkipCase>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="ProfileLoopStart">
					<GetArrayItem SourceArray="arrCurrentProfiles" Target="strTmpString" Index="u32ProfileCounter"></GetArrayItem>
				</TestStep>
				<TestStep Name="CheckProfileInformationString">
					<Compare>
						<Equal>
							<Value1>strTmpString</Value1>
							<Value2>null</Value2>
							<RaiseError Id="7" Param0="u32ProfileCounter">Profile Info element [{0}] is null.</RaiseError>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>strTmpString</Value1>
							<Value2>EmptyString</Value2>
							<RaiseError Id="8" Param0="u32ProfileCounter">Profile Info element [{0}] is an empty string.</RaiseError>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="GetDeviceProfile">
					<CallTestFunction Name="GetDeviceProfile">
						<Parameter>strTmpString</Parameter>
						<OutParameter>uint16CurDeviceProfile</OutParameter>
					</CallTestFunction>
				</TestStep>
				<TestStep Name="GetModuleProfile">
					<CallTestFunction Name="GetModuleProfile">
						<Parameter>strTmpString</Parameter>
						<OutParameter>uint16CurModuleProfile</OutParameter>
					</CallTestFunction>
				</TestStep>
				<TestStep Name="GetSubModuleProfile">
					<CallTestFunction Name="GetSubModuleProfile">
						<Parameter>strTmpString</Parameter>
						<OutParameter>uint16CurSubModuleProfile</OutParameter>
					</CallTestFunction>
				</TestStep>
				<TestStep Name="DumpProfileInfo">
					<Description Id="9" Param0="uint16CurDeviceProfile" Param1="uint16CurModuleProfile" Param2="uint16CurSubModuleProfile" Param3="u32ProfileCounter" Level="Output">Module[{3}] : DeviceProfile '{0}' ; ModuleProfile '{1}' ; SubModuleProfile '{2}'</Description>
					<Compare>
						<Equal>
							<Value1>bIgnoreProfileID</Value1>
							<Value2>true</Value2>
							<GotoStep>IndicateThatAtleastOneModuleMatch</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CompareDeviceProfile">
					<Compare>
						<NotEqual>
							<Value1>uint16CurDeviceProfile</Value1>
							<Value2>5003</Value2>
							<WriteLine Id="10" Param0="uint16CurDeviceProfile" Level="Output">Skip Profile  (Test Device Profile '5003' != Cur Device Profile '{0}')</WriteLine>
						</NotEqual>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>uint16CurDeviceProfile</Value1>
							<Value2>5003</Value2>
							<GotoStep>ProfileLoopEnd</GotoStep>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep Name="CompareModuleProfile">
					<Compare>
						<NotEqual>
							<Value1>uint16CurModuleProfile</Value1>
							<Value2>2011</Value2>
							<WriteLine Id="11" Param0="uint16CurModuleProfile" Level="Output">Skip Profile  (Test Module Profile '2011' != Cur Module Profile '{0}')</WriteLine>
						</NotEqual>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>uint16CurModuleProfile</Value1>
							<Value2>2011</Value2>
							<GotoStep>ProfileLoopEnd</GotoStep>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep Name="CompareSubModuleProfile">
					<Compare>
						<NotEqual>
							<Value1>uint16CurSubModuleProfile</Value1>
							<Value2>0</Value2>
							<WriteLine Id="12" Param0="uint16CurSubModuleProfile" Level="Output">Skip Profile  (Test SubModule Profile '0' != Cur SubModule Profile '{0}')</WriteLine>
						</NotEqual>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>uint16CurSubModuleProfile</Value1>
							<Value2>0</Value2>
							<GotoStep>ProfileLoopEnd</GotoStep>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep Name="IndicateThatAtleastOneModuleMatch">
					<SetVariable Target="bAtLeastOneModuleMatch">true</SetVariable>
				</TestStep>
				<TestStep Name="GetObjectIndexInclOffset">
					<SetVariable Target="u16ObjectIndexInclOffset">#x7005 + (u32ProfileCounter * #x10)</SetVariable>
					<WriteLine Id="13" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : ObjectIndex '0x{0:X}'</WriteLine>
				</TestStep>
				<TestStep Name="LoadDeviceObjectDictionary">
					<Description Id="14" Level="Verbose">Load 'online' object dictionary for testing.</Description>
					<GetObjectDictionary Target="odDeviceObjectdictionary">
						<DictionaryType>Online</DictionaryType>
					</GetObjectDictionary>
					<RaiseErrorOnFailure Id="15">VerifyObject : failed to load online object dictionary.</RaiseErrorOnFailure>
				</TestStep>
				<TestStep Name="CallCheckObjectDescription">
					<Description Id="16" Param0="u16ObjectIndexInclOffset" Level="Output">Verify the object description 0x{0:X4} 'Setpoint'.</Description>
					<CallTestFunction Name="CheckObjectDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"online"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>"Setpoint"</Parameter>
						<Parameter>null</Parameter>
						<Parameter>9</Parameter>
						<Parameter>-1</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<GotoStep>ProfileLoopEnd</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="InitEntryBittOffset">
					<SetVariable Target="i32CurrentBitOffset">0</SetVariable>
				</TestStep>
				<TestStep Name="StartSi0">
					<Description Id="17" Level="Output">Start validate SubIndex0</Description>
					<WriteLine Id="18" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : Subindex '0x{0:X}.0'</WriteLine>
				</TestStep>
				<TestStep Name="CallSi0CheckEntryDescription">
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"online"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>0</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>null</Parameter>
						<Parameter>5</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>null</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>null</Parameter>
						<Parameter>null</Parameter>
						<Parameter>null</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>8</Parameter>
						<Parameter>i32CurrentBitOffset</Parameter>
						<Parameter>true</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="EndSi0">
					<SetVariable Target="i32CurrentBitOffset">16</SetVariable>
				</TestStep>
				<TestStep Name="StartSi1">
					<Description Id="19" Level="Output">Start validate SubIndex1</Description>
					<WriteLine Id="20" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : Subindex '0x{0:X}.1'</WriteLine>
				</TestStep>
				<TestStep Name="CallSi1CheckEntryDescription">
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"online"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>1</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>"Setpoint"</Parameter>
						<Parameter>8</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>null</Parameter>
						<Parameter>R</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>32</Parameter>
						<Parameter>i32CurrentBitOffset</Parameter>
						<Parameter>true</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="EndSi1">
					<SetVariable Target="i32CurrentBitOffset">i32CurrentBitOffset + 32</SetVariable>
				</TestStep>
				<TestStep Name="CheckReservedEntryRange_2_to_255">
					<Description Id="21" Level="Output">Start check reserved entry range 2 to 255</Description>
					<CallTestFunction Name="CheckReservedEntryRange">
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>2</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>odDeviceObjectdictionary</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="ProfileLoopEnd">
					<Compare>
						<Equal>
							<Value1>bAtLeastOneModuleMatch</Value1>
							<Value2>false</Value2>
							<GotoStep>HandleAbortTestCaseOnFirstError</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="HandleAbortTestCaseOnFirstError">
					<Compare>
						<Equal>
							<Value1>bAbortTestCaseOnFirstError</Value1>
							<Value2>false</Value2>
							<GotoStep>ProfileLoopIncrement</GotoStep>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>strResult</Value1>
							<Value2>EmptyString</Value2>
							<GotoStep>ProfileLoopIncrement</GotoStep>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="22" Level="Output">Object verification for all following modules abort because an error was already detected for the current module.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>END</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="ProfileLoopIncrement">
					<SetVariable Target="u32ProfileCounter">u32ProfileCounter + 1</SetVariable>
					<Compare>
						<Greater>
							<Value1>u32CurrentProfilesLength</Value1>
							<Value2>u32ProfileCounter</Value2>
							<GotoStep>ProfileLoopStart</GotoStep>
						</Greater>
					</Compare>
				</TestStep>
				<TestStep Name="END">
					<Compare>
						<NotEqual>
							<Value1>bAtLeastOneModuleMatch</Value1>
							<Value2>true</Value2>
							<SkipCase Id="23">SKIP TEST(no module/channel supports the current profile)</SkipCase>
						</NotEqual>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bDEBUG</Value1>
							<Value2>true</Value2>
							<WriteLine Id="24" Param0="strResult" Level="Verbose">DEBUG | Result : '{0}'.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>strResult</Value1>
							<Value2>EmptyString</Value2>
							<ReturnSuccess Id="25">Test succeed</ReturnSuccess>
						</Equal>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>strResult</Value1>
							<Value2>EmptyString</Value2>
							<RaiseError Id="26"></RaiseError>
						</NotEqual>
					</Compare>
				</TestStep>
			</TestCase>
			<TestCase Name="offline | 0x7006 (Automatic Mode Setpoints)" CaseId="11">
				<Description>
					<PreCondition>- The device profile is 5003
- The module profile is 2011
- The submodule profile is 0</PreCondition>
					<Action>- Iterate over all offline defined modules/channels and if the PreCondition matches the following operations are done:
- Get the offline description of object 0x7006(+module specific offset) 'Automatic Mode Setpoints' and all entries
 Check:
    (Name)
    BitSize
    DataType
    Rx / Tx mappable
    Default Data
    MinData
    Flags       </Action>
					<PostCondition>Error if
- mandatory object / entry is not defined
- an optional object exists and the entries are invalid
- Object / entry description does not match with the specification</PostCondition>
					<ProposalForSolution>- Define the missing objects
- correct object / entry description</ProposalForSolution>
					<References>
						<Reference Specification="ETG.5003.2011"></Reference>
					</References>
					<Mandatory>true</Mandatory>
				</Description>
				<TestStep Name="InitResult">
					<SetVariable Target="strResult">EmptyString</SetVariable>
				</TestStep>
				<TestStep Name="CheckIfOdAvailable">
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Mailbox</Value1>
							<Value2>false</Value2>
							<SkipCase Id="1">DuT does not support mailbox.</SkipCase>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Mailbox.CoE</Value1>
							<Value2>false</Value2>
							<SkipCase Id="2">DuT does not support CoE.</SkipCase>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep>
					<GetObjectDictionary Target="odDeviceObjectdictionary">
						<DictionaryType>Offline</DictionaryType>
					</GetObjectDictionary>
					<SkipOnFailure Id="3">No offline object dictionary defined.</SkipOnFailure>
				</TestStep>
				<TestStep>
					<GetObjectList Count="u32Tmp" Target="odDeviceObjectdictionaryList" SourceDict="odDeviceObjectdictionary"></GetObjectList>
					<Compare>
						<Equal>
							<Value1>u32Tmp</Value1>
							<Value2>0</Value2>
							<SkipCase Id="4">No offline object dictionary defined.</SkipCase>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="InitAtLeastOneProfileMatch">
					<SetVariable Target="bAtLeastOneModuleMatch">false</SetVariable>
				</TestStep>
				<TestStep Name="GetCurrentProfileList">
					<SizeOf UInt32Var="u32Tmp">arrOfflineProfiles</SizeOf>
					<Compare>
						<Equal>
							<Value1>u32Tmp</Value1>
							<Value2>0</Value2>
							<CallTestFunction Name="GetCurrentProfileList">
								<Parameter>"offline"</Parameter>
								<Parameter>"SafeOP"</Parameter>
								<OutParameter>arrOfflineProfiles</OutParameter>
							</CallTestFunction>
						</Equal>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>u32Tmp</Value1>
							<Value2>0</Value2>
							<WriteLine Id="5" Param0="arrOfflineProfiles" Level="Verbose">Use previously created profile list ({0})</WriteLine>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep>
					<SizeOf UInt32Var="u32Tmp">arrOfflineProfiles</SizeOf>
				</TestStep>
				<TestStep>
					<InitArray TargetArray="arrCurrentProfiles" Length="u32Tmp"></InitArray>
				</TestStep>
				<TestStep>
					<CopyArray>
						<SourceArray>arrOfflineProfiles</SourceArray>
						<DestinationArray>arrCurrentProfiles</DestinationArray>
						<Length>u32Tmp</Length>
					</CopyArray>
				</TestStep>
				<TestStep Name="InitProfileLoopCounter">
					<SetVariable Target="u32ProfileCounter">0</SetVariable>
				</TestStep>
				<TestStep Name="GetProfileArrayLength">
					<SizeOf UInt32Var="u32CurrentProfilesLength">arrCurrentProfiles</SizeOf>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="6" Param0="u32CurrentProfilesLength" Level="Verbose">'{0}' Profile(s) defined offline.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>u32CurrentProfilesLength</Value1>
							<Value2>0</Value2>
							<SkipCase Id="7">Skip case | no profile defined.</SkipCase>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="ProfileLoopStart">
					<GetArrayItem SourceArray="arrCurrentProfiles" Target="strTmpString" Index="u32ProfileCounter"></GetArrayItem>
				</TestStep>
				<TestStep Name="CheckProfileInformationString">
					<Compare>
						<Equal>
							<Value1>strTmpString</Value1>
							<Value2>null</Value2>
							<RaiseError Id="8" Param0="u32ProfileCounter">Profile Info element [{0}] is null.</RaiseError>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>strTmpString</Value1>
							<Value2>EmptyString</Value2>
							<RaiseError Id="9" Param0="u32ProfileCounter">Profile Info element [{0}] is an empty string.</RaiseError>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="GetDeviceProfile">
					<CallTestFunction Name="GetDeviceProfile">
						<Parameter>strTmpString</Parameter>
						<OutParameter>uint16CurDeviceProfile</OutParameter>
					</CallTestFunction>
				</TestStep>
				<TestStep Name="GetModuleProfile">
					<CallTestFunction Name="GetModuleProfile">
						<Parameter>strTmpString</Parameter>
						<OutParameter>uint16CurModuleProfile</OutParameter>
					</CallTestFunction>
				</TestStep>
				<TestStep Name="GetSubModuleProfile">
					<CallTestFunction Name="GetSubModuleProfile">
						<Parameter>strTmpString</Parameter>
						<OutParameter>uint16CurSubModuleProfile</OutParameter>
					</CallTestFunction>
				</TestStep>
				<TestStep Name="DumpProfileInfo">
					<Description Id="10" Param0="uint16CurDeviceProfile" Param1="uint16CurModuleProfile" Param2="uint16CurSubModuleProfile" Param3="u32ProfileCounter" Level="Output">Module[{3}] : DeviceProfile '{0}' ; ModuleProfile '{1}' ; SubModuleProfile '{2}'</Description>
					<Compare>
						<Equal>
							<Value1>bIgnoreProfileID</Value1>
							<Value2>true</Value2>
							<GotoStep>IndicateThatAtleastOneModuleMatch</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CompareDeviceProfile">
					<Compare>
						<NotEqual>
							<Value1>uint16CurDeviceProfile</Value1>
							<Value2>5003</Value2>
							<WriteLine Id="11" Param0="uint16CurDeviceProfile" Level="Output">Skip Profile  (Test Device Profile '5003' != Cur Device Profile '{0}')</WriteLine>
						</NotEqual>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>uint16CurDeviceProfile</Value1>
							<Value2>5003</Value2>
							<GotoStep>ProfileLoopEnd</GotoStep>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep Name="CompareModuleProfile">
					<Compare>
						<NotEqual>
							<Value1>uint16CurModuleProfile</Value1>
							<Value2>2011</Value2>
							<WriteLine Id="12" Param0="uint16CurModuleProfile" Level="Output">Skip Profile  (Test Module Profile '2011' != Cur Module Profile '{0}')</WriteLine>
						</NotEqual>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>uint16CurModuleProfile</Value1>
							<Value2>2011</Value2>
							<GotoStep>ProfileLoopEnd</GotoStep>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep Name="CompareSubModuleProfile">
					<Compare>
						<NotEqual>
							<Value1>uint16CurSubModuleProfile</Value1>
							<Value2>0</Value2>
							<WriteLine Id="13" Param0="uint16CurSubModuleProfile" Level="Output">Skip Profile  (Test SubModule Profile '0' != Cur SubModule Profile '{0}')</WriteLine>
						</NotEqual>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>uint16CurSubModuleProfile</Value1>
							<Value2>0</Value2>
							<GotoStep>ProfileLoopEnd</GotoStep>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep Name="IndicateThatAtleastOneModuleMatch">
					<SetVariable Target="bAtLeastOneModuleMatch">true</SetVariable>
				</TestStep>
				<TestStep Name="GetObjectIndexInclOffset">
					<SetVariable Target="u16ObjectIndexInclOffset">#x7006 + (u32ProfileCounter * #x10)</SetVariable>
					<WriteLine Id="14" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : ObjectIndex '0x{0:X}'</WriteLine>
				</TestStep>
				<TestStep Name="LoadDeviceObjectDictionary">
					<Description Id="15" Level="Verbose">Load 'offline' object dictionary for testing.</Description>
					<GetObjectDictionary Target="odDeviceObjectdictionary">
						<DictionaryType>Offline</DictionaryType>
					</GetObjectDictionary>
					<RaiseErrorOnFailure Id="16">VerifyObject : failed to load offline object dictionary.</RaiseErrorOnFailure>
				</TestStep>
				<TestStep Name="SetObjectRequiredLevel">
					<SetVariable Target="bObjectOrEntryRequiredLevel">1</SetVariable>
					<WriteLine Id="17" Param0="u16ObjectIndexInclOffset" Level="Verbose">0x{0:X4} 'Automatic Mode Setpoints' may be available</WriteLine>
				</TestStep>
				<TestStep Name="CheckIfObjectExists">
					<GetObjectDescription SourceDictionary="odDeviceObjectdictionary" Index="u16ObjectIndexInclOffset" SubIndex="-1"></GetObjectDescription>
					<GotoOnSuccess>CallCheckObjectDescription</GotoOnSuccess>
				</TestStep>
				<TestStep Name="HandleNotExistingObject">
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>2</Value2>
							<WriteLine Id="18" Param0="u16ObjectIndexInclOffset" Level="Warning">The object 0x{0:X4} 'Automatic Mode Setpoints' does not exists.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>1</Value2>
							<WriteLine Id="19" Param0="u16ObjectIndexInclOffset" Level="Output">The object 0x{0:X4} 'Automatic Mode Setpoints' does not exists.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>ProfileLoopEnd</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CallCheckObjectDescription">
					<Description Id="20" Param0="u16ObjectIndexInclOffset" Level="Output">Verify the object description 0x{0:X4} 'Automatic Mode Setpoints'.</Description>
					<CallTestFunction Name="CheckObjectDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"offline"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>"Automatic Mode Setpoints"</Parameter>
						<Parameter>null</Parameter>
						<Parameter>9</Parameter>
						<Parameter>-1</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<GotoStep>ProfileLoopEnd</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="InitEntryBittOffset">
					<SetVariable Target="i32CurrentBitOffset">0</SetVariable>
				</TestStep>
				<TestStep Name="StartSi0">
					<Description Id="21" Level="Output">Start validate SubIndex0</Description>
					<WriteLine Id="22" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : Subindex '0x{0:X}.0'</WriteLine>
				</TestStep>
				<TestStep Name="CallSi0CheckEntryDescription">
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"offline"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>0</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>null</Parameter>
						<Parameter>5</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>null</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>null</Parameter>
						<Parameter>null</Parameter>
						<Parameter>null</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>8</Parameter>
						<Parameter>i32CurrentBitOffset</Parameter>
						<Parameter>true</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="EndSi0">
					<SetVariable Target="i32CurrentBitOffset">16</SetVariable>
				</TestStep>
				<TestStep Name="StartSi1">
					<Description Id="23" Level="Output">Start validate SubIndex1</Description>
					<WriteLine Id="24" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : Subindex '0x{0:X}.1'</WriteLine>
				</TestStep>
				<TestStep Name="SetSi1RequiredLevel">
					<SetVariable Target="bObjectOrEntryRequiredLevel">1</SetVariable>
					<WriteLine Id="25" Param0="u16ObjectIndexInclOffset" Level="Verbose">0x{0:X4}.1 'Setpoint Forward Power' may be available</WriteLine>
				</TestStep>
				<TestStep Name="CheckIfSi1Exists">
					<GetObjectDescription SourceDictionary="odDeviceObjectdictionary" Index="u16ObjectIndexInclOffset" SubIndex="1">
						<Type>u16DataType</Type>
					</GetObjectDescription>
					<GotoOnFailure>HandleNotExistingSi1</GotoOnFailure>
				</TestStep>
				<TestStep>
					<Compare>
						<NotEqual>
							<Value1>u16DataType</Value1>
							<Value2>0</Value2>
							<GotoStep>CallSi1CheckEntryDescription</GotoStep>
						</NotEqual>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="26" Param0="u16ObjectIndexInclOffset" Level="Verbose">The entry 0x{0:X4}.1 is defined as a padding entry.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>EndSi1</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="HandleNotExistingSi1">
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="27" Param0="u16ObjectIndexInclOffset" Level="Output">The entry 0x{0:X4}.1 does not exists.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>EndSi1</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CallSi1CheckEntryDescription">
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"offline"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>1</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>"Setpoint Forward Power"</Parameter>
						<Parameter>8</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>null</Parameter>
						<Parameter>R</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>32</Parameter>
						<Parameter>i32CurrentBitOffset</Parameter>
						<Parameter>true</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="EndSi1">
					<SetVariable Target="i32CurrentBitOffset">-1</SetVariable>
				</TestStep>
				<TestStep Name="StartSi2">
					<Description Id="28" Level="Output">Start validate SubIndex2</Description>
					<WriteLine Id="29" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : Subindex '0x{0:X}.2'</WriteLine>
				</TestStep>
				<TestStep Name="SetSi2RequiredLevel">
					<SetVariable Target="bObjectOrEntryRequiredLevel">1</SetVariable>
					<WriteLine Id="30" Param0="u16ObjectIndexInclOffset" Level="Verbose">0x{0:X4}.2 'Setpoint Reflected Power' may be available</WriteLine>
				</TestStep>
				<TestStep Name="CheckIfSi2Exists">
					<GetObjectDescription SourceDictionary="odDeviceObjectdictionary" Index="u16ObjectIndexInclOffset" SubIndex="2">
						<Type>u16DataType</Type>
					</GetObjectDescription>
					<GotoOnFailure>HandleNotExistingSi2</GotoOnFailure>
				</TestStep>
				<TestStep>
					<Compare>
						<NotEqual>
							<Value1>u16DataType</Value1>
							<Value2>0</Value2>
							<GotoStep>CallSi2CheckEntryDescription</GotoStep>
						</NotEqual>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="31" Param0="u16ObjectIndexInclOffset" Level="Verbose">The entry 0x{0:X4}.2 is defined as a padding entry.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>EndSi2</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="HandleNotExistingSi2">
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="32" Param0="u16ObjectIndexInclOffset" Level="Output">The entry 0x{0:X4}.2 does not exists.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>EndSi2</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CallSi2CheckEntryDescription">
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"offline"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>2</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>"Setpoint Reflected Power"</Parameter>
						<Parameter>8</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>null</Parameter>
						<Parameter>R</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>32</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>true</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="EndSi2"></TestStep>
				<TestStep Name="StartSi3">
					<Description Id="33" Level="Output">Start validate SubIndex3</Description>
					<WriteLine Id="34" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : Subindex '0x{0:X}.3'</WriteLine>
				</TestStep>
				<TestStep Name="SetSi3RequiredLevel">
					<SetVariable Target="bObjectOrEntryRequiredLevel">1</SetVariable>
					<WriteLine Id="35" Param0="u16ObjectIndexInclOffset" Level="Verbose">0x{0:X4}.3 'Setpoint Delivered Power' may be available</WriteLine>
				</TestStep>
				<TestStep Name="CheckIfSi3Exists">
					<GetObjectDescription SourceDictionary="odDeviceObjectdictionary" Index="u16ObjectIndexInclOffset" SubIndex="3">
						<Type>u16DataType</Type>
					</GetObjectDescription>
					<GotoOnFailure>HandleNotExistingSi3</GotoOnFailure>
				</TestStep>
				<TestStep>
					<Compare>
						<NotEqual>
							<Value1>u16DataType</Value1>
							<Value2>0</Value2>
							<GotoStep>CallSi3CheckEntryDescription</GotoStep>
						</NotEqual>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="36" Param0="u16ObjectIndexInclOffset" Level="Verbose">The entry 0x{0:X4}.3 is defined as a padding entry.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>EndSi3</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="HandleNotExistingSi3">
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="37" Param0="u16ObjectIndexInclOffset" Level="Output">The entry 0x{0:X4}.3 does not exists.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>EndSi3</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CallSi3CheckEntryDescription">
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"offline"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>3</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>"Setpoint Delivered Power"</Parameter>
						<Parameter>8</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>null</Parameter>
						<Parameter>R</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>32</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>true</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="EndSi3"></TestStep>
				<TestStep Name="CheckReservedEntryRange_4_to_255">
					<Description Id="38" Level="Output">Start check reserved entry range 4 to 255</Description>
					<CallTestFunction Name="CheckReservedEntryRange">
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>4</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>odDeviceObjectdictionary</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="ProfileLoopEnd">
					<Compare>
						<Equal>
							<Value1>bAtLeastOneModuleMatch</Value1>
							<Value2>false</Value2>
							<GotoStep>HandleAbortTestCaseOnFirstError</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="HandleAbortTestCaseOnFirstError">
					<Compare>
						<Equal>
							<Value1>bAbortTestCaseOnFirstError</Value1>
							<Value2>false</Value2>
							<GotoStep>ProfileLoopIncrement</GotoStep>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>strResult</Value1>
							<Value2>EmptyString</Value2>
							<GotoStep>ProfileLoopIncrement</GotoStep>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="39" Level="Output">Object verification for all following modules abort because an error was already detected for the current module.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>END</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="ProfileLoopIncrement">
					<SetVariable Target="u32ProfileCounter">u32ProfileCounter + 1</SetVariable>
					<Compare>
						<Greater>
							<Value1>u32CurrentProfilesLength</Value1>
							<Value2>u32ProfileCounter</Value2>
							<GotoStep>ProfileLoopStart</GotoStep>
						</Greater>
					</Compare>
				</TestStep>
				<TestStep Name="END">
					<Compare>
						<NotEqual>
							<Value1>bAtLeastOneModuleMatch</Value1>
							<Value2>true</Value2>
							<SkipCase Id="40">SKIP TEST(no module/channel supports the current profile)</SkipCase>
						</NotEqual>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bDEBUG</Value1>
							<Value2>true</Value2>
							<WriteLine Id="41" Param0="strResult" Level="Verbose">DEBUG | Result : '{0}'.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>strResult</Value1>
							<Value2>EmptyString</Value2>
							<ReturnSuccess Id="42">Test succeed</ReturnSuccess>
						</Equal>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>strResult</Value1>
							<Value2>EmptyString</Value2>
							<RaiseError Id="43"></RaiseError>
						</NotEqual>
					</Compare>
				</TestStep>
			</TestCase>
			<TestCase Name="online | 0x7006 (Automatic Mode Setpoints)" CaseId="12">
				<Description>
					<PreCondition>- The device profile is 5003
- The module profile is 2011
- The submodule profile is 0</PreCondition>
					<Action>- Iterate over all online defined modules/channels and if the PreCondition matches the following operations are done:
- Get the online description of object 0x7006(+module specific offset) 'Automatic Mode Setpoints' and all entries
 Check:
    (Name)
    BitSize
    DataType
    Rx / Tx mappable
    Default Data
    MinData
    Flags       </Action>
					<PostCondition>Error if
- mandatory object / entry is not defined
- an optional object exists and the entries are invalid
- Object / entry description does not match with the specification</PostCondition>
					<ProposalForSolution>- Define the missing objects
- correct object / entry description</ProposalForSolution>
					<References>
						<Reference Specification="ETG.5003.2011"></Reference>
					</References>
					<Mandatory>true</Mandatory>
				</Description>
				<TestStep Name="InitResult">
					<SetVariable Target="strResult">EmptyString</SetVariable>
				</TestStep>
				<TestStep Name="CheckIfOdAvailable">
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Mailbox</Value1>
							<Value2>false</Value2>
							<SkipCase Id="1">DuT does not support mailbox.</SkipCase>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Mailbox.CoE</Value1>
							<Value2>false</Value2>
							<SkipCase Id="2">DuT does not support CoE.</SkipCase>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Mailbox.CoE.SdoInfo</Value1>
							<Value2>false</Value2>
							<SkipCase Id="3">DuT does not support SDO Info.</SkipCase>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="InitAtLeastOneProfileMatch">
					<SetVariable Target="bAtLeastOneModuleMatch">false</SetVariable>
				</TestStep>
				<TestStep Name="GetCurrentProfileList">
					<SizeOf UInt32Var="u32Tmp">arrOnlineProfiles</SizeOf>
					<Compare>
						<Equal>
							<Value1>u32Tmp</Value1>
							<Value2>0</Value2>
							<CallTestFunction Name="GetCurrentProfileList">
								<Parameter>"online"</Parameter>
								<Parameter>"SafeOP"</Parameter>
								<OutParameter>arrOnlineProfiles</OutParameter>
							</CallTestFunction>
						</Equal>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>u32Tmp</Value1>
							<Value2>0</Value2>
							<WriteLine Id="4" Param0="arrOnlineProfiles" Level="Verbose">Use previously created profile list ({0})</WriteLine>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep>
					<SizeOf UInt32Var="u32Tmp">arrOnlineProfiles</SizeOf>
				</TestStep>
				<TestStep>
					<InitArray TargetArray="arrCurrentProfiles" Length="u32Tmp"></InitArray>
				</TestStep>
				<TestStep>
					<CopyArray>
						<SourceArray>arrOnlineProfiles</SourceArray>
						<DestinationArray>arrCurrentProfiles</DestinationArray>
						<Length>u32Tmp</Length>
					</CopyArray>
				</TestStep>
				<TestStep Name="InitProfileLoopCounter">
					<SetVariable Target="u32ProfileCounter">0</SetVariable>
				</TestStep>
				<TestStep Name="GetProfileArrayLength">
					<SizeOf UInt32Var="u32CurrentProfilesLength">arrCurrentProfiles</SizeOf>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="5" Param0="u32CurrentProfilesLength" Level="Verbose">'{0}' Profile(s) defined online.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>u32CurrentProfilesLength</Value1>
							<Value2>0</Value2>
							<SkipCase Id="6">Skip case | no profile defined.</SkipCase>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="ProfileLoopStart">
					<GetArrayItem SourceArray="arrCurrentProfiles" Target="strTmpString" Index="u32ProfileCounter"></GetArrayItem>
				</TestStep>
				<TestStep Name="CheckProfileInformationString">
					<Compare>
						<Equal>
							<Value1>strTmpString</Value1>
							<Value2>null</Value2>
							<RaiseError Id="7" Param0="u32ProfileCounter">Profile Info element [{0}] is null.</RaiseError>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>strTmpString</Value1>
							<Value2>EmptyString</Value2>
							<RaiseError Id="8" Param0="u32ProfileCounter">Profile Info element [{0}] is an empty string.</RaiseError>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="GetDeviceProfile">
					<CallTestFunction Name="GetDeviceProfile">
						<Parameter>strTmpString</Parameter>
						<OutParameter>uint16CurDeviceProfile</OutParameter>
					</CallTestFunction>
				</TestStep>
				<TestStep Name="GetModuleProfile">
					<CallTestFunction Name="GetModuleProfile">
						<Parameter>strTmpString</Parameter>
						<OutParameter>uint16CurModuleProfile</OutParameter>
					</CallTestFunction>
				</TestStep>
				<TestStep Name="GetSubModuleProfile">
					<CallTestFunction Name="GetSubModuleProfile">
						<Parameter>strTmpString</Parameter>
						<OutParameter>uint16CurSubModuleProfile</OutParameter>
					</CallTestFunction>
				</TestStep>
				<TestStep Name="DumpProfileInfo">
					<Description Id="9" Param0="uint16CurDeviceProfile" Param1="uint16CurModuleProfile" Param2="uint16CurSubModuleProfile" Param3="u32ProfileCounter" Level="Output">Module[{3}] : DeviceProfile '{0}' ; ModuleProfile '{1}' ; SubModuleProfile '{2}'</Description>
					<Compare>
						<Equal>
							<Value1>bIgnoreProfileID</Value1>
							<Value2>true</Value2>
							<GotoStep>IndicateThatAtleastOneModuleMatch</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CompareDeviceProfile">
					<Compare>
						<NotEqual>
							<Value1>uint16CurDeviceProfile</Value1>
							<Value2>5003</Value2>
							<WriteLine Id="10" Param0="uint16CurDeviceProfile" Level="Output">Skip Profile  (Test Device Profile '5003' != Cur Device Profile '{0}')</WriteLine>
						</NotEqual>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>uint16CurDeviceProfile</Value1>
							<Value2>5003</Value2>
							<GotoStep>ProfileLoopEnd</GotoStep>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep Name="CompareModuleProfile">
					<Compare>
						<NotEqual>
							<Value1>uint16CurModuleProfile</Value1>
							<Value2>2011</Value2>
							<WriteLine Id="11" Param0="uint16CurModuleProfile" Level="Output">Skip Profile  (Test Module Profile '2011' != Cur Module Profile '{0}')</WriteLine>
						</NotEqual>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>uint16CurModuleProfile</Value1>
							<Value2>2011</Value2>
							<GotoStep>ProfileLoopEnd</GotoStep>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep Name="CompareSubModuleProfile">
					<Compare>
						<NotEqual>
							<Value1>uint16CurSubModuleProfile</Value1>
							<Value2>0</Value2>
							<WriteLine Id="12" Param0="uint16CurSubModuleProfile" Level="Output">Skip Profile  (Test SubModule Profile '0' != Cur SubModule Profile '{0}')</WriteLine>
						</NotEqual>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>uint16CurSubModuleProfile</Value1>
							<Value2>0</Value2>
							<GotoStep>ProfileLoopEnd</GotoStep>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep Name="IndicateThatAtleastOneModuleMatch">
					<SetVariable Target="bAtLeastOneModuleMatch">true</SetVariable>
				</TestStep>
				<TestStep Name="GetObjectIndexInclOffset">
					<SetVariable Target="u16ObjectIndexInclOffset">#x7006 + (u32ProfileCounter * #x10)</SetVariable>
					<WriteLine Id="13" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : ObjectIndex '0x{0:X}'</WriteLine>
				</TestStep>
				<TestStep Name="LoadDeviceObjectDictionary">
					<Description Id="14" Level="Verbose">Load 'online' object dictionary for testing.</Description>
					<GetObjectDictionary Target="odDeviceObjectdictionary">
						<DictionaryType>Online</DictionaryType>
					</GetObjectDictionary>
					<RaiseErrorOnFailure Id="15">VerifyObject : failed to load online object dictionary.</RaiseErrorOnFailure>
				</TestStep>
				<TestStep Name="SetObjectRequiredLevel">
					<SetVariable Target="bObjectOrEntryRequiredLevel">1</SetVariable>
					<WriteLine Id="16" Param0="u16ObjectIndexInclOffset" Level="Verbose">0x{0:X4} 'Automatic Mode Setpoints' may be available</WriteLine>
				</TestStep>
				<TestStep Name="CheckIfObjectExists">
					<GetObjectDescription SourceDictionary="odDeviceObjectdictionary" Index="u16ObjectIndexInclOffset" SubIndex="-1"></GetObjectDescription>
					<GotoOnSuccess>CallCheckObjectDescription</GotoOnSuccess>
				</TestStep>
				<TestStep Name="HandleNotExistingObject">
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>2</Value2>
							<WriteLine Id="17" Param0="u16ObjectIndexInclOffset" Level="Warning">The object 0x{0:X4} 'Automatic Mode Setpoints' does not exists.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>1</Value2>
							<WriteLine Id="18" Param0="u16ObjectIndexInclOffset" Level="Output">The object 0x{0:X4} 'Automatic Mode Setpoints' does not exists.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>ProfileLoopEnd</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CallCheckObjectDescription">
					<Description Id="19" Param0="u16ObjectIndexInclOffset" Level="Output">Verify the object description 0x{0:X4} 'Automatic Mode Setpoints'.</Description>
					<CallTestFunction Name="CheckObjectDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"online"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>"Automatic Mode Setpoints"</Parameter>
						<Parameter>null</Parameter>
						<Parameter>9</Parameter>
						<Parameter>-1</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<GotoStep>ProfileLoopEnd</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="InitEntryBittOffset">
					<SetVariable Target="i32CurrentBitOffset">0</SetVariable>
				</TestStep>
				<TestStep Name="StartSi0">
					<Description Id="20" Level="Output">Start validate SubIndex0</Description>
					<WriteLine Id="21" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : Subindex '0x{0:X}.0'</WriteLine>
				</TestStep>
				<TestStep Name="CallSi0CheckEntryDescription">
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"online"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>0</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>null</Parameter>
						<Parameter>5</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>null</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>null</Parameter>
						<Parameter>null</Parameter>
						<Parameter>null</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>8</Parameter>
						<Parameter>i32CurrentBitOffset</Parameter>
						<Parameter>true</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="EndSi0">
					<SetVariable Target="i32CurrentBitOffset">16</SetVariable>
				</TestStep>
				<TestStep Name="StartSi1">
					<Description Id="22" Level="Output">Start validate SubIndex1</Description>
					<WriteLine Id="23" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : Subindex '0x{0:X}.1'</WriteLine>
				</TestStep>
				<TestStep Name="SetSi1RequiredLevel">
					<SetVariable Target="bObjectOrEntryRequiredLevel">1</SetVariable>
					<WriteLine Id="24" Param0="u16ObjectIndexInclOffset" Level="Verbose">0x{0:X4}.1 'Setpoint Forward Power' may be available</WriteLine>
				</TestStep>
				<TestStep Name="CheckIfSi1Exists">
					<GetObjectDescription SourceDictionary="odDeviceObjectdictionary" Index="u16ObjectIndexInclOffset" SubIndex="1">
						<Type>u16DataType</Type>
					</GetObjectDescription>
					<GotoOnFailure>HandleNotExistingSi1</GotoOnFailure>
				</TestStep>
				<TestStep>
					<Compare>
						<NotEqual>
							<Value1>u16DataType</Value1>
							<Value2>0</Value2>
							<GotoStep>CallSi1CheckEntryDescription</GotoStep>
						</NotEqual>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="25" Param0="u16ObjectIndexInclOffset" Level="Verbose">The entry 0x{0:X4}.1 is defined as a padding entry.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>EndSi1</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="HandleNotExistingSi1">
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="26" Param0="u16ObjectIndexInclOffset" Level="Output">The entry 0x{0:X4}.1 does not exists.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>EndSi1</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CallSi1CheckEntryDescription">
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"online"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>1</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>"Setpoint Forward Power"</Parameter>
						<Parameter>8</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>null</Parameter>
						<Parameter>R</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>32</Parameter>
						<Parameter>i32CurrentBitOffset</Parameter>
						<Parameter>true</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="EndSi1">
					<SetVariable Target="i32CurrentBitOffset">-1</SetVariable>
				</TestStep>
				<TestStep Name="StartSi2">
					<Description Id="27" Level="Output">Start validate SubIndex2</Description>
					<WriteLine Id="28" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : Subindex '0x{0:X}.2'</WriteLine>
				</TestStep>
				<TestStep Name="SetSi2RequiredLevel">
					<SetVariable Target="bObjectOrEntryRequiredLevel">1</SetVariable>
					<WriteLine Id="29" Param0="u16ObjectIndexInclOffset" Level="Verbose">0x{0:X4}.2 'Setpoint Reflected Power' may be available</WriteLine>
				</TestStep>
				<TestStep Name="CheckIfSi2Exists">
					<GetObjectDescription SourceDictionary="odDeviceObjectdictionary" Index="u16ObjectIndexInclOffset" SubIndex="2">
						<Type>u16DataType</Type>
					</GetObjectDescription>
					<GotoOnFailure>HandleNotExistingSi2</GotoOnFailure>
				</TestStep>
				<TestStep>
					<Compare>
						<NotEqual>
							<Value1>u16DataType</Value1>
							<Value2>0</Value2>
							<GotoStep>CallSi2CheckEntryDescription</GotoStep>
						</NotEqual>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="30" Param0="u16ObjectIndexInclOffset" Level="Verbose">The entry 0x{0:X4}.2 is defined as a padding entry.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>EndSi2</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="HandleNotExistingSi2">
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="31" Param0="u16ObjectIndexInclOffset" Level="Output">The entry 0x{0:X4}.2 does not exists.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>EndSi2</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CallSi2CheckEntryDescription">
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"online"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>2</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>"Setpoint Reflected Power"</Parameter>
						<Parameter>8</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>null</Parameter>
						<Parameter>R</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>32</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>true</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="EndSi2"></TestStep>
				<TestStep Name="StartSi3">
					<Description Id="32" Level="Output">Start validate SubIndex3</Description>
					<WriteLine Id="33" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : Subindex '0x{0:X}.3'</WriteLine>
				</TestStep>
				<TestStep Name="SetSi3RequiredLevel">
					<SetVariable Target="bObjectOrEntryRequiredLevel">1</SetVariable>
					<WriteLine Id="34" Param0="u16ObjectIndexInclOffset" Level="Verbose">0x{0:X4}.3 'Setpoint Delivered Power' may be available</WriteLine>
				</TestStep>
				<TestStep Name="CheckIfSi3Exists">
					<GetObjectDescription SourceDictionary="odDeviceObjectdictionary" Index="u16ObjectIndexInclOffset" SubIndex="3">
						<Type>u16DataType</Type>
					</GetObjectDescription>
					<GotoOnFailure>HandleNotExistingSi3</GotoOnFailure>
				</TestStep>
				<TestStep>
					<Compare>
						<NotEqual>
							<Value1>u16DataType</Value1>
							<Value2>0</Value2>
							<GotoStep>CallSi3CheckEntryDescription</GotoStep>
						</NotEqual>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="35" Param0="u16ObjectIndexInclOffset" Level="Verbose">The entry 0x{0:X4}.3 is defined as a padding entry.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>EndSi3</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="HandleNotExistingSi3">
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="36" Param0="u16ObjectIndexInclOffset" Level="Output">The entry 0x{0:X4}.3 does not exists.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>EndSi3</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CallSi3CheckEntryDescription">
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"online"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>3</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>"Setpoint Delivered Power"</Parameter>
						<Parameter>8</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>null</Parameter>
						<Parameter>R</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>32</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>true</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="EndSi3"></TestStep>
				<TestStep Name="CheckReservedEntryRange_4_to_255">
					<Description Id="37" Level="Output">Start check reserved entry range 4 to 255</Description>
					<CallTestFunction Name="CheckReservedEntryRange">
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>4</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>odDeviceObjectdictionary</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="ProfileLoopEnd">
					<Compare>
						<Equal>
							<Value1>bAtLeastOneModuleMatch</Value1>
							<Value2>false</Value2>
							<GotoStep>HandleAbortTestCaseOnFirstError</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="HandleAbortTestCaseOnFirstError">
					<Compare>
						<Equal>
							<Value1>bAbortTestCaseOnFirstError</Value1>
							<Value2>false</Value2>
							<GotoStep>ProfileLoopIncrement</GotoStep>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>strResult</Value1>
							<Value2>EmptyString</Value2>
							<GotoStep>ProfileLoopIncrement</GotoStep>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="38" Level="Output">Object verification for all following modules abort because an error was already detected for the current module.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>END</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="ProfileLoopIncrement">
					<SetVariable Target="u32ProfileCounter">u32ProfileCounter + 1</SetVariable>
					<Compare>
						<Greater>
							<Value1>u32CurrentProfilesLength</Value1>
							<Value2>u32ProfileCounter</Value2>
							<GotoStep>ProfileLoopStart</GotoStep>
						</Greater>
					</Compare>
				</TestStep>
				<TestStep Name="END">
					<Compare>
						<NotEqual>
							<Value1>bAtLeastOneModuleMatch</Value1>
							<Value2>true</Value2>
							<SkipCase Id="39">SKIP TEST(no module/channel supports the current profile)</SkipCase>
						</NotEqual>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bDEBUG</Value1>
							<Value2>true</Value2>
							<WriteLine Id="40" Param0="strResult" Level="Verbose">DEBUG | Result : '{0}'.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>strResult</Value1>
							<Value2>EmptyString</Value2>
							<ReturnSuccess Id="41">Test succeed</ReturnSuccess>
						</Equal>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>strResult</Value1>
							<Value2>EmptyString</Value2>
							<RaiseError Id="42"></RaiseError>
						</NotEqual>
					</Compare>
				</TestStep>
			</TestCase>
			<TestCase Name="offline | 0x7007 (reserved object)" CaseId="13">
				<Description>
					<PreCondition>- The device profile is 5003
- The module profile is 2011
- The submodule profile is 0</PreCondition>
					<Action>- Iterate over all offline defined modules/channels and if the PreCondition matches the check if one object in the reserved range is defined</Action>
					<PostCondition>- Error if at least one object is defined</PostCondition>
					<ProposalForSolution>- Remove the defined objects
</ProposalForSolution>
					<References>
						<Reference Specification="ETG.5003.2011"></Reference>
					</References>
					<Mandatory>true</Mandatory>
				</Description>
				<TestStep Name="InitResult">
					<SetVariable Target="strResult">EmptyString</SetVariable>
				</TestStep>
				<TestStep Name="CheckIfOdAvailable">
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Mailbox</Value1>
							<Value2>false</Value2>
							<SkipCase Id="1">DuT does not support mailbox.</SkipCase>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Mailbox.CoE</Value1>
							<Value2>false</Value2>
							<SkipCase Id="2">DuT does not support CoE.</SkipCase>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep>
					<GetObjectDictionary Target="odDeviceObjectdictionary">
						<DictionaryType>Offline</DictionaryType>
					</GetObjectDictionary>
					<SkipOnFailure Id="3">No offline object dictionary defined.</SkipOnFailure>
				</TestStep>
				<TestStep>
					<GetObjectList Count="u32Tmp" Target="odDeviceObjectdictionaryList" SourceDict="odDeviceObjectdictionary"></GetObjectList>
					<Compare>
						<Equal>
							<Value1>u32Tmp</Value1>
							<Value2>0</Value2>
							<SkipCase Id="4">No offline object dictionary defined.</SkipCase>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="InitAtLeastOneProfileMatch">
					<SetVariable Target="bAtLeastOneModuleMatch">false</SetVariable>
				</TestStep>
				<TestStep Name="GetCurrentProfileList">
					<SizeOf UInt32Var="u32Tmp">arrOfflineProfiles</SizeOf>
					<Compare>
						<Equal>
							<Value1>u32Tmp</Value1>
							<Value2>0</Value2>
							<CallTestFunction Name="GetCurrentProfileList">
								<Parameter>"offline"</Parameter>
								<Parameter>"SafeOP"</Parameter>
								<OutParameter>arrOfflineProfiles</OutParameter>
							</CallTestFunction>
						</Equal>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>u32Tmp</Value1>
							<Value2>0</Value2>
							<WriteLine Id="5" Param0="arrOfflineProfiles" Level="Verbose">Use previously created profile list ({0})</WriteLine>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep>
					<SizeOf UInt32Var="u32Tmp">arrOfflineProfiles</SizeOf>
				</TestStep>
				<TestStep>
					<InitArray TargetArray="arrCurrentProfiles" Length="u32Tmp"></InitArray>
				</TestStep>
				<TestStep>
					<CopyArray>
						<SourceArray>arrOfflineProfiles</SourceArray>
						<DestinationArray>arrCurrentProfiles</DestinationArray>
						<Length>u32Tmp</Length>
					</CopyArray>
				</TestStep>
				<TestStep Name="InitProfileLoopCounter">
					<SetVariable Target="u32ProfileCounter">0</SetVariable>
				</TestStep>
				<TestStep Name="GetProfileArrayLength">
					<SizeOf UInt32Var="u32CurrentProfilesLength">arrCurrentProfiles</SizeOf>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="6" Param0="u32CurrentProfilesLength" Level="Verbose">'{0}' Profile(s) defined offline.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>u32CurrentProfilesLength</Value1>
							<Value2>0</Value2>
							<SkipCase Id="7">Skip case | no profile defined.</SkipCase>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="ProfileLoopStart">
					<GetArrayItem SourceArray="arrCurrentProfiles" Target="strTmpString" Index="u32ProfileCounter"></GetArrayItem>
				</TestStep>
				<TestStep Name="CheckProfileInformationString">
					<Compare>
						<Equal>
							<Value1>strTmpString</Value1>
							<Value2>null</Value2>
							<RaiseError Id="8" Param0="u32ProfileCounter">Profile Info element [{0}] is null.</RaiseError>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>strTmpString</Value1>
							<Value2>EmptyString</Value2>
							<RaiseError Id="9" Param0="u32ProfileCounter">Profile Info element [{0}] is an empty string.</RaiseError>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="GetDeviceProfile">
					<CallTestFunction Name="GetDeviceProfile">
						<Parameter>strTmpString</Parameter>
						<OutParameter>uint16CurDeviceProfile</OutParameter>
					</CallTestFunction>
				</TestStep>
				<TestStep Name="GetModuleProfile">
					<CallTestFunction Name="GetModuleProfile">
						<Parameter>strTmpString</Parameter>
						<OutParameter>uint16CurModuleProfile</OutParameter>
					</CallTestFunction>
				</TestStep>
				<TestStep Name="GetSubModuleProfile">
					<CallTestFunction Name="GetSubModuleProfile">
						<Parameter>strTmpString</Parameter>
						<OutParameter>uint16CurSubModuleProfile</OutParameter>
					</CallTestFunction>
				</TestStep>
				<TestStep Name="DumpProfileInfo">
					<Description Id="10" Param0="uint16CurDeviceProfile" Param1="uint16CurModuleProfile" Param2="uint16CurSubModuleProfile" Param3="u32ProfileCounter" Level="Output">Module[{3}] : DeviceProfile '{0}' ; ModuleProfile '{1}' ; SubModuleProfile '{2}'</Description>
					<Compare>
						<Equal>
							<Value1>bIgnoreProfileID</Value1>
							<Value2>true</Value2>
							<GotoStep>IndicateThatAtleastOneModuleMatch</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CompareDeviceProfile">
					<Compare>
						<NotEqual>
							<Value1>uint16CurDeviceProfile</Value1>
							<Value2>5003</Value2>
							<WriteLine Id="11" Param0="uint16CurDeviceProfile" Level="Output">Skip Profile  (Test Device Profile '5003' != Cur Device Profile '{0}')</WriteLine>
						</NotEqual>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>uint16CurDeviceProfile</Value1>
							<Value2>5003</Value2>
							<GotoStep>ProfileLoopEnd</GotoStep>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep Name="CompareModuleProfile">
					<Compare>
						<NotEqual>
							<Value1>uint16CurModuleProfile</Value1>
							<Value2>2011</Value2>
							<WriteLine Id="12" Param0="uint16CurModuleProfile" Level="Output">Skip Profile  (Test Module Profile '2011' != Cur Module Profile '{0}')</WriteLine>
						</NotEqual>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>uint16CurModuleProfile</Value1>
							<Value2>2011</Value2>
							<GotoStep>ProfileLoopEnd</GotoStep>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep Name="CompareSubModuleProfile">
					<Compare>
						<NotEqual>
							<Value1>uint16CurSubModuleProfile</Value1>
							<Value2>0</Value2>
							<WriteLine Id="13" Param0="uint16CurSubModuleProfile" Level="Output">Skip Profile  (Test SubModule Profile '0' != Cur SubModule Profile '{0}')</WriteLine>
						</NotEqual>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>uint16CurSubModuleProfile</Value1>
							<Value2>0</Value2>
							<GotoStep>ProfileLoopEnd</GotoStep>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep Name="IndicateThatAtleastOneModuleMatch">
					<SetVariable Target="bAtLeastOneModuleMatch">true</SetVariable>
				</TestStep>
				<TestStep Name="GetFirstReservedObjectIndexInlcOffset">
					<SetVariable Target="u16ObjectIndexInclOffset">#x7007 + (u32ProfileCounter * #x10)</SetVariable>
					<WriteLine Id="14" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : First reserved object index '0x{0:X}'</WriteLine>
				</TestStep>
				<TestStep Name="GetNextDefinedObjectIndexInlcOffset">
					<SetVariable Target="u16NextDefObjectIndexInclOffset">#x7008 + (u32ProfileCounter * #x0010)</SetVariable>
					<WriteLine Id="15" Param0="u16NextDefObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : Next defined object index '0x{0:X}'</WriteLine>
				</TestStep>
				<TestStep Name="CallCheckReservedObjectRange">
					<Description Id="16" Level="Verbose">VerifyObject : Load 'offline' object dictionary for testing.</Description>
					<CallTestFunction Name="CheckReservedObjectRange">
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>u16NextDefObjectIndexInclOffset</Parameter>
						<Parameter>odDeviceObjectdictionary</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<GotoStep>ProfileLoopEnd</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="ProfileLoopEnd">
					<Compare>
						<Equal>
							<Value1>bAtLeastOneModuleMatch</Value1>
							<Value2>false</Value2>
							<GotoStep>HandleAbortTestCaseOnFirstError</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="HandleAbortTestCaseOnFirstError">
					<Compare>
						<Equal>
							<Value1>bAbortTestCaseOnFirstError</Value1>
							<Value2>false</Value2>
							<GotoStep>ProfileLoopIncrement</GotoStep>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>strResult</Value1>
							<Value2>EmptyString</Value2>
							<GotoStep>ProfileLoopIncrement</GotoStep>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="17" Level="Output">Object verification for all following modules abort because an error was already detected for the current module.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>END</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="ProfileLoopIncrement">
					<SetVariable Target="u32ProfileCounter">u32ProfileCounter + 1</SetVariable>
					<Compare>
						<Greater>
							<Value1>u32CurrentProfilesLength</Value1>
							<Value2>u32ProfileCounter</Value2>
							<GotoStep>ProfileLoopStart</GotoStep>
						</Greater>
					</Compare>
				</TestStep>
				<TestStep Name="END">
					<Compare>
						<NotEqual>
							<Value1>bAtLeastOneModuleMatch</Value1>
							<Value2>true</Value2>
							<SkipCase Id="18">SKIP TEST(no module/channel supports the current profile)</SkipCase>
						</NotEqual>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bDEBUG</Value1>
							<Value2>true</Value2>
							<WriteLine Id="19" Param0="strResult" Level="Verbose">DEBUG | Result : '{0}'.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>strResult</Value1>
							<Value2>EmptyString</Value2>
							<ReturnSuccess Id="20">Test succeed</ReturnSuccess>
						</Equal>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>strResult</Value1>
							<Value2>EmptyString</Value2>
							<RaiseError Id="21"></RaiseError>
						</NotEqual>
					</Compare>
				</TestStep>
			</TestCase>
			<TestCase Name="online | 0x7007 (reserved object)" CaseId="14">
				<Description>
					<PreCondition>- The device profile is 5003
- The module profile is 2011
- The submodule profile is 0</PreCondition>
					<Action>- Iterate over all online defined modules/channels and if the PreCondition matches the check if one object in the reserved range is defined</Action>
					<PostCondition>- Error if at least one object is defined</PostCondition>
					<ProposalForSolution>- Remove the defined objects
</ProposalForSolution>
					<References>
						<Reference Specification="ETG.5003.2011"></Reference>
					</References>
					<Mandatory>true</Mandatory>
				</Description>
				<TestStep Name="InitResult">
					<SetVariable Target="strResult">EmptyString</SetVariable>
				</TestStep>
				<TestStep Name="CheckIfOdAvailable">
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Mailbox</Value1>
							<Value2>false</Value2>
							<SkipCase Id="1">DuT does not support mailbox.</SkipCase>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Mailbox.CoE</Value1>
							<Value2>false</Value2>
							<SkipCase Id="2">DuT does not support CoE.</SkipCase>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Mailbox.CoE.SdoInfo</Value1>
							<Value2>false</Value2>
							<SkipCase Id="3">DuT does not support SDO Info.</SkipCase>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="InitAtLeastOneProfileMatch">
					<SetVariable Target="bAtLeastOneModuleMatch">false</SetVariable>
				</TestStep>
				<TestStep Name="GetCurrentProfileList">
					<SizeOf UInt32Var="u32Tmp">arrOnlineProfiles</SizeOf>
					<Compare>
						<Equal>
							<Value1>u32Tmp</Value1>
							<Value2>0</Value2>
							<CallTestFunction Name="GetCurrentProfileList">
								<Parameter>"online"</Parameter>
								<Parameter>"SafeOP"</Parameter>
								<OutParameter>arrOnlineProfiles</OutParameter>
							</CallTestFunction>
						</Equal>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>u32Tmp</Value1>
							<Value2>0</Value2>
							<WriteLine Id="4" Param0="arrOnlineProfiles" Level="Verbose">Use previously created profile list ({0})</WriteLine>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep>
					<SizeOf UInt32Var="u32Tmp">arrOnlineProfiles</SizeOf>
				</TestStep>
				<TestStep>
					<InitArray TargetArray="arrCurrentProfiles" Length="u32Tmp"></InitArray>
				</TestStep>
				<TestStep>
					<CopyArray>
						<SourceArray>arrOnlineProfiles</SourceArray>
						<DestinationArray>arrCurrentProfiles</DestinationArray>
						<Length>u32Tmp</Length>
					</CopyArray>
				</TestStep>
				<TestStep Name="InitProfileLoopCounter">
					<SetVariable Target="u32ProfileCounter">0</SetVariable>
				</TestStep>
				<TestStep Name="GetProfileArrayLength">
					<SizeOf UInt32Var="u32CurrentProfilesLength">arrCurrentProfiles</SizeOf>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="5" Param0="u32CurrentProfilesLength" Level="Verbose">'{0}' Profile(s) defined online.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>u32CurrentProfilesLength</Value1>
							<Value2>0</Value2>
							<SkipCase Id="6">Skip case | no profile defined.</SkipCase>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="ProfileLoopStart">
					<GetArrayItem SourceArray="arrCurrentProfiles" Target="strTmpString" Index="u32ProfileCounter"></GetArrayItem>
				</TestStep>
				<TestStep Name="CheckProfileInformationString">
					<Compare>
						<Equal>
							<Value1>strTmpString</Value1>
							<Value2>null</Value2>
							<RaiseError Id="7" Param0="u32ProfileCounter">Profile Info element [{0}] is null.</RaiseError>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>strTmpString</Value1>
							<Value2>EmptyString</Value2>
							<RaiseError Id="8" Param0="u32ProfileCounter">Profile Info element [{0}] is an empty string.</RaiseError>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="GetDeviceProfile">
					<CallTestFunction Name="GetDeviceProfile">
						<Parameter>strTmpString</Parameter>
						<OutParameter>uint16CurDeviceProfile</OutParameter>
					</CallTestFunction>
				</TestStep>
				<TestStep Name="GetModuleProfile">
					<CallTestFunction Name="GetModuleProfile">
						<Parameter>strTmpString</Parameter>
						<OutParameter>uint16CurModuleProfile</OutParameter>
					</CallTestFunction>
				</TestStep>
				<TestStep Name="GetSubModuleProfile">
					<CallTestFunction Name="GetSubModuleProfile">
						<Parameter>strTmpString</Parameter>
						<OutParameter>uint16CurSubModuleProfile</OutParameter>
					</CallTestFunction>
				</TestStep>
				<TestStep Name="DumpProfileInfo">
					<Description Id="9" Param0="uint16CurDeviceProfile" Param1="uint16CurModuleProfile" Param2="uint16CurSubModuleProfile" Param3="u32ProfileCounter" Level="Output">Module[{3}] : DeviceProfile '{0}' ; ModuleProfile '{1}' ; SubModuleProfile '{2}'</Description>
					<Compare>
						<Equal>
							<Value1>bIgnoreProfileID</Value1>
							<Value2>true</Value2>
							<GotoStep>IndicateThatAtleastOneModuleMatch</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CompareDeviceProfile">
					<Compare>
						<NotEqual>
							<Value1>uint16CurDeviceProfile</Value1>
							<Value2>5003</Value2>
							<WriteLine Id="10" Param0="uint16CurDeviceProfile" Level="Output">Skip Profile  (Test Device Profile '5003' != Cur Device Profile '{0}')</WriteLine>
						</NotEqual>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>uint16CurDeviceProfile</Value1>
							<Value2>5003</Value2>
							<GotoStep>ProfileLoopEnd</GotoStep>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep Name="CompareModuleProfile">
					<Compare>
						<NotEqual>
							<Value1>uint16CurModuleProfile</Value1>
							<Value2>2011</Value2>
							<WriteLine Id="11" Param0="uint16CurModuleProfile" Level="Output">Skip Profile  (Test Module Profile '2011' != Cur Module Profile '{0}')</WriteLine>
						</NotEqual>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>uint16CurModuleProfile</Value1>
							<Value2>2011</Value2>
							<GotoStep>ProfileLoopEnd</GotoStep>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep Name="CompareSubModuleProfile">
					<Compare>
						<NotEqual>
							<Value1>uint16CurSubModuleProfile</Value1>
							<Value2>0</Value2>
							<WriteLine Id="12" Param0="uint16CurSubModuleProfile" Level="Output">Skip Profile  (Test SubModule Profile '0' != Cur SubModule Profile '{0}')</WriteLine>
						</NotEqual>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>uint16CurSubModuleProfile</Value1>
							<Value2>0</Value2>
							<GotoStep>ProfileLoopEnd</GotoStep>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep Name="IndicateThatAtleastOneModuleMatch">
					<SetVariable Target="bAtLeastOneModuleMatch">true</SetVariable>
				</TestStep>
				<TestStep Name="GetFirstReservedObjectIndexInlcOffset">
					<SetVariable Target="u16ObjectIndexInclOffset">#x7007 + (u32ProfileCounter * #x10)</SetVariable>
					<WriteLine Id="13" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : First reserved object index '0x{0:X}'</WriteLine>
				</TestStep>
				<TestStep Name="GetNextDefinedObjectIndexInlcOffset">
					<SetVariable Target="u16NextDefObjectIndexInclOffset">#x7008 + (u32ProfileCounter * #x0010)</SetVariable>
					<WriteLine Id="14" Param0="u16NextDefObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : Next defined object index '0x{0:X}'</WriteLine>
				</TestStep>
				<TestStep Name="CallCheckReservedObjectRange">
					<Description Id="15" Level="Verbose">VerifyObject : Load 'online' object dictionary for testing.</Description>
					<CallTestFunction Name="CheckReservedObjectRange">
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>u16NextDefObjectIndexInclOffset</Parameter>
						<Parameter>odDeviceObjectdictionary</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<GotoStep>ProfileLoopEnd</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="ProfileLoopEnd">
					<Compare>
						<Equal>
							<Value1>bAtLeastOneModuleMatch</Value1>
							<Value2>false</Value2>
							<GotoStep>HandleAbortTestCaseOnFirstError</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="HandleAbortTestCaseOnFirstError">
					<Compare>
						<Equal>
							<Value1>bAbortTestCaseOnFirstError</Value1>
							<Value2>false</Value2>
							<GotoStep>ProfileLoopIncrement</GotoStep>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>strResult</Value1>
							<Value2>EmptyString</Value2>
							<GotoStep>ProfileLoopIncrement</GotoStep>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="16" Level="Output">Object verification for all following modules abort because an error was already detected for the current module.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>END</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="ProfileLoopIncrement">
					<SetVariable Target="u32ProfileCounter">u32ProfileCounter + 1</SetVariable>
					<Compare>
						<Greater>
							<Value1>u32CurrentProfilesLength</Value1>
							<Value2>u32ProfileCounter</Value2>
							<GotoStep>ProfileLoopStart</GotoStep>
						</Greater>
					</Compare>
				</TestStep>
				<TestStep Name="END">
					<Compare>
						<NotEqual>
							<Value1>bAtLeastOneModuleMatch</Value1>
							<Value2>true</Value2>
							<SkipCase Id="17">SKIP TEST(no module/channel supports the current profile)</SkipCase>
						</NotEqual>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bDEBUG</Value1>
							<Value2>true</Value2>
							<WriteLine Id="18" Param0="strResult" Level="Verbose">DEBUG | Result : '{0}'.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>strResult</Value1>
							<Value2>EmptyString</Value2>
							<ReturnSuccess Id="19">Test succeed</ReturnSuccess>
						</Equal>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>strResult</Value1>
							<Value2>EmptyString</Value2>
							<RaiseError Id="20"></RaiseError>
						</NotEqual>
					</Compare>
				</TestStep>
			</TestCase>
			<TestCase Name="offline | 0x7008 (Pulse Settings)" CaseId="15">
				<Description>
					<PreCondition>- The device profile is 5003
- The module profile is 2011
- The submodule profile is 0</PreCondition>
					<Action>- Iterate over all offline defined modules/channels and if the PreCondition matches the following operations are done:
- Get the offline description of object 0x7008(+module specific offset) 'Pulse Settings' and all entries
 Check:
    (Name)
    BitSize
    DataType
    Rx / Tx mappable
    Default Data
    MinData
    Flags       </Action>
					<PostCondition>Error if
- mandatory object / entry is not defined
- an optional object exists and the entries are invalid
- Object / entry description does not match with the specification</PostCondition>
					<ProposalForSolution>- Define the missing objects
- correct object / entry description</ProposalForSolution>
					<References>
						<Reference Specification="ETG.5003.2011"></Reference>
					</References>
					<Mandatory>true</Mandatory>
				</Description>
				<TestStep Name="InitResult">
					<SetVariable Target="strResult">EmptyString</SetVariable>
				</TestStep>
				<TestStep Name="CheckIfOdAvailable">
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Mailbox</Value1>
							<Value2>false</Value2>
							<SkipCase Id="1">DuT does not support mailbox.</SkipCase>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Mailbox.CoE</Value1>
							<Value2>false</Value2>
							<SkipCase Id="2">DuT does not support CoE.</SkipCase>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep>
					<GetObjectDictionary Target="odDeviceObjectdictionary">
						<DictionaryType>Offline</DictionaryType>
					</GetObjectDictionary>
					<SkipOnFailure Id="3">No offline object dictionary defined.</SkipOnFailure>
				</TestStep>
				<TestStep>
					<GetObjectList Count="u32Tmp" Target="odDeviceObjectdictionaryList" SourceDict="odDeviceObjectdictionary"></GetObjectList>
					<Compare>
						<Equal>
							<Value1>u32Tmp</Value1>
							<Value2>0</Value2>
							<SkipCase Id="4">No offline object dictionary defined.</SkipCase>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="InitAtLeastOneProfileMatch">
					<SetVariable Target="bAtLeastOneModuleMatch">false</SetVariable>
				</TestStep>
				<TestStep Name="GetCurrentProfileList">
					<SizeOf UInt32Var="u32Tmp">arrOfflineProfiles</SizeOf>
					<Compare>
						<Equal>
							<Value1>u32Tmp</Value1>
							<Value2>0</Value2>
							<CallTestFunction Name="GetCurrentProfileList">
								<Parameter>"offline"</Parameter>
								<Parameter>"SafeOP"</Parameter>
								<OutParameter>arrOfflineProfiles</OutParameter>
							</CallTestFunction>
						</Equal>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>u32Tmp</Value1>
							<Value2>0</Value2>
							<WriteLine Id="5" Param0="arrOfflineProfiles" Level="Verbose">Use previously created profile list ({0})</WriteLine>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep>
					<SizeOf UInt32Var="u32Tmp">arrOfflineProfiles</SizeOf>
				</TestStep>
				<TestStep>
					<InitArray TargetArray="arrCurrentProfiles" Length="u32Tmp"></InitArray>
				</TestStep>
				<TestStep>
					<CopyArray>
						<SourceArray>arrOfflineProfiles</SourceArray>
						<DestinationArray>arrCurrentProfiles</DestinationArray>
						<Length>u32Tmp</Length>
					</CopyArray>
				</TestStep>
				<TestStep Name="InitProfileLoopCounter">
					<SetVariable Target="u32ProfileCounter">0</SetVariable>
				</TestStep>
				<TestStep Name="GetProfileArrayLength">
					<SizeOf UInt32Var="u32CurrentProfilesLength">arrCurrentProfiles</SizeOf>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="6" Param0="u32CurrentProfilesLength" Level="Verbose">'{0}' Profile(s) defined offline.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>u32CurrentProfilesLength</Value1>
							<Value2>0</Value2>
							<SkipCase Id="7">Skip case | no profile defined.</SkipCase>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="ProfileLoopStart">
					<GetArrayItem SourceArray="arrCurrentProfiles" Target="strTmpString" Index="u32ProfileCounter"></GetArrayItem>
				</TestStep>
				<TestStep Name="CheckProfileInformationString">
					<Compare>
						<Equal>
							<Value1>strTmpString</Value1>
							<Value2>null</Value2>
							<RaiseError Id="8" Param0="u32ProfileCounter">Profile Info element [{0}] is null.</RaiseError>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>strTmpString</Value1>
							<Value2>EmptyString</Value2>
							<RaiseError Id="9" Param0="u32ProfileCounter">Profile Info element [{0}] is an empty string.</RaiseError>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="GetDeviceProfile">
					<CallTestFunction Name="GetDeviceProfile">
						<Parameter>strTmpString</Parameter>
						<OutParameter>uint16CurDeviceProfile</OutParameter>
					</CallTestFunction>
				</TestStep>
				<TestStep Name="GetModuleProfile">
					<CallTestFunction Name="GetModuleProfile">
						<Parameter>strTmpString</Parameter>
						<OutParameter>uint16CurModuleProfile</OutParameter>
					</CallTestFunction>
				</TestStep>
				<TestStep Name="GetSubModuleProfile">
					<CallTestFunction Name="GetSubModuleProfile">
						<Parameter>strTmpString</Parameter>
						<OutParameter>uint16CurSubModuleProfile</OutParameter>
					</CallTestFunction>
				</TestStep>
				<TestStep Name="DumpProfileInfo">
					<Description Id="10" Param0="uint16CurDeviceProfile" Param1="uint16CurModuleProfile" Param2="uint16CurSubModuleProfile" Param3="u32ProfileCounter" Level="Output">Module[{3}] : DeviceProfile '{0}' ; ModuleProfile '{1}' ; SubModuleProfile '{2}'</Description>
					<Compare>
						<Equal>
							<Value1>bIgnoreProfileID</Value1>
							<Value2>true</Value2>
							<GotoStep>IndicateThatAtleastOneModuleMatch</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CompareDeviceProfile">
					<Compare>
						<NotEqual>
							<Value1>uint16CurDeviceProfile</Value1>
							<Value2>5003</Value2>
							<WriteLine Id="11" Param0="uint16CurDeviceProfile" Level="Output">Skip Profile  (Test Device Profile '5003' != Cur Device Profile '{0}')</WriteLine>
						</NotEqual>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>uint16CurDeviceProfile</Value1>
							<Value2>5003</Value2>
							<GotoStep>ProfileLoopEnd</GotoStep>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep Name="CompareModuleProfile">
					<Compare>
						<NotEqual>
							<Value1>uint16CurModuleProfile</Value1>
							<Value2>2011</Value2>
							<WriteLine Id="12" Param0="uint16CurModuleProfile" Level="Output">Skip Profile  (Test Module Profile '2011' != Cur Module Profile '{0}')</WriteLine>
						</NotEqual>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>uint16CurModuleProfile</Value1>
							<Value2>2011</Value2>
							<GotoStep>ProfileLoopEnd</GotoStep>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep Name="CompareSubModuleProfile">
					<Compare>
						<NotEqual>
							<Value1>uint16CurSubModuleProfile</Value1>
							<Value2>0</Value2>
							<WriteLine Id="13" Param0="uint16CurSubModuleProfile" Level="Output">Skip Profile  (Test SubModule Profile '0' != Cur SubModule Profile '{0}')</WriteLine>
						</NotEqual>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>uint16CurSubModuleProfile</Value1>
							<Value2>0</Value2>
							<GotoStep>ProfileLoopEnd</GotoStep>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep Name="IndicateThatAtleastOneModuleMatch">
					<SetVariable Target="bAtLeastOneModuleMatch">true</SetVariable>
				</TestStep>
				<TestStep Name="GetObjectIndexInclOffset">
					<SetVariable Target="u16ObjectIndexInclOffset">#x7008 + (u32ProfileCounter * #x10)</SetVariable>
					<WriteLine Id="14" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : ObjectIndex '0x{0:X}'</WriteLine>
				</TestStep>
				<TestStep Name="LoadDeviceObjectDictionary">
					<Description Id="15" Level="Verbose">Load 'offline' object dictionary for testing.</Description>
					<GetObjectDictionary Target="odDeviceObjectdictionary">
						<DictionaryType>Offline</DictionaryType>
					</GetObjectDictionary>
					<RaiseErrorOnFailure Id="16">VerifyObject : failed to load offline object dictionary.</RaiseErrorOnFailure>
				</TestStep>
				<TestStep Name="SetObjectRequiredLevel">
					<SetVariable Target="bObjectOrEntryRequiredLevel">1</SetVariable>
					<WriteLine Id="17" Param0="u16ObjectIndexInclOffset" Level="Verbose">0x{0:X4} 'Pulse Settings' may be available</WriteLine>
				</TestStep>
				<TestStep Name="CheckIfObjectExists">
					<GetObjectDescription SourceDictionary="odDeviceObjectdictionary" Index="u16ObjectIndexInclOffset" SubIndex="-1"></GetObjectDescription>
					<GotoOnSuccess>CallCheckObjectDescription</GotoOnSuccess>
				</TestStep>
				<TestStep Name="HandleNotExistingObject">
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>2</Value2>
							<WriteLine Id="18" Param0="u16ObjectIndexInclOffset" Level="Warning">The object 0x{0:X4} 'Pulse Settings' does not exists.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>1</Value2>
							<WriteLine Id="19" Param0="u16ObjectIndexInclOffset" Level="Output">The object 0x{0:X4} 'Pulse Settings' does not exists.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>ProfileLoopEnd</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CallCheckObjectDescription">
					<Description Id="20" Param0="u16ObjectIndexInclOffset" Level="Output">Verify the object description 0x{0:X4} 'Pulse Settings'.</Description>
					<CallTestFunction Name="CheckObjectDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"offline"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>"Pulse Settings"</Parameter>
						<Parameter>null</Parameter>
						<Parameter>9</Parameter>
						<Parameter>-1</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<GotoStep>ProfileLoopEnd</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="InitEntryBittOffset">
					<SetVariable Target="i32CurrentBitOffset">0</SetVariable>
				</TestStep>
				<TestStep Name="StartSi0">
					<Description Id="21" Level="Output">Start validate SubIndex0</Description>
					<WriteLine Id="22" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : Subindex '0x{0:X}.0'</WriteLine>
				</TestStep>
				<TestStep Name="CallSi0CheckEntryDescription">
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"offline"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>0</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>null</Parameter>
						<Parameter>5</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>null</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>null</Parameter>
						<Parameter>null</Parameter>
						<Parameter>null</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>8</Parameter>
						<Parameter>i32CurrentBitOffset</Parameter>
						<Parameter>true</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="EndSi0">
					<SetVariable Target="i32CurrentBitOffset">16</SetVariable>
				</TestStep>
				<TestStep Name="StartSi1">
					<Description Id="23" Level="Output">Start validate SubIndex1</Description>
					<WriteLine Id="24" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : Subindex '0x{0:X}.1'</WriteLine>
				</TestStep>
				<TestStep Name="SetSi1RequiredLevel">
					<SetVariable Target="bObjectOrEntryRequiredLevel">1</SetVariable>
					<WriteLine Id="25" Param0="u16ObjectIndexInclOffset" Level="Verbose">0x{0:X4}.1 'Pulse Frequency' may be available</WriteLine>
				</TestStep>
				<TestStep Name="CheckIfSi1Exists">
					<GetObjectDescription SourceDictionary="odDeviceObjectdictionary" Index="u16ObjectIndexInclOffset" SubIndex="1">
						<Type>u16DataType</Type>
					</GetObjectDescription>
					<GotoOnFailure>HandleNotExistingSi1</GotoOnFailure>
				</TestStep>
				<TestStep>
					<Compare>
						<NotEqual>
							<Value1>u16DataType</Value1>
							<Value2>0</Value2>
							<GotoStep>CallSi1CheckEntryDescription</GotoStep>
						</NotEqual>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="26" Param0="u16ObjectIndexInclOffset" Level="Verbose">The entry 0x{0:X4}.1 is defined as a padding entry.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>EndSi1</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="HandleNotExistingSi1">
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="27" Param0="u16ObjectIndexInclOffset" Level="Output">The entry 0x{0:X4}.1 does not exists.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>EndSi1</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CallSi1CheckEntryDescription">
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"offline"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>1</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>"Pulse Frequency"</Parameter>
						<Parameter>8</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>null</Parameter>
						<Parameter>R</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>32</Parameter>
						<Parameter>i32CurrentBitOffset</Parameter>
						<Parameter>true</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="EndSi1">
					<SetVariable Target="i32CurrentBitOffset">-1</SetVariable>
				</TestStep>
				<TestStep Name="StartSi2">
					<Description Id="28" Level="Output">Start validate SubIndex2</Description>
					<WriteLine Id="29" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : Subindex '0x{0:X}.2'</WriteLine>
				</TestStep>
				<TestStep Name="SetSi2RequiredLevel">
					<SetVariable Target="bObjectOrEntryRequiredLevel">1</SetVariable>
					<WriteLine Id="30" Param0="u16ObjectIndexInclOffset" Level="Verbose">0x{0:X4}.2 'Pulse Duty Cycle' may be available</WriteLine>
				</TestStep>
				<TestStep Name="CheckIfSi2Exists">
					<GetObjectDescription SourceDictionary="odDeviceObjectdictionary" Index="u16ObjectIndexInclOffset" SubIndex="2">
						<Type>u16DataType</Type>
					</GetObjectDescription>
					<GotoOnFailure>HandleNotExistingSi2</GotoOnFailure>
				</TestStep>
				<TestStep>
					<Compare>
						<NotEqual>
							<Value1>u16DataType</Value1>
							<Value2>0</Value2>
							<GotoStep>CallSi2CheckEntryDescription</GotoStep>
						</NotEqual>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="31" Param0="u16ObjectIndexInclOffset" Level="Verbose">The entry 0x{0:X4}.2 is defined as a padding entry.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>EndSi2</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="HandleNotExistingSi2">
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="32" Param0="u16ObjectIndexInclOffset" Level="Output">The entry 0x{0:X4}.2 does not exists.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>EndSi2</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CallSi2CheckEntryDescription">
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"offline"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>2</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>"Pulse Duty Cycle"</Parameter>
						<Parameter>8</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>null</Parameter>
						<Parameter>R</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>00000000</Parameter>
						<Parameter>0000C842</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>32</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>true</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="EndSi2"></TestStep>
				<TestStep Name="StartSi3">
					<Description Id="33" Level="Output">Start validate SubIndex3</Description>
					<WriteLine Id="34" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : Subindex '0x{0:X}.3'</WriteLine>
				</TestStep>
				<TestStep Name="SetSi3RequiredLevel">
					<SetVariable Target="bObjectOrEntryRequiredLevel">1</SetVariable>
					<WriteLine Id="35" Param0="u16ObjectIndexInclOffset" Level="Verbose">0x{0:X4}.3 'Simmer Low Time' may be available</WriteLine>
				</TestStep>
				<TestStep Name="CheckIfSi3Exists">
					<GetObjectDescription SourceDictionary="odDeviceObjectdictionary" Index="u16ObjectIndexInclOffset" SubIndex="3">
						<Type>u16DataType</Type>
					</GetObjectDescription>
					<GotoOnFailure>HandleNotExistingSi3</GotoOnFailure>
				</TestStep>
				<TestStep>
					<Compare>
						<NotEqual>
							<Value1>u16DataType</Value1>
							<Value2>0</Value2>
							<GotoStep>CallSi3CheckEntryDescription</GotoStep>
						</NotEqual>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="36" Param0="u16ObjectIndexInclOffset" Level="Verbose">The entry 0x{0:X4}.3 is defined as a padding entry.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>EndSi3</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="HandleNotExistingSi3">
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="37" Param0="u16ObjectIndexInclOffset" Level="Output">The entry 0x{0:X4}.3 does not exists.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>EndSi3</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CallSi3CheckEntryDescription">
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"offline"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>3</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>"Simmer Low Time"</Parameter>
						<Parameter>7</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>null</Parameter>
						<Parameter>R</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>32</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>true</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="EndSi3"></TestStep>
				<TestStep Name="StartSi4">
					<Description Id="38" Level="Output">Start validate SubIndex4</Description>
					<WriteLine Id="39" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : Subindex '0x{0:X}.4'</WriteLine>
				</TestStep>
				<TestStep Name="SetSi4RequiredLevel">
					<SetVariable Target="bObjectOrEntryRequiredLevel">1</SetVariable>
					<WriteLine Id="40" Param0="u16ObjectIndexInclOffset" Level="Verbose">0x{0:X4}.4 'Simmer High Time' may be available</WriteLine>
				</TestStep>
				<TestStep Name="CheckIfSi4Exists">
					<GetObjectDescription SourceDictionary="odDeviceObjectdictionary" Index="u16ObjectIndexInclOffset" SubIndex="4">
						<Type>u16DataType</Type>
					</GetObjectDescription>
					<GotoOnFailure>HandleNotExistingSi4</GotoOnFailure>
				</TestStep>
				<TestStep>
					<Compare>
						<NotEqual>
							<Value1>u16DataType</Value1>
							<Value2>0</Value2>
							<GotoStep>CallSi4CheckEntryDescription</GotoStep>
						</NotEqual>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="41" Param0="u16ObjectIndexInclOffset" Level="Verbose">The entry 0x{0:X4}.4 is defined as a padding entry.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>EndSi4</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="HandleNotExistingSi4">
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="42" Param0="u16ObjectIndexInclOffset" Level="Output">The entry 0x{0:X4}.4 does not exists.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>EndSi4</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CallSi4CheckEntryDescription">
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"offline"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>4</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>"Simmer High Time"</Parameter>
						<Parameter>7</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>null</Parameter>
						<Parameter>R</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>32</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>true</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="EndSi4"></TestStep>
				<TestStep Name="CheckReservedEntryRange_5_to_15">
					<Description Id="43" Level="Output">Start check reserved entry range 5 to 15</Description>
					<CallTestFunction Name="CheckReservedEntryRange">
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>5</Parameter>
						<Parameter>16</Parameter>
						<Parameter>odDeviceObjectdictionary</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="StartSi16">
					<Description Id="44" Level="Output">Start validate SubIndex16</Description>
					<WriteLine Id="45" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : Subindex '0x{0:X}.16'</WriteLine>
				</TestStep>
				<TestStep Name="SetSi16RequiredLevel">
					<SetVariable Target="bObjectOrEntryRequiredLevel">1</SetVariable>
					<WriteLine Id="46" Param0="u16ObjectIndexInclOffset" Level="Verbose">0x{0:X4}.16 'Pulse Setpoint 1' may be available</WriteLine>
				</TestStep>
				<TestStep Name="CheckIfSi16Exists">
					<GetObjectDescription SourceDictionary="odDeviceObjectdictionary" Index="u16ObjectIndexInclOffset" SubIndex="16">
						<Type>u16DataType</Type>
					</GetObjectDescription>
					<GotoOnFailure>HandleNotExistingSi16</GotoOnFailure>
				</TestStep>
				<TestStep>
					<Compare>
						<NotEqual>
							<Value1>u16DataType</Value1>
							<Value2>0</Value2>
							<GotoStep>CallSi16CheckEntryDescription</GotoStep>
						</NotEqual>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="47" Param0="u16ObjectIndexInclOffset" Level="Verbose">The entry 0x{0:X4}.16 is defined as a padding entry.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>EndSi16</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="HandleNotExistingSi16">
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="48" Param0="u16ObjectIndexInclOffset" Level="Output">The entry 0x{0:X4}.16 does not exists.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>EndSi16</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CallSi16CheckEntryDescription">
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"offline"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>16</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>"Pulse Setpoint 1"</Parameter>
						<Parameter>8</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>null</Parameter>
						<Parameter>R</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>32</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>true</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="EndSi16"></TestStep>
				<TestStep Name="StartSi17">
					<Description Id="49" Level="Output">Start validate SubIndex17</Description>
					<WriteLine Id="50" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : Subindex '0x{0:X}.17'</WriteLine>
				</TestStep>
				<TestStep Name="SetSi17RequiredLevel">
					<SetVariable Target="bObjectOrEntryRequiredLevel">1</SetVariable>
					<WriteLine Id="51" Param0="u16ObjectIndexInclOffset" Level="Verbose">0x{0:X4}.17 'RF Manual Frequency 1' may be available</WriteLine>
				</TestStep>
				<TestStep Name="CheckIfSi17Exists">
					<GetObjectDescription SourceDictionary="odDeviceObjectdictionary" Index="u16ObjectIndexInclOffset" SubIndex="17">
						<Type>u16DataType</Type>
					</GetObjectDescription>
					<GotoOnFailure>HandleNotExistingSi17</GotoOnFailure>
				</TestStep>
				<TestStep>
					<Compare>
						<NotEqual>
							<Value1>u16DataType</Value1>
							<Value2>0</Value2>
							<GotoStep>CallSi17CheckEntryDescription</GotoStep>
						</NotEqual>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="52" Param0="u16ObjectIndexInclOffset" Level="Verbose">The entry 0x{0:X4}.17 is defined as a padding entry.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>EndSi17</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="HandleNotExistingSi17">
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="53" Param0="u16ObjectIndexInclOffset" Level="Output">The entry 0x{0:X4}.17 does not exists.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>EndSi17</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CallSi17CheckEntryDescription">
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"offline"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>17</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>"RF Manual Frequency 1"</Parameter>
						<Parameter>7</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>null</Parameter>
						<Parameter>R</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>32</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>true</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="EndSi17"></TestStep>
				<TestStep Name="CheckReservedEntryRange_18_to_31">
					<Description Id="54" Level="Output">Start check reserved entry range 18 to 31</Description>
					<CallTestFunction Name="CheckReservedEntryRange">
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>18</Parameter>
						<Parameter>32</Parameter>
						<Parameter>odDeviceObjectdictionary</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="StartSi32">
					<Description Id="55" Level="Output">Start validate SubIndex32</Description>
					<WriteLine Id="56" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : Subindex '0x{0:X}.32'</WriteLine>
				</TestStep>
				<TestStep Name="SetSi32RequiredLevel">
					<SetVariable Target="bObjectOrEntryRequiredLevel">1</SetVariable>
					<WriteLine Id="57" Param0="u16ObjectIndexInclOffset" Level="Verbose">0x{0:X4}.32 'Pulse Setpoint 2' may be available</WriteLine>
				</TestStep>
				<TestStep Name="CheckIfSi32Exists">
					<GetObjectDescription SourceDictionary="odDeviceObjectdictionary" Index="u16ObjectIndexInclOffset" SubIndex="32">
						<Type>u16DataType</Type>
					</GetObjectDescription>
					<GotoOnFailure>HandleNotExistingSi32</GotoOnFailure>
				</TestStep>
				<TestStep>
					<Compare>
						<NotEqual>
							<Value1>u16DataType</Value1>
							<Value2>0</Value2>
							<GotoStep>CallSi32CheckEntryDescription</GotoStep>
						</NotEqual>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="58" Param0="u16ObjectIndexInclOffset" Level="Verbose">The entry 0x{0:X4}.32 is defined as a padding entry.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>EndSi32</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="HandleNotExistingSi32">
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="59" Param0="u16ObjectIndexInclOffset" Level="Output">The entry 0x{0:X4}.32 does not exists.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>EndSi32</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CallSi32CheckEntryDescription">
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"offline"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>32</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>"Pulse Setpoint 2"</Parameter>
						<Parameter>8</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>null</Parameter>
						<Parameter>R</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>32</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>true</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="EndSi32"></TestStep>
				<TestStep Name="CheckReservedEntryRange_33_to_255">
					<Description Id="60" Level="Output">Start check reserved entry range 33 to 255</Description>
					<CallTestFunction Name="CheckReservedEntryRange">
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>33</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>odDeviceObjectdictionary</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="ProfileLoopEnd">
					<Compare>
						<Equal>
							<Value1>bAtLeastOneModuleMatch</Value1>
							<Value2>false</Value2>
							<GotoStep>HandleAbortTestCaseOnFirstError</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="HandleAbortTestCaseOnFirstError">
					<Compare>
						<Equal>
							<Value1>bAbortTestCaseOnFirstError</Value1>
							<Value2>false</Value2>
							<GotoStep>ProfileLoopIncrement</GotoStep>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>strResult</Value1>
							<Value2>EmptyString</Value2>
							<GotoStep>ProfileLoopIncrement</GotoStep>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="61" Level="Output">Object verification for all following modules abort because an error was already detected for the current module.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>END</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="ProfileLoopIncrement">
					<SetVariable Target="u32ProfileCounter">u32ProfileCounter + 1</SetVariable>
					<Compare>
						<Greater>
							<Value1>u32CurrentProfilesLength</Value1>
							<Value2>u32ProfileCounter</Value2>
							<GotoStep>ProfileLoopStart</GotoStep>
						</Greater>
					</Compare>
				</TestStep>
				<TestStep Name="END">
					<Compare>
						<NotEqual>
							<Value1>bAtLeastOneModuleMatch</Value1>
							<Value2>true</Value2>
							<SkipCase Id="62">SKIP TEST(no module/channel supports the current profile)</SkipCase>
						</NotEqual>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bDEBUG</Value1>
							<Value2>true</Value2>
							<WriteLine Id="63" Param0="strResult" Level="Verbose">DEBUG | Result : '{0}'.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>strResult</Value1>
							<Value2>EmptyString</Value2>
							<ReturnSuccess Id="64">Test succeed</ReturnSuccess>
						</Equal>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>strResult</Value1>
							<Value2>EmptyString</Value2>
							<RaiseError Id="65"></RaiseError>
						</NotEqual>
					</Compare>
				</TestStep>
			</TestCase>
			<TestCase Name="online | 0x7008 (Pulse Settings)" CaseId="16">
				<Description>
					<PreCondition>- The device profile is 5003
- The module profile is 2011
- The submodule profile is 0</PreCondition>
					<Action>- Iterate over all online defined modules/channels and if the PreCondition matches the following operations are done:
- Get the online description of object 0x7008(+module specific offset) 'Pulse Settings' and all entries
 Check:
    (Name)
    BitSize
    DataType
    Rx / Tx mappable
    Default Data
    MinData
    Flags       </Action>
					<PostCondition>Error if
- mandatory object / entry is not defined
- an optional object exists and the entries are invalid
- Object / entry description does not match with the specification</PostCondition>
					<ProposalForSolution>- Define the missing objects
- correct object / entry description</ProposalForSolution>
					<References>
						<Reference Specification="ETG.5003.2011"></Reference>
					</References>
					<Mandatory>true</Mandatory>
				</Description>
				<TestStep Name="InitResult">
					<SetVariable Target="strResult">EmptyString</SetVariable>
				</TestStep>
				<TestStep Name="CheckIfOdAvailable">
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Mailbox</Value1>
							<Value2>false</Value2>
							<SkipCase Id="1">DuT does not support mailbox.</SkipCase>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Mailbox.CoE</Value1>
							<Value2>false</Value2>
							<SkipCase Id="2">DuT does not support CoE.</SkipCase>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Mailbox.CoE.SdoInfo</Value1>
							<Value2>false</Value2>
							<SkipCase Id="3">DuT does not support SDO Info.</SkipCase>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="InitAtLeastOneProfileMatch">
					<SetVariable Target="bAtLeastOneModuleMatch">false</SetVariable>
				</TestStep>
				<TestStep Name="GetCurrentProfileList">
					<SizeOf UInt32Var="u32Tmp">arrOnlineProfiles</SizeOf>
					<Compare>
						<Equal>
							<Value1>u32Tmp</Value1>
							<Value2>0</Value2>
							<CallTestFunction Name="GetCurrentProfileList">
								<Parameter>"online"</Parameter>
								<Parameter>"SafeOP"</Parameter>
								<OutParameter>arrOnlineProfiles</OutParameter>
							</CallTestFunction>
						</Equal>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>u32Tmp</Value1>
							<Value2>0</Value2>
							<WriteLine Id="4" Param0="arrOnlineProfiles" Level="Verbose">Use previously created profile list ({0})</WriteLine>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep>
					<SizeOf UInt32Var="u32Tmp">arrOnlineProfiles</SizeOf>
				</TestStep>
				<TestStep>
					<InitArray TargetArray="arrCurrentProfiles" Length="u32Tmp"></InitArray>
				</TestStep>
				<TestStep>
					<CopyArray>
						<SourceArray>arrOnlineProfiles</SourceArray>
						<DestinationArray>arrCurrentProfiles</DestinationArray>
						<Length>u32Tmp</Length>
					</CopyArray>
				</TestStep>
				<TestStep Name="InitProfileLoopCounter">
					<SetVariable Target="u32ProfileCounter">0</SetVariable>
				</TestStep>
				<TestStep Name="GetProfileArrayLength">
					<SizeOf UInt32Var="u32CurrentProfilesLength">arrCurrentProfiles</SizeOf>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="5" Param0="u32CurrentProfilesLength" Level="Verbose">'{0}' Profile(s) defined online.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>u32CurrentProfilesLength</Value1>
							<Value2>0</Value2>
							<SkipCase Id="6">Skip case | no profile defined.</SkipCase>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="ProfileLoopStart">
					<GetArrayItem SourceArray="arrCurrentProfiles" Target="strTmpString" Index="u32ProfileCounter"></GetArrayItem>
				</TestStep>
				<TestStep Name="CheckProfileInformationString">
					<Compare>
						<Equal>
							<Value1>strTmpString</Value1>
							<Value2>null</Value2>
							<RaiseError Id="7" Param0="u32ProfileCounter">Profile Info element [{0}] is null.</RaiseError>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>strTmpString</Value1>
							<Value2>EmptyString</Value2>
							<RaiseError Id="8" Param0="u32ProfileCounter">Profile Info element [{0}] is an empty string.</RaiseError>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="GetDeviceProfile">
					<CallTestFunction Name="GetDeviceProfile">
						<Parameter>strTmpString</Parameter>
						<OutParameter>uint16CurDeviceProfile</OutParameter>
					</CallTestFunction>
				</TestStep>
				<TestStep Name="GetModuleProfile">
					<CallTestFunction Name="GetModuleProfile">
						<Parameter>strTmpString</Parameter>
						<OutParameter>uint16CurModuleProfile</OutParameter>
					</CallTestFunction>
				</TestStep>
				<TestStep Name="GetSubModuleProfile">
					<CallTestFunction Name="GetSubModuleProfile">
						<Parameter>strTmpString</Parameter>
						<OutParameter>uint16CurSubModuleProfile</OutParameter>
					</CallTestFunction>
				</TestStep>
				<TestStep Name="DumpProfileInfo">
					<Description Id="9" Param0="uint16CurDeviceProfile" Param1="uint16CurModuleProfile" Param2="uint16CurSubModuleProfile" Param3="u32ProfileCounter" Level="Output">Module[{3}] : DeviceProfile '{0}' ; ModuleProfile '{1}' ; SubModuleProfile '{2}'</Description>
					<Compare>
						<Equal>
							<Value1>bIgnoreProfileID</Value1>
							<Value2>true</Value2>
							<GotoStep>IndicateThatAtleastOneModuleMatch</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CompareDeviceProfile">
					<Compare>
						<NotEqual>
							<Value1>uint16CurDeviceProfile</Value1>
							<Value2>5003</Value2>
							<WriteLine Id="10" Param0="uint16CurDeviceProfile" Level="Output">Skip Profile  (Test Device Profile '5003' != Cur Device Profile '{0}')</WriteLine>
						</NotEqual>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>uint16CurDeviceProfile</Value1>
							<Value2>5003</Value2>
							<GotoStep>ProfileLoopEnd</GotoStep>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep Name="CompareModuleProfile">
					<Compare>
						<NotEqual>
							<Value1>uint16CurModuleProfile</Value1>
							<Value2>2011</Value2>
							<WriteLine Id="11" Param0="uint16CurModuleProfile" Level="Output">Skip Profile  (Test Module Profile '2011' != Cur Module Profile '{0}')</WriteLine>
						</NotEqual>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>uint16CurModuleProfile</Value1>
							<Value2>2011</Value2>
							<GotoStep>ProfileLoopEnd</GotoStep>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep Name="CompareSubModuleProfile">
					<Compare>
						<NotEqual>
							<Value1>uint16CurSubModuleProfile</Value1>
							<Value2>0</Value2>
							<WriteLine Id="12" Param0="uint16CurSubModuleProfile" Level="Output">Skip Profile  (Test SubModule Profile '0' != Cur SubModule Profile '{0}')</WriteLine>
						</NotEqual>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>uint16CurSubModuleProfile</Value1>
							<Value2>0</Value2>
							<GotoStep>ProfileLoopEnd</GotoStep>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep Name="IndicateThatAtleastOneModuleMatch">
					<SetVariable Target="bAtLeastOneModuleMatch">true</SetVariable>
				</TestStep>
				<TestStep Name="GetObjectIndexInclOffset">
					<SetVariable Target="u16ObjectIndexInclOffset">#x7008 + (u32ProfileCounter * #x10)</SetVariable>
					<WriteLine Id="13" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : ObjectIndex '0x{0:X}'</WriteLine>
				</TestStep>
				<TestStep Name="LoadDeviceObjectDictionary">
					<Description Id="14" Level="Verbose">Load 'online' object dictionary for testing.</Description>
					<GetObjectDictionary Target="odDeviceObjectdictionary">
						<DictionaryType>Online</DictionaryType>
					</GetObjectDictionary>
					<RaiseErrorOnFailure Id="15">VerifyObject : failed to load online object dictionary.</RaiseErrorOnFailure>
				</TestStep>
				<TestStep Name="SetObjectRequiredLevel">
					<SetVariable Target="bObjectOrEntryRequiredLevel">1</SetVariable>
					<WriteLine Id="16" Param0="u16ObjectIndexInclOffset" Level="Verbose">0x{0:X4} 'Pulse Settings' may be available</WriteLine>
				</TestStep>
				<TestStep Name="CheckIfObjectExists">
					<GetObjectDescription SourceDictionary="odDeviceObjectdictionary" Index="u16ObjectIndexInclOffset" SubIndex="-1"></GetObjectDescription>
					<GotoOnSuccess>CallCheckObjectDescription</GotoOnSuccess>
				</TestStep>
				<TestStep Name="HandleNotExistingObject">
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>2</Value2>
							<WriteLine Id="17" Param0="u16ObjectIndexInclOffset" Level="Warning">The object 0x{0:X4} 'Pulse Settings' does not exists.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>1</Value2>
							<WriteLine Id="18" Param0="u16ObjectIndexInclOffset" Level="Output">The object 0x{0:X4} 'Pulse Settings' does not exists.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>ProfileLoopEnd</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CallCheckObjectDescription">
					<Description Id="19" Param0="u16ObjectIndexInclOffset" Level="Output">Verify the object description 0x{0:X4} 'Pulse Settings'.</Description>
					<CallTestFunction Name="CheckObjectDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"online"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>"Pulse Settings"</Parameter>
						<Parameter>null</Parameter>
						<Parameter>9</Parameter>
						<Parameter>-1</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<GotoStep>ProfileLoopEnd</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="InitEntryBittOffset">
					<SetVariable Target="i32CurrentBitOffset">0</SetVariable>
				</TestStep>
				<TestStep Name="StartSi0">
					<Description Id="20" Level="Output">Start validate SubIndex0</Description>
					<WriteLine Id="21" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : Subindex '0x{0:X}.0'</WriteLine>
				</TestStep>
				<TestStep Name="CallSi0CheckEntryDescription">
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"online"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>0</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>null</Parameter>
						<Parameter>5</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>null</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>null</Parameter>
						<Parameter>null</Parameter>
						<Parameter>null</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>8</Parameter>
						<Parameter>i32CurrentBitOffset</Parameter>
						<Parameter>true</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="EndSi0">
					<SetVariable Target="i32CurrentBitOffset">16</SetVariable>
				</TestStep>
				<TestStep Name="StartSi1">
					<Description Id="22" Level="Output">Start validate SubIndex1</Description>
					<WriteLine Id="23" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : Subindex '0x{0:X}.1'</WriteLine>
				</TestStep>
				<TestStep Name="SetSi1RequiredLevel">
					<SetVariable Target="bObjectOrEntryRequiredLevel">1</SetVariable>
					<WriteLine Id="24" Param0="u16ObjectIndexInclOffset" Level="Verbose">0x{0:X4}.1 'Pulse Frequency' may be available</WriteLine>
				</TestStep>
				<TestStep Name="CheckIfSi1Exists">
					<GetObjectDescription SourceDictionary="odDeviceObjectdictionary" Index="u16ObjectIndexInclOffset" SubIndex="1">
						<Type>u16DataType</Type>
					</GetObjectDescription>
					<GotoOnFailure>HandleNotExistingSi1</GotoOnFailure>
				</TestStep>
				<TestStep>
					<Compare>
						<NotEqual>
							<Value1>u16DataType</Value1>
							<Value2>0</Value2>
							<GotoStep>CallSi1CheckEntryDescription</GotoStep>
						</NotEqual>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="25" Param0="u16ObjectIndexInclOffset" Level="Verbose">The entry 0x{0:X4}.1 is defined as a padding entry.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>EndSi1</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="HandleNotExistingSi1">
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="26" Param0="u16ObjectIndexInclOffset" Level="Output">The entry 0x{0:X4}.1 does not exists.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>EndSi1</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CallSi1CheckEntryDescription">
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"online"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>1</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>"Pulse Frequency"</Parameter>
						<Parameter>8</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>null</Parameter>
						<Parameter>R</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>32</Parameter>
						<Parameter>i32CurrentBitOffset</Parameter>
						<Parameter>true</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="EndSi1">
					<SetVariable Target="i32CurrentBitOffset">-1</SetVariable>
				</TestStep>
				<TestStep Name="StartSi2">
					<Description Id="27" Level="Output">Start validate SubIndex2</Description>
					<WriteLine Id="28" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : Subindex '0x{0:X}.2'</WriteLine>
				</TestStep>
				<TestStep Name="SetSi2RequiredLevel">
					<SetVariable Target="bObjectOrEntryRequiredLevel">1</SetVariable>
					<WriteLine Id="29" Param0="u16ObjectIndexInclOffset" Level="Verbose">0x{0:X4}.2 'Pulse Duty Cycle' may be available</WriteLine>
				</TestStep>
				<TestStep Name="CheckIfSi2Exists">
					<GetObjectDescription SourceDictionary="odDeviceObjectdictionary" Index="u16ObjectIndexInclOffset" SubIndex="2">
						<Type>u16DataType</Type>
					</GetObjectDescription>
					<GotoOnFailure>HandleNotExistingSi2</GotoOnFailure>
				</TestStep>
				<TestStep>
					<Compare>
						<NotEqual>
							<Value1>u16DataType</Value1>
							<Value2>0</Value2>
							<GotoStep>CallSi2CheckEntryDescription</GotoStep>
						</NotEqual>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="30" Param0="u16ObjectIndexInclOffset" Level="Verbose">The entry 0x{0:X4}.2 is defined as a padding entry.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>EndSi2</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="HandleNotExistingSi2">
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="31" Param0="u16ObjectIndexInclOffset" Level="Output">The entry 0x{0:X4}.2 does not exists.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>EndSi2</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CallSi2CheckEntryDescription">
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"online"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>2</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>"Pulse Duty Cycle"</Parameter>
						<Parameter>8</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>null</Parameter>
						<Parameter>R</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>00000000</Parameter>
						<Parameter>0000C842</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>32</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>true</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="EndSi2"></TestStep>
				<TestStep Name="StartSi3">
					<Description Id="32" Level="Output">Start validate SubIndex3</Description>
					<WriteLine Id="33" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : Subindex '0x{0:X}.3'</WriteLine>
				</TestStep>
				<TestStep Name="SetSi3RequiredLevel">
					<SetVariable Target="bObjectOrEntryRequiredLevel">1</SetVariable>
					<WriteLine Id="34" Param0="u16ObjectIndexInclOffset" Level="Verbose">0x{0:X4}.3 'Simmer Low Time' may be available</WriteLine>
				</TestStep>
				<TestStep Name="CheckIfSi3Exists">
					<GetObjectDescription SourceDictionary="odDeviceObjectdictionary" Index="u16ObjectIndexInclOffset" SubIndex="3">
						<Type>u16DataType</Type>
					</GetObjectDescription>
					<GotoOnFailure>HandleNotExistingSi3</GotoOnFailure>
				</TestStep>
				<TestStep>
					<Compare>
						<NotEqual>
							<Value1>u16DataType</Value1>
							<Value2>0</Value2>
							<GotoStep>CallSi3CheckEntryDescription</GotoStep>
						</NotEqual>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="35" Param0="u16ObjectIndexInclOffset" Level="Verbose">The entry 0x{0:X4}.3 is defined as a padding entry.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>EndSi3</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="HandleNotExistingSi3">
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="36" Param0="u16ObjectIndexInclOffset" Level="Output">The entry 0x{0:X4}.3 does not exists.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>EndSi3</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CallSi3CheckEntryDescription">
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"online"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>3</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>"Simmer Low Time"</Parameter>
						<Parameter>7</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>null</Parameter>
						<Parameter>R</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>32</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>true</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="EndSi3"></TestStep>
				<TestStep Name="StartSi4">
					<Description Id="37" Level="Output">Start validate SubIndex4</Description>
					<WriteLine Id="38" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : Subindex '0x{0:X}.4'</WriteLine>
				</TestStep>
				<TestStep Name="SetSi4RequiredLevel">
					<SetVariable Target="bObjectOrEntryRequiredLevel">1</SetVariable>
					<WriteLine Id="39" Param0="u16ObjectIndexInclOffset" Level="Verbose">0x{0:X4}.4 'Simmer High Time' may be available</WriteLine>
				</TestStep>
				<TestStep Name="CheckIfSi4Exists">
					<GetObjectDescription SourceDictionary="odDeviceObjectdictionary" Index="u16ObjectIndexInclOffset" SubIndex="4">
						<Type>u16DataType</Type>
					</GetObjectDescription>
					<GotoOnFailure>HandleNotExistingSi4</GotoOnFailure>
				</TestStep>
				<TestStep>
					<Compare>
						<NotEqual>
							<Value1>u16DataType</Value1>
							<Value2>0</Value2>
							<GotoStep>CallSi4CheckEntryDescription</GotoStep>
						</NotEqual>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="40" Param0="u16ObjectIndexInclOffset" Level="Verbose">The entry 0x{0:X4}.4 is defined as a padding entry.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>EndSi4</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="HandleNotExistingSi4">
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="41" Param0="u16ObjectIndexInclOffset" Level="Output">The entry 0x{0:X4}.4 does not exists.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>EndSi4</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CallSi4CheckEntryDescription">
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"online"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>4</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>"Simmer High Time"</Parameter>
						<Parameter>7</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>null</Parameter>
						<Parameter>R</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>32</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>true</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="EndSi4"></TestStep>
				<TestStep Name="CheckReservedEntryRange_5_to_15">
					<Description Id="42" Level="Output">Start check reserved entry range 5 to 15</Description>
					<CallTestFunction Name="CheckReservedEntryRange">
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>5</Parameter>
						<Parameter>16</Parameter>
						<Parameter>odDeviceObjectdictionary</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="StartSi16">
					<Description Id="43" Level="Output">Start validate SubIndex16</Description>
					<WriteLine Id="44" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : Subindex '0x{0:X}.16'</WriteLine>
				</TestStep>
				<TestStep Name="SetSi16RequiredLevel">
					<SetVariable Target="bObjectOrEntryRequiredLevel">1</SetVariable>
					<WriteLine Id="45" Param0="u16ObjectIndexInclOffset" Level="Verbose">0x{0:X4}.16 'Pulse Setpoint 1' may be available</WriteLine>
				</TestStep>
				<TestStep Name="CheckIfSi16Exists">
					<GetObjectDescription SourceDictionary="odDeviceObjectdictionary" Index="u16ObjectIndexInclOffset" SubIndex="16">
						<Type>u16DataType</Type>
					</GetObjectDescription>
					<GotoOnFailure>HandleNotExistingSi16</GotoOnFailure>
				</TestStep>
				<TestStep>
					<Compare>
						<NotEqual>
							<Value1>u16DataType</Value1>
							<Value2>0</Value2>
							<GotoStep>CallSi16CheckEntryDescription</GotoStep>
						</NotEqual>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="46" Param0="u16ObjectIndexInclOffset" Level="Verbose">The entry 0x{0:X4}.16 is defined as a padding entry.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>EndSi16</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="HandleNotExistingSi16">
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="47" Param0="u16ObjectIndexInclOffset" Level="Output">The entry 0x{0:X4}.16 does not exists.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>EndSi16</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CallSi16CheckEntryDescription">
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"online"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>16</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>"Pulse Setpoint 1"</Parameter>
						<Parameter>8</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>null</Parameter>
						<Parameter>R</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>32</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>true</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="EndSi16"></TestStep>
				<TestStep Name="StartSi17">
					<Description Id="48" Level="Output">Start validate SubIndex17</Description>
					<WriteLine Id="49" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : Subindex '0x{0:X}.17'</WriteLine>
				</TestStep>
				<TestStep Name="SetSi17RequiredLevel">
					<SetVariable Target="bObjectOrEntryRequiredLevel">1</SetVariable>
					<WriteLine Id="50" Param0="u16ObjectIndexInclOffset" Level="Verbose">0x{0:X4}.17 'RF Manual Frequency 1' may be available</WriteLine>
				</TestStep>
				<TestStep Name="CheckIfSi17Exists">
					<GetObjectDescription SourceDictionary="odDeviceObjectdictionary" Index="u16ObjectIndexInclOffset" SubIndex="17">
						<Type>u16DataType</Type>
					</GetObjectDescription>
					<GotoOnFailure>HandleNotExistingSi17</GotoOnFailure>
				</TestStep>
				<TestStep>
					<Compare>
						<NotEqual>
							<Value1>u16DataType</Value1>
							<Value2>0</Value2>
							<GotoStep>CallSi17CheckEntryDescription</GotoStep>
						</NotEqual>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="51" Param0="u16ObjectIndexInclOffset" Level="Verbose">The entry 0x{0:X4}.17 is defined as a padding entry.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>EndSi17</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="HandleNotExistingSi17">
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="52" Param0="u16ObjectIndexInclOffset" Level="Output">The entry 0x{0:X4}.17 does not exists.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>EndSi17</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CallSi17CheckEntryDescription">
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"online"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>17</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>"RF Manual Frequency 1"</Parameter>
						<Parameter>7</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>null</Parameter>
						<Parameter>R</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>32</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>true</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="EndSi17"></TestStep>
				<TestStep Name="CheckReservedEntryRange_18_to_31">
					<Description Id="53" Level="Output">Start check reserved entry range 18 to 31</Description>
					<CallTestFunction Name="CheckReservedEntryRange">
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>18</Parameter>
						<Parameter>32</Parameter>
						<Parameter>odDeviceObjectdictionary</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="StartSi32">
					<Description Id="54" Level="Output">Start validate SubIndex32</Description>
					<WriteLine Id="55" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : Subindex '0x{0:X}.32'</WriteLine>
				</TestStep>
				<TestStep Name="SetSi32RequiredLevel">
					<SetVariable Target="bObjectOrEntryRequiredLevel">1</SetVariable>
					<WriteLine Id="56" Param0="u16ObjectIndexInclOffset" Level="Verbose">0x{0:X4}.32 'Pulse Setpoint 2' may be available</WriteLine>
				</TestStep>
				<TestStep Name="CheckIfSi32Exists">
					<GetObjectDescription SourceDictionary="odDeviceObjectdictionary" Index="u16ObjectIndexInclOffset" SubIndex="32">
						<Type>u16DataType</Type>
					</GetObjectDescription>
					<GotoOnFailure>HandleNotExistingSi32</GotoOnFailure>
				</TestStep>
				<TestStep>
					<Compare>
						<NotEqual>
							<Value1>u16DataType</Value1>
							<Value2>0</Value2>
							<GotoStep>CallSi32CheckEntryDescription</GotoStep>
						</NotEqual>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="57" Param0="u16ObjectIndexInclOffset" Level="Verbose">The entry 0x{0:X4}.32 is defined as a padding entry.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>EndSi32</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="HandleNotExistingSi32">
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="58" Param0="u16ObjectIndexInclOffset" Level="Output">The entry 0x{0:X4}.32 does not exists.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>EndSi32</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CallSi32CheckEntryDescription">
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"online"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>32</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>"Pulse Setpoint 2"</Parameter>
						<Parameter>8</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>null</Parameter>
						<Parameter>R</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>32</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>true</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="EndSi32"></TestStep>
				<TestStep Name="CheckReservedEntryRange_33_to_255">
					<Description Id="59" Level="Output">Start check reserved entry range 33 to 255</Description>
					<CallTestFunction Name="CheckReservedEntryRange">
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>33</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>odDeviceObjectdictionary</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="ProfileLoopEnd">
					<Compare>
						<Equal>
							<Value1>bAtLeastOneModuleMatch</Value1>
							<Value2>false</Value2>
							<GotoStep>HandleAbortTestCaseOnFirstError</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="HandleAbortTestCaseOnFirstError">
					<Compare>
						<Equal>
							<Value1>bAbortTestCaseOnFirstError</Value1>
							<Value2>false</Value2>
							<GotoStep>ProfileLoopIncrement</GotoStep>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>strResult</Value1>
							<Value2>EmptyString</Value2>
							<GotoStep>ProfileLoopIncrement</GotoStep>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="60" Level="Output">Object verification for all following modules abort because an error was already detected for the current module.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>END</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="ProfileLoopIncrement">
					<SetVariable Target="u32ProfileCounter">u32ProfileCounter + 1</SetVariable>
					<Compare>
						<Greater>
							<Value1>u32CurrentProfilesLength</Value1>
							<Value2>u32ProfileCounter</Value2>
							<GotoStep>ProfileLoopStart</GotoStep>
						</Greater>
					</Compare>
				</TestStep>
				<TestStep Name="END">
					<Compare>
						<NotEqual>
							<Value1>bAtLeastOneModuleMatch</Value1>
							<Value2>true</Value2>
							<SkipCase Id="61">SKIP TEST(no module/channel supports the current profile)</SkipCase>
						</NotEqual>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bDEBUG</Value1>
							<Value2>true</Value2>
							<WriteLine Id="62" Param0="strResult" Level="Verbose">DEBUG | Result : '{0}'.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>strResult</Value1>
							<Value2>EmptyString</Value2>
							<ReturnSuccess Id="63">Test succeed</ReturnSuccess>
						</Equal>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>strResult</Value1>
							<Value2>EmptyString</Value2>
							<RaiseError Id="64"></RaiseError>
						</NotEqual>
					</Compare>
				</TestStep>
			</TestCase>
			<TestCase Name="offline | 0x7009 (CEX Phase Settings)" CaseId="17">
				<Description>
					<PreCondition>- The device profile is 5003
- The module profile is 2011
- The submodule profile is 0</PreCondition>
					<Action>- Iterate over all offline defined modules/channels and if the PreCondition matches the following operations are done:
- Get the offline description of object 0x7009(+module specific offset) 'CEX Phase Settings' and all entries
 Check:
    (Name)
    BitSize
    DataType
    Rx / Tx mappable
    Default Data
    MinData
    Flags       </Action>
					<PostCondition>Error if
- mandatory object / entry is not defined
- an optional object exists and the entries are invalid
- Object / entry description does not match with the specification</PostCondition>
					<ProposalForSolution>- Define the missing objects
- correct object / entry description</ProposalForSolution>
					<References>
						<Reference Specification="ETG.5003.2011"></Reference>
					</References>
					<Mandatory>true</Mandatory>
				</Description>
				<TestStep Name="InitResult">
					<SetVariable Target="strResult">EmptyString</SetVariable>
				</TestStep>
				<TestStep Name="CheckIfOdAvailable">
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Mailbox</Value1>
							<Value2>false</Value2>
							<SkipCase Id="1">DuT does not support mailbox.</SkipCase>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Mailbox.CoE</Value1>
							<Value2>false</Value2>
							<SkipCase Id="2">DuT does not support CoE.</SkipCase>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep>
					<GetObjectDictionary Target="odDeviceObjectdictionary">
						<DictionaryType>Offline</DictionaryType>
					</GetObjectDictionary>
					<SkipOnFailure Id="3">No offline object dictionary defined.</SkipOnFailure>
				</TestStep>
				<TestStep>
					<GetObjectList Count="u32Tmp" Target="odDeviceObjectdictionaryList" SourceDict="odDeviceObjectdictionary"></GetObjectList>
					<Compare>
						<Equal>
							<Value1>u32Tmp</Value1>
							<Value2>0</Value2>
							<SkipCase Id="4">No offline object dictionary defined.</SkipCase>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="InitAtLeastOneProfileMatch">
					<SetVariable Target="bAtLeastOneModuleMatch">false</SetVariable>
				</TestStep>
				<TestStep Name="GetCurrentProfileList">
					<SizeOf UInt32Var="u32Tmp">arrOfflineProfiles</SizeOf>
					<Compare>
						<Equal>
							<Value1>u32Tmp</Value1>
							<Value2>0</Value2>
							<CallTestFunction Name="GetCurrentProfileList">
								<Parameter>"offline"</Parameter>
								<Parameter>"SafeOP"</Parameter>
								<OutParameter>arrOfflineProfiles</OutParameter>
							</CallTestFunction>
						</Equal>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>u32Tmp</Value1>
							<Value2>0</Value2>
							<WriteLine Id="5" Param0="arrOfflineProfiles" Level="Verbose">Use previously created profile list ({0})</WriteLine>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep>
					<SizeOf UInt32Var="u32Tmp">arrOfflineProfiles</SizeOf>
				</TestStep>
				<TestStep>
					<InitArray TargetArray="arrCurrentProfiles" Length="u32Tmp"></InitArray>
				</TestStep>
				<TestStep>
					<CopyArray>
						<SourceArray>arrOfflineProfiles</SourceArray>
						<DestinationArray>arrCurrentProfiles</DestinationArray>
						<Length>u32Tmp</Length>
					</CopyArray>
				</TestStep>
				<TestStep Name="InitProfileLoopCounter">
					<SetVariable Target="u32ProfileCounter">0</SetVariable>
				</TestStep>
				<TestStep Name="GetProfileArrayLength">
					<SizeOf UInt32Var="u32CurrentProfilesLength">arrCurrentProfiles</SizeOf>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="6" Param0="u32CurrentProfilesLength" Level="Verbose">'{0}' Profile(s) defined offline.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>u32CurrentProfilesLength</Value1>
							<Value2>0</Value2>
							<SkipCase Id="7">Skip case | no profile defined.</SkipCase>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="ProfileLoopStart">
					<GetArrayItem SourceArray="arrCurrentProfiles" Target="strTmpString" Index="u32ProfileCounter"></GetArrayItem>
				</TestStep>
				<TestStep Name="CheckProfileInformationString">
					<Compare>
						<Equal>
							<Value1>strTmpString</Value1>
							<Value2>null</Value2>
							<RaiseError Id="8" Param0="u32ProfileCounter">Profile Info element [{0}] is null.</RaiseError>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>strTmpString</Value1>
							<Value2>EmptyString</Value2>
							<RaiseError Id="9" Param0="u32ProfileCounter">Profile Info element [{0}] is an empty string.</RaiseError>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="GetDeviceProfile">
					<CallTestFunction Name="GetDeviceProfile">
						<Parameter>strTmpString</Parameter>
						<OutParameter>uint16CurDeviceProfile</OutParameter>
					</CallTestFunction>
				</TestStep>
				<TestStep Name="GetModuleProfile">
					<CallTestFunction Name="GetModuleProfile">
						<Parameter>strTmpString</Parameter>
						<OutParameter>uint16CurModuleProfile</OutParameter>
					</CallTestFunction>
				</TestStep>
				<TestStep Name="GetSubModuleProfile">
					<CallTestFunction Name="GetSubModuleProfile">
						<Parameter>strTmpString</Parameter>
						<OutParameter>uint16CurSubModuleProfile</OutParameter>
					</CallTestFunction>
				</TestStep>
				<TestStep Name="DumpProfileInfo">
					<Description Id="10" Param0="uint16CurDeviceProfile" Param1="uint16CurModuleProfile" Param2="uint16CurSubModuleProfile" Param3="u32ProfileCounter" Level="Output">Module[{3}] : DeviceProfile '{0}' ; ModuleProfile '{1}' ; SubModuleProfile '{2}'</Description>
					<Compare>
						<Equal>
							<Value1>bIgnoreProfileID</Value1>
							<Value2>true</Value2>
							<GotoStep>IndicateThatAtleastOneModuleMatch</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CompareDeviceProfile">
					<Compare>
						<NotEqual>
							<Value1>uint16CurDeviceProfile</Value1>
							<Value2>5003</Value2>
							<WriteLine Id="11" Param0="uint16CurDeviceProfile" Level="Output">Skip Profile  (Test Device Profile '5003' != Cur Device Profile '{0}')</WriteLine>
						</NotEqual>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>uint16CurDeviceProfile</Value1>
							<Value2>5003</Value2>
							<GotoStep>ProfileLoopEnd</GotoStep>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep Name="CompareModuleProfile">
					<Compare>
						<NotEqual>
							<Value1>uint16CurModuleProfile</Value1>
							<Value2>2011</Value2>
							<WriteLine Id="12" Param0="uint16CurModuleProfile" Level="Output">Skip Profile  (Test Module Profile '2011' != Cur Module Profile '{0}')</WriteLine>
						</NotEqual>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>uint16CurModuleProfile</Value1>
							<Value2>2011</Value2>
							<GotoStep>ProfileLoopEnd</GotoStep>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep Name="CompareSubModuleProfile">
					<Compare>
						<NotEqual>
							<Value1>uint16CurSubModuleProfile</Value1>
							<Value2>0</Value2>
							<WriteLine Id="13" Param0="uint16CurSubModuleProfile" Level="Output">Skip Profile  (Test SubModule Profile '0' != Cur SubModule Profile '{0}')</WriteLine>
						</NotEqual>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>uint16CurSubModuleProfile</Value1>
							<Value2>0</Value2>
							<GotoStep>ProfileLoopEnd</GotoStep>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep Name="IndicateThatAtleastOneModuleMatch">
					<SetVariable Target="bAtLeastOneModuleMatch">true</SetVariable>
				</TestStep>
				<TestStep Name="GetObjectIndexInclOffset">
					<SetVariable Target="u16ObjectIndexInclOffset">#x7009 + (u32ProfileCounter * #x10)</SetVariable>
					<WriteLine Id="14" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : ObjectIndex '0x{0:X}'</WriteLine>
				</TestStep>
				<TestStep Name="LoadDeviceObjectDictionary">
					<Description Id="15" Level="Verbose">Load 'offline' object dictionary for testing.</Description>
					<GetObjectDictionary Target="odDeviceObjectdictionary">
						<DictionaryType>Offline</DictionaryType>
					</GetObjectDictionary>
					<RaiseErrorOnFailure Id="16">VerifyObject : failed to load offline object dictionary.</RaiseErrorOnFailure>
				</TestStep>
				<TestStep Name="SetObjectRequiredLevel">
					<SetVariable Target="bObjectOrEntryRequiredLevel">1</SetVariable>
					<WriteLine Id="17" Param0="u16ObjectIndexInclOffset" Level="Verbose">0x{0:X4} 'CEX Phase Settings' may be available</WriteLine>
				</TestStep>
				<TestStep Name="CheckIfObjectExists">
					<GetObjectDescription SourceDictionary="odDeviceObjectdictionary" Index="u16ObjectIndexInclOffset" SubIndex="-1"></GetObjectDescription>
					<GotoOnSuccess>CallCheckObjectDescription</GotoOnSuccess>
				</TestStep>
				<TestStep Name="HandleNotExistingObject">
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>2</Value2>
							<WriteLine Id="18" Param0="u16ObjectIndexInclOffset" Level="Warning">The object 0x{0:X4} 'CEX Phase Settings' does not exists.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>1</Value2>
							<WriteLine Id="19" Param0="u16ObjectIndexInclOffset" Level="Output">The object 0x{0:X4} 'CEX Phase Settings' does not exists.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>ProfileLoopEnd</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CallCheckObjectDescription">
					<Description Id="20" Param0="u16ObjectIndexInclOffset" Level="Output">Verify the object description 0x{0:X4} 'CEX Phase Settings'.</Description>
					<CallTestFunction Name="CheckObjectDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"offline"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>"CEX Phase Settings"</Parameter>
						<Parameter>null</Parameter>
						<Parameter>9</Parameter>
						<Parameter>-1</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<GotoStep>ProfileLoopEnd</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="InitEntryBittOffset">
					<SetVariable Target="i32CurrentBitOffset">0</SetVariable>
				</TestStep>
				<TestStep Name="StartSi0">
					<Description Id="21" Level="Output">Start validate SubIndex0</Description>
					<WriteLine Id="22" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : Subindex '0x{0:X}.0'</WriteLine>
				</TestStep>
				<TestStep Name="CallSi0CheckEntryDescription">
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"offline"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>0</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>null</Parameter>
						<Parameter>5</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>null</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>null</Parameter>
						<Parameter>null</Parameter>
						<Parameter>null</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>8</Parameter>
						<Parameter>i32CurrentBitOffset</Parameter>
						<Parameter>true</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="EndSi0">
					<SetVariable Target="i32CurrentBitOffset">16</SetVariable>
				</TestStep>
				<TestStep Name="StartSi1">
					<Description Id="23" Level="Output">Start validate SubIndex1</Description>
					<WriteLine Id="24" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : Subindex '0x{0:X}.1'</WriteLine>
				</TestStep>
				<TestStep Name="SetSi1RequiredLevel">
					<SetVariable Target="bObjectOrEntryRequiredLevel">1</SetVariable>
					<WriteLine Id="25" Param0="u16ObjectIndexInclOffset" Level="Verbose">0x{0:X4}.1 'CEX Phase Offset' may be available</WriteLine>
				</TestStep>
				<TestStep Name="CheckIfSi1Exists">
					<GetObjectDescription SourceDictionary="odDeviceObjectdictionary" Index="u16ObjectIndexInclOffset" SubIndex="1">
						<Type>u16DataType</Type>
					</GetObjectDescription>
					<GotoOnFailure>HandleNotExistingSi1</GotoOnFailure>
				</TestStep>
				<TestStep>
					<Compare>
						<NotEqual>
							<Value1>u16DataType</Value1>
							<Value2>0</Value2>
							<GotoStep>CallSi1CheckEntryDescription</GotoStep>
						</NotEqual>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="26" Param0="u16ObjectIndexInclOffset" Level="Verbose">The entry 0x{0:X4}.1 is defined as a padding entry.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>EndSi1</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="HandleNotExistingSi1">
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="27" Param0="u16ObjectIndexInclOffset" Level="Output">The entry 0x{0:X4}.1 does not exists.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>EndSi1</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CallSi1CheckEntryDescription">
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"offline"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>1</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>"CEX Phase Offset"</Parameter>
						<Parameter>8</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>null</Parameter>
						<Parameter>R</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>00000000</Parameter>
						<Parameter>0000B443</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>32</Parameter>
						<Parameter>i32CurrentBitOffset</Parameter>
						<Parameter>true</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="EndSi1">
					<SetVariable Target="i32CurrentBitOffset">-1</SetVariable>
				</TestStep>
				<TestStep Name="CheckReservedEntryRange_2_to_255">
					<Description Id="28" Level="Output">Start check reserved entry range 2 to 255</Description>
					<CallTestFunction Name="CheckReservedEntryRange">
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>2</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>odDeviceObjectdictionary</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="ProfileLoopEnd">
					<Compare>
						<Equal>
							<Value1>bAtLeastOneModuleMatch</Value1>
							<Value2>false</Value2>
							<GotoStep>HandleAbortTestCaseOnFirstError</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="HandleAbortTestCaseOnFirstError">
					<Compare>
						<Equal>
							<Value1>bAbortTestCaseOnFirstError</Value1>
							<Value2>false</Value2>
							<GotoStep>ProfileLoopIncrement</GotoStep>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>strResult</Value1>
							<Value2>EmptyString</Value2>
							<GotoStep>ProfileLoopIncrement</GotoStep>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="29" Level="Output">Object verification for all following modules abort because an error was already detected for the current module.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>END</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="ProfileLoopIncrement">
					<SetVariable Target="u32ProfileCounter">u32ProfileCounter + 1</SetVariable>
					<Compare>
						<Greater>
							<Value1>u32CurrentProfilesLength</Value1>
							<Value2>u32ProfileCounter</Value2>
							<GotoStep>ProfileLoopStart</GotoStep>
						</Greater>
					</Compare>
				</TestStep>
				<TestStep Name="END">
					<Compare>
						<NotEqual>
							<Value1>bAtLeastOneModuleMatch</Value1>
							<Value2>true</Value2>
							<SkipCase Id="30">SKIP TEST(no module/channel supports the current profile)</SkipCase>
						</NotEqual>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bDEBUG</Value1>
							<Value2>true</Value2>
							<WriteLine Id="31" Param0="strResult" Level="Verbose">DEBUG | Result : '{0}'.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>strResult</Value1>
							<Value2>EmptyString</Value2>
							<ReturnSuccess Id="32">Test succeed</ReturnSuccess>
						</Equal>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>strResult</Value1>
							<Value2>EmptyString</Value2>
							<RaiseError Id="33"></RaiseError>
						</NotEqual>
					</Compare>
				</TestStep>
			</TestCase>
			<TestCase Name="online | 0x7009 (CEX Phase Settings)" CaseId="18">
				<Description>
					<PreCondition>- The device profile is 5003
- The module profile is 2011
- The submodule profile is 0</PreCondition>
					<Action>- Iterate over all online defined modules/channels and if the PreCondition matches the following operations are done:
- Get the online description of object 0x7009(+module specific offset) 'CEX Phase Settings' and all entries
 Check:
    (Name)
    BitSize
    DataType
    Rx / Tx mappable
    Default Data
    MinData
    Flags       </Action>
					<PostCondition>Error if
- mandatory object / entry is not defined
- an optional object exists and the entries are invalid
- Object / entry description does not match with the specification</PostCondition>
					<ProposalForSolution>- Define the missing objects
- correct object / entry description</ProposalForSolution>
					<References>
						<Reference Specification="ETG.5003.2011"></Reference>
					</References>
					<Mandatory>true</Mandatory>
				</Description>
				<TestStep Name="InitResult">
					<SetVariable Target="strResult">EmptyString</SetVariable>
				</TestStep>
				<TestStep Name="CheckIfOdAvailable">
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Mailbox</Value1>
							<Value2>false</Value2>
							<SkipCase Id="1">DuT does not support mailbox.</SkipCase>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Mailbox.CoE</Value1>
							<Value2>false</Value2>
							<SkipCase Id="2">DuT does not support CoE.</SkipCase>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Mailbox.CoE.SdoInfo</Value1>
							<Value2>false</Value2>
							<SkipCase Id="3">DuT does not support SDO Info.</SkipCase>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="InitAtLeastOneProfileMatch">
					<SetVariable Target="bAtLeastOneModuleMatch">false</SetVariable>
				</TestStep>
				<TestStep Name="GetCurrentProfileList">
					<SizeOf UInt32Var="u32Tmp">arrOnlineProfiles</SizeOf>
					<Compare>
						<Equal>
							<Value1>u32Tmp</Value1>
							<Value2>0</Value2>
							<CallTestFunction Name="GetCurrentProfileList">
								<Parameter>"online"</Parameter>
								<Parameter>"SafeOP"</Parameter>
								<OutParameter>arrOnlineProfiles</OutParameter>
							</CallTestFunction>
						</Equal>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>u32Tmp</Value1>
							<Value2>0</Value2>
							<WriteLine Id="4" Param0="arrOnlineProfiles" Level="Verbose">Use previously created profile list ({0})</WriteLine>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep>
					<SizeOf UInt32Var="u32Tmp">arrOnlineProfiles</SizeOf>
				</TestStep>
				<TestStep>
					<InitArray TargetArray="arrCurrentProfiles" Length="u32Tmp"></InitArray>
				</TestStep>
				<TestStep>
					<CopyArray>
						<SourceArray>arrOnlineProfiles</SourceArray>
						<DestinationArray>arrCurrentProfiles</DestinationArray>
						<Length>u32Tmp</Length>
					</CopyArray>
				</TestStep>
				<TestStep Name="InitProfileLoopCounter">
					<SetVariable Target="u32ProfileCounter">0</SetVariable>
				</TestStep>
				<TestStep Name="GetProfileArrayLength">
					<SizeOf UInt32Var="u32CurrentProfilesLength">arrCurrentProfiles</SizeOf>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="5" Param0="u32CurrentProfilesLength" Level="Verbose">'{0}' Profile(s) defined online.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>u32CurrentProfilesLength</Value1>
							<Value2>0</Value2>
							<SkipCase Id="6">Skip case | no profile defined.</SkipCase>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="ProfileLoopStart">
					<GetArrayItem SourceArray="arrCurrentProfiles" Target="strTmpString" Index="u32ProfileCounter"></GetArrayItem>
				</TestStep>
				<TestStep Name="CheckProfileInformationString">
					<Compare>
						<Equal>
							<Value1>strTmpString</Value1>
							<Value2>null</Value2>
							<RaiseError Id="7" Param0="u32ProfileCounter">Profile Info element [{0}] is null.</RaiseError>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>strTmpString</Value1>
							<Value2>EmptyString</Value2>
							<RaiseError Id="8" Param0="u32ProfileCounter">Profile Info element [{0}] is an empty string.</RaiseError>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="GetDeviceProfile">
					<CallTestFunction Name="GetDeviceProfile">
						<Parameter>strTmpString</Parameter>
						<OutParameter>uint16CurDeviceProfile</OutParameter>
					</CallTestFunction>
				</TestStep>
				<TestStep Name="GetModuleProfile">
					<CallTestFunction Name="GetModuleProfile">
						<Parameter>strTmpString</Parameter>
						<OutParameter>uint16CurModuleProfile</OutParameter>
					</CallTestFunction>
				</TestStep>
				<TestStep Name="GetSubModuleProfile">
					<CallTestFunction Name="GetSubModuleProfile">
						<Parameter>strTmpString</Parameter>
						<OutParameter>uint16CurSubModuleProfile</OutParameter>
					</CallTestFunction>
				</TestStep>
				<TestStep Name="DumpProfileInfo">
					<Description Id="9" Param0="uint16CurDeviceProfile" Param1="uint16CurModuleProfile" Param2="uint16CurSubModuleProfile" Param3="u32ProfileCounter" Level="Output">Module[{3}] : DeviceProfile '{0}' ; ModuleProfile '{1}' ; SubModuleProfile '{2}'</Description>
					<Compare>
						<Equal>
							<Value1>bIgnoreProfileID</Value1>
							<Value2>true</Value2>
							<GotoStep>IndicateThatAtleastOneModuleMatch</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CompareDeviceProfile">
					<Compare>
						<NotEqual>
							<Value1>uint16CurDeviceProfile</Value1>
							<Value2>5003</Value2>
							<WriteLine Id="10" Param0="uint16CurDeviceProfile" Level="Output">Skip Profile  (Test Device Profile '5003' != Cur Device Profile '{0}')</WriteLine>
						</NotEqual>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>uint16CurDeviceProfile</Value1>
							<Value2>5003</Value2>
							<GotoStep>ProfileLoopEnd</GotoStep>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep Name="CompareModuleProfile">
					<Compare>
						<NotEqual>
							<Value1>uint16CurModuleProfile</Value1>
							<Value2>2011</Value2>
							<WriteLine Id="11" Param0="uint16CurModuleProfile" Level="Output">Skip Profile  (Test Module Profile '2011' != Cur Module Profile '{0}')</WriteLine>
						</NotEqual>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>uint16CurModuleProfile</Value1>
							<Value2>2011</Value2>
							<GotoStep>ProfileLoopEnd</GotoStep>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep Name="CompareSubModuleProfile">
					<Compare>
						<NotEqual>
							<Value1>uint16CurSubModuleProfile</Value1>
							<Value2>0</Value2>
							<WriteLine Id="12" Param0="uint16CurSubModuleProfile" Level="Output">Skip Profile  (Test SubModule Profile '0' != Cur SubModule Profile '{0}')</WriteLine>
						</NotEqual>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>uint16CurSubModuleProfile</Value1>
							<Value2>0</Value2>
							<GotoStep>ProfileLoopEnd</GotoStep>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep Name="IndicateThatAtleastOneModuleMatch">
					<SetVariable Target="bAtLeastOneModuleMatch">true</SetVariable>
				</TestStep>
				<TestStep Name="GetObjectIndexInclOffset">
					<SetVariable Target="u16ObjectIndexInclOffset">#x7009 + (u32ProfileCounter * #x10)</SetVariable>
					<WriteLine Id="13" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : ObjectIndex '0x{0:X}'</WriteLine>
				</TestStep>
				<TestStep Name="LoadDeviceObjectDictionary">
					<Description Id="14" Level="Verbose">Load 'online' object dictionary for testing.</Description>
					<GetObjectDictionary Target="odDeviceObjectdictionary">
						<DictionaryType>Online</DictionaryType>
					</GetObjectDictionary>
					<RaiseErrorOnFailure Id="15">VerifyObject : failed to load online object dictionary.</RaiseErrorOnFailure>
				</TestStep>
				<TestStep Name="SetObjectRequiredLevel">
					<SetVariable Target="bObjectOrEntryRequiredLevel">1</SetVariable>
					<WriteLine Id="16" Param0="u16ObjectIndexInclOffset" Level="Verbose">0x{0:X4} 'CEX Phase Settings' may be available</WriteLine>
				</TestStep>
				<TestStep Name="CheckIfObjectExists">
					<GetObjectDescription SourceDictionary="odDeviceObjectdictionary" Index="u16ObjectIndexInclOffset" SubIndex="-1"></GetObjectDescription>
					<GotoOnSuccess>CallCheckObjectDescription</GotoOnSuccess>
				</TestStep>
				<TestStep Name="HandleNotExistingObject">
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>2</Value2>
							<WriteLine Id="17" Param0="u16ObjectIndexInclOffset" Level="Warning">The object 0x{0:X4} 'CEX Phase Settings' does not exists.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>1</Value2>
							<WriteLine Id="18" Param0="u16ObjectIndexInclOffset" Level="Output">The object 0x{0:X4} 'CEX Phase Settings' does not exists.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>ProfileLoopEnd</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CallCheckObjectDescription">
					<Description Id="19" Param0="u16ObjectIndexInclOffset" Level="Output">Verify the object description 0x{0:X4} 'CEX Phase Settings'.</Description>
					<CallTestFunction Name="CheckObjectDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"online"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>"CEX Phase Settings"</Parameter>
						<Parameter>null</Parameter>
						<Parameter>9</Parameter>
						<Parameter>-1</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<GotoStep>ProfileLoopEnd</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="InitEntryBittOffset">
					<SetVariable Target="i32CurrentBitOffset">0</SetVariable>
				</TestStep>
				<TestStep Name="StartSi0">
					<Description Id="20" Level="Output">Start validate SubIndex0</Description>
					<WriteLine Id="21" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : Subindex '0x{0:X}.0'</WriteLine>
				</TestStep>
				<TestStep Name="CallSi0CheckEntryDescription">
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"online"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>0</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>null</Parameter>
						<Parameter>5</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>null</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>null</Parameter>
						<Parameter>null</Parameter>
						<Parameter>null</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>8</Parameter>
						<Parameter>i32CurrentBitOffset</Parameter>
						<Parameter>true</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="EndSi0">
					<SetVariable Target="i32CurrentBitOffset">16</SetVariable>
				</TestStep>
				<TestStep Name="StartSi1">
					<Description Id="22" Level="Output">Start validate SubIndex1</Description>
					<WriteLine Id="23" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : Subindex '0x{0:X}.1'</WriteLine>
				</TestStep>
				<TestStep Name="SetSi1RequiredLevel">
					<SetVariable Target="bObjectOrEntryRequiredLevel">1</SetVariable>
					<WriteLine Id="24" Param0="u16ObjectIndexInclOffset" Level="Verbose">0x{0:X4}.1 'CEX Phase Offset' may be available</WriteLine>
				</TestStep>
				<TestStep Name="CheckIfSi1Exists">
					<GetObjectDescription SourceDictionary="odDeviceObjectdictionary" Index="u16ObjectIndexInclOffset" SubIndex="1">
						<Type>u16DataType</Type>
					</GetObjectDescription>
					<GotoOnFailure>HandleNotExistingSi1</GotoOnFailure>
				</TestStep>
				<TestStep>
					<Compare>
						<NotEqual>
							<Value1>u16DataType</Value1>
							<Value2>0</Value2>
							<GotoStep>CallSi1CheckEntryDescription</GotoStep>
						</NotEqual>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="25" Param0="u16ObjectIndexInclOffset" Level="Verbose">The entry 0x{0:X4}.1 is defined as a padding entry.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>EndSi1</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="HandleNotExistingSi1">
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="26" Param0="u16ObjectIndexInclOffset" Level="Output">The entry 0x{0:X4}.1 does not exists.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>EndSi1</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CallSi1CheckEntryDescription">
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"online"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>1</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>"CEX Phase Offset"</Parameter>
						<Parameter>8</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>null</Parameter>
						<Parameter>R</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>00000000</Parameter>
						<Parameter>0000B443</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>32</Parameter>
						<Parameter>i32CurrentBitOffset</Parameter>
						<Parameter>true</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="EndSi1">
					<SetVariable Target="i32CurrentBitOffset">-1</SetVariable>
				</TestStep>
				<TestStep Name="CheckReservedEntryRange_2_to_255">
					<Description Id="27" Level="Output">Start check reserved entry range 2 to 255</Description>
					<CallTestFunction Name="CheckReservedEntryRange">
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>2</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>odDeviceObjectdictionary</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="ProfileLoopEnd">
					<Compare>
						<Equal>
							<Value1>bAtLeastOneModuleMatch</Value1>
							<Value2>false</Value2>
							<GotoStep>HandleAbortTestCaseOnFirstError</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="HandleAbortTestCaseOnFirstError">
					<Compare>
						<Equal>
							<Value1>bAbortTestCaseOnFirstError</Value1>
							<Value2>false</Value2>
							<GotoStep>ProfileLoopIncrement</GotoStep>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>strResult</Value1>
							<Value2>EmptyString</Value2>
							<GotoStep>ProfileLoopIncrement</GotoStep>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="28" Level="Output">Object verification for all following modules abort because an error was already detected for the current module.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>END</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="ProfileLoopIncrement">
					<SetVariable Target="u32ProfileCounter">u32ProfileCounter + 1</SetVariable>
					<Compare>
						<Greater>
							<Value1>u32CurrentProfilesLength</Value1>
							<Value2>u32ProfileCounter</Value2>
							<GotoStep>ProfileLoopStart</GotoStep>
						</Greater>
					</Compare>
				</TestStep>
				<TestStep Name="END">
					<Compare>
						<NotEqual>
							<Value1>bAtLeastOneModuleMatch</Value1>
							<Value2>true</Value2>
							<SkipCase Id="29">SKIP TEST(no module/channel supports the current profile)</SkipCase>
						</NotEqual>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bDEBUG</Value1>
							<Value2>true</Value2>
							<WriteLine Id="30" Param0="strResult" Level="Verbose">DEBUG | Result : '{0}'.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>strResult</Value1>
							<Value2>EmptyString</Value2>
							<ReturnSuccess Id="31">Test succeed</ReturnSuccess>
						</Equal>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>strResult</Value1>
							<Value2>EmptyString</Value2>
							<RaiseError Id="32"></RaiseError>
						</NotEqual>
					</Compare>
				</TestStep>
			</TestCase>
			<TestCase Name="offline | 0x700A to 0x700F (reserved range)" CaseId="19">
				<Description>
					<PreCondition>- The device profile is 5003
- The module profile is 2011
- The submodule profile is 0</PreCondition>
					<Action>- Iterate over all offline defined modules/channels and if the PreCondition matches the check if one object in the reserved range is defined</Action>
					<PostCondition>- Error if at least one object is defined</PostCondition>
					<ProposalForSolution>- Remove the defined objects
</ProposalForSolution>
					<References>
						<Reference Specification="ETG.5003.2011"></Reference>
					</References>
					<Mandatory>true</Mandatory>
				</Description>
				<TestStep Name="InitResult">
					<SetVariable Target="strResult">EmptyString</SetVariable>
				</TestStep>
				<TestStep Name="CheckIfOdAvailable">
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Mailbox</Value1>
							<Value2>false</Value2>
							<SkipCase Id="1">DuT does not support mailbox.</SkipCase>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Mailbox.CoE</Value1>
							<Value2>false</Value2>
							<SkipCase Id="2">DuT does not support CoE.</SkipCase>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep>
					<GetObjectDictionary Target="odDeviceObjectdictionary">
						<DictionaryType>Offline</DictionaryType>
					</GetObjectDictionary>
					<SkipOnFailure Id="3">No offline object dictionary defined.</SkipOnFailure>
				</TestStep>
				<TestStep>
					<GetObjectList Count="u32Tmp" Target="odDeviceObjectdictionaryList" SourceDict="odDeviceObjectdictionary"></GetObjectList>
					<Compare>
						<Equal>
							<Value1>u32Tmp</Value1>
							<Value2>0</Value2>
							<SkipCase Id="4">No offline object dictionary defined.</SkipCase>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="InitAtLeastOneProfileMatch">
					<SetVariable Target="bAtLeastOneModuleMatch">false</SetVariable>
				</TestStep>
				<TestStep Name="GetCurrentProfileList">
					<SizeOf UInt32Var="u32Tmp">arrOfflineProfiles</SizeOf>
					<Compare>
						<Equal>
							<Value1>u32Tmp</Value1>
							<Value2>0</Value2>
							<CallTestFunction Name="GetCurrentProfileList">
								<Parameter>"offline"</Parameter>
								<Parameter>"SafeOP"</Parameter>
								<OutParameter>arrOfflineProfiles</OutParameter>
							</CallTestFunction>
						</Equal>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>u32Tmp</Value1>
							<Value2>0</Value2>
							<WriteLine Id="5" Param0="arrOfflineProfiles" Level="Verbose">Use previously created profile list ({0})</WriteLine>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep>
					<SizeOf UInt32Var="u32Tmp">arrOfflineProfiles</SizeOf>
				</TestStep>
				<TestStep>
					<InitArray TargetArray="arrCurrentProfiles" Length="u32Tmp"></InitArray>
				</TestStep>
				<TestStep>
					<CopyArray>
						<SourceArray>arrOfflineProfiles</SourceArray>
						<DestinationArray>arrCurrentProfiles</DestinationArray>
						<Length>u32Tmp</Length>
					</CopyArray>
				</TestStep>
				<TestStep Name="InitProfileLoopCounter">
					<SetVariable Target="u32ProfileCounter">0</SetVariable>
				</TestStep>
				<TestStep Name="GetProfileArrayLength">
					<SizeOf UInt32Var="u32CurrentProfilesLength">arrCurrentProfiles</SizeOf>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="6" Param0="u32CurrentProfilesLength" Level="Verbose">'{0}' Profile(s) defined offline.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>u32CurrentProfilesLength</Value1>
							<Value2>0</Value2>
							<SkipCase Id="7">Skip case | no profile defined.</SkipCase>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="ProfileLoopStart">
					<GetArrayItem SourceArray="arrCurrentProfiles" Target="strTmpString" Index="u32ProfileCounter"></GetArrayItem>
				</TestStep>
				<TestStep Name="CheckProfileInformationString">
					<Compare>
						<Equal>
							<Value1>strTmpString</Value1>
							<Value2>null</Value2>
							<RaiseError Id="8" Param0="u32ProfileCounter">Profile Info element [{0}] is null.</RaiseError>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>strTmpString</Value1>
							<Value2>EmptyString</Value2>
							<RaiseError Id="9" Param0="u32ProfileCounter">Profile Info element [{0}] is an empty string.</RaiseError>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="GetDeviceProfile">
					<CallTestFunction Name="GetDeviceProfile">
						<Parameter>strTmpString</Parameter>
						<OutParameter>uint16CurDeviceProfile</OutParameter>
					</CallTestFunction>
				</TestStep>
				<TestStep Name="GetModuleProfile">
					<CallTestFunction Name="GetModuleProfile">
						<Parameter>strTmpString</Parameter>
						<OutParameter>uint16CurModuleProfile</OutParameter>
					</CallTestFunction>
				</TestStep>
				<TestStep Name="GetSubModuleProfile">
					<CallTestFunction Name="GetSubModuleProfile">
						<Parameter>strTmpString</Parameter>
						<OutParameter>uint16CurSubModuleProfile</OutParameter>
					</CallTestFunction>
				</TestStep>
				<TestStep Name="DumpProfileInfo">
					<Description Id="10" Param0="uint16CurDeviceProfile" Param1="uint16CurModuleProfile" Param2="uint16CurSubModuleProfile" Param3="u32ProfileCounter" Level="Output">Module[{3}] : DeviceProfile '{0}' ; ModuleProfile '{1}' ; SubModuleProfile '{2}'</Description>
					<Compare>
						<Equal>
							<Value1>bIgnoreProfileID</Value1>
							<Value2>true</Value2>
							<GotoStep>IndicateThatAtleastOneModuleMatch</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CompareDeviceProfile">
					<Compare>
						<NotEqual>
							<Value1>uint16CurDeviceProfile</Value1>
							<Value2>5003</Value2>
							<WriteLine Id="11" Param0="uint16CurDeviceProfile" Level="Output">Skip Profile  (Test Device Profile '5003' != Cur Device Profile '{0}')</WriteLine>
						</NotEqual>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>uint16CurDeviceProfile</Value1>
							<Value2>5003</Value2>
							<GotoStep>ProfileLoopEnd</GotoStep>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep Name="CompareModuleProfile">
					<Compare>
						<NotEqual>
							<Value1>uint16CurModuleProfile</Value1>
							<Value2>2011</Value2>
							<WriteLine Id="12" Param0="uint16CurModuleProfile" Level="Output">Skip Profile  (Test Module Profile '2011' != Cur Module Profile '{0}')</WriteLine>
						</NotEqual>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>uint16CurModuleProfile</Value1>
							<Value2>2011</Value2>
							<GotoStep>ProfileLoopEnd</GotoStep>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep Name="CompareSubModuleProfile">
					<Compare>
						<NotEqual>
							<Value1>uint16CurSubModuleProfile</Value1>
							<Value2>0</Value2>
							<WriteLine Id="13" Param0="uint16CurSubModuleProfile" Level="Output">Skip Profile  (Test SubModule Profile '0' != Cur SubModule Profile '{0}')</WriteLine>
						</NotEqual>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>uint16CurSubModuleProfile</Value1>
							<Value2>0</Value2>
							<GotoStep>ProfileLoopEnd</GotoStep>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep Name="IndicateThatAtleastOneModuleMatch">
					<SetVariable Target="bAtLeastOneModuleMatch">true</SetVariable>
				</TestStep>
				<TestStep Name="GetFirstReservedObjectIndexInlcOffset">
					<SetVariable Target="u16ObjectIndexInclOffset">#x700A + (u32ProfileCounter * #x10)</SetVariable>
					<WriteLine Id="14" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : First reserved object index '0x{0:X}'</WriteLine>
				</TestStep>
				<TestStep Name="GetNextDefinedObjectIndexInlcOffset">
					<SetVariable Target="u16NextDefObjectIndexInclOffset">#x7010 + (u32ProfileCounter * #x0010)</SetVariable>
					<WriteLine Id="15" Param0="u16NextDefObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : Next defined object index '0x{0:X}'</WriteLine>
				</TestStep>
				<TestStep Name="CallCheckReservedObjectRange">
					<Description Id="16" Level="Verbose">VerifyObject : Load 'offline' object dictionary for testing.</Description>
					<CallTestFunction Name="CheckReservedObjectRange">
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>u16NextDefObjectIndexInclOffset</Parameter>
						<Parameter>odDeviceObjectdictionary</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<GotoStep>ProfileLoopEnd</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="ProfileLoopEnd">
					<Compare>
						<Equal>
							<Value1>bAtLeastOneModuleMatch</Value1>
							<Value2>false</Value2>
							<GotoStep>HandleAbortTestCaseOnFirstError</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="HandleAbortTestCaseOnFirstError">
					<Compare>
						<Equal>
							<Value1>bAbortTestCaseOnFirstError</Value1>
							<Value2>false</Value2>
							<GotoStep>ProfileLoopIncrement</GotoStep>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>strResult</Value1>
							<Value2>EmptyString</Value2>
							<GotoStep>ProfileLoopIncrement</GotoStep>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="17" Level="Output">Object verification for all following modules abort because an error was already detected for the current module.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>END</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="ProfileLoopIncrement">
					<SetVariable Target="u32ProfileCounter">u32ProfileCounter + 1</SetVariable>
					<Compare>
						<Greater>
							<Value1>u32CurrentProfilesLength</Value1>
							<Value2>u32ProfileCounter</Value2>
							<GotoStep>ProfileLoopStart</GotoStep>
						</Greater>
					</Compare>
				</TestStep>
				<TestStep Name="END">
					<Compare>
						<NotEqual>
							<Value1>bAtLeastOneModuleMatch</Value1>
							<Value2>true</Value2>
							<SkipCase Id="18">SKIP TEST(no module/channel supports the current profile)</SkipCase>
						</NotEqual>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bDEBUG</Value1>
							<Value2>true</Value2>
							<WriteLine Id="19" Param0="strResult" Level="Verbose">DEBUG | Result : '{0}'.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>strResult</Value1>
							<Value2>EmptyString</Value2>
							<ReturnSuccess Id="20">Test succeed</ReturnSuccess>
						</Equal>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>strResult</Value1>
							<Value2>EmptyString</Value2>
							<RaiseError Id="21"></RaiseError>
						</NotEqual>
					</Compare>
				</TestStep>
			</TestCase>
			<TestCase Name="online | 0x700A to 0x700F (reserved range)" CaseId="20">
				<Description>
					<PreCondition>- The device profile is 5003
- The module profile is 2011
- The submodule profile is 0</PreCondition>
					<Action>- Iterate over all online defined modules/channels and if the PreCondition matches the check if one object in the reserved range is defined</Action>
					<PostCondition>- Error if at least one object is defined</PostCondition>
					<ProposalForSolution>- Remove the defined objects
</ProposalForSolution>
					<References>
						<Reference Specification="ETG.5003.2011"></Reference>
					</References>
					<Mandatory>true</Mandatory>
				</Description>
				<TestStep Name="InitResult">
					<SetVariable Target="strResult">EmptyString</SetVariable>
				</TestStep>
				<TestStep Name="CheckIfOdAvailable">
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Mailbox</Value1>
							<Value2>false</Value2>
							<SkipCase Id="1">DuT does not support mailbox.</SkipCase>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Mailbox.CoE</Value1>
							<Value2>false</Value2>
							<SkipCase Id="2">DuT does not support CoE.</SkipCase>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Mailbox.CoE.SdoInfo</Value1>
							<Value2>false</Value2>
							<SkipCase Id="3">DuT does not support SDO Info.</SkipCase>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="InitAtLeastOneProfileMatch">
					<SetVariable Target="bAtLeastOneModuleMatch">false</SetVariable>
				</TestStep>
				<TestStep Name="GetCurrentProfileList">
					<SizeOf UInt32Var="u32Tmp">arrOnlineProfiles</SizeOf>
					<Compare>
						<Equal>
							<Value1>u32Tmp</Value1>
							<Value2>0</Value2>
							<CallTestFunction Name="GetCurrentProfileList">
								<Parameter>"online"</Parameter>
								<Parameter>"SafeOP"</Parameter>
								<OutParameter>arrOnlineProfiles</OutParameter>
							</CallTestFunction>
						</Equal>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>u32Tmp</Value1>
							<Value2>0</Value2>
							<WriteLine Id="4" Param0="arrOnlineProfiles" Level="Verbose">Use previously created profile list ({0})</WriteLine>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep>
					<SizeOf UInt32Var="u32Tmp">arrOnlineProfiles</SizeOf>
				</TestStep>
				<TestStep>
					<InitArray TargetArray="arrCurrentProfiles" Length="u32Tmp"></InitArray>
				</TestStep>
				<TestStep>
					<CopyArray>
						<SourceArray>arrOnlineProfiles</SourceArray>
						<DestinationArray>arrCurrentProfiles</DestinationArray>
						<Length>u32Tmp</Length>
					</CopyArray>
				</TestStep>
				<TestStep Name="InitProfileLoopCounter">
					<SetVariable Target="u32ProfileCounter">0</SetVariable>
				</TestStep>
				<TestStep Name="GetProfileArrayLength">
					<SizeOf UInt32Var="u32CurrentProfilesLength">arrCurrentProfiles</SizeOf>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="5" Param0="u32CurrentProfilesLength" Level="Verbose">'{0}' Profile(s) defined online.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>u32CurrentProfilesLength</Value1>
							<Value2>0</Value2>
							<SkipCase Id="6">Skip case | no profile defined.</SkipCase>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="ProfileLoopStart">
					<GetArrayItem SourceArray="arrCurrentProfiles" Target="strTmpString" Index="u32ProfileCounter"></GetArrayItem>
				</TestStep>
				<TestStep Name="CheckProfileInformationString">
					<Compare>
						<Equal>
							<Value1>strTmpString</Value1>
							<Value2>null</Value2>
							<RaiseError Id="7" Param0="u32ProfileCounter">Profile Info element [{0}] is null.</RaiseError>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>strTmpString</Value1>
							<Value2>EmptyString</Value2>
							<RaiseError Id="8" Param0="u32ProfileCounter">Profile Info element [{0}] is an empty string.</RaiseError>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="GetDeviceProfile">
					<CallTestFunction Name="GetDeviceProfile">
						<Parameter>strTmpString</Parameter>
						<OutParameter>uint16CurDeviceProfile</OutParameter>
					</CallTestFunction>
				</TestStep>
				<TestStep Name="GetModuleProfile">
					<CallTestFunction Name="GetModuleProfile">
						<Parameter>strTmpString</Parameter>
						<OutParameter>uint16CurModuleProfile</OutParameter>
					</CallTestFunction>
				</TestStep>
				<TestStep Name="GetSubModuleProfile">
					<CallTestFunction Name="GetSubModuleProfile">
						<Parameter>strTmpString</Parameter>
						<OutParameter>uint16CurSubModuleProfile</OutParameter>
					</CallTestFunction>
				</TestStep>
				<TestStep Name="DumpProfileInfo">
					<Description Id="9" Param0="uint16CurDeviceProfile" Param1="uint16CurModuleProfile" Param2="uint16CurSubModuleProfile" Param3="u32ProfileCounter" Level="Output">Module[{3}] : DeviceProfile '{0}' ; ModuleProfile '{1}' ; SubModuleProfile '{2}'</Description>
					<Compare>
						<Equal>
							<Value1>bIgnoreProfileID</Value1>
							<Value2>true</Value2>
							<GotoStep>IndicateThatAtleastOneModuleMatch</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CompareDeviceProfile">
					<Compare>
						<NotEqual>
							<Value1>uint16CurDeviceProfile</Value1>
							<Value2>5003</Value2>
							<WriteLine Id="10" Param0="uint16CurDeviceProfile" Level="Output">Skip Profile  (Test Device Profile '5003' != Cur Device Profile '{0}')</WriteLine>
						</NotEqual>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>uint16CurDeviceProfile</Value1>
							<Value2>5003</Value2>
							<GotoStep>ProfileLoopEnd</GotoStep>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep Name="CompareModuleProfile">
					<Compare>
						<NotEqual>
							<Value1>uint16CurModuleProfile</Value1>
							<Value2>2011</Value2>
							<WriteLine Id="11" Param0="uint16CurModuleProfile" Level="Output">Skip Profile  (Test Module Profile '2011' != Cur Module Profile '{0}')</WriteLine>
						</NotEqual>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>uint16CurModuleProfile</Value1>
							<Value2>2011</Value2>
							<GotoStep>ProfileLoopEnd</GotoStep>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep Name="CompareSubModuleProfile">
					<Compare>
						<NotEqual>
							<Value1>uint16CurSubModuleProfile</Value1>
							<Value2>0</Value2>
							<WriteLine Id="12" Param0="uint16CurSubModuleProfile" Level="Output">Skip Profile  (Test SubModule Profile '0' != Cur SubModule Profile '{0}')</WriteLine>
						</NotEqual>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>uint16CurSubModuleProfile</Value1>
							<Value2>0</Value2>
							<GotoStep>ProfileLoopEnd</GotoStep>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep Name="IndicateThatAtleastOneModuleMatch">
					<SetVariable Target="bAtLeastOneModuleMatch">true</SetVariable>
				</TestStep>
				<TestStep Name="GetFirstReservedObjectIndexInlcOffset">
					<SetVariable Target="u16ObjectIndexInclOffset">#x700A + (u32ProfileCounter * #x10)</SetVariable>
					<WriteLine Id="13" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : First reserved object index '0x{0:X}'</WriteLine>
				</TestStep>
				<TestStep Name="GetNextDefinedObjectIndexInlcOffset">
					<SetVariable Target="u16NextDefObjectIndexInclOffset">#x7010 + (u32ProfileCounter * #x0010)</SetVariable>
					<WriteLine Id="14" Param0="u16NextDefObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : Next defined object index '0x{0:X}'</WriteLine>
				</TestStep>
				<TestStep Name="CallCheckReservedObjectRange">
					<Description Id="15" Level="Verbose">VerifyObject : Load 'online' object dictionary for testing.</Description>
					<CallTestFunction Name="CheckReservedObjectRange">
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>u16NextDefObjectIndexInclOffset</Parameter>
						<Parameter>odDeviceObjectdictionary</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<GotoStep>ProfileLoopEnd</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="ProfileLoopEnd">
					<Compare>
						<Equal>
							<Value1>bAtLeastOneModuleMatch</Value1>
							<Value2>false</Value2>
							<GotoStep>HandleAbortTestCaseOnFirstError</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="HandleAbortTestCaseOnFirstError">
					<Compare>
						<Equal>
							<Value1>bAbortTestCaseOnFirstError</Value1>
							<Value2>false</Value2>
							<GotoStep>ProfileLoopIncrement</GotoStep>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>strResult</Value1>
							<Value2>EmptyString</Value2>
							<GotoStep>ProfileLoopIncrement</GotoStep>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="16" Level="Output">Object verification for all following modules abort because an error was already detected for the current module.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>END</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="ProfileLoopIncrement">
					<SetVariable Target="u32ProfileCounter">u32ProfileCounter + 1</SetVariable>
					<Compare>
						<Greater>
							<Value1>u32CurrentProfilesLength</Value1>
							<Value2>u32ProfileCounter</Value2>
							<GotoStep>ProfileLoopStart</GotoStep>
						</Greater>
					</Compare>
				</TestStep>
				<TestStep Name="END">
					<Compare>
						<NotEqual>
							<Value1>bAtLeastOneModuleMatch</Value1>
							<Value2>true</Value2>
							<SkipCase Id="17">SKIP TEST(no module/channel supports the current profile)</SkipCase>
						</NotEqual>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bDEBUG</Value1>
							<Value2>true</Value2>
							<WriteLine Id="18" Param0="strResult" Level="Verbose">DEBUG | Result : '{0}'.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>strResult</Value1>
							<Value2>EmptyString</Value2>
							<ReturnSuccess Id="19">Test succeed</ReturnSuccess>
						</Equal>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>strResult</Value1>
							<Value2>EmptyString</Value2>
							<RaiseError Id="20"></RaiseError>
						</NotEqual>
					</Compare>
				</TestStep>
			</TestCase>
		</TestGroup>
		<TestGroup Name="Verify objects 0x8nn0 - 0x8nnF (Configuration Data of the Modules)" GroupId="4">
			<TestCase Name="offline | 0x8000 (Device Limit Config)" CaseId="1">
				<Description>
					<PreCondition>- The device profile is 5003
- The module profile is 2011
- The submodule profile is 0</PreCondition>
					<Action>- Iterate over all offline defined modules/channels and if the PreCondition matches the following operations are done:
- Get the offline description of object 0x8000(+module specific offset) 'Device Limit Config' and all entries
 Check:
    (Name)
    BitSize
    DataType
    Rx / Tx mappable
    Default Data
    MinData
    Flags       </Action>
					<PostCondition>Error if
- mandatory object / entry is not defined
- an optional object exists and the entries are invalid
- Object / entry description does not match with the specification</PostCondition>
					<ProposalForSolution>- Define the missing objects
- correct object / entry description</ProposalForSolution>
					<References>
						<Reference Specification="ETG.5003.2011"></Reference>
					</References>
					<Mandatory>true</Mandatory>
				</Description>
				<TestStep Name="InitResult">
					<SetVariable Target="strResult">EmptyString</SetVariable>
				</TestStep>
				<TestStep Name="CheckIfOdAvailable">
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Mailbox</Value1>
							<Value2>false</Value2>
							<SkipCase Id="1">DuT does not support mailbox.</SkipCase>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Mailbox.CoE</Value1>
							<Value2>false</Value2>
							<SkipCase Id="2">DuT does not support CoE.</SkipCase>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep>
					<GetObjectDictionary Target="odDeviceObjectdictionary">
						<DictionaryType>Offline</DictionaryType>
					</GetObjectDictionary>
					<SkipOnFailure Id="3">No offline object dictionary defined.</SkipOnFailure>
				</TestStep>
				<TestStep>
					<GetObjectList Count="u32Tmp" Target="odDeviceObjectdictionaryList" SourceDict="odDeviceObjectdictionary"></GetObjectList>
					<Compare>
						<Equal>
							<Value1>u32Tmp</Value1>
							<Value2>0</Value2>
							<SkipCase Id="4">No offline object dictionary defined.</SkipCase>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="InitAtLeastOneProfileMatch">
					<SetVariable Target="bAtLeastOneModuleMatch">false</SetVariable>
				</TestStep>
				<TestStep Name="GetCurrentProfileList">
					<SizeOf UInt32Var="u32Tmp">arrOfflineProfiles</SizeOf>
					<Compare>
						<Equal>
							<Value1>u32Tmp</Value1>
							<Value2>0</Value2>
							<CallTestFunction Name="GetCurrentProfileList">
								<Parameter>"offline"</Parameter>
								<Parameter>"SafeOP"</Parameter>
								<OutParameter>arrOfflineProfiles</OutParameter>
							</CallTestFunction>
						</Equal>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>u32Tmp</Value1>
							<Value2>0</Value2>
							<WriteLine Id="5" Param0="arrOfflineProfiles" Level="Verbose">Use previously created profile list ({0})</WriteLine>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep>
					<SizeOf UInt32Var="u32Tmp">arrOfflineProfiles</SizeOf>
				</TestStep>
				<TestStep>
					<InitArray TargetArray="arrCurrentProfiles" Length="u32Tmp"></InitArray>
				</TestStep>
				<TestStep>
					<CopyArray>
						<SourceArray>arrOfflineProfiles</SourceArray>
						<DestinationArray>arrCurrentProfiles</DestinationArray>
						<Length>u32Tmp</Length>
					</CopyArray>
				</TestStep>
				<TestStep Name="InitProfileLoopCounter">
					<SetVariable Target="u32ProfileCounter">0</SetVariable>
				</TestStep>
				<TestStep Name="GetProfileArrayLength">
					<SizeOf UInt32Var="u32CurrentProfilesLength">arrCurrentProfiles</SizeOf>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="6" Param0="u32CurrentProfilesLength" Level="Verbose">'{0}' Profile(s) defined offline.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>u32CurrentProfilesLength</Value1>
							<Value2>0</Value2>
							<SkipCase Id="7">Skip case | no profile defined.</SkipCase>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="ProfileLoopStart">
					<GetArrayItem SourceArray="arrCurrentProfiles" Target="strTmpString" Index="u32ProfileCounter"></GetArrayItem>
				</TestStep>
				<TestStep Name="CheckProfileInformationString">
					<Compare>
						<Equal>
							<Value1>strTmpString</Value1>
							<Value2>null</Value2>
							<RaiseError Id="8" Param0="u32ProfileCounter">Profile Info element [{0}] is null.</RaiseError>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>strTmpString</Value1>
							<Value2>EmptyString</Value2>
							<RaiseError Id="9" Param0="u32ProfileCounter">Profile Info element [{0}] is an empty string.</RaiseError>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="GetDeviceProfile">
					<CallTestFunction Name="GetDeviceProfile">
						<Parameter>strTmpString</Parameter>
						<OutParameter>uint16CurDeviceProfile</OutParameter>
					</CallTestFunction>
				</TestStep>
				<TestStep Name="GetModuleProfile">
					<CallTestFunction Name="GetModuleProfile">
						<Parameter>strTmpString</Parameter>
						<OutParameter>uint16CurModuleProfile</OutParameter>
					</CallTestFunction>
				</TestStep>
				<TestStep Name="GetSubModuleProfile">
					<CallTestFunction Name="GetSubModuleProfile">
						<Parameter>strTmpString</Parameter>
						<OutParameter>uint16CurSubModuleProfile</OutParameter>
					</CallTestFunction>
				</TestStep>
				<TestStep Name="DumpProfileInfo">
					<Description Id="10" Param0="uint16CurDeviceProfile" Param1="uint16CurModuleProfile" Param2="uint16CurSubModuleProfile" Param3="u32ProfileCounter" Level="Output">Module[{3}] : DeviceProfile '{0}' ; ModuleProfile '{1}' ; SubModuleProfile '{2}'</Description>
					<Compare>
						<Equal>
							<Value1>bIgnoreProfileID</Value1>
							<Value2>true</Value2>
							<GotoStep>IndicateThatAtleastOneModuleMatch</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CompareDeviceProfile">
					<Compare>
						<NotEqual>
							<Value1>uint16CurDeviceProfile</Value1>
							<Value2>5003</Value2>
							<WriteLine Id="11" Param0="uint16CurDeviceProfile" Level="Output">Skip Profile  (Test Device Profile '5003' != Cur Device Profile '{0}')</WriteLine>
						</NotEqual>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>uint16CurDeviceProfile</Value1>
							<Value2>5003</Value2>
							<GotoStep>ProfileLoopEnd</GotoStep>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep Name="CompareModuleProfile">
					<Compare>
						<NotEqual>
							<Value1>uint16CurModuleProfile</Value1>
							<Value2>2011</Value2>
							<WriteLine Id="12" Param0="uint16CurModuleProfile" Level="Output">Skip Profile  (Test Module Profile '2011' != Cur Module Profile '{0}')</WriteLine>
						</NotEqual>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>uint16CurModuleProfile</Value1>
							<Value2>2011</Value2>
							<GotoStep>ProfileLoopEnd</GotoStep>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep Name="CompareSubModuleProfile">
					<Compare>
						<NotEqual>
							<Value1>uint16CurSubModuleProfile</Value1>
							<Value2>0</Value2>
							<WriteLine Id="13" Param0="uint16CurSubModuleProfile" Level="Output">Skip Profile  (Test SubModule Profile '0' != Cur SubModule Profile '{0}')</WriteLine>
						</NotEqual>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>uint16CurSubModuleProfile</Value1>
							<Value2>0</Value2>
							<GotoStep>ProfileLoopEnd</GotoStep>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep Name="IndicateThatAtleastOneModuleMatch">
					<SetVariable Target="bAtLeastOneModuleMatch">true</SetVariable>
				</TestStep>
				<TestStep Name="GetObjectIndexInclOffset">
					<SetVariable Target="u16ObjectIndexInclOffset">#x8000 + (u32ProfileCounter * #x10)</SetVariable>
					<WriteLine Id="14" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : ObjectIndex '0x{0:X}'</WriteLine>
				</TestStep>
				<TestStep Name="LoadDeviceObjectDictionary">
					<Description Id="15" Level="Verbose">Load 'offline' object dictionary for testing.</Description>
					<GetObjectDictionary Target="odDeviceObjectdictionary">
						<DictionaryType>Offline</DictionaryType>
					</GetObjectDictionary>
					<RaiseErrorOnFailure Id="16">VerifyObject : failed to load offline object dictionary.</RaiseErrorOnFailure>
				</TestStep>
				<TestStep Name="SetObjectRequiredLevel">
					<SetVariable Target="bObjectOrEntryRequiredLevel">1</SetVariable>
					<WriteLine Id="17" Param0="u16ObjectIndexInclOffset" Level="Verbose">0x{0:X4} 'Device Limit Config' may be available</WriteLine>
				</TestStep>
				<TestStep Name="CheckIfObjectExists">
					<GetObjectDescription SourceDictionary="odDeviceObjectdictionary" Index="u16ObjectIndexInclOffset" SubIndex="-1"></GetObjectDescription>
					<GotoOnSuccess>CallCheckObjectDescription</GotoOnSuccess>
				</TestStep>
				<TestStep Name="HandleNotExistingObject">
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>2</Value2>
							<WriteLine Id="18" Param0="u16ObjectIndexInclOffset" Level="Warning">The object 0x{0:X4} 'Device Limit Config' does not exists.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>1</Value2>
							<WriteLine Id="19" Param0="u16ObjectIndexInclOffset" Level="Output">The object 0x{0:X4} 'Device Limit Config' does not exists.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>ProfileLoopEnd</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CallCheckObjectDescription">
					<Description Id="20" Param0="u16ObjectIndexInclOffset" Level="Output">Verify the object description 0x{0:X4} 'Device Limit Config'.</Description>
					<CallTestFunction Name="CheckObjectDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"offline"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>"Device Limit Config"</Parameter>
						<Parameter>null</Parameter>
						<Parameter>9</Parameter>
						<Parameter>-1</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<GotoStep>ProfileLoopEnd</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="InitEntryBittOffset">
					<SetVariable Target="i32CurrentBitOffset">0</SetVariable>
				</TestStep>
				<TestStep Name="StartSi0">
					<Description Id="21" Level="Output">Start validate SubIndex0</Description>
					<WriteLine Id="22" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : Subindex '0x{0:X}.0'</WriteLine>
				</TestStep>
				<TestStep Name="CallSi0CheckEntryDescription">
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"offline"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>0</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>null</Parameter>
						<Parameter>5</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>null</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>null</Parameter>
						<Parameter>null</Parameter>
						<Parameter>null</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>8</Parameter>
						<Parameter>i32CurrentBitOffset</Parameter>
						<Parameter>true</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="EndSi0">
					<SetVariable Target="i32CurrentBitOffset">16</SetVariable>
				</TestStep>
				<TestStep Name="StartSi1">
					<Description Id="23" Level="Output">Start validate SubIndex1</Description>
					<WriteLine Id="24" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : Subindex '0x{0:X}.1'</WriteLine>
				</TestStep>
				<TestStep Name="SetSi1RequiredLevel">
					<SetVariable Target="bObjectOrEntryRequiredLevel">1</SetVariable>
					<WriteLine Id="25" Param0="u16ObjectIndexInclOffset" Level="Verbose">0x{0:X4}.1 'Software Forward Power Limit' may be available</WriteLine>
				</TestStep>
				<TestStep Name="CheckIfSi1Exists">
					<GetObjectDescription SourceDictionary="odDeviceObjectdictionary" Index="u16ObjectIndexInclOffset" SubIndex="1">
						<Type>u16DataType</Type>
					</GetObjectDescription>
					<GotoOnFailure>HandleNotExistingSi1</GotoOnFailure>
				</TestStep>
				<TestStep>
					<Compare>
						<NotEqual>
							<Value1>u16DataType</Value1>
							<Value2>0</Value2>
							<GotoStep>CallSi1CheckEntryDescription</GotoStep>
						</NotEqual>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="26" Param0="u16ObjectIndexInclOffset" Level="Verbose">The entry 0x{0:X4}.1 is defined as a padding entry.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>EndSi1</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="HandleNotExistingSi1">
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="27" Param0="u16ObjectIndexInclOffset" Level="Output">The entry 0x{0:X4}.1 does not exists.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>EndSi1</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CallSi1CheckEntryDescription">
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"offline"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>1</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>"Software Forward Power Limit"</Parameter>
						<Parameter>8</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>null</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>32</Parameter>
						<Parameter>i32CurrentBitOffset</Parameter>
						<Parameter>true</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="EndSi1">
					<SetVariable Target="i32CurrentBitOffset">-1</SetVariable>
				</TestStep>
				<TestStep Name="StartSi2">
					<Description Id="28" Level="Output">Start validate SubIndex2</Description>
					<WriteLine Id="29" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : Subindex '0x{0:X}.2'</WriteLine>
				</TestStep>
				<TestStep Name="SetSi2RequiredLevel">
					<SetVariable Target="bObjectOrEntryRequiredLevel">1</SetVariable>
					<WriteLine Id="30" Param0="u16ObjectIndexInclOffset" Level="Verbose">0x{0:X4}.2 'Software Reflected Power Limit' may be available</WriteLine>
				</TestStep>
				<TestStep Name="CheckIfSi2Exists">
					<GetObjectDescription SourceDictionary="odDeviceObjectdictionary" Index="u16ObjectIndexInclOffset" SubIndex="2">
						<Type>u16DataType</Type>
					</GetObjectDescription>
					<GotoOnFailure>HandleNotExistingSi2</GotoOnFailure>
				</TestStep>
				<TestStep>
					<Compare>
						<NotEqual>
							<Value1>u16DataType</Value1>
							<Value2>0</Value2>
							<GotoStep>CallSi2CheckEntryDescription</GotoStep>
						</NotEqual>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="31" Param0="u16ObjectIndexInclOffset" Level="Verbose">The entry 0x{0:X4}.2 is defined as a padding entry.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>EndSi2</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="HandleNotExistingSi2">
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="32" Param0="u16ObjectIndexInclOffset" Level="Output">The entry 0x{0:X4}.2 does not exists.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>EndSi2</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CallSi2CheckEntryDescription">
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"offline"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>2</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>"Software Reflected Power Limit"</Parameter>
						<Parameter>8</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>null</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>32</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>true</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="EndSi2"></TestStep>
				<TestStep Name="CheckReservedEntryRange_3_to_255">
					<Description Id="33" Level="Output">Start check reserved entry range 3 to 255</Description>
					<CallTestFunction Name="CheckReservedEntryRange">
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>3</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>odDeviceObjectdictionary</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="ProfileLoopEnd">
					<Compare>
						<Equal>
							<Value1>bAtLeastOneModuleMatch</Value1>
							<Value2>false</Value2>
							<GotoStep>HandleAbortTestCaseOnFirstError</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="HandleAbortTestCaseOnFirstError">
					<Compare>
						<Equal>
							<Value1>bAbortTestCaseOnFirstError</Value1>
							<Value2>false</Value2>
							<GotoStep>ProfileLoopIncrement</GotoStep>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>strResult</Value1>
							<Value2>EmptyString</Value2>
							<GotoStep>ProfileLoopIncrement</GotoStep>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="34" Level="Output">Object verification for all following modules abort because an error was already detected for the current module.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>END</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="ProfileLoopIncrement">
					<SetVariable Target="u32ProfileCounter">u32ProfileCounter + 1</SetVariable>
					<Compare>
						<Greater>
							<Value1>u32CurrentProfilesLength</Value1>
							<Value2>u32ProfileCounter</Value2>
							<GotoStep>ProfileLoopStart</GotoStep>
						</Greater>
					</Compare>
				</TestStep>
				<TestStep Name="END">
					<Compare>
						<NotEqual>
							<Value1>bAtLeastOneModuleMatch</Value1>
							<Value2>true</Value2>
							<SkipCase Id="35">SKIP TEST(no module/channel supports the current profile)</SkipCase>
						</NotEqual>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bDEBUG</Value1>
							<Value2>true</Value2>
							<WriteLine Id="36" Param0="strResult" Level="Verbose">DEBUG | Result : '{0}'.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>strResult</Value1>
							<Value2>EmptyString</Value2>
							<ReturnSuccess Id="37">Test succeed</ReturnSuccess>
						</Equal>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>strResult</Value1>
							<Value2>EmptyString</Value2>
							<RaiseError Id="38"></RaiseError>
						</NotEqual>
					</Compare>
				</TestStep>
			</TestCase>
			<TestCase Name="online | 0x8000 (Device Limit Config)" CaseId="2">
				<Description>
					<PreCondition>- The device profile is 5003
- The module profile is 2011
- The submodule profile is 0</PreCondition>
					<Action>- Iterate over all online defined modules/channels and if the PreCondition matches the following operations are done:
- Get the online description of object 0x8000(+module specific offset) 'Device Limit Config' and all entries
 Check:
    (Name)
    BitSize
    DataType
    Rx / Tx mappable
    Default Data
    MinData
    Flags       </Action>
					<PostCondition>Error if
- mandatory object / entry is not defined
- an optional object exists and the entries are invalid
- Object / entry description does not match with the specification</PostCondition>
					<ProposalForSolution>- Define the missing objects
- correct object / entry description</ProposalForSolution>
					<References>
						<Reference Specification="ETG.5003.2011"></Reference>
					</References>
					<Mandatory>true</Mandatory>
				</Description>
				<TestStep Name="InitResult">
					<SetVariable Target="strResult">EmptyString</SetVariable>
				</TestStep>
				<TestStep Name="CheckIfOdAvailable">
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Mailbox</Value1>
							<Value2>false</Value2>
							<SkipCase Id="1">DuT does not support mailbox.</SkipCase>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Mailbox.CoE</Value1>
							<Value2>false</Value2>
							<SkipCase Id="2">DuT does not support CoE.</SkipCase>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Mailbox.CoE.SdoInfo</Value1>
							<Value2>false</Value2>
							<SkipCase Id="3">DuT does not support SDO Info.</SkipCase>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="InitAtLeastOneProfileMatch">
					<SetVariable Target="bAtLeastOneModuleMatch">false</SetVariable>
				</TestStep>
				<TestStep Name="GetCurrentProfileList">
					<SizeOf UInt32Var="u32Tmp">arrOnlineProfiles</SizeOf>
					<Compare>
						<Equal>
							<Value1>u32Tmp</Value1>
							<Value2>0</Value2>
							<CallTestFunction Name="GetCurrentProfileList">
								<Parameter>"online"</Parameter>
								<Parameter>"SafeOP"</Parameter>
								<OutParameter>arrOnlineProfiles</OutParameter>
							</CallTestFunction>
						</Equal>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>u32Tmp</Value1>
							<Value2>0</Value2>
							<WriteLine Id="4" Param0="arrOnlineProfiles" Level="Verbose">Use previously created profile list ({0})</WriteLine>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep>
					<SizeOf UInt32Var="u32Tmp">arrOnlineProfiles</SizeOf>
				</TestStep>
				<TestStep>
					<InitArray TargetArray="arrCurrentProfiles" Length="u32Tmp"></InitArray>
				</TestStep>
				<TestStep>
					<CopyArray>
						<SourceArray>arrOnlineProfiles</SourceArray>
						<DestinationArray>arrCurrentProfiles</DestinationArray>
						<Length>u32Tmp</Length>
					</CopyArray>
				</TestStep>
				<TestStep Name="InitProfileLoopCounter">
					<SetVariable Target="u32ProfileCounter">0</SetVariable>
				</TestStep>
				<TestStep Name="GetProfileArrayLength">
					<SizeOf UInt32Var="u32CurrentProfilesLength">arrCurrentProfiles</SizeOf>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="5" Param0="u32CurrentProfilesLength" Level="Verbose">'{0}' Profile(s) defined online.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>u32CurrentProfilesLength</Value1>
							<Value2>0</Value2>
							<SkipCase Id="6">Skip case | no profile defined.</SkipCase>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="ProfileLoopStart">
					<GetArrayItem SourceArray="arrCurrentProfiles" Target="strTmpString" Index="u32ProfileCounter"></GetArrayItem>
				</TestStep>
				<TestStep Name="CheckProfileInformationString">
					<Compare>
						<Equal>
							<Value1>strTmpString</Value1>
							<Value2>null</Value2>
							<RaiseError Id="7" Param0="u32ProfileCounter">Profile Info element [{0}] is null.</RaiseError>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>strTmpString</Value1>
							<Value2>EmptyString</Value2>
							<RaiseError Id="8" Param0="u32ProfileCounter">Profile Info element [{0}] is an empty string.</RaiseError>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="GetDeviceProfile">
					<CallTestFunction Name="GetDeviceProfile">
						<Parameter>strTmpString</Parameter>
						<OutParameter>uint16CurDeviceProfile</OutParameter>
					</CallTestFunction>
				</TestStep>
				<TestStep Name="GetModuleProfile">
					<CallTestFunction Name="GetModuleProfile">
						<Parameter>strTmpString</Parameter>
						<OutParameter>uint16CurModuleProfile</OutParameter>
					</CallTestFunction>
				</TestStep>
				<TestStep Name="GetSubModuleProfile">
					<CallTestFunction Name="GetSubModuleProfile">
						<Parameter>strTmpString</Parameter>
						<OutParameter>uint16CurSubModuleProfile</OutParameter>
					</CallTestFunction>
				</TestStep>
				<TestStep Name="DumpProfileInfo">
					<Description Id="9" Param0="uint16CurDeviceProfile" Param1="uint16CurModuleProfile" Param2="uint16CurSubModuleProfile" Param3="u32ProfileCounter" Level="Output">Module[{3}] : DeviceProfile '{0}' ; ModuleProfile '{1}' ; SubModuleProfile '{2}'</Description>
					<Compare>
						<Equal>
							<Value1>bIgnoreProfileID</Value1>
							<Value2>true</Value2>
							<GotoStep>IndicateThatAtleastOneModuleMatch</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CompareDeviceProfile">
					<Compare>
						<NotEqual>
							<Value1>uint16CurDeviceProfile</Value1>
							<Value2>5003</Value2>
							<WriteLine Id="10" Param0="uint16CurDeviceProfile" Level="Output">Skip Profile  (Test Device Profile '5003' != Cur Device Profile '{0}')</WriteLine>
						</NotEqual>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>uint16CurDeviceProfile</Value1>
							<Value2>5003</Value2>
							<GotoStep>ProfileLoopEnd</GotoStep>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep Name="CompareModuleProfile">
					<Compare>
						<NotEqual>
							<Value1>uint16CurModuleProfile</Value1>
							<Value2>2011</Value2>
							<WriteLine Id="11" Param0="uint16CurModuleProfile" Level="Output">Skip Profile  (Test Module Profile '2011' != Cur Module Profile '{0}')</WriteLine>
						</NotEqual>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>uint16CurModuleProfile</Value1>
							<Value2>2011</Value2>
							<GotoStep>ProfileLoopEnd</GotoStep>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep Name="CompareSubModuleProfile">
					<Compare>
						<NotEqual>
							<Value1>uint16CurSubModuleProfile</Value1>
							<Value2>0</Value2>
							<WriteLine Id="12" Param0="uint16CurSubModuleProfile" Level="Output">Skip Profile  (Test SubModule Profile '0' != Cur SubModule Profile '{0}')</WriteLine>
						</NotEqual>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>uint16CurSubModuleProfile</Value1>
							<Value2>0</Value2>
							<GotoStep>ProfileLoopEnd</GotoStep>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep Name="IndicateThatAtleastOneModuleMatch">
					<SetVariable Target="bAtLeastOneModuleMatch">true</SetVariable>
				</TestStep>
				<TestStep Name="GetObjectIndexInclOffset">
					<SetVariable Target="u16ObjectIndexInclOffset">#x8000 + (u32ProfileCounter * #x10)</SetVariable>
					<WriteLine Id="13" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : ObjectIndex '0x{0:X}'</WriteLine>
				</TestStep>
				<TestStep Name="LoadDeviceObjectDictionary">
					<Description Id="14" Level="Verbose">Load 'online' object dictionary for testing.</Description>
					<GetObjectDictionary Target="odDeviceObjectdictionary">
						<DictionaryType>Online</DictionaryType>
					</GetObjectDictionary>
					<RaiseErrorOnFailure Id="15">VerifyObject : failed to load online object dictionary.</RaiseErrorOnFailure>
				</TestStep>
				<TestStep Name="SetObjectRequiredLevel">
					<SetVariable Target="bObjectOrEntryRequiredLevel">1</SetVariable>
					<WriteLine Id="16" Param0="u16ObjectIndexInclOffset" Level="Verbose">0x{0:X4} 'Device Limit Config' may be available</WriteLine>
				</TestStep>
				<TestStep Name="CheckIfObjectExists">
					<GetObjectDescription SourceDictionary="odDeviceObjectdictionary" Index="u16ObjectIndexInclOffset" SubIndex="-1"></GetObjectDescription>
					<GotoOnSuccess>CallCheckObjectDescription</GotoOnSuccess>
				</TestStep>
				<TestStep Name="HandleNotExistingObject">
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>2</Value2>
							<WriteLine Id="17" Param0="u16ObjectIndexInclOffset" Level="Warning">The object 0x{0:X4} 'Device Limit Config' does not exists.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>1</Value2>
							<WriteLine Id="18" Param0="u16ObjectIndexInclOffset" Level="Output">The object 0x{0:X4} 'Device Limit Config' does not exists.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>ProfileLoopEnd</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CallCheckObjectDescription">
					<Description Id="19" Param0="u16ObjectIndexInclOffset" Level="Output">Verify the object description 0x{0:X4} 'Device Limit Config'.</Description>
					<CallTestFunction Name="CheckObjectDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"online"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>"Device Limit Config"</Parameter>
						<Parameter>null</Parameter>
						<Parameter>9</Parameter>
						<Parameter>-1</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<GotoStep>ProfileLoopEnd</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="InitEntryBittOffset">
					<SetVariable Target="i32CurrentBitOffset">0</SetVariable>
				</TestStep>
				<TestStep Name="StartSi0">
					<Description Id="20" Level="Output">Start validate SubIndex0</Description>
					<WriteLine Id="21" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : Subindex '0x{0:X}.0'</WriteLine>
				</TestStep>
				<TestStep Name="CallSi0CheckEntryDescription">
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"online"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>0</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>null</Parameter>
						<Parameter>5</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>null</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>null</Parameter>
						<Parameter>null</Parameter>
						<Parameter>null</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>8</Parameter>
						<Parameter>i32CurrentBitOffset</Parameter>
						<Parameter>true</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="EndSi0">
					<SetVariable Target="i32CurrentBitOffset">16</SetVariable>
				</TestStep>
				<TestStep Name="StartSi1">
					<Description Id="22" Level="Output">Start validate SubIndex1</Description>
					<WriteLine Id="23" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : Subindex '0x{0:X}.1'</WriteLine>
				</TestStep>
				<TestStep Name="SetSi1RequiredLevel">
					<SetVariable Target="bObjectOrEntryRequiredLevel">1</SetVariable>
					<WriteLine Id="24" Param0="u16ObjectIndexInclOffset" Level="Verbose">0x{0:X4}.1 'Software Forward Power Limit' may be available</WriteLine>
				</TestStep>
				<TestStep Name="CheckIfSi1Exists">
					<GetObjectDescription SourceDictionary="odDeviceObjectdictionary" Index="u16ObjectIndexInclOffset" SubIndex="1">
						<Type>u16DataType</Type>
					</GetObjectDescription>
					<GotoOnFailure>HandleNotExistingSi1</GotoOnFailure>
				</TestStep>
				<TestStep>
					<Compare>
						<NotEqual>
							<Value1>u16DataType</Value1>
							<Value2>0</Value2>
							<GotoStep>CallSi1CheckEntryDescription</GotoStep>
						</NotEqual>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="25" Param0="u16ObjectIndexInclOffset" Level="Verbose">The entry 0x{0:X4}.1 is defined as a padding entry.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>EndSi1</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="HandleNotExistingSi1">
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="26" Param0="u16ObjectIndexInclOffset" Level="Output">The entry 0x{0:X4}.1 does not exists.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>EndSi1</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CallSi1CheckEntryDescription">
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"online"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>1</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>"Software Forward Power Limit"</Parameter>
						<Parameter>8</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>null</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>32</Parameter>
						<Parameter>i32CurrentBitOffset</Parameter>
						<Parameter>true</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="EndSi1">
					<SetVariable Target="i32CurrentBitOffset">-1</SetVariable>
				</TestStep>
				<TestStep Name="StartSi2">
					<Description Id="27" Level="Output">Start validate SubIndex2</Description>
					<WriteLine Id="28" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : Subindex '0x{0:X}.2'</WriteLine>
				</TestStep>
				<TestStep Name="SetSi2RequiredLevel">
					<SetVariable Target="bObjectOrEntryRequiredLevel">1</SetVariable>
					<WriteLine Id="29" Param0="u16ObjectIndexInclOffset" Level="Verbose">0x{0:X4}.2 'Software Reflected Power Limit' may be available</WriteLine>
				</TestStep>
				<TestStep Name="CheckIfSi2Exists">
					<GetObjectDescription SourceDictionary="odDeviceObjectdictionary" Index="u16ObjectIndexInclOffset" SubIndex="2">
						<Type>u16DataType</Type>
					</GetObjectDescription>
					<GotoOnFailure>HandleNotExistingSi2</GotoOnFailure>
				</TestStep>
				<TestStep>
					<Compare>
						<NotEqual>
							<Value1>u16DataType</Value1>
							<Value2>0</Value2>
							<GotoStep>CallSi2CheckEntryDescription</GotoStep>
						</NotEqual>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="30" Param0="u16ObjectIndexInclOffset" Level="Verbose">The entry 0x{0:X4}.2 is defined as a padding entry.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>EndSi2</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="HandleNotExistingSi2">
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="31" Param0="u16ObjectIndexInclOffset" Level="Output">The entry 0x{0:X4}.2 does not exists.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>EndSi2</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CallSi2CheckEntryDescription">
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"online"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>2</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>"Software Reflected Power Limit"</Parameter>
						<Parameter>8</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>null</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>32</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>true</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="EndSi2"></TestStep>
				<TestStep Name="CheckReservedEntryRange_3_to_255">
					<Description Id="32" Level="Output">Start check reserved entry range 3 to 255</Description>
					<CallTestFunction Name="CheckReservedEntryRange">
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>3</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>odDeviceObjectdictionary</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="ProfileLoopEnd">
					<Compare>
						<Equal>
							<Value1>bAtLeastOneModuleMatch</Value1>
							<Value2>false</Value2>
							<GotoStep>HandleAbortTestCaseOnFirstError</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="HandleAbortTestCaseOnFirstError">
					<Compare>
						<Equal>
							<Value1>bAbortTestCaseOnFirstError</Value1>
							<Value2>false</Value2>
							<GotoStep>ProfileLoopIncrement</GotoStep>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>strResult</Value1>
							<Value2>EmptyString</Value2>
							<GotoStep>ProfileLoopIncrement</GotoStep>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="33" Level="Output">Object verification for all following modules abort because an error was already detected for the current module.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>END</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="ProfileLoopIncrement">
					<SetVariable Target="u32ProfileCounter">u32ProfileCounter + 1</SetVariable>
					<Compare>
						<Greater>
							<Value1>u32CurrentProfilesLength</Value1>
							<Value2>u32ProfileCounter</Value2>
							<GotoStep>ProfileLoopStart</GotoStep>
						</Greater>
					</Compare>
				</TestStep>
				<TestStep Name="END">
					<Compare>
						<NotEqual>
							<Value1>bAtLeastOneModuleMatch</Value1>
							<Value2>true</Value2>
							<SkipCase Id="34">SKIP TEST(no module/channel supports the current profile)</SkipCase>
						</NotEqual>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bDEBUG</Value1>
							<Value2>true</Value2>
							<WriteLine Id="35" Param0="strResult" Level="Verbose">DEBUG | Result : '{0}'.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>strResult</Value1>
							<Value2>EmptyString</Value2>
							<ReturnSuccess Id="36">Test succeed</ReturnSuccess>
						</Equal>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>strResult</Value1>
							<Value2>EmptyString</Value2>
							<RaiseError Id="37"></RaiseError>
						</NotEqual>
					</Compare>
				</TestStep>
			</TestCase>
			<TestCase Name="offline | 0x8001 (Pulse Config)" CaseId="3">
				<Description>
					<PreCondition>- The device profile is 5003
- The module profile is 2011
- The submodule profile is 0</PreCondition>
					<Action>- Iterate over all offline defined modules/channels and if the PreCondition matches the following operations are done:
- Get the offline description of object 0x8001(+module specific offset) 'Pulse Config' and all entries
 Check:
    (Name)
    BitSize
    DataType
    Rx / Tx mappable
    Default Data
    MinData
    Flags       </Action>
					<PostCondition>Error if
- mandatory object / entry is not defined
- an optional object exists and the entries are invalid
- Object / entry description does not match with the specification</PostCondition>
					<ProposalForSolution>- Define the missing objects
- correct object / entry description</ProposalForSolution>
					<References>
						<Reference Specification="ETG.5003.2011"></Reference>
					</References>
					<Mandatory>true</Mandatory>
				</Description>
				<TestStep Name="InitResult">
					<SetVariable Target="strResult">EmptyString</SetVariable>
				</TestStep>
				<TestStep Name="CheckIfOdAvailable">
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Mailbox</Value1>
							<Value2>false</Value2>
							<SkipCase Id="1">DuT does not support mailbox.</SkipCase>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Mailbox.CoE</Value1>
							<Value2>false</Value2>
							<SkipCase Id="2">DuT does not support CoE.</SkipCase>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep>
					<GetObjectDictionary Target="odDeviceObjectdictionary">
						<DictionaryType>Offline</DictionaryType>
					</GetObjectDictionary>
					<SkipOnFailure Id="3">No offline object dictionary defined.</SkipOnFailure>
				</TestStep>
				<TestStep>
					<GetObjectList Count="u32Tmp" Target="odDeviceObjectdictionaryList" SourceDict="odDeviceObjectdictionary"></GetObjectList>
					<Compare>
						<Equal>
							<Value1>u32Tmp</Value1>
							<Value2>0</Value2>
							<SkipCase Id="4">No offline object dictionary defined.</SkipCase>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="InitAtLeastOneProfileMatch">
					<SetVariable Target="bAtLeastOneModuleMatch">false</SetVariable>
				</TestStep>
				<TestStep Name="GetCurrentProfileList">
					<SizeOf UInt32Var="u32Tmp">arrOfflineProfiles</SizeOf>
					<Compare>
						<Equal>
							<Value1>u32Tmp</Value1>
							<Value2>0</Value2>
							<CallTestFunction Name="GetCurrentProfileList">
								<Parameter>"offline"</Parameter>
								<Parameter>"SafeOP"</Parameter>
								<OutParameter>arrOfflineProfiles</OutParameter>
							</CallTestFunction>
						</Equal>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>u32Tmp</Value1>
							<Value2>0</Value2>
							<WriteLine Id="5" Param0="arrOfflineProfiles" Level="Verbose">Use previously created profile list ({0})</WriteLine>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep>
					<SizeOf UInt32Var="u32Tmp">arrOfflineProfiles</SizeOf>
				</TestStep>
				<TestStep>
					<InitArray TargetArray="arrCurrentProfiles" Length="u32Tmp"></InitArray>
				</TestStep>
				<TestStep>
					<CopyArray>
						<SourceArray>arrOfflineProfiles</SourceArray>
						<DestinationArray>arrCurrentProfiles</DestinationArray>
						<Length>u32Tmp</Length>
					</CopyArray>
				</TestStep>
				<TestStep Name="InitProfileLoopCounter">
					<SetVariable Target="u32ProfileCounter">0</SetVariable>
				</TestStep>
				<TestStep Name="GetProfileArrayLength">
					<SizeOf UInt32Var="u32CurrentProfilesLength">arrCurrentProfiles</SizeOf>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="6" Param0="u32CurrentProfilesLength" Level="Verbose">'{0}' Profile(s) defined offline.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>u32CurrentProfilesLength</Value1>
							<Value2>0</Value2>
							<SkipCase Id="7">Skip case | no profile defined.</SkipCase>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="ProfileLoopStart">
					<GetArrayItem SourceArray="arrCurrentProfiles" Target="strTmpString" Index="u32ProfileCounter"></GetArrayItem>
				</TestStep>
				<TestStep Name="CheckProfileInformationString">
					<Compare>
						<Equal>
							<Value1>strTmpString</Value1>
							<Value2>null</Value2>
							<RaiseError Id="8" Param0="u32ProfileCounter">Profile Info element [{0}] is null.</RaiseError>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>strTmpString</Value1>
							<Value2>EmptyString</Value2>
							<RaiseError Id="9" Param0="u32ProfileCounter">Profile Info element [{0}] is an empty string.</RaiseError>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="GetDeviceProfile">
					<CallTestFunction Name="GetDeviceProfile">
						<Parameter>strTmpString</Parameter>
						<OutParameter>uint16CurDeviceProfile</OutParameter>
					</CallTestFunction>
				</TestStep>
				<TestStep Name="GetModuleProfile">
					<CallTestFunction Name="GetModuleProfile">
						<Parameter>strTmpString</Parameter>
						<OutParameter>uint16CurModuleProfile</OutParameter>
					</CallTestFunction>
				</TestStep>
				<TestStep Name="GetSubModuleProfile">
					<CallTestFunction Name="GetSubModuleProfile">
						<Parameter>strTmpString</Parameter>
						<OutParameter>uint16CurSubModuleProfile</OutParameter>
					</CallTestFunction>
				</TestStep>
				<TestStep Name="DumpProfileInfo">
					<Description Id="10" Param0="uint16CurDeviceProfile" Param1="uint16CurModuleProfile" Param2="uint16CurSubModuleProfile" Param3="u32ProfileCounter" Level="Output">Module[{3}] : DeviceProfile '{0}' ; ModuleProfile '{1}' ; SubModuleProfile '{2}'</Description>
					<Compare>
						<Equal>
							<Value1>bIgnoreProfileID</Value1>
							<Value2>true</Value2>
							<GotoStep>IndicateThatAtleastOneModuleMatch</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CompareDeviceProfile">
					<Compare>
						<NotEqual>
							<Value1>uint16CurDeviceProfile</Value1>
							<Value2>5003</Value2>
							<WriteLine Id="11" Param0="uint16CurDeviceProfile" Level="Output">Skip Profile  (Test Device Profile '5003' != Cur Device Profile '{0}')</WriteLine>
						</NotEqual>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>uint16CurDeviceProfile</Value1>
							<Value2>5003</Value2>
							<GotoStep>ProfileLoopEnd</GotoStep>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep Name="CompareModuleProfile">
					<Compare>
						<NotEqual>
							<Value1>uint16CurModuleProfile</Value1>
							<Value2>2011</Value2>
							<WriteLine Id="12" Param0="uint16CurModuleProfile" Level="Output">Skip Profile  (Test Module Profile '2011' != Cur Module Profile '{0}')</WriteLine>
						</NotEqual>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>uint16CurModuleProfile</Value1>
							<Value2>2011</Value2>
							<GotoStep>ProfileLoopEnd</GotoStep>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep Name="CompareSubModuleProfile">
					<Compare>
						<NotEqual>
							<Value1>uint16CurSubModuleProfile</Value1>
							<Value2>0</Value2>
							<WriteLine Id="13" Param0="uint16CurSubModuleProfile" Level="Output">Skip Profile  (Test SubModule Profile '0' != Cur SubModule Profile '{0}')</WriteLine>
						</NotEqual>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>uint16CurSubModuleProfile</Value1>
							<Value2>0</Value2>
							<GotoStep>ProfileLoopEnd</GotoStep>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep Name="IndicateThatAtleastOneModuleMatch">
					<SetVariable Target="bAtLeastOneModuleMatch">true</SetVariable>
				</TestStep>
				<TestStep Name="GetObjectIndexInclOffset">
					<SetVariable Target="u16ObjectIndexInclOffset">#x8001 + (u32ProfileCounter * #x10)</SetVariable>
					<WriteLine Id="14" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : ObjectIndex '0x{0:X}'</WriteLine>
				</TestStep>
				<TestStep Name="LoadDeviceObjectDictionary">
					<Description Id="15" Level="Verbose">Load 'offline' object dictionary for testing.</Description>
					<GetObjectDictionary Target="odDeviceObjectdictionary">
						<DictionaryType>Offline</DictionaryType>
					</GetObjectDictionary>
					<RaiseErrorOnFailure Id="16">VerifyObject : failed to load offline object dictionary.</RaiseErrorOnFailure>
				</TestStep>
				<TestStep Name="SetObjectRequiredLevel">
					<SetVariable Target="bObjectOrEntryRequiredLevel">1</SetVariable>
					<WriteLine Id="17" Param0="u16ObjectIndexInclOffset" Level="Verbose">0x{0:X4} 'Pulse Config' may be available</WriteLine>
				</TestStep>
				<TestStep Name="CheckIfObjectExists">
					<GetObjectDescription SourceDictionary="odDeviceObjectdictionary" Index="u16ObjectIndexInclOffset" SubIndex="-1"></GetObjectDescription>
					<GotoOnSuccess>CallCheckObjectDescription</GotoOnSuccess>
				</TestStep>
				<TestStep Name="HandleNotExistingObject">
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>2</Value2>
							<WriteLine Id="18" Param0="u16ObjectIndexInclOffset" Level="Warning">The object 0x{0:X4} 'Pulse Config' does not exists.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>1</Value2>
							<WriteLine Id="19" Param0="u16ObjectIndexInclOffset" Level="Output">The object 0x{0:X4} 'Pulse Config' does not exists.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>ProfileLoopEnd</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CallCheckObjectDescription">
					<Description Id="20" Param0="u16ObjectIndexInclOffset" Level="Output">Verify the object description 0x{0:X4} 'Pulse Config'.</Description>
					<CallTestFunction Name="CheckObjectDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"offline"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>"Pulse Config"</Parameter>
						<Parameter>null</Parameter>
						<Parameter>9</Parameter>
						<Parameter>-1</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<GotoStep>ProfileLoopEnd</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="InitEntryBittOffset">
					<SetVariable Target="i32CurrentBitOffset">0</SetVariable>
				</TestStep>
				<TestStep Name="StartSi0">
					<Description Id="21" Level="Output">Start validate SubIndex0</Description>
					<WriteLine Id="22" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : Subindex '0x{0:X}.0'</WriteLine>
				</TestStep>
				<TestStep Name="CallSi0CheckEntryDescription">
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"offline"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>0</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>null</Parameter>
						<Parameter>5</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>null</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>null</Parameter>
						<Parameter>null</Parameter>
						<Parameter>null</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>8</Parameter>
						<Parameter>i32CurrentBitOffset</Parameter>
						<Parameter>true</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="EndSi0">
					<SetVariable Target="i32CurrentBitOffset">16</SetVariable>
				</TestStep>
				<TestStep Name="StartSi1">
					<Description Id="23" Level="Output">Start validate SubIndex1</Description>
					<WriteLine Id="24" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : Subindex '0x{0:X}.1'</WriteLine>
				</TestStep>
				<TestStep Name="SetSi1RequiredLevel">
					<SetVariable Target="bObjectOrEntryRequiredLevel">1</SetVariable>
					<WriteLine Id="25" Param0="u16ObjectIndexInclOffset" Level="Verbose">0x{0:X4}.1 'Pulse Mode' may be available</WriteLine>
				</TestStep>
				<TestStep Name="CheckIfSi1Exists">
					<GetObjectDescription SourceDictionary="odDeviceObjectdictionary" Index="u16ObjectIndexInclOffset" SubIndex="1">
						<Type>u16DataType</Type>
					</GetObjectDescription>
					<GotoOnFailure>HandleNotExistingSi1</GotoOnFailure>
				</TestStep>
				<TestStep>
					<Compare>
						<NotEqual>
							<Value1>u16DataType</Value1>
							<Value2>0</Value2>
							<GotoStep>CallSi1CheckEntryDescription</GotoStep>
						</NotEqual>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="26" Param0="u16ObjectIndexInclOffset" Level="Verbose">The entry 0x{0:X4}.1 is defined as a padding entry.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>EndSi1</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="HandleNotExistingSi1">
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="27" Param0="u16ObjectIndexInclOffset" Level="Output">The entry 0x{0:X4}.1 does not exists.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>EndSi1</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CallSi1CheckEntryDescription">
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"offline"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>1</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>"Pulse Mode"</Parameter>
						<Parameter>7</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>null</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>32</Parameter>
						<Parameter>i32CurrentBitOffset</Parameter>
						<Parameter>true</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="EndSi1">
					<SetVariable Target="i32CurrentBitOffset">-1</SetVariable>
				</TestStep>
				<TestStep Name="StartSi2">
					<Description Id="28" Level="Output">Start validate SubIndex2</Description>
					<WriteLine Id="29" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : Subindex '0x{0:X}.2'</WriteLine>
				</TestStep>
				<TestStep Name="SetSi2RequiredLevel">
					<SetVariable Target="bObjectOrEntryRequiredLevel">1</SetVariable>
					<WriteLine Id="30" Param0="u16ObjectIndexInclOffset" Level="Verbose">0x{0:X4}.2 'Pulse Delay' may be available</WriteLine>
				</TestStep>
				<TestStep Name="CheckIfSi2Exists">
					<GetObjectDescription SourceDictionary="odDeviceObjectdictionary" Index="u16ObjectIndexInclOffset" SubIndex="2">
						<Type>u16DataType</Type>
					</GetObjectDescription>
					<GotoOnFailure>HandleNotExistingSi2</GotoOnFailure>
				</TestStep>
				<TestStep>
					<Compare>
						<NotEqual>
							<Value1>u16DataType</Value1>
							<Value2>0</Value2>
							<GotoStep>CallSi2CheckEntryDescription</GotoStep>
						</NotEqual>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="31" Param0="u16ObjectIndexInclOffset" Level="Verbose">The entry 0x{0:X4}.2 is defined as a padding entry.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>EndSi2</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="HandleNotExistingSi2">
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="32" Param0="u16ObjectIndexInclOffset" Level="Output">The entry 0x{0:X4}.2 does not exists.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>EndSi2</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CallSi2CheckEntryDescription">
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"offline"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>2</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>"Pulse Delay"</Parameter>
						<Parameter>7</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>null</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>32</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>true</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="EndSi2"></TestStep>
				<TestStep Name="StartSi3">
					<Description Id="33" Level="Output">Start validate SubIndex3</Description>
					<WriteLine Id="34" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : Subindex '0x{0:X}.3'</WriteLine>
				</TestStep>
				<TestStep Name="SetSi3RequiredLevel">
					<SetVariable Target="bObjectOrEntryRequiredLevel">1</SetVariable>
					<WriteLine Id="35" Param0="u16ObjectIndexInclOffset" Level="Verbose">0x{0:X4}.3 'Pulse Duration' may be available</WriteLine>
				</TestStep>
				<TestStep Name="CheckIfSi3Exists">
					<GetObjectDescription SourceDictionary="odDeviceObjectdictionary" Index="u16ObjectIndexInclOffset" SubIndex="3">
						<Type>u16DataType</Type>
					</GetObjectDescription>
					<GotoOnFailure>HandleNotExistingSi3</GotoOnFailure>
				</TestStep>
				<TestStep>
					<Compare>
						<NotEqual>
							<Value1>u16DataType</Value1>
							<Value2>0</Value2>
							<GotoStep>CallSi3CheckEntryDescription</GotoStep>
						</NotEqual>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="36" Param0="u16ObjectIndexInclOffset" Level="Verbose">The entry 0x{0:X4}.3 is defined as a padding entry.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>EndSi3</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="HandleNotExistingSi3">
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="37" Param0="u16ObjectIndexInclOffset" Level="Output">The entry 0x{0:X4}.3 does not exists.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>EndSi3</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CallSi3CheckEntryDescription">
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"offline"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>3</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>"Pulse Duration"</Parameter>
						<Parameter>7</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>null</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>32</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>true</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="EndSi3"></TestStep>
				<TestStep Name="StartSi4">
					<Description Id="38" Level="Output">Start validate SubIndex4</Description>
					<WriteLine Id="39" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : Subindex '0x{0:X}.4'</WriteLine>
				</TestStep>
				<TestStep Name="SetSi4RequiredLevel">
					<SetVariable Target="bObjectOrEntryRequiredLevel">1</SetVariable>
					<WriteLine Id="40" Param0="u16ObjectIndexInclOffset" Level="Verbose">0x{0:X4}.4 'Pulse Pause Mode' may be available</WriteLine>
				</TestStep>
				<TestStep Name="CheckIfSi4Exists">
					<GetObjectDescription SourceDictionary="odDeviceObjectdictionary" Index="u16ObjectIndexInclOffset" SubIndex="4">
						<Type>u16DataType</Type>
					</GetObjectDescription>
					<GotoOnFailure>HandleNotExistingSi4</GotoOnFailure>
				</TestStep>
				<TestStep>
					<Compare>
						<NotEqual>
							<Value1>u16DataType</Value1>
							<Value2>0</Value2>
							<GotoStep>CallSi4CheckEntryDescription</GotoStep>
						</NotEqual>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="41" Param0="u16ObjectIndexInclOffset" Level="Verbose">The entry 0x{0:X4}.4 is defined as a padding entry.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>EndSi4</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="HandleNotExistingSi4">
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="42" Param0="u16ObjectIndexInclOffset" Level="Output">The entry 0x{0:X4}.4 does not exists.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>EndSi4</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CallSi4CheckEntryDescription">
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"offline"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>4</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>"Pulse Pause Mode"</Parameter>
						<Parameter>5</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>null</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>00</Parameter>
						<Parameter>01</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>8</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>true</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="EndSi4"></TestStep>
				<TestStep Name="StartSi5">
					<Description Id="43" Level="Output">Start validate SubIndex5</Description>
					<WriteLine Id="44" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : Subindex '0x{0:X}.5'</WriteLine>
				</TestStep>
				<TestStep Name="SetSi5RequiredLevel">
					<SetVariable Target="bObjectOrEntryRequiredLevel">1</SetVariable>
					<WriteLine Id="45" Param0="u16ObjectIndexInclOffset" Level="Verbose">0x{0:X4}.5 'Pulse Slave Rising Edge Delay' may be available</WriteLine>
				</TestStep>
				<TestStep Name="CheckIfSi5Exists">
					<GetObjectDescription SourceDictionary="odDeviceObjectdictionary" Index="u16ObjectIndexInclOffset" SubIndex="5">
						<Type>u16DataType</Type>
					</GetObjectDescription>
					<GotoOnFailure>HandleNotExistingSi5</GotoOnFailure>
				</TestStep>
				<TestStep>
					<Compare>
						<NotEqual>
							<Value1>u16DataType</Value1>
							<Value2>0</Value2>
							<GotoStep>CallSi5CheckEntryDescription</GotoStep>
						</NotEqual>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="46" Param0="u16ObjectIndexInclOffset" Level="Verbose">The entry 0x{0:X4}.5 is defined as a padding entry.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>EndSi5</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="HandleNotExistingSi5">
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="47" Param0="u16ObjectIndexInclOffset" Level="Output">The entry 0x{0:X4}.5 does not exists.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>EndSi5</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CallSi5CheckEntryDescription">
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"offline"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>5</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>"Pulse Slave Rising Edge Delay"</Parameter>
						<Parameter>7</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>null</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>32</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>true</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="EndSi5"></TestStep>
				<TestStep Name="CheckReservedEntryRange_6_to_255">
					<Description Id="48" Level="Output">Start check reserved entry range 6 to 255</Description>
					<CallTestFunction Name="CheckReservedEntryRange">
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>6</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>odDeviceObjectdictionary</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="ProfileLoopEnd">
					<Compare>
						<Equal>
							<Value1>bAtLeastOneModuleMatch</Value1>
							<Value2>false</Value2>
							<GotoStep>HandleAbortTestCaseOnFirstError</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="HandleAbortTestCaseOnFirstError">
					<Compare>
						<Equal>
							<Value1>bAbortTestCaseOnFirstError</Value1>
							<Value2>false</Value2>
							<GotoStep>ProfileLoopIncrement</GotoStep>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>strResult</Value1>
							<Value2>EmptyString</Value2>
							<GotoStep>ProfileLoopIncrement</GotoStep>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="49" Level="Output">Object verification for all following modules abort because an error was already detected for the current module.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>END</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="ProfileLoopIncrement">
					<SetVariable Target="u32ProfileCounter">u32ProfileCounter + 1</SetVariable>
					<Compare>
						<Greater>
							<Value1>u32CurrentProfilesLength</Value1>
							<Value2>u32ProfileCounter</Value2>
							<GotoStep>ProfileLoopStart</GotoStep>
						</Greater>
					</Compare>
				</TestStep>
				<TestStep Name="END">
					<Compare>
						<NotEqual>
							<Value1>bAtLeastOneModuleMatch</Value1>
							<Value2>true</Value2>
							<SkipCase Id="50">SKIP TEST(no module/channel supports the current profile)</SkipCase>
						</NotEqual>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bDEBUG</Value1>
							<Value2>true</Value2>
							<WriteLine Id="51" Param0="strResult" Level="Verbose">DEBUG | Result : '{0}'.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>strResult</Value1>
							<Value2>EmptyString</Value2>
							<ReturnSuccess Id="52">Test succeed</ReturnSuccess>
						</Equal>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>strResult</Value1>
							<Value2>EmptyString</Value2>
							<RaiseError Id="53"></RaiseError>
						</NotEqual>
					</Compare>
				</TestStep>
			</TestCase>
			<TestCase Name="online | 0x8001 (Pulse Config)" CaseId="4">
				<Description>
					<PreCondition>- The device profile is 5003
- The module profile is 2011
- The submodule profile is 0</PreCondition>
					<Action>- Iterate over all online defined modules/channels and if the PreCondition matches the following operations are done:
- Get the online description of object 0x8001(+module specific offset) 'Pulse Config' and all entries
 Check:
    (Name)
    BitSize
    DataType
    Rx / Tx mappable
    Default Data
    MinData
    Flags       </Action>
					<PostCondition>Error if
- mandatory object / entry is not defined
- an optional object exists and the entries are invalid
- Object / entry description does not match with the specification</PostCondition>
					<ProposalForSolution>- Define the missing objects
- correct object / entry description</ProposalForSolution>
					<References>
						<Reference Specification="ETG.5003.2011"></Reference>
					</References>
					<Mandatory>true</Mandatory>
				</Description>
				<TestStep Name="InitResult">
					<SetVariable Target="strResult">EmptyString</SetVariable>
				</TestStep>
				<TestStep Name="CheckIfOdAvailable">
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Mailbox</Value1>
							<Value2>false</Value2>
							<SkipCase Id="1">DuT does not support mailbox.</SkipCase>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Mailbox.CoE</Value1>
							<Value2>false</Value2>
							<SkipCase Id="2">DuT does not support CoE.</SkipCase>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Mailbox.CoE.SdoInfo</Value1>
							<Value2>false</Value2>
							<SkipCase Id="3">DuT does not support SDO Info.</SkipCase>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="InitAtLeastOneProfileMatch">
					<SetVariable Target="bAtLeastOneModuleMatch">false</SetVariable>
				</TestStep>
				<TestStep Name="GetCurrentProfileList">
					<SizeOf UInt32Var="u32Tmp">arrOnlineProfiles</SizeOf>
					<Compare>
						<Equal>
							<Value1>u32Tmp</Value1>
							<Value2>0</Value2>
							<CallTestFunction Name="GetCurrentProfileList">
								<Parameter>"online"</Parameter>
								<Parameter>"SafeOP"</Parameter>
								<OutParameter>arrOnlineProfiles</OutParameter>
							</CallTestFunction>
						</Equal>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>u32Tmp</Value1>
							<Value2>0</Value2>
							<WriteLine Id="4" Param0="arrOnlineProfiles" Level="Verbose">Use previously created profile list ({0})</WriteLine>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep>
					<SizeOf UInt32Var="u32Tmp">arrOnlineProfiles</SizeOf>
				</TestStep>
				<TestStep>
					<InitArray TargetArray="arrCurrentProfiles" Length="u32Tmp"></InitArray>
				</TestStep>
				<TestStep>
					<CopyArray>
						<SourceArray>arrOnlineProfiles</SourceArray>
						<DestinationArray>arrCurrentProfiles</DestinationArray>
						<Length>u32Tmp</Length>
					</CopyArray>
				</TestStep>
				<TestStep Name="InitProfileLoopCounter">
					<SetVariable Target="u32ProfileCounter">0</SetVariable>
				</TestStep>
				<TestStep Name="GetProfileArrayLength">
					<SizeOf UInt32Var="u32CurrentProfilesLength">arrCurrentProfiles</SizeOf>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="5" Param0="u32CurrentProfilesLength" Level="Verbose">'{0}' Profile(s) defined online.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>u32CurrentProfilesLength</Value1>
							<Value2>0</Value2>
							<SkipCase Id="6">Skip case | no profile defined.</SkipCase>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="ProfileLoopStart">
					<GetArrayItem SourceArray="arrCurrentProfiles" Target="strTmpString" Index="u32ProfileCounter"></GetArrayItem>
				</TestStep>
				<TestStep Name="CheckProfileInformationString">
					<Compare>
						<Equal>
							<Value1>strTmpString</Value1>
							<Value2>null</Value2>
							<RaiseError Id="7" Param0="u32ProfileCounter">Profile Info element [{0}] is null.</RaiseError>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>strTmpString</Value1>
							<Value2>EmptyString</Value2>
							<RaiseError Id="8" Param0="u32ProfileCounter">Profile Info element [{0}] is an empty string.</RaiseError>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="GetDeviceProfile">
					<CallTestFunction Name="GetDeviceProfile">
						<Parameter>strTmpString</Parameter>
						<OutParameter>uint16CurDeviceProfile</OutParameter>
					</CallTestFunction>
				</TestStep>
				<TestStep Name="GetModuleProfile">
					<CallTestFunction Name="GetModuleProfile">
						<Parameter>strTmpString</Parameter>
						<OutParameter>uint16CurModuleProfile</OutParameter>
					</CallTestFunction>
				</TestStep>
				<TestStep Name="GetSubModuleProfile">
					<CallTestFunction Name="GetSubModuleProfile">
						<Parameter>strTmpString</Parameter>
						<OutParameter>uint16CurSubModuleProfile</OutParameter>
					</CallTestFunction>
				</TestStep>
				<TestStep Name="DumpProfileInfo">
					<Description Id="9" Param0="uint16CurDeviceProfile" Param1="uint16CurModuleProfile" Param2="uint16CurSubModuleProfile" Param3="u32ProfileCounter" Level="Output">Module[{3}] : DeviceProfile '{0}' ; ModuleProfile '{1}' ; SubModuleProfile '{2}'</Description>
					<Compare>
						<Equal>
							<Value1>bIgnoreProfileID</Value1>
							<Value2>true</Value2>
							<GotoStep>IndicateThatAtleastOneModuleMatch</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CompareDeviceProfile">
					<Compare>
						<NotEqual>
							<Value1>uint16CurDeviceProfile</Value1>
							<Value2>5003</Value2>
							<WriteLine Id="10" Param0="uint16CurDeviceProfile" Level="Output">Skip Profile  (Test Device Profile '5003' != Cur Device Profile '{0}')</WriteLine>
						</NotEqual>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>uint16CurDeviceProfile</Value1>
							<Value2>5003</Value2>
							<GotoStep>ProfileLoopEnd</GotoStep>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep Name="CompareModuleProfile">
					<Compare>
						<NotEqual>
							<Value1>uint16CurModuleProfile</Value1>
							<Value2>2011</Value2>
							<WriteLine Id="11" Param0="uint16CurModuleProfile" Level="Output">Skip Profile  (Test Module Profile '2011' != Cur Module Profile '{0}')</WriteLine>
						</NotEqual>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>uint16CurModuleProfile</Value1>
							<Value2>2011</Value2>
							<GotoStep>ProfileLoopEnd</GotoStep>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep Name="CompareSubModuleProfile">
					<Compare>
						<NotEqual>
							<Value1>uint16CurSubModuleProfile</Value1>
							<Value2>0</Value2>
							<WriteLine Id="12" Param0="uint16CurSubModuleProfile" Level="Output">Skip Profile  (Test SubModule Profile '0' != Cur SubModule Profile '{0}')</WriteLine>
						</NotEqual>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>uint16CurSubModuleProfile</Value1>
							<Value2>0</Value2>
							<GotoStep>ProfileLoopEnd</GotoStep>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep Name="IndicateThatAtleastOneModuleMatch">
					<SetVariable Target="bAtLeastOneModuleMatch">true</SetVariable>
				</TestStep>
				<TestStep Name="GetObjectIndexInclOffset">
					<SetVariable Target="u16ObjectIndexInclOffset">#x8001 + (u32ProfileCounter * #x10)</SetVariable>
					<WriteLine Id="13" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : ObjectIndex '0x{0:X}'</WriteLine>
				</TestStep>
				<TestStep Name="LoadDeviceObjectDictionary">
					<Description Id="14" Level="Verbose">Load 'online' object dictionary for testing.</Description>
					<GetObjectDictionary Target="odDeviceObjectdictionary">
						<DictionaryType>Online</DictionaryType>
					</GetObjectDictionary>
					<RaiseErrorOnFailure Id="15">VerifyObject : failed to load online object dictionary.</RaiseErrorOnFailure>
				</TestStep>
				<TestStep Name="SetObjectRequiredLevel">
					<SetVariable Target="bObjectOrEntryRequiredLevel">1</SetVariable>
					<WriteLine Id="16" Param0="u16ObjectIndexInclOffset" Level="Verbose">0x{0:X4} 'Pulse Config' may be available</WriteLine>
				</TestStep>
				<TestStep Name="CheckIfObjectExists">
					<GetObjectDescription SourceDictionary="odDeviceObjectdictionary" Index="u16ObjectIndexInclOffset" SubIndex="-1"></GetObjectDescription>
					<GotoOnSuccess>CallCheckObjectDescription</GotoOnSuccess>
				</TestStep>
				<TestStep Name="HandleNotExistingObject">
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>2</Value2>
							<WriteLine Id="17" Param0="u16ObjectIndexInclOffset" Level="Warning">The object 0x{0:X4} 'Pulse Config' does not exists.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>1</Value2>
							<WriteLine Id="18" Param0="u16ObjectIndexInclOffset" Level="Output">The object 0x{0:X4} 'Pulse Config' does not exists.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>ProfileLoopEnd</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CallCheckObjectDescription">
					<Description Id="19" Param0="u16ObjectIndexInclOffset" Level="Output">Verify the object description 0x{0:X4} 'Pulse Config'.</Description>
					<CallTestFunction Name="CheckObjectDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"online"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>"Pulse Config"</Parameter>
						<Parameter>null</Parameter>
						<Parameter>9</Parameter>
						<Parameter>-1</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<GotoStep>ProfileLoopEnd</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="InitEntryBittOffset">
					<SetVariable Target="i32CurrentBitOffset">0</SetVariable>
				</TestStep>
				<TestStep Name="StartSi0">
					<Description Id="20" Level="Output">Start validate SubIndex0</Description>
					<WriteLine Id="21" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : Subindex '0x{0:X}.0'</WriteLine>
				</TestStep>
				<TestStep Name="CallSi0CheckEntryDescription">
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"online"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>0</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>null</Parameter>
						<Parameter>5</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>null</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>null</Parameter>
						<Parameter>null</Parameter>
						<Parameter>null</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>8</Parameter>
						<Parameter>i32CurrentBitOffset</Parameter>
						<Parameter>true</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="EndSi0">
					<SetVariable Target="i32CurrentBitOffset">16</SetVariable>
				</TestStep>
				<TestStep Name="StartSi1">
					<Description Id="22" Level="Output">Start validate SubIndex1</Description>
					<WriteLine Id="23" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : Subindex '0x{0:X}.1'</WriteLine>
				</TestStep>
				<TestStep Name="SetSi1RequiredLevel">
					<SetVariable Target="bObjectOrEntryRequiredLevel">1</SetVariable>
					<WriteLine Id="24" Param0="u16ObjectIndexInclOffset" Level="Verbose">0x{0:X4}.1 'Pulse Mode' may be available</WriteLine>
				</TestStep>
				<TestStep Name="CheckIfSi1Exists">
					<GetObjectDescription SourceDictionary="odDeviceObjectdictionary" Index="u16ObjectIndexInclOffset" SubIndex="1">
						<Type>u16DataType</Type>
					</GetObjectDescription>
					<GotoOnFailure>HandleNotExistingSi1</GotoOnFailure>
				</TestStep>
				<TestStep>
					<Compare>
						<NotEqual>
							<Value1>u16DataType</Value1>
							<Value2>0</Value2>
							<GotoStep>CallSi1CheckEntryDescription</GotoStep>
						</NotEqual>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="25" Param0="u16ObjectIndexInclOffset" Level="Verbose">The entry 0x{0:X4}.1 is defined as a padding entry.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>EndSi1</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="HandleNotExistingSi1">
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="26" Param0="u16ObjectIndexInclOffset" Level="Output">The entry 0x{0:X4}.1 does not exists.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>EndSi1</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CallSi1CheckEntryDescription">
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"online"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>1</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>"Pulse Mode"</Parameter>
						<Parameter>7</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>null</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>32</Parameter>
						<Parameter>i32CurrentBitOffset</Parameter>
						<Parameter>true</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="EndSi1">
					<SetVariable Target="i32CurrentBitOffset">-1</SetVariable>
				</TestStep>
				<TestStep Name="StartSi2">
					<Description Id="27" Level="Output">Start validate SubIndex2</Description>
					<WriteLine Id="28" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : Subindex '0x{0:X}.2'</WriteLine>
				</TestStep>
				<TestStep Name="SetSi2RequiredLevel">
					<SetVariable Target="bObjectOrEntryRequiredLevel">1</SetVariable>
					<WriteLine Id="29" Param0="u16ObjectIndexInclOffset" Level="Verbose">0x{0:X4}.2 'Pulse Delay' may be available</WriteLine>
				</TestStep>
				<TestStep Name="CheckIfSi2Exists">
					<GetObjectDescription SourceDictionary="odDeviceObjectdictionary" Index="u16ObjectIndexInclOffset" SubIndex="2">
						<Type>u16DataType</Type>
					</GetObjectDescription>
					<GotoOnFailure>HandleNotExistingSi2</GotoOnFailure>
				</TestStep>
				<TestStep>
					<Compare>
						<NotEqual>
							<Value1>u16DataType</Value1>
							<Value2>0</Value2>
							<GotoStep>CallSi2CheckEntryDescription</GotoStep>
						</NotEqual>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="30" Param0="u16ObjectIndexInclOffset" Level="Verbose">The entry 0x{0:X4}.2 is defined as a padding entry.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>EndSi2</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="HandleNotExistingSi2">
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="31" Param0="u16ObjectIndexInclOffset" Level="Output">The entry 0x{0:X4}.2 does not exists.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>EndSi2</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CallSi2CheckEntryDescription">
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"online"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>2</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>"Pulse Delay"</Parameter>
						<Parameter>7</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>null</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>32</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>true</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="EndSi2"></TestStep>
				<TestStep Name="StartSi3">
					<Description Id="32" Level="Output">Start validate SubIndex3</Description>
					<WriteLine Id="33" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : Subindex '0x{0:X}.3'</WriteLine>
				</TestStep>
				<TestStep Name="SetSi3RequiredLevel">
					<SetVariable Target="bObjectOrEntryRequiredLevel">1</SetVariable>
					<WriteLine Id="34" Param0="u16ObjectIndexInclOffset" Level="Verbose">0x{0:X4}.3 'Pulse Duration' may be available</WriteLine>
				</TestStep>
				<TestStep Name="CheckIfSi3Exists">
					<GetObjectDescription SourceDictionary="odDeviceObjectdictionary" Index="u16ObjectIndexInclOffset" SubIndex="3">
						<Type>u16DataType</Type>
					</GetObjectDescription>
					<GotoOnFailure>HandleNotExistingSi3</GotoOnFailure>
				</TestStep>
				<TestStep>
					<Compare>
						<NotEqual>
							<Value1>u16DataType</Value1>
							<Value2>0</Value2>
							<GotoStep>CallSi3CheckEntryDescription</GotoStep>
						</NotEqual>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="35" Param0="u16ObjectIndexInclOffset" Level="Verbose">The entry 0x{0:X4}.3 is defined as a padding entry.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>EndSi3</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="HandleNotExistingSi3">
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="36" Param0="u16ObjectIndexInclOffset" Level="Output">The entry 0x{0:X4}.3 does not exists.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>EndSi3</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CallSi3CheckEntryDescription">
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"online"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>3</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>"Pulse Duration"</Parameter>
						<Parameter>7</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>null</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>32</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>true</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="EndSi3"></TestStep>
				<TestStep Name="StartSi4">
					<Description Id="37" Level="Output">Start validate SubIndex4</Description>
					<WriteLine Id="38" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : Subindex '0x{0:X}.4'</WriteLine>
				</TestStep>
				<TestStep Name="SetSi4RequiredLevel">
					<SetVariable Target="bObjectOrEntryRequiredLevel">1</SetVariable>
					<WriteLine Id="39" Param0="u16ObjectIndexInclOffset" Level="Verbose">0x{0:X4}.4 'Pulse Pause Mode' may be available</WriteLine>
				</TestStep>
				<TestStep Name="CheckIfSi4Exists">
					<GetObjectDescription SourceDictionary="odDeviceObjectdictionary" Index="u16ObjectIndexInclOffset" SubIndex="4">
						<Type>u16DataType</Type>
					</GetObjectDescription>
					<GotoOnFailure>HandleNotExistingSi4</GotoOnFailure>
				</TestStep>
				<TestStep>
					<Compare>
						<NotEqual>
							<Value1>u16DataType</Value1>
							<Value2>0</Value2>
							<GotoStep>CallSi4CheckEntryDescription</GotoStep>
						</NotEqual>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="40" Param0="u16ObjectIndexInclOffset" Level="Verbose">The entry 0x{0:X4}.4 is defined as a padding entry.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>EndSi4</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="HandleNotExistingSi4">
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="41" Param0="u16ObjectIndexInclOffset" Level="Output">The entry 0x{0:X4}.4 does not exists.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>EndSi4</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CallSi4CheckEntryDescription">
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"online"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>4</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>"Pulse Pause Mode"</Parameter>
						<Parameter>5</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>null</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>00</Parameter>
						<Parameter>01</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>8</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>true</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="EndSi4"></TestStep>
				<TestStep Name="StartSi5">
					<Description Id="42" Level="Output">Start validate SubIndex5</Description>
					<WriteLine Id="43" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : Subindex '0x{0:X}.5'</WriteLine>
				</TestStep>
				<TestStep Name="SetSi5RequiredLevel">
					<SetVariable Target="bObjectOrEntryRequiredLevel">1</SetVariable>
					<WriteLine Id="44" Param0="u16ObjectIndexInclOffset" Level="Verbose">0x{0:X4}.5 'Pulse Slave Rising Edge Delay' may be available</WriteLine>
				</TestStep>
				<TestStep Name="CheckIfSi5Exists">
					<GetObjectDescription SourceDictionary="odDeviceObjectdictionary" Index="u16ObjectIndexInclOffset" SubIndex="5">
						<Type>u16DataType</Type>
					</GetObjectDescription>
					<GotoOnFailure>HandleNotExistingSi5</GotoOnFailure>
				</TestStep>
				<TestStep>
					<Compare>
						<NotEqual>
							<Value1>u16DataType</Value1>
							<Value2>0</Value2>
							<GotoStep>CallSi5CheckEntryDescription</GotoStep>
						</NotEqual>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="45" Param0="u16ObjectIndexInclOffset" Level="Verbose">The entry 0x{0:X4}.5 is defined as a padding entry.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>EndSi5</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="HandleNotExistingSi5">
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="46" Param0="u16ObjectIndexInclOffset" Level="Output">The entry 0x{0:X4}.5 does not exists.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>EndSi5</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CallSi5CheckEntryDescription">
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"online"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>5</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>"Pulse Slave Rising Edge Delay"</Parameter>
						<Parameter>7</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>null</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>32</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>true</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="EndSi5"></TestStep>
				<TestStep Name="CheckReservedEntryRange_6_to_255">
					<Description Id="47" Level="Output">Start check reserved entry range 6 to 255</Description>
					<CallTestFunction Name="CheckReservedEntryRange">
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>6</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>odDeviceObjectdictionary</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="ProfileLoopEnd">
					<Compare>
						<Equal>
							<Value1>bAtLeastOneModuleMatch</Value1>
							<Value2>false</Value2>
							<GotoStep>HandleAbortTestCaseOnFirstError</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="HandleAbortTestCaseOnFirstError">
					<Compare>
						<Equal>
							<Value1>bAbortTestCaseOnFirstError</Value1>
							<Value2>false</Value2>
							<GotoStep>ProfileLoopIncrement</GotoStep>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>strResult</Value1>
							<Value2>EmptyString</Value2>
							<GotoStep>ProfileLoopIncrement</GotoStep>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="48" Level="Output">Object verification for all following modules abort because an error was already detected for the current module.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>END</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="ProfileLoopIncrement">
					<SetVariable Target="u32ProfileCounter">u32ProfileCounter + 1</SetVariable>
					<Compare>
						<Greater>
							<Value1>u32CurrentProfilesLength</Value1>
							<Value2>u32ProfileCounter</Value2>
							<GotoStep>ProfileLoopStart</GotoStep>
						</Greater>
					</Compare>
				</TestStep>
				<TestStep Name="END">
					<Compare>
						<NotEqual>
							<Value1>bAtLeastOneModuleMatch</Value1>
							<Value2>true</Value2>
							<SkipCase Id="49">SKIP TEST(no module/channel supports the current profile)</SkipCase>
						</NotEqual>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bDEBUG</Value1>
							<Value2>true</Value2>
							<WriteLine Id="50" Param0="strResult" Level="Verbose">DEBUG | Result : '{0}'.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>strResult</Value1>
							<Value2>EmptyString</Value2>
							<ReturnSuccess Id="51">Test succeed</ReturnSuccess>
						</Equal>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>strResult</Value1>
							<Value2>EmptyString</Value2>
							<RaiseError Id="52"></RaiseError>
						</NotEqual>
					</Compare>
				</TestStep>
			</TestCase>
			<TestCase Name="offline | 0x8002 (Ramping Config)" CaseId="5">
				<Description>
					<PreCondition>- The device profile is 5003
- The module profile is 2011
- The submodule profile is 0</PreCondition>
					<Action>- Iterate over all offline defined modules/channels and if the PreCondition matches the following operations are done:
- Get the offline description of object 0x8002(+module specific offset) 'Ramping Config' and all entries
 Check:
    (Name)
    BitSize
    DataType
    Rx / Tx mappable
    Default Data
    MinData
    Flags       </Action>
					<PostCondition>Error if
- mandatory object / entry is not defined
- an optional object exists and the entries are invalid
- Object / entry description does not match with the specification</PostCondition>
					<ProposalForSolution>- Define the missing objects
- correct object / entry description</ProposalForSolution>
					<References>
						<Reference Specification="ETG.5003.2011"></Reference>
					</References>
					<Mandatory>true</Mandatory>
				</Description>
				<TestStep Name="InitResult">
					<SetVariable Target="strResult">EmptyString</SetVariable>
				</TestStep>
				<TestStep Name="CheckIfOdAvailable">
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Mailbox</Value1>
							<Value2>false</Value2>
							<SkipCase Id="1">DuT does not support mailbox.</SkipCase>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Mailbox.CoE</Value1>
							<Value2>false</Value2>
							<SkipCase Id="2">DuT does not support CoE.</SkipCase>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep>
					<GetObjectDictionary Target="odDeviceObjectdictionary">
						<DictionaryType>Offline</DictionaryType>
					</GetObjectDictionary>
					<SkipOnFailure Id="3">No offline object dictionary defined.</SkipOnFailure>
				</TestStep>
				<TestStep>
					<GetObjectList Count="u32Tmp" Target="odDeviceObjectdictionaryList" SourceDict="odDeviceObjectdictionary"></GetObjectList>
					<Compare>
						<Equal>
							<Value1>u32Tmp</Value1>
							<Value2>0</Value2>
							<SkipCase Id="4">No offline object dictionary defined.</SkipCase>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="InitAtLeastOneProfileMatch">
					<SetVariable Target="bAtLeastOneModuleMatch">false</SetVariable>
				</TestStep>
				<TestStep Name="GetCurrentProfileList">
					<SizeOf UInt32Var="u32Tmp">arrOfflineProfiles</SizeOf>
					<Compare>
						<Equal>
							<Value1>u32Tmp</Value1>
							<Value2>0</Value2>
							<CallTestFunction Name="GetCurrentProfileList">
								<Parameter>"offline"</Parameter>
								<Parameter>"SafeOP"</Parameter>
								<OutParameter>arrOfflineProfiles</OutParameter>
							</CallTestFunction>
						</Equal>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>u32Tmp</Value1>
							<Value2>0</Value2>
							<WriteLine Id="5" Param0="arrOfflineProfiles" Level="Verbose">Use previously created profile list ({0})</WriteLine>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep>
					<SizeOf UInt32Var="u32Tmp">arrOfflineProfiles</SizeOf>
				</TestStep>
				<TestStep>
					<InitArray TargetArray="arrCurrentProfiles" Length="u32Tmp"></InitArray>
				</TestStep>
				<TestStep>
					<CopyArray>
						<SourceArray>arrOfflineProfiles</SourceArray>
						<DestinationArray>arrCurrentProfiles</DestinationArray>
						<Length>u32Tmp</Length>
					</CopyArray>
				</TestStep>
				<TestStep Name="InitProfileLoopCounter">
					<SetVariable Target="u32ProfileCounter">0</SetVariable>
				</TestStep>
				<TestStep Name="GetProfileArrayLength">
					<SizeOf UInt32Var="u32CurrentProfilesLength">arrCurrentProfiles</SizeOf>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="6" Param0="u32CurrentProfilesLength" Level="Verbose">'{0}' Profile(s) defined offline.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>u32CurrentProfilesLength</Value1>
							<Value2>0</Value2>
							<SkipCase Id="7">Skip case | no profile defined.</SkipCase>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="ProfileLoopStart">
					<GetArrayItem SourceArray="arrCurrentProfiles" Target="strTmpString" Index="u32ProfileCounter"></GetArrayItem>
				</TestStep>
				<TestStep Name="CheckProfileInformationString">
					<Compare>
						<Equal>
							<Value1>strTmpString</Value1>
							<Value2>null</Value2>
							<RaiseError Id="8" Param0="u32ProfileCounter">Profile Info element [{0}] is null.</RaiseError>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>strTmpString</Value1>
							<Value2>EmptyString</Value2>
							<RaiseError Id="9" Param0="u32ProfileCounter">Profile Info element [{0}] is an empty string.</RaiseError>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="GetDeviceProfile">
					<CallTestFunction Name="GetDeviceProfile">
						<Parameter>strTmpString</Parameter>
						<OutParameter>uint16CurDeviceProfile</OutParameter>
					</CallTestFunction>
				</TestStep>
				<TestStep Name="GetModuleProfile">
					<CallTestFunction Name="GetModuleProfile">
						<Parameter>strTmpString</Parameter>
						<OutParameter>uint16CurModuleProfile</OutParameter>
					</CallTestFunction>
				</TestStep>
				<TestStep Name="GetSubModuleProfile">
					<CallTestFunction Name="GetSubModuleProfile">
						<Parameter>strTmpString</Parameter>
						<OutParameter>uint16CurSubModuleProfile</OutParameter>
					</CallTestFunction>
				</TestStep>
				<TestStep Name="DumpProfileInfo">
					<Description Id="10" Param0="uint16CurDeviceProfile" Param1="uint16CurModuleProfile" Param2="uint16CurSubModuleProfile" Param3="u32ProfileCounter" Level="Output">Module[{3}] : DeviceProfile '{0}' ; ModuleProfile '{1}' ; SubModuleProfile '{2}'</Description>
					<Compare>
						<Equal>
							<Value1>bIgnoreProfileID</Value1>
							<Value2>true</Value2>
							<GotoStep>IndicateThatAtleastOneModuleMatch</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CompareDeviceProfile">
					<Compare>
						<NotEqual>
							<Value1>uint16CurDeviceProfile</Value1>
							<Value2>5003</Value2>
							<WriteLine Id="11" Param0="uint16CurDeviceProfile" Level="Output">Skip Profile  (Test Device Profile '5003' != Cur Device Profile '{0}')</WriteLine>
						</NotEqual>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>uint16CurDeviceProfile</Value1>
							<Value2>5003</Value2>
							<GotoStep>ProfileLoopEnd</GotoStep>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep Name="CompareModuleProfile">
					<Compare>
						<NotEqual>
							<Value1>uint16CurModuleProfile</Value1>
							<Value2>2011</Value2>
							<WriteLine Id="12" Param0="uint16CurModuleProfile" Level="Output">Skip Profile  (Test Module Profile '2011' != Cur Module Profile '{0}')</WriteLine>
						</NotEqual>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>uint16CurModuleProfile</Value1>
							<Value2>2011</Value2>
							<GotoStep>ProfileLoopEnd</GotoStep>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep Name="CompareSubModuleProfile">
					<Compare>
						<NotEqual>
							<Value1>uint16CurSubModuleProfile</Value1>
							<Value2>0</Value2>
							<WriteLine Id="13" Param0="uint16CurSubModuleProfile" Level="Output">Skip Profile  (Test SubModule Profile '0' != Cur SubModule Profile '{0}')</WriteLine>
						</NotEqual>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>uint16CurSubModuleProfile</Value1>
							<Value2>0</Value2>
							<GotoStep>ProfileLoopEnd</GotoStep>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep Name="IndicateThatAtleastOneModuleMatch">
					<SetVariable Target="bAtLeastOneModuleMatch">true</SetVariable>
				</TestStep>
				<TestStep Name="GetObjectIndexInclOffset">
					<SetVariable Target="u16ObjectIndexInclOffset">#x8002 + (u32ProfileCounter * #x10)</SetVariable>
					<WriteLine Id="14" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : ObjectIndex '0x{0:X}'</WriteLine>
				</TestStep>
				<TestStep Name="LoadDeviceObjectDictionary">
					<Description Id="15" Level="Verbose">Load 'offline' object dictionary for testing.</Description>
					<GetObjectDictionary Target="odDeviceObjectdictionary">
						<DictionaryType>Offline</DictionaryType>
					</GetObjectDictionary>
					<RaiseErrorOnFailure Id="16">VerifyObject : failed to load offline object dictionary.</RaiseErrorOnFailure>
				</TestStep>
				<TestStep Name="SetObjectRequiredLevel">
					<SetVariable Target="bObjectOrEntryRequiredLevel">1</SetVariable>
					<WriteLine Id="17" Param0="u16ObjectIndexInclOffset" Level="Verbose">0x{0:X4} 'Ramping Config' may be available</WriteLine>
				</TestStep>
				<TestStep Name="CheckIfObjectExists">
					<GetObjectDescription SourceDictionary="odDeviceObjectdictionary" Index="u16ObjectIndexInclOffset" SubIndex="-1"></GetObjectDescription>
					<GotoOnSuccess>CallCheckObjectDescription</GotoOnSuccess>
				</TestStep>
				<TestStep Name="HandleNotExistingObject">
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>2</Value2>
							<WriteLine Id="18" Param0="u16ObjectIndexInclOffset" Level="Warning">The object 0x{0:X4} 'Ramping Config' does not exists.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>1</Value2>
							<WriteLine Id="19" Param0="u16ObjectIndexInclOffset" Level="Output">The object 0x{0:X4} 'Ramping Config' does not exists.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>ProfileLoopEnd</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CallCheckObjectDescription">
					<Description Id="20" Param0="u16ObjectIndexInclOffset" Level="Output">Verify the object description 0x{0:X4} 'Ramping Config'.</Description>
					<CallTestFunction Name="CheckObjectDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"offline"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>"Ramping Config"</Parameter>
						<Parameter>null</Parameter>
						<Parameter>9</Parameter>
						<Parameter>-1</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<GotoStep>ProfileLoopEnd</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="InitEntryBittOffset">
					<SetVariable Target="i32CurrentBitOffset">0</SetVariable>
				</TestStep>
				<TestStep Name="StartSi0">
					<Description Id="21" Level="Output">Start validate SubIndex0</Description>
					<WriteLine Id="22" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : Subindex '0x{0:X}.0'</WriteLine>
				</TestStep>
				<TestStep Name="CallSi0CheckEntryDescription">
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"offline"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>0</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>null</Parameter>
						<Parameter>5</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>null</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>null</Parameter>
						<Parameter>null</Parameter>
						<Parameter>null</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>8</Parameter>
						<Parameter>i32CurrentBitOffset</Parameter>
						<Parameter>true</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="EndSi0">
					<SetVariable Target="i32CurrentBitOffset">16</SetVariable>
				</TestStep>
				<TestStep Name="StartSi1">
					<Description Id="23" Level="Output">Start validate SubIndex1</Description>
					<WriteLine Id="24" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : Subindex '0x{0:X}.1'</WriteLine>
				</TestStep>
				<TestStep Name="SetSi1RequiredLevel">
					<SetVariable Target="bObjectOrEntryRequiredLevel">1</SetVariable>
					<WriteLine Id="25" Param0="u16ObjectIndexInclOffset" Level="Verbose">0x{0:X4}.1 'Ramping Mode' may be available</WriteLine>
				</TestStep>
				<TestStep Name="CheckIfSi1Exists">
					<GetObjectDescription SourceDictionary="odDeviceObjectdictionary" Index="u16ObjectIndexInclOffset" SubIndex="1">
						<Type>u16DataType</Type>
					</GetObjectDescription>
					<GotoOnFailure>HandleNotExistingSi1</GotoOnFailure>
				</TestStep>
				<TestStep>
					<Compare>
						<NotEqual>
							<Value1>u16DataType</Value1>
							<Value2>0</Value2>
							<GotoStep>CallSi1CheckEntryDescription</GotoStep>
						</NotEqual>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="26" Param0="u16ObjectIndexInclOffset" Level="Verbose">The entry 0x{0:X4}.1 is defined as a padding entry.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>EndSi1</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="HandleNotExistingSi1">
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="27" Param0="u16ObjectIndexInclOffset" Level="Output">The entry 0x{0:X4}.1 does not exists.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>EndSi1</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CallSi1CheckEntryDescription">
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"offline"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>1</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>"Ramping Mode"</Parameter>
						<Parameter>5</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>null</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>8</Parameter>
						<Parameter>i32CurrentBitOffset</Parameter>
						<Parameter>true</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="EndSi1">
					<SetVariable Target="i32CurrentBitOffset">-1</SetVariable>
				</TestStep>
				<TestStep Name="StartSi2">
					<Description Id="28" Level="Output">Start validate SubIndex2</Description>
					<WriteLine Id="29" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : Subindex '0x{0:X}.2'</WriteLine>
				</TestStep>
				<TestStep Name="SetSi2RequiredLevel">
					<SetVariable Target="bObjectOrEntryRequiredLevel">1</SetVariable>
					<WriteLine Id="30" Param0="u16ObjectIndexInclOffset" Level="Verbose">0x{0:X4}.2 'Ramping Unit' may be available</WriteLine>
				</TestStep>
				<TestStep Name="CheckIfSi2Exists">
					<GetObjectDescription SourceDictionary="odDeviceObjectdictionary" Index="u16ObjectIndexInclOffset" SubIndex="2">
						<Type>u16DataType</Type>
					</GetObjectDescription>
					<GotoOnFailure>HandleNotExistingSi2</GotoOnFailure>
				</TestStep>
				<TestStep>
					<Compare>
						<NotEqual>
							<Value1>u16DataType</Value1>
							<Value2>0</Value2>
							<GotoStep>CallSi2CheckEntryDescription</GotoStep>
						</NotEqual>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="31" Param0="u16ObjectIndexInclOffset" Level="Verbose">The entry 0x{0:X4}.2 is defined as a padding entry.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>EndSi2</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="HandleNotExistingSi2">
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="32" Param0="u16ObjectIndexInclOffset" Level="Output">The entry 0x{0:X4}.2 does not exists.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>EndSi2</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CallSi2CheckEntryDescription">
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"offline"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>2</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>"Ramping Unit"</Parameter>
						<Parameter>5</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>null</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>00</Parameter>
						<Parameter>01</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>8</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>true</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="EndSi2"></TestStep>
				<TestStep Name="StartSi3">
					<Description Id="33" Level="Output">Start validate SubIndex3</Description>
					<WriteLine Id="34" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : Subindex '0x{0:X}.3'</WriteLine>
				</TestStep>
				<TestStep Name="SetSi3RequiredLevel">
					<SetVariable Target="bObjectOrEntryRequiredLevel">1</SetVariable>
					<WriteLine Id="35" Param0="u16ObjectIndexInclOffset" Level="Verbose">0x{0:X4}.3 'Ramp Up Parameter Power' may be available</WriteLine>
				</TestStep>
				<TestStep Name="CheckIfSi3Exists">
					<GetObjectDescription SourceDictionary="odDeviceObjectdictionary" Index="u16ObjectIndexInclOffset" SubIndex="3">
						<Type>u16DataType</Type>
					</GetObjectDescription>
					<GotoOnFailure>HandleNotExistingSi3</GotoOnFailure>
				</TestStep>
				<TestStep>
					<Compare>
						<NotEqual>
							<Value1>u16DataType</Value1>
							<Value2>0</Value2>
							<GotoStep>CallSi3CheckEntryDescription</GotoStep>
						</NotEqual>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="36" Param0="u16ObjectIndexInclOffset" Level="Verbose">The entry 0x{0:X4}.3 is defined as a padding entry.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>EndSi3</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="HandleNotExistingSi3">
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="37" Param0="u16ObjectIndexInclOffset" Level="Output">The entry 0x{0:X4}.3 does not exists.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>EndSi3</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CallSi3CheckEntryDescription">
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"offline"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>3</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>"Ramp Up Parameter Power"</Parameter>
						<Parameter>7</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>null</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>32</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>true</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="EndSi3"></TestStep>
				<TestStep Name="StartSi4">
					<Description Id="38" Level="Output">Start validate SubIndex4</Description>
					<WriteLine Id="39" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : Subindex '0x{0:X}.4'</WriteLine>
				</TestStep>
				<TestStep Name="SetSi4RequiredLevel">
					<SetVariable Target="bObjectOrEntryRequiredLevel">1</SetVariable>
					<WriteLine Id="40" Param0="u16ObjectIndexInclOffset" Level="Verbose">0x{0:X4}.4 'Ramp Down Parameter Power' may be available</WriteLine>
				</TestStep>
				<TestStep Name="CheckIfSi4Exists">
					<GetObjectDescription SourceDictionary="odDeviceObjectdictionary" Index="u16ObjectIndexInclOffset" SubIndex="4">
						<Type>u16DataType</Type>
					</GetObjectDescription>
					<GotoOnFailure>HandleNotExistingSi4</GotoOnFailure>
				</TestStep>
				<TestStep>
					<Compare>
						<NotEqual>
							<Value1>u16DataType</Value1>
							<Value2>0</Value2>
							<GotoStep>CallSi4CheckEntryDescription</GotoStep>
						</NotEqual>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="41" Param0="u16ObjectIndexInclOffset" Level="Verbose">The entry 0x{0:X4}.4 is defined as a padding entry.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>EndSi4</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="HandleNotExistingSi4">
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="42" Param0="u16ObjectIndexInclOffset" Level="Output">The entry 0x{0:X4}.4 does not exists.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>EndSi4</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CallSi4CheckEntryDescription">
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"offline"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>4</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>"Ramp Down Parameter Power"</Parameter>
						<Parameter>7</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>null</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>32</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>true</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="EndSi4"></TestStep>
				<TestStep Name="StartSi5">
					<Description Id="43" Level="Output">Start validate SubIndex5</Description>
					<WriteLine Id="44" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : Subindex '0x{0:X}.5'</WriteLine>
				</TestStep>
				<TestStep Name="SetSi5RequiredLevel">
					<SetVariable Target="bObjectOrEntryRequiredLevel">1</SetVariable>
					<WriteLine Id="45" Param0="u16ObjectIndexInclOffset" Level="Verbose">0x{0:X4}.5 'Ramp Up Slope' may be available</WriteLine>
				</TestStep>
				<TestStep Name="CheckIfSi5Exists">
					<GetObjectDescription SourceDictionary="odDeviceObjectdictionary" Index="u16ObjectIndexInclOffset" SubIndex="5">
						<Type>u16DataType</Type>
					</GetObjectDescription>
					<GotoOnFailure>HandleNotExistingSi5</GotoOnFailure>
				</TestStep>
				<TestStep>
					<Compare>
						<NotEqual>
							<Value1>u16DataType</Value1>
							<Value2>0</Value2>
							<GotoStep>CallSi5CheckEntryDescription</GotoStep>
						</NotEqual>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="46" Param0="u16ObjectIndexInclOffset" Level="Verbose">The entry 0x{0:X4}.5 is defined as a padding entry.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>EndSi5</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="HandleNotExistingSi5">
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="47" Param0="u16ObjectIndexInclOffset" Level="Output">The entry 0x{0:X4}.5 does not exists.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>EndSi5</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CallSi5CheckEntryDescription">
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"offline"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>5</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>"Ramp Up Slope"</Parameter>
						<Parameter>8</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>null</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>32</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>true</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="EndSi5"></TestStep>
				<TestStep Name="StartSi6">
					<Description Id="48" Level="Output">Start validate SubIndex6</Description>
					<WriteLine Id="49" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : Subindex '0x{0:X}.6'</WriteLine>
				</TestStep>
				<TestStep Name="SetSi6RequiredLevel">
					<SetVariable Target="bObjectOrEntryRequiredLevel">1</SetVariable>
					<WriteLine Id="50" Param0="u16ObjectIndexInclOffset" Level="Verbose">0x{0:X4}.6 'Ramp Down Slope' may be available</WriteLine>
				</TestStep>
				<TestStep Name="CheckIfSi6Exists">
					<GetObjectDescription SourceDictionary="odDeviceObjectdictionary" Index="u16ObjectIndexInclOffset" SubIndex="6">
						<Type>u16DataType</Type>
					</GetObjectDescription>
					<GotoOnFailure>HandleNotExistingSi6</GotoOnFailure>
				</TestStep>
				<TestStep>
					<Compare>
						<NotEqual>
							<Value1>u16DataType</Value1>
							<Value2>0</Value2>
							<GotoStep>CallSi6CheckEntryDescription</GotoStep>
						</NotEqual>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="51" Param0="u16ObjectIndexInclOffset" Level="Verbose">The entry 0x{0:X4}.6 is defined as a padding entry.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>EndSi6</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="HandleNotExistingSi6">
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="52" Param0="u16ObjectIndexInclOffset" Level="Output">The entry 0x{0:X4}.6 does not exists.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>EndSi6</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CallSi6CheckEntryDescription">
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"offline"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>6</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>"Ramp Down Slope"</Parameter>
						<Parameter>8</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>null</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>32</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>true</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="EndSi6"></TestStep>
				<TestStep Name="CheckReservedEntryRange_7_to_255">
					<Description Id="53" Level="Output">Start check reserved entry range 7 to 255</Description>
					<CallTestFunction Name="CheckReservedEntryRange">
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>7</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>odDeviceObjectdictionary</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="ProfileLoopEnd">
					<Compare>
						<Equal>
							<Value1>bAtLeastOneModuleMatch</Value1>
							<Value2>false</Value2>
							<GotoStep>HandleAbortTestCaseOnFirstError</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="HandleAbortTestCaseOnFirstError">
					<Compare>
						<Equal>
							<Value1>bAbortTestCaseOnFirstError</Value1>
							<Value2>false</Value2>
							<GotoStep>ProfileLoopIncrement</GotoStep>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>strResult</Value1>
							<Value2>EmptyString</Value2>
							<GotoStep>ProfileLoopIncrement</GotoStep>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="54" Level="Output">Object verification for all following modules abort because an error was already detected for the current module.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>END</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="ProfileLoopIncrement">
					<SetVariable Target="u32ProfileCounter">u32ProfileCounter + 1</SetVariable>
					<Compare>
						<Greater>
							<Value1>u32CurrentProfilesLength</Value1>
							<Value2>u32ProfileCounter</Value2>
							<GotoStep>ProfileLoopStart</GotoStep>
						</Greater>
					</Compare>
				</TestStep>
				<TestStep Name="END">
					<Compare>
						<NotEqual>
							<Value1>bAtLeastOneModuleMatch</Value1>
							<Value2>true</Value2>
							<SkipCase Id="55">SKIP TEST(no module/channel supports the current profile)</SkipCase>
						</NotEqual>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bDEBUG</Value1>
							<Value2>true</Value2>
							<WriteLine Id="56" Param0="strResult" Level="Verbose">DEBUG | Result : '{0}'.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>strResult</Value1>
							<Value2>EmptyString</Value2>
							<ReturnSuccess Id="57">Test succeed</ReturnSuccess>
						</Equal>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>strResult</Value1>
							<Value2>EmptyString</Value2>
							<RaiseError Id="58"></RaiseError>
						</NotEqual>
					</Compare>
				</TestStep>
			</TestCase>
			<TestCase Name="online | 0x8002 (Ramping Config)" CaseId="6">
				<Description>
					<PreCondition>- The device profile is 5003
- The module profile is 2011
- The submodule profile is 0</PreCondition>
					<Action>- Iterate over all online defined modules/channels and if the PreCondition matches the following operations are done:
- Get the online description of object 0x8002(+module specific offset) 'Ramping Config' and all entries
 Check:
    (Name)
    BitSize
    DataType
    Rx / Tx mappable
    Default Data
    MinData
    Flags       </Action>
					<PostCondition>Error if
- mandatory object / entry is not defined
- an optional object exists and the entries are invalid
- Object / entry description does not match with the specification</PostCondition>
					<ProposalForSolution>- Define the missing objects
- correct object / entry description</ProposalForSolution>
					<References>
						<Reference Specification="ETG.5003.2011"></Reference>
					</References>
					<Mandatory>true</Mandatory>
				</Description>
				<TestStep Name="InitResult">
					<SetVariable Target="strResult">EmptyString</SetVariable>
				</TestStep>
				<TestStep Name="CheckIfOdAvailable">
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Mailbox</Value1>
							<Value2>false</Value2>
							<SkipCase Id="1">DuT does not support mailbox.</SkipCase>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Mailbox.CoE</Value1>
							<Value2>false</Value2>
							<SkipCase Id="2">DuT does not support CoE.</SkipCase>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Mailbox.CoE.SdoInfo</Value1>
							<Value2>false</Value2>
							<SkipCase Id="3">DuT does not support SDO Info.</SkipCase>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="InitAtLeastOneProfileMatch">
					<SetVariable Target="bAtLeastOneModuleMatch">false</SetVariable>
				</TestStep>
				<TestStep Name="GetCurrentProfileList">
					<SizeOf UInt32Var="u32Tmp">arrOnlineProfiles</SizeOf>
					<Compare>
						<Equal>
							<Value1>u32Tmp</Value1>
							<Value2>0</Value2>
							<CallTestFunction Name="GetCurrentProfileList">
								<Parameter>"online"</Parameter>
								<Parameter>"SafeOP"</Parameter>
								<OutParameter>arrOnlineProfiles</OutParameter>
							</CallTestFunction>
						</Equal>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>u32Tmp</Value1>
							<Value2>0</Value2>
							<WriteLine Id="4" Param0="arrOnlineProfiles" Level="Verbose">Use previously created profile list ({0})</WriteLine>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep>
					<SizeOf UInt32Var="u32Tmp">arrOnlineProfiles</SizeOf>
				</TestStep>
				<TestStep>
					<InitArray TargetArray="arrCurrentProfiles" Length="u32Tmp"></InitArray>
				</TestStep>
				<TestStep>
					<CopyArray>
						<SourceArray>arrOnlineProfiles</SourceArray>
						<DestinationArray>arrCurrentProfiles</DestinationArray>
						<Length>u32Tmp</Length>
					</CopyArray>
				</TestStep>
				<TestStep Name="InitProfileLoopCounter">
					<SetVariable Target="u32ProfileCounter">0</SetVariable>
				</TestStep>
				<TestStep Name="GetProfileArrayLength">
					<SizeOf UInt32Var="u32CurrentProfilesLength">arrCurrentProfiles</SizeOf>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="5" Param0="u32CurrentProfilesLength" Level="Verbose">'{0}' Profile(s) defined online.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>u32CurrentProfilesLength</Value1>
							<Value2>0</Value2>
							<SkipCase Id="6">Skip case | no profile defined.</SkipCase>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="ProfileLoopStart">
					<GetArrayItem SourceArray="arrCurrentProfiles" Target="strTmpString" Index="u32ProfileCounter"></GetArrayItem>
				</TestStep>
				<TestStep Name="CheckProfileInformationString">
					<Compare>
						<Equal>
							<Value1>strTmpString</Value1>
							<Value2>null</Value2>
							<RaiseError Id="7" Param0="u32ProfileCounter">Profile Info element [{0}] is null.</RaiseError>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>strTmpString</Value1>
							<Value2>EmptyString</Value2>
							<RaiseError Id="8" Param0="u32ProfileCounter">Profile Info element [{0}] is an empty string.</RaiseError>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="GetDeviceProfile">
					<CallTestFunction Name="GetDeviceProfile">
						<Parameter>strTmpString</Parameter>
						<OutParameter>uint16CurDeviceProfile</OutParameter>
					</CallTestFunction>
				</TestStep>
				<TestStep Name="GetModuleProfile">
					<CallTestFunction Name="GetModuleProfile">
						<Parameter>strTmpString</Parameter>
						<OutParameter>uint16CurModuleProfile</OutParameter>
					</CallTestFunction>
				</TestStep>
				<TestStep Name="GetSubModuleProfile">
					<CallTestFunction Name="GetSubModuleProfile">
						<Parameter>strTmpString</Parameter>
						<OutParameter>uint16CurSubModuleProfile</OutParameter>
					</CallTestFunction>
				</TestStep>
				<TestStep Name="DumpProfileInfo">
					<Description Id="9" Param0="uint16CurDeviceProfile" Param1="uint16CurModuleProfile" Param2="uint16CurSubModuleProfile" Param3="u32ProfileCounter" Level="Output">Module[{3}] : DeviceProfile '{0}' ; ModuleProfile '{1}' ; SubModuleProfile '{2}'</Description>
					<Compare>
						<Equal>
							<Value1>bIgnoreProfileID</Value1>
							<Value2>true</Value2>
							<GotoStep>IndicateThatAtleastOneModuleMatch</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CompareDeviceProfile">
					<Compare>
						<NotEqual>
							<Value1>uint16CurDeviceProfile</Value1>
							<Value2>5003</Value2>
							<WriteLine Id="10" Param0="uint16CurDeviceProfile" Level="Output">Skip Profile  (Test Device Profile '5003' != Cur Device Profile '{0}')</WriteLine>
						</NotEqual>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>uint16CurDeviceProfile</Value1>
							<Value2>5003</Value2>
							<GotoStep>ProfileLoopEnd</GotoStep>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep Name="CompareModuleProfile">
					<Compare>
						<NotEqual>
							<Value1>uint16CurModuleProfile</Value1>
							<Value2>2011</Value2>
							<WriteLine Id="11" Param0="uint16CurModuleProfile" Level="Output">Skip Profile  (Test Module Profile '2011' != Cur Module Profile '{0}')</WriteLine>
						</NotEqual>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>uint16CurModuleProfile</Value1>
							<Value2>2011</Value2>
							<GotoStep>ProfileLoopEnd</GotoStep>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep Name="CompareSubModuleProfile">
					<Compare>
						<NotEqual>
							<Value1>uint16CurSubModuleProfile</Value1>
							<Value2>0</Value2>
							<WriteLine Id="12" Param0="uint16CurSubModuleProfile" Level="Output">Skip Profile  (Test SubModule Profile '0' != Cur SubModule Profile '{0}')</WriteLine>
						</NotEqual>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>uint16CurSubModuleProfile</Value1>
							<Value2>0</Value2>
							<GotoStep>ProfileLoopEnd</GotoStep>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep Name="IndicateThatAtleastOneModuleMatch">
					<SetVariable Target="bAtLeastOneModuleMatch">true</SetVariable>
				</TestStep>
				<TestStep Name="GetObjectIndexInclOffset">
					<SetVariable Target="u16ObjectIndexInclOffset">#x8002 + (u32ProfileCounter * #x10)</SetVariable>
					<WriteLine Id="13" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : ObjectIndex '0x{0:X}'</WriteLine>
				</TestStep>
				<TestStep Name="LoadDeviceObjectDictionary">
					<Description Id="14" Level="Verbose">Load 'online' object dictionary for testing.</Description>
					<GetObjectDictionary Target="odDeviceObjectdictionary">
						<DictionaryType>Online</DictionaryType>
					</GetObjectDictionary>
					<RaiseErrorOnFailure Id="15">VerifyObject : failed to load online object dictionary.</RaiseErrorOnFailure>
				</TestStep>
				<TestStep Name="SetObjectRequiredLevel">
					<SetVariable Target="bObjectOrEntryRequiredLevel">1</SetVariable>
					<WriteLine Id="16" Param0="u16ObjectIndexInclOffset" Level="Verbose">0x{0:X4} 'Ramping Config' may be available</WriteLine>
				</TestStep>
				<TestStep Name="CheckIfObjectExists">
					<GetObjectDescription SourceDictionary="odDeviceObjectdictionary" Index="u16ObjectIndexInclOffset" SubIndex="-1"></GetObjectDescription>
					<GotoOnSuccess>CallCheckObjectDescription</GotoOnSuccess>
				</TestStep>
				<TestStep Name="HandleNotExistingObject">
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>2</Value2>
							<WriteLine Id="17" Param0="u16ObjectIndexInclOffset" Level="Warning">The object 0x{0:X4} 'Ramping Config' does not exists.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>1</Value2>
							<WriteLine Id="18" Param0="u16ObjectIndexInclOffset" Level="Output">The object 0x{0:X4} 'Ramping Config' does not exists.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>ProfileLoopEnd</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CallCheckObjectDescription">
					<Description Id="19" Param0="u16ObjectIndexInclOffset" Level="Output">Verify the object description 0x{0:X4} 'Ramping Config'.</Description>
					<CallTestFunction Name="CheckObjectDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"online"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>"Ramping Config"</Parameter>
						<Parameter>null</Parameter>
						<Parameter>9</Parameter>
						<Parameter>-1</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<GotoStep>ProfileLoopEnd</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="InitEntryBittOffset">
					<SetVariable Target="i32CurrentBitOffset">0</SetVariable>
				</TestStep>
				<TestStep Name="StartSi0">
					<Description Id="20" Level="Output">Start validate SubIndex0</Description>
					<WriteLine Id="21" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : Subindex '0x{0:X}.0'</WriteLine>
				</TestStep>
				<TestStep Name="CallSi0CheckEntryDescription">
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"online"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>0</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>null</Parameter>
						<Parameter>5</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>null</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>null</Parameter>
						<Parameter>null</Parameter>
						<Parameter>null</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>8</Parameter>
						<Parameter>i32CurrentBitOffset</Parameter>
						<Parameter>true</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="EndSi0">
					<SetVariable Target="i32CurrentBitOffset">16</SetVariable>
				</TestStep>
				<TestStep Name="StartSi1">
					<Description Id="22" Level="Output">Start validate SubIndex1</Description>
					<WriteLine Id="23" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : Subindex '0x{0:X}.1'</WriteLine>
				</TestStep>
				<TestStep Name="SetSi1RequiredLevel">
					<SetVariable Target="bObjectOrEntryRequiredLevel">1</SetVariable>
					<WriteLine Id="24" Param0="u16ObjectIndexInclOffset" Level="Verbose">0x{0:X4}.1 'Ramping Mode' may be available</WriteLine>
				</TestStep>
				<TestStep Name="CheckIfSi1Exists">
					<GetObjectDescription SourceDictionary="odDeviceObjectdictionary" Index="u16ObjectIndexInclOffset" SubIndex="1">
						<Type>u16DataType</Type>
					</GetObjectDescription>
					<GotoOnFailure>HandleNotExistingSi1</GotoOnFailure>
				</TestStep>
				<TestStep>
					<Compare>
						<NotEqual>
							<Value1>u16DataType</Value1>
							<Value2>0</Value2>
							<GotoStep>CallSi1CheckEntryDescription</GotoStep>
						</NotEqual>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="25" Param0="u16ObjectIndexInclOffset" Level="Verbose">The entry 0x{0:X4}.1 is defined as a padding entry.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>EndSi1</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="HandleNotExistingSi1">
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="26" Param0="u16ObjectIndexInclOffset" Level="Output">The entry 0x{0:X4}.1 does not exists.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>EndSi1</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CallSi1CheckEntryDescription">
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"online"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>1</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>"Ramping Mode"</Parameter>
						<Parameter>5</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>null</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>8</Parameter>
						<Parameter>i32CurrentBitOffset</Parameter>
						<Parameter>true</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="EndSi1">
					<SetVariable Target="i32CurrentBitOffset">-1</SetVariable>
				</TestStep>
				<TestStep Name="StartSi2">
					<Description Id="27" Level="Output">Start validate SubIndex2</Description>
					<WriteLine Id="28" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : Subindex '0x{0:X}.2'</WriteLine>
				</TestStep>
				<TestStep Name="SetSi2RequiredLevel">
					<SetVariable Target="bObjectOrEntryRequiredLevel">1</SetVariable>
					<WriteLine Id="29" Param0="u16ObjectIndexInclOffset" Level="Verbose">0x{0:X4}.2 'Ramping Unit' may be available</WriteLine>
				</TestStep>
				<TestStep Name="CheckIfSi2Exists">
					<GetObjectDescription SourceDictionary="odDeviceObjectdictionary" Index="u16ObjectIndexInclOffset" SubIndex="2">
						<Type>u16DataType</Type>
					</GetObjectDescription>
					<GotoOnFailure>HandleNotExistingSi2</GotoOnFailure>
				</TestStep>
				<TestStep>
					<Compare>
						<NotEqual>
							<Value1>u16DataType</Value1>
							<Value2>0</Value2>
							<GotoStep>CallSi2CheckEntryDescription</GotoStep>
						</NotEqual>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="30" Param0="u16ObjectIndexInclOffset" Level="Verbose">The entry 0x{0:X4}.2 is defined as a padding entry.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>EndSi2</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="HandleNotExistingSi2">
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="31" Param0="u16ObjectIndexInclOffset" Level="Output">The entry 0x{0:X4}.2 does not exists.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>EndSi2</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CallSi2CheckEntryDescription">
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"online"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>2</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>"Ramping Unit"</Parameter>
						<Parameter>5</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>null</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>00</Parameter>
						<Parameter>01</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>8</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>true</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="EndSi2"></TestStep>
				<TestStep Name="StartSi3">
					<Description Id="32" Level="Output">Start validate SubIndex3</Description>
					<WriteLine Id="33" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : Subindex '0x{0:X}.3'</WriteLine>
				</TestStep>
				<TestStep Name="SetSi3RequiredLevel">
					<SetVariable Target="bObjectOrEntryRequiredLevel">1</SetVariable>
					<WriteLine Id="34" Param0="u16ObjectIndexInclOffset" Level="Verbose">0x{0:X4}.3 'Ramp Up Parameter Power' may be available</WriteLine>
				</TestStep>
				<TestStep Name="CheckIfSi3Exists">
					<GetObjectDescription SourceDictionary="odDeviceObjectdictionary" Index="u16ObjectIndexInclOffset" SubIndex="3">
						<Type>u16DataType</Type>
					</GetObjectDescription>
					<GotoOnFailure>HandleNotExistingSi3</GotoOnFailure>
				</TestStep>
				<TestStep>
					<Compare>
						<NotEqual>
							<Value1>u16DataType</Value1>
							<Value2>0</Value2>
							<GotoStep>CallSi3CheckEntryDescription</GotoStep>
						</NotEqual>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="35" Param0="u16ObjectIndexInclOffset" Level="Verbose">The entry 0x{0:X4}.3 is defined as a padding entry.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>EndSi3</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="HandleNotExistingSi3">
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="36" Param0="u16ObjectIndexInclOffset" Level="Output">The entry 0x{0:X4}.3 does not exists.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>EndSi3</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CallSi3CheckEntryDescription">
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"online"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>3</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>"Ramp Up Parameter Power"</Parameter>
						<Parameter>7</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>null</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>32</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>true</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="EndSi3"></TestStep>
				<TestStep Name="StartSi4">
					<Description Id="37" Level="Output">Start validate SubIndex4</Description>
					<WriteLine Id="38" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : Subindex '0x{0:X}.4'</WriteLine>
				</TestStep>
				<TestStep Name="SetSi4RequiredLevel">
					<SetVariable Target="bObjectOrEntryRequiredLevel">1</SetVariable>
					<WriteLine Id="39" Param0="u16ObjectIndexInclOffset" Level="Verbose">0x{0:X4}.4 'Ramp Down Parameter Power' may be available</WriteLine>
				</TestStep>
				<TestStep Name="CheckIfSi4Exists">
					<GetObjectDescription SourceDictionary="odDeviceObjectdictionary" Index="u16ObjectIndexInclOffset" SubIndex="4">
						<Type>u16DataType</Type>
					</GetObjectDescription>
					<GotoOnFailure>HandleNotExistingSi4</GotoOnFailure>
				</TestStep>
				<TestStep>
					<Compare>
						<NotEqual>
							<Value1>u16DataType</Value1>
							<Value2>0</Value2>
							<GotoStep>CallSi4CheckEntryDescription</GotoStep>
						</NotEqual>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="40" Param0="u16ObjectIndexInclOffset" Level="Verbose">The entry 0x{0:X4}.4 is defined as a padding entry.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>EndSi4</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="HandleNotExistingSi4">
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="41" Param0="u16ObjectIndexInclOffset" Level="Output">The entry 0x{0:X4}.4 does not exists.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>EndSi4</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CallSi4CheckEntryDescription">
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"online"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>4</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>"Ramp Down Parameter Power"</Parameter>
						<Parameter>7</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>null</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>32</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>true</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="EndSi4"></TestStep>
				<TestStep Name="StartSi5">
					<Description Id="42" Level="Output">Start validate SubIndex5</Description>
					<WriteLine Id="43" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : Subindex '0x{0:X}.5'</WriteLine>
				</TestStep>
				<TestStep Name="SetSi5RequiredLevel">
					<SetVariable Target="bObjectOrEntryRequiredLevel">1</SetVariable>
					<WriteLine Id="44" Param0="u16ObjectIndexInclOffset" Level="Verbose">0x{0:X4}.5 'Ramp Up Slope' may be available</WriteLine>
				</TestStep>
				<TestStep Name="CheckIfSi5Exists">
					<GetObjectDescription SourceDictionary="odDeviceObjectdictionary" Index="u16ObjectIndexInclOffset" SubIndex="5">
						<Type>u16DataType</Type>
					</GetObjectDescription>
					<GotoOnFailure>HandleNotExistingSi5</GotoOnFailure>
				</TestStep>
				<TestStep>
					<Compare>
						<NotEqual>
							<Value1>u16DataType</Value1>
							<Value2>0</Value2>
							<GotoStep>CallSi5CheckEntryDescription</GotoStep>
						</NotEqual>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="45" Param0="u16ObjectIndexInclOffset" Level="Verbose">The entry 0x{0:X4}.5 is defined as a padding entry.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>EndSi5</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="HandleNotExistingSi5">
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="46" Param0="u16ObjectIndexInclOffset" Level="Output">The entry 0x{0:X4}.5 does not exists.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>EndSi5</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CallSi5CheckEntryDescription">
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"online"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>5</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>"Ramp Up Slope"</Parameter>
						<Parameter>8</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>null</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>32</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>true</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="EndSi5"></TestStep>
				<TestStep Name="StartSi6">
					<Description Id="47" Level="Output">Start validate SubIndex6</Description>
					<WriteLine Id="48" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : Subindex '0x{0:X}.6'</WriteLine>
				</TestStep>
				<TestStep Name="SetSi6RequiredLevel">
					<SetVariable Target="bObjectOrEntryRequiredLevel">1</SetVariable>
					<WriteLine Id="49" Param0="u16ObjectIndexInclOffset" Level="Verbose">0x{0:X4}.6 'Ramp Down Slope' may be available</WriteLine>
				</TestStep>
				<TestStep Name="CheckIfSi6Exists">
					<GetObjectDescription SourceDictionary="odDeviceObjectdictionary" Index="u16ObjectIndexInclOffset" SubIndex="6">
						<Type>u16DataType</Type>
					</GetObjectDescription>
					<GotoOnFailure>HandleNotExistingSi6</GotoOnFailure>
				</TestStep>
				<TestStep>
					<Compare>
						<NotEqual>
							<Value1>u16DataType</Value1>
							<Value2>0</Value2>
							<GotoStep>CallSi6CheckEntryDescription</GotoStep>
						</NotEqual>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="50" Param0="u16ObjectIndexInclOffset" Level="Verbose">The entry 0x{0:X4}.6 is defined as a padding entry.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>EndSi6</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="HandleNotExistingSi6">
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="51" Param0="u16ObjectIndexInclOffset" Level="Output">The entry 0x{0:X4}.6 does not exists.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>EndSi6</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CallSi6CheckEntryDescription">
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"online"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>6</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>"Ramp Down Slope"</Parameter>
						<Parameter>8</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>null</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>32</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>true</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="EndSi6"></TestStep>
				<TestStep Name="CheckReservedEntryRange_7_to_255">
					<Description Id="52" Level="Output">Start check reserved entry range 7 to 255</Description>
					<CallTestFunction Name="CheckReservedEntryRange">
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>7</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>odDeviceObjectdictionary</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="ProfileLoopEnd">
					<Compare>
						<Equal>
							<Value1>bAtLeastOneModuleMatch</Value1>
							<Value2>false</Value2>
							<GotoStep>HandleAbortTestCaseOnFirstError</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="HandleAbortTestCaseOnFirstError">
					<Compare>
						<Equal>
							<Value1>bAbortTestCaseOnFirstError</Value1>
							<Value2>false</Value2>
							<GotoStep>ProfileLoopIncrement</GotoStep>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>strResult</Value1>
							<Value2>EmptyString</Value2>
							<GotoStep>ProfileLoopIncrement</GotoStep>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="53" Level="Output">Object verification for all following modules abort because an error was already detected for the current module.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>END</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="ProfileLoopIncrement">
					<SetVariable Target="u32ProfileCounter">u32ProfileCounter + 1</SetVariable>
					<Compare>
						<Greater>
							<Value1>u32CurrentProfilesLength</Value1>
							<Value2>u32ProfileCounter</Value2>
							<GotoStep>ProfileLoopStart</GotoStep>
						</Greater>
					</Compare>
				</TestStep>
				<TestStep Name="END">
					<Compare>
						<NotEqual>
							<Value1>bAtLeastOneModuleMatch</Value1>
							<Value2>true</Value2>
							<SkipCase Id="54">SKIP TEST(no module/channel supports the current profile)</SkipCase>
						</NotEqual>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bDEBUG</Value1>
							<Value2>true</Value2>
							<WriteLine Id="55" Param0="strResult" Level="Verbose">DEBUG | Result : '{0}'.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>strResult</Value1>
							<Value2>EmptyString</Value2>
							<ReturnSuccess Id="56">Test succeed</ReturnSuccess>
						</Equal>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>strResult</Value1>
							<Value2>EmptyString</Value2>
							<RaiseError Id="57"></RaiseError>
						</NotEqual>
					</Compare>
				</TestStep>
			</TestCase>
			<TestCase Name="offline | 0x8003 (Arc Management Config)" CaseId="7">
				<Description>
					<PreCondition>- The device profile is 5003
- The module profile is 2011
- The submodule profile is 0</PreCondition>
					<Action>- Iterate over all offline defined modules/channels and if the PreCondition matches the following operations are done:
- Get the offline description of object 0x8003(+module specific offset) 'Arc Management Config' and all entries
 Check:
    (Name)
    BitSize
    DataType
    Rx / Tx mappable
    Default Data
    MinData
    Flags       </Action>
					<PostCondition>Error if
- mandatory object / entry is not defined
- an optional object exists and the entries are invalid
- Object / entry description does not match with the specification</PostCondition>
					<ProposalForSolution>- Define the missing objects
- correct object / entry description</ProposalForSolution>
					<References>
						<Reference Specification="ETG.5003.2011"></Reference>
					</References>
					<Mandatory>true</Mandatory>
				</Description>
				<TestStep Name="InitResult">
					<SetVariable Target="strResult">EmptyString</SetVariable>
				</TestStep>
				<TestStep Name="CheckIfOdAvailable">
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Mailbox</Value1>
							<Value2>false</Value2>
							<SkipCase Id="1">DuT does not support mailbox.</SkipCase>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Mailbox.CoE</Value1>
							<Value2>false</Value2>
							<SkipCase Id="2">DuT does not support CoE.</SkipCase>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep>
					<GetObjectDictionary Target="odDeviceObjectdictionary">
						<DictionaryType>Offline</DictionaryType>
					</GetObjectDictionary>
					<SkipOnFailure Id="3">No offline object dictionary defined.</SkipOnFailure>
				</TestStep>
				<TestStep>
					<GetObjectList Count="u32Tmp" Target="odDeviceObjectdictionaryList" SourceDict="odDeviceObjectdictionary"></GetObjectList>
					<Compare>
						<Equal>
							<Value1>u32Tmp</Value1>
							<Value2>0</Value2>
							<SkipCase Id="4">No offline object dictionary defined.</SkipCase>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="InitAtLeastOneProfileMatch">
					<SetVariable Target="bAtLeastOneModuleMatch">false</SetVariable>
				</TestStep>
				<TestStep Name="GetCurrentProfileList">
					<SizeOf UInt32Var="u32Tmp">arrOfflineProfiles</SizeOf>
					<Compare>
						<Equal>
							<Value1>u32Tmp</Value1>
							<Value2>0</Value2>
							<CallTestFunction Name="GetCurrentProfileList">
								<Parameter>"offline"</Parameter>
								<Parameter>"SafeOP"</Parameter>
								<OutParameter>arrOfflineProfiles</OutParameter>
							</CallTestFunction>
						</Equal>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>u32Tmp</Value1>
							<Value2>0</Value2>
							<WriteLine Id="5" Param0="arrOfflineProfiles" Level="Verbose">Use previously created profile list ({0})</WriteLine>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep>
					<SizeOf UInt32Var="u32Tmp">arrOfflineProfiles</SizeOf>
				</TestStep>
				<TestStep>
					<InitArray TargetArray="arrCurrentProfiles" Length="u32Tmp"></InitArray>
				</TestStep>
				<TestStep>
					<CopyArray>
						<SourceArray>arrOfflineProfiles</SourceArray>
						<DestinationArray>arrCurrentProfiles</DestinationArray>
						<Length>u32Tmp</Length>
					</CopyArray>
				</TestStep>
				<TestStep Name="InitProfileLoopCounter">
					<SetVariable Target="u32ProfileCounter">0</SetVariable>
				</TestStep>
				<TestStep Name="GetProfileArrayLength">
					<SizeOf UInt32Var="u32CurrentProfilesLength">arrCurrentProfiles</SizeOf>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="6" Param0="u32CurrentProfilesLength" Level="Verbose">'{0}' Profile(s) defined offline.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>u32CurrentProfilesLength</Value1>
							<Value2>0</Value2>
							<SkipCase Id="7">Skip case | no profile defined.</SkipCase>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="ProfileLoopStart">
					<GetArrayItem SourceArray="arrCurrentProfiles" Target="strTmpString" Index="u32ProfileCounter"></GetArrayItem>
				</TestStep>
				<TestStep Name="CheckProfileInformationString">
					<Compare>
						<Equal>
							<Value1>strTmpString</Value1>
							<Value2>null</Value2>
							<RaiseError Id="8" Param0="u32ProfileCounter">Profile Info element [{0}] is null.</RaiseError>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>strTmpString</Value1>
							<Value2>EmptyString</Value2>
							<RaiseError Id="9" Param0="u32ProfileCounter">Profile Info element [{0}] is an empty string.</RaiseError>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="GetDeviceProfile">
					<CallTestFunction Name="GetDeviceProfile">
						<Parameter>strTmpString</Parameter>
						<OutParameter>uint16CurDeviceProfile</OutParameter>
					</CallTestFunction>
				</TestStep>
				<TestStep Name="GetModuleProfile">
					<CallTestFunction Name="GetModuleProfile">
						<Parameter>strTmpString</Parameter>
						<OutParameter>uint16CurModuleProfile</OutParameter>
					</CallTestFunction>
				</TestStep>
				<TestStep Name="GetSubModuleProfile">
					<CallTestFunction Name="GetSubModuleProfile">
						<Parameter>strTmpString</Parameter>
						<OutParameter>uint16CurSubModuleProfile</OutParameter>
					</CallTestFunction>
				</TestStep>
				<TestStep Name="DumpProfileInfo">
					<Description Id="10" Param0="uint16CurDeviceProfile" Param1="uint16CurModuleProfile" Param2="uint16CurSubModuleProfile" Param3="u32ProfileCounter" Level="Output">Module[{3}] : DeviceProfile '{0}' ; ModuleProfile '{1}' ; SubModuleProfile '{2}'</Description>
					<Compare>
						<Equal>
							<Value1>bIgnoreProfileID</Value1>
							<Value2>true</Value2>
							<GotoStep>IndicateThatAtleastOneModuleMatch</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CompareDeviceProfile">
					<Compare>
						<NotEqual>
							<Value1>uint16CurDeviceProfile</Value1>
							<Value2>5003</Value2>
							<WriteLine Id="11" Param0="uint16CurDeviceProfile" Level="Output">Skip Profile  (Test Device Profile '5003' != Cur Device Profile '{0}')</WriteLine>
						</NotEqual>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>uint16CurDeviceProfile</Value1>
							<Value2>5003</Value2>
							<GotoStep>ProfileLoopEnd</GotoStep>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep Name="CompareModuleProfile">
					<Compare>
						<NotEqual>
							<Value1>uint16CurModuleProfile</Value1>
							<Value2>2011</Value2>
							<WriteLine Id="12" Param0="uint16CurModuleProfile" Level="Output">Skip Profile  (Test Module Profile '2011' != Cur Module Profile '{0}')</WriteLine>
						</NotEqual>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>uint16CurModuleProfile</Value1>
							<Value2>2011</Value2>
							<GotoStep>ProfileLoopEnd</GotoStep>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep Name="CompareSubModuleProfile">
					<Compare>
						<NotEqual>
							<Value1>uint16CurSubModuleProfile</Value1>
							<Value2>0</Value2>
							<WriteLine Id="13" Param0="uint16CurSubModuleProfile" Level="Output">Skip Profile  (Test SubModule Profile '0' != Cur SubModule Profile '{0}')</WriteLine>
						</NotEqual>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>uint16CurSubModuleProfile</Value1>
							<Value2>0</Value2>
							<GotoStep>ProfileLoopEnd</GotoStep>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep Name="IndicateThatAtleastOneModuleMatch">
					<SetVariable Target="bAtLeastOneModuleMatch">true</SetVariable>
				</TestStep>
				<TestStep Name="GetObjectIndexInclOffset">
					<SetVariable Target="u16ObjectIndexInclOffset">#x8003 + (u32ProfileCounter * #x10)</SetVariable>
					<WriteLine Id="14" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : ObjectIndex '0x{0:X}'</WriteLine>
				</TestStep>
				<TestStep Name="LoadDeviceObjectDictionary">
					<Description Id="15" Level="Verbose">Load 'offline' object dictionary for testing.</Description>
					<GetObjectDictionary Target="odDeviceObjectdictionary">
						<DictionaryType>Offline</DictionaryType>
					</GetObjectDictionary>
					<RaiseErrorOnFailure Id="16">VerifyObject : failed to load offline object dictionary.</RaiseErrorOnFailure>
				</TestStep>
				<TestStep Name="SetObjectRequiredLevel">
					<SetVariable Target="bObjectOrEntryRequiredLevel">1</SetVariable>
					<WriteLine Id="17" Param0="u16ObjectIndexInclOffset" Level="Verbose">0x{0:X4} 'Arc Management Config' may be available</WriteLine>
				</TestStep>
				<TestStep Name="CheckIfObjectExists">
					<GetObjectDescription SourceDictionary="odDeviceObjectdictionary" Index="u16ObjectIndexInclOffset" SubIndex="-1"></GetObjectDescription>
					<GotoOnSuccess>CallCheckObjectDescription</GotoOnSuccess>
				</TestStep>
				<TestStep Name="HandleNotExistingObject">
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>2</Value2>
							<WriteLine Id="18" Param0="u16ObjectIndexInclOffset" Level="Warning">The object 0x{0:X4} 'Arc Management Config' does not exists.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>1</Value2>
							<WriteLine Id="19" Param0="u16ObjectIndexInclOffset" Level="Output">The object 0x{0:X4} 'Arc Management Config' does not exists.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>ProfileLoopEnd</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CallCheckObjectDescription">
					<Description Id="20" Param0="u16ObjectIndexInclOffset" Level="Output">Verify the object description 0x{0:X4} 'Arc Management Config'.</Description>
					<CallTestFunction Name="CheckObjectDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"offline"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>"Arc Management Config"</Parameter>
						<Parameter>null</Parameter>
						<Parameter>9</Parameter>
						<Parameter>-1</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<GotoStep>ProfileLoopEnd</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="InitEntryBittOffset">
					<SetVariable Target="i32CurrentBitOffset">0</SetVariable>
				</TestStep>
				<TestStep Name="StartSi0">
					<Description Id="21" Level="Output">Start validate SubIndex0</Description>
					<WriteLine Id="22" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : Subindex '0x{0:X}.0'</WriteLine>
				</TestStep>
				<TestStep Name="CallSi0CheckEntryDescription">
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"offline"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>0</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>null</Parameter>
						<Parameter>5</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>null</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>null</Parameter>
						<Parameter>null</Parameter>
						<Parameter>null</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>8</Parameter>
						<Parameter>i32CurrentBitOffset</Parameter>
						<Parameter>true</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="EndSi0">
					<SetVariable Target="i32CurrentBitOffset">16</SetVariable>
				</TestStep>
				<TestStep Name="StartSi1">
					<Description Id="23" Level="Output">Start validate SubIndex1</Description>
					<WriteLine Id="24" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : Subindex '0x{0:X}.1'</WriteLine>
				</TestStep>
				<TestStep Name="SetSi1RequiredLevel">
					<SetVariable Target="bObjectOrEntryRequiredLevel">1</SetVariable>
					<WriteLine Id="25" Param0="u16ObjectIndexInclOffset" Level="Verbose">0x{0:X4}.1 'Arc Detection Mode' may be available</WriteLine>
				</TestStep>
				<TestStep Name="CheckIfSi1Exists">
					<GetObjectDescription SourceDictionary="odDeviceObjectdictionary" Index="u16ObjectIndexInclOffset" SubIndex="1">
						<Type>u16DataType</Type>
					</GetObjectDescription>
					<GotoOnFailure>HandleNotExistingSi1</GotoOnFailure>
				</TestStep>
				<TestStep>
					<Compare>
						<NotEqual>
							<Value1>u16DataType</Value1>
							<Value2>0</Value2>
							<GotoStep>CallSi1CheckEntryDescription</GotoStep>
						</NotEqual>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="26" Param0="u16ObjectIndexInclOffset" Level="Verbose">The entry 0x{0:X4}.1 is defined as a padding entry.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>EndSi1</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="HandleNotExistingSi1">
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="27" Param0="u16ObjectIndexInclOffset" Level="Output">The entry 0x{0:X4}.1 does not exists.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>EndSi1</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CallSi1CheckEntryDescription">
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"offline"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>1</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>"Arc Detection Mode"</Parameter>
						<Parameter>5</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>null</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>8</Parameter>
						<Parameter>i32CurrentBitOffset</Parameter>
						<Parameter>true</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="EndSi1">
					<SetVariable Target="i32CurrentBitOffset">-1</SetVariable>
				</TestStep>
				<TestStep Name="StartSi2">
					<Description Id="28" Level="Output">Start validate SubIndex2</Description>
					<WriteLine Id="29" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : Subindex '0x{0:X}.2'</WriteLine>
				</TestStep>
				<TestStep Name="SetSi2RequiredLevel">
					<SetVariable Target="bObjectOrEntryRequiredLevel">1</SetVariable>
					<WriteLine Id="30" Param0="u16ObjectIndexInclOffset" Level="Verbose">0x{0:X4}.2 'Arc Reaction Mode' may be available</WriteLine>
				</TestStep>
				<TestStep Name="CheckIfSi2Exists">
					<GetObjectDescription SourceDictionary="odDeviceObjectdictionary" Index="u16ObjectIndexInclOffset" SubIndex="2">
						<Type>u16DataType</Type>
					</GetObjectDescription>
					<GotoOnFailure>HandleNotExistingSi2</GotoOnFailure>
				</TestStep>
				<TestStep>
					<Compare>
						<NotEqual>
							<Value1>u16DataType</Value1>
							<Value2>0</Value2>
							<GotoStep>CallSi2CheckEntryDescription</GotoStep>
						</NotEqual>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="31" Param0="u16ObjectIndexInclOffset" Level="Verbose">The entry 0x{0:X4}.2 is defined as a padding entry.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>EndSi2</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="HandleNotExistingSi2">
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="32" Param0="u16ObjectIndexInclOffset" Level="Output">The entry 0x{0:X4}.2 does not exists.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>EndSi2</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CallSi2CheckEntryDescription">
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"offline"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>2</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>"Arc Reaction Mode"</Parameter>
						<Parameter>5</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>null</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>8</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>true</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="EndSi2"></TestStep>
				<TestStep Name="StartSi3">
					<Description Id="33" Level="Output">Start validate SubIndex3</Description>
					<WriteLine Id="34" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : Subindex '0x{0:X}.3'</WriteLine>
				</TestStep>
				<TestStep Name="SetSi3RequiredLevel">
					<SetVariable Target="bObjectOrEntryRequiredLevel">1</SetVariable>
					<WriteLine Id="35" Param0="u16ObjectIndexInclOffset" Level="Verbose">0x{0:X4}.3 'Arc Synchronization' may be available</WriteLine>
				</TestStep>
				<TestStep Name="CheckIfSi3Exists">
					<GetObjectDescription SourceDictionary="odDeviceObjectdictionary" Index="u16ObjectIndexInclOffset" SubIndex="3">
						<Type>u16DataType</Type>
					</GetObjectDescription>
					<GotoOnFailure>HandleNotExistingSi3</GotoOnFailure>
				</TestStep>
				<TestStep>
					<Compare>
						<NotEqual>
							<Value1>u16DataType</Value1>
							<Value2>0</Value2>
							<GotoStep>CallSi3CheckEntryDescription</GotoStep>
						</NotEqual>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="36" Param0="u16ObjectIndexInclOffset" Level="Verbose">The entry 0x{0:X4}.3 is defined as a padding entry.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>EndSi3</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="HandleNotExistingSi3">
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="37" Param0="u16ObjectIndexInclOffset" Level="Output">The entry 0x{0:X4}.3 does not exists.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>EndSi3</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CallSi3CheckEntryDescription">
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"offline"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>3</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>"Arc Synchronization"</Parameter>
						<Parameter>5</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>null</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>00</Parameter>
						<Parameter>01</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>8</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>true</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="EndSi3"></TestStep>
				<TestStep Name="StartSi4">
					<Description Id="38" Level="Output">Start validate SubIndex4</Description>
					<WriteLine Id="39" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : Subindex '0x{0:X}.4'</WriteLine>
				</TestStep>
				<TestStep Name="SetSi4RequiredLevel">
					<SetVariable Target="bObjectOrEntryRequiredLevel">1</SetVariable>
					<WriteLine Id="40" Param0="u16ObjectIndexInclOffset" Level="Verbose">0x{0:X4}.4 'Arc Management Delay' may be available</WriteLine>
				</TestStep>
				<TestStep Name="CheckIfSi4Exists">
					<GetObjectDescription SourceDictionary="odDeviceObjectdictionary" Index="u16ObjectIndexInclOffset" SubIndex="4">
						<Type>u16DataType</Type>
					</GetObjectDescription>
					<GotoOnFailure>HandleNotExistingSi4</GotoOnFailure>
				</TestStep>
				<TestStep>
					<Compare>
						<NotEqual>
							<Value1>u16DataType</Value1>
							<Value2>0</Value2>
							<GotoStep>CallSi4CheckEntryDescription</GotoStep>
						</NotEqual>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="41" Param0="u16ObjectIndexInclOffset" Level="Verbose">The entry 0x{0:X4}.4 is defined as a padding entry.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>EndSi4</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="HandleNotExistingSi4">
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="42" Param0="u16ObjectIndexInclOffset" Level="Output">The entry 0x{0:X4}.4 does not exists.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>EndSi4</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CallSi4CheckEntryDescription">
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"offline"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>4</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>"Arc Management Delay"</Parameter>
						<Parameter>6</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>null</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>16</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>true</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="EndSi4"></TestStep>
				<TestStep Name="StartSi5">
					<Description Id="43" Level="Output">Start validate SubIndex5</Description>
					<WriteLine Id="44" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : Subindex '0x{0:X}.5'</WriteLine>
				</TestStep>
				<TestStep Name="SetSi5RequiredLevel">
					<SetVariable Target="bObjectOrEntryRequiredLevel">1</SetVariable>
					<WriteLine Id="45" Param0="u16ObjectIndexInclOffset" Level="Verbose">0x{0:X4}.5 'Arc Handling Delay' may be available</WriteLine>
				</TestStep>
				<TestStep Name="CheckIfSi5Exists">
					<GetObjectDescription SourceDictionary="odDeviceObjectdictionary" Index="u16ObjectIndexInclOffset" SubIndex="5">
						<Type>u16DataType</Type>
					</GetObjectDescription>
					<GotoOnFailure>HandleNotExistingSi5</GotoOnFailure>
				</TestStep>
				<TestStep>
					<Compare>
						<NotEqual>
							<Value1>u16DataType</Value1>
							<Value2>0</Value2>
							<GotoStep>CallSi5CheckEntryDescription</GotoStep>
						</NotEqual>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="46" Param0="u16ObjectIndexInclOffset" Level="Verbose">The entry 0x{0:X4}.5 is defined as a padding entry.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>EndSi5</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="HandleNotExistingSi5">
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="47" Param0="u16ObjectIndexInclOffset" Level="Output">The entry 0x{0:X4}.5 does not exists.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>EndSi5</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CallSi5CheckEntryDescription">
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"offline"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>5</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>"Arc Handling Delay"</Parameter>
						<Parameter>6</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>null</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>16</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>true</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="EndSi5"></TestStep>
				<TestStep Name="StartSi6">
					<Description Id="48" Level="Output">Start validate SubIndex6</Description>
					<WriteLine Id="49" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : Subindex '0x{0:X}.6'</WriteLine>
				</TestStep>
				<TestStep Name="SetSi6RequiredLevel">
					<SetVariable Target="bObjectOrEntryRequiredLevel">1</SetVariable>
					<WriteLine Id="50" Param0="u16ObjectIndexInclOffset" Level="Verbose">0x{0:X4}.6 'Arc Suppression Time' may be available</WriteLine>
				</TestStep>
				<TestStep Name="CheckIfSi6Exists">
					<GetObjectDescription SourceDictionary="odDeviceObjectdictionary" Index="u16ObjectIndexInclOffset" SubIndex="6">
						<Type>u16DataType</Type>
					</GetObjectDescription>
					<GotoOnFailure>HandleNotExistingSi6</GotoOnFailure>
				</TestStep>
				<TestStep>
					<Compare>
						<NotEqual>
							<Value1>u16DataType</Value1>
							<Value2>0</Value2>
							<GotoStep>CallSi6CheckEntryDescription</GotoStep>
						</NotEqual>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="51" Param0="u16ObjectIndexInclOffset" Level="Verbose">The entry 0x{0:X4}.6 is defined as a padding entry.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>EndSi6</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="HandleNotExistingSi6">
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="52" Param0="u16ObjectIndexInclOffset" Level="Output">The entry 0x{0:X4}.6 does not exists.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>EndSi6</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CallSi6CheckEntryDescription">
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"offline"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>6</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>"Arc Suppression Time"</Parameter>
						<Parameter>6</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>null</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>16</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>true</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="EndSi6"></TestStep>
				<TestStep Name="StartSi7">
					<Description Id="53" Level="Output">Start validate SubIndex7</Description>
					<WriteLine Id="54" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : Subindex '0x{0:X}.7'</WriteLine>
				</TestStep>
				<TestStep Name="SetSi7RequiredLevel">
					<SetVariable Target="bObjectOrEntryRequiredLevel">1</SetVariable>
					<WriteLine Id="55" Param0="u16ObjectIndexInclOffset" Level="Verbose">0x{0:X4}.7 'Arc Detection Delay Time' may be available</WriteLine>
				</TestStep>
				<TestStep Name="CheckIfSi7Exists">
					<GetObjectDescription SourceDictionary="odDeviceObjectdictionary" Index="u16ObjectIndexInclOffset" SubIndex="7">
						<Type>u16DataType</Type>
					</GetObjectDescription>
					<GotoOnFailure>HandleNotExistingSi7</GotoOnFailure>
				</TestStep>
				<TestStep>
					<Compare>
						<NotEqual>
							<Value1>u16DataType</Value1>
							<Value2>0</Value2>
							<GotoStep>CallSi7CheckEntryDescription</GotoStep>
						</NotEqual>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="56" Param0="u16ObjectIndexInclOffset" Level="Verbose">The entry 0x{0:X4}.7 is defined as a padding entry.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>EndSi7</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="HandleNotExistingSi7">
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="57" Param0="u16ObjectIndexInclOffset" Level="Output">The entry 0x{0:X4}.7 does not exists.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>EndSi7</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CallSi7CheckEntryDescription">
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"offline"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>7</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>"Arc Detection Delay Time"</Parameter>
						<Parameter>6</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>null</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>16</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>true</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="EndSi7"></TestStep>
				<TestStep Name="StartSi8">
					<Description Id="58" Level="Output">Start validate SubIndex8</Description>
					<WriteLine Id="59" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : Subindex '0x{0:X}.8'</WriteLine>
				</TestStep>
				<TestStep Name="SetSi8RequiredLevel">
					<SetVariable Target="bObjectOrEntryRequiredLevel">1</SetVariable>
					<WriteLine Id="60" Param0="u16ObjectIndexInclOffset" Level="Verbose">0x{0:X4}.8 'Arc Rate Limit' may be available</WriteLine>
				</TestStep>
				<TestStep Name="CheckIfSi8Exists">
					<GetObjectDescription SourceDictionary="odDeviceObjectdictionary" Index="u16ObjectIndexInclOffset" SubIndex="8">
						<Type>u16DataType</Type>
					</GetObjectDescription>
					<GotoOnFailure>HandleNotExistingSi8</GotoOnFailure>
				</TestStep>
				<TestStep>
					<Compare>
						<NotEqual>
							<Value1>u16DataType</Value1>
							<Value2>0</Value2>
							<GotoStep>CallSi8CheckEntryDescription</GotoStep>
						</NotEqual>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="61" Param0="u16ObjectIndexInclOffset" Level="Verbose">The entry 0x{0:X4}.8 is defined as a padding entry.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>EndSi8</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="HandleNotExistingSi8">
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="62" Param0="u16ObjectIndexInclOffset" Level="Output">The entry 0x{0:X4}.8 does not exists.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>EndSi8</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CallSi8CheckEntryDescription">
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"offline"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>8</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>"Arc Rate Limit"</Parameter>
						<Parameter>6</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>null</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>16</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>true</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="EndSi8"></TestStep>
				<TestStep Name="CheckReservedEntryRange_9_to_255">
					<Description Id="63" Level="Output">Start check reserved entry range 9 to 255</Description>
					<CallTestFunction Name="CheckReservedEntryRange">
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>9</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>odDeviceObjectdictionary</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="ProfileLoopEnd">
					<Compare>
						<Equal>
							<Value1>bAtLeastOneModuleMatch</Value1>
							<Value2>false</Value2>
							<GotoStep>HandleAbortTestCaseOnFirstError</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="HandleAbortTestCaseOnFirstError">
					<Compare>
						<Equal>
							<Value1>bAbortTestCaseOnFirstError</Value1>
							<Value2>false</Value2>
							<GotoStep>ProfileLoopIncrement</GotoStep>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>strResult</Value1>
							<Value2>EmptyString</Value2>
							<GotoStep>ProfileLoopIncrement</GotoStep>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="64" Level="Output">Object verification for all following modules abort because an error was already detected for the current module.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>END</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="ProfileLoopIncrement">
					<SetVariable Target="u32ProfileCounter">u32ProfileCounter + 1</SetVariable>
					<Compare>
						<Greater>
							<Value1>u32CurrentProfilesLength</Value1>
							<Value2>u32ProfileCounter</Value2>
							<GotoStep>ProfileLoopStart</GotoStep>
						</Greater>
					</Compare>
				</TestStep>
				<TestStep Name="END">
					<Compare>
						<NotEqual>
							<Value1>bAtLeastOneModuleMatch</Value1>
							<Value2>true</Value2>
							<SkipCase Id="65">SKIP TEST(no module/channel supports the current profile)</SkipCase>
						</NotEqual>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bDEBUG</Value1>
							<Value2>true</Value2>
							<WriteLine Id="66" Param0="strResult" Level="Verbose">DEBUG | Result : '{0}'.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>strResult</Value1>
							<Value2>EmptyString</Value2>
							<ReturnSuccess Id="67">Test succeed</ReturnSuccess>
						</Equal>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>strResult</Value1>
							<Value2>EmptyString</Value2>
							<RaiseError Id="68"></RaiseError>
						</NotEqual>
					</Compare>
				</TestStep>
			</TestCase>
			<TestCase Name="online | 0x8003 (Arc Management Config)" CaseId="8">
				<Description>
					<PreCondition>- The device profile is 5003
- The module profile is 2011
- The submodule profile is 0</PreCondition>
					<Action>- Iterate over all online defined modules/channels and if the PreCondition matches the following operations are done:
- Get the online description of object 0x8003(+module specific offset) 'Arc Management Config' and all entries
 Check:
    (Name)
    BitSize
    DataType
    Rx / Tx mappable
    Default Data
    MinData
    Flags       </Action>
					<PostCondition>Error if
- mandatory object / entry is not defined
- an optional object exists and the entries are invalid
- Object / entry description does not match with the specification</PostCondition>
					<ProposalForSolution>- Define the missing objects
- correct object / entry description</ProposalForSolution>
					<References>
						<Reference Specification="ETG.5003.2011"></Reference>
					</References>
					<Mandatory>true</Mandatory>
				</Description>
				<TestStep Name="InitResult">
					<SetVariable Target="strResult">EmptyString</SetVariable>
				</TestStep>
				<TestStep Name="CheckIfOdAvailable">
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Mailbox</Value1>
							<Value2>false</Value2>
							<SkipCase Id="1">DuT does not support mailbox.</SkipCase>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Mailbox.CoE</Value1>
							<Value2>false</Value2>
							<SkipCase Id="2">DuT does not support CoE.</SkipCase>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Mailbox.CoE.SdoInfo</Value1>
							<Value2>false</Value2>
							<SkipCase Id="3">DuT does not support SDO Info.</SkipCase>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="InitAtLeastOneProfileMatch">
					<SetVariable Target="bAtLeastOneModuleMatch">false</SetVariable>
				</TestStep>
				<TestStep Name="GetCurrentProfileList">
					<SizeOf UInt32Var="u32Tmp">arrOnlineProfiles</SizeOf>
					<Compare>
						<Equal>
							<Value1>u32Tmp</Value1>
							<Value2>0</Value2>
							<CallTestFunction Name="GetCurrentProfileList">
								<Parameter>"online"</Parameter>
								<Parameter>"SafeOP"</Parameter>
								<OutParameter>arrOnlineProfiles</OutParameter>
							</CallTestFunction>
						</Equal>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>u32Tmp</Value1>
							<Value2>0</Value2>
							<WriteLine Id="4" Param0="arrOnlineProfiles" Level="Verbose">Use previously created profile list ({0})</WriteLine>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep>
					<SizeOf UInt32Var="u32Tmp">arrOnlineProfiles</SizeOf>
				</TestStep>
				<TestStep>
					<InitArray TargetArray="arrCurrentProfiles" Length="u32Tmp"></InitArray>
				</TestStep>
				<TestStep>
					<CopyArray>
						<SourceArray>arrOnlineProfiles</SourceArray>
						<DestinationArray>arrCurrentProfiles</DestinationArray>
						<Length>u32Tmp</Length>
					</CopyArray>
				</TestStep>
				<TestStep Name="InitProfileLoopCounter">
					<SetVariable Target="u32ProfileCounter">0</SetVariable>
				</TestStep>
				<TestStep Name="GetProfileArrayLength">
					<SizeOf UInt32Var="u32CurrentProfilesLength">arrCurrentProfiles</SizeOf>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="5" Param0="u32CurrentProfilesLength" Level="Verbose">'{0}' Profile(s) defined online.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>u32CurrentProfilesLength</Value1>
							<Value2>0</Value2>
							<SkipCase Id="6">Skip case | no profile defined.</SkipCase>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="ProfileLoopStart">
					<GetArrayItem SourceArray="arrCurrentProfiles" Target="strTmpString" Index="u32ProfileCounter"></GetArrayItem>
				</TestStep>
				<TestStep Name="CheckProfileInformationString">
					<Compare>
						<Equal>
							<Value1>strTmpString</Value1>
							<Value2>null</Value2>
							<RaiseError Id="7" Param0="u32ProfileCounter">Profile Info element [{0}] is null.</RaiseError>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>strTmpString</Value1>
							<Value2>EmptyString</Value2>
							<RaiseError Id="8" Param0="u32ProfileCounter">Profile Info element [{0}] is an empty string.</RaiseError>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="GetDeviceProfile">
					<CallTestFunction Name="GetDeviceProfile">
						<Parameter>strTmpString</Parameter>
						<OutParameter>uint16CurDeviceProfile</OutParameter>
					</CallTestFunction>
				</TestStep>
				<TestStep Name="GetModuleProfile">
					<CallTestFunction Name="GetModuleProfile">
						<Parameter>strTmpString</Parameter>
						<OutParameter>uint16CurModuleProfile</OutParameter>
					</CallTestFunction>
				</TestStep>
				<TestStep Name="GetSubModuleProfile">
					<CallTestFunction Name="GetSubModuleProfile">
						<Parameter>strTmpString</Parameter>
						<OutParameter>uint16CurSubModuleProfile</OutParameter>
					</CallTestFunction>
				</TestStep>
				<TestStep Name="DumpProfileInfo">
					<Description Id="9" Param0="uint16CurDeviceProfile" Param1="uint16CurModuleProfile" Param2="uint16CurSubModuleProfile" Param3="u32ProfileCounter" Level="Output">Module[{3}] : DeviceProfile '{0}' ; ModuleProfile '{1}' ; SubModuleProfile '{2}'</Description>
					<Compare>
						<Equal>
							<Value1>bIgnoreProfileID</Value1>
							<Value2>true</Value2>
							<GotoStep>IndicateThatAtleastOneModuleMatch</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CompareDeviceProfile">
					<Compare>
						<NotEqual>
							<Value1>uint16CurDeviceProfile</Value1>
							<Value2>5003</Value2>
							<WriteLine Id="10" Param0="uint16CurDeviceProfile" Level="Output">Skip Profile  (Test Device Profile '5003' != Cur Device Profile '{0}')</WriteLine>
						</NotEqual>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>uint16CurDeviceProfile</Value1>
							<Value2>5003</Value2>
							<GotoStep>ProfileLoopEnd</GotoStep>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep Name="CompareModuleProfile">
					<Compare>
						<NotEqual>
							<Value1>uint16CurModuleProfile</Value1>
							<Value2>2011</Value2>
							<WriteLine Id="11" Param0="uint16CurModuleProfile" Level="Output">Skip Profile  (Test Module Profile '2011' != Cur Module Profile '{0}')</WriteLine>
						</NotEqual>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>uint16CurModuleProfile</Value1>
							<Value2>2011</Value2>
							<GotoStep>ProfileLoopEnd</GotoStep>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep Name="CompareSubModuleProfile">
					<Compare>
						<NotEqual>
							<Value1>uint16CurSubModuleProfile</Value1>
							<Value2>0</Value2>
							<WriteLine Id="12" Param0="uint16CurSubModuleProfile" Level="Output">Skip Profile  (Test SubModule Profile '0' != Cur SubModule Profile '{0}')</WriteLine>
						</NotEqual>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>uint16CurSubModuleProfile</Value1>
							<Value2>0</Value2>
							<GotoStep>ProfileLoopEnd</GotoStep>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep Name="IndicateThatAtleastOneModuleMatch">
					<SetVariable Target="bAtLeastOneModuleMatch">true</SetVariable>
				</TestStep>
				<TestStep Name="GetObjectIndexInclOffset">
					<SetVariable Target="u16ObjectIndexInclOffset">#x8003 + (u32ProfileCounter * #x10)</SetVariable>
					<WriteLine Id="13" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : ObjectIndex '0x{0:X}'</WriteLine>
				</TestStep>
				<TestStep Name="LoadDeviceObjectDictionary">
					<Description Id="14" Level="Verbose">Load 'online' object dictionary for testing.</Description>
					<GetObjectDictionary Target="odDeviceObjectdictionary">
						<DictionaryType>Online</DictionaryType>
					</GetObjectDictionary>
					<RaiseErrorOnFailure Id="15">VerifyObject : failed to load online object dictionary.</RaiseErrorOnFailure>
				</TestStep>
				<TestStep Name="SetObjectRequiredLevel">
					<SetVariable Target="bObjectOrEntryRequiredLevel">1</SetVariable>
					<WriteLine Id="16" Param0="u16ObjectIndexInclOffset" Level="Verbose">0x{0:X4} 'Arc Management Config' may be available</WriteLine>
				</TestStep>
				<TestStep Name="CheckIfObjectExists">
					<GetObjectDescription SourceDictionary="odDeviceObjectdictionary" Index="u16ObjectIndexInclOffset" SubIndex="-1"></GetObjectDescription>
					<GotoOnSuccess>CallCheckObjectDescription</GotoOnSuccess>
				</TestStep>
				<TestStep Name="HandleNotExistingObject">
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>2</Value2>
							<WriteLine Id="17" Param0="u16ObjectIndexInclOffset" Level="Warning">The object 0x{0:X4} 'Arc Management Config' does not exists.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>1</Value2>
							<WriteLine Id="18" Param0="u16ObjectIndexInclOffset" Level="Output">The object 0x{0:X4} 'Arc Management Config' does not exists.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>ProfileLoopEnd</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CallCheckObjectDescription">
					<Description Id="19" Param0="u16ObjectIndexInclOffset" Level="Output">Verify the object description 0x{0:X4} 'Arc Management Config'.</Description>
					<CallTestFunction Name="CheckObjectDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"online"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>"Arc Management Config"</Parameter>
						<Parameter>null</Parameter>
						<Parameter>9</Parameter>
						<Parameter>-1</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<GotoStep>ProfileLoopEnd</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="InitEntryBittOffset">
					<SetVariable Target="i32CurrentBitOffset">0</SetVariable>
				</TestStep>
				<TestStep Name="StartSi0">
					<Description Id="20" Level="Output">Start validate SubIndex0</Description>
					<WriteLine Id="21" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : Subindex '0x{0:X}.0'</WriteLine>
				</TestStep>
				<TestStep Name="CallSi0CheckEntryDescription">
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"online"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>0</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>null</Parameter>
						<Parameter>5</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>null</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>null</Parameter>
						<Parameter>null</Parameter>
						<Parameter>null</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>8</Parameter>
						<Parameter>i32CurrentBitOffset</Parameter>
						<Parameter>true</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="EndSi0">
					<SetVariable Target="i32CurrentBitOffset">16</SetVariable>
				</TestStep>
				<TestStep Name="StartSi1">
					<Description Id="22" Level="Output">Start validate SubIndex1</Description>
					<WriteLine Id="23" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : Subindex '0x{0:X}.1'</WriteLine>
				</TestStep>
				<TestStep Name="SetSi1RequiredLevel">
					<SetVariable Target="bObjectOrEntryRequiredLevel">1</SetVariable>
					<WriteLine Id="24" Param0="u16ObjectIndexInclOffset" Level="Verbose">0x{0:X4}.1 'Arc Detection Mode' may be available</WriteLine>
				</TestStep>
				<TestStep Name="CheckIfSi1Exists">
					<GetObjectDescription SourceDictionary="odDeviceObjectdictionary" Index="u16ObjectIndexInclOffset" SubIndex="1">
						<Type>u16DataType</Type>
					</GetObjectDescription>
					<GotoOnFailure>HandleNotExistingSi1</GotoOnFailure>
				</TestStep>
				<TestStep>
					<Compare>
						<NotEqual>
							<Value1>u16DataType</Value1>
							<Value2>0</Value2>
							<GotoStep>CallSi1CheckEntryDescription</GotoStep>
						</NotEqual>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="25" Param0="u16ObjectIndexInclOffset" Level="Verbose">The entry 0x{0:X4}.1 is defined as a padding entry.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>EndSi1</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="HandleNotExistingSi1">
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="26" Param0="u16ObjectIndexInclOffset" Level="Output">The entry 0x{0:X4}.1 does not exists.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>EndSi1</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CallSi1CheckEntryDescription">
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"online"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>1</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>"Arc Detection Mode"</Parameter>
						<Parameter>5</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>null</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>8</Parameter>
						<Parameter>i32CurrentBitOffset</Parameter>
						<Parameter>true</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="EndSi1">
					<SetVariable Target="i32CurrentBitOffset">-1</SetVariable>
				</TestStep>
				<TestStep Name="StartSi2">
					<Description Id="27" Level="Output">Start validate SubIndex2</Description>
					<WriteLine Id="28" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : Subindex '0x{0:X}.2'</WriteLine>
				</TestStep>
				<TestStep Name="SetSi2RequiredLevel">
					<SetVariable Target="bObjectOrEntryRequiredLevel">1</SetVariable>
					<WriteLine Id="29" Param0="u16ObjectIndexInclOffset" Level="Verbose">0x{0:X4}.2 'Arc Reaction Mode' may be available</WriteLine>
				</TestStep>
				<TestStep Name="CheckIfSi2Exists">
					<GetObjectDescription SourceDictionary="odDeviceObjectdictionary" Index="u16ObjectIndexInclOffset" SubIndex="2">
						<Type>u16DataType</Type>
					</GetObjectDescription>
					<GotoOnFailure>HandleNotExistingSi2</GotoOnFailure>
				</TestStep>
				<TestStep>
					<Compare>
						<NotEqual>
							<Value1>u16DataType</Value1>
							<Value2>0</Value2>
							<GotoStep>CallSi2CheckEntryDescription</GotoStep>
						</NotEqual>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="30" Param0="u16ObjectIndexInclOffset" Level="Verbose">The entry 0x{0:X4}.2 is defined as a padding entry.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>EndSi2</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="HandleNotExistingSi2">
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="31" Param0="u16ObjectIndexInclOffset" Level="Output">The entry 0x{0:X4}.2 does not exists.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>EndSi2</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CallSi2CheckEntryDescription">
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"online"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>2</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>"Arc Reaction Mode"</Parameter>
						<Parameter>5</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>null</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>8</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>true</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="EndSi2"></TestStep>
				<TestStep Name="StartSi3">
					<Description Id="32" Level="Output">Start validate SubIndex3</Description>
					<WriteLine Id="33" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : Subindex '0x{0:X}.3'</WriteLine>
				</TestStep>
				<TestStep Name="SetSi3RequiredLevel">
					<SetVariable Target="bObjectOrEntryRequiredLevel">1</SetVariable>
					<WriteLine Id="34" Param0="u16ObjectIndexInclOffset" Level="Verbose">0x{0:X4}.3 'Arc Synchronization' may be available</WriteLine>
				</TestStep>
				<TestStep Name="CheckIfSi3Exists">
					<GetObjectDescription SourceDictionary="odDeviceObjectdictionary" Index="u16ObjectIndexInclOffset" SubIndex="3">
						<Type>u16DataType</Type>
					</GetObjectDescription>
					<GotoOnFailure>HandleNotExistingSi3</GotoOnFailure>
				</TestStep>
				<TestStep>
					<Compare>
						<NotEqual>
							<Value1>u16DataType</Value1>
							<Value2>0</Value2>
							<GotoStep>CallSi3CheckEntryDescription</GotoStep>
						</NotEqual>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="35" Param0="u16ObjectIndexInclOffset" Level="Verbose">The entry 0x{0:X4}.3 is defined as a padding entry.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>EndSi3</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="HandleNotExistingSi3">
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="36" Param0="u16ObjectIndexInclOffset" Level="Output">The entry 0x{0:X4}.3 does not exists.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>EndSi3</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CallSi3CheckEntryDescription">
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"online"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>3</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>"Arc Synchronization"</Parameter>
						<Parameter>5</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>null</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>00</Parameter>
						<Parameter>01</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>8</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>true</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="EndSi3"></TestStep>
				<TestStep Name="StartSi4">
					<Description Id="37" Level="Output">Start validate SubIndex4</Description>
					<WriteLine Id="38" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : Subindex '0x{0:X}.4'</WriteLine>
				</TestStep>
				<TestStep Name="SetSi4RequiredLevel">
					<SetVariable Target="bObjectOrEntryRequiredLevel">1</SetVariable>
					<WriteLine Id="39" Param0="u16ObjectIndexInclOffset" Level="Verbose">0x{0:X4}.4 'Arc Management Delay' may be available</WriteLine>
				</TestStep>
				<TestStep Name="CheckIfSi4Exists">
					<GetObjectDescription SourceDictionary="odDeviceObjectdictionary" Index="u16ObjectIndexInclOffset" SubIndex="4">
						<Type>u16DataType</Type>
					</GetObjectDescription>
					<GotoOnFailure>HandleNotExistingSi4</GotoOnFailure>
				</TestStep>
				<TestStep>
					<Compare>
						<NotEqual>
							<Value1>u16DataType</Value1>
							<Value2>0</Value2>
							<GotoStep>CallSi4CheckEntryDescription</GotoStep>
						</NotEqual>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="40" Param0="u16ObjectIndexInclOffset" Level="Verbose">The entry 0x{0:X4}.4 is defined as a padding entry.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>EndSi4</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="HandleNotExistingSi4">
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="41" Param0="u16ObjectIndexInclOffset" Level="Output">The entry 0x{0:X4}.4 does not exists.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>EndSi4</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CallSi4CheckEntryDescription">
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"online"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>4</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>"Arc Management Delay"</Parameter>
						<Parameter>6</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>null</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>16</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>true</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="EndSi4"></TestStep>
				<TestStep Name="StartSi5">
					<Description Id="42" Level="Output">Start validate SubIndex5</Description>
					<WriteLine Id="43" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : Subindex '0x{0:X}.5'</WriteLine>
				</TestStep>
				<TestStep Name="SetSi5RequiredLevel">
					<SetVariable Target="bObjectOrEntryRequiredLevel">1</SetVariable>
					<WriteLine Id="44" Param0="u16ObjectIndexInclOffset" Level="Verbose">0x{0:X4}.5 'Arc Handling Delay' may be available</WriteLine>
				</TestStep>
				<TestStep Name="CheckIfSi5Exists">
					<GetObjectDescription SourceDictionary="odDeviceObjectdictionary" Index="u16ObjectIndexInclOffset" SubIndex="5">
						<Type>u16DataType</Type>
					</GetObjectDescription>
					<GotoOnFailure>HandleNotExistingSi5</GotoOnFailure>
				</TestStep>
				<TestStep>
					<Compare>
						<NotEqual>
							<Value1>u16DataType</Value1>
							<Value2>0</Value2>
							<GotoStep>CallSi5CheckEntryDescription</GotoStep>
						</NotEqual>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="45" Param0="u16ObjectIndexInclOffset" Level="Verbose">The entry 0x{0:X4}.5 is defined as a padding entry.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>EndSi5</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="HandleNotExistingSi5">
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="46" Param0="u16ObjectIndexInclOffset" Level="Output">The entry 0x{0:X4}.5 does not exists.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>EndSi5</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CallSi5CheckEntryDescription">
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"online"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>5</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>"Arc Handling Delay"</Parameter>
						<Parameter>6</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>null</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>16</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>true</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="EndSi5"></TestStep>
				<TestStep Name="StartSi6">
					<Description Id="47" Level="Output">Start validate SubIndex6</Description>
					<WriteLine Id="48" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : Subindex '0x{0:X}.6'</WriteLine>
				</TestStep>
				<TestStep Name="SetSi6RequiredLevel">
					<SetVariable Target="bObjectOrEntryRequiredLevel">1</SetVariable>
					<WriteLine Id="49" Param0="u16ObjectIndexInclOffset" Level="Verbose">0x{0:X4}.6 'Arc Suppression Time' may be available</WriteLine>
				</TestStep>
				<TestStep Name="CheckIfSi6Exists">
					<GetObjectDescription SourceDictionary="odDeviceObjectdictionary" Index="u16ObjectIndexInclOffset" SubIndex="6">
						<Type>u16DataType</Type>
					</GetObjectDescription>
					<GotoOnFailure>HandleNotExistingSi6</GotoOnFailure>
				</TestStep>
				<TestStep>
					<Compare>
						<NotEqual>
							<Value1>u16DataType</Value1>
							<Value2>0</Value2>
							<GotoStep>CallSi6CheckEntryDescription</GotoStep>
						</NotEqual>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="50" Param0="u16ObjectIndexInclOffset" Level="Verbose">The entry 0x{0:X4}.6 is defined as a padding entry.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>EndSi6</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="HandleNotExistingSi6">
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="51" Param0="u16ObjectIndexInclOffset" Level="Output">The entry 0x{0:X4}.6 does not exists.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>EndSi6</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CallSi6CheckEntryDescription">
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"online"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>6</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>"Arc Suppression Time"</Parameter>
						<Parameter>6</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>null</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>16</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>true</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="EndSi6"></TestStep>
				<TestStep Name="StartSi7">
					<Description Id="52" Level="Output">Start validate SubIndex7</Description>
					<WriteLine Id="53" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : Subindex '0x{0:X}.7'</WriteLine>
				</TestStep>
				<TestStep Name="SetSi7RequiredLevel">
					<SetVariable Target="bObjectOrEntryRequiredLevel">1</SetVariable>
					<WriteLine Id="54" Param0="u16ObjectIndexInclOffset" Level="Verbose">0x{0:X4}.7 'Arc Detection Delay Time' may be available</WriteLine>
				</TestStep>
				<TestStep Name="CheckIfSi7Exists">
					<GetObjectDescription SourceDictionary="odDeviceObjectdictionary" Index="u16ObjectIndexInclOffset" SubIndex="7">
						<Type>u16DataType</Type>
					</GetObjectDescription>
					<GotoOnFailure>HandleNotExistingSi7</GotoOnFailure>
				</TestStep>
				<TestStep>
					<Compare>
						<NotEqual>
							<Value1>u16DataType</Value1>
							<Value2>0</Value2>
							<GotoStep>CallSi7CheckEntryDescription</GotoStep>
						</NotEqual>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="55" Param0="u16ObjectIndexInclOffset" Level="Verbose">The entry 0x{0:X4}.7 is defined as a padding entry.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>EndSi7</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="HandleNotExistingSi7">
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="56" Param0="u16ObjectIndexInclOffset" Level="Output">The entry 0x{0:X4}.7 does not exists.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>EndSi7</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CallSi7CheckEntryDescription">
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"online"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>7</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>"Arc Detection Delay Time"</Parameter>
						<Parameter>6</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>null</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>16</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>true</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="EndSi7"></TestStep>
				<TestStep Name="StartSi8">
					<Description Id="57" Level="Output">Start validate SubIndex8</Description>
					<WriteLine Id="58" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : Subindex '0x{0:X}.8'</WriteLine>
				</TestStep>
				<TestStep Name="SetSi8RequiredLevel">
					<SetVariable Target="bObjectOrEntryRequiredLevel">1</SetVariable>
					<WriteLine Id="59" Param0="u16ObjectIndexInclOffset" Level="Verbose">0x{0:X4}.8 'Arc Rate Limit' may be available</WriteLine>
				</TestStep>
				<TestStep Name="CheckIfSi8Exists">
					<GetObjectDescription SourceDictionary="odDeviceObjectdictionary" Index="u16ObjectIndexInclOffset" SubIndex="8">
						<Type>u16DataType</Type>
					</GetObjectDescription>
					<GotoOnFailure>HandleNotExistingSi8</GotoOnFailure>
				</TestStep>
				<TestStep>
					<Compare>
						<NotEqual>
							<Value1>u16DataType</Value1>
							<Value2>0</Value2>
							<GotoStep>CallSi8CheckEntryDescription</GotoStep>
						</NotEqual>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="60" Param0="u16ObjectIndexInclOffset" Level="Verbose">The entry 0x{0:X4}.8 is defined as a padding entry.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>EndSi8</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="HandleNotExistingSi8">
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="61" Param0="u16ObjectIndexInclOffset" Level="Output">The entry 0x{0:X4}.8 does not exists.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>EndSi8</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CallSi8CheckEntryDescription">
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"online"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>8</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>"Arc Rate Limit"</Parameter>
						<Parameter>6</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>null</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>16</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>true</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="EndSi8"></TestStep>
				<TestStep Name="CheckReservedEntryRange_9_to_255">
					<Description Id="62" Level="Output">Start check reserved entry range 9 to 255</Description>
					<CallTestFunction Name="CheckReservedEntryRange">
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>9</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>odDeviceObjectdictionary</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="ProfileLoopEnd">
					<Compare>
						<Equal>
							<Value1>bAtLeastOneModuleMatch</Value1>
							<Value2>false</Value2>
							<GotoStep>HandleAbortTestCaseOnFirstError</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="HandleAbortTestCaseOnFirstError">
					<Compare>
						<Equal>
							<Value1>bAbortTestCaseOnFirstError</Value1>
							<Value2>false</Value2>
							<GotoStep>ProfileLoopIncrement</GotoStep>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>strResult</Value1>
							<Value2>EmptyString</Value2>
							<GotoStep>ProfileLoopIncrement</GotoStep>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="63" Level="Output">Object verification for all following modules abort because an error was already detected for the current module.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>END</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="ProfileLoopIncrement">
					<SetVariable Target="u32ProfileCounter">u32ProfileCounter + 1</SetVariable>
					<Compare>
						<Greater>
							<Value1>u32CurrentProfilesLength</Value1>
							<Value2>u32ProfileCounter</Value2>
							<GotoStep>ProfileLoopStart</GotoStep>
						</Greater>
					</Compare>
				</TestStep>
				<TestStep Name="END">
					<Compare>
						<NotEqual>
							<Value1>bAtLeastOneModuleMatch</Value1>
							<Value2>true</Value2>
							<SkipCase Id="64">SKIP TEST(no module/channel supports the current profile)</SkipCase>
						</NotEqual>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bDEBUG</Value1>
							<Value2>true</Value2>
							<WriteLine Id="65" Param0="strResult" Level="Verbose">DEBUG | Result : '{0}'.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>strResult</Value1>
							<Value2>EmptyString</Value2>
							<ReturnSuccess Id="66">Test succeed</ReturnSuccess>
						</Equal>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>strResult</Value1>
							<Value2>EmptyString</Value2>
							<RaiseError Id="67"></RaiseError>
						</NotEqual>
					</Compare>
				</TestStep>
			</TestCase>
			<TestCase Name="offline | 0x8004 (Frequency Tuning Frequencies Config)" CaseId="9">
				<Description>
					<PreCondition>- The device profile is 5003
- The module profile is 2011
- The submodule profile is 0</PreCondition>
					<Action>- Iterate over all offline defined modules/channels and if the PreCondition matches the following operations are done:
- Get the offline description of object 0x8004(+module specific offset) 'Frequency Tuning Frequencies Config' and all entries
 Check:
    (Name)
    BitSize
    DataType
    Rx / Tx mappable
    Default Data
    MinData
    Flags       </Action>
					<PostCondition>Error if
- mandatory object / entry is not defined
- an optional object exists and the entries are invalid
- Object / entry description does not match with the specification</PostCondition>
					<ProposalForSolution>- Define the missing objects
- correct object / entry description</ProposalForSolution>
					<References>
						<Reference Specification="ETG.5003.2011"></Reference>
					</References>
					<Mandatory>true</Mandatory>
				</Description>
				<TestStep Name="InitResult">
					<SetVariable Target="strResult">EmptyString</SetVariable>
				</TestStep>
				<TestStep Name="CheckIfOdAvailable">
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Mailbox</Value1>
							<Value2>false</Value2>
							<SkipCase Id="1">DuT does not support mailbox.</SkipCase>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Mailbox.CoE</Value1>
							<Value2>false</Value2>
							<SkipCase Id="2">DuT does not support CoE.</SkipCase>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep>
					<GetObjectDictionary Target="odDeviceObjectdictionary">
						<DictionaryType>Offline</DictionaryType>
					</GetObjectDictionary>
					<SkipOnFailure Id="3">No offline object dictionary defined.</SkipOnFailure>
				</TestStep>
				<TestStep>
					<GetObjectList Count="u32Tmp" Target="odDeviceObjectdictionaryList" SourceDict="odDeviceObjectdictionary"></GetObjectList>
					<Compare>
						<Equal>
							<Value1>u32Tmp</Value1>
							<Value2>0</Value2>
							<SkipCase Id="4">No offline object dictionary defined.</SkipCase>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="InitAtLeastOneProfileMatch">
					<SetVariable Target="bAtLeastOneModuleMatch">false</SetVariable>
				</TestStep>
				<TestStep Name="GetCurrentProfileList">
					<SizeOf UInt32Var="u32Tmp">arrOfflineProfiles</SizeOf>
					<Compare>
						<Equal>
							<Value1>u32Tmp</Value1>
							<Value2>0</Value2>
							<CallTestFunction Name="GetCurrentProfileList">
								<Parameter>"offline"</Parameter>
								<Parameter>"SafeOP"</Parameter>
								<OutParameter>arrOfflineProfiles</OutParameter>
							</CallTestFunction>
						</Equal>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>u32Tmp</Value1>
							<Value2>0</Value2>
							<WriteLine Id="5" Param0="arrOfflineProfiles" Level="Verbose">Use previously created profile list ({0})</WriteLine>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep>
					<SizeOf UInt32Var="u32Tmp">arrOfflineProfiles</SizeOf>
				</TestStep>
				<TestStep>
					<InitArray TargetArray="arrCurrentProfiles" Length="u32Tmp"></InitArray>
				</TestStep>
				<TestStep>
					<CopyArray>
						<SourceArray>arrOfflineProfiles</SourceArray>
						<DestinationArray>arrCurrentProfiles</DestinationArray>
						<Length>u32Tmp</Length>
					</CopyArray>
				</TestStep>
				<TestStep Name="InitProfileLoopCounter">
					<SetVariable Target="u32ProfileCounter">0</SetVariable>
				</TestStep>
				<TestStep Name="GetProfileArrayLength">
					<SizeOf UInt32Var="u32CurrentProfilesLength">arrCurrentProfiles</SizeOf>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="6" Param0="u32CurrentProfilesLength" Level="Verbose">'{0}' Profile(s) defined offline.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>u32CurrentProfilesLength</Value1>
							<Value2>0</Value2>
							<SkipCase Id="7">Skip case | no profile defined.</SkipCase>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="ProfileLoopStart">
					<GetArrayItem SourceArray="arrCurrentProfiles" Target="strTmpString" Index="u32ProfileCounter"></GetArrayItem>
				</TestStep>
				<TestStep Name="CheckProfileInformationString">
					<Compare>
						<Equal>
							<Value1>strTmpString</Value1>
							<Value2>null</Value2>
							<RaiseError Id="8" Param0="u32ProfileCounter">Profile Info element [{0}] is null.</RaiseError>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>strTmpString</Value1>
							<Value2>EmptyString</Value2>
							<RaiseError Id="9" Param0="u32ProfileCounter">Profile Info element [{0}] is an empty string.</RaiseError>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="GetDeviceProfile">
					<CallTestFunction Name="GetDeviceProfile">
						<Parameter>strTmpString</Parameter>
						<OutParameter>uint16CurDeviceProfile</OutParameter>
					</CallTestFunction>
				</TestStep>
				<TestStep Name="GetModuleProfile">
					<CallTestFunction Name="GetModuleProfile">
						<Parameter>strTmpString</Parameter>
						<OutParameter>uint16CurModuleProfile</OutParameter>
					</CallTestFunction>
				</TestStep>
				<TestStep Name="GetSubModuleProfile">
					<CallTestFunction Name="GetSubModuleProfile">
						<Parameter>strTmpString</Parameter>
						<OutParameter>uint16CurSubModuleProfile</OutParameter>
					</CallTestFunction>
				</TestStep>
				<TestStep Name="DumpProfileInfo">
					<Description Id="10" Param0="uint16CurDeviceProfile" Param1="uint16CurModuleProfile" Param2="uint16CurSubModuleProfile" Param3="u32ProfileCounter" Level="Output">Module[{3}] : DeviceProfile '{0}' ; ModuleProfile '{1}' ; SubModuleProfile '{2}'</Description>
					<Compare>
						<Equal>
							<Value1>bIgnoreProfileID</Value1>
							<Value2>true</Value2>
							<GotoStep>IndicateThatAtleastOneModuleMatch</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CompareDeviceProfile">
					<Compare>
						<NotEqual>
							<Value1>uint16CurDeviceProfile</Value1>
							<Value2>5003</Value2>
							<WriteLine Id="11" Param0="uint16CurDeviceProfile" Level="Output">Skip Profile  (Test Device Profile '5003' != Cur Device Profile '{0}')</WriteLine>
						</NotEqual>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>uint16CurDeviceProfile</Value1>
							<Value2>5003</Value2>
							<GotoStep>ProfileLoopEnd</GotoStep>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep Name="CompareModuleProfile">
					<Compare>
						<NotEqual>
							<Value1>uint16CurModuleProfile</Value1>
							<Value2>2011</Value2>
							<WriteLine Id="12" Param0="uint16CurModuleProfile" Level="Output">Skip Profile  (Test Module Profile '2011' != Cur Module Profile '{0}')</WriteLine>
						</NotEqual>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>uint16CurModuleProfile</Value1>
							<Value2>2011</Value2>
							<GotoStep>ProfileLoopEnd</GotoStep>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep Name="CompareSubModuleProfile">
					<Compare>
						<NotEqual>
							<Value1>uint16CurSubModuleProfile</Value1>
							<Value2>0</Value2>
							<WriteLine Id="13" Param0="uint16CurSubModuleProfile" Level="Output">Skip Profile  (Test SubModule Profile '0' != Cur SubModule Profile '{0}')</WriteLine>
						</NotEqual>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>uint16CurSubModuleProfile</Value1>
							<Value2>0</Value2>
							<GotoStep>ProfileLoopEnd</GotoStep>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep Name="IndicateThatAtleastOneModuleMatch">
					<SetVariable Target="bAtLeastOneModuleMatch">true</SetVariable>
				</TestStep>
				<TestStep Name="GetObjectIndexInclOffset">
					<SetVariable Target="u16ObjectIndexInclOffset">#x8004 + (u32ProfileCounter * #x10)</SetVariable>
					<WriteLine Id="14" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : ObjectIndex '0x{0:X}'</WriteLine>
				</TestStep>
				<TestStep Name="LoadDeviceObjectDictionary">
					<Description Id="15" Level="Verbose">Load 'offline' object dictionary for testing.</Description>
					<GetObjectDictionary Target="odDeviceObjectdictionary">
						<DictionaryType>Offline</DictionaryType>
					</GetObjectDictionary>
					<RaiseErrorOnFailure Id="16">VerifyObject : failed to load offline object dictionary.</RaiseErrorOnFailure>
				</TestStep>
				<TestStep Name="SetObjectRequiredLevel">
					<SetVariable Target="bObjectOrEntryRequiredLevel">1</SetVariable>
					<WriteLine Id="17" Param0="u16ObjectIndexInclOffset" Level="Verbose">0x{0:X4} 'Frequency Tuning Frequencies Config' may be available</WriteLine>
				</TestStep>
				<TestStep Name="CheckIfObjectExists">
					<GetObjectDescription SourceDictionary="odDeviceObjectdictionary" Index="u16ObjectIndexInclOffset" SubIndex="-1"></GetObjectDescription>
					<GotoOnSuccess>CallCheckObjectDescription</GotoOnSuccess>
				</TestStep>
				<TestStep Name="HandleNotExistingObject">
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>2</Value2>
							<WriteLine Id="18" Param0="u16ObjectIndexInclOffset" Level="Warning">The object 0x{0:X4} 'Frequency Tuning Frequencies Config' does not exists.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>1</Value2>
							<WriteLine Id="19" Param0="u16ObjectIndexInclOffset" Level="Output">The object 0x{0:X4} 'Frequency Tuning Frequencies Config' does not exists.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>ProfileLoopEnd</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CallCheckObjectDescription">
					<Description Id="20" Param0="u16ObjectIndexInclOffset" Level="Output">Verify the object description 0x{0:X4} 'Frequency Tuning Frequencies Config'.</Description>
					<CallTestFunction Name="CheckObjectDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"offline"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>"Frequency Tuning Frequencies Config"</Parameter>
						<Parameter>null</Parameter>
						<Parameter>9</Parameter>
						<Parameter>-1</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<GotoStep>ProfileLoopEnd</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="InitEntryBittOffset">
					<SetVariable Target="i32CurrentBitOffset">0</SetVariable>
				</TestStep>
				<TestStep Name="StartSi0">
					<Description Id="21" Level="Output">Start validate SubIndex0</Description>
					<WriteLine Id="22" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : Subindex '0x{0:X}.0'</WriteLine>
				</TestStep>
				<TestStep Name="CallSi0CheckEntryDescription">
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"offline"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>0</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>null</Parameter>
						<Parameter>5</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>null</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>null</Parameter>
						<Parameter>null</Parameter>
						<Parameter>null</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>8</Parameter>
						<Parameter>i32CurrentBitOffset</Parameter>
						<Parameter>true</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="EndSi0">
					<SetVariable Target="i32CurrentBitOffset">16</SetVariable>
				</TestStep>
				<TestStep Name="StartSi1">
					<Description Id="23" Level="Output">Start validate SubIndex1</Description>
					<WriteLine Id="24" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : Subindex '0x{0:X}.1'</WriteLine>
				</TestStep>
				<TestStep Name="SetSi1RequiredLevel">
					<SetVariable Target="bObjectOrEntryRequiredLevel">1</SetVariable>
					<WriteLine Id="25" Param0="u16ObjectIndexInclOffset" Level="Verbose">0x{0:X4}.1 'Fixed Frequency' may be available</WriteLine>
				</TestStep>
				<TestStep Name="CheckIfSi1Exists">
					<GetObjectDescription SourceDictionary="odDeviceObjectdictionary" Index="u16ObjectIndexInclOffset" SubIndex="1">
						<Type>u16DataType</Type>
					</GetObjectDescription>
					<GotoOnFailure>HandleNotExistingSi1</GotoOnFailure>
				</TestStep>
				<TestStep>
					<Compare>
						<NotEqual>
							<Value1>u16DataType</Value1>
							<Value2>0</Value2>
							<GotoStep>CallSi1CheckEntryDescription</GotoStep>
						</NotEqual>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="26" Param0="u16ObjectIndexInclOffset" Level="Verbose">The entry 0x{0:X4}.1 is defined as a padding entry.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>EndSi1</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="HandleNotExistingSi1">
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="27" Param0="u16ObjectIndexInclOffset" Level="Output">The entry 0x{0:X4}.1 does not exists.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>EndSi1</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CallSi1CheckEntryDescription">
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"offline"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>1</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>"Fixed Frequency"</Parameter>
						<Parameter>8</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>null</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>32</Parameter>
						<Parameter>i32CurrentBitOffset</Parameter>
						<Parameter>true</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="EndSi1">
					<SetVariable Target="i32CurrentBitOffset">-1</SetVariable>
				</TestStep>
				<TestStep Name="StartSi2">
					<Description Id="28" Level="Output">Start validate SubIndex2</Description>
					<WriteLine Id="29" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : Subindex '0x{0:X}.2'</WriteLine>
				</TestStep>
				<TestStep Name="SetSi2RequiredLevel">
					<SetVariable Target="bObjectOrEntryRequiredLevel">1</SetVariable>
					<WriteLine Id="30" Param0="u16ObjectIndexInclOffset" Level="Verbose">0x{0:X4}.2 'Starting Tuning Frequency' may be available</WriteLine>
				</TestStep>
				<TestStep Name="CheckIfSi2Exists">
					<GetObjectDescription SourceDictionary="odDeviceObjectdictionary" Index="u16ObjectIndexInclOffset" SubIndex="2">
						<Type>u16DataType</Type>
					</GetObjectDescription>
					<GotoOnFailure>HandleNotExistingSi2</GotoOnFailure>
				</TestStep>
				<TestStep>
					<Compare>
						<NotEqual>
							<Value1>u16DataType</Value1>
							<Value2>0</Value2>
							<GotoStep>CallSi2CheckEntryDescription</GotoStep>
						</NotEqual>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="31" Param0="u16ObjectIndexInclOffset" Level="Verbose">The entry 0x{0:X4}.2 is defined as a padding entry.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>EndSi2</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="HandleNotExistingSi2">
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="32" Param0="u16ObjectIndexInclOffset" Level="Output">The entry 0x{0:X4}.2 does not exists.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>EndSi2</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CallSi2CheckEntryDescription">
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"offline"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>2</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>"Starting Tuning Frequency"</Parameter>
						<Parameter>8</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>null</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>32</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>true</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="EndSi2"></TestStep>
				<TestStep Name="StartSi3">
					<Description Id="33" Level="Output">Start validate SubIndex3</Description>
					<WriteLine Id="34" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : Subindex '0x{0:X}.3'</WriteLine>
				</TestStep>
				<TestStep Name="SetSi3RequiredLevel">
					<SetVariable Target="bObjectOrEntryRequiredLevel">1</SetVariable>
					<WriteLine Id="35" Param0="u16ObjectIndexInclOffset" Level="Verbose">0x{0:X4}.3 'Minimum Tuning Frequency' may be available</WriteLine>
				</TestStep>
				<TestStep Name="CheckIfSi3Exists">
					<GetObjectDescription SourceDictionary="odDeviceObjectdictionary" Index="u16ObjectIndexInclOffset" SubIndex="3">
						<Type>u16DataType</Type>
					</GetObjectDescription>
					<GotoOnFailure>HandleNotExistingSi3</GotoOnFailure>
				</TestStep>
				<TestStep>
					<Compare>
						<NotEqual>
							<Value1>u16DataType</Value1>
							<Value2>0</Value2>
							<GotoStep>CallSi3CheckEntryDescription</GotoStep>
						</NotEqual>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="36" Param0="u16ObjectIndexInclOffset" Level="Verbose">The entry 0x{0:X4}.3 is defined as a padding entry.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>EndSi3</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="HandleNotExistingSi3">
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="37" Param0="u16ObjectIndexInclOffset" Level="Output">The entry 0x{0:X4}.3 does not exists.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>EndSi3</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CallSi3CheckEntryDescription">
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"offline"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>3</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>"Minimum Tuning Frequency"</Parameter>
						<Parameter>8</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>null</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>32</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>true</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="EndSi3"></TestStep>
				<TestStep Name="StartSi4">
					<Description Id="38" Level="Output">Start validate SubIndex4</Description>
					<WriteLine Id="39" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : Subindex '0x{0:X}.4'</WriteLine>
				</TestStep>
				<TestStep Name="SetSi4RequiredLevel">
					<SetVariable Target="bObjectOrEntryRequiredLevel">1</SetVariable>
					<WriteLine Id="40" Param0="u16ObjectIndexInclOffset" Level="Verbose">0x{0:X4}.4 'Maximum Tuning Frequency' may be available</WriteLine>
				</TestStep>
				<TestStep Name="CheckIfSi4Exists">
					<GetObjectDescription SourceDictionary="odDeviceObjectdictionary" Index="u16ObjectIndexInclOffset" SubIndex="4">
						<Type>u16DataType</Type>
					</GetObjectDescription>
					<GotoOnFailure>HandleNotExistingSi4</GotoOnFailure>
				</TestStep>
				<TestStep>
					<Compare>
						<NotEqual>
							<Value1>u16DataType</Value1>
							<Value2>0</Value2>
							<GotoStep>CallSi4CheckEntryDescription</GotoStep>
						</NotEqual>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="41" Param0="u16ObjectIndexInclOffset" Level="Verbose">The entry 0x{0:X4}.4 is defined as a padding entry.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>EndSi4</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="HandleNotExistingSi4">
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="42" Param0="u16ObjectIndexInclOffset" Level="Output">The entry 0x{0:X4}.4 does not exists.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>EndSi4</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CallSi4CheckEntryDescription">
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"offline"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>4</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>"Maximum Tuning Frequency"</Parameter>
						<Parameter>8</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>null</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>32</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>true</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="EndSi4"></TestStep>
				<TestStep Name="CheckReservedEntryRange_5_to_255">
					<Description Id="43" Level="Output">Start check reserved entry range 5 to 255</Description>
					<CallTestFunction Name="CheckReservedEntryRange">
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>5</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>odDeviceObjectdictionary</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="ProfileLoopEnd">
					<Compare>
						<Equal>
							<Value1>bAtLeastOneModuleMatch</Value1>
							<Value2>false</Value2>
							<GotoStep>HandleAbortTestCaseOnFirstError</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="HandleAbortTestCaseOnFirstError">
					<Compare>
						<Equal>
							<Value1>bAbortTestCaseOnFirstError</Value1>
							<Value2>false</Value2>
							<GotoStep>ProfileLoopIncrement</GotoStep>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>strResult</Value1>
							<Value2>EmptyString</Value2>
							<GotoStep>ProfileLoopIncrement</GotoStep>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="44" Level="Output">Object verification for all following modules abort because an error was already detected for the current module.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>END</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="ProfileLoopIncrement">
					<SetVariable Target="u32ProfileCounter">u32ProfileCounter + 1</SetVariable>
					<Compare>
						<Greater>
							<Value1>u32CurrentProfilesLength</Value1>
							<Value2>u32ProfileCounter</Value2>
							<GotoStep>ProfileLoopStart</GotoStep>
						</Greater>
					</Compare>
				</TestStep>
				<TestStep Name="END">
					<Compare>
						<NotEqual>
							<Value1>bAtLeastOneModuleMatch</Value1>
							<Value2>true</Value2>
							<SkipCase Id="45">SKIP TEST(no module/channel supports the current profile)</SkipCase>
						</NotEqual>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bDEBUG</Value1>
							<Value2>true</Value2>
							<WriteLine Id="46" Param0="strResult" Level="Verbose">DEBUG | Result : '{0}'.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>strResult</Value1>
							<Value2>EmptyString</Value2>
							<ReturnSuccess Id="47">Test succeed</ReturnSuccess>
						</Equal>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>strResult</Value1>
							<Value2>EmptyString</Value2>
							<RaiseError Id="48"></RaiseError>
						</NotEqual>
					</Compare>
				</TestStep>
			</TestCase>
			<TestCase Name="online | 0x8004 (Frequency Tuning Frequencies Config)" CaseId="10">
				<Description>
					<PreCondition>- The device profile is 5003
- The module profile is 2011
- The submodule profile is 0</PreCondition>
					<Action>- Iterate over all online defined modules/channels and if the PreCondition matches the following operations are done:
- Get the online description of object 0x8004(+module specific offset) 'Frequency Tuning Frequencies Config' and all entries
 Check:
    (Name)
    BitSize
    DataType
    Rx / Tx mappable
    Default Data
    MinData
    Flags       </Action>
					<PostCondition>Error if
- mandatory object / entry is not defined
- an optional object exists and the entries are invalid
- Object / entry description does not match with the specification</PostCondition>
					<ProposalForSolution>- Define the missing objects
- correct object / entry description</ProposalForSolution>
					<References>
						<Reference Specification="ETG.5003.2011"></Reference>
					</References>
					<Mandatory>true</Mandatory>
				</Description>
				<TestStep Name="InitResult">
					<SetVariable Target="strResult">EmptyString</SetVariable>
				</TestStep>
				<TestStep Name="CheckIfOdAvailable">
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Mailbox</Value1>
							<Value2>false</Value2>
							<SkipCase Id="1">DuT does not support mailbox.</SkipCase>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Mailbox.CoE</Value1>
							<Value2>false</Value2>
							<SkipCase Id="2">DuT does not support CoE.</SkipCase>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Mailbox.CoE.SdoInfo</Value1>
							<Value2>false</Value2>
							<SkipCase Id="3">DuT does not support SDO Info.</SkipCase>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="InitAtLeastOneProfileMatch">
					<SetVariable Target="bAtLeastOneModuleMatch">false</SetVariable>
				</TestStep>
				<TestStep Name="GetCurrentProfileList">
					<SizeOf UInt32Var="u32Tmp">arrOnlineProfiles</SizeOf>
					<Compare>
						<Equal>
							<Value1>u32Tmp</Value1>
							<Value2>0</Value2>
							<CallTestFunction Name="GetCurrentProfileList">
								<Parameter>"online"</Parameter>
								<Parameter>"SafeOP"</Parameter>
								<OutParameter>arrOnlineProfiles</OutParameter>
							</CallTestFunction>
						</Equal>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>u32Tmp</Value1>
							<Value2>0</Value2>
							<WriteLine Id="4" Param0="arrOnlineProfiles" Level="Verbose">Use previously created profile list ({0})</WriteLine>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep>
					<SizeOf UInt32Var="u32Tmp">arrOnlineProfiles</SizeOf>
				</TestStep>
				<TestStep>
					<InitArray TargetArray="arrCurrentProfiles" Length="u32Tmp"></InitArray>
				</TestStep>
				<TestStep>
					<CopyArray>
						<SourceArray>arrOnlineProfiles</SourceArray>
						<DestinationArray>arrCurrentProfiles</DestinationArray>
						<Length>u32Tmp</Length>
					</CopyArray>
				</TestStep>
				<TestStep Name="InitProfileLoopCounter">
					<SetVariable Target="u32ProfileCounter">0</SetVariable>
				</TestStep>
				<TestStep Name="GetProfileArrayLength">
					<SizeOf UInt32Var="u32CurrentProfilesLength">arrCurrentProfiles</SizeOf>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="5" Param0="u32CurrentProfilesLength" Level="Verbose">'{0}' Profile(s) defined online.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>u32CurrentProfilesLength</Value1>
							<Value2>0</Value2>
							<SkipCase Id="6">Skip case | no profile defined.</SkipCase>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="ProfileLoopStart">
					<GetArrayItem SourceArray="arrCurrentProfiles" Target="strTmpString" Index="u32ProfileCounter"></GetArrayItem>
				</TestStep>
				<TestStep Name="CheckProfileInformationString">
					<Compare>
						<Equal>
							<Value1>strTmpString</Value1>
							<Value2>null</Value2>
							<RaiseError Id="7" Param0="u32ProfileCounter">Profile Info element [{0}] is null.</RaiseError>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>strTmpString</Value1>
							<Value2>EmptyString</Value2>
							<RaiseError Id="8" Param0="u32ProfileCounter">Profile Info element [{0}] is an empty string.</RaiseError>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="GetDeviceProfile">
					<CallTestFunction Name="GetDeviceProfile">
						<Parameter>strTmpString</Parameter>
						<OutParameter>uint16CurDeviceProfile</OutParameter>
					</CallTestFunction>
				</TestStep>
				<TestStep Name="GetModuleProfile">
					<CallTestFunction Name="GetModuleProfile">
						<Parameter>strTmpString</Parameter>
						<OutParameter>uint16CurModuleProfile</OutParameter>
					</CallTestFunction>
				</TestStep>
				<TestStep Name="GetSubModuleProfile">
					<CallTestFunction Name="GetSubModuleProfile">
						<Parameter>strTmpString</Parameter>
						<OutParameter>uint16CurSubModuleProfile</OutParameter>
					</CallTestFunction>
				</TestStep>
				<TestStep Name="DumpProfileInfo">
					<Description Id="9" Param0="uint16CurDeviceProfile" Param1="uint16CurModuleProfile" Param2="uint16CurSubModuleProfile" Param3="u32ProfileCounter" Level="Output">Module[{3}] : DeviceProfile '{0}' ; ModuleProfile '{1}' ; SubModuleProfile '{2}'</Description>
					<Compare>
						<Equal>
							<Value1>bIgnoreProfileID</Value1>
							<Value2>true</Value2>
							<GotoStep>IndicateThatAtleastOneModuleMatch</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CompareDeviceProfile">
					<Compare>
						<NotEqual>
							<Value1>uint16CurDeviceProfile</Value1>
							<Value2>5003</Value2>
							<WriteLine Id="10" Param0="uint16CurDeviceProfile" Level="Output">Skip Profile  (Test Device Profile '5003' != Cur Device Profile '{0}')</WriteLine>
						</NotEqual>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>uint16CurDeviceProfile</Value1>
							<Value2>5003</Value2>
							<GotoStep>ProfileLoopEnd</GotoStep>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep Name="CompareModuleProfile">
					<Compare>
						<NotEqual>
							<Value1>uint16CurModuleProfile</Value1>
							<Value2>2011</Value2>
							<WriteLine Id="11" Param0="uint16CurModuleProfile" Level="Output">Skip Profile  (Test Module Profile '2011' != Cur Module Profile '{0}')</WriteLine>
						</NotEqual>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>uint16CurModuleProfile</Value1>
							<Value2>2011</Value2>
							<GotoStep>ProfileLoopEnd</GotoStep>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep Name="CompareSubModuleProfile">
					<Compare>
						<NotEqual>
							<Value1>uint16CurSubModuleProfile</Value1>
							<Value2>0</Value2>
							<WriteLine Id="12" Param0="uint16CurSubModuleProfile" Level="Output">Skip Profile  (Test SubModule Profile '0' != Cur SubModule Profile '{0}')</WriteLine>
						</NotEqual>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>uint16CurSubModuleProfile</Value1>
							<Value2>0</Value2>
							<GotoStep>ProfileLoopEnd</GotoStep>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep Name="IndicateThatAtleastOneModuleMatch">
					<SetVariable Target="bAtLeastOneModuleMatch">true</SetVariable>
				</TestStep>
				<TestStep Name="GetObjectIndexInclOffset">
					<SetVariable Target="u16ObjectIndexInclOffset">#x8004 + (u32ProfileCounter * #x10)</SetVariable>
					<WriteLine Id="13" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : ObjectIndex '0x{0:X}'</WriteLine>
				</TestStep>
				<TestStep Name="LoadDeviceObjectDictionary">
					<Description Id="14" Level="Verbose">Load 'online' object dictionary for testing.</Description>
					<GetObjectDictionary Target="odDeviceObjectdictionary">
						<DictionaryType>Online</DictionaryType>
					</GetObjectDictionary>
					<RaiseErrorOnFailure Id="15">VerifyObject : failed to load online object dictionary.</RaiseErrorOnFailure>
				</TestStep>
				<TestStep Name="SetObjectRequiredLevel">
					<SetVariable Target="bObjectOrEntryRequiredLevel">1</SetVariable>
					<WriteLine Id="16" Param0="u16ObjectIndexInclOffset" Level="Verbose">0x{0:X4} 'Frequency Tuning Frequencies Config' may be available</WriteLine>
				</TestStep>
				<TestStep Name="CheckIfObjectExists">
					<GetObjectDescription SourceDictionary="odDeviceObjectdictionary" Index="u16ObjectIndexInclOffset" SubIndex="-1"></GetObjectDescription>
					<GotoOnSuccess>CallCheckObjectDescription</GotoOnSuccess>
				</TestStep>
				<TestStep Name="HandleNotExistingObject">
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>2</Value2>
							<WriteLine Id="17" Param0="u16ObjectIndexInclOffset" Level="Warning">The object 0x{0:X4} 'Frequency Tuning Frequencies Config' does not exists.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>1</Value2>
							<WriteLine Id="18" Param0="u16ObjectIndexInclOffset" Level="Output">The object 0x{0:X4} 'Frequency Tuning Frequencies Config' does not exists.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>ProfileLoopEnd</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CallCheckObjectDescription">
					<Description Id="19" Param0="u16ObjectIndexInclOffset" Level="Output">Verify the object description 0x{0:X4} 'Frequency Tuning Frequencies Config'.</Description>
					<CallTestFunction Name="CheckObjectDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"online"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>"Frequency Tuning Frequencies Config"</Parameter>
						<Parameter>null</Parameter>
						<Parameter>9</Parameter>
						<Parameter>-1</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<GotoStep>ProfileLoopEnd</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="InitEntryBittOffset">
					<SetVariable Target="i32CurrentBitOffset">0</SetVariable>
				</TestStep>
				<TestStep Name="StartSi0">
					<Description Id="20" Level="Output">Start validate SubIndex0</Description>
					<WriteLine Id="21" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : Subindex '0x{0:X}.0'</WriteLine>
				</TestStep>
				<TestStep Name="CallSi0CheckEntryDescription">
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"online"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>0</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>null</Parameter>
						<Parameter>5</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>null</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>null</Parameter>
						<Parameter>null</Parameter>
						<Parameter>null</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>8</Parameter>
						<Parameter>i32CurrentBitOffset</Parameter>
						<Parameter>true</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="EndSi0">
					<SetVariable Target="i32CurrentBitOffset">16</SetVariable>
				</TestStep>
				<TestStep Name="StartSi1">
					<Description Id="22" Level="Output">Start validate SubIndex1</Description>
					<WriteLine Id="23" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : Subindex '0x{0:X}.1'</WriteLine>
				</TestStep>
				<TestStep Name="SetSi1RequiredLevel">
					<SetVariable Target="bObjectOrEntryRequiredLevel">1</SetVariable>
					<WriteLine Id="24" Param0="u16ObjectIndexInclOffset" Level="Verbose">0x{0:X4}.1 'Fixed Frequency' may be available</WriteLine>
				</TestStep>
				<TestStep Name="CheckIfSi1Exists">
					<GetObjectDescription SourceDictionary="odDeviceObjectdictionary" Index="u16ObjectIndexInclOffset" SubIndex="1">
						<Type>u16DataType</Type>
					</GetObjectDescription>
					<GotoOnFailure>HandleNotExistingSi1</GotoOnFailure>
				</TestStep>
				<TestStep>
					<Compare>
						<NotEqual>
							<Value1>u16DataType</Value1>
							<Value2>0</Value2>
							<GotoStep>CallSi1CheckEntryDescription</GotoStep>
						</NotEqual>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="25" Param0="u16ObjectIndexInclOffset" Level="Verbose">The entry 0x{0:X4}.1 is defined as a padding entry.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>EndSi1</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="HandleNotExistingSi1">
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="26" Param0="u16ObjectIndexInclOffset" Level="Output">The entry 0x{0:X4}.1 does not exists.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>EndSi1</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CallSi1CheckEntryDescription">
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"online"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>1</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>"Fixed Frequency"</Parameter>
						<Parameter>8</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>null</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>32</Parameter>
						<Parameter>i32CurrentBitOffset</Parameter>
						<Parameter>true</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="EndSi1">
					<SetVariable Target="i32CurrentBitOffset">-1</SetVariable>
				</TestStep>
				<TestStep Name="StartSi2">
					<Description Id="27" Level="Output">Start validate SubIndex2</Description>
					<WriteLine Id="28" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : Subindex '0x{0:X}.2'</WriteLine>
				</TestStep>
				<TestStep Name="SetSi2RequiredLevel">
					<SetVariable Target="bObjectOrEntryRequiredLevel">1</SetVariable>
					<WriteLine Id="29" Param0="u16ObjectIndexInclOffset" Level="Verbose">0x{0:X4}.2 'Starting Tuning Frequency' may be available</WriteLine>
				</TestStep>
				<TestStep Name="CheckIfSi2Exists">
					<GetObjectDescription SourceDictionary="odDeviceObjectdictionary" Index="u16ObjectIndexInclOffset" SubIndex="2">
						<Type>u16DataType</Type>
					</GetObjectDescription>
					<GotoOnFailure>HandleNotExistingSi2</GotoOnFailure>
				</TestStep>
				<TestStep>
					<Compare>
						<NotEqual>
							<Value1>u16DataType</Value1>
							<Value2>0</Value2>
							<GotoStep>CallSi2CheckEntryDescription</GotoStep>
						</NotEqual>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="30" Param0="u16ObjectIndexInclOffset" Level="Verbose">The entry 0x{0:X4}.2 is defined as a padding entry.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>EndSi2</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="HandleNotExistingSi2">
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="31" Param0="u16ObjectIndexInclOffset" Level="Output">The entry 0x{0:X4}.2 does not exists.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>EndSi2</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CallSi2CheckEntryDescription">
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"online"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>2</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>"Starting Tuning Frequency"</Parameter>
						<Parameter>8</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>null</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>32</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>true</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="EndSi2"></TestStep>
				<TestStep Name="StartSi3">
					<Description Id="32" Level="Output">Start validate SubIndex3</Description>
					<WriteLine Id="33" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : Subindex '0x{0:X}.3'</WriteLine>
				</TestStep>
				<TestStep Name="SetSi3RequiredLevel">
					<SetVariable Target="bObjectOrEntryRequiredLevel">1</SetVariable>
					<WriteLine Id="34" Param0="u16ObjectIndexInclOffset" Level="Verbose">0x{0:X4}.3 'Minimum Tuning Frequency' may be available</WriteLine>
				</TestStep>
				<TestStep Name="CheckIfSi3Exists">
					<GetObjectDescription SourceDictionary="odDeviceObjectdictionary" Index="u16ObjectIndexInclOffset" SubIndex="3">
						<Type>u16DataType</Type>
					</GetObjectDescription>
					<GotoOnFailure>HandleNotExistingSi3</GotoOnFailure>
				</TestStep>
				<TestStep>
					<Compare>
						<NotEqual>
							<Value1>u16DataType</Value1>
							<Value2>0</Value2>
							<GotoStep>CallSi3CheckEntryDescription</GotoStep>
						</NotEqual>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="35" Param0="u16ObjectIndexInclOffset" Level="Verbose">The entry 0x{0:X4}.3 is defined as a padding entry.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>EndSi3</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="HandleNotExistingSi3">
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="36" Param0="u16ObjectIndexInclOffset" Level="Output">The entry 0x{0:X4}.3 does not exists.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>EndSi3</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CallSi3CheckEntryDescription">
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"online"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>3</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>"Minimum Tuning Frequency"</Parameter>
						<Parameter>8</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>null</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>32</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>true</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="EndSi3"></TestStep>
				<TestStep Name="StartSi4">
					<Description Id="37" Level="Output">Start validate SubIndex4</Description>
					<WriteLine Id="38" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : Subindex '0x{0:X}.4'</WriteLine>
				</TestStep>
				<TestStep Name="SetSi4RequiredLevel">
					<SetVariable Target="bObjectOrEntryRequiredLevel">1</SetVariable>
					<WriteLine Id="39" Param0="u16ObjectIndexInclOffset" Level="Verbose">0x{0:X4}.4 'Maximum Tuning Frequency' may be available</WriteLine>
				</TestStep>
				<TestStep Name="CheckIfSi4Exists">
					<GetObjectDescription SourceDictionary="odDeviceObjectdictionary" Index="u16ObjectIndexInclOffset" SubIndex="4">
						<Type>u16DataType</Type>
					</GetObjectDescription>
					<GotoOnFailure>HandleNotExistingSi4</GotoOnFailure>
				</TestStep>
				<TestStep>
					<Compare>
						<NotEqual>
							<Value1>u16DataType</Value1>
							<Value2>0</Value2>
							<GotoStep>CallSi4CheckEntryDescription</GotoStep>
						</NotEqual>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="40" Param0="u16ObjectIndexInclOffset" Level="Verbose">The entry 0x{0:X4}.4 is defined as a padding entry.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>EndSi4</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="HandleNotExistingSi4">
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="41" Param0="u16ObjectIndexInclOffset" Level="Output">The entry 0x{0:X4}.4 does not exists.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>EndSi4</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CallSi4CheckEntryDescription">
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"online"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>4</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>"Maximum Tuning Frequency"</Parameter>
						<Parameter>8</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>null</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>32</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>true</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="EndSi4"></TestStep>
				<TestStep Name="CheckReservedEntryRange_5_to_255">
					<Description Id="42" Level="Output">Start check reserved entry range 5 to 255</Description>
					<CallTestFunction Name="CheckReservedEntryRange">
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>5</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>odDeviceObjectdictionary</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="ProfileLoopEnd">
					<Compare>
						<Equal>
							<Value1>bAtLeastOneModuleMatch</Value1>
							<Value2>false</Value2>
							<GotoStep>HandleAbortTestCaseOnFirstError</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="HandleAbortTestCaseOnFirstError">
					<Compare>
						<Equal>
							<Value1>bAbortTestCaseOnFirstError</Value1>
							<Value2>false</Value2>
							<GotoStep>ProfileLoopIncrement</GotoStep>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>strResult</Value1>
							<Value2>EmptyString</Value2>
							<GotoStep>ProfileLoopIncrement</GotoStep>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="43" Level="Output">Object verification for all following modules abort because an error was already detected for the current module.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>END</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="ProfileLoopIncrement">
					<SetVariable Target="u32ProfileCounter">u32ProfileCounter + 1</SetVariable>
					<Compare>
						<Greater>
							<Value1>u32CurrentProfilesLength</Value1>
							<Value2>u32ProfileCounter</Value2>
							<GotoStep>ProfileLoopStart</GotoStep>
						</Greater>
					</Compare>
				</TestStep>
				<TestStep Name="END">
					<Compare>
						<NotEqual>
							<Value1>bAtLeastOneModuleMatch</Value1>
							<Value2>true</Value2>
							<SkipCase Id="44">SKIP TEST(no module/channel supports the current profile)</SkipCase>
						</NotEqual>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bDEBUG</Value1>
							<Value2>true</Value2>
							<WriteLine Id="45" Param0="strResult" Level="Verbose">DEBUG | Result : '{0}'.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>strResult</Value1>
							<Value2>EmptyString</Value2>
							<ReturnSuccess Id="46">Test succeed</ReturnSuccess>
						</Equal>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>strResult</Value1>
							<Value2>EmptyString</Value2>
							<RaiseError Id="47"></RaiseError>
						</NotEqual>
					</Compare>
				</TestStep>
			</TestCase>
			<TestCase Name="offline | 0x8005 (Frequency Tuning Times / Thresholds Config)" CaseId="11">
				<Description>
					<PreCondition>- The device profile is 5003
- The module profile is 2011
- The submodule profile is 0</PreCondition>
					<Action>- Iterate over all offline defined modules/channels and if the PreCondition matches the following operations are done:
- Get the offline description of object 0x8005(+module specific offset) 'Frequency Tuning Times / Thresholds Config' and all entries
 Check:
    (Name)
    BitSize
    DataType
    Rx / Tx mappable
    Default Data
    MinData
    Flags       </Action>
					<PostCondition>Error if
- mandatory object / entry is not defined
- an optional object exists and the entries are invalid
- Object / entry description does not match with the specification</PostCondition>
					<ProposalForSolution>- Define the missing objects
- correct object / entry description</ProposalForSolution>
					<References>
						<Reference Specification="ETG.5003.2011"></Reference>
					</References>
					<Mandatory>true</Mandatory>
				</Description>
				<TestStep Name="InitResult">
					<SetVariable Target="strResult">EmptyString</SetVariable>
				</TestStep>
				<TestStep Name="CheckIfOdAvailable">
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Mailbox</Value1>
							<Value2>false</Value2>
							<SkipCase Id="1">DuT does not support mailbox.</SkipCase>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Mailbox.CoE</Value1>
							<Value2>false</Value2>
							<SkipCase Id="2">DuT does not support CoE.</SkipCase>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep>
					<GetObjectDictionary Target="odDeviceObjectdictionary">
						<DictionaryType>Offline</DictionaryType>
					</GetObjectDictionary>
					<SkipOnFailure Id="3">No offline object dictionary defined.</SkipOnFailure>
				</TestStep>
				<TestStep>
					<GetObjectList Count="u32Tmp" Target="odDeviceObjectdictionaryList" SourceDict="odDeviceObjectdictionary"></GetObjectList>
					<Compare>
						<Equal>
							<Value1>u32Tmp</Value1>
							<Value2>0</Value2>
							<SkipCase Id="4">No offline object dictionary defined.</SkipCase>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="InitAtLeastOneProfileMatch">
					<SetVariable Target="bAtLeastOneModuleMatch">false</SetVariable>
				</TestStep>
				<TestStep Name="GetCurrentProfileList">
					<SizeOf UInt32Var="u32Tmp">arrOfflineProfiles</SizeOf>
					<Compare>
						<Equal>
							<Value1>u32Tmp</Value1>
							<Value2>0</Value2>
							<CallTestFunction Name="GetCurrentProfileList">
								<Parameter>"offline"</Parameter>
								<Parameter>"SafeOP"</Parameter>
								<OutParameter>arrOfflineProfiles</OutParameter>
							</CallTestFunction>
						</Equal>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>u32Tmp</Value1>
							<Value2>0</Value2>
							<WriteLine Id="5" Param0="arrOfflineProfiles" Level="Verbose">Use previously created profile list ({0})</WriteLine>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep>
					<SizeOf UInt32Var="u32Tmp">arrOfflineProfiles</SizeOf>
				</TestStep>
				<TestStep>
					<InitArray TargetArray="arrCurrentProfiles" Length="u32Tmp"></InitArray>
				</TestStep>
				<TestStep>
					<CopyArray>
						<SourceArray>arrOfflineProfiles</SourceArray>
						<DestinationArray>arrCurrentProfiles</DestinationArray>
						<Length>u32Tmp</Length>
					</CopyArray>
				</TestStep>
				<TestStep Name="InitProfileLoopCounter">
					<SetVariable Target="u32ProfileCounter">0</SetVariable>
				</TestStep>
				<TestStep Name="GetProfileArrayLength">
					<SizeOf UInt32Var="u32CurrentProfilesLength">arrCurrentProfiles</SizeOf>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="6" Param0="u32CurrentProfilesLength" Level="Verbose">'{0}' Profile(s) defined offline.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>u32CurrentProfilesLength</Value1>
							<Value2>0</Value2>
							<SkipCase Id="7">Skip case | no profile defined.</SkipCase>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="ProfileLoopStart">
					<GetArrayItem SourceArray="arrCurrentProfiles" Target="strTmpString" Index="u32ProfileCounter"></GetArrayItem>
				</TestStep>
				<TestStep Name="CheckProfileInformationString">
					<Compare>
						<Equal>
							<Value1>strTmpString</Value1>
							<Value2>null</Value2>
							<RaiseError Id="8" Param0="u32ProfileCounter">Profile Info element [{0}] is null.</RaiseError>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>strTmpString</Value1>
							<Value2>EmptyString</Value2>
							<RaiseError Id="9" Param0="u32ProfileCounter">Profile Info element [{0}] is an empty string.</RaiseError>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="GetDeviceProfile">
					<CallTestFunction Name="GetDeviceProfile">
						<Parameter>strTmpString</Parameter>
						<OutParameter>uint16CurDeviceProfile</OutParameter>
					</CallTestFunction>
				</TestStep>
				<TestStep Name="GetModuleProfile">
					<CallTestFunction Name="GetModuleProfile">
						<Parameter>strTmpString</Parameter>
						<OutParameter>uint16CurModuleProfile</OutParameter>
					</CallTestFunction>
				</TestStep>
				<TestStep Name="GetSubModuleProfile">
					<CallTestFunction Name="GetSubModuleProfile">
						<Parameter>strTmpString</Parameter>
						<OutParameter>uint16CurSubModuleProfile</OutParameter>
					</CallTestFunction>
				</TestStep>
				<TestStep Name="DumpProfileInfo">
					<Description Id="10" Param0="uint16CurDeviceProfile" Param1="uint16CurModuleProfile" Param2="uint16CurSubModuleProfile" Param3="u32ProfileCounter" Level="Output">Module[{3}] : DeviceProfile '{0}' ; ModuleProfile '{1}' ; SubModuleProfile '{2}'</Description>
					<Compare>
						<Equal>
							<Value1>bIgnoreProfileID</Value1>
							<Value2>true</Value2>
							<GotoStep>IndicateThatAtleastOneModuleMatch</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CompareDeviceProfile">
					<Compare>
						<NotEqual>
							<Value1>uint16CurDeviceProfile</Value1>
							<Value2>5003</Value2>
							<WriteLine Id="11" Param0="uint16CurDeviceProfile" Level="Output">Skip Profile  (Test Device Profile '5003' != Cur Device Profile '{0}')</WriteLine>
						</NotEqual>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>uint16CurDeviceProfile</Value1>
							<Value2>5003</Value2>
							<GotoStep>ProfileLoopEnd</GotoStep>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep Name="CompareModuleProfile">
					<Compare>
						<NotEqual>
							<Value1>uint16CurModuleProfile</Value1>
							<Value2>2011</Value2>
							<WriteLine Id="12" Param0="uint16CurModuleProfile" Level="Output">Skip Profile  (Test Module Profile '2011' != Cur Module Profile '{0}')</WriteLine>
						</NotEqual>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>uint16CurModuleProfile</Value1>
							<Value2>2011</Value2>
							<GotoStep>ProfileLoopEnd</GotoStep>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep Name="CompareSubModuleProfile">
					<Compare>
						<NotEqual>
							<Value1>uint16CurSubModuleProfile</Value1>
							<Value2>0</Value2>
							<WriteLine Id="13" Param0="uint16CurSubModuleProfile" Level="Output">Skip Profile  (Test SubModule Profile '0' != Cur SubModule Profile '{0}')</WriteLine>
						</NotEqual>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>uint16CurSubModuleProfile</Value1>
							<Value2>0</Value2>
							<GotoStep>ProfileLoopEnd</GotoStep>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep Name="IndicateThatAtleastOneModuleMatch">
					<SetVariable Target="bAtLeastOneModuleMatch">true</SetVariable>
				</TestStep>
				<TestStep Name="GetObjectIndexInclOffset">
					<SetVariable Target="u16ObjectIndexInclOffset">#x8005 + (u32ProfileCounter * #x10)</SetVariable>
					<WriteLine Id="14" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : ObjectIndex '0x{0:X}'</WriteLine>
				</TestStep>
				<TestStep Name="LoadDeviceObjectDictionary">
					<Description Id="15" Level="Verbose">Load 'offline' object dictionary for testing.</Description>
					<GetObjectDictionary Target="odDeviceObjectdictionary">
						<DictionaryType>Offline</DictionaryType>
					</GetObjectDictionary>
					<RaiseErrorOnFailure Id="16">VerifyObject : failed to load offline object dictionary.</RaiseErrorOnFailure>
				</TestStep>
				<TestStep Name="SetObjectRequiredLevel">
					<SetVariable Target="bObjectOrEntryRequiredLevel">1</SetVariable>
					<WriteLine Id="17" Param0="u16ObjectIndexInclOffset" Level="Verbose">0x{0:X4} 'Frequency Tuning Times / Thresholds Config' may be available</WriteLine>
				</TestStep>
				<TestStep Name="CheckIfObjectExists">
					<GetObjectDescription SourceDictionary="odDeviceObjectdictionary" Index="u16ObjectIndexInclOffset" SubIndex="-1"></GetObjectDescription>
					<GotoOnSuccess>CallCheckObjectDescription</GotoOnSuccess>
				</TestStep>
				<TestStep Name="HandleNotExistingObject">
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>2</Value2>
							<WriteLine Id="18" Param0="u16ObjectIndexInclOffset" Level="Warning">The object 0x{0:X4} 'Frequency Tuning Times / Thresholds Config' does not exists.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>1</Value2>
							<WriteLine Id="19" Param0="u16ObjectIndexInclOffset" Level="Output">The object 0x{0:X4} 'Frequency Tuning Times / Thresholds Config' does not exists.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>ProfileLoopEnd</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CallCheckObjectDescription">
					<Description Id="20" Param0="u16ObjectIndexInclOffset" Level="Output">Verify the object description 0x{0:X4} 'Frequency Tuning Times / Thresholds Config'.</Description>
					<CallTestFunction Name="CheckObjectDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"offline"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>"Frequency Tuning Times / Thresholds Config"</Parameter>
						<Parameter>null</Parameter>
						<Parameter>9</Parameter>
						<Parameter>-1</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<GotoStep>ProfileLoopEnd</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="InitEntryBittOffset">
					<SetVariable Target="i32CurrentBitOffset">0</SetVariable>
				</TestStep>
				<TestStep Name="StartSi0">
					<Description Id="21" Level="Output">Start validate SubIndex0</Description>
					<WriteLine Id="22" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : Subindex '0x{0:X}.0'</WriteLine>
				</TestStep>
				<TestStep Name="CallSi0CheckEntryDescription">
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"offline"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>0</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>null</Parameter>
						<Parameter>5</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>null</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>null</Parameter>
						<Parameter>null</Parameter>
						<Parameter>null</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>8</Parameter>
						<Parameter>i32CurrentBitOffset</Parameter>
						<Parameter>true</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="EndSi0">
					<SetVariable Target="i32CurrentBitOffset">16</SetVariable>
				</TestStep>
				<TestStep Name="StartSi1">
					<Description Id="23" Level="Output">Start validate SubIndex1</Description>
					<WriteLine Id="24" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : Subindex '0x{0:X}.1'</WriteLine>
				</TestStep>
				<TestStep Name="SetSi1RequiredLevel">
					<SetVariable Target="bObjectOrEntryRequiredLevel">1</SetVariable>
					<WriteLine Id="25" Param0="u16ObjectIndexInclOffset" Level="Verbose">0x{0:X4}.1 'Tuning Timeout' may be available</WriteLine>
				</TestStep>
				<TestStep Name="CheckIfSi1Exists">
					<GetObjectDescription SourceDictionary="odDeviceObjectdictionary" Index="u16ObjectIndexInclOffset" SubIndex="1">
						<Type>u16DataType</Type>
					</GetObjectDescription>
					<GotoOnFailure>HandleNotExistingSi1</GotoOnFailure>
				</TestStep>
				<TestStep>
					<Compare>
						<NotEqual>
							<Value1>u16DataType</Value1>
							<Value2>0</Value2>
							<GotoStep>CallSi1CheckEntryDescription</GotoStep>
						</NotEqual>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="26" Param0="u16ObjectIndexInclOffset" Level="Verbose">The entry 0x{0:X4}.1 is defined as a padding entry.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>EndSi1</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="HandleNotExistingSi1">
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="27" Param0="u16ObjectIndexInclOffset" Level="Output">The entry 0x{0:X4}.1 does not exists.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>EndSi1</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CallSi1CheckEntryDescription">
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"offline"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>1</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>"Tuning Timeout"</Parameter>
						<Parameter>7</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>null</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>32</Parameter>
						<Parameter>i32CurrentBitOffset</Parameter>
						<Parameter>true</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="EndSi1">
					<SetVariable Target="i32CurrentBitOffset">-1</SetVariable>
				</TestStep>
				<TestStep Name="StartSi2">
					<Description Id="28" Level="Output">Start validate SubIndex2</Description>
					<WriteLine Id="29" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : Subindex '0x{0:X}.2'</WriteLine>
				</TestStep>
				<TestStep Name="SetSi2RequiredLevel">
					<SetVariable Target="bObjectOrEntryRequiredLevel">1</SetVariable>
					<WriteLine Id="30" Param0="u16ObjectIndexInclOffset" Level="Verbose">0x{0:X4}.2 'Tuning Delay' may be available</WriteLine>
				</TestStep>
				<TestStep Name="CheckIfSi2Exists">
					<GetObjectDescription SourceDictionary="odDeviceObjectdictionary" Index="u16ObjectIndexInclOffset" SubIndex="2">
						<Type>u16DataType</Type>
					</GetObjectDescription>
					<GotoOnFailure>HandleNotExistingSi2</GotoOnFailure>
				</TestStep>
				<TestStep>
					<Compare>
						<NotEqual>
							<Value1>u16DataType</Value1>
							<Value2>0</Value2>
							<GotoStep>CallSi2CheckEntryDescription</GotoStep>
						</NotEqual>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="31" Param0="u16ObjectIndexInclOffset" Level="Verbose">The entry 0x{0:X4}.2 is defined as a padding entry.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>EndSi2</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="HandleNotExistingSi2">
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="32" Param0="u16ObjectIndexInclOffset" Level="Output">The entry 0x{0:X4}.2 does not exists.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>EndSi2</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CallSi2CheckEntryDescription">
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"offline"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>2</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>"Tuning Delay"</Parameter>
						<Parameter>7</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>null</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>32</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>true</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="EndSi2"></TestStep>
				<TestStep Name="StartSi3">
					<Description Id="33" Level="Output">Start validate SubIndex3</Description>
					<WriteLine Id="34" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : Subindex '0x{0:X}.3'</WriteLine>
				</TestStep>
				<TestStep Name="SetSi3RequiredLevel">
					<SetVariable Target="bObjectOrEntryRequiredLevel">1</SetVariable>
					<WriteLine Id="35" Param0="u16ObjectIndexInclOffset" Level="Verbose">0x{0:X4}.3 'Minimum Threshold' may be available</WriteLine>
				</TestStep>
				<TestStep Name="CheckIfSi3Exists">
					<GetObjectDescription SourceDictionary="odDeviceObjectdictionary" Index="u16ObjectIndexInclOffset" SubIndex="3">
						<Type>u16DataType</Type>
					</GetObjectDescription>
					<GotoOnFailure>HandleNotExistingSi3</GotoOnFailure>
				</TestStep>
				<TestStep>
					<Compare>
						<NotEqual>
							<Value1>u16DataType</Value1>
							<Value2>0</Value2>
							<GotoStep>CallSi3CheckEntryDescription</GotoStep>
						</NotEqual>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="36" Param0="u16ObjectIndexInclOffset" Level="Verbose">The entry 0x{0:X4}.3 is defined as a padding entry.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>EndSi3</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="HandleNotExistingSi3">
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="37" Param0="u16ObjectIndexInclOffset" Level="Output">The entry 0x{0:X4}.3 does not exists.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>EndSi3</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CallSi3CheckEntryDescription">
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"offline"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>3</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>"Minimum Threshold"</Parameter>
						<Parameter>7</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>null</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>32</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>true</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="EndSi3"></TestStep>
				<TestStep Name="StartSi4">
					<Description Id="38" Level="Output">Start validate SubIndex4</Description>
					<WriteLine Id="39" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : Subindex '0x{0:X}.4'</WriteLine>
				</TestStep>
				<TestStep Name="SetSi4RequiredLevel">
					<SetVariable Target="bObjectOrEntryRequiredLevel">1</SetVariable>
					<WriteLine Id="40" Param0="u16ObjectIndexInclOffset" Level="Verbose">0x{0:X4}.4 'Maximum Threshold' may be available</WriteLine>
				</TestStep>
				<TestStep Name="CheckIfSi4Exists">
					<GetObjectDescription SourceDictionary="odDeviceObjectdictionary" Index="u16ObjectIndexInclOffset" SubIndex="4">
						<Type>u16DataType</Type>
					</GetObjectDescription>
					<GotoOnFailure>HandleNotExistingSi4</GotoOnFailure>
				</TestStep>
				<TestStep>
					<Compare>
						<NotEqual>
							<Value1>u16DataType</Value1>
							<Value2>0</Value2>
							<GotoStep>CallSi4CheckEntryDescription</GotoStep>
						</NotEqual>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="41" Param0="u16ObjectIndexInclOffset" Level="Verbose">The entry 0x{0:X4}.4 is defined as a padding entry.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>EndSi4</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="HandleNotExistingSi4">
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="42" Param0="u16ObjectIndexInclOffset" Level="Output">The entry 0x{0:X4}.4 does not exists.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>EndSi4</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CallSi4CheckEntryDescription">
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"offline"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>4</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>"Maximum Threshold"</Parameter>
						<Parameter>7</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>null</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>32</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>true</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="EndSi4"></TestStep>
				<TestStep Name="CheckReservedEntryRange_5_to_255">
					<Description Id="43" Level="Output">Start check reserved entry range 5 to 255</Description>
					<CallTestFunction Name="CheckReservedEntryRange">
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>5</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>odDeviceObjectdictionary</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="ProfileLoopEnd">
					<Compare>
						<Equal>
							<Value1>bAtLeastOneModuleMatch</Value1>
							<Value2>false</Value2>
							<GotoStep>HandleAbortTestCaseOnFirstError</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="HandleAbortTestCaseOnFirstError">
					<Compare>
						<Equal>
							<Value1>bAbortTestCaseOnFirstError</Value1>
							<Value2>false</Value2>
							<GotoStep>ProfileLoopIncrement</GotoStep>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>strResult</Value1>
							<Value2>EmptyString</Value2>
							<GotoStep>ProfileLoopIncrement</GotoStep>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="44" Level="Output">Object verification for all following modules abort because an error was already detected for the current module.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>END</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="ProfileLoopIncrement">
					<SetVariable Target="u32ProfileCounter">u32ProfileCounter + 1</SetVariable>
					<Compare>
						<Greater>
							<Value1>u32CurrentProfilesLength</Value1>
							<Value2>u32ProfileCounter</Value2>
							<GotoStep>ProfileLoopStart</GotoStep>
						</Greater>
					</Compare>
				</TestStep>
				<TestStep Name="END">
					<Compare>
						<NotEqual>
							<Value1>bAtLeastOneModuleMatch</Value1>
							<Value2>true</Value2>
							<SkipCase Id="45">SKIP TEST(no module/channel supports the current profile)</SkipCase>
						</NotEqual>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bDEBUG</Value1>
							<Value2>true</Value2>
							<WriteLine Id="46" Param0="strResult" Level="Verbose">DEBUG | Result : '{0}'.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>strResult</Value1>
							<Value2>EmptyString</Value2>
							<ReturnSuccess Id="47">Test succeed</ReturnSuccess>
						</Equal>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>strResult</Value1>
							<Value2>EmptyString</Value2>
							<RaiseError Id="48"></RaiseError>
						</NotEqual>
					</Compare>
				</TestStep>
			</TestCase>
			<TestCase Name="online | 0x8005 (Frequency Tuning Times / Thresholds Config)" CaseId="12">
				<Description>
					<PreCondition>- The device profile is 5003
- The module profile is 2011
- The submodule profile is 0</PreCondition>
					<Action>- Iterate over all online defined modules/channels and if the PreCondition matches the following operations are done:
- Get the online description of object 0x8005(+module specific offset) 'Frequency Tuning Times / Thresholds Config' and all entries
 Check:
    (Name)
    BitSize
    DataType
    Rx / Tx mappable
    Default Data
    MinData
    Flags       </Action>
					<PostCondition>Error if
- mandatory object / entry is not defined
- an optional object exists and the entries are invalid
- Object / entry description does not match with the specification</PostCondition>
					<ProposalForSolution>- Define the missing objects
- correct object / entry description</ProposalForSolution>
					<References>
						<Reference Specification="ETG.5003.2011"></Reference>
					</References>
					<Mandatory>true</Mandatory>
				</Description>
				<TestStep Name="InitResult">
					<SetVariable Target="strResult">EmptyString</SetVariable>
				</TestStep>
				<TestStep Name="CheckIfOdAvailable">
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Mailbox</Value1>
							<Value2>false</Value2>
							<SkipCase Id="1">DuT does not support mailbox.</SkipCase>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Mailbox.CoE</Value1>
							<Value2>false</Value2>
							<SkipCase Id="2">DuT does not support CoE.</SkipCase>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Mailbox.CoE.SdoInfo</Value1>
							<Value2>false</Value2>
							<SkipCase Id="3">DuT does not support SDO Info.</SkipCase>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="InitAtLeastOneProfileMatch">
					<SetVariable Target="bAtLeastOneModuleMatch">false</SetVariable>
				</TestStep>
				<TestStep Name="GetCurrentProfileList">
					<SizeOf UInt32Var="u32Tmp">arrOnlineProfiles</SizeOf>
					<Compare>
						<Equal>
							<Value1>u32Tmp</Value1>
							<Value2>0</Value2>
							<CallTestFunction Name="GetCurrentProfileList">
								<Parameter>"online"</Parameter>
								<Parameter>"SafeOP"</Parameter>
								<OutParameter>arrOnlineProfiles</OutParameter>
							</CallTestFunction>
						</Equal>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>u32Tmp</Value1>
							<Value2>0</Value2>
							<WriteLine Id="4" Param0="arrOnlineProfiles" Level="Verbose">Use previously created profile list ({0})</WriteLine>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep>
					<SizeOf UInt32Var="u32Tmp">arrOnlineProfiles</SizeOf>
				</TestStep>
				<TestStep>
					<InitArray TargetArray="arrCurrentProfiles" Length="u32Tmp"></InitArray>
				</TestStep>
				<TestStep>
					<CopyArray>
						<SourceArray>arrOnlineProfiles</SourceArray>
						<DestinationArray>arrCurrentProfiles</DestinationArray>
						<Length>u32Tmp</Length>
					</CopyArray>
				</TestStep>
				<TestStep Name="InitProfileLoopCounter">
					<SetVariable Target="u32ProfileCounter">0</SetVariable>
				</TestStep>
				<TestStep Name="GetProfileArrayLength">
					<SizeOf UInt32Var="u32CurrentProfilesLength">arrCurrentProfiles</SizeOf>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="5" Param0="u32CurrentProfilesLength" Level="Verbose">'{0}' Profile(s) defined online.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>u32CurrentProfilesLength</Value1>
							<Value2>0</Value2>
							<SkipCase Id="6">Skip case | no profile defined.</SkipCase>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="ProfileLoopStart">
					<GetArrayItem SourceArray="arrCurrentProfiles" Target="strTmpString" Index="u32ProfileCounter"></GetArrayItem>
				</TestStep>
				<TestStep Name="CheckProfileInformationString">
					<Compare>
						<Equal>
							<Value1>strTmpString</Value1>
							<Value2>null</Value2>
							<RaiseError Id="7" Param0="u32ProfileCounter">Profile Info element [{0}] is null.</RaiseError>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>strTmpString</Value1>
							<Value2>EmptyString</Value2>
							<RaiseError Id="8" Param0="u32ProfileCounter">Profile Info element [{0}] is an empty string.</RaiseError>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="GetDeviceProfile">
					<CallTestFunction Name="GetDeviceProfile">
						<Parameter>strTmpString</Parameter>
						<OutParameter>uint16CurDeviceProfile</OutParameter>
					</CallTestFunction>
				</TestStep>
				<TestStep Name="GetModuleProfile">
					<CallTestFunction Name="GetModuleProfile">
						<Parameter>strTmpString</Parameter>
						<OutParameter>uint16CurModuleProfile</OutParameter>
					</CallTestFunction>
				</TestStep>
				<TestStep Name="GetSubModuleProfile">
					<CallTestFunction Name="GetSubModuleProfile">
						<Parameter>strTmpString</Parameter>
						<OutParameter>uint16CurSubModuleProfile</OutParameter>
					</CallTestFunction>
				</TestStep>
				<TestStep Name="DumpProfileInfo">
					<Description Id="9" Param0="uint16CurDeviceProfile" Param1="uint16CurModuleProfile" Param2="uint16CurSubModuleProfile" Param3="u32ProfileCounter" Level="Output">Module[{3}] : DeviceProfile '{0}' ; ModuleProfile '{1}' ; SubModuleProfile '{2}'</Description>
					<Compare>
						<Equal>
							<Value1>bIgnoreProfileID</Value1>
							<Value2>true</Value2>
							<GotoStep>IndicateThatAtleastOneModuleMatch</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CompareDeviceProfile">
					<Compare>
						<NotEqual>
							<Value1>uint16CurDeviceProfile</Value1>
							<Value2>5003</Value2>
							<WriteLine Id="10" Param0="uint16CurDeviceProfile" Level="Output">Skip Profile  (Test Device Profile '5003' != Cur Device Profile '{0}')</WriteLine>
						</NotEqual>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>uint16CurDeviceProfile</Value1>
							<Value2>5003</Value2>
							<GotoStep>ProfileLoopEnd</GotoStep>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep Name="CompareModuleProfile">
					<Compare>
						<NotEqual>
							<Value1>uint16CurModuleProfile</Value1>
							<Value2>2011</Value2>
							<WriteLine Id="11" Param0="uint16CurModuleProfile" Level="Output">Skip Profile  (Test Module Profile '2011' != Cur Module Profile '{0}')</WriteLine>
						</NotEqual>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>uint16CurModuleProfile</Value1>
							<Value2>2011</Value2>
							<GotoStep>ProfileLoopEnd</GotoStep>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep Name="CompareSubModuleProfile">
					<Compare>
						<NotEqual>
							<Value1>uint16CurSubModuleProfile</Value1>
							<Value2>0</Value2>
							<WriteLine Id="12" Param0="uint16CurSubModuleProfile" Level="Output">Skip Profile  (Test SubModule Profile '0' != Cur SubModule Profile '{0}')</WriteLine>
						</NotEqual>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>uint16CurSubModuleProfile</Value1>
							<Value2>0</Value2>
							<GotoStep>ProfileLoopEnd</GotoStep>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep Name="IndicateThatAtleastOneModuleMatch">
					<SetVariable Target="bAtLeastOneModuleMatch">true</SetVariable>
				</TestStep>
				<TestStep Name="GetObjectIndexInclOffset">
					<SetVariable Target="u16ObjectIndexInclOffset">#x8005 + (u32ProfileCounter * #x10)</SetVariable>
					<WriteLine Id="13" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : ObjectIndex '0x{0:X}'</WriteLine>
				</TestStep>
				<TestStep Name="LoadDeviceObjectDictionary">
					<Description Id="14" Level="Verbose">Load 'online' object dictionary for testing.</Description>
					<GetObjectDictionary Target="odDeviceObjectdictionary">
						<DictionaryType>Online</DictionaryType>
					</GetObjectDictionary>
					<RaiseErrorOnFailure Id="15">VerifyObject : failed to load online object dictionary.</RaiseErrorOnFailure>
				</TestStep>
				<TestStep Name="SetObjectRequiredLevel">
					<SetVariable Target="bObjectOrEntryRequiredLevel">1</SetVariable>
					<WriteLine Id="16" Param0="u16ObjectIndexInclOffset" Level="Verbose">0x{0:X4} 'Frequency Tuning Times / Thresholds Config' may be available</WriteLine>
				</TestStep>
				<TestStep Name="CheckIfObjectExists">
					<GetObjectDescription SourceDictionary="odDeviceObjectdictionary" Index="u16ObjectIndexInclOffset" SubIndex="-1"></GetObjectDescription>
					<GotoOnSuccess>CallCheckObjectDescription</GotoOnSuccess>
				</TestStep>
				<TestStep Name="HandleNotExistingObject">
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>2</Value2>
							<WriteLine Id="17" Param0="u16ObjectIndexInclOffset" Level="Warning">The object 0x{0:X4} 'Frequency Tuning Times / Thresholds Config' does not exists.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>1</Value2>
							<WriteLine Id="18" Param0="u16ObjectIndexInclOffset" Level="Output">The object 0x{0:X4} 'Frequency Tuning Times / Thresholds Config' does not exists.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>ProfileLoopEnd</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CallCheckObjectDescription">
					<Description Id="19" Param0="u16ObjectIndexInclOffset" Level="Output">Verify the object description 0x{0:X4} 'Frequency Tuning Times / Thresholds Config'.</Description>
					<CallTestFunction Name="CheckObjectDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"online"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>"Frequency Tuning Times / Thresholds Config"</Parameter>
						<Parameter>null</Parameter>
						<Parameter>9</Parameter>
						<Parameter>-1</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<GotoStep>ProfileLoopEnd</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="InitEntryBittOffset">
					<SetVariable Target="i32CurrentBitOffset">0</SetVariable>
				</TestStep>
				<TestStep Name="StartSi0">
					<Description Id="20" Level="Output">Start validate SubIndex0</Description>
					<WriteLine Id="21" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : Subindex '0x{0:X}.0'</WriteLine>
				</TestStep>
				<TestStep Name="CallSi0CheckEntryDescription">
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"online"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>0</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>null</Parameter>
						<Parameter>5</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>null</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>null</Parameter>
						<Parameter>null</Parameter>
						<Parameter>null</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>8</Parameter>
						<Parameter>i32CurrentBitOffset</Parameter>
						<Parameter>true</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="EndSi0">
					<SetVariable Target="i32CurrentBitOffset">16</SetVariable>
				</TestStep>
				<TestStep Name="StartSi1">
					<Description Id="22" Level="Output">Start validate SubIndex1</Description>
					<WriteLine Id="23" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : Subindex '0x{0:X}.1'</WriteLine>
				</TestStep>
				<TestStep Name="SetSi1RequiredLevel">
					<SetVariable Target="bObjectOrEntryRequiredLevel">1</SetVariable>
					<WriteLine Id="24" Param0="u16ObjectIndexInclOffset" Level="Verbose">0x{0:X4}.1 'Tuning Timeout' may be available</WriteLine>
				</TestStep>
				<TestStep Name="CheckIfSi1Exists">
					<GetObjectDescription SourceDictionary="odDeviceObjectdictionary" Index="u16ObjectIndexInclOffset" SubIndex="1">
						<Type>u16DataType</Type>
					</GetObjectDescription>
					<GotoOnFailure>HandleNotExistingSi1</GotoOnFailure>
				</TestStep>
				<TestStep>
					<Compare>
						<NotEqual>
							<Value1>u16DataType</Value1>
							<Value2>0</Value2>
							<GotoStep>CallSi1CheckEntryDescription</GotoStep>
						</NotEqual>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="25" Param0="u16ObjectIndexInclOffset" Level="Verbose">The entry 0x{0:X4}.1 is defined as a padding entry.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>EndSi1</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="HandleNotExistingSi1">
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="26" Param0="u16ObjectIndexInclOffset" Level="Output">The entry 0x{0:X4}.1 does not exists.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>EndSi1</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CallSi1CheckEntryDescription">
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"online"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>1</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>"Tuning Timeout"</Parameter>
						<Parameter>7</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>null</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>32</Parameter>
						<Parameter>i32CurrentBitOffset</Parameter>
						<Parameter>true</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="EndSi1">
					<SetVariable Target="i32CurrentBitOffset">-1</SetVariable>
				</TestStep>
				<TestStep Name="StartSi2">
					<Description Id="27" Level="Output">Start validate SubIndex2</Description>
					<WriteLine Id="28" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : Subindex '0x{0:X}.2'</WriteLine>
				</TestStep>
				<TestStep Name="SetSi2RequiredLevel">
					<SetVariable Target="bObjectOrEntryRequiredLevel">1</SetVariable>
					<WriteLine Id="29" Param0="u16ObjectIndexInclOffset" Level="Verbose">0x{0:X4}.2 'Tuning Delay' may be available</WriteLine>
				</TestStep>
				<TestStep Name="CheckIfSi2Exists">
					<GetObjectDescription SourceDictionary="odDeviceObjectdictionary" Index="u16ObjectIndexInclOffset" SubIndex="2">
						<Type>u16DataType</Type>
					</GetObjectDescription>
					<GotoOnFailure>HandleNotExistingSi2</GotoOnFailure>
				</TestStep>
				<TestStep>
					<Compare>
						<NotEqual>
							<Value1>u16DataType</Value1>
							<Value2>0</Value2>
							<GotoStep>CallSi2CheckEntryDescription</GotoStep>
						</NotEqual>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="30" Param0="u16ObjectIndexInclOffset" Level="Verbose">The entry 0x{0:X4}.2 is defined as a padding entry.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>EndSi2</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="HandleNotExistingSi2">
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="31" Param0="u16ObjectIndexInclOffset" Level="Output">The entry 0x{0:X4}.2 does not exists.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>EndSi2</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CallSi2CheckEntryDescription">
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"online"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>2</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>"Tuning Delay"</Parameter>
						<Parameter>7</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>null</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>32</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>true</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="EndSi2"></TestStep>
				<TestStep Name="StartSi3">
					<Description Id="32" Level="Output">Start validate SubIndex3</Description>
					<WriteLine Id="33" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : Subindex '0x{0:X}.3'</WriteLine>
				</TestStep>
				<TestStep Name="SetSi3RequiredLevel">
					<SetVariable Target="bObjectOrEntryRequiredLevel">1</SetVariable>
					<WriteLine Id="34" Param0="u16ObjectIndexInclOffset" Level="Verbose">0x{0:X4}.3 'Minimum Threshold' may be available</WriteLine>
				</TestStep>
				<TestStep Name="CheckIfSi3Exists">
					<GetObjectDescription SourceDictionary="odDeviceObjectdictionary" Index="u16ObjectIndexInclOffset" SubIndex="3">
						<Type>u16DataType</Type>
					</GetObjectDescription>
					<GotoOnFailure>HandleNotExistingSi3</GotoOnFailure>
				</TestStep>
				<TestStep>
					<Compare>
						<NotEqual>
							<Value1>u16DataType</Value1>
							<Value2>0</Value2>
							<GotoStep>CallSi3CheckEntryDescription</GotoStep>
						</NotEqual>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="35" Param0="u16ObjectIndexInclOffset" Level="Verbose">The entry 0x{0:X4}.3 is defined as a padding entry.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>EndSi3</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="HandleNotExistingSi3">
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="36" Param0="u16ObjectIndexInclOffset" Level="Output">The entry 0x{0:X4}.3 does not exists.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>EndSi3</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CallSi3CheckEntryDescription">
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"online"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>3</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>"Minimum Threshold"</Parameter>
						<Parameter>7</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>null</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>32</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>true</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="EndSi3"></TestStep>
				<TestStep Name="StartSi4">
					<Description Id="37" Level="Output">Start validate SubIndex4</Description>
					<WriteLine Id="38" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : Subindex '0x{0:X}.4'</WriteLine>
				</TestStep>
				<TestStep Name="SetSi4RequiredLevel">
					<SetVariable Target="bObjectOrEntryRequiredLevel">1</SetVariable>
					<WriteLine Id="39" Param0="u16ObjectIndexInclOffset" Level="Verbose">0x{0:X4}.4 'Maximum Threshold' may be available</WriteLine>
				</TestStep>
				<TestStep Name="CheckIfSi4Exists">
					<GetObjectDescription SourceDictionary="odDeviceObjectdictionary" Index="u16ObjectIndexInclOffset" SubIndex="4">
						<Type>u16DataType</Type>
					</GetObjectDescription>
					<GotoOnFailure>HandleNotExistingSi4</GotoOnFailure>
				</TestStep>
				<TestStep>
					<Compare>
						<NotEqual>
							<Value1>u16DataType</Value1>
							<Value2>0</Value2>
							<GotoStep>CallSi4CheckEntryDescription</GotoStep>
						</NotEqual>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="40" Param0="u16ObjectIndexInclOffset" Level="Verbose">The entry 0x{0:X4}.4 is defined as a padding entry.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>EndSi4</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="HandleNotExistingSi4">
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="41" Param0="u16ObjectIndexInclOffset" Level="Output">The entry 0x{0:X4}.4 does not exists.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>EndSi4</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CallSi4CheckEntryDescription">
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"online"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>4</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>"Maximum Threshold"</Parameter>
						<Parameter>7</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>null</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>32</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>true</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="EndSi4"></TestStep>
				<TestStep Name="CheckReservedEntryRange_5_to_255">
					<Description Id="42" Level="Output">Start check reserved entry range 5 to 255</Description>
					<CallTestFunction Name="CheckReservedEntryRange">
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>5</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>odDeviceObjectdictionary</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="ProfileLoopEnd">
					<Compare>
						<Equal>
							<Value1>bAtLeastOneModuleMatch</Value1>
							<Value2>false</Value2>
							<GotoStep>HandleAbortTestCaseOnFirstError</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="HandleAbortTestCaseOnFirstError">
					<Compare>
						<Equal>
							<Value1>bAbortTestCaseOnFirstError</Value1>
							<Value2>false</Value2>
							<GotoStep>ProfileLoopIncrement</GotoStep>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>strResult</Value1>
							<Value2>EmptyString</Value2>
							<GotoStep>ProfileLoopIncrement</GotoStep>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="43" Level="Output">Object verification for all following modules abort because an error was already detected for the current module.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>END</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="ProfileLoopIncrement">
					<SetVariable Target="u32ProfileCounter">u32ProfileCounter + 1</SetVariable>
					<Compare>
						<Greater>
							<Value1>u32CurrentProfilesLength</Value1>
							<Value2>u32ProfileCounter</Value2>
							<GotoStep>ProfileLoopStart</GotoStep>
						</Greater>
					</Compare>
				</TestStep>
				<TestStep Name="END">
					<Compare>
						<NotEqual>
							<Value1>bAtLeastOneModuleMatch</Value1>
							<Value2>true</Value2>
							<SkipCase Id="44">SKIP TEST(no module/channel supports the current profile)</SkipCase>
						</NotEqual>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bDEBUG</Value1>
							<Value2>true</Value2>
							<WriteLine Id="45" Param0="strResult" Level="Verbose">DEBUG | Result : '{0}'.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>strResult</Value1>
							<Value2>EmptyString</Value2>
							<ReturnSuccess Id="46">Test succeed</ReturnSuccess>
						</Equal>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>strResult</Value1>
							<Value2>EmptyString</Value2>
							<RaiseError Id="47"></RaiseError>
						</NotEqual>
					</Compare>
				</TestStep>
			</TestCase>
			<TestCase Name="offline | 0x8006 (Enable Config)" CaseId="13">
				<Description>
					<PreCondition>- The device profile is 5003
- The module profile is 2011
- The submodule profile is 0</PreCondition>
					<Action>- Iterate over all offline defined modules/channels and if the PreCondition matches the following operations are done:
- Get the offline description of object 0x8006(+module specific offset) 'Enable Config' and all entries
 Check:
    (Name)
    BitSize
    DataType
    Rx / Tx mappable
    Default Data
    MinData
    Flags       </Action>
					<PostCondition>Error if
- mandatory object / entry is not defined
- an optional object exists and the entries are invalid
- Object / entry description does not match with the specification</PostCondition>
					<ProposalForSolution>- Define the missing objects
- correct object / entry description</ProposalForSolution>
					<References>
						<Reference Specification="ETG.5003.2011"></Reference>
					</References>
					<Mandatory>true</Mandatory>
				</Description>
				<TestStep Name="InitResult">
					<SetVariable Target="strResult">EmptyString</SetVariable>
				</TestStep>
				<TestStep Name="CheckIfOdAvailable">
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Mailbox</Value1>
							<Value2>false</Value2>
							<SkipCase Id="1">DuT does not support mailbox.</SkipCase>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Mailbox.CoE</Value1>
							<Value2>false</Value2>
							<SkipCase Id="2">DuT does not support CoE.</SkipCase>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep>
					<GetObjectDictionary Target="odDeviceObjectdictionary">
						<DictionaryType>Offline</DictionaryType>
					</GetObjectDictionary>
					<SkipOnFailure Id="3">No offline object dictionary defined.</SkipOnFailure>
				</TestStep>
				<TestStep>
					<GetObjectList Count="u32Tmp" Target="odDeviceObjectdictionaryList" SourceDict="odDeviceObjectdictionary"></GetObjectList>
					<Compare>
						<Equal>
							<Value1>u32Tmp</Value1>
							<Value2>0</Value2>
							<SkipCase Id="4">No offline object dictionary defined.</SkipCase>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="InitAtLeastOneProfileMatch">
					<SetVariable Target="bAtLeastOneModuleMatch">false</SetVariable>
				</TestStep>
				<TestStep Name="GetCurrentProfileList">
					<SizeOf UInt32Var="u32Tmp">arrOfflineProfiles</SizeOf>
					<Compare>
						<Equal>
							<Value1>u32Tmp</Value1>
							<Value2>0</Value2>
							<CallTestFunction Name="GetCurrentProfileList">
								<Parameter>"offline"</Parameter>
								<Parameter>"SafeOP"</Parameter>
								<OutParameter>arrOfflineProfiles</OutParameter>
							</CallTestFunction>
						</Equal>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>u32Tmp</Value1>
							<Value2>0</Value2>
							<WriteLine Id="5" Param0="arrOfflineProfiles" Level="Verbose">Use previously created profile list ({0})</WriteLine>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep>
					<SizeOf UInt32Var="u32Tmp">arrOfflineProfiles</SizeOf>
				</TestStep>
				<TestStep>
					<InitArray TargetArray="arrCurrentProfiles" Length="u32Tmp"></InitArray>
				</TestStep>
				<TestStep>
					<CopyArray>
						<SourceArray>arrOfflineProfiles</SourceArray>
						<DestinationArray>arrCurrentProfiles</DestinationArray>
						<Length>u32Tmp</Length>
					</CopyArray>
				</TestStep>
				<TestStep Name="InitProfileLoopCounter">
					<SetVariable Target="u32ProfileCounter">0</SetVariable>
				</TestStep>
				<TestStep Name="GetProfileArrayLength">
					<SizeOf UInt32Var="u32CurrentProfilesLength">arrCurrentProfiles</SizeOf>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="6" Param0="u32CurrentProfilesLength" Level="Verbose">'{0}' Profile(s) defined offline.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>u32CurrentProfilesLength</Value1>
							<Value2>0</Value2>
							<SkipCase Id="7">Skip case | no profile defined.</SkipCase>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="ProfileLoopStart">
					<GetArrayItem SourceArray="arrCurrentProfiles" Target="strTmpString" Index="u32ProfileCounter"></GetArrayItem>
				</TestStep>
				<TestStep Name="CheckProfileInformationString">
					<Compare>
						<Equal>
							<Value1>strTmpString</Value1>
							<Value2>null</Value2>
							<RaiseError Id="8" Param0="u32ProfileCounter">Profile Info element [{0}] is null.</RaiseError>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>strTmpString</Value1>
							<Value2>EmptyString</Value2>
							<RaiseError Id="9" Param0="u32ProfileCounter">Profile Info element [{0}] is an empty string.</RaiseError>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="GetDeviceProfile">
					<CallTestFunction Name="GetDeviceProfile">
						<Parameter>strTmpString</Parameter>
						<OutParameter>uint16CurDeviceProfile</OutParameter>
					</CallTestFunction>
				</TestStep>
				<TestStep Name="GetModuleProfile">
					<CallTestFunction Name="GetModuleProfile">
						<Parameter>strTmpString</Parameter>
						<OutParameter>uint16CurModuleProfile</OutParameter>
					</CallTestFunction>
				</TestStep>
				<TestStep Name="GetSubModuleProfile">
					<CallTestFunction Name="GetSubModuleProfile">
						<Parameter>strTmpString</Parameter>
						<OutParameter>uint16CurSubModuleProfile</OutParameter>
					</CallTestFunction>
				</TestStep>
				<TestStep Name="DumpProfileInfo">
					<Description Id="10" Param0="uint16CurDeviceProfile" Param1="uint16CurModuleProfile" Param2="uint16CurSubModuleProfile" Param3="u32ProfileCounter" Level="Output">Module[{3}] : DeviceProfile '{0}' ; ModuleProfile '{1}' ; SubModuleProfile '{2}'</Description>
					<Compare>
						<Equal>
							<Value1>bIgnoreProfileID</Value1>
							<Value2>true</Value2>
							<GotoStep>IndicateThatAtleastOneModuleMatch</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CompareDeviceProfile">
					<Compare>
						<NotEqual>
							<Value1>uint16CurDeviceProfile</Value1>
							<Value2>5003</Value2>
							<WriteLine Id="11" Param0="uint16CurDeviceProfile" Level="Output">Skip Profile  (Test Device Profile '5003' != Cur Device Profile '{0}')</WriteLine>
						</NotEqual>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>uint16CurDeviceProfile</Value1>
							<Value2>5003</Value2>
							<GotoStep>ProfileLoopEnd</GotoStep>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep Name="CompareModuleProfile">
					<Compare>
						<NotEqual>
							<Value1>uint16CurModuleProfile</Value1>
							<Value2>2011</Value2>
							<WriteLine Id="12" Param0="uint16CurModuleProfile" Level="Output">Skip Profile  (Test Module Profile '2011' != Cur Module Profile '{0}')</WriteLine>
						</NotEqual>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>uint16CurModuleProfile</Value1>
							<Value2>2011</Value2>
							<GotoStep>ProfileLoopEnd</GotoStep>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep Name="CompareSubModuleProfile">
					<Compare>
						<NotEqual>
							<Value1>uint16CurSubModuleProfile</Value1>
							<Value2>0</Value2>
							<WriteLine Id="13" Param0="uint16CurSubModuleProfile" Level="Output">Skip Profile  (Test SubModule Profile '0' != Cur SubModule Profile '{0}')</WriteLine>
						</NotEqual>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>uint16CurSubModuleProfile</Value1>
							<Value2>0</Value2>
							<GotoStep>ProfileLoopEnd</GotoStep>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep Name="IndicateThatAtleastOneModuleMatch">
					<SetVariable Target="bAtLeastOneModuleMatch">true</SetVariable>
				</TestStep>
				<TestStep Name="GetObjectIndexInclOffset">
					<SetVariable Target="u16ObjectIndexInclOffset">#x8006 + (u32ProfileCounter * #x10)</SetVariable>
					<WriteLine Id="14" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : ObjectIndex '0x{0:X}'</WriteLine>
				</TestStep>
				<TestStep Name="LoadDeviceObjectDictionary">
					<Description Id="15" Level="Verbose">Load 'offline' object dictionary for testing.</Description>
					<GetObjectDictionary Target="odDeviceObjectdictionary">
						<DictionaryType>Offline</DictionaryType>
					</GetObjectDictionary>
					<RaiseErrorOnFailure Id="16">VerifyObject : failed to load offline object dictionary.</RaiseErrorOnFailure>
				</TestStep>
				<TestStep Name="SetObjectRequiredLevel">
					<SetVariable Target="bObjectOrEntryRequiredLevel">1</SetVariable>
					<WriteLine Id="17" Param0="u16ObjectIndexInclOffset" Level="Verbose">0x{0:X4} 'Enable Config' may be available</WriteLine>
				</TestStep>
				<TestStep Name="CheckIfObjectExists">
					<GetObjectDescription SourceDictionary="odDeviceObjectdictionary" Index="u16ObjectIndexInclOffset" SubIndex="-1"></GetObjectDescription>
					<GotoOnSuccess>CallCheckObjectDescription</GotoOnSuccess>
				</TestStep>
				<TestStep Name="HandleNotExistingObject">
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>2</Value2>
							<WriteLine Id="18" Param0="u16ObjectIndexInclOffset" Level="Warning">The object 0x{0:X4} 'Enable Config' does not exists.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>1</Value2>
							<WriteLine Id="19" Param0="u16ObjectIndexInclOffset" Level="Output">The object 0x{0:X4} 'Enable Config' does not exists.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>ProfileLoopEnd</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CallCheckObjectDescription">
					<Description Id="20" Param0="u16ObjectIndexInclOffset" Level="Output">Verify the object description 0x{0:X4} 'Enable Config'.</Description>
					<CallTestFunction Name="CheckObjectDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"offline"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>"Enable Config"</Parameter>
						<Parameter>null</Parameter>
						<Parameter>9</Parameter>
						<Parameter>-1</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<GotoStep>ProfileLoopEnd</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="InitEntryBittOffset">
					<SetVariable Target="i32CurrentBitOffset">0</SetVariable>
				</TestStep>
				<TestStep Name="StartSi0">
					<Description Id="21" Level="Output">Start validate SubIndex0</Description>
					<WriteLine Id="22" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : Subindex '0x{0:X}.0'</WriteLine>
				</TestStep>
				<TestStep Name="CallSi0CheckEntryDescription">
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"offline"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>0</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>null</Parameter>
						<Parameter>5</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>null</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>null</Parameter>
						<Parameter>null</Parameter>
						<Parameter>null</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>8</Parameter>
						<Parameter>i32CurrentBitOffset</Parameter>
						<Parameter>true</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="EndSi0">
					<SetVariable Target="i32CurrentBitOffset">16</SetVariable>
				</TestStep>
				<TestStep Name="StartSi1">
					<Description Id="23" Level="Output">Start validate SubIndex1</Description>
					<WriteLine Id="24" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : Subindex '0x{0:X}.1'</WriteLine>
				</TestStep>
				<TestStep Name="SetSi1RequiredLevel">
					<SetVariable Target="bObjectOrEntryRequiredLevel">1</SetVariable>
					<WriteLine Id="25" Param0="u16ObjectIndexInclOffset" Level="Verbose">0x{0:X4}.1 'Joule Mode ON' may be available</WriteLine>
				</TestStep>
				<TestStep Name="CheckIfSi1Exists">
					<GetObjectDescription SourceDictionary="odDeviceObjectdictionary" Index="u16ObjectIndexInclOffset" SubIndex="1">
						<Type>u16DataType</Type>
					</GetObjectDescription>
					<GotoOnFailure>HandleNotExistingSi1</GotoOnFailure>
				</TestStep>
				<TestStep>
					<Compare>
						<NotEqual>
							<Value1>u16DataType</Value1>
							<Value2>0</Value2>
							<GotoStep>CallSi1CheckEntryDescription</GotoStep>
						</NotEqual>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="26" Param0="u16ObjectIndexInclOffset" Level="Verbose">The entry 0x{0:X4}.1 is defined as a padding entry.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>EndSi1</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="HandleNotExistingSi1">
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="27" Param0="u16ObjectIndexInclOffset" Level="Output">The entry 0x{0:X4}.1 does not exists.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>EndSi1</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CallSi1CheckEntryDescription">
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"offline"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>1</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>"Joule Mode ON"</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>null</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>i32CurrentBitOffset</Parameter>
						<Parameter>true</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="EndSi1">
					<SetVariable Target="i32CurrentBitOffset">-1</SetVariable>
				</TestStep>
				<TestStep Name="StartSi2">
					<Description Id="28" Level="Output">Start validate SubIndex2</Description>
					<WriteLine Id="29" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : Subindex '0x{0:X}.2'</WriteLine>
				</TestStep>
				<TestStep Name="SetSi2RequiredLevel">
					<SetVariable Target="bObjectOrEntryRequiredLevel">1</SetVariable>
					<WriteLine Id="30" Param0="u16ObjectIndexInclOffset" Level="Verbose">0x{0:X4}.2 'Process Timer ON' may be available</WriteLine>
				</TestStep>
				<TestStep Name="CheckIfSi2Exists">
					<GetObjectDescription SourceDictionary="odDeviceObjectdictionary" Index="u16ObjectIndexInclOffset" SubIndex="2">
						<Type>u16DataType</Type>
					</GetObjectDescription>
					<GotoOnFailure>HandleNotExistingSi2</GotoOnFailure>
				</TestStep>
				<TestStep>
					<Compare>
						<NotEqual>
							<Value1>u16DataType</Value1>
							<Value2>0</Value2>
							<GotoStep>CallSi2CheckEntryDescription</GotoStep>
						</NotEqual>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="31" Param0="u16ObjectIndexInclOffset" Level="Verbose">The entry 0x{0:X4}.2 is defined as a padding entry.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>EndSi2</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="HandleNotExistingSi2">
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="32" Param0="u16ObjectIndexInclOffset" Level="Output">The entry 0x{0:X4}.2 does not exists.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>EndSi2</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CallSi2CheckEntryDescription">
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"offline"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>2</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>"Process Timer ON"</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>null</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>true</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="EndSi2"></TestStep>
				<TestStep Name="CheckReservedEntryRange_3_to_255">
					<Description Id="33" Level="Output">Start check reserved entry range 3 to 255</Description>
					<CallTestFunction Name="CheckReservedEntryRange">
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>3</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>odDeviceObjectdictionary</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="ProfileLoopEnd">
					<Compare>
						<Equal>
							<Value1>bAtLeastOneModuleMatch</Value1>
							<Value2>false</Value2>
							<GotoStep>HandleAbortTestCaseOnFirstError</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="HandleAbortTestCaseOnFirstError">
					<Compare>
						<Equal>
							<Value1>bAbortTestCaseOnFirstError</Value1>
							<Value2>false</Value2>
							<GotoStep>ProfileLoopIncrement</GotoStep>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>strResult</Value1>
							<Value2>EmptyString</Value2>
							<GotoStep>ProfileLoopIncrement</GotoStep>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="34" Level="Output">Object verification for all following modules abort because an error was already detected for the current module.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>END</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="ProfileLoopIncrement">
					<SetVariable Target="u32ProfileCounter">u32ProfileCounter + 1</SetVariable>
					<Compare>
						<Greater>
							<Value1>u32CurrentProfilesLength</Value1>
							<Value2>u32ProfileCounter</Value2>
							<GotoStep>ProfileLoopStart</GotoStep>
						</Greater>
					</Compare>
				</TestStep>
				<TestStep Name="END">
					<Compare>
						<NotEqual>
							<Value1>bAtLeastOneModuleMatch</Value1>
							<Value2>true</Value2>
							<SkipCase Id="35">SKIP TEST(no module/channel supports the current profile)</SkipCase>
						</NotEqual>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bDEBUG</Value1>
							<Value2>true</Value2>
							<WriteLine Id="36" Param0="strResult" Level="Verbose">DEBUG | Result : '{0}'.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>strResult</Value1>
							<Value2>EmptyString</Value2>
							<ReturnSuccess Id="37">Test succeed</ReturnSuccess>
						</Equal>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>strResult</Value1>
							<Value2>EmptyString</Value2>
							<RaiseError Id="38"></RaiseError>
						</NotEqual>
					</Compare>
				</TestStep>
			</TestCase>
			<TestCase Name="online | 0x8006 (Enable Config)" CaseId="14">
				<Description>
					<PreCondition>- The device profile is 5003
- The module profile is 2011
- The submodule profile is 0</PreCondition>
					<Action>- Iterate over all online defined modules/channels and if the PreCondition matches the following operations are done:
- Get the online description of object 0x8006(+module specific offset) 'Enable Config' and all entries
 Check:
    (Name)
    BitSize
    DataType
    Rx / Tx mappable
    Default Data
    MinData
    Flags       </Action>
					<PostCondition>Error if
- mandatory object / entry is not defined
- an optional object exists and the entries are invalid
- Object / entry description does not match with the specification</PostCondition>
					<ProposalForSolution>- Define the missing objects
- correct object / entry description</ProposalForSolution>
					<References>
						<Reference Specification="ETG.5003.2011"></Reference>
					</References>
					<Mandatory>true</Mandatory>
				</Description>
				<TestStep Name="InitResult">
					<SetVariable Target="strResult">EmptyString</SetVariable>
				</TestStep>
				<TestStep Name="CheckIfOdAvailable">
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Mailbox</Value1>
							<Value2>false</Value2>
							<SkipCase Id="1">DuT does not support mailbox.</SkipCase>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Mailbox.CoE</Value1>
							<Value2>false</Value2>
							<SkipCase Id="2">DuT does not support CoE.</SkipCase>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Mailbox.CoE.SdoInfo</Value1>
							<Value2>false</Value2>
							<SkipCase Id="3">DuT does not support SDO Info.</SkipCase>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="InitAtLeastOneProfileMatch">
					<SetVariable Target="bAtLeastOneModuleMatch">false</SetVariable>
				</TestStep>
				<TestStep Name="GetCurrentProfileList">
					<SizeOf UInt32Var="u32Tmp">arrOnlineProfiles</SizeOf>
					<Compare>
						<Equal>
							<Value1>u32Tmp</Value1>
							<Value2>0</Value2>
							<CallTestFunction Name="GetCurrentProfileList">
								<Parameter>"online"</Parameter>
								<Parameter>"SafeOP"</Parameter>
								<OutParameter>arrOnlineProfiles</OutParameter>
							</CallTestFunction>
						</Equal>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>u32Tmp</Value1>
							<Value2>0</Value2>
							<WriteLine Id="4" Param0="arrOnlineProfiles" Level="Verbose">Use previously created profile list ({0})</WriteLine>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep>
					<SizeOf UInt32Var="u32Tmp">arrOnlineProfiles</SizeOf>
				</TestStep>
				<TestStep>
					<InitArray TargetArray="arrCurrentProfiles" Length="u32Tmp"></InitArray>
				</TestStep>
				<TestStep>
					<CopyArray>
						<SourceArray>arrOnlineProfiles</SourceArray>
						<DestinationArray>arrCurrentProfiles</DestinationArray>
						<Length>u32Tmp</Length>
					</CopyArray>
				</TestStep>
				<TestStep Name="InitProfileLoopCounter">
					<SetVariable Target="u32ProfileCounter">0</SetVariable>
				</TestStep>
				<TestStep Name="GetProfileArrayLength">
					<SizeOf UInt32Var="u32CurrentProfilesLength">arrCurrentProfiles</SizeOf>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="5" Param0="u32CurrentProfilesLength" Level="Verbose">'{0}' Profile(s) defined online.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>u32CurrentProfilesLength</Value1>
							<Value2>0</Value2>
							<SkipCase Id="6">Skip case | no profile defined.</SkipCase>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="ProfileLoopStart">
					<GetArrayItem SourceArray="arrCurrentProfiles" Target="strTmpString" Index="u32ProfileCounter"></GetArrayItem>
				</TestStep>
				<TestStep Name="CheckProfileInformationString">
					<Compare>
						<Equal>
							<Value1>strTmpString</Value1>
							<Value2>null</Value2>
							<RaiseError Id="7" Param0="u32ProfileCounter">Profile Info element [{0}] is null.</RaiseError>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>strTmpString</Value1>
							<Value2>EmptyString</Value2>
							<RaiseError Id="8" Param0="u32ProfileCounter">Profile Info element [{0}] is an empty string.</RaiseError>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="GetDeviceProfile">
					<CallTestFunction Name="GetDeviceProfile">
						<Parameter>strTmpString</Parameter>
						<OutParameter>uint16CurDeviceProfile</OutParameter>
					</CallTestFunction>
				</TestStep>
				<TestStep Name="GetModuleProfile">
					<CallTestFunction Name="GetModuleProfile">
						<Parameter>strTmpString</Parameter>
						<OutParameter>uint16CurModuleProfile</OutParameter>
					</CallTestFunction>
				</TestStep>
				<TestStep Name="GetSubModuleProfile">
					<CallTestFunction Name="GetSubModuleProfile">
						<Parameter>strTmpString</Parameter>
						<OutParameter>uint16CurSubModuleProfile</OutParameter>
					</CallTestFunction>
				</TestStep>
				<TestStep Name="DumpProfileInfo">
					<Description Id="9" Param0="uint16CurDeviceProfile" Param1="uint16CurModuleProfile" Param2="uint16CurSubModuleProfile" Param3="u32ProfileCounter" Level="Output">Module[{3}] : DeviceProfile '{0}' ; ModuleProfile '{1}' ; SubModuleProfile '{2}'</Description>
					<Compare>
						<Equal>
							<Value1>bIgnoreProfileID</Value1>
							<Value2>true</Value2>
							<GotoStep>IndicateThatAtleastOneModuleMatch</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CompareDeviceProfile">
					<Compare>
						<NotEqual>
							<Value1>uint16CurDeviceProfile</Value1>
							<Value2>5003</Value2>
							<WriteLine Id="10" Param0="uint16CurDeviceProfile" Level="Output">Skip Profile  (Test Device Profile '5003' != Cur Device Profile '{0}')</WriteLine>
						</NotEqual>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>uint16CurDeviceProfile</Value1>
							<Value2>5003</Value2>
							<GotoStep>ProfileLoopEnd</GotoStep>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep Name="CompareModuleProfile">
					<Compare>
						<NotEqual>
							<Value1>uint16CurModuleProfile</Value1>
							<Value2>2011</Value2>
							<WriteLine Id="11" Param0="uint16CurModuleProfile" Level="Output">Skip Profile  (Test Module Profile '2011' != Cur Module Profile '{0}')</WriteLine>
						</NotEqual>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>uint16CurModuleProfile</Value1>
							<Value2>2011</Value2>
							<GotoStep>ProfileLoopEnd</GotoStep>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep Name="CompareSubModuleProfile">
					<Compare>
						<NotEqual>
							<Value1>uint16CurSubModuleProfile</Value1>
							<Value2>0</Value2>
							<WriteLine Id="12" Param0="uint16CurSubModuleProfile" Level="Output">Skip Profile  (Test SubModule Profile '0' != Cur SubModule Profile '{0}')</WriteLine>
						</NotEqual>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>uint16CurSubModuleProfile</Value1>
							<Value2>0</Value2>
							<GotoStep>ProfileLoopEnd</GotoStep>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep Name="IndicateThatAtleastOneModuleMatch">
					<SetVariable Target="bAtLeastOneModuleMatch">true</SetVariable>
				</TestStep>
				<TestStep Name="GetObjectIndexInclOffset">
					<SetVariable Target="u16ObjectIndexInclOffset">#x8006 + (u32ProfileCounter * #x10)</SetVariable>
					<WriteLine Id="13" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : ObjectIndex '0x{0:X}'</WriteLine>
				</TestStep>
				<TestStep Name="LoadDeviceObjectDictionary">
					<Description Id="14" Level="Verbose">Load 'online' object dictionary for testing.</Description>
					<GetObjectDictionary Target="odDeviceObjectdictionary">
						<DictionaryType>Online</DictionaryType>
					</GetObjectDictionary>
					<RaiseErrorOnFailure Id="15">VerifyObject : failed to load online object dictionary.</RaiseErrorOnFailure>
				</TestStep>
				<TestStep Name="SetObjectRequiredLevel">
					<SetVariable Target="bObjectOrEntryRequiredLevel">1</SetVariable>
					<WriteLine Id="16" Param0="u16ObjectIndexInclOffset" Level="Verbose">0x{0:X4} 'Enable Config' may be available</WriteLine>
				</TestStep>
				<TestStep Name="CheckIfObjectExists">
					<GetObjectDescription SourceDictionary="odDeviceObjectdictionary" Index="u16ObjectIndexInclOffset" SubIndex="-1"></GetObjectDescription>
					<GotoOnSuccess>CallCheckObjectDescription</GotoOnSuccess>
				</TestStep>
				<TestStep Name="HandleNotExistingObject">
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>2</Value2>
							<WriteLine Id="17" Param0="u16ObjectIndexInclOffset" Level="Warning">The object 0x{0:X4} 'Enable Config' does not exists.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>1</Value2>
							<WriteLine Id="18" Param0="u16ObjectIndexInclOffset" Level="Output">The object 0x{0:X4} 'Enable Config' does not exists.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>ProfileLoopEnd</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CallCheckObjectDescription">
					<Description Id="19" Param0="u16ObjectIndexInclOffset" Level="Output">Verify the object description 0x{0:X4} 'Enable Config'.</Description>
					<CallTestFunction Name="CheckObjectDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"online"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>"Enable Config"</Parameter>
						<Parameter>null</Parameter>
						<Parameter>9</Parameter>
						<Parameter>-1</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<GotoStep>ProfileLoopEnd</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="InitEntryBittOffset">
					<SetVariable Target="i32CurrentBitOffset">0</SetVariable>
				</TestStep>
				<TestStep Name="StartSi0">
					<Description Id="20" Level="Output">Start validate SubIndex0</Description>
					<WriteLine Id="21" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : Subindex '0x{0:X}.0'</WriteLine>
				</TestStep>
				<TestStep Name="CallSi0CheckEntryDescription">
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"online"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>0</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>null</Parameter>
						<Parameter>5</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>null</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>null</Parameter>
						<Parameter>null</Parameter>
						<Parameter>null</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>8</Parameter>
						<Parameter>i32CurrentBitOffset</Parameter>
						<Parameter>true</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="EndSi0">
					<SetVariable Target="i32CurrentBitOffset">16</SetVariable>
				</TestStep>
				<TestStep Name="StartSi1">
					<Description Id="22" Level="Output">Start validate SubIndex1</Description>
					<WriteLine Id="23" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : Subindex '0x{0:X}.1'</WriteLine>
				</TestStep>
				<TestStep Name="SetSi1RequiredLevel">
					<SetVariable Target="bObjectOrEntryRequiredLevel">1</SetVariable>
					<WriteLine Id="24" Param0="u16ObjectIndexInclOffset" Level="Verbose">0x{0:X4}.1 'Joule Mode ON' may be available</WriteLine>
				</TestStep>
				<TestStep Name="CheckIfSi1Exists">
					<GetObjectDescription SourceDictionary="odDeviceObjectdictionary" Index="u16ObjectIndexInclOffset" SubIndex="1">
						<Type>u16DataType</Type>
					</GetObjectDescription>
					<GotoOnFailure>HandleNotExistingSi1</GotoOnFailure>
				</TestStep>
				<TestStep>
					<Compare>
						<NotEqual>
							<Value1>u16DataType</Value1>
							<Value2>0</Value2>
							<GotoStep>CallSi1CheckEntryDescription</GotoStep>
						</NotEqual>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="25" Param0="u16ObjectIndexInclOffset" Level="Verbose">The entry 0x{0:X4}.1 is defined as a padding entry.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>EndSi1</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="HandleNotExistingSi1">
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="26" Param0="u16ObjectIndexInclOffset" Level="Output">The entry 0x{0:X4}.1 does not exists.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>EndSi1</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CallSi1CheckEntryDescription">
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"online"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>1</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>"Joule Mode ON"</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>null</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>i32CurrentBitOffset</Parameter>
						<Parameter>true</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="EndSi1">
					<SetVariable Target="i32CurrentBitOffset">-1</SetVariable>
				</TestStep>
				<TestStep Name="StartSi2">
					<Description Id="27" Level="Output">Start validate SubIndex2</Description>
					<WriteLine Id="28" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : Subindex '0x{0:X}.2'</WriteLine>
				</TestStep>
				<TestStep Name="SetSi2RequiredLevel">
					<SetVariable Target="bObjectOrEntryRequiredLevel">1</SetVariable>
					<WriteLine Id="29" Param0="u16ObjectIndexInclOffset" Level="Verbose">0x{0:X4}.2 'Process Timer ON' may be available</WriteLine>
				</TestStep>
				<TestStep Name="CheckIfSi2Exists">
					<GetObjectDescription SourceDictionary="odDeviceObjectdictionary" Index="u16ObjectIndexInclOffset" SubIndex="2">
						<Type>u16DataType</Type>
					</GetObjectDescription>
					<GotoOnFailure>HandleNotExistingSi2</GotoOnFailure>
				</TestStep>
				<TestStep>
					<Compare>
						<NotEqual>
							<Value1>u16DataType</Value1>
							<Value2>0</Value2>
							<GotoStep>CallSi2CheckEntryDescription</GotoStep>
						</NotEqual>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="30" Param0="u16ObjectIndexInclOffset" Level="Verbose">The entry 0x{0:X4}.2 is defined as a padding entry.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>EndSi2</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="HandleNotExistingSi2">
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="31" Param0="u16ObjectIndexInclOffset" Level="Output">The entry 0x{0:X4}.2 does not exists.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>EndSi2</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CallSi2CheckEntryDescription">
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"online"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>2</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>"Process Timer ON"</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>null</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>true</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="EndSi2"></TestStep>
				<TestStep Name="CheckReservedEntryRange_3_to_255">
					<Description Id="32" Level="Output">Start check reserved entry range 3 to 255</Description>
					<CallTestFunction Name="CheckReservedEntryRange">
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>3</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>odDeviceObjectdictionary</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="ProfileLoopEnd">
					<Compare>
						<Equal>
							<Value1>bAtLeastOneModuleMatch</Value1>
							<Value2>false</Value2>
							<GotoStep>HandleAbortTestCaseOnFirstError</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="HandleAbortTestCaseOnFirstError">
					<Compare>
						<Equal>
							<Value1>bAbortTestCaseOnFirstError</Value1>
							<Value2>false</Value2>
							<GotoStep>ProfileLoopIncrement</GotoStep>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>strResult</Value1>
							<Value2>EmptyString</Value2>
							<GotoStep>ProfileLoopIncrement</GotoStep>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="33" Level="Output">Object verification for all following modules abort because an error was already detected for the current module.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>END</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="ProfileLoopIncrement">
					<SetVariable Target="u32ProfileCounter">u32ProfileCounter + 1</SetVariable>
					<Compare>
						<Greater>
							<Value1>u32CurrentProfilesLength</Value1>
							<Value2>u32ProfileCounter</Value2>
							<GotoStep>ProfileLoopStart</GotoStep>
						</Greater>
					</Compare>
				</TestStep>
				<TestStep Name="END">
					<Compare>
						<NotEqual>
							<Value1>bAtLeastOneModuleMatch</Value1>
							<Value2>true</Value2>
							<SkipCase Id="34">SKIP TEST(no module/channel supports the current profile)</SkipCase>
						</NotEqual>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bDEBUG</Value1>
							<Value2>true</Value2>
							<WriteLine Id="35" Param0="strResult" Level="Verbose">DEBUG | Result : '{0}'.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>strResult</Value1>
							<Value2>EmptyString</Value2>
							<ReturnSuccess Id="36">Test succeed</ReturnSuccess>
						</Equal>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>strResult</Value1>
							<Value2>EmptyString</Value2>
							<RaiseError Id="37"></RaiseError>
						</NotEqual>
					</Compare>
				</TestStep>
			</TestCase>
			<TestCase Name="offline | 0x8007 (Joule Mode Config)" CaseId="15">
				<Description>
					<PreCondition>- The device profile is 5003
- The module profile is 2011
- The submodule profile is 0</PreCondition>
					<Action>- Iterate over all offline defined modules/channels and if the PreCondition matches the following operations are done:
- Get the offline description of object 0x8007(+module specific offset) 'Joule Mode Config' and all entries
 Check:
    (Name)
    BitSize
    DataType
    Rx / Tx mappable
    Default Data
    MinData
    Flags       </Action>
					<PostCondition>Error if
- mandatory object / entry is not defined
- an optional object exists and the entries are invalid
- Object / entry description does not match with the specification</PostCondition>
					<ProposalForSolution>- Define the missing objects
- correct object / entry description</ProposalForSolution>
					<References>
						<Reference Specification="ETG.5003.2011"></Reference>
					</References>
					<Mandatory>true</Mandatory>
				</Description>
				<TestStep Name="InitResult">
					<SetVariable Target="strResult">EmptyString</SetVariable>
				</TestStep>
				<TestStep Name="CheckIfOdAvailable">
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Mailbox</Value1>
							<Value2>false</Value2>
							<SkipCase Id="1">DuT does not support mailbox.</SkipCase>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Mailbox.CoE</Value1>
							<Value2>false</Value2>
							<SkipCase Id="2">DuT does not support CoE.</SkipCase>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep>
					<GetObjectDictionary Target="odDeviceObjectdictionary">
						<DictionaryType>Offline</DictionaryType>
					</GetObjectDictionary>
					<SkipOnFailure Id="3">No offline object dictionary defined.</SkipOnFailure>
				</TestStep>
				<TestStep>
					<GetObjectList Count="u32Tmp" Target="odDeviceObjectdictionaryList" SourceDict="odDeviceObjectdictionary"></GetObjectList>
					<Compare>
						<Equal>
							<Value1>u32Tmp</Value1>
							<Value2>0</Value2>
							<SkipCase Id="4">No offline object dictionary defined.</SkipCase>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="InitAtLeastOneProfileMatch">
					<SetVariable Target="bAtLeastOneModuleMatch">false</SetVariable>
				</TestStep>
				<TestStep Name="GetCurrentProfileList">
					<SizeOf UInt32Var="u32Tmp">arrOfflineProfiles</SizeOf>
					<Compare>
						<Equal>
							<Value1>u32Tmp</Value1>
							<Value2>0</Value2>
							<CallTestFunction Name="GetCurrentProfileList">
								<Parameter>"offline"</Parameter>
								<Parameter>"SafeOP"</Parameter>
								<OutParameter>arrOfflineProfiles</OutParameter>
							</CallTestFunction>
						</Equal>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>u32Tmp</Value1>
							<Value2>0</Value2>
							<WriteLine Id="5" Param0="arrOfflineProfiles" Level="Verbose">Use previously created profile list ({0})</WriteLine>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep>
					<SizeOf UInt32Var="u32Tmp">arrOfflineProfiles</SizeOf>
				</TestStep>
				<TestStep>
					<InitArray TargetArray="arrCurrentProfiles" Length="u32Tmp"></InitArray>
				</TestStep>
				<TestStep>
					<CopyArray>
						<SourceArray>arrOfflineProfiles</SourceArray>
						<DestinationArray>arrCurrentProfiles</DestinationArray>
						<Length>u32Tmp</Length>
					</CopyArray>
				</TestStep>
				<TestStep Name="InitProfileLoopCounter">
					<SetVariable Target="u32ProfileCounter">0</SetVariable>
				</TestStep>
				<TestStep Name="GetProfileArrayLength">
					<SizeOf UInt32Var="u32CurrentProfilesLength">arrCurrentProfiles</SizeOf>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="6" Param0="u32CurrentProfilesLength" Level="Verbose">'{0}' Profile(s) defined offline.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>u32CurrentProfilesLength</Value1>
							<Value2>0</Value2>
							<SkipCase Id="7">Skip case | no profile defined.</SkipCase>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="ProfileLoopStart">
					<GetArrayItem SourceArray="arrCurrentProfiles" Target="strTmpString" Index="u32ProfileCounter"></GetArrayItem>
				</TestStep>
				<TestStep Name="CheckProfileInformationString">
					<Compare>
						<Equal>
							<Value1>strTmpString</Value1>
							<Value2>null</Value2>
							<RaiseError Id="8" Param0="u32ProfileCounter">Profile Info element [{0}] is null.</RaiseError>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>strTmpString</Value1>
							<Value2>EmptyString</Value2>
							<RaiseError Id="9" Param0="u32ProfileCounter">Profile Info element [{0}] is an empty string.</RaiseError>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="GetDeviceProfile">
					<CallTestFunction Name="GetDeviceProfile">
						<Parameter>strTmpString</Parameter>
						<OutParameter>uint16CurDeviceProfile</OutParameter>
					</CallTestFunction>
				</TestStep>
				<TestStep Name="GetModuleProfile">
					<CallTestFunction Name="GetModuleProfile">
						<Parameter>strTmpString</Parameter>
						<OutParameter>uint16CurModuleProfile</OutParameter>
					</CallTestFunction>
				</TestStep>
				<TestStep Name="GetSubModuleProfile">
					<CallTestFunction Name="GetSubModuleProfile">
						<Parameter>strTmpString</Parameter>
						<OutParameter>uint16CurSubModuleProfile</OutParameter>
					</CallTestFunction>
				</TestStep>
				<TestStep Name="DumpProfileInfo">
					<Description Id="10" Param0="uint16CurDeviceProfile" Param1="uint16CurModuleProfile" Param2="uint16CurSubModuleProfile" Param3="u32ProfileCounter" Level="Output">Module[{3}] : DeviceProfile '{0}' ; ModuleProfile '{1}' ; SubModuleProfile '{2}'</Description>
					<Compare>
						<Equal>
							<Value1>bIgnoreProfileID</Value1>
							<Value2>true</Value2>
							<GotoStep>IndicateThatAtleastOneModuleMatch</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CompareDeviceProfile">
					<Compare>
						<NotEqual>
							<Value1>uint16CurDeviceProfile</Value1>
							<Value2>5003</Value2>
							<WriteLine Id="11" Param0="uint16CurDeviceProfile" Level="Output">Skip Profile  (Test Device Profile '5003' != Cur Device Profile '{0}')</WriteLine>
						</NotEqual>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>uint16CurDeviceProfile</Value1>
							<Value2>5003</Value2>
							<GotoStep>ProfileLoopEnd</GotoStep>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep Name="CompareModuleProfile">
					<Compare>
						<NotEqual>
							<Value1>uint16CurModuleProfile</Value1>
							<Value2>2011</Value2>
							<WriteLine Id="12" Param0="uint16CurModuleProfile" Level="Output">Skip Profile  (Test Module Profile '2011' != Cur Module Profile '{0}')</WriteLine>
						</NotEqual>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>uint16CurModuleProfile</Value1>
							<Value2>2011</Value2>
							<GotoStep>ProfileLoopEnd</GotoStep>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep Name="CompareSubModuleProfile">
					<Compare>
						<NotEqual>
							<Value1>uint16CurSubModuleProfile</Value1>
							<Value2>0</Value2>
							<WriteLine Id="13" Param0="uint16CurSubModuleProfile" Level="Output">Skip Profile  (Test SubModule Profile '0' != Cur SubModule Profile '{0}')</WriteLine>
						</NotEqual>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>uint16CurSubModuleProfile</Value1>
							<Value2>0</Value2>
							<GotoStep>ProfileLoopEnd</GotoStep>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep Name="IndicateThatAtleastOneModuleMatch">
					<SetVariable Target="bAtLeastOneModuleMatch">true</SetVariable>
				</TestStep>
				<TestStep Name="GetObjectIndexInclOffset">
					<SetVariable Target="u16ObjectIndexInclOffset">#x8007 + (u32ProfileCounter * #x10)</SetVariable>
					<WriteLine Id="14" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : ObjectIndex '0x{0:X}'</WriteLine>
				</TestStep>
				<TestStep Name="LoadDeviceObjectDictionary">
					<Description Id="15" Level="Verbose">Load 'offline' object dictionary for testing.</Description>
					<GetObjectDictionary Target="odDeviceObjectdictionary">
						<DictionaryType>Offline</DictionaryType>
					</GetObjectDictionary>
					<RaiseErrorOnFailure Id="16">VerifyObject : failed to load offline object dictionary.</RaiseErrorOnFailure>
				</TestStep>
				<TestStep Name="SetObjectRequiredLevel">
					<SetVariable Target="bObjectOrEntryRequiredLevel">1</SetVariable>
					<WriteLine Id="17" Param0="u16ObjectIndexInclOffset" Level="Verbose">0x{0:X4} 'Joule Mode Config' may be available</WriteLine>
				</TestStep>
				<TestStep Name="CheckIfObjectExists">
					<GetObjectDescription SourceDictionary="odDeviceObjectdictionary" Index="u16ObjectIndexInclOffset" SubIndex="-1"></GetObjectDescription>
					<GotoOnSuccess>CallCheckObjectDescription</GotoOnSuccess>
				</TestStep>
				<TestStep Name="HandleNotExistingObject">
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>2</Value2>
							<WriteLine Id="18" Param0="u16ObjectIndexInclOffset" Level="Warning">The object 0x{0:X4} 'Joule Mode Config' does not exists.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>1</Value2>
							<WriteLine Id="19" Param0="u16ObjectIndexInclOffset" Level="Output">The object 0x{0:X4} 'Joule Mode Config' does not exists.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>ProfileLoopEnd</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CallCheckObjectDescription">
					<Description Id="20" Param0="u16ObjectIndexInclOffset" Level="Output">Verify the object description 0x{0:X4} 'Joule Mode Config'.</Description>
					<CallTestFunction Name="CheckObjectDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"offline"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>"Joule Mode Config"</Parameter>
						<Parameter>null</Parameter>
						<Parameter>9</Parameter>
						<Parameter>-1</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<GotoStep>ProfileLoopEnd</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="InitEntryBittOffset">
					<SetVariable Target="i32CurrentBitOffset">0</SetVariable>
				</TestStep>
				<TestStep Name="StartSi0">
					<Description Id="21" Level="Output">Start validate SubIndex0</Description>
					<WriteLine Id="22" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : Subindex '0x{0:X}.0'</WriteLine>
				</TestStep>
				<TestStep Name="CallSi0CheckEntryDescription">
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"offline"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>0</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>null</Parameter>
						<Parameter>5</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>null</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>null</Parameter>
						<Parameter>null</Parameter>
						<Parameter>null</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>8</Parameter>
						<Parameter>i32CurrentBitOffset</Parameter>
						<Parameter>true</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="EndSi0">
					<SetVariable Target="i32CurrentBitOffset">16</SetVariable>
				</TestStep>
				<TestStep Name="StartSi1">
					<Description Id="23" Level="Output">Start validate SubIndex1</Description>
					<WriteLine Id="24" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : Subindex '0x{0:X}.1'</WriteLine>
				</TestStep>
				<TestStep Name="SetSi1RequiredLevel">
					<SetVariable Target="bObjectOrEntryRequiredLevel">1</SetVariable>
					<WriteLine Id="25" Param0="u16ObjectIndexInclOffset" Level="Verbose">0x{0:X4}.1 'Joule Mode: Energy Limit' may be available</WriteLine>
				</TestStep>
				<TestStep Name="CheckIfSi1Exists">
					<GetObjectDescription SourceDictionary="odDeviceObjectdictionary" Index="u16ObjectIndexInclOffset" SubIndex="1">
						<Type>u16DataType</Type>
					</GetObjectDescription>
					<GotoOnFailure>HandleNotExistingSi1</GotoOnFailure>
				</TestStep>
				<TestStep>
					<Compare>
						<NotEqual>
							<Value1>u16DataType</Value1>
							<Value2>0</Value2>
							<GotoStep>CallSi1CheckEntryDescription</GotoStep>
						</NotEqual>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="26" Param0="u16ObjectIndexInclOffset" Level="Verbose">The entry 0x{0:X4}.1 is defined as a padding entry.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>EndSi1</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="HandleNotExistingSi1">
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="27" Param0="u16ObjectIndexInclOffset" Level="Output">The entry 0x{0:X4}.1 does not exists.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>EndSi1</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CallSi1CheckEntryDescription">
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"offline"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>1</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>"Joule Mode: Energy Limit"</Parameter>
						<Parameter>8</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>null</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>32</Parameter>
						<Parameter>i32CurrentBitOffset</Parameter>
						<Parameter>true</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="EndSi1">
					<SetVariable Target="i32CurrentBitOffset">-1</SetVariable>
				</TestStep>
				<TestStep Name="CheckReservedEntryRange_2_to_255">
					<Description Id="28" Level="Output">Start check reserved entry range 2 to 255</Description>
					<CallTestFunction Name="CheckReservedEntryRange">
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>2</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>odDeviceObjectdictionary</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="ProfileLoopEnd">
					<Compare>
						<Equal>
							<Value1>bAtLeastOneModuleMatch</Value1>
							<Value2>false</Value2>
							<GotoStep>HandleAbortTestCaseOnFirstError</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="HandleAbortTestCaseOnFirstError">
					<Compare>
						<Equal>
							<Value1>bAbortTestCaseOnFirstError</Value1>
							<Value2>false</Value2>
							<GotoStep>ProfileLoopIncrement</GotoStep>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>strResult</Value1>
							<Value2>EmptyString</Value2>
							<GotoStep>ProfileLoopIncrement</GotoStep>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="29" Level="Output">Object verification for all following modules abort because an error was already detected for the current module.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>END</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="ProfileLoopIncrement">
					<SetVariable Target="u32ProfileCounter">u32ProfileCounter + 1</SetVariable>
					<Compare>
						<Greater>
							<Value1>u32CurrentProfilesLength</Value1>
							<Value2>u32ProfileCounter</Value2>
							<GotoStep>ProfileLoopStart</GotoStep>
						</Greater>
					</Compare>
				</TestStep>
				<TestStep Name="END">
					<Compare>
						<NotEqual>
							<Value1>bAtLeastOneModuleMatch</Value1>
							<Value2>true</Value2>
							<SkipCase Id="30">SKIP TEST(no module/channel supports the current profile)</SkipCase>
						</NotEqual>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bDEBUG</Value1>
							<Value2>true</Value2>
							<WriteLine Id="31" Param0="strResult" Level="Verbose">DEBUG | Result : '{0}'.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>strResult</Value1>
							<Value2>EmptyString</Value2>
							<ReturnSuccess Id="32">Test succeed</ReturnSuccess>
						</Equal>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>strResult</Value1>
							<Value2>EmptyString</Value2>
							<RaiseError Id="33"></RaiseError>
						</NotEqual>
					</Compare>
				</TestStep>
			</TestCase>
			<TestCase Name="online | 0x8007 (Joule Mode Config)" CaseId="16">
				<Description>
					<PreCondition>- The device profile is 5003
- The module profile is 2011
- The submodule profile is 0</PreCondition>
					<Action>- Iterate over all online defined modules/channels and if the PreCondition matches the following operations are done:
- Get the online description of object 0x8007(+module specific offset) 'Joule Mode Config' and all entries
 Check:
    (Name)
    BitSize
    DataType
    Rx / Tx mappable
    Default Data
    MinData
    Flags       </Action>
					<PostCondition>Error if
- mandatory object / entry is not defined
- an optional object exists and the entries are invalid
- Object / entry description does not match with the specification</PostCondition>
					<ProposalForSolution>- Define the missing objects
- correct object / entry description</ProposalForSolution>
					<References>
						<Reference Specification="ETG.5003.2011"></Reference>
					</References>
					<Mandatory>true</Mandatory>
				</Description>
				<TestStep Name="InitResult">
					<SetVariable Target="strResult">EmptyString</SetVariable>
				</TestStep>
				<TestStep Name="CheckIfOdAvailable">
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Mailbox</Value1>
							<Value2>false</Value2>
							<SkipCase Id="1">DuT does not support mailbox.</SkipCase>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Mailbox.CoE</Value1>
							<Value2>false</Value2>
							<SkipCase Id="2">DuT does not support CoE.</SkipCase>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Mailbox.CoE.SdoInfo</Value1>
							<Value2>false</Value2>
							<SkipCase Id="3">DuT does not support SDO Info.</SkipCase>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="InitAtLeastOneProfileMatch">
					<SetVariable Target="bAtLeastOneModuleMatch">false</SetVariable>
				</TestStep>
				<TestStep Name="GetCurrentProfileList">
					<SizeOf UInt32Var="u32Tmp">arrOnlineProfiles</SizeOf>
					<Compare>
						<Equal>
							<Value1>u32Tmp</Value1>
							<Value2>0</Value2>
							<CallTestFunction Name="GetCurrentProfileList">
								<Parameter>"online"</Parameter>
								<Parameter>"SafeOP"</Parameter>
								<OutParameter>arrOnlineProfiles</OutParameter>
							</CallTestFunction>
						</Equal>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>u32Tmp</Value1>
							<Value2>0</Value2>
							<WriteLine Id="4" Param0="arrOnlineProfiles" Level="Verbose">Use previously created profile list ({0})</WriteLine>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep>
					<SizeOf UInt32Var="u32Tmp">arrOnlineProfiles</SizeOf>
				</TestStep>
				<TestStep>
					<InitArray TargetArray="arrCurrentProfiles" Length="u32Tmp"></InitArray>
				</TestStep>
				<TestStep>
					<CopyArray>
						<SourceArray>arrOnlineProfiles</SourceArray>
						<DestinationArray>arrCurrentProfiles</DestinationArray>
						<Length>u32Tmp</Length>
					</CopyArray>
				</TestStep>
				<TestStep Name="InitProfileLoopCounter">
					<SetVariable Target="u32ProfileCounter">0</SetVariable>
				</TestStep>
				<TestStep Name="GetProfileArrayLength">
					<SizeOf UInt32Var="u32CurrentProfilesLength">arrCurrentProfiles</SizeOf>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="5" Param0="u32CurrentProfilesLength" Level="Verbose">'{0}' Profile(s) defined online.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>u32CurrentProfilesLength</Value1>
							<Value2>0</Value2>
							<SkipCase Id="6">Skip case | no profile defined.</SkipCase>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="ProfileLoopStart">
					<GetArrayItem SourceArray="arrCurrentProfiles" Target="strTmpString" Index="u32ProfileCounter"></GetArrayItem>
				</TestStep>
				<TestStep Name="CheckProfileInformationString">
					<Compare>
						<Equal>
							<Value1>strTmpString</Value1>
							<Value2>null</Value2>
							<RaiseError Id="7" Param0="u32ProfileCounter">Profile Info element [{0}] is null.</RaiseError>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>strTmpString</Value1>
							<Value2>EmptyString</Value2>
							<RaiseError Id="8" Param0="u32ProfileCounter">Profile Info element [{0}] is an empty string.</RaiseError>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="GetDeviceProfile">
					<CallTestFunction Name="GetDeviceProfile">
						<Parameter>strTmpString</Parameter>
						<OutParameter>uint16CurDeviceProfile</OutParameter>
					</CallTestFunction>
				</TestStep>
				<TestStep Name="GetModuleProfile">
					<CallTestFunction Name="GetModuleProfile">
						<Parameter>strTmpString</Parameter>
						<OutParameter>uint16CurModuleProfile</OutParameter>
					</CallTestFunction>
				</TestStep>
				<TestStep Name="GetSubModuleProfile">
					<CallTestFunction Name="GetSubModuleProfile">
						<Parameter>strTmpString</Parameter>
						<OutParameter>uint16CurSubModuleProfile</OutParameter>
					</CallTestFunction>
				</TestStep>
				<TestStep Name="DumpProfileInfo">
					<Description Id="9" Param0="uint16CurDeviceProfile" Param1="uint16CurModuleProfile" Param2="uint16CurSubModuleProfile" Param3="u32ProfileCounter" Level="Output">Module[{3}] : DeviceProfile '{0}' ; ModuleProfile '{1}' ; SubModuleProfile '{2}'</Description>
					<Compare>
						<Equal>
							<Value1>bIgnoreProfileID</Value1>
							<Value2>true</Value2>
							<GotoStep>IndicateThatAtleastOneModuleMatch</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CompareDeviceProfile">
					<Compare>
						<NotEqual>
							<Value1>uint16CurDeviceProfile</Value1>
							<Value2>5003</Value2>
							<WriteLine Id="10" Param0="uint16CurDeviceProfile" Level="Output">Skip Profile  (Test Device Profile '5003' != Cur Device Profile '{0}')</WriteLine>
						</NotEqual>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>uint16CurDeviceProfile</Value1>
							<Value2>5003</Value2>
							<GotoStep>ProfileLoopEnd</GotoStep>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep Name="CompareModuleProfile">
					<Compare>
						<NotEqual>
							<Value1>uint16CurModuleProfile</Value1>
							<Value2>2011</Value2>
							<WriteLine Id="11" Param0="uint16CurModuleProfile" Level="Output">Skip Profile  (Test Module Profile '2011' != Cur Module Profile '{0}')</WriteLine>
						</NotEqual>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>uint16CurModuleProfile</Value1>
							<Value2>2011</Value2>
							<GotoStep>ProfileLoopEnd</GotoStep>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep Name="CompareSubModuleProfile">
					<Compare>
						<NotEqual>
							<Value1>uint16CurSubModuleProfile</Value1>
							<Value2>0</Value2>
							<WriteLine Id="12" Param0="uint16CurSubModuleProfile" Level="Output">Skip Profile  (Test SubModule Profile '0' != Cur SubModule Profile '{0}')</WriteLine>
						</NotEqual>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>uint16CurSubModuleProfile</Value1>
							<Value2>0</Value2>
							<GotoStep>ProfileLoopEnd</GotoStep>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep Name="IndicateThatAtleastOneModuleMatch">
					<SetVariable Target="bAtLeastOneModuleMatch">true</SetVariable>
				</TestStep>
				<TestStep Name="GetObjectIndexInclOffset">
					<SetVariable Target="u16ObjectIndexInclOffset">#x8007 + (u32ProfileCounter * #x10)</SetVariable>
					<WriteLine Id="13" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : ObjectIndex '0x{0:X}'</WriteLine>
				</TestStep>
				<TestStep Name="LoadDeviceObjectDictionary">
					<Description Id="14" Level="Verbose">Load 'online' object dictionary for testing.</Description>
					<GetObjectDictionary Target="odDeviceObjectdictionary">
						<DictionaryType>Online</DictionaryType>
					</GetObjectDictionary>
					<RaiseErrorOnFailure Id="15">VerifyObject : failed to load online object dictionary.</RaiseErrorOnFailure>
				</TestStep>
				<TestStep Name="SetObjectRequiredLevel">
					<SetVariable Target="bObjectOrEntryRequiredLevel">1</SetVariable>
					<WriteLine Id="16" Param0="u16ObjectIndexInclOffset" Level="Verbose">0x{0:X4} 'Joule Mode Config' may be available</WriteLine>
				</TestStep>
				<TestStep Name="CheckIfObjectExists">
					<GetObjectDescription SourceDictionary="odDeviceObjectdictionary" Index="u16ObjectIndexInclOffset" SubIndex="-1"></GetObjectDescription>
					<GotoOnSuccess>CallCheckObjectDescription</GotoOnSuccess>
				</TestStep>
				<TestStep Name="HandleNotExistingObject">
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>2</Value2>
							<WriteLine Id="17" Param0="u16ObjectIndexInclOffset" Level="Warning">The object 0x{0:X4} 'Joule Mode Config' does not exists.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>1</Value2>
							<WriteLine Id="18" Param0="u16ObjectIndexInclOffset" Level="Output">The object 0x{0:X4} 'Joule Mode Config' does not exists.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>ProfileLoopEnd</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CallCheckObjectDescription">
					<Description Id="19" Param0="u16ObjectIndexInclOffset" Level="Output">Verify the object description 0x{0:X4} 'Joule Mode Config'.</Description>
					<CallTestFunction Name="CheckObjectDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"online"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>"Joule Mode Config"</Parameter>
						<Parameter>null</Parameter>
						<Parameter>9</Parameter>
						<Parameter>-1</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<GotoStep>ProfileLoopEnd</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="InitEntryBittOffset">
					<SetVariable Target="i32CurrentBitOffset">0</SetVariable>
				</TestStep>
				<TestStep Name="StartSi0">
					<Description Id="20" Level="Output">Start validate SubIndex0</Description>
					<WriteLine Id="21" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : Subindex '0x{0:X}.0'</WriteLine>
				</TestStep>
				<TestStep Name="CallSi0CheckEntryDescription">
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"online"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>0</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>null</Parameter>
						<Parameter>5</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>null</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>null</Parameter>
						<Parameter>null</Parameter>
						<Parameter>null</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>8</Parameter>
						<Parameter>i32CurrentBitOffset</Parameter>
						<Parameter>true</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="EndSi0">
					<SetVariable Target="i32CurrentBitOffset">16</SetVariable>
				</TestStep>
				<TestStep Name="StartSi1">
					<Description Id="22" Level="Output">Start validate SubIndex1</Description>
					<WriteLine Id="23" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : Subindex '0x{0:X}.1'</WriteLine>
				</TestStep>
				<TestStep Name="SetSi1RequiredLevel">
					<SetVariable Target="bObjectOrEntryRequiredLevel">1</SetVariable>
					<WriteLine Id="24" Param0="u16ObjectIndexInclOffset" Level="Verbose">0x{0:X4}.1 'Joule Mode: Energy Limit' may be available</WriteLine>
				</TestStep>
				<TestStep Name="CheckIfSi1Exists">
					<GetObjectDescription SourceDictionary="odDeviceObjectdictionary" Index="u16ObjectIndexInclOffset" SubIndex="1">
						<Type>u16DataType</Type>
					</GetObjectDescription>
					<GotoOnFailure>HandleNotExistingSi1</GotoOnFailure>
				</TestStep>
				<TestStep>
					<Compare>
						<NotEqual>
							<Value1>u16DataType</Value1>
							<Value2>0</Value2>
							<GotoStep>CallSi1CheckEntryDescription</GotoStep>
						</NotEqual>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="25" Param0="u16ObjectIndexInclOffset" Level="Verbose">The entry 0x{0:X4}.1 is defined as a padding entry.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>EndSi1</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="HandleNotExistingSi1">
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="26" Param0="u16ObjectIndexInclOffset" Level="Output">The entry 0x{0:X4}.1 does not exists.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>EndSi1</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CallSi1CheckEntryDescription">
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"online"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>1</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>"Joule Mode: Energy Limit"</Parameter>
						<Parameter>8</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>null</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>32</Parameter>
						<Parameter>i32CurrentBitOffset</Parameter>
						<Parameter>true</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="EndSi1">
					<SetVariable Target="i32CurrentBitOffset">-1</SetVariable>
				</TestStep>
				<TestStep Name="CheckReservedEntryRange_2_to_255">
					<Description Id="27" Level="Output">Start check reserved entry range 2 to 255</Description>
					<CallTestFunction Name="CheckReservedEntryRange">
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>2</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>odDeviceObjectdictionary</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="ProfileLoopEnd">
					<Compare>
						<Equal>
							<Value1>bAtLeastOneModuleMatch</Value1>
							<Value2>false</Value2>
							<GotoStep>HandleAbortTestCaseOnFirstError</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="HandleAbortTestCaseOnFirstError">
					<Compare>
						<Equal>
							<Value1>bAbortTestCaseOnFirstError</Value1>
							<Value2>false</Value2>
							<GotoStep>ProfileLoopIncrement</GotoStep>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>strResult</Value1>
							<Value2>EmptyString</Value2>
							<GotoStep>ProfileLoopIncrement</GotoStep>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="28" Level="Output">Object verification for all following modules abort because an error was already detected for the current module.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>END</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="ProfileLoopIncrement">
					<SetVariable Target="u32ProfileCounter">u32ProfileCounter + 1</SetVariable>
					<Compare>
						<Greater>
							<Value1>u32CurrentProfilesLength</Value1>
							<Value2>u32ProfileCounter</Value2>
							<GotoStep>ProfileLoopStart</GotoStep>
						</Greater>
					</Compare>
				</TestStep>
				<TestStep Name="END">
					<Compare>
						<NotEqual>
							<Value1>bAtLeastOneModuleMatch</Value1>
							<Value2>true</Value2>
							<SkipCase Id="29">SKIP TEST(no module/channel supports the current profile)</SkipCase>
						</NotEqual>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bDEBUG</Value1>
							<Value2>true</Value2>
							<WriteLine Id="30" Param0="strResult" Level="Verbose">DEBUG | Result : '{0}'.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>strResult</Value1>
							<Value2>EmptyString</Value2>
							<ReturnSuccess Id="31">Test succeed</ReturnSuccess>
						</Equal>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>strResult</Value1>
							<Value2>EmptyString</Value2>
							<RaiseError Id="32"></RaiseError>
						</NotEqual>
					</Compare>
				</TestStep>
			</TestCase>
			<TestCase Name="offline | 0x8008 (Process Timer Config)" CaseId="17">
				<Description>
					<PreCondition>- The device profile is 5003
- The module profile is 2011
- The submodule profile is 0</PreCondition>
					<Action>- Iterate over all offline defined modules/channels and if the PreCondition matches the following operations are done:
- Get the offline description of object 0x8008(+module specific offset) 'Process Timer Config' and all entries
 Check:
    (Name)
    BitSize
    DataType
    Rx / Tx mappable
    Default Data
    MinData
    Flags       </Action>
					<PostCondition>Error if
- mandatory object / entry is not defined
- an optional object exists and the entries are invalid
- Object / entry description does not match with the specification</PostCondition>
					<ProposalForSolution>- Define the missing objects
- correct object / entry description</ProposalForSolution>
					<References>
						<Reference Specification="ETG.5003.2011"></Reference>
					</References>
					<Mandatory>true</Mandatory>
				</Description>
				<TestStep Name="InitResult">
					<SetVariable Target="strResult">EmptyString</SetVariable>
				</TestStep>
				<TestStep Name="CheckIfOdAvailable">
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Mailbox</Value1>
							<Value2>false</Value2>
							<SkipCase Id="1">DuT does not support mailbox.</SkipCase>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Mailbox.CoE</Value1>
							<Value2>false</Value2>
							<SkipCase Id="2">DuT does not support CoE.</SkipCase>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep>
					<GetObjectDictionary Target="odDeviceObjectdictionary">
						<DictionaryType>Offline</DictionaryType>
					</GetObjectDictionary>
					<SkipOnFailure Id="3">No offline object dictionary defined.</SkipOnFailure>
				</TestStep>
				<TestStep>
					<GetObjectList Count="u32Tmp" Target="odDeviceObjectdictionaryList" SourceDict="odDeviceObjectdictionary"></GetObjectList>
					<Compare>
						<Equal>
							<Value1>u32Tmp</Value1>
							<Value2>0</Value2>
							<SkipCase Id="4">No offline object dictionary defined.</SkipCase>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="InitAtLeastOneProfileMatch">
					<SetVariable Target="bAtLeastOneModuleMatch">false</SetVariable>
				</TestStep>
				<TestStep Name="GetCurrentProfileList">
					<SizeOf UInt32Var="u32Tmp">arrOfflineProfiles</SizeOf>
					<Compare>
						<Equal>
							<Value1>u32Tmp</Value1>
							<Value2>0</Value2>
							<CallTestFunction Name="GetCurrentProfileList">
								<Parameter>"offline"</Parameter>
								<Parameter>"SafeOP"</Parameter>
								<OutParameter>arrOfflineProfiles</OutParameter>
							</CallTestFunction>
						</Equal>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>u32Tmp</Value1>
							<Value2>0</Value2>
							<WriteLine Id="5" Param0="arrOfflineProfiles" Level="Verbose">Use previously created profile list ({0})</WriteLine>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep>
					<SizeOf UInt32Var="u32Tmp">arrOfflineProfiles</SizeOf>
				</TestStep>
				<TestStep>
					<InitArray TargetArray="arrCurrentProfiles" Length="u32Tmp"></InitArray>
				</TestStep>
				<TestStep>
					<CopyArray>
						<SourceArray>arrOfflineProfiles</SourceArray>
						<DestinationArray>arrCurrentProfiles</DestinationArray>
						<Length>u32Tmp</Length>
					</CopyArray>
				</TestStep>
				<TestStep Name="InitProfileLoopCounter">
					<SetVariable Target="u32ProfileCounter">0</SetVariable>
				</TestStep>
				<TestStep Name="GetProfileArrayLength">
					<SizeOf UInt32Var="u32CurrentProfilesLength">arrCurrentProfiles</SizeOf>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="6" Param0="u32CurrentProfilesLength" Level="Verbose">'{0}' Profile(s) defined offline.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>u32CurrentProfilesLength</Value1>
							<Value2>0</Value2>
							<SkipCase Id="7">Skip case | no profile defined.</SkipCase>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="ProfileLoopStart">
					<GetArrayItem SourceArray="arrCurrentProfiles" Target="strTmpString" Index="u32ProfileCounter"></GetArrayItem>
				</TestStep>
				<TestStep Name="CheckProfileInformationString">
					<Compare>
						<Equal>
							<Value1>strTmpString</Value1>
							<Value2>null</Value2>
							<RaiseError Id="8" Param0="u32ProfileCounter">Profile Info element [{0}] is null.</RaiseError>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>strTmpString</Value1>
							<Value2>EmptyString</Value2>
							<RaiseError Id="9" Param0="u32ProfileCounter">Profile Info element [{0}] is an empty string.</RaiseError>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="GetDeviceProfile">
					<CallTestFunction Name="GetDeviceProfile">
						<Parameter>strTmpString</Parameter>
						<OutParameter>uint16CurDeviceProfile</OutParameter>
					</CallTestFunction>
				</TestStep>
				<TestStep Name="GetModuleProfile">
					<CallTestFunction Name="GetModuleProfile">
						<Parameter>strTmpString</Parameter>
						<OutParameter>uint16CurModuleProfile</OutParameter>
					</CallTestFunction>
				</TestStep>
				<TestStep Name="GetSubModuleProfile">
					<CallTestFunction Name="GetSubModuleProfile">
						<Parameter>strTmpString</Parameter>
						<OutParameter>uint16CurSubModuleProfile</OutParameter>
					</CallTestFunction>
				</TestStep>
				<TestStep Name="DumpProfileInfo">
					<Description Id="10" Param0="uint16CurDeviceProfile" Param1="uint16CurModuleProfile" Param2="uint16CurSubModuleProfile" Param3="u32ProfileCounter" Level="Output">Module[{3}] : DeviceProfile '{0}' ; ModuleProfile '{1}' ; SubModuleProfile '{2}'</Description>
					<Compare>
						<Equal>
							<Value1>bIgnoreProfileID</Value1>
							<Value2>true</Value2>
							<GotoStep>IndicateThatAtleastOneModuleMatch</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CompareDeviceProfile">
					<Compare>
						<NotEqual>
							<Value1>uint16CurDeviceProfile</Value1>
							<Value2>5003</Value2>
							<WriteLine Id="11" Param0="uint16CurDeviceProfile" Level="Output">Skip Profile  (Test Device Profile '5003' != Cur Device Profile '{0}')</WriteLine>
						</NotEqual>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>uint16CurDeviceProfile</Value1>
							<Value2>5003</Value2>
							<GotoStep>ProfileLoopEnd</GotoStep>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep Name="CompareModuleProfile">
					<Compare>
						<NotEqual>
							<Value1>uint16CurModuleProfile</Value1>
							<Value2>2011</Value2>
							<WriteLine Id="12" Param0="uint16CurModuleProfile" Level="Output">Skip Profile  (Test Module Profile '2011' != Cur Module Profile '{0}')</WriteLine>
						</NotEqual>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>uint16CurModuleProfile</Value1>
							<Value2>2011</Value2>
							<GotoStep>ProfileLoopEnd</GotoStep>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep Name="CompareSubModuleProfile">
					<Compare>
						<NotEqual>
							<Value1>uint16CurSubModuleProfile</Value1>
							<Value2>0</Value2>
							<WriteLine Id="13" Param0="uint16CurSubModuleProfile" Level="Output">Skip Profile  (Test SubModule Profile '0' != Cur SubModule Profile '{0}')</WriteLine>
						</NotEqual>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>uint16CurSubModuleProfile</Value1>
							<Value2>0</Value2>
							<GotoStep>ProfileLoopEnd</GotoStep>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep Name="IndicateThatAtleastOneModuleMatch">
					<SetVariable Target="bAtLeastOneModuleMatch">true</SetVariable>
				</TestStep>
				<TestStep Name="GetObjectIndexInclOffset">
					<SetVariable Target="u16ObjectIndexInclOffset">#x8008 + (u32ProfileCounter * #x10)</SetVariable>
					<WriteLine Id="14" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : ObjectIndex '0x{0:X}'</WriteLine>
				</TestStep>
				<TestStep Name="LoadDeviceObjectDictionary">
					<Description Id="15" Level="Verbose">Load 'offline' object dictionary for testing.</Description>
					<GetObjectDictionary Target="odDeviceObjectdictionary">
						<DictionaryType>Offline</DictionaryType>
					</GetObjectDictionary>
					<RaiseErrorOnFailure Id="16">VerifyObject : failed to load offline object dictionary.</RaiseErrorOnFailure>
				</TestStep>
				<TestStep Name="SetObjectRequiredLevel">
					<SetVariable Target="bObjectOrEntryRequiredLevel">1</SetVariable>
					<WriteLine Id="17" Param0="u16ObjectIndexInclOffset" Level="Verbose">0x{0:X4} 'Process Timer Config' may be available</WriteLine>
				</TestStep>
				<TestStep Name="CheckIfObjectExists">
					<GetObjectDescription SourceDictionary="odDeviceObjectdictionary" Index="u16ObjectIndexInclOffset" SubIndex="-1"></GetObjectDescription>
					<GotoOnSuccess>CallCheckObjectDescription</GotoOnSuccess>
				</TestStep>
				<TestStep Name="HandleNotExistingObject">
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>2</Value2>
							<WriteLine Id="18" Param0="u16ObjectIndexInclOffset" Level="Warning">The object 0x{0:X4} 'Process Timer Config' does not exists.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>1</Value2>
							<WriteLine Id="19" Param0="u16ObjectIndexInclOffset" Level="Output">The object 0x{0:X4} 'Process Timer Config' does not exists.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>ProfileLoopEnd</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CallCheckObjectDescription">
					<Description Id="20" Param0="u16ObjectIndexInclOffset" Level="Output">Verify the object description 0x{0:X4} 'Process Timer Config'.</Description>
					<CallTestFunction Name="CheckObjectDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"offline"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>"Process Timer Config"</Parameter>
						<Parameter>null</Parameter>
						<Parameter>9</Parameter>
						<Parameter>-1</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<GotoStep>ProfileLoopEnd</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="InitEntryBittOffset">
					<SetVariable Target="i32CurrentBitOffset">0</SetVariable>
				</TestStep>
				<TestStep Name="StartSi0">
					<Description Id="21" Level="Output">Start validate SubIndex0</Description>
					<WriteLine Id="22" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : Subindex '0x{0:X}.0'</WriteLine>
				</TestStep>
				<TestStep Name="CallSi0CheckEntryDescription">
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"offline"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>0</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>null</Parameter>
						<Parameter>5</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>null</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>null</Parameter>
						<Parameter>null</Parameter>
						<Parameter>null</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>8</Parameter>
						<Parameter>i32CurrentBitOffset</Parameter>
						<Parameter>true</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="EndSi0">
					<SetVariable Target="i32CurrentBitOffset">16</SetVariable>
				</TestStep>
				<TestStep Name="StartSi1">
					<Description Id="23" Level="Output">Start validate SubIndex1</Description>
					<WriteLine Id="24" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : Subindex '0x{0:X}.1'</WriteLine>
				</TestStep>
				<TestStep Name="SetSi1RequiredLevel">
					<SetVariable Target="bObjectOrEntryRequiredLevel">1</SetVariable>
					<WriteLine Id="25" Param0="u16ObjectIndexInclOffset" Level="Verbose">0x{0:X4}.1 'Process Timer: Timeout' may be available</WriteLine>
				</TestStep>
				<TestStep Name="CheckIfSi1Exists">
					<GetObjectDescription SourceDictionary="odDeviceObjectdictionary" Index="u16ObjectIndexInclOffset" SubIndex="1">
						<Type>u16DataType</Type>
					</GetObjectDescription>
					<GotoOnFailure>HandleNotExistingSi1</GotoOnFailure>
				</TestStep>
				<TestStep>
					<Compare>
						<NotEqual>
							<Value1>u16DataType</Value1>
							<Value2>0</Value2>
							<GotoStep>CallSi1CheckEntryDescription</GotoStep>
						</NotEqual>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="26" Param0="u16ObjectIndexInclOffset" Level="Verbose">The entry 0x{0:X4}.1 is defined as a padding entry.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>EndSi1</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="HandleNotExistingSi1">
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="27" Param0="u16ObjectIndexInclOffset" Level="Output">The entry 0x{0:X4}.1 does not exists.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>EndSi1</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CallSi1CheckEntryDescription">
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"offline"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>1</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>"Process Timer: Timeout"</Parameter>
						<Parameter>8</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>null</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>32</Parameter>
						<Parameter>i32CurrentBitOffset</Parameter>
						<Parameter>true</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="EndSi1">
					<SetVariable Target="i32CurrentBitOffset">-1</SetVariable>
				</TestStep>
				<TestStep Name="CheckReservedEntryRange_2_to_255">
					<Description Id="28" Level="Output">Start check reserved entry range 2 to 255</Description>
					<CallTestFunction Name="CheckReservedEntryRange">
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>2</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>odDeviceObjectdictionary</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="ProfileLoopEnd">
					<Compare>
						<Equal>
							<Value1>bAtLeastOneModuleMatch</Value1>
							<Value2>false</Value2>
							<GotoStep>HandleAbortTestCaseOnFirstError</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="HandleAbortTestCaseOnFirstError">
					<Compare>
						<Equal>
							<Value1>bAbortTestCaseOnFirstError</Value1>
							<Value2>false</Value2>
							<GotoStep>ProfileLoopIncrement</GotoStep>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>strResult</Value1>
							<Value2>EmptyString</Value2>
							<GotoStep>ProfileLoopIncrement</GotoStep>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="29" Level="Output">Object verification for all following modules abort because an error was already detected for the current module.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>END</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="ProfileLoopIncrement">
					<SetVariable Target="u32ProfileCounter">u32ProfileCounter + 1</SetVariable>
					<Compare>
						<Greater>
							<Value1>u32CurrentProfilesLength</Value1>
							<Value2>u32ProfileCounter</Value2>
							<GotoStep>ProfileLoopStart</GotoStep>
						</Greater>
					</Compare>
				</TestStep>
				<TestStep Name="END">
					<Compare>
						<NotEqual>
							<Value1>bAtLeastOneModuleMatch</Value1>
							<Value2>true</Value2>
							<SkipCase Id="30">SKIP TEST(no module/channel supports the current profile)</SkipCase>
						</NotEqual>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bDEBUG</Value1>
							<Value2>true</Value2>
							<WriteLine Id="31" Param0="strResult" Level="Verbose">DEBUG | Result : '{0}'.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>strResult</Value1>
							<Value2>EmptyString</Value2>
							<ReturnSuccess Id="32">Test succeed</ReturnSuccess>
						</Equal>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>strResult</Value1>
							<Value2>EmptyString</Value2>
							<RaiseError Id="33"></RaiseError>
						</NotEqual>
					</Compare>
				</TestStep>
			</TestCase>
			<TestCase Name="online | 0x8008 (Process Timer Config)" CaseId="18">
				<Description>
					<PreCondition>- The device profile is 5003
- The module profile is 2011
- The submodule profile is 0</PreCondition>
					<Action>- Iterate over all online defined modules/channels and if the PreCondition matches the following operations are done:
- Get the online description of object 0x8008(+module specific offset) 'Process Timer Config' and all entries
 Check:
    (Name)
    BitSize
    DataType
    Rx / Tx mappable
    Default Data
    MinData
    Flags       </Action>
					<PostCondition>Error if
- mandatory object / entry is not defined
- an optional object exists and the entries are invalid
- Object / entry description does not match with the specification</PostCondition>
					<ProposalForSolution>- Define the missing objects
- correct object / entry description</ProposalForSolution>
					<References>
						<Reference Specification="ETG.5003.2011"></Reference>
					</References>
					<Mandatory>true</Mandatory>
				</Description>
				<TestStep Name="InitResult">
					<SetVariable Target="strResult">EmptyString</SetVariable>
				</TestStep>
				<TestStep Name="CheckIfOdAvailable">
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Mailbox</Value1>
							<Value2>false</Value2>
							<SkipCase Id="1">DuT does not support mailbox.</SkipCase>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Mailbox.CoE</Value1>
							<Value2>false</Value2>
							<SkipCase Id="2">DuT does not support CoE.</SkipCase>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Mailbox.CoE.SdoInfo</Value1>
							<Value2>false</Value2>
							<SkipCase Id="3">DuT does not support SDO Info.</SkipCase>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="InitAtLeastOneProfileMatch">
					<SetVariable Target="bAtLeastOneModuleMatch">false</SetVariable>
				</TestStep>
				<TestStep Name="GetCurrentProfileList">
					<SizeOf UInt32Var="u32Tmp">arrOnlineProfiles</SizeOf>
					<Compare>
						<Equal>
							<Value1>u32Tmp</Value1>
							<Value2>0</Value2>
							<CallTestFunction Name="GetCurrentProfileList">
								<Parameter>"online"</Parameter>
								<Parameter>"SafeOP"</Parameter>
								<OutParameter>arrOnlineProfiles</OutParameter>
							</CallTestFunction>
						</Equal>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>u32Tmp</Value1>
							<Value2>0</Value2>
							<WriteLine Id="4" Param0="arrOnlineProfiles" Level="Verbose">Use previously created profile list ({0})</WriteLine>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep>
					<SizeOf UInt32Var="u32Tmp">arrOnlineProfiles</SizeOf>
				</TestStep>
				<TestStep>
					<InitArray TargetArray="arrCurrentProfiles" Length="u32Tmp"></InitArray>
				</TestStep>
				<TestStep>
					<CopyArray>
						<SourceArray>arrOnlineProfiles</SourceArray>
						<DestinationArray>arrCurrentProfiles</DestinationArray>
						<Length>u32Tmp</Length>
					</CopyArray>
				</TestStep>
				<TestStep Name="InitProfileLoopCounter">
					<SetVariable Target="u32ProfileCounter">0</SetVariable>
				</TestStep>
				<TestStep Name="GetProfileArrayLength">
					<SizeOf UInt32Var="u32CurrentProfilesLength">arrCurrentProfiles</SizeOf>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="5" Param0="u32CurrentProfilesLength" Level="Verbose">'{0}' Profile(s) defined online.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>u32CurrentProfilesLength</Value1>
							<Value2>0</Value2>
							<SkipCase Id="6">Skip case | no profile defined.</SkipCase>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="ProfileLoopStart">
					<GetArrayItem SourceArray="arrCurrentProfiles" Target="strTmpString" Index="u32ProfileCounter"></GetArrayItem>
				</TestStep>
				<TestStep Name="CheckProfileInformationString">
					<Compare>
						<Equal>
							<Value1>strTmpString</Value1>
							<Value2>null</Value2>
							<RaiseError Id="7" Param0="u32ProfileCounter">Profile Info element [{0}] is null.</RaiseError>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>strTmpString</Value1>
							<Value2>EmptyString</Value2>
							<RaiseError Id="8" Param0="u32ProfileCounter">Profile Info element [{0}] is an empty string.</RaiseError>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="GetDeviceProfile">
					<CallTestFunction Name="GetDeviceProfile">
						<Parameter>strTmpString</Parameter>
						<OutParameter>uint16CurDeviceProfile</OutParameter>
					</CallTestFunction>
				</TestStep>
				<TestStep Name="GetModuleProfile">
					<CallTestFunction Name="GetModuleProfile">
						<Parameter>strTmpString</Parameter>
						<OutParameter>uint16CurModuleProfile</OutParameter>
					</CallTestFunction>
				</TestStep>
				<TestStep Name="GetSubModuleProfile">
					<CallTestFunction Name="GetSubModuleProfile">
						<Parameter>strTmpString</Parameter>
						<OutParameter>uint16CurSubModuleProfile</OutParameter>
					</CallTestFunction>
				</TestStep>
				<TestStep Name="DumpProfileInfo">
					<Description Id="9" Param0="uint16CurDeviceProfile" Param1="uint16CurModuleProfile" Param2="uint16CurSubModuleProfile" Param3="u32ProfileCounter" Level="Output">Module[{3}] : DeviceProfile '{0}' ; ModuleProfile '{1}' ; SubModuleProfile '{2}'</Description>
					<Compare>
						<Equal>
							<Value1>bIgnoreProfileID</Value1>
							<Value2>true</Value2>
							<GotoStep>IndicateThatAtleastOneModuleMatch</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CompareDeviceProfile">
					<Compare>
						<NotEqual>
							<Value1>uint16CurDeviceProfile</Value1>
							<Value2>5003</Value2>
							<WriteLine Id="10" Param0="uint16CurDeviceProfile" Level="Output">Skip Profile  (Test Device Profile '5003' != Cur Device Profile '{0}')</WriteLine>
						</NotEqual>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>uint16CurDeviceProfile</Value1>
							<Value2>5003</Value2>
							<GotoStep>ProfileLoopEnd</GotoStep>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep Name="CompareModuleProfile">
					<Compare>
						<NotEqual>
							<Value1>uint16CurModuleProfile</Value1>
							<Value2>2011</Value2>
							<WriteLine Id="11" Param0="uint16CurModuleProfile" Level="Output">Skip Profile  (Test Module Profile '2011' != Cur Module Profile '{0}')</WriteLine>
						</NotEqual>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>uint16CurModuleProfile</Value1>
							<Value2>2011</Value2>
							<GotoStep>ProfileLoopEnd</GotoStep>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep Name="CompareSubModuleProfile">
					<Compare>
						<NotEqual>
							<Value1>uint16CurSubModuleProfile</Value1>
							<Value2>0</Value2>
							<WriteLine Id="12" Param0="uint16CurSubModuleProfile" Level="Output">Skip Profile  (Test SubModule Profile '0' != Cur SubModule Profile '{0}')</WriteLine>
						</NotEqual>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>uint16CurSubModuleProfile</Value1>
							<Value2>0</Value2>
							<GotoStep>ProfileLoopEnd</GotoStep>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep Name="IndicateThatAtleastOneModuleMatch">
					<SetVariable Target="bAtLeastOneModuleMatch">true</SetVariable>
				</TestStep>
				<TestStep Name="GetObjectIndexInclOffset">
					<SetVariable Target="u16ObjectIndexInclOffset">#x8008 + (u32ProfileCounter * #x10)</SetVariable>
					<WriteLine Id="13" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : ObjectIndex '0x{0:X}'</WriteLine>
				</TestStep>
				<TestStep Name="LoadDeviceObjectDictionary">
					<Description Id="14" Level="Verbose">Load 'online' object dictionary for testing.</Description>
					<GetObjectDictionary Target="odDeviceObjectdictionary">
						<DictionaryType>Online</DictionaryType>
					</GetObjectDictionary>
					<RaiseErrorOnFailure Id="15">VerifyObject : failed to load online object dictionary.</RaiseErrorOnFailure>
				</TestStep>
				<TestStep Name="SetObjectRequiredLevel">
					<SetVariable Target="bObjectOrEntryRequiredLevel">1</SetVariable>
					<WriteLine Id="16" Param0="u16ObjectIndexInclOffset" Level="Verbose">0x{0:X4} 'Process Timer Config' may be available</WriteLine>
				</TestStep>
				<TestStep Name="CheckIfObjectExists">
					<GetObjectDescription SourceDictionary="odDeviceObjectdictionary" Index="u16ObjectIndexInclOffset" SubIndex="-1"></GetObjectDescription>
					<GotoOnSuccess>CallCheckObjectDescription</GotoOnSuccess>
				</TestStep>
				<TestStep Name="HandleNotExistingObject">
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>2</Value2>
							<WriteLine Id="17" Param0="u16ObjectIndexInclOffset" Level="Warning">The object 0x{0:X4} 'Process Timer Config' does not exists.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>1</Value2>
							<WriteLine Id="18" Param0="u16ObjectIndexInclOffset" Level="Output">The object 0x{0:X4} 'Process Timer Config' does not exists.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>ProfileLoopEnd</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CallCheckObjectDescription">
					<Description Id="19" Param0="u16ObjectIndexInclOffset" Level="Output">Verify the object description 0x{0:X4} 'Process Timer Config'.</Description>
					<CallTestFunction Name="CheckObjectDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"online"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>"Process Timer Config"</Parameter>
						<Parameter>null</Parameter>
						<Parameter>9</Parameter>
						<Parameter>-1</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<GotoStep>ProfileLoopEnd</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="InitEntryBittOffset">
					<SetVariable Target="i32CurrentBitOffset">0</SetVariable>
				</TestStep>
				<TestStep Name="StartSi0">
					<Description Id="20" Level="Output">Start validate SubIndex0</Description>
					<WriteLine Id="21" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : Subindex '0x{0:X}.0'</WriteLine>
				</TestStep>
				<TestStep Name="CallSi0CheckEntryDescription">
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"online"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>0</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>null</Parameter>
						<Parameter>5</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>null</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>null</Parameter>
						<Parameter>null</Parameter>
						<Parameter>null</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>8</Parameter>
						<Parameter>i32CurrentBitOffset</Parameter>
						<Parameter>true</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="EndSi0">
					<SetVariable Target="i32CurrentBitOffset">16</SetVariable>
				</TestStep>
				<TestStep Name="StartSi1">
					<Description Id="22" Level="Output">Start validate SubIndex1</Description>
					<WriteLine Id="23" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : Subindex '0x{0:X}.1'</WriteLine>
				</TestStep>
				<TestStep Name="SetSi1RequiredLevel">
					<SetVariable Target="bObjectOrEntryRequiredLevel">1</SetVariable>
					<WriteLine Id="24" Param0="u16ObjectIndexInclOffset" Level="Verbose">0x{0:X4}.1 'Process Timer: Timeout' may be available</WriteLine>
				</TestStep>
				<TestStep Name="CheckIfSi1Exists">
					<GetObjectDescription SourceDictionary="odDeviceObjectdictionary" Index="u16ObjectIndexInclOffset" SubIndex="1">
						<Type>u16DataType</Type>
					</GetObjectDescription>
					<GotoOnFailure>HandleNotExistingSi1</GotoOnFailure>
				</TestStep>
				<TestStep>
					<Compare>
						<NotEqual>
							<Value1>u16DataType</Value1>
							<Value2>0</Value2>
							<GotoStep>CallSi1CheckEntryDescription</GotoStep>
						</NotEqual>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="25" Param0="u16ObjectIndexInclOffset" Level="Verbose">The entry 0x{0:X4}.1 is defined as a padding entry.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>EndSi1</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="HandleNotExistingSi1">
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="26" Param0="u16ObjectIndexInclOffset" Level="Output">The entry 0x{0:X4}.1 does not exists.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>EndSi1</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CallSi1CheckEntryDescription">
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"online"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>1</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>"Process Timer: Timeout"</Parameter>
						<Parameter>8</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>null</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>32</Parameter>
						<Parameter>i32CurrentBitOffset</Parameter>
						<Parameter>true</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="EndSi1">
					<SetVariable Target="i32CurrentBitOffset">-1</SetVariable>
				</TestStep>
				<TestStep Name="CheckReservedEntryRange_2_to_255">
					<Description Id="27" Level="Output">Start check reserved entry range 2 to 255</Description>
					<CallTestFunction Name="CheckReservedEntryRange">
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>2</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>odDeviceObjectdictionary</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="ProfileLoopEnd">
					<Compare>
						<Equal>
							<Value1>bAtLeastOneModuleMatch</Value1>
							<Value2>false</Value2>
							<GotoStep>HandleAbortTestCaseOnFirstError</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="HandleAbortTestCaseOnFirstError">
					<Compare>
						<Equal>
							<Value1>bAbortTestCaseOnFirstError</Value1>
							<Value2>false</Value2>
							<GotoStep>ProfileLoopIncrement</GotoStep>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>strResult</Value1>
							<Value2>EmptyString</Value2>
							<GotoStep>ProfileLoopIncrement</GotoStep>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="28" Level="Output">Object verification for all following modules abort because an error was already detected for the current module.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>END</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="ProfileLoopIncrement">
					<SetVariable Target="u32ProfileCounter">u32ProfileCounter + 1</SetVariable>
					<Compare>
						<Greater>
							<Value1>u32CurrentProfilesLength</Value1>
							<Value2>u32ProfileCounter</Value2>
							<GotoStep>ProfileLoopStart</GotoStep>
						</Greater>
					</Compare>
				</TestStep>
				<TestStep Name="END">
					<Compare>
						<NotEqual>
							<Value1>bAtLeastOneModuleMatch</Value1>
							<Value2>true</Value2>
							<SkipCase Id="29">SKIP TEST(no module/channel supports the current profile)</SkipCase>
						</NotEqual>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bDEBUG</Value1>
							<Value2>true</Value2>
							<WriteLine Id="30" Param0="strResult" Level="Verbose">DEBUG | Result : '{0}'.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>strResult</Value1>
							<Value2>EmptyString</Value2>
							<ReturnSuccess Id="31">Test succeed</ReturnSuccess>
						</Equal>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>strResult</Value1>
							<Value2>EmptyString</Value2>
							<RaiseError Id="32"></RaiseError>
						</NotEqual>
					</Compare>
				</TestStep>
			</TestCase>
			<TestCase Name="offline | 0x8009 to 0x800F (reserved range)" CaseId="19">
				<Description>
					<PreCondition>- The device profile is 5003
- The module profile is 2011
- The submodule profile is 0</PreCondition>
					<Action>- Iterate over all offline defined modules/channels and if the PreCondition matches the check if one object in the reserved range is defined</Action>
					<PostCondition>- Error if at least one object is defined</PostCondition>
					<ProposalForSolution>- Remove the defined objects
</ProposalForSolution>
					<References>
						<Reference Specification="ETG.5003.2011"></Reference>
					</References>
					<Mandatory>true</Mandatory>
				</Description>
				<TestStep Name="InitResult">
					<SetVariable Target="strResult">EmptyString</SetVariable>
				</TestStep>
				<TestStep Name="CheckIfOdAvailable">
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Mailbox</Value1>
							<Value2>false</Value2>
							<SkipCase Id="1">DuT does not support mailbox.</SkipCase>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Mailbox.CoE</Value1>
							<Value2>false</Value2>
							<SkipCase Id="2">DuT does not support CoE.</SkipCase>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep>
					<GetObjectDictionary Target="odDeviceObjectdictionary">
						<DictionaryType>Offline</DictionaryType>
					</GetObjectDictionary>
					<SkipOnFailure Id="3">No offline object dictionary defined.</SkipOnFailure>
				</TestStep>
				<TestStep>
					<GetObjectList Count="u32Tmp" Target="odDeviceObjectdictionaryList" SourceDict="odDeviceObjectdictionary"></GetObjectList>
					<Compare>
						<Equal>
							<Value1>u32Tmp</Value1>
							<Value2>0</Value2>
							<SkipCase Id="4">No offline object dictionary defined.</SkipCase>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="InitAtLeastOneProfileMatch">
					<SetVariable Target="bAtLeastOneModuleMatch">false</SetVariable>
				</TestStep>
				<TestStep Name="GetCurrentProfileList">
					<SizeOf UInt32Var="u32Tmp">arrOfflineProfiles</SizeOf>
					<Compare>
						<Equal>
							<Value1>u32Tmp</Value1>
							<Value2>0</Value2>
							<CallTestFunction Name="GetCurrentProfileList">
								<Parameter>"offline"</Parameter>
								<Parameter>"SafeOP"</Parameter>
								<OutParameter>arrOfflineProfiles</OutParameter>
							</CallTestFunction>
						</Equal>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>u32Tmp</Value1>
							<Value2>0</Value2>
							<WriteLine Id="5" Param0="arrOfflineProfiles" Level="Verbose">Use previously created profile list ({0})</WriteLine>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep>
					<SizeOf UInt32Var="u32Tmp">arrOfflineProfiles</SizeOf>
				</TestStep>
				<TestStep>
					<InitArray TargetArray="arrCurrentProfiles" Length="u32Tmp"></InitArray>
				</TestStep>
				<TestStep>
					<CopyArray>
						<SourceArray>arrOfflineProfiles</SourceArray>
						<DestinationArray>arrCurrentProfiles</DestinationArray>
						<Length>u32Tmp</Length>
					</CopyArray>
				</TestStep>
				<TestStep Name="InitProfileLoopCounter">
					<SetVariable Target="u32ProfileCounter">0</SetVariable>
				</TestStep>
				<TestStep Name="GetProfileArrayLength">
					<SizeOf UInt32Var="u32CurrentProfilesLength">arrCurrentProfiles</SizeOf>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="6" Param0="u32CurrentProfilesLength" Level="Verbose">'{0}' Profile(s) defined offline.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>u32CurrentProfilesLength</Value1>
							<Value2>0</Value2>
							<SkipCase Id="7">Skip case | no profile defined.</SkipCase>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="ProfileLoopStart">
					<GetArrayItem SourceArray="arrCurrentProfiles" Target="strTmpString" Index="u32ProfileCounter"></GetArrayItem>
				</TestStep>
				<TestStep Name="CheckProfileInformationString">
					<Compare>
						<Equal>
							<Value1>strTmpString</Value1>
							<Value2>null</Value2>
							<RaiseError Id="8" Param0="u32ProfileCounter">Profile Info element [{0}] is null.</RaiseError>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>strTmpString</Value1>
							<Value2>EmptyString</Value2>
							<RaiseError Id="9" Param0="u32ProfileCounter">Profile Info element [{0}] is an empty string.</RaiseError>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="GetDeviceProfile">
					<CallTestFunction Name="GetDeviceProfile">
						<Parameter>strTmpString</Parameter>
						<OutParameter>uint16CurDeviceProfile</OutParameter>
					</CallTestFunction>
				</TestStep>
				<TestStep Name="GetModuleProfile">
					<CallTestFunction Name="GetModuleProfile">
						<Parameter>strTmpString</Parameter>
						<OutParameter>uint16CurModuleProfile</OutParameter>
					</CallTestFunction>
				</TestStep>
				<TestStep Name="GetSubModuleProfile">
					<CallTestFunction Name="GetSubModuleProfile">
						<Parameter>strTmpString</Parameter>
						<OutParameter>uint16CurSubModuleProfile</OutParameter>
					</CallTestFunction>
				</TestStep>
				<TestStep Name="DumpProfileInfo">
					<Description Id="10" Param0="uint16CurDeviceProfile" Param1="uint16CurModuleProfile" Param2="uint16CurSubModuleProfile" Param3="u32ProfileCounter" Level="Output">Module[{3}] : DeviceProfile '{0}' ; ModuleProfile '{1}' ; SubModuleProfile '{2}'</Description>
					<Compare>
						<Equal>
							<Value1>bIgnoreProfileID</Value1>
							<Value2>true</Value2>
							<GotoStep>IndicateThatAtleastOneModuleMatch</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CompareDeviceProfile">
					<Compare>
						<NotEqual>
							<Value1>uint16CurDeviceProfile</Value1>
							<Value2>5003</Value2>
							<WriteLine Id="11" Param0="uint16CurDeviceProfile" Level="Output">Skip Profile  (Test Device Profile '5003' != Cur Device Profile '{0}')</WriteLine>
						</NotEqual>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>uint16CurDeviceProfile</Value1>
							<Value2>5003</Value2>
							<GotoStep>ProfileLoopEnd</GotoStep>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep Name="CompareModuleProfile">
					<Compare>
						<NotEqual>
							<Value1>uint16CurModuleProfile</Value1>
							<Value2>2011</Value2>
							<WriteLine Id="12" Param0="uint16CurModuleProfile" Level="Output">Skip Profile  (Test Module Profile '2011' != Cur Module Profile '{0}')</WriteLine>
						</NotEqual>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>uint16CurModuleProfile</Value1>
							<Value2>2011</Value2>
							<GotoStep>ProfileLoopEnd</GotoStep>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep Name="CompareSubModuleProfile">
					<Compare>
						<NotEqual>
							<Value1>uint16CurSubModuleProfile</Value1>
							<Value2>0</Value2>
							<WriteLine Id="13" Param0="uint16CurSubModuleProfile" Level="Output">Skip Profile  (Test SubModule Profile '0' != Cur SubModule Profile '{0}')</WriteLine>
						</NotEqual>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>uint16CurSubModuleProfile</Value1>
							<Value2>0</Value2>
							<GotoStep>ProfileLoopEnd</GotoStep>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep Name="IndicateThatAtleastOneModuleMatch">
					<SetVariable Target="bAtLeastOneModuleMatch">true</SetVariable>
				</TestStep>
				<TestStep Name="GetFirstReservedObjectIndexInlcOffset">
					<SetVariable Target="u16ObjectIndexInclOffset">#x8009 + (u32ProfileCounter * #x10)</SetVariable>
					<WriteLine Id="14" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : First reserved object index '0x{0:X}'</WriteLine>
				</TestStep>
				<TestStep Name="GetNextDefinedObjectIndexInlcOffset">
					<SetVariable Target="u16NextDefObjectIndexInclOffset">#x8010 + (u32ProfileCounter * #x0010)</SetVariable>
					<WriteLine Id="15" Param0="u16NextDefObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : Next defined object index '0x{0:X}'</WriteLine>
				</TestStep>
				<TestStep Name="CallCheckReservedObjectRange">
					<Description Id="16" Level="Verbose">VerifyObject : Load 'offline' object dictionary for testing.</Description>
					<CallTestFunction Name="CheckReservedObjectRange">
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>u16NextDefObjectIndexInclOffset</Parameter>
						<Parameter>odDeviceObjectdictionary</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<GotoStep>ProfileLoopEnd</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="ProfileLoopEnd">
					<Compare>
						<Equal>
							<Value1>bAtLeastOneModuleMatch</Value1>
							<Value2>false</Value2>
							<GotoStep>HandleAbortTestCaseOnFirstError</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="HandleAbortTestCaseOnFirstError">
					<Compare>
						<Equal>
							<Value1>bAbortTestCaseOnFirstError</Value1>
							<Value2>false</Value2>
							<GotoStep>ProfileLoopIncrement</GotoStep>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>strResult</Value1>
							<Value2>EmptyString</Value2>
							<GotoStep>ProfileLoopIncrement</GotoStep>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="17" Level="Output">Object verification for all following modules abort because an error was already detected for the current module.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>END</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="ProfileLoopIncrement">
					<SetVariable Target="u32ProfileCounter">u32ProfileCounter + 1</SetVariable>
					<Compare>
						<Greater>
							<Value1>u32CurrentProfilesLength</Value1>
							<Value2>u32ProfileCounter</Value2>
							<GotoStep>ProfileLoopStart</GotoStep>
						</Greater>
					</Compare>
				</TestStep>
				<TestStep Name="END">
					<Compare>
						<NotEqual>
							<Value1>bAtLeastOneModuleMatch</Value1>
							<Value2>true</Value2>
							<SkipCase Id="18">SKIP TEST(no module/channel supports the current profile)</SkipCase>
						</NotEqual>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bDEBUG</Value1>
							<Value2>true</Value2>
							<WriteLine Id="19" Param0="strResult" Level="Verbose">DEBUG | Result : '{0}'.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>strResult</Value1>
							<Value2>EmptyString</Value2>
							<ReturnSuccess Id="20">Test succeed</ReturnSuccess>
						</Equal>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>strResult</Value1>
							<Value2>EmptyString</Value2>
							<RaiseError Id="21"></RaiseError>
						</NotEqual>
					</Compare>
				</TestStep>
			</TestCase>
			<TestCase Name="online | 0x8009 to 0x800F (reserved range)" CaseId="20">
				<Description>
					<PreCondition>- The device profile is 5003
- The module profile is 2011
- The submodule profile is 0</PreCondition>
					<Action>- Iterate over all online defined modules/channels and if the PreCondition matches the check if one object in the reserved range is defined</Action>
					<PostCondition>- Error if at least one object is defined</PostCondition>
					<ProposalForSolution>- Remove the defined objects
</ProposalForSolution>
					<References>
						<Reference Specification="ETG.5003.2011"></Reference>
					</References>
					<Mandatory>true</Mandatory>
				</Description>
				<TestStep Name="InitResult">
					<SetVariable Target="strResult">EmptyString</SetVariable>
				</TestStep>
				<TestStep Name="CheckIfOdAvailable">
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Mailbox</Value1>
							<Value2>false</Value2>
							<SkipCase Id="1">DuT does not support mailbox.</SkipCase>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Mailbox.CoE</Value1>
							<Value2>false</Value2>
							<SkipCase Id="2">DuT does not support CoE.</SkipCase>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Mailbox.CoE.SdoInfo</Value1>
							<Value2>false</Value2>
							<SkipCase Id="3">DuT does not support SDO Info.</SkipCase>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="InitAtLeastOneProfileMatch">
					<SetVariable Target="bAtLeastOneModuleMatch">false</SetVariable>
				</TestStep>
				<TestStep Name="GetCurrentProfileList">
					<SizeOf UInt32Var="u32Tmp">arrOnlineProfiles</SizeOf>
					<Compare>
						<Equal>
							<Value1>u32Tmp</Value1>
							<Value2>0</Value2>
							<CallTestFunction Name="GetCurrentProfileList">
								<Parameter>"online"</Parameter>
								<Parameter>"SafeOP"</Parameter>
								<OutParameter>arrOnlineProfiles</OutParameter>
							</CallTestFunction>
						</Equal>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>u32Tmp</Value1>
							<Value2>0</Value2>
							<WriteLine Id="4" Param0="arrOnlineProfiles" Level="Verbose">Use previously created profile list ({0})</WriteLine>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep>
					<SizeOf UInt32Var="u32Tmp">arrOnlineProfiles</SizeOf>
				</TestStep>
				<TestStep>
					<InitArray TargetArray="arrCurrentProfiles" Length="u32Tmp"></InitArray>
				</TestStep>
				<TestStep>
					<CopyArray>
						<SourceArray>arrOnlineProfiles</SourceArray>
						<DestinationArray>arrCurrentProfiles</DestinationArray>
						<Length>u32Tmp</Length>
					</CopyArray>
				</TestStep>
				<TestStep Name="InitProfileLoopCounter">
					<SetVariable Target="u32ProfileCounter">0</SetVariable>
				</TestStep>
				<TestStep Name="GetProfileArrayLength">
					<SizeOf UInt32Var="u32CurrentProfilesLength">arrCurrentProfiles</SizeOf>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="5" Param0="u32CurrentProfilesLength" Level="Verbose">'{0}' Profile(s) defined online.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>u32CurrentProfilesLength</Value1>
							<Value2>0</Value2>
							<SkipCase Id="6">Skip case | no profile defined.</SkipCase>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="ProfileLoopStart">
					<GetArrayItem SourceArray="arrCurrentProfiles" Target="strTmpString" Index="u32ProfileCounter"></GetArrayItem>
				</TestStep>
				<TestStep Name="CheckProfileInformationString">
					<Compare>
						<Equal>
							<Value1>strTmpString</Value1>
							<Value2>null</Value2>
							<RaiseError Id="7" Param0="u32ProfileCounter">Profile Info element [{0}] is null.</RaiseError>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>strTmpString</Value1>
							<Value2>EmptyString</Value2>
							<RaiseError Id="8" Param0="u32ProfileCounter">Profile Info element [{0}] is an empty string.</RaiseError>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="GetDeviceProfile">
					<CallTestFunction Name="GetDeviceProfile">
						<Parameter>strTmpString</Parameter>
						<OutParameter>uint16CurDeviceProfile</OutParameter>
					</CallTestFunction>
				</TestStep>
				<TestStep Name="GetModuleProfile">
					<CallTestFunction Name="GetModuleProfile">
						<Parameter>strTmpString</Parameter>
						<OutParameter>uint16CurModuleProfile</OutParameter>
					</CallTestFunction>
				</TestStep>
				<TestStep Name="GetSubModuleProfile">
					<CallTestFunction Name="GetSubModuleProfile">
						<Parameter>strTmpString</Parameter>
						<OutParameter>uint16CurSubModuleProfile</OutParameter>
					</CallTestFunction>
				</TestStep>
				<TestStep Name="DumpProfileInfo">
					<Description Id="9" Param0="uint16CurDeviceProfile" Param1="uint16CurModuleProfile" Param2="uint16CurSubModuleProfile" Param3="u32ProfileCounter" Level="Output">Module[{3}] : DeviceProfile '{0}' ; ModuleProfile '{1}' ; SubModuleProfile '{2}'</Description>
					<Compare>
						<Equal>
							<Value1>bIgnoreProfileID</Value1>
							<Value2>true</Value2>
							<GotoStep>IndicateThatAtleastOneModuleMatch</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CompareDeviceProfile">
					<Compare>
						<NotEqual>
							<Value1>uint16CurDeviceProfile</Value1>
							<Value2>5003</Value2>
							<WriteLine Id="10" Param0="uint16CurDeviceProfile" Level="Output">Skip Profile  (Test Device Profile '5003' != Cur Device Profile '{0}')</WriteLine>
						</NotEqual>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>uint16CurDeviceProfile</Value1>
							<Value2>5003</Value2>
							<GotoStep>ProfileLoopEnd</GotoStep>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep Name="CompareModuleProfile">
					<Compare>
						<NotEqual>
							<Value1>uint16CurModuleProfile</Value1>
							<Value2>2011</Value2>
							<WriteLine Id="11" Param0="uint16CurModuleProfile" Level="Output">Skip Profile  (Test Module Profile '2011' != Cur Module Profile '{0}')</WriteLine>
						</NotEqual>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>uint16CurModuleProfile</Value1>
							<Value2>2011</Value2>
							<GotoStep>ProfileLoopEnd</GotoStep>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep Name="CompareSubModuleProfile">
					<Compare>
						<NotEqual>
							<Value1>uint16CurSubModuleProfile</Value1>
							<Value2>0</Value2>
							<WriteLine Id="12" Param0="uint16CurSubModuleProfile" Level="Output">Skip Profile  (Test SubModule Profile '0' != Cur SubModule Profile '{0}')</WriteLine>
						</NotEqual>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>uint16CurSubModuleProfile</Value1>
							<Value2>0</Value2>
							<GotoStep>ProfileLoopEnd</GotoStep>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep Name="IndicateThatAtleastOneModuleMatch">
					<SetVariable Target="bAtLeastOneModuleMatch">true</SetVariable>
				</TestStep>
				<TestStep Name="GetFirstReservedObjectIndexInlcOffset">
					<SetVariable Target="u16ObjectIndexInclOffset">#x8009 + (u32ProfileCounter * #x10)</SetVariable>
					<WriteLine Id="13" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : First reserved object index '0x{0:X}'</WriteLine>
				</TestStep>
				<TestStep Name="GetNextDefinedObjectIndexInlcOffset">
					<SetVariable Target="u16NextDefObjectIndexInclOffset">#x8010 + (u32ProfileCounter * #x0010)</SetVariable>
					<WriteLine Id="14" Param0="u16NextDefObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : Next defined object index '0x{0:X}'</WriteLine>
				</TestStep>
				<TestStep Name="CallCheckReservedObjectRange">
					<Description Id="15" Level="Verbose">VerifyObject : Load 'online' object dictionary for testing.</Description>
					<CallTestFunction Name="CheckReservedObjectRange">
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>u16NextDefObjectIndexInclOffset</Parameter>
						<Parameter>odDeviceObjectdictionary</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<GotoStep>ProfileLoopEnd</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="ProfileLoopEnd">
					<Compare>
						<Equal>
							<Value1>bAtLeastOneModuleMatch</Value1>
							<Value2>false</Value2>
							<GotoStep>HandleAbortTestCaseOnFirstError</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="HandleAbortTestCaseOnFirstError">
					<Compare>
						<Equal>
							<Value1>bAbortTestCaseOnFirstError</Value1>
							<Value2>false</Value2>
							<GotoStep>ProfileLoopIncrement</GotoStep>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>strResult</Value1>
							<Value2>EmptyString</Value2>
							<GotoStep>ProfileLoopIncrement</GotoStep>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="16" Level="Output">Object verification for all following modules abort because an error was already detected for the current module.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>END</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="ProfileLoopIncrement">
					<SetVariable Target="u32ProfileCounter">u32ProfileCounter + 1</SetVariable>
					<Compare>
						<Greater>
							<Value1>u32CurrentProfilesLength</Value1>
							<Value2>u32ProfileCounter</Value2>
							<GotoStep>ProfileLoopStart</GotoStep>
						</Greater>
					</Compare>
				</TestStep>
				<TestStep Name="END">
					<Compare>
						<NotEqual>
							<Value1>bAtLeastOneModuleMatch</Value1>
							<Value2>true</Value2>
							<SkipCase Id="17">SKIP TEST(no module/channel supports the current profile)</SkipCase>
						</NotEqual>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bDEBUG</Value1>
							<Value2>true</Value2>
							<WriteLine Id="18" Param0="strResult" Level="Verbose">DEBUG | Result : '{0}'.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>strResult</Value1>
							<Value2>EmptyString</Value2>
							<ReturnSuccess Id="19">Test succeed</ReturnSuccess>
						</Equal>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>strResult</Value1>
							<Value2>EmptyString</Value2>
							<RaiseError Id="20"></RaiseError>
						</NotEqual>
					</Compare>
				</TestStep>
			</TestCase>
		</TestGroup>
		<TestGroup Name="Verify objects 0x9nn0 - 0x9nnF (Information Data of the Modules)" GroupId="5">
			<TestCase Name="offline | 0x9000 (Device Rating)" CaseId="1">
				<Description>
					<PreCondition>- The device profile is 5003
- The module profile is 2011
- The submodule profile is 0</PreCondition>
					<Action>- Iterate over all offline defined modules/channels and if the PreCondition matches the following operations are done:
- Get the offline description of object 0x9000(+module specific offset) 'Device Rating' and all entries
 Check:
    (Name)
    BitSize
    DataType
    Rx / Tx mappable
    Default Data
    MinData
    Flags       </Action>
					<PostCondition>Error if
- mandatory object / entry is not defined
- an optional object exists and the entries are invalid
- Object / entry description does not match with the specification</PostCondition>
					<ProposalForSolution>- Define the missing objects
- correct object / entry description</ProposalForSolution>
					<References>
						<Reference Specification="ETG.5003.2011"></Reference>
					</References>
					<Mandatory>true</Mandatory>
				</Description>
				<TestStep Name="InitResult">
					<SetVariable Target="strResult">EmptyString</SetVariable>
				</TestStep>
				<TestStep Name="CheckIfOdAvailable">
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Mailbox</Value1>
							<Value2>false</Value2>
							<SkipCase Id="1">DuT does not support mailbox.</SkipCase>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Mailbox.CoE</Value1>
							<Value2>false</Value2>
							<SkipCase Id="2">DuT does not support CoE.</SkipCase>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep>
					<GetObjectDictionary Target="odDeviceObjectdictionary">
						<DictionaryType>Offline</DictionaryType>
					</GetObjectDictionary>
					<SkipOnFailure Id="3">No offline object dictionary defined.</SkipOnFailure>
				</TestStep>
				<TestStep>
					<GetObjectList Count="u32Tmp" Target="odDeviceObjectdictionaryList" SourceDict="odDeviceObjectdictionary"></GetObjectList>
					<Compare>
						<Equal>
							<Value1>u32Tmp</Value1>
							<Value2>0</Value2>
							<SkipCase Id="4">No offline object dictionary defined.</SkipCase>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="InitAtLeastOneProfileMatch">
					<SetVariable Target="bAtLeastOneModuleMatch">false</SetVariable>
				</TestStep>
				<TestStep Name="GetCurrentProfileList">
					<SizeOf UInt32Var="u32Tmp">arrOfflineProfiles</SizeOf>
					<Compare>
						<Equal>
							<Value1>u32Tmp</Value1>
							<Value2>0</Value2>
							<CallTestFunction Name="GetCurrentProfileList">
								<Parameter>"offline"</Parameter>
								<Parameter>"SafeOP"</Parameter>
								<OutParameter>arrOfflineProfiles</OutParameter>
							</CallTestFunction>
						</Equal>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>u32Tmp</Value1>
							<Value2>0</Value2>
							<WriteLine Id="5" Param0="arrOfflineProfiles" Level="Verbose">Use previously created profile list ({0})</WriteLine>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep>
					<SizeOf UInt32Var="u32Tmp">arrOfflineProfiles</SizeOf>
				</TestStep>
				<TestStep>
					<InitArray TargetArray="arrCurrentProfiles" Length="u32Tmp"></InitArray>
				</TestStep>
				<TestStep>
					<CopyArray>
						<SourceArray>arrOfflineProfiles</SourceArray>
						<DestinationArray>arrCurrentProfiles</DestinationArray>
						<Length>u32Tmp</Length>
					</CopyArray>
				</TestStep>
				<TestStep Name="InitProfileLoopCounter">
					<SetVariable Target="u32ProfileCounter">0</SetVariable>
				</TestStep>
				<TestStep Name="GetProfileArrayLength">
					<SizeOf UInt32Var="u32CurrentProfilesLength">arrCurrentProfiles</SizeOf>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="6" Param0="u32CurrentProfilesLength" Level="Verbose">'{0}' Profile(s) defined offline.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>u32CurrentProfilesLength</Value1>
							<Value2>0</Value2>
							<SkipCase Id="7">Skip case | no profile defined.</SkipCase>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="ProfileLoopStart">
					<GetArrayItem SourceArray="arrCurrentProfiles" Target="strTmpString" Index="u32ProfileCounter"></GetArrayItem>
				</TestStep>
				<TestStep Name="CheckProfileInformationString">
					<Compare>
						<Equal>
							<Value1>strTmpString</Value1>
							<Value2>null</Value2>
							<RaiseError Id="8" Param0="u32ProfileCounter">Profile Info element [{0}] is null.</RaiseError>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>strTmpString</Value1>
							<Value2>EmptyString</Value2>
							<RaiseError Id="9" Param0="u32ProfileCounter">Profile Info element [{0}] is an empty string.</RaiseError>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="GetDeviceProfile">
					<CallTestFunction Name="GetDeviceProfile">
						<Parameter>strTmpString</Parameter>
						<OutParameter>uint16CurDeviceProfile</OutParameter>
					</CallTestFunction>
				</TestStep>
				<TestStep Name="GetModuleProfile">
					<CallTestFunction Name="GetModuleProfile">
						<Parameter>strTmpString</Parameter>
						<OutParameter>uint16CurModuleProfile</OutParameter>
					</CallTestFunction>
				</TestStep>
				<TestStep Name="GetSubModuleProfile">
					<CallTestFunction Name="GetSubModuleProfile">
						<Parameter>strTmpString</Parameter>
						<OutParameter>uint16CurSubModuleProfile</OutParameter>
					</CallTestFunction>
				</TestStep>
				<TestStep Name="DumpProfileInfo">
					<Description Id="10" Param0="uint16CurDeviceProfile" Param1="uint16CurModuleProfile" Param2="uint16CurSubModuleProfile" Param3="u32ProfileCounter" Level="Output">Module[{3}] : DeviceProfile '{0}' ; ModuleProfile '{1}' ; SubModuleProfile '{2}'</Description>
					<Compare>
						<Equal>
							<Value1>bIgnoreProfileID</Value1>
							<Value2>true</Value2>
							<GotoStep>IndicateThatAtleastOneModuleMatch</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CompareDeviceProfile">
					<Compare>
						<NotEqual>
							<Value1>uint16CurDeviceProfile</Value1>
							<Value2>5003</Value2>
							<WriteLine Id="11" Param0="uint16CurDeviceProfile" Level="Output">Skip Profile  (Test Device Profile '5003' != Cur Device Profile '{0}')</WriteLine>
						</NotEqual>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>uint16CurDeviceProfile</Value1>
							<Value2>5003</Value2>
							<GotoStep>ProfileLoopEnd</GotoStep>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep Name="CompareModuleProfile">
					<Compare>
						<NotEqual>
							<Value1>uint16CurModuleProfile</Value1>
							<Value2>2011</Value2>
							<WriteLine Id="12" Param0="uint16CurModuleProfile" Level="Output">Skip Profile  (Test Module Profile '2011' != Cur Module Profile '{0}')</WriteLine>
						</NotEqual>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>uint16CurModuleProfile</Value1>
							<Value2>2011</Value2>
							<GotoStep>ProfileLoopEnd</GotoStep>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep Name="CompareSubModuleProfile">
					<Compare>
						<NotEqual>
							<Value1>uint16CurSubModuleProfile</Value1>
							<Value2>0</Value2>
							<WriteLine Id="13" Param0="uint16CurSubModuleProfile" Level="Output">Skip Profile  (Test SubModule Profile '0' != Cur SubModule Profile '{0}')</WriteLine>
						</NotEqual>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>uint16CurSubModuleProfile</Value1>
							<Value2>0</Value2>
							<GotoStep>ProfileLoopEnd</GotoStep>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep Name="IndicateThatAtleastOneModuleMatch">
					<SetVariable Target="bAtLeastOneModuleMatch">true</SetVariable>
				</TestStep>
				<TestStep Name="GetObjectIndexInclOffset">
					<SetVariable Target="u16ObjectIndexInclOffset">#x9000 + (u32ProfileCounter * #x10)</SetVariable>
					<WriteLine Id="14" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : ObjectIndex '0x{0:X}'</WriteLine>
				</TestStep>
				<TestStep Name="LoadDeviceObjectDictionary">
					<Description Id="15" Level="Verbose">Load 'offline' object dictionary for testing.</Description>
					<GetObjectDictionary Target="odDeviceObjectdictionary">
						<DictionaryType>Offline</DictionaryType>
					</GetObjectDictionary>
					<RaiseErrorOnFailure Id="16">VerifyObject : failed to load offline object dictionary.</RaiseErrorOnFailure>
				</TestStep>
				<TestStep Name="SetObjectRequiredLevel">
					<SetVariable Target="bObjectOrEntryRequiredLevel">1</SetVariable>
					<WriteLine Id="17" Param0="u16ObjectIndexInclOffset" Level="Verbose">0x{0:X4} 'Device Rating' may be available</WriteLine>
				</TestStep>
				<TestStep Name="CheckIfObjectExists">
					<GetObjectDescription SourceDictionary="odDeviceObjectdictionary" Index="u16ObjectIndexInclOffset" SubIndex="-1"></GetObjectDescription>
					<GotoOnSuccess>CallCheckObjectDescription</GotoOnSuccess>
				</TestStep>
				<TestStep Name="HandleNotExistingObject">
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>2</Value2>
							<WriteLine Id="18" Param0="u16ObjectIndexInclOffset" Level="Warning">The object 0x{0:X4} 'Device Rating' does not exists.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>1</Value2>
							<WriteLine Id="19" Param0="u16ObjectIndexInclOffset" Level="Output">The object 0x{0:X4} 'Device Rating' does not exists.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>ProfileLoopEnd</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CallCheckObjectDescription">
					<Description Id="20" Param0="u16ObjectIndexInclOffset" Level="Output">Verify the object description 0x{0:X4} 'Device Rating'.</Description>
					<CallTestFunction Name="CheckObjectDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"offline"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>"Device Rating"</Parameter>
						<Parameter>null</Parameter>
						<Parameter>9</Parameter>
						<Parameter>-1</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<GotoStep>ProfileLoopEnd</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="InitEntryBittOffset">
					<SetVariable Target="i32CurrentBitOffset">0</SetVariable>
				</TestStep>
				<TestStep Name="StartSi0">
					<Description Id="21" Level="Output">Start validate SubIndex0</Description>
					<WriteLine Id="22" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : Subindex '0x{0:X}.0'</WriteLine>
				</TestStep>
				<TestStep Name="CallSi0CheckEntryDescription">
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"offline"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>0</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>null</Parameter>
						<Parameter>5</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>null</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>null</Parameter>
						<Parameter>null</Parameter>
						<Parameter>null</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>8</Parameter>
						<Parameter>i32CurrentBitOffset</Parameter>
						<Parameter>true</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="EndSi0">
					<SetVariable Target="i32CurrentBitOffset">16</SetVariable>
				</TestStep>
				<TestStep Name="StartSi1">
					<Description Id="23" Level="Output">Start validate SubIndex1</Description>
					<WriteLine Id="24" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : Subindex '0x{0:X}.1'</WriteLine>
				</TestStep>
				<TestStep Name="SetSi1RequiredLevel">
					<SetVariable Target="bObjectOrEntryRequiredLevel">1</SetVariable>
					<WriteLine Id="25" Param0="u16ObjectIndexInclOffset" Level="Verbose">0x{0:X4}.1 'Max Forward Power Rating' may be available</WriteLine>
				</TestStep>
				<TestStep Name="CheckIfSi1Exists">
					<GetObjectDescription SourceDictionary="odDeviceObjectdictionary" Index="u16ObjectIndexInclOffset" SubIndex="1">
						<Type>u16DataType</Type>
					</GetObjectDescription>
					<GotoOnFailure>HandleNotExistingSi1</GotoOnFailure>
				</TestStep>
				<TestStep>
					<Compare>
						<NotEqual>
							<Value1>u16DataType</Value1>
							<Value2>0</Value2>
							<GotoStep>CallSi1CheckEntryDescription</GotoStep>
						</NotEqual>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="26" Param0="u16ObjectIndexInclOffset" Level="Verbose">The entry 0x{0:X4}.1 is defined as a padding entry.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>EndSi1</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="HandleNotExistingSi1">
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="27" Param0="u16ObjectIndexInclOffset" Level="Output">The entry 0x{0:X4}.1 does not exists.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>EndSi1</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CallSi1CheckEntryDescription">
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"offline"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>1</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>"Max Forward Power Rating"</Parameter>
						<Parameter>8</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>null</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>32</Parameter>
						<Parameter>i32CurrentBitOffset</Parameter>
						<Parameter>true</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="EndSi1">
					<SetVariable Target="i32CurrentBitOffset">-1</SetVariable>
				</TestStep>
				<TestStep Name="StartSi2">
					<Description Id="28" Level="Output">Start validate SubIndex2</Description>
					<WriteLine Id="29" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : Subindex '0x{0:X}.2'</WriteLine>
				</TestStep>
				<TestStep Name="SetSi2RequiredLevel">
					<SetVariable Target="bObjectOrEntryRequiredLevel">1</SetVariable>
					<WriteLine Id="30" Param0="u16ObjectIndexInclOffset" Level="Verbose">0x{0:X4}.2 'Max Reverse Power Rating' may be available</WriteLine>
				</TestStep>
				<TestStep Name="CheckIfSi2Exists">
					<GetObjectDescription SourceDictionary="odDeviceObjectdictionary" Index="u16ObjectIndexInclOffset" SubIndex="2">
						<Type>u16DataType</Type>
					</GetObjectDescription>
					<GotoOnFailure>HandleNotExistingSi2</GotoOnFailure>
				</TestStep>
				<TestStep>
					<Compare>
						<NotEqual>
							<Value1>u16DataType</Value1>
							<Value2>0</Value2>
							<GotoStep>CallSi2CheckEntryDescription</GotoStep>
						</NotEqual>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="31" Param0="u16ObjectIndexInclOffset" Level="Verbose">The entry 0x{0:X4}.2 is defined as a padding entry.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>EndSi2</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="HandleNotExistingSi2">
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="32" Param0="u16ObjectIndexInclOffset" Level="Output">The entry 0x{0:X4}.2 does not exists.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>EndSi2</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CallSi2CheckEntryDescription">
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"offline"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>2</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>"Max Reverse Power Rating"</Parameter>
						<Parameter>8</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>null</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>32</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>true</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="EndSi2"></TestStep>
				<TestStep Name="CheckReservedEntryRange_3_to_255">
					<Description Id="33" Level="Output">Start check reserved entry range 3 to 255</Description>
					<CallTestFunction Name="CheckReservedEntryRange">
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>3</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>odDeviceObjectdictionary</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="ProfileLoopEnd">
					<Compare>
						<Equal>
							<Value1>bAtLeastOneModuleMatch</Value1>
							<Value2>false</Value2>
							<GotoStep>HandleAbortTestCaseOnFirstError</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="HandleAbortTestCaseOnFirstError">
					<Compare>
						<Equal>
							<Value1>bAbortTestCaseOnFirstError</Value1>
							<Value2>false</Value2>
							<GotoStep>ProfileLoopIncrement</GotoStep>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>strResult</Value1>
							<Value2>EmptyString</Value2>
							<GotoStep>ProfileLoopIncrement</GotoStep>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="34" Level="Output">Object verification for all following modules abort because an error was already detected for the current module.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>END</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="ProfileLoopIncrement">
					<SetVariable Target="u32ProfileCounter">u32ProfileCounter + 1</SetVariable>
					<Compare>
						<Greater>
							<Value1>u32CurrentProfilesLength</Value1>
							<Value2>u32ProfileCounter</Value2>
							<GotoStep>ProfileLoopStart</GotoStep>
						</Greater>
					</Compare>
				</TestStep>
				<TestStep Name="END">
					<Compare>
						<NotEqual>
							<Value1>bAtLeastOneModuleMatch</Value1>
							<Value2>true</Value2>
							<SkipCase Id="35">SKIP TEST(no module/channel supports the current profile)</SkipCase>
						</NotEqual>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bDEBUG</Value1>
							<Value2>true</Value2>
							<WriteLine Id="36" Param0="strResult" Level="Verbose">DEBUG | Result : '{0}'.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>strResult</Value1>
							<Value2>EmptyString</Value2>
							<ReturnSuccess Id="37">Test succeed</ReturnSuccess>
						</Equal>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>strResult</Value1>
							<Value2>EmptyString</Value2>
							<RaiseError Id="38"></RaiseError>
						</NotEqual>
					</Compare>
				</TestStep>
			</TestCase>
			<TestCase Name="online | 0x9000 (Device Rating)" CaseId="2">
				<Description>
					<PreCondition>- The device profile is 5003
- The module profile is 2011
- The submodule profile is 0</PreCondition>
					<Action>- Iterate over all online defined modules/channels and if the PreCondition matches the following operations are done:
- Get the online description of object 0x9000(+module specific offset) 'Device Rating' and all entries
 Check:
    (Name)
    BitSize
    DataType
    Rx / Tx mappable
    Default Data
    MinData
    Flags       </Action>
					<PostCondition>Error if
- mandatory object / entry is not defined
- an optional object exists and the entries are invalid
- Object / entry description does not match with the specification</PostCondition>
					<ProposalForSolution>- Define the missing objects
- correct object / entry description</ProposalForSolution>
					<References>
						<Reference Specification="ETG.5003.2011"></Reference>
					</References>
					<Mandatory>true</Mandatory>
				</Description>
				<TestStep Name="InitResult">
					<SetVariable Target="strResult">EmptyString</SetVariable>
				</TestStep>
				<TestStep Name="CheckIfOdAvailable">
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Mailbox</Value1>
							<Value2>false</Value2>
							<SkipCase Id="1">DuT does not support mailbox.</SkipCase>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Mailbox.CoE</Value1>
							<Value2>false</Value2>
							<SkipCase Id="2">DuT does not support CoE.</SkipCase>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Mailbox.CoE.SdoInfo</Value1>
							<Value2>false</Value2>
							<SkipCase Id="3">DuT does not support SDO Info.</SkipCase>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="InitAtLeastOneProfileMatch">
					<SetVariable Target="bAtLeastOneModuleMatch">false</SetVariable>
				</TestStep>
				<TestStep Name="GetCurrentProfileList">
					<SizeOf UInt32Var="u32Tmp">arrOnlineProfiles</SizeOf>
					<Compare>
						<Equal>
							<Value1>u32Tmp</Value1>
							<Value2>0</Value2>
							<CallTestFunction Name="GetCurrentProfileList">
								<Parameter>"online"</Parameter>
								<Parameter>"SafeOP"</Parameter>
								<OutParameter>arrOnlineProfiles</OutParameter>
							</CallTestFunction>
						</Equal>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>u32Tmp</Value1>
							<Value2>0</Value2>
							<WriteLine Id="4" Param0="arrOnlineProfiles" Level="Verbose">Use previously created profile list ({0})</WriteLine>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep>
					<SizeOf UInt32Var="u32Tmp">arrOnlineProfiles</SizeOf>
				</TestStep>
				<TestStep>
					<InitArray TargetArray="arrCurrentProfiles" Length="u32Tmp"></InitArray>
				</TestStep>
				<TestStep>
					<CopyArray>
						<SourceArray>arrOnlineProfiles</SourceArray>
						<DestinationArray>arrCurrentProfiles</DestinationArray>
						<Length>u32Tmp</Length>
					</CopyArray>
				</TestStep>
				<TestStep Name="InitProfileLoopCounter">
					<SetVariable Target="u32ProfileCounter">0</SetVariable>
				</TestStep>
				<TestStep Name="GetProfileArrayLength">
					<SizeOf UInt32Var="u32CurrentProfilesLength">arrCurrentProfiles</SizeOf>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="5" Param0="u32CurrentProfilesLength" Level="Verbose">'{0}' Profile(s) defined online.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>u32CurrentProfilesLength</Value1>
							<Value2>0</Value2>
							<SkipCase Id="6">Skip case | no profile defined.</SkipCase>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="ProfileLoopStart">
					<GetArrayItem SourceArray="arrCurrentProfiles" Target="strTmpString" Index="u32ProfileCounter"></GetArrayItem>
				</TestStep>
				<TestStep Name="CheckProfileInformationString">
					<Compare>
						<Equal>
							<Value1>strTmpString</Value1>
							<Value2>null</Value2>
							<RaiseError Id="7" Param0="u32ProfileCounter">Profile Info element [{0}] is null.</RaiseError>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>strTmpString</Value1>
							<Value2>EmptyString</Value2>
							<RaiseError Id="8" Param0="u32ProfileCounter">Profile Info element [{0}] is an empty string.</RaiseError>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="GetDeviceProfile">
					<CallTestFunction Name="GetDeviceProfile">
						<Parameter>strTmpString</Parameter>
						<OutParameter>uint16CurDeviceProfile</OutParameter>
					</CallTestFunction>
				</TestStep>
				<TestStep Name="GetModuleProfile">
					<CallTestFunction Name="GetModuleProfile">
						<Parameter>strTmpString</Parameter>
						<OutParameter>uint16CurModuleProfile</OutParameter>
					</CallTestFunction>
				</TestStep>
				<TestStep Name="GetSubModuleProfile">
					<CallTestFunction Name="GetSubModuleProfile">
						<Parameter>strTmpString</Parameter>
						<OutParameter>uint16CurSubModuleProfile</OutParameter>
					</CallTestFunction>
				</TestStep>
				<TestStep Name="DumpProfileInfo">
					<Description Id="9" Param0="uint16CurDeviceProfile" Param1="uint16CurModuleProfile" Param2="uint16CurSubModuleProfile" Param3="u32ProfileCounter" Level="Output">Module[{3}] : DeviceProfile '{0}' ; ModuleProfile '{1}' ; SubModuleProfile '{2}'</Description>
					<Compare>
						<Equal>
							<Value1>bIgnoreProfileID</Value1>
							<Value2>true</Value2>
							<GotoStep>IndicateThatAtleastOneModuleMatch</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CompareDeviceProfile">
					<Compare>
						<NotEqual>
							<Value1>uint16CurDeviceProfile</Value1>
							<Value2>5003</Value2>
							<WriteLine Id="10" Param0="uint16CurDeviceProfile" Level="Output">Skip Profile  (Test Device Profile '5003' != Cur Device Profile '{0}')</WriteLine>
						</NotEqual>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>uint16CurDeviceProfile</Value1>
							<Value2>5003</Value2>
							<GotoStep>ProfileLoopEnd</GotoStep>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep Name="CompareModuleProfile">
					<Compare>
						<NotEqual>
							<Value1>uint16CurModuleProfile</Value1>
							<Value2>2011</Value2>
							<WriteLine Id="11" Param0="uint16CurModuleProfile" Level="Output">Skip Profile  (Test Module Profile '2011' != Cur Module Profile '{0}')</WriteLine>
						</NotEqual>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>uint16CurModuleProfile</Value1>
							<Value2>2011</Value2>
							<GotoStep>ProfileLoopEnd</GotoStep>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep Name="CompareSubModuleProfile">
					<Compare>
						<NotEqual>
							<Value1>uint16CurSubModuleProfile</Value1>
							<Value2>0</Value2>
							<WriteLine Id="12" Param0="uint16CurSubModuleProfile" Level="Output">Skip Profile  (Test SubModule Profile '0' != Cur SubModule Profile '{0}')</WriteLine>
						</NotEqual>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>uint16CurSubModuleProfile</Value1>
							<Value2>0</Value2>
							<GotoStep>ProfileLoopEnd</GotoStep>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep Name="IndicateThatAtleastOneModuleMatch">
					<SetVariable Target="bAtLeastOneModuleMatch">true</SetVariable>
				</TestStep>
				<TestStep Name="GetObjectIndexInclOffset">
					<SetVariable Target="u16ObjectIndexInclOffset">#x9000 + (u32ProfileCounter * #x10)</SetVariable>
					<WriteLine Id="13" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : ObjectIndex '0x{0:X}'</WriteLine>
				</TestStep>
				<TestStep Name="LoadDeviceObjectDictionary">
					<Description Id="14" Level="Verbose">Load 'online' object dictionary for testing.</Description>
					<GetObjectDictionary Target="odDeviceObjectdictionary">
						<DictionaryType>Online</DictionaryType>
					</GetObjectDictionary>
					<RaiseErrorOnFailure Id="15">VerifyObject : failed to load online object dictionary.</RaiseErrorOnFailure>
				</TestStep>
				<TestStep Name="SetObjectRequiredLevel">
					<SetVariable Target="bObjectOrEntryRequiredLevel">1</SetVariable>
					<WriteLine Id="16" Param0="u16ObjectIndexInclOffset" Level="Verbose">0x{0:X4} 'Device Rating' may be available</WriteLine>
				</TestStep>
				<TestStep Name="CheckIfObjectExists">
					<GetObjectDescription SourceDictionary="odDeviceObjectdictionary" Index="u16ObjectIndexInclOffset" SubIndex="-1"></GetObjectDescription>
					<GotoOnSuccess>CallCheckObjectDescription</GotoOnSuccess>
				</TestStep>
				<TestStep Name="HandleNotExistingObject">
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>2</Value2>
							<WriteLine Id="17" Param0="u16ObjectIndexInclOffset" Level="Warning">The object 0x{0:X4} 'Device Rating' does not exists.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>1</Value2>
							<WriteLine Id="18" Param0="u16ObjectIndexInclOffset" Level="Output">The object 0x{0:X4} 'Device Rating' does not exists.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>ProfileLoopEnd</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CallCheckObjectDescription">
					<Description Id="19" Param0="u16ObjectIndexInclOffset" Level="Output">Verify the object description 0x{0:X4} 'Device Rating'.</Description>
					<CallTestFunction Name="CheckObjectDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"online"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>"Device Rating"</Parameter>
						<Parameter>null</Parameter>
						<Parameter>9</Parameter>
						<Parameter>-1</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<GotoStep>ProfileLoopEnd</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="InitEntryBittOffset">
					<SetVariable Target="i32CurrentBitOffset">0</SetVariable>
				</TestStep>
				<TestStep Name="StartSi0">
					<Description Id="20" Level="Output">Start validate SubIndex0</Description>
					<WriteLine Id="21" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : Subindex '0x{0:X}.0'</WriteLine>
				</TestStep>
				<TestStep Name="CallSi0CheckEntryDescription">
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"online"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>0</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>null</Parameter>
						<Parameter>5</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>null</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>null</Parameter>
						<Parameter>null</Parameter>
						<Parameter>null</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>8</Parameter>
						<Parameter>i32CurrentBitOffset</Parameter>
						<Parameter>true</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="EndSi0">
					<SetVariable Target="i32CurrentBitOffset">16</SetVariable>
				</TestStep>
				<TestStep Name="StartSi1">
					<Description Id="22" Level="Output">Start validate SubIndex1</Description>
					<WriteLine Id="23" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : Subindex '0x{0:X}.1'</WriteLine>
				</TestStep>
				<TestStep Name="SetSi1RequiredLevel">
					<SetVariable Target="bObjectOrEntryRequiredLevel">1</SetVariable>
					<WriteLine Id="24" Param0="u16ObjectIndexInclOffset" Level="Verbose">0x{0:X4}.1 'Max Forward Power Rating' may be available</WriteLine>
				</TestStep>
				<TestStep Name="CheckIfSi1Exists">
					<GetObjectDescription SourceDictionary="odDeviceObjectdictionary" Index="u16ObjectIndexInclOffset" SubIndex="1">
						<Type>u16DataType</Type>
					</GetObjectDescription>
					<GotoOnFailure>HandleNotExistingSi1</GotoOnFailure>
				</TestStep>
				<TestStep>
					<Compare>
						<NotEqual>
							<Value1>u16DataType</Value1>
							<Value2>0</Value2>
							<GotoStep>CallSi1CheckEntryDescription</GotoStep>
						</NotEqual>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="25" Param0="u16ObjectIndexInclOffset" Level="Verbose">The entry 0x{0:X4}.1 is defined as a padding entry.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>EndSi1</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="HandleNotExistingSi1">
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="26" Param0="u16ObjectIndexInclOffset" Level="Output">The entry 0x{0:X4}.1 does not exists.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>EndSi1</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CallSi1CheckEntryDescription">
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"online"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>1</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>"Max Forward Power Rating"</Parameter>
						<Parameter>8</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>null</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>32</Parameter>
						<Parameter>i32CurrentBitOffset</Parameter>
						<Parameter>true</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="EndSi1">
					<SetVariable Target="i32CurrentBitOffset">-1</SetVariable>
				</TestStep>
				<TestStep Name="StartSi2">
					<Description Id="27" Level="Output">Start validate SubIndex2</Description>
					<WriteLine Id="28" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : Subindex '0x{0:X}.2'</WriteLine>
				</TestStep>
				<TestStep Name="SetSi2RequiredLevel">
					<SetVariable Target="bObjectOrEntryRequiredLevel">1</SetVariable>
					<WriteLine Id="29" Param0="u16ObjectIndexInclOffset" Level="Verbose">0x{0:X4}.2 'Max Reverse Power Rating' may be available</WriteLine>
				</TestStep>
				<TestStep Name="CheckIfSi2Exists">
					<GetObjectDescription SourceDictionary="odDeviceObjectdictionary" Index="u16ObjectIndexInclOffset" SubIndex="2">
						<Type>u16DataType</Type>
					</GetObjectDescription>
					<GotoOnFailure>HandleNotExistingSi2</GotoOnFailure>
				</TestStep>
				<TestStep>
					<Compare>
						<NotEqual>
							<Value1>u16DataType</Value1>
							<Value2>0</Value2>
							<GotoStep>CallSi2CheckEntryDescription</GotoStep>
						</NotEqual>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="30" Param0="u16ObjectIndexInclOffset" Level="Verbose">The entry 0x{0:X4}.2 is defined as a padding entry.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>EndSi2</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="HandleNotExistingSi2">
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="31" Param0="u16ObjectIndexInclOffset" Level="Output">The entry 0x{0:X4}.2 does not exists.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>EndSi2</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CallSi2CheckEntryDescription">
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"online"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>2</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>"Max Reverse Power Rating"</Parameter>
						<Parameter>8</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>null</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>32</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>true</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="EndSi2"></TestStep>
				<TestStep Name="CheckReservedEntryRange_3_to_255">
					<Description Id="32" Level="Output">Start check reserved entry range 3 to 255</Description>
					<CallTestFunction Name="CheckReservedEntryRange">
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>3</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>odDeviceObjectdictionary</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="ProfileLoopEnd">
					<Compare>
						<Equal>
							<Value1>bAtLeastOneModuleMatch</Value1>
							<Value2>false</Value2>
							<GotoStep>HandleAbortTestCaseOnFirstError</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="HandleAbortTestCaseOnFirstError">
					<Compare>
						<Equal>
							<Value1>bAbortTestCaseOnFirstError</Value1>
							<Value2>false</Value2>
							<GotoStep>ProfileLoopIncrement</GotoStep>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>strResult</Value1>
							<Value2>EmptyString</Value2>
							<GotoStep>ProfileLoopIncrement</GotoStep>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="33" Level="Output">Object verification for all following modules abort because an error was already detected for the current module.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>END</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="ProfileLoopIncrement">
					<SetVariable Target="u32ProfileCounter">u32ProfileCounter + 1</SetVariable>
					<Compare>
						<Greater>
							<Value1>u32CurrentProfilesLength</Value1>
							<Value2>u32ProfileCounter</Value2>
							<GotoStep>ProfileLoopStart</GotoStep>
						</Greater>
					</Compare>
				</TestStep>
				<TestStep Name="END">
					<Compare>
						<NotEqual>
							<Value1>bAtLeastOneModuleMatch</Value1>
							<Value2>true</Value2>
							<SkipCase Id="34">SKIP TEST(no module/channel supports the current profile)</SkipCase>
						</NotEqual>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bDEBUG</Value1>
							<Value2>true</Value2>
							<WriteLine Id="35" Param0="strResult" Level="Verbose">DEBUG | Result : '{0}'.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>strResult</Value1>
							<Value2>EmptyString</Value2>
							<ReturnSuccess Id="36">Test succeed</ReturnSuccess>
						</Equal>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>strResult</Value1>
							<Value2>EmptyString</Value2>
							<RaiseError Id="37"></RaiseError>
						</NotEqual>
					</Compare>
				</TestStep>
			</TestCase>
			<TestCase Name="offline | 0x9001 (Frequency Rating)" CaseId="3">
				<Description>
					<PreCondition>- The device profile is 5003
- The module profile is 2011
- The submodule profile is 0</PreCondition>
					<Action>- Iterate over all offline defined modules/channels and if the PreCondition matches the following operations are done:
- Get the offline description of object 0x9001(+module specific offset) 'Frequency Rating' and all entries
 Check:
    (Name)
    BitSize
    DataType
    Rx / Tx mappable
    Default Data
    MinData
    Flags       </Action>
					<PostCondition>Error if
- mandatory object / entry is not defined
- an optional object exists and the entries are invalid
- Object / entry description does not match with the specification</PostCondition>
					<ProposalForSolution>- Define the missing objects
- correct object / entry description</ProposalForSolution>
					<References>
						<Reference Specification="ETG.5003.2011"></Reference>
					</References>
					<Mandatory>true</Mandatory>
				</Description>
				<TestStep Name="InitResult">
					<SetVariable Target="strResult">EmptyString</SetVariable>
				</TestStep>
				<TestStep Name="CheckIfOdAvailable">
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Mailbox</Value1>
							<Value2>false</Value2>
							<SkipCase Id="1">DuT does not support mailbox.</SkipCase>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Mailbox.CoE</Value1>
							<Value2>false</Value2>
							<SkipCase Id="2">DuT does not support CoE.</SkipCase>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep>
					<GetObjectDictionary Target="odDeviceObjectdictionary">
						<DictionaryType>Offline</DictionaryType>
					</GetObjectDictionary>
					<SkipOnFailure Id="3">No offline object dictionary defined.</SkipOnFailure>
				</TestStep>
				<TestStep>
					<GetObjectList Count="u32Tmp" Target="odDeviceObjectdictionaryList" SourceDict="odDeviceObjectdictionary"></GetObjectList>
					<Compare>
						<Equal>
							<Value1>u32Tmp</Value1>
							<Value2>0</Value2>
							<SkipCase Id="4">No offline object dictionary defined.</SkipCase>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="InitAtLeastOneProfileMatch">
					<SetVariable Target="bAtLeastOneModuleMatch">false</SetVariable>
				</TestStep>
				<TestStep Name="GetCurrentProfileList">
					<SizeOf UInt32Var="u32Tmp">arrOfflineProfiles</SizeOf>
					<Compare>
						<Equal>
							<Value1>u32Tmp</Value1>
							<Value2>0</Value2>
							<CallTestFunction Name="GetCurrentProfileList">
								<Parameter>"offline"</Parameter>
								<Parameter>"SafeOP"</Parameter>
								<OutParameter>arrOfflineProfiles</OutParameter>
							</CallTestFunction>
						</Equal>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>u32Tmp</Value1>
							<Value2>0</Value2>
							<WriteLine Id="5" Param0="arrOfflineProfiles" Level="Verbose">Use previously created profile list ({0})</WriteLine>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep>
					<SizeOf UInt32Var="u32Tmp">arrOfflineProfiles</SizeOf>
				</TestStep>
				<TestStep>
					<InitArray TargetArray="arrCurrentProfiles" Length="u32Tmp"></InitArray>
				</TestStep>
				<TestStep>
					<CopyArray>
						<SourceArray>arrOfflineProfiles</SourceArray>
						<DestinationArray>arrCurrentProfiles</DestinationArray>
						<Length>u32Tmp</Length>
					</CopyArray>
				</TestStep>
				<TestStep Name="InitProfileLoopCounter">
					<SetVariable Target="u32ProfileCounter">0</SetVariable>
				</TestStep>
				<TestStep Name="GetProfileArrayLength">
					<SizeOf UInt32Var="u32CurrentProfilesLength">arrCurrentProfiles</SizeOf>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="6" Param0="u32CurrentProfilesLength" Level="Verbose">'{0}' Profile(s) defined offline.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>u32CurrentProfilesLength</Value1>
							<Value2>0</Value2>
							<SkipCase Id="7">Skip case | no profile defined.</SkipCase>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="ProfileLoopStart">
					<GetArrayItem SourceArray="arrCurrentProfiles" Target="strTmpString" Index="u32ProfileCounter"></GetArrayItem>
				</TestStep>
				<TestStep Name="CheckProfileInformationString">
					<Compare>
						<Equal>
							<Value1>strTmpString</Value1>
							<Value2>null</Value2>
							<RaiseError Id="8" Param0="u32ProfileCounter">Profile Info element [{0}] is null.</RaiseError>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>strTmpString</Value1>
							<Value2>EmptyString</Value2>
							<RaiseError Id="9" Param0="u32ProfileCounter">Profile Info element [{0}] is an empty string.</RaiseError>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="GetDeviceProfile">
					<CallTestFunction Name="GetDeviceProfile">
						<Parameter>strTmpString</Parameter>
						<OutParameter>uint16CurDeviceProfile</OutParameter>
					</CallTestFunction>
				</TestStep>
				<TestStep Name="GetModuleProfile">
					<CallTestFunction Name="GetModuleProfile">
						<Parameter>strTmpString</Parameter>
						<OutParameter>uint16CurModuleProfile</OutParameter>
					</CallTestFunction>
				</TestStep>
				<TestStep Name="GetSubModuleProfile">
					<CallTestFunction Name="GetSubModuleProfile">
						<Parameter>strTmpString</Parameter>
						<OutParameter>uint16CurSubModuleProfile</OutParameter>
					</CallTestFunction>
				</TestStep>
				<TestStep Name="DumpProfileInfo">
					<Description Id="10" Param0="uint16CurDeviceProfile" Param1="uint16CurModuleProfile" Param2="uint16CurSubModuleProfile" Param3="u32ProfileCounter" Level="Output">Module[{3}] : DeviceProfile '{0}' ; ModuleProfile '{1}' ; SubModuleProfile '{2}'</Description>
					<Compare>
						<Equal>
							<Value1>bIgnoreProfileID</Value1>
							<Value2>true</Value2>
							<GotoStep>IndicateThatAtleastOneModuleMatch</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CompareDeviceProfile">
					<Compare>
						<NotEqual>
							<Value1>uint16CurDeviceProfile</Value1>
							<Value2>5003</Value2>
							<WriteLine Id="11" Param0="uint16CurDeviceProfile" Level="Output">Skip Profile  (Test Device Profile '5003' != Cur Device Profile '{0}')</WriteLine>
						</NotEqual>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>uint16CurDeviceProfile</Value1>
							<Value2>5003</Value2>
							<GotoStep>ProfileLoopEnd</GotoStep>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep Name="CompareModuleProfile">
					<Compare>
						<NotEqual>
							<Value1>uint16CurModuleProfile</Value1>
							<Value2>2011</Value2>
							<WriteLine Id="12" Param0="uint16CurModuleProfile" Level="Output">Skip Profile  (Test Module Profile '2011' != Cur Module Profile '{0}')</WriteLine>
						</NotEqual>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>uint16CurModuleProfile</Value1>
							<Value2>2011</Value2>
							<GotoStep>ProfileLoopEnd</GotoStep>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep Name="CompareSubModuleProfile">
					<Compare>
						<NotEqual>
							<Value1>uint16CurSubModuleProfile</Value1>
							<Value2>0</Value2>
							<WriteLine Id="13" Param0="uint16CurSubModuleProfile" Level="Output">Skip Profile  (Test SubModule Profile '0' != Cur SubModule Profile '{0}')</WriteLine>
						</NotEqual>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>uint16CurSubModuleProfile</Value1>
							<Value2>0</Value2>
							<GotoStep>ProfileLoopEnd</GotoStep>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep Name="IndicateThatAtleastOneModuleMatch">
					<SetVariable Target="bAtLeastOneModuleMatch">true</SetVariable>
				</TestStep>
				<TestStep Name="GetObjectIndexInclOffset">
					<SetVariable Target="u16ObjectIndexInclOffset">#x9001 + (u32ProfileCounter * #x10)</SetVariable>
					<WriteLine Id="14" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : ObjectIndex '0x{0:X}'</WriteLine>
				</TestStep>
				<TestStep Name="LoadDeviceObjectDictionary">
					<Description Id="15" Level="Verbose">Load 'offline' object dictionary for testing.</Description>
					<GetObjectDictionary Target="odDeviceObjectdictionary">
						<DictionaryType>Offline</DictionaryType>
					</GetObjectDictionary>
					<RaiseErrorOnFailure Id="16">VerifyObject : failed to load offline object dictionary.</RaiseErrorOnFailure>
				</TestStep>
				<TestStep Name="SetObjectRequiredLevel">
					<SetVariable Target="bObjectOrEntryRequiredLevel">1</SetVariable>
					<WriteLine Id="17" Param0="u16ObjectIndexInclOffset" Level="Verbose">0x{0:X4} 'Frequency Rating' may be available</WriteLine>
				</TestStep>
				<TestStep Name="CheckIfObjectExists">
					<GetObjectDescription SourceDictionary="odDeviceObjectdictionary" Index="u16ObjectIndexInclOffset" SubIndex="-1"></GetObjectDescription>
					<GotoOnSuccess>CallCheckObjectDescription</GotoOnSuccess>
				</TestStep>
				<TestStep Name="HandleNotExistingObject">
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>2</Value2>
							<WriteLine Id="18" Param0="u16ObjectIndexInclOffset" Level="Warning">The object 0x{0:X4} 'Frequency Rating' does not exists.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>1</Value2>
							<WriteLine Id="19" Param0="u16ObjectIndexInclOffset" Level="Output">The object 0x{0:X4} 'Frequency Rating' does not exists.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>ProfileLoopEnd</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CallCheckObjectDescription">
					<Description Id="20" Param0="u16ObjectIndexInclOffset" Level="Output">Verify the object description 0x{0:X4} 'Frequency Rating'.</Description>
					<CallTestFunction Name="CheckObjectDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"offline"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>"Frequency Rating"</Parameter>
						<Parameter>null</Parameter>
						<Parameter>9</Parameter>
						<Parameter>-1</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<GotoStep>ProfileLoopEnd</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="InitEntryBittOffset">
					<SetVariable Target="i32CurrentBitOffset">0</SetVariable>
				</TestStep>
				<TestStep Name="StartSi0">
					<Description Id="21" Level="Output">Start validate SubIndex0</Description>
					<WriteLine Id="22" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : Subindex '0x{0:X}.0'</WriteLine>
				</TestStep>
				<TestStep Name="CallSi0CheckEntryDescription">
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"offline"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>0</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>null</Parameter>
						<Parameter>5</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>null</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>null</Parameter>
						<Parameter>null</Parameter>
						<Parameter>null</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>8</Parameter>
						<Parameter>i32CurrentBitOffset</Parameter>
						<Parameter>true</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="EndSi0">
					<SetVariable Target="i32CurrentBitOffset">16</SetVariable>
				</TestStep>
				<TestStep Name="StartSi1">
					<Description Id="23" Level="Output">Start validate SubIndex1</Description>
					<WriteLine Id="24" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : Subindex '0x{0:X}.1'</WriteLine>
				</TestStep>
				<TestStep Name="SetSi1RequiredLevel">
					<SetVariable Target="bObjectOrEntryRequiredLevel">1</SetVariable>
					<WriteLine Id="25" Param0="u16ObjectIndexInclOffset" Level="Verbose">0x{0:X4}.1 'Nominal Frequency' may be available</WriteLine>
				</TestStep>
				<TestStep Name="CheckIfSi1Exists">
					<GetObjectDescription SourceDictionary="odDeviceObjectdictionary" Index="u16ObjectIndexInclOffset" SubIndex="1">
						<Type>u16DataType</Type>
					</GetObjectDescription>
					<GotoOnFailure>HandleNotExistingSi1</GotoOnFailure>
				</TestStep>
				<TestStep>
					<Compare>
						<NotEqual>
							<Value1>u16DataType</Value1>
							<Value2>0</Value2>
							<GotoStep>CallSi1CheckEntryDescription</GotoStep>
						</NotEqual>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="26" Param0="u16ObjectIndexInclOffset" Level="Verbose">The entry 0x{0:X4}.1 is defined as a padding entry.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>EndSi1</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="HandleNotExistingSi1">
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="27" Param0="u16ObjectIndexInclOffset" Level="Output">The entry 0x{0:X4}.1 does not exists.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>EndSi1</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CallSi1CheckEntryDescription">
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"offline"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>1</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>"Nominal Frequency"</Parameter>
						<Parameter>8</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>null</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>32</Parameter>
						<Parameter>i32CurrentBitOffset</Parameter>
						<Parameter>true</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="EndSi1">
					<SetVariable Target="i32CurrentBitOffset">-1</SetVariable>
				</TestStep>
				<TestStep Name="CheckReservedEntryRange_2_to_255">
					<Description Id="28" Level="Output">Start check reserved entry range 2 to 255</Description>
					<CallTestFunction Name="CheckReservedEntryRange">
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>2</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>odDeviceObjectdictionary</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="ProfileLoopEnd">
					<Compare>
						<Equal>
							<Value1>bAtLeastOneModuleMatch</Value1>
							<Value2>false</Value2>
							<GotoStep>HandleAbortTestCaseOnFirstError</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="HandleAbortTestCaseOnFirstError">
					<Compare>
						<Equal>
							<Value1>bAbortTestCaseOnFirstError</Value1>
							<Value2>false</Value2>
							<GotoStep>ProfileLoopIncrement</GotoStep>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>strResult</Value1>
							<Value2>EmptyString</Value2>
							<GotoStep>ProfileLoopIncrement</GotoStep>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="29" Level="Output">Object verification for all following modules abort because an error was already detected for the current module.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>END</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="ProfileLoopIncrement">
					<SetVariable Target="u32ProfileCounter">u32ProfileCounter + 1</SetVariable>
					<Compare>
						<Greater>
							<Value1>u32CurrentProfilesLength</Value1>
							<Value2>u32ProfileCounter</Value2>
							<GotoStep>ProfileLoopStart</GotoStep>
						</Greater>
					</Compare>
				</TestStep>
				<TestStep Name="END">
					<Compare>
						<NotEqual>
							<Value1>bAtLeastOneModuleMatch</Value1>
							<Value2>true</Value2>
							<SkipCase Id="30">SKIP TEST(no module/channel supports the current profile)</SkipCase>
						</NotEqual>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bDEBUG</Value1>
							<Value2>true</Value2>
							<WriteLine Id="31" Param0="strResult" Level="Verbose">DEBUG | Result : '{0}'.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>strResult</Value1>
							<Value2>EmptyString</Value2>
							<ReturnSuccess Id="32">Test succeed</ReturnSuccess>
						</Equal>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>strResult</Value1>
							<Value2>EmptyString</Value2>
							<RaiseError Id="33"></RaiseError>
						</NotEqual>
					</Compare>
				</TestStep>
			</TestCase>
			<TestCase Name="online | 0x9001 (Frequency Rating)" CaseId="4">
				<Description>
					<PreCondition>- The device profile is 5003
- The module profile is 2011
- The submodule profile is 0</PreCondition>
					<Action>- Iterate over all online defined modules/channels and if the PreCondition matches the following operations are done:
- Get the online description of object 0x9001(+module specific offset) 'Frequency Rating' and all entries
 Check:
    (Name)
    BitSize
    DataType
    Rx / Tx mappable
    Default Data
    MinData
    Flags       </Action>
					<PostCondition>Error if
- mandatory object / entry is not defined
- an optional object exists and the entries are invalid
- Object / entry description does not match with the specification</PostCondition>
					<ProposalForSolution>- Define the missing objects
- correct object / entry description</ProposalForSolution>
					<References>
						<Reference Specification="ETG.5003.2011"></Reference>
					</References>
					<Mandatory>true</Mandatory>
				</Description>
				<TestStep Name="InitResult">
					<SetVariable Target="strResult">EmptyString</SetVariable>
				</TestStep>
				<TestStep Name="CheckIfOdAvailable">
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Mailbox</Value1>
							<Value2>false</Value2>
							<SkipCase Id="1">DuT does not support mailbox.</SkipCase>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Mailbox.CoE</Value1>
							<Value2>false</Value2>
							<SkipCase Id="2">DuT does not support CoE.</SkipCase>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Mailbox.CoE.SdoInfo</Value1>
							<Value2>false</Value2>
							<SkipCase Id="3">DuT does not support SDO Info.</SkipCase>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="InitAtLeastOneProfileMatch">
					<SetVariable Target="bAtLeastOneModuleMatch">false</SetVariable>
				</TestStep>
				<TestStep Name="GetCurrentProfileList">
					<SizeOf UInt32Var="u32Tmp">arrOnlineProfiles</SizeOf>
					<Compare>
						<Equal>
							<Value1>u32Tmp</Value1>
							<Value2>0</Value2>
							<CallTestFunction Name="GetCurrentProfileList">
								<Parameter>"online"</Parameter>
								<Parameter>"SafeOP"</Parameter>
								<OutParameter>arrOnlineProfiles</OutParameter>
							</CallTestFunction>
						</Equal>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>u32Tmp</Value1>
							<Value2>0</Value2>
							<WriteLine Id="4" Param0="arrOnlineProfiles" Level="Verbose">Use previously created profile list ({0})</WriteLine>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep>
					<SizeOf UInt32Var="u32Tmp">arrOnlineProfiles</SizeOf>
				</TestStep>
				<TestStep>
					<InitArray TargetArray="arrCurrentProfiles" Length="u32Tmp"></InitArray>
				</TestStep>
				<TestStep>
					<CopyArray>
						<SourceArray>arrOnlineProfiles</SourceArray>
						<DestinationArray>arrCurrentProfiles</DestinationArray>
						<Length>u32Tmp</Length>
					</CopyArray>
				</TestStep>
				<TestStep Name="InitProfileLoopCounter">
					<SetVariable Target="u32ProfileCounter">0</SetVariable>
				</TestStep>
				<TestStep Name="GetProfileArrayLength">
					<SizeOf UInt32Var="u32CurrentProfilesLength">arrCurrentProfiles</SizeOf>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="5" Param0="u32CurrentProfilesLength" Level="Verbose">'{0}' Profile(s) defined online.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>u32CurrentProfilesLength</Value1>
							<Value2>0</Value2>
							<SkipCase Id="6">Skip case | no profile defined.</SkipCase>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="ProfileLoopStart">
					<GetArrayItem SourceArray="arrCurrentProfiles" Target="strTmpString" Index="u32ProfileCounter"></GetArrayItem>
				</TestStep>
				<TestStep Name="CheckProfileInformationString">
					<Compare>
						<Equal>
							<Value1>strTmpString</Value1>
							<Value2>null</Value2>
							<RaiseError Id="7" Param0="u32ProfileCounter">Profile Info element [{0}] is null.</RaiseError>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>strTmpString</Value1>
							<Value2>EmptyString</Value2>
							<RaiseError Id="8" Param0="u32ProfileCounter">Profile Info element [{0}] is an empty string.</RaiseError>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="GetDeviceProfile">
					<CallTestFunction Name="GetDeviceProfile">
						<Parameter>strTmpString</Parameter>
						<OutParameter>uint16CurDeviceProfile</OutParameter>
					</CallTestFunction>
				</TestStep>
				<TestStep Name="GetModuleProfile">
					<CallTestFunction Name="GetModuleProfile">
						<Parameter>strTmpString</Parameter>
						<OutParameter>uint16CurModuleProfile</OutParameter>
					</CallTestFunction>
				</TestStep>
				<TestStep Name="GetSubModuleProfile">
					<CallTestFunction Name="GetSubModuleProfile">
						<Parameter>strTmpString</Parameter>
						<OutParameter>uint16CurSubModuleProfile</OutParameter>
					</CallTestFunction>
				</TestStep>
				<TestStep Name="DumpProfileInfo">
					<Description Id="9" Param0="uint16CurDeviceProfile" Param1="uint16CurModuleProfile" Param2="uint16CurSubModuleProfile" Param3="u32ProfileCounter" Level="Output">Module[{3}] : DeviceProfile '{0}' ; ModuleProfile '{1}' ; SubModuleProfile '{2}'</Description>
					<Compare>
						<Equal>
							<Value1>bIgnoreProfileID</Value1>
							<Value2>true</Value2>
							<GotoStep>IndicateThatAtleastOneModuleMatch</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CompareDeviceProfile">
					<Compare>
						<NotEqual>
							<Value1>uint16CurDeviceProfile</Value1>
							<Value2>5003</Value2>
							<WriteLine Id="10" Param0="uint16CurDeviceProfile" Level="Output">Skip Profile  (Test Device Profile '5003' != Cur Device Profile '{0}')</WriteLine>
						</NotEqual>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>uint16CurDeviceProfile</Value1>
							<Value2>5003</Value2>
							<GotoStep>ProfileLoopEnd</GotoStep>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep Name="CompareModuleProfile">
					<Compare>
						<NotEqual>
							<Value1>uint16CurModuleProfile</Value1>
							<Value2>2011</Value2>
							<WriteLine Id="11" Param0="uint16CurModuleProfile" Level="Output">Skip Profile  (Test Module Profile '2011' != Cur Module Profile '{0}')</WriteLine>
						</NotEqual>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>uint16CurModuleProfile</Value1>
							<Value2>2011</Value2>
							<GotoStep>ProfileLoopEnd</GotoStep>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep Name="CompareSubModuleProfile">
					<Compare>
						<NotEqual>
							<Value1>uint16CurSubModuleProfile</Value1>
							<Value2>0</Value2>
							<WriteLine Id="12" Param0="uint16CurSubModuleProfile" Level="Output">Skip Profile  (Test SubModule Profile '0' != Cur SubModule Profile '{0}')</WriteLine>
						</NotEqual>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>uint16CurSubModuleProfile</Value1>
							<Value2>0</Value2>
							<GotoStep>ProfileLoopEnd</GotoStep>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep Name="IndicateThatAtleastOneModuleMatch">
					<SetVariable Target="bAtLeastOneModuleMatch">true</SetVariable>
				</TestStep>
				<TestStep Name="GetObjectIndexInclOffset">
					<SetVariable Target="u16ObjectIndexInclOffset">#x9001 + (u32ProfileCounter * #x10)</SetVariable>
					<WriteLine Id="13" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : ObjectIndex '0x{0:X}'</WriteLine>
				</TestStep>
				<TestStep Name="LoadDeviceObjectDictionary">
					<Description Id="14" Level="Verbose">Load 'online' object dictionary for testing.</Description>
					<GetObjectDictionary Target="odDeviceObjectdictionary">
						<DictionaryType>Online</DictionaryType>
					</GetObjectDictionary>
					<RaiseErrorOnFailure Id="15">VerifyObject : failed to load online object dictionary.</RaiseErrorOnFailure>
				</TestStep>
				<TestStep Name="SetObjectRequiredLevel">
					<SetVariable Target="bObjectOrEntryRequiredLevel">1</SetVariable>
					<WriteLine Id="16" Param0="u16ObjectIndexInclOffset" Level="Verbose">0x{0:X4} 'Frequency Rating' may be available</WriteLine>
				</TestStep>
				<TestStep Name="CheckIfObjectExists">
					<GetObjectDescription SourceDictionary="odDeviceObjectdictionary" Index="u16ObjectIndexInclOffset" SubIndex="-1"></GetObjectDescription>
					<GotoOnSuccess>CallCheckObjectDescription</GotoOnSuccess>
				</TestStep>
				<TestStep Name="HandleNotExistingObject">
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>2</Value2>
							<WriteLine Id="17" Param0="u16ObjectIndexInclOffset" Level="Warning">The object 0x{0:X4} 'Frequency Rating' does not exists.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>1</Value2>
							<WriteLine Id="18" Param0="u16ObjectIndexInclOffset" Level="Output">The object 0x{0:X4} 'Frequency Rating' does not exists.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>ProfileLoopEnd</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CallCheckObjectDescription">
					<Description Id="19" Param0="u16ObjectIndexInclOffset" Level="Output">Verify the object description 0x{0:X4} 'Frequency Rating'.</Description>
					<CallTestFunction Name="CheckObjectDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"online"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>"Frequency Rating"</Parameter>
						<Parameter>null</Parameter>
						<Parameter>9</Parameter>
						<Parameter>-1</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<GotoStep>ProfileLoopEnd</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="InitEntryBittOffset">
					<SetVariable Target="i32CurrentBitOffset">0</SetVariable>
				</TestStep>
				<TestStep Name="StartSi0">
					<Description Id="20" Level="Output">Start validate SubIndex0</Description>
					<WriteLine Id="21" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : Subindex '0x{0:X}.0'</WriteLine>
				</TestStep>
				<TestStep Name="CallSi0CheckEntryDescription">
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"online"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>0</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>null</Parameter>
						<Parameter>5</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>null</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>null</Parameter>
						<Parameter>null</Parameter>
						<Parameter>null</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>8</Parameter>
						<Parameter>i32CurrentBitOffset</Parameter>
						<Parameter>true</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="EndSi0">
					<SetVariable Target="i32CurrentBitOffset">16</SetVariable>
				</TestStep>
				<TestStep Name="StartSi1">
					<Description Id="22" Level="Output">Start validate SubIndex1</Description>
					<WriteLine Id="23" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : Subindex '0x{0:X}.1'</WriteLine>
				</TestStep>
				<TestStep Name="SetSi1RequiredLevel">
					<SetVariable Target="bObjectOrEntryRequiredLevel">1</SetVariable>
					<WriteLine Id="24" Param0="u16ObjectIndexInclOffset" Level="Verbose">0x{0:X4}.1 'Nominal Frequency' may be available</WriteLine>
				</TestStep>
				<TestStep Name="CheckIfSi1Exists">
					<GetObjectDescription SourceDictionary="odDeviceObjectdictionary" Index="u16ObjectIndexInclOffset" SubIndex="1">
						<Type>u16DataType</Type>
					</GetObjectDescription>
					<GotoOnFailure>HandleNotExistingSi1</GotoOnFailure>
				</TestStep>
				<TestStep>
					<Compare>
						<NotEqual>
							<Value1>u16DataType</Value1>
							<Value2>0</Value2>
							<GotoStep>CallSi1CheckEntryDescription</GotoStep>
						</NotEqual>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="25" Param0="u16ObjectIndexInclOffset" Level="Verbose">The entry 0x{0:X4}.1 is defined as a padding entry.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>EndSi1</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="HandleNotExistingSi1">
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="26" Param0="u16ObjectIndexInclOffset" Level="Output">The entry 0x{0:X4}.1 does not exists.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>EndSi1</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CallSi1CheckEntryDescription">
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"online"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>1</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>"Nominal Frequency"</Parameter>
						<Parameter>8</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>null</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>32</Parameter>
						<Parameter>i32CurrentBitOffset</Parameter>
						<Parameter>true</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="EndSi1">
					<SetVariable Target="i32CurrentBitOffset">-1</SetVariable>
				</TestStep>
				<TestStep Name="CheckReservedEntryRange_2_to_255">
					<Description Id="27" Level="Output">Start check reserved entry range 2 to 255</Description>
					<CallTestFunction Name="CheckReservedEntryRange">
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>2</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>odDeviceObjectdictionary</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="ProfileLoopEnd">
					<Compare>
						<Equal>
							<Value1>bAtLeastOneModuleMatch</Value1>
							<Value2>false</Value2>
							<GotoStep>HandleAbortTestCaseOnFirstError</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="HandleAbortTestCaseOnFirstError">
					<Compare>
						<Equal>
							<Value1>bAbortTestCaseOnFirstError</Value1>
							<Value2>false</Value2>
							<GotoStep>ProfileLoopIncrement</GotoStep>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>strResult</Value1>
							<Value2>EmptyString</Value2>
							<GotoStep>ProfileLoopIncrement</GotoStep>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="28" Level="Output">Object verification for all following modules abort because an error was already detected for the current module.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>END</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="ProfileLoopIncrement">
					<SetVariable Target="u32ProfileCounter">u32ProfileCounter + 1</SetVariable>
					<Compare>
						<Greater>
							<Value1>u32CurrentProfilesLength</Value1>
							<Value2>u32ProfileCounter</Value2>
							<GotoStep>ProfileLoopStart</GotoStep>
						</Greater>
					</Compare>
				</TestStep>
				<TestStep Name="END">
					<Compare>
						<NotEqual>
							<Value1>bAtLeastOneModuleMatch</Value1>
							<Value2>true</Value2>
							<SkipCase Id="29">SKIP TEST(no module/channel supports the current profile)</SkipCase>
						</NotEqual>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bDEBUG</Value1>
							<Value2>true</Value2>
							<WriteLine Id="30" Param0="strResult" Level="Verbose">DEBUG | Result : '{0}'.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>strResult</Value1>
							<Value2>EmptyString</Value2>
							<ReturnSuccess Id="31">Test succeed</ReturnSuccess>
						</Equal>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>strResult</Value1>
							<Value2>EmptyString</Value2>
							<RaiseError Id="32"></RaiseError>
						</NotEqual>
					</Compare>
				</TestStep>
			</TestCase>
			<TestCase Name="offline | 0x9002 (Pulse Rating)" CaseId="5">
				<Description>
					<PreCondition>- The device profile is 5003
- The module profile is 2011
- The submodule profile is 0</PreCondition>
					<Action>- Iterate over all offline defined modules/channels and if the PreCondition matches the following operations are done:
- Get the offline description of object 0x9002(+module specific offset) 'Pulse Rating' and all entries
 Check:
    (Name)
    BitSize
    DataType
    Rx / Tx mappable
    Default Data
    MinData
    Flags       </Action>
					<PostCondition>Error if
- mandatory object / entry is not defined
- an optional object exists and the entries are invalid
- Object / entry description does not match with the specification</PostCondition>
					<ProposalForSolution>- Define the missing objects
- correct object / entry description</ProposalForSolution>
					<References>
						<Reference Specification="ETG.5003.2011"></Reference>
					</References>
					<Mandatory>true</Mandatory>
				</Description>
				<TestStep Name="InitResult">
					<SetVariable Target="strResult">EmptyString</SetVariable>
				</TestStep>
				<TestStep Name="CheckIfOdAvailable">
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Mailbox</Value1>
							<Value2>false</Value2>
							<SkipCase Id="1">DuT does not support mailbox.</SkipCase>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Mailbox.CoE</Value1>
							<Value2>false</Value2>
							<SkipCase Id="2">DuT does not support CoE.</SkipCase>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep>
					<GetObjectDictionary Target="odDeviceObjectdictionary">
						<DictionaryType>Offline</DictionaryType>
					</GetObjectDictionary>
					<SkipOnFailure Id="3">No offline object dictionary defined.</SkipOnFailure>
				</TestStep>
				<TestStep>
					<GetObjectList Count="u32Tmp" Target="odDeviceObjectdictionaryList" SourceDict="odDeviceObjectdictionary"></GetObjectList>
					<Compare>
						<Equal>
							<Value1>u32Tmp</Value1>
							<Value2>0</Value2>
							<SkipCase Id="4">No offline object dictionary defined.</SkipCase>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="InitAtLeastOneProfileMatch">
					<SetVariable Target="bAtLeastOneModuleMatch">false</SetVariable>
				</TestStep>
				<TestStep Name="GetCurrentProfileList">
					<SizeOf UInt32Var="u32Tmp">arrOfflineProfiles</SizeOf>
					<Compare>
						<Equal>
							<Value1>u32Tmp</Value1>
							<Value2>0</Value2>
							<CallTestFunction Name="GetCurrentProfileList">
								<Parameter>"offline"</Parameter>
								<Parameter>"SafeOP"</Parameter>
								<OutParameter>arrOfflineProfiles</OutParameter>
							</CallTestFunction>
						</Equal>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>u32Tmp</Value1>
							<Value2>0</Value2>
							<WriteLine Id="5" Param0="arrOfflineProfiles" Level="Verbose">Use previously created profile list ({0})</WriteLine>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep>
					<SizeOf UInt32Var="u32Tmp">arrOfflineProfiles</SizeOf>
				</TestStep>
				<TestStep>
					<InitArray TargetArray="arrCurrentProfiles" Length="u32Tmp"></InitArray>
				</TestStep>
				<TestStep>
					<CopyArray>
						<SourceArray>arrOfflineProfiles</SourceArray>
						<DestinationArray>arrCurrentProfiles</DestinationArray>
						<Length>u32Tmp</Length>
					</CopyArray>
				</TestStep>
				<TestStep Name="InitProfileLoopCounter">
					<SetVariable Target="u32ProfileCounter">0</SetVariable>
				</TestStep>
				<TestStep Name="GetProfileArrayLength">
					<SizeOf UInt32Var="u32CurrentProfilesLength">arrCurrentProfiles</SizeOf>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="6" Param0="u32CurrentProfilesLength" Level="Verbose">'{0}' Profile(s) defined offline.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>u32CurrentProfilesLength</Value1>
							<Value2>0</Value2>
							<SkipCase Id="7">Skip case | no profile defined.</SkipCase>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="ProfileLoopStart">
					<GetArrayItem SourceArray="arrCurrentProfiles" Target="strTmpString" Index="u32ProfileCounter"></GetArrayItem>
				</TestStep>
				<TestStep Name="CheckProfileInformationString">
					<Compare>
						<Equal>
							<Value1>strTmpString</Value1>
							<Value2>null</Value2>
							<RaiseError Id="8" Param0="u32ProfileCounter">Profile Info element [{0}] is null.</RaiseError>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>strTmpString</Value1>
							<Value2>EmptyString</Value2>
							<RaiseError Id="9" Param0="u32ProfileCounter">Profile Info element [{0}] is an empty string.</RaiseError>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="GetDeviceProfile">
					<CallTestFunction Name="GetDeviceProfile">
						<Parameter>strTmpString</Parameter>
						<OutParameter>uint16CurDeviceProfile</OutParameter>
					</CallTestFunction>
				</TestStep>
				<TestStep Name="GetModuleProfile">
					<CallTestFunction Name="GetModuleProfile">
						<Parameter>strTmpString</Parameter>
						<OutParameter>uint16CurModuleProfile</OutParameter>
					</CallTestFunction>
				</TestStep>
				<TestStep Name="GetSubModuleProfile">
					<CallTestFunction Name="GetSubModuleProfile">
						<Parameter>strTmpString</Parameter>
						<OutParameter>uint16CurSubModuleProfile</OutParameter>
					</CallTestFunction>
				</TestStep>
				<TestStep Name="DumpProfileInfo">
					<Description Id="10" Param0="uint16CurDeviceProfile" Param1="uint16CurModuleProfile" Param2="uint16CurSubModuleProfile" Param3="u32ProfileCounter" Level="Output">Module[{3}] : DeviceProfile '{0}' ; ModuleProfile '{1}' ; SubModuleProfile '{2}'</Description>
					<Compare>
						<Equal>
							<Value1>bIgnoreProfileID</Value1>
							<Value2>true</Value2>
							<GotoStep>IndicateThatAtleastOneModuleMatch</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CompareDeviceProfile">
					<Compare>
						<NotEqual>
							<Value1>uint16CurDeviceProfile</Value1>
							<Value2>5003</Value2>
							<WriteLine Id="11" Param0="uint16CurDeviceProfile" Level="Output">Skip Profile  (Test Device Profile '5003' != Cur Device Profile '{0}')</WriteLine>
						</NotEqual>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>uint16CurDeviceProfile</Value1>
							<Value2>5003</Value2>
							<GotoStep>ProfileLoopEnd</GotoStep>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep Name="CompareModuleProfile">
					<Compare>
						<NotEqual>
							<Value1>uint16CurModuleProfile</Value1>
							<Value2>2011</Value2>
							<WriteLine Id="12" Param0="uint16CurModuleProfile" Level="Output">Skip Profile  (Test Module Profile '2011' != Cur Module Profile '{0}')</WriteLine>
						</NotEqual>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>uint16CurModuleProfile</Value1>
							<Value2>2011</Value2>
							<GotoStep>ProfileLoopEnd</GotoStep>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep Name="CompareSubModuleProfile">
					<Compare>
						<NotEqual>
							<Value1>uint16CurSubModuleProfile</Value1>
							<Value2>0</Value2>
							<WriteLine Id="13" Param0="uint16CurSubModuleProfile" Level="Output">Skip Profile  (Test SubModule Profile '0' != Cur SubModule Profile '{0}')</WriteLine>
						</NotEqual>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>uint16CurSubModuleProfile</Value1>
							<Value2>0</Value2>
							<GotoStep>ProfileLoopEnd</GotoStep>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep Name="IndicateThatAtleastOneModuleMatch">
					<SetVariable Target="bAtLeastOneModuleMatch">true</SetVariable>
				</TestStep>
				<TestStep Name="GetObjectIndexInclOffset">
					<SetVariable Target="u16ObjectIndexInclOffset">#x9002 + (u32ProfileCounter * #x10)</SetVariable>
					<WriteLine Id="14" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : ObjectIndex '0x{0:X}'</WriteLine>
				</TestStep>
				<TestStep Name="LoadDeviceObjectDictionary">
					<Description Id="15" Level="Verbose">Load 'offline' object dictionary for testing.</Description>
					<GetObjectDictionary Target="odDeviceObjectdictionary">
						<DictionaryType>Offline</DictionaryType>
					</GetObjectDictionary>
					<RaiseErrorOnFailure Id="16">VerifyObject : failed to load offline object dictionary.</RaiseErrorOnFailure>
				</TestStep>
				<TestStep Name="SetObjectRequiredLevel">
					<SetVariable Target="bObjectOrEntryRequiredLevel">1</SetVariable>
					<WriteLine Id="17" Param0="u16ObjectIndexInclOffset" Level="Verbose">0x{0:X4} 'Pulse Rating' may be available</WriteLine>
				</TestStep>
				<TestStep Name="CheckIfObjectExists">
					<GetObjectDescription SourceDictionary="odDeviceObjectdictionary" Index="u16ObjectIndexInclOffset" SubIndex="-1"></GetObjectDescription>
					<GotoOnSuccess>CallCheckObjectDescription</GotoOnSuccess>
				</TestStep>
				<TestStep Name="HandleNotExistingObject">
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>2</Value2>
							<WriteLine Id="18" Param0="u16ObjectIndexInclOffset" Level="Warning">The object 0x{0:X4} 'Pulse Rating' does not exists.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>1</Value2>
							<WriteLine Id="19" Param0="u16ObjectIndexInclOffset" Level="Output">The object 0x{0:X4} 'Pulse Rating' does not exists.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>ProfileLoopEnd</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CallCheckObjectDescription">
					<Description Id="20" Param0="u16ObjectIndexInclOffset" Level="Output">Verify the object description 0x{0:X4} 'Pulse Rating'.</Description>
					<CallTestFunction Name="CheckObjectDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"offline"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>"Pulse Rating"</Parameter>
						<Parameter>null</Parameter>
						<Parameter>9</Parameter>
						<Parameter>-1</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<GotoStep>ProfileLoopEnd</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="InitEntryBittOffset">
					<SetVariable Target="i32CurrentBitOffset">0</SetVariable>
				</TestStep>
				<TestStep Name="StartSi0">
					<Description Id="21" Level="Output">Start validate SubIndex0</Description>
					<WriteLine Id="22" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : Subindex '0x{0:X}.0'</WriteLine>
				</TestStep>
				<TestStep Name="CallSi0CheckEntryDescription">
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"offline"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>0</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>null</Parameter>
						<Parameter>5</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>null</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>null</Parameter>
						<Parameter>null</Parameter>
						<Parameter>null</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>8</Parameter>
						<Parameter>i32CurrentBitOffset</Parameter>
						<Parameter>true</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="EndSi0">
					<SetVariable Target="i32CurrentBitOffset">16</SetVariable>
				</TestStep>
				<TestStep Name="StartSi1">
					<Description Id="23" Level="Output">Start validate SubIndex1</Description>
					<WriteLine Id="24" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : Subindex '0x{0:X}.1'</WriteLine>
				</TestStep>
				<TestStep Name="SetSi1RequiredLevel">
					<SetVariable Target="bObjectOrEntryRequiredLevel">1</SetVariable>
					<WriteLine Id="25" Param0="u16ObjectIndexInclOffset" Level="Verbose">0x{0:X4}.1 'Min Pulse Frequency' may be available</WriteLine>
				</TestStep>
				<TestStep Name="CheckIfSi1Exists">
					<GetObjectDescription SourceDictionary="odDeviceObjectdictionary" Index="u16ObjectIndexInclOffset" SubIndex="1">
						<Type>u16DataType</Type>
					</GetObjectDescription>
					<GotoOnFailure>HandleNotExistingSi1</GotoOnFailure>
				</TestStep>
				<TestStep>
					<Compare>
						<NotEqual>
							<Value1>u16DataType</Value1>
							<Value2>0</Value2>
							<GotoStep>CallSi1CheckEntryDescription</GotoStep>
						</NotEqual>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="26" Param0="u16ObjectIndexInclOffset" Level="Verbose">The entry 0x{0:X4}.1 is defined as a padding entry.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>EndSi1</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="HandleNotExistingSi1">
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="27" Param0="u16ObjectIndexInclOffset" Level="Output">The entry 0x{0:X4}.1 does not exists.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>EndSi1</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CallSi1CheckEntryDescription">
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"offline"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>1</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>"Min Pulse Frequency"</Parameter>
						<Parameter>8</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>null</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>32</Parameter>
						<Parameter>i32CurrentBitOffset</Parameter>
						<Parameter>true</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="EndSi1">
					<SetVariable Target="i32CurrentBitOffset">-1</SetVariable>
				</TestStep>
				<TestStep Name="StartSi2">
					<Description Id="28" Level="Output">Start validate SubIndex2</Description>
					<WriteLine Id="29" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : Subindex '0x{0:X}.2'</WriteLine>
				</TestStep>
				<TestStep Name="SetSi2RequiredLevel">
					<SetVariable Target="bObjectOrEntryRequiredLevel">1</SetVariable>
					<WriteLine Id="30" Param0="u16ObjectIndexInclOffset" Level="Verbose">0x{0:X4}.2 'Max Pulse Frequency' may be available</WriteLine>
				</TestStep>
				<TestStep Name="CheckIfSi2Exists">
					<GetObjectDescription SourceDictionary="odDeviceObjectdictionary" Index="u16ObjectIndexInclOffset" SubIndex="2">
						<Type>u16DataType</Type>
					</GetObjectDescription>
					<GotoOnFailure>HandleNotExistingSi2</GotoOnFailure>
				</TestStep>
				<TestStep>
					<Compare>
						<NotEqual>
							<Value1>u16DataType</Value1>
							<Value2>0</Value2>
							<GotoStep>CallSi2CheckEntryDescription</GotoStep>
						</NotEqual>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="31" Param0="u16ObjectIndexInclOffset" Level="Verbose">The entry 0x{0:X4}.2 is defined as a padding entry.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>EndSi2</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="HandleNotExistingSi2">
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="32" Param0="u16ObjectIndexInclOffset" Level="Output">The entry 0x{0:X4}.2 does not exists.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>EndSi2</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CallSi2CheckEntryDescription">
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"offline"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>2</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>"Max Pulse Frequency"</Parameter>
						<Parameter>8</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>null</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>32</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>true</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="EndSi2"></TestStep>
				<TestStep Name="StartSi3">
					<Description Id="33" Level="Output">Start validate SubIndex3</Description>
					<WriteLine Id="34" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : Subindex '0x{0:X}.3'</WriteLine>
				</TestStep>
				<TestStep Name="SetSi3RequiredLevel">
					<SetVariable Target="bObjectOrEntryRequiredLevel">1</SetVariable>
					<WriteLine Id="35" Param0="u16ObjectIndexInclOffset" Level="Verbose">0x{0:X4}.3 'Min Pulse Duty Cycle' may be available</WriteLine>
				</TestStep>
				<TestStep Name="CheckIfSi3Exists">
					<GetObjectDescription SourceDictionary="odDeviceObjectdictionary" Index="u16ObjectIndexInclOffset" SubIndex="3">
						<Type>u16DataType</Type>
					</GetObjectDescription>
					<GotoOnFailure>HandleNotExistingSi3</GotoOnFailure>
				</TestStep>
				<TestStep>
					<Compare>
						<NotEqual>
							<Value1>u16DataType</Value1>
							<Value2>0</Value2>
							<GotoStep>CallSi3CheckEntryDescription</GotoStep>
						</NotEqual>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="36" Param0="u16ObjectIndexInclOffset" Level="Verbose">The entry 0x{0:X4}.3 is defined as a padding entry.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>EndSi3</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="HandleNotExistingSi3">
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="37" Param0="u16ObjectIndexInclOffset" Level="Output">The entry 0x{0:X4}.3 does not exists.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>EndSi3</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CallSi3CheckEntryDescription">
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"offline"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>3</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>"Min Pulse Duty Cycle"</Parameter>
						<Parameter>8</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>null</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>00000000</Parameter>
						<Parameter>0000C842</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>32</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>true</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="EndSi3"></TestStep>
				<TestStep Name="StartSi4">
					<Description Id="38" Level="Output">Start validate SubIndex4</Description>
					<WriteLine Id="39" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : Subindex '0x{0:X}.4'</WriteLine>
				</TestStep>
				<TestStep Name="SetSi4RequiredLevel">
					<SetVariable Target="bObjectOrEntryRequiredLevel">1</SetVariable>
					<WriteLine Id="40" Param0="u16ObjectIndexInclOffset" Level="Verbose">0x{0:X4}.4 'Max Pulse Duty Cycle' may be available</WriteLine>
				</TestStep>
				<TestStep Name="CheckIfSi4Exists">
					<GetObjectDescription SourceDictionary="odDeviceObjectdictionary" Index="u16ObjectIndexInclOffset" SubIndex="4">
						<Type>u16DataType</Type>
					</GetObjectDescription>
					<GotoOnFailure>HandleNotExistingSi4</GotoOnFailure>
				</TestStep>
				<TestStep>
					<Compare>
						<NotEqual>
							<Value1>u16DataType</Value1>
							<Value2>0</Value2>
							<GotoStep>CallSi4CheckEntryDescription</GotoStep>
						</NotEqual>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="41" Param0="u16ObjectIndexInclOffset" Level="Verbose">The entry 0x{0:X4}.4 is defined as a padding entry.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>EndSi4</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="HandleNotExistingSi4">
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="42" Param0="u16ObjectIndexInclOffset" Level="Output">The entry 0x{0:X4}.4 does not exists.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>EndSi4</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CallSi4CheckEntryDescription">
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"offline"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>4</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>"Max Pulse Duty Cycle"</Parameter>
						<Parameter>8</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>null</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>00000000</Parameter>
						<Parameter>0000C842</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>32</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>true</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="EndSi4"></TestStep>
				<TestStep Name="CheckReservedEntryRange_5_to_255">
					<Description Id="43" Level="Output">Start check reserved entry range 5 to 255</Description>
					<CallTestFunction Name="CheckReservedEntryRange">
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>5</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>odDeviceObjectdictionary</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="ProfileLoopEnd">
					<Compare>
						<Equal>
							<Value1>bAtLeastOneModuleMatch</Value1>
							<Value2>false</Value2>
							<GotoStep>HandleAbortTestCaseOnFirstError</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="HandleAbortTestCaseOnFirstError">
					<Compare>
						<Equal>
							<Value1>bAbortTestCaseOnFirstError</Value1>
							<Value2>false</Value2>
							<GotoStep>ProfileLoopIncrement</GotoStep>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>strResult</Value1>
							<Value2>EmptyString</Value2>
							<GotoStep>ProfileLoopIncrement</GotoStep>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="44" Level="Output">Object verification for all following modules abort because an error was already detected for the current module.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>END</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="ProfileLoopIncrement">
					<SetVariable Target="u32ProfileCounter">u32ProfileCounter + 1</SetVariable>
					<Compare>
						<Greater>
							<Value1>u32CurrentProfilesLength</Value1>
							<Value2>u32ProfileCounter</Value2>
							<GotoStep>ProfileLoopStart</GotoStep>
						</Greater>
					</Compare>
				</TestStep>
				<TestStep Name="END">
					<Compare>
						<NotEqual>
							<Value1>bAtLeastOneModuleMatch</Value1>
							<Value2>true</Value2>
							<SkipCase Id="45">SKIP TEST(no module/channel supports the current profile)</SkipCase>
						</NotEqual>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bDEBUG</Value1>
							<Value2>true</Value2>
							<WriteLine Id="46" Param0="strResult" Level="Verbose">DEBUG | Result : '{0}'.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>strResult</Value1>
							<Value2>EmptyString</Value2>
							<ReturnSuccess Id="47">Test succeed</ReturnSuccess>
						</Equal>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>strResult</Value1>
							<Value2>EmptyString</Value2>
							<RaiseError Id="48"></RaiseError>
						</NotEqual>
					</Compare>
				</TestStep>
			</TestCase>
			<TestCase Name="online | 0x9002 (Pulse Rating)" CaseId="6">
				<Description>
					<PreCondition>- The device profile is 5003
- The module profile is 2011
- The submodule profile is 0</PreCondition>
					<Action>- Iterate over all online defined modules/channels and if the PreCondition matches the following operations are done:
- Get the online description of object 0x9002(+module specific offset) 'Pulse Rating' and all entries
 Check:
    (Name)
    BitSize
    DataType
    Rx / Tx mappable
    Default Data
    MinData
    Flags       </Action>
					<PostCondition>Error if
- mandatory object / entry is not defined
- an optional object exists and the entries are invalid
- Object / entry description does not match with the specification</PostCondition>
					<ProposalForSolution>- Define the missing objects
- correct object / entry description</ProposalForSolution>
					<References>
						<Reference Specification="ETG.5003.2011"></Reference>
					</References>
					<Mandatory>true</Mandatory>
				</Description>
				<TestStep Name="InitResult">
					<SetVariable Target="strResult">EmptyString</SetVariable>
				</TestStep>
				<TestStep Name="CheckIfOdAvailable">
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Mailbox</Value1>
							<Value2>false</Value2>
							<SkipCase Id="1">DuT does not support mailbox.</SkipCase>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Mailbox.CoE</Value1>
							<Value2>false</Value2>
							<SkipCase Id="2">DuT does not support CoE.</SkipCase>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Mailbox.CoE.SdoInfo</Value1>
							<Value2>false</Value2>
							<SkipCase Id="3">DuT does not support SDO Info.</SkipCase>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="InitAtLeastOneProfileMatch">
					<SetVariable Target="bAtLeastOneModuleMatch">false</SetVariable>
				</TestStep>
				<TestStep Name="GetCurrentProfileList">
					<SizeOf UInt32Var="u32Tmp">arrOnlineProfiles</SizeOf>
					<Compare>
						<Equal>
							<Value1>u32Tmp</Value1>
							<Value2>0</Value2>
							<CallTestFunction Name="GetCurrentProfileList">
								<Parameter>"online"</Parameter>
								<Parameter>"SafeOP"</Parameter>
								<OutParameter>arrOnlineProfiles</OutParameter>
							</CallTestFunction>
						</Equal>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>u32Tmp</Value1>
							<Value2>0</Value2>
							<WriteLine Id="4" Param0="arrOnlineProfiles" Level="Verbose">Use previously created profile list ({0})</WriteLine>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep>
					<SizeOf UInt32Var="u32Tmp">arrOnlineProfiles</SizeOf>
				</TestStep>
				<TestStep>
					<InitArray TargetArray="arrCurrentProfiles" Length="u32Tmp"></InitArray>
				</TestStep>
				<TestStep>
					<CopyArray>
						<SourceArray>arrOnlineProfiles</SourceArray>
						<DestinationArray>arrCurrentProfiles</DestinationArray>
						<Length>u32Tmp</Length>
					</CopyArray>
				</TestStep>
				<TestStep Name="InitProfileLoopCounter">
					<SetVariable Target="u32ProfileCounter">0</SetVariable>
				</TestStep>
				<TestStep Name="GetProfileArrayLength">
					<SizeOf UInt32Var="u32CurrentProfilesLength">arrCurrentProfiles</SizeOf>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="5" Param0="u32CurrentProfilesLength" Level="Verbose">'{0}' Profile(s) defined online.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>u32CurrentProfilesLength</Value1>
							<Value2>0</Value2>
							<SkipCase Id="6">Skip case | no profile defined.</SkipCase>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="ProfileLoopStart">
					<GetArrayItem SourceArray="arrCurrentProfiles" Target="strTmpString" Index="u32ProfileCounter"></GetArrayItem>
				</TestStep>
				<TestStep Name="CheckProfileInformationString">
					<Compare>
						<Equal>
							<Value1>strTmpString</Value1>
							<Value2>null</Value2>
							<RaiseError Id="7" Param0="u32ProfileCounter">Profile Info element [{0}] is null.</RaiseError>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>strTmpString</Value1>
							<Value2>EmptyString</Value2>
							<RaiseError Id="8" Param0="u32ProfileCounter">Profile Info element [{0}] is an empty string.</RaiseError>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="GetDeviceProfile">
					<CallTestFunction Name="GetDeviceProfile">
						<Parameter>strTmpString</Parameter>
						<OutParameter>uint16CurDeviceProfile</OutParameter>
					</CallTestFunction>
				</TestStep>
				<TestStep Name="GetModuleProfile">
					<CallTestFunction Name="GetModuleProfile">
						<Parameter>strTmpString</Parameter>
						<OutParameter>uint16CurModuleProfile</OutParameter>
					</CallTestFunction>
				</TestStep>
				<TestStep Name="GetSubModuleProfile">
					<CallTestFunction Name="GetSubModuleProfile">
						<Parameter>strTmpString</Parameter>
						<OutParameter>uint16CurSubModuleProfile</OutParameter>
					</CallTestFunction>
				</TestStep>
				<TestStep Name="DumpProfileInfo">
					<Description Id="9" Param0="uint16CurDeviceProfile" Param1="uint16CurModuleProfile" Param2="uint16CurSubModuleProfile" Param3="u32ProfileCounter" Level="Output">Module[{3}] : DeviceProfile '{0}' ; ModuleProfile '{1}' ; SubModuleProfile '{2}'</Description>
					<Compare>
						<Equal>
							<Value1>bIgnoreProfileID</Value1>
							<Value2>true</Value2>
							<GotoStep>IndicateThatAtleastOneModuleMatch</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CompareDeviceProfile">
					<Compare>
						<NotEqual>
							<Value1>uint16CurDeviceProfile</Value1>
							<Value2>5003</Value2>
							<WriteLine Id="10" Param0="uint16CurDeviceProfile" Level="Output">Skip Profile  (Test Device Profile '5003' != Cur Device Profile '{0}')</WriteLine>
						</NotEqual>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>uint16CurDeviceProfile</Value1>
							<Value2>5003</Value2>
							<GotoStep>ProfileLoopEnd</GotoStep>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep Name="CompareModuleProfile">
					<Compare>
						<NotEqual>
							<Value1>uint16CurModuleProfile</Value1>
							<Value2>2011</Value2>
							<WriteLine Id="11" Param0="uint16CurModuleProfile" Level="Output">Skip Profile  (Test Module Profile '2011' != Cur Module Profile '{0}')</WriteLine>
						</NotEqual>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>uint16CurModuleProfile</Value1>
							<Value2>2011</Value2>
							<GotoStep>ProfileLoopEnd</GotoStep>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep Name="CompareSubModuleProfile">
					<Compare>
						<NotEqual>
							<Value1>uint16CurSubModuleProfile</Value1>
							<Value2>0</Value2>
							<WriteLine Id="12" Param0="uint16CurSubModuleProfile" Level="Output">Skip Profile  (Test SubModule Profile '0' != Cur SubModule Profile '{0}')</WriteLine>
						</NotEqual>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>uint16CurSubModuleProfile</Value1>
							<Value2>0</Value2>
							<GotoStep>ProfileLoopEnd</GotoStep>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep Name="IndicateThatAtleastOneModuleMatch">
					<SetVariable Target="bAtLeastOneModuleMatch">true</SetVariable>
				</TestStep>
				<TestStep Name="GetObjectIndexInclOffset">
					<SetVariable Target="u16ObjectIndexInclOffset">#x9002 + (u32ProfileCounter * #x10)</SetVariable>
					<WriteLine Id="13" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : ObjectIndex '0x{0:X}'</WriteLine>
				</TestStep>
				<TestStep Name="LoadDeviceObjectDictionary">
					<Description Id="14" Level="Verbose">Load 'online' object dictionary for testing.</Description>
					<GetObjectDictionary Target="odDeviceObjectdictionary">
						<DictionaryType>Online</DictionaryType>
					</GetObjectDictionary>
					<RaiseErrorOnFailure Id="15">VerifyObject : failed to load online object dictionary.</RaiseErrorOnFailure>
				</TestStep>
				<TestStep Name="SetObjectRequiredLevel">
					<SetVariable Target="bObjectOrEntryRequiredLevel">1</SetVariable>
					<WriteLine Id="16" Param0="u16ObjectIndexInclOffset" Level="Verbose">0x{0:X4} 'Pulse Rating' may be available</WriteLine>
				</TestStep>
				<TestStep Name="CheckIfObjectExists">
					<GetObjectDescription SourceDictionary="odDeviceObjectdictionary" Index="u16ObjectIndexInclOffset" SubIndex="-1"></GetObjectDescription>
					<GotoOnSuccess>CallCheckObjectDescription</GotoOnSuccess>
				</TestStep>
				<TestStep Name="HandleNotExistingObject">
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>2</Value2>
							<WriteLine Id="17" Param0="u16ObjectIndexInclOffset" Level="Warning">The object 0x{0:X4} 'Pulse Rating' does not exists.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>1</Value2>
							<WriteLine Id="18" Param0="u16ObjectIndexInclOffset" Level="Output">The object 0x{0:X4} 'Pulse Rating' does not exists.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>ProfileLoopEnd</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CallCheckObjectDescription">
					<Description Id="19" Param0="u16ObjectIndexInclOffset" Level="Output">Verify the object description 0x{0:X4} 'Pulse Rating'.</Description>
					<CallTestFunction Name="CheckObjectDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"online"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>"Pulse Rating"</Parameter>
						<Parameter>null</Parameter>
						<Parameter>9</Parameter>
						<Parameter>-1</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<GotoStep>ProfileLoopEnd</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="InitEntryBittOffset">
					<SetVariable Target="i32CurrentBitOffset">0</SetVariable>
				</TestStep>
				<TestStep Name="StartSi0">
					<Description Id="20" Level="Output">Start validate SubIndex0</Description>
					<WriteLine Id="21" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : Subindex '0x{0:X}.0'</WriteLine>
				</TestStep>
				<TestStep Name="CallSi0CheckEntryDescription">
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"online"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>0</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>null</Parameter>
						<Parameter>5</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>null</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>null</Parameter>
						<Parameter>null</Parameter>
						<Parameter>null</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>8</Parameter>
						<Parameter>i32CurrentBitOffset</Parameter>
						<Parameter>true</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="EndSi0">
					<SetVariable Target="i32CurrentBitOffset">16</SetVariable>
				</TestStep>
				<TestStep Name="StartSi1">
					<Description Id="22" Level="Output">Start validate SubIndex1</Description>
					<WriteLine Id="23" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : Subindex '0x{0:X}.1'</WriteLine>
				</TestStep>
				<TestStep Name="SetSi1RequiredLevel">
					<SetVariable Target="bObjectOrEntryRequiredLevel">1</SetVariable>
					<WriteLine Id="24" Param0="u16ObjectIndexInclOffset" Level="Verbose">0x{0:X4}.1 'Min Pulse Frequency' may be available</WriteLine>
				</TestStep>
				<TestStep Name="CheckIfSi1Exists">
					<GetObjectDescription SourceDictionary="odDeviceObjectdictionary" Index="u16ObjectIndexInclOffset" SubIndex="1">
						<Type>u16DataType</Type>
					</GetObjectDescription>
					<GotoOnFailure>HandleNotExistingSi1</GotoOnFailure>
				</TestStep>
				<TestStep>
					<Compare>
						<NotEqual>
							<Value1>u16DataType</Value1>
							<Value2>0</Value2>
							<GotoStep>CallSi1CheckEntryDescription</GotoStep>
						</NotEqual>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="25" Param0="u16ObjectIndexInclOffset" Level="Verbose">The entry 0x{0:X4}.1 is defined as a padding entry.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>EndSi1</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="HandleNotExistingSi1">
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="26" Param0="u16ObjectIndexInclOffset" Level="Output">The entry 0x{0:X4}.1 does not exists.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>EndSi1</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CallSi1CheckEntryDescription">
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"online"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>1</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>"Min Pulse Frequency"</Parameter>
						<Parameter>8</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>null</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>32</Parameter>
						<Parameter>i32CurrentBitOffset</Parameter>
						<Parameter>true</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="EndSi1">
					<SetVariable Target="i32CurrentBitOffset">-1</SetVariable>
				</TestStep>
				<TestStep Name="StartSi2">
					<Description Id="27" Level="Output">Start validate SubIndex2</Description>
					<WriteLine Id="28" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : Subindex '0x{0:X}.2'</WriteLine>
				</TestStep>
				<TestStep Name="SetSi2RequiredLevel">
					<SetVariable Target="bObjectOrEntryRequiredLevel">1</SetVariable>
					<WriteLine Id="29" Param0="u16ObjectIndexInclOffset" Level="Verbose">0x{0:X4}.2 'Max Pulse Frequency' may be available</WriteLine>
				</TestStep>
				<TestStep Name="CheckIfSi2Exists">
					<GetObjectDescription SourceDictionary="odDeviceObjectdictionary" Index="u16ObjectIndexInclOffset" SubIndex="2">
						<Type>u16DataType</Type>
					</GetObjectDescription>
					<GotoOnFailure>HandleNotExistingSi2</GotoOnFailure>
				</TestStep>
				<TestStep>
					<Compare>
						<NotEqual>
							<Value1>u16DataType</Value1>
							<Value2>0</Value2>
							<GotoStep>CallSi2CheckEntryDescription</GotoStep>
						</NotEqual>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="30" Param0="u16ObjectIndexInclOffset" Level="Verbose">The entry 0x{0:X4}.2 is defined as a padding entry.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>EndSi2</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="HandleNotExistingSi2">
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="31" Param0="u16ObjectIndexInclOffset" Level="Output">The entry 0x{0:X4}.2 does not exists.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>EndSi2</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CallSi2CheckEntryDescription">
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"online"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>2</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>"Max Pulse Frequency"</Parameter>
						<Parameter>8</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>null</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>32</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>true</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="EndSi2"></TestStep>
				<TestStep Name="StartSi3">
					<Description Id="32" Level="Output">Start validate SubIndex3</Description>
					<WriteLine Id="33" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : Subindex '0x{0:X}.3'</WriteLine>
				</TestStep>
				<TestStep Name="SetSi3RequiredLevel">
					<SetVariable Target="bObjectOrEntryRequiredLevel">1</SetVariable>
					<WriteLine Id="34" Param0="u16ObjectIndexInclOffset" Level="Verbose">0x{0:X4}.3 'Min Pulse Duty Cycle' may be available</WriteLine>
				</TestStep>
				<TestStep Name="CheckIfSi3Exists">
					<GetObjectDescription SourceDictionary="odDeviceObjectdictionary" Index="u16ObjectIndexInclOffset" SubIndex="3">
						<Type>u16DataType</Type>
					</GetObjectDescription>
					<GotoOnFailure>HandleNotExistingSi3</GotoOnFailure>
				</TestStep>
				<TestStep>
					<Compare>
						<NotEqual>
							<Value1>u16DataType</Value1>
							<Value2>0</Value2>
							<GotoStep>CallSi3CheckEntryDescription</GotoStep>
						</NotEqual>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="35" Param0="u16ObjectIndexInclOffset" Level="Verbose">The entry 0x{0:X4}.3 is defined as a padding entry.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>EndSi3</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="HandleNotExistingSi3">
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="36" Param0="u16ObjectIndexInclOffset" Level="Output">The entry 0x{0:X4}.3 does not exists.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>EndSi3</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CallSi3CheckEntryDescription">
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"online"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>3</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>"Min Pulse Duty Cycle"</Parameter>
						<Parameter>8</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>null</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>00000000</Parameter>
						<Parameter>0000C842</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>32</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>true</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="EndSi3"></TestStep>
				<TestStep Name="StartSi4">
					<Description Id="37" Level="Output">Start validate SubIndex4</Description>
					<WriteLine Id="38" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : Subindex '0x{0:X}.4'</WriteLine>
				</TestStep>
				<TestStep Name="SetSi4RequiredLevel">
					<SetVariable Target="bObjectOrEntryRequiredLevel">1</SetVariable>
					<WriteLine Id="39" Param0="u16ObjectIndexInclOffset" Level="Verbose">0x{0:X4}.4 'Max Pulse Duty Cycle' may be available</WriteLine>
				</TestStep>
				<TestStep Name="CheckIfSi4Exists">
					<GetObjectDescription SourceDictionary="odDeviceObjectdictionary" Index="u16ObjectIndexInclOffset" SubIndex="4">
						<Type>u16DataType</Type>
					</GetObjectDescription>
					<GotoOnFailure>HandleNotExistingSi4</GotoOnFailure>
				</TestStep>
				<TestStep>
					<Compare>
						<NotEqual>
							<Value1>u16DataType</Value1>
							<Value2>0</Value2>
							<GotoStep>CallSi4CheckEntryDescription</GotoStep>
						</NotEqual>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="40" Param0="u16ObjectIndexInclOffset" Level="Verbose">The entry 0x{0:X4}.4 is defined as a padding entry.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>EndSi4</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="HandleNotExistingSi4">
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="41" Param0="u16ObjectIndexInclOffset" Level="Output">The entry 0x{0:X4}.4 does not exists.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>EndSi4</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CallSi4CheckEntryDescription">
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"online"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>4</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>"Max Pulse Duty Cycle"</Parameter>
						<Parameter>8</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>null</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>00000000</Parameter>
						<Parameter>0000C842</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>32</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>true</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="EndSi4"></TestStep>
				<TestStep Name="CheckReservedEntryRange_5_to_255">
					<Description Id="42" Level="Output">Start check reserved entry range 5 to 255</Description>
					<CallTestFunction Name="CheckReservedEntryRange">
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>5</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>odDeviceObjectdictionary</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="ProfileLoopEnd">
					<Compare>
						<Equal>
							<Value1>bAtLeastOneModuleMatch</Value1>
							<Value2>false</Value2>
							<GotoStep>HandleAbortTestCaseOnFirstError</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="HandleAbortTestCaseOnFirstError">
					<Compare>
						<Equal>
							<Value1>bAbortTestCaseOnFirstError</Value1>
							<Value2>false</Value2>
							<GotoStep>ProfileLoopIncrement</GotoStep>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>strResult</Value1>
							<Value2>EmptyString</Value2>
							<GotoStep>ProfileLoopIncrement</GotoStep>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="43" Level="Output">Object verification for all following modules abort because an error was already detected for the current module.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>END</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="ProfileLoopIncrement">
					<SetVariable Target="u32ProfileCounter">u32ProfileCounter + 1</SetVariable>
					<Compare>
						<Greater>
							<Value1>u32CurrentProfilesLength</Value1>
							<Value2>u32ProfileCounter</Value2>
							<GotoStep>ProfileLoopStart</GotoStep>
						</Greater>
					</Compare>
				</TestStep>
				<TestStep Name="END">
					<Compare>
						<NotEqual>
							<Value1>bAtLeastOneModuleMatch</Value1>
							<Value2>true</Value2>
							<SkipCase Id="44">SKIP TEST(no module/channel supports the current profile)</SkipCase>
						</NotEqual>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bDEBUG</Value1>
							<Value2>true</Value2>
							<WriteLine Id="45" Param0="strResult" Level="Verbose">DEBUG | Result : '{0}'.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>strResult</Value1>
							<Value2>EmptyString</Value2>
							<ReturnSuccess Id="46">Test succeed</ReturnSuccess>
						</Equal>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>strResult</Value1>
							<Value2>EmptyString</Value2>
							<RaiseError Id="47"></RaiseError>
						</NotEqual>
					</Compare>
				</TestStep>
			</TestCase>
			<TestCase Name="offline | 0x9003 (Device Temperatures)" CaseId="7">
				<Description>
					<PreCondition>- The device profile is 5003
- The module profile is 2011
- The submodule profile is 0</PreCondition>
					<Action>- Iterate over all offline defined modules/channels and if the PreCondition matches the following operations are done:
- Get the offline description of object 0x9003(+module specific offset) 'Device Temperatures' and all entries
 Check:
    (Name)
    BitSize
    DataType
    Rx / Tx mappable
    Default Data
    MinData
    Flags       </Action>
					<PostCondition>Error if
- mandatory object / entry is not defined
- an optional object exists and the entries are invalid
- Object / entry description does not match with the specification</PostCondition>
					<ProposalForSolution>- Define the missing objects
- correct object / entry description</ProposalForSolution>
					<References>
						<Reference Specification="ETG.5003.2011"></Reference>
					</References>
					<Mandatory>true</Mandatory>
				</Description>
				<TestStep Name="InitResult">
					<SetVariable Target="strResult">EmptyString</SetVariable>
				</TestStep>
				<TestStep Name="CheckIfOdAvailable">
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Mailbox</Value1>
							<Value2>false</Value2>
							<SkipCase Id="1">DuT does not support mailbox.</SkipCase>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Mailbox.CoE</Value1>
							<Value2>false</Value2>
							<SkipCase Id="2">DuT does not support CoE.</SkipCase>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep>
					<GetObjectDictionary Target="odDeviceObjectdictionary">
						<DictionaryType>Offline</DictionaryType>
					</GetObjectDictionary>
					<SkipOnFailure Id="3">No offline object dictionary defined.</SkipOnFailure>
				</TestStep>
				<TestStep>
					<GetObjectList Count="u32Tmp" Target="odDeviceObjectdictionaryList" SourceDict="odDeviceObjectdictionary"></GetObjectList>
					<Compare>
						<Equal>
							<Value1>u32Tmp</Value1>
							<Value2>0</Value2>
							<SkipCase Id="4">No offline object dictionary defined.</SkipCase>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="InitAtLeastOneProfileMatch">
					<SetVariable Target="bAtLeastOneModuleMatch">false</SetVariable>
				</TestStep>
				<TestStep Name="GetCurrentProfileList">
					<SizeOf UInt32Var="u32Tmp">arrOfflineProfiles</SizeOf>
					<Compare>
						<Equal>
							<Value1>u32Tmp</Value1>
							<Value2>0</Value2>
							<CallTestFunction Name="GetCurrentProfileList">
								<Parameter>"offline"</Parameter>
								<Parameter>"SafeOP"</Parameter>
								<OutParameter>arrOfflineProfiles</OutParameter>
							</CallTestFunction>
						</Equal>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>u32Tmp</Value1>
							<Value2>0</Value2>
							<WriteLine Id="5" Param0="arrOfflineProfiles" Level="Verbose">Use previously created profile list ({0})</WriteLine>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep>
					<SizeOf UInt32Var="u32Tmp">arrOfflineProfiles</SizeOf>
				</TestStep>
				<TestStep>
					<InitArray TargetArray="arrCurrentProfiles" Length="u32Tmp"></InitArray>
				</TestStep>
				<TestStep>
					<CopyArray>
						<SourceArray>arrOfflineProfiles</SourceArray>
						<DestinationArray>arrCurrentProfiles</DestinationArray>
						<Length>u32Tmp</Length>
					</CopyArray>
				</TestStep>
				<TestStep Name="InitProfileLoopCounter">
					<SetVariable Target="u32ProfileCounter">0</SetVariable>
				</TestStep>
				<TestStep Name="GetProfileArrayLength">
					<SizeOf UInt32Var="u32CurrentProfilesLength">arrCurrentProfiles</SizeOf>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="6" Param0="u32CurrentProfilesLength" Level="Verbose">'{0}' Profile(s) defined offline.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>u32CurrentProfilesLength</Value1>
							<Value2>0</Value2>
							<SkipCase Id="7">Skip case | no profile defined.</SkipCase>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="ProfileLoopStart">
					<GetArrayItem SourceArray="arrCurrentProfiles" Target="strTmpString" Index="u32ProfileCounter"></GetArrayItem>
				</TestStep>
				<TestStep Name="CheckProfileInformationString">
					<Compare>
						<Equal>
							<Value1>strTmpString</Value1>
							<Value2>null</Value2>
							<RaiseError Id="8" Param0="u32ProfileCounter">Profile Info element [{0}] is null.</RaiseError>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>strTmpString</Value1>
							<Value2>EmptyString</Value2>
							<RaiseError Id="9" Param0="u32ProfileCounter">Profile Info element [{0}] is an empty string.</RaiseError>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="GetDeviceProfile">
					<CallTestFunction Name="GetDeviceProfile">
						<Parameter>strTmpString</Parameter>
						<OutParameter>uint16CurDeviceProfile</OutParameter>
					</CallTestFunction>
				</TestStep>
				<TestStep Name="GetModuleProfile">
					<CallTestFunction Name="GetModuleProfile">
						<Parameter>strTmpString</Parameter>
						<OutParameter>uint16CurModuleProfile</OutParameter>
					</CallTestFunction>
				</TestStep>
				<TestStep Name="GetSubModuleProfile">
					<CallTestFunction Name="GetSubModuleProfile">
						<Parameter>strTmpString</Parameter>
						<OutParameter>uint16CurSubModuleProfile</OutParameter>
					</CallTestFunction>
				</TestStep>
				<TestStep Name="DumpProfileInfo">
					<Description Id="10" Param0="uint16CurDeviceProfile" Param1="uint16CurModuleProfile" Param2="uint16CurSubModuleProfile" Param3="u32ProfileCounter" Level="Output">Module[{3}] : DeviceProfile '{0}' ; ModuleProfile '{1}' ; SubModuleProfile '{2}'</Description>
					<Compare>
						<Equal>
							<Value1>bIgnoreProfileID</Value1>
							<Value2>true</Value2>
							<GotoStep>IndicateThatAtleastOneModuleMatch</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CompareDeviceProfile">
					<Compare>
						<NotEqual>
							<Value1>uint16CurDeviceProfile</Value1>
							<Value2>5003</Value2>
							<WriteLine Id="11" Param0="uint16CurDeviceProfile" Level="Output">Skip Profile  (Test Device Profile '5003' != Cur Device Profile '{0}')</WriteLine>
						</NotEqual>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>uint16CurDeviceProfile</Value1>
							<Value2>5003</Value2>
							<GotoStep>ProfileLoopEnd</GotoStep>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep Name="CompareModuleProfile">
					<Compare>
						<NotEqual>
							<Value1>uint16CurModuleProfile</Value1>
							<Value2>2011</Value2>
							<WriteLine Id="12" Param0="uint16CurModuleProfile" Level="Output">Skip Profile  (Test Module Profile '2011' != Cur Module Profile '{0}')</WriteLine>
						</NotEqual>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>uint16CurModuleProfile</Value1>
							<Value2>2011</Value2>
							<GotoStep>ProfileLoopEnd</GotoStep>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep Name="CompareSubModuleProfile">
					<Compare>
						<NotEqual>
							<Value1>uint16CurSubModuleProfile</Value1>
							<Value2>0</Value2>
							<WriteLine Id="13" Param0="uint16CurSubModuleProfile" Level="Output">Skip Profile  (Test SubModule Profile '0' != Cur SubModule Profile '{0}')</WriteLine>
						</NotEqual>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>uint16CurSubModuleProfile</Value1>
							<Value2>0</Value2>
							<GotoStep>ProfileLoopEnd</GotoStep>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep Name="IndicateThatAtleastOneModuleMatch">
					<SetVariable Target="bAtLeastOneModuleMatch">true</SetVariable>
				</TestStep>
				<TestStep Name="GetObjectIndexInclOffset">
					<SetVariable Target="u16ObjectIndexInclOffset">#x9003 + (u32ProfileCounter * #x10)</SetVariable>
					<WriteLine Id="14" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : ObjectIndex '0x{0:X}'</WriteLine>
				</TestStep>
				<TestStep Name="LoadDeviceObjectDictionary">
					<Description Id="15" Level="Verbose">Load 'offline' object dictionary for testing.</Description>
					<GetObjectDictionary Target="odDeviceObjectdictionary">
						<DictionaryType>Offline</DictionaryType>
					</GetObjectDictionary>
					<RaiseErrorOnFailure Id="16">VerifyObject : failed to load offline object dictionary.</RaiseErrorOnFailure>
				</TestStep>
				<TestStep Name="SetObjectRequiredLevel">
					<SetVariable Target="bObjectOrEntryRequiredLevel">1</SetVariable>
					<WriteLine Id="17" Param0="u16ObjectIndexInclOffset" Level="Verbose">0x{0:X4} 'Device Temperatures' may be available</WriteLine>
				</TestStep>
				<TestStep Name="CheckIfObjectExists">
					<GetObjectDescription SourceDictionary="odDeviceObjectdictionary" Index="u16ObjectIndexInclOffset" SubIndex="-1"></GetObjectDescription>
					<GotoOnSuccess>CallCheckObjectDescription</GotoOnSuccess>
				</TestStep>
				<TestStep Name="HandleNotExistingObject">
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>2</Value2>
							<WriteLine Id="18" Param0="u16ObjectIndexInclOffset" Level="Warning">The object 0x{0:X4} 'Device Temperatures' does not exists.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>1</Value2>
							<WriteLine Id="19" Param0="u16ObjectIndexInclOffset" Level="Output">The object 0x{0:X4} 'Device Temperatures' does not exists.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>ProfileLoopEnd</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CallCheckObjectDescription">
					<Description Id="20" Param0="u16ObjectIndexInclOffset" Level="Output">Verify the object description 0x{0:X4} 'Device Temperatures'.</Description>
					<CallTestFunction Name="CheckObjectDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"offline"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>"Device Temperatures"</Parameter>
						<Parameter>null</Parameter>
						<Parameter>9</Parameter>
						<Parameter>-1</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<GotoStep>ProfileLoopEnd</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="InitEntryBittOffset">
					<SetVariable Target="i32CurrentBitOffset">0</SetVariable>
				</TestStep>
				<TestStep Name="StartSi0">
					<Description Id="21" Level="Output">Start validate SubIndex0</Description>
					<WriteLine Id="22" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : Subindex '0x{0:X}.0'</WriteLine>
				</TestStep>
				<TestStep Name="CallSi0CheckEntryDescription">
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"offline"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>0</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>null</Parameter>
						<Parameter>5</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>null</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>null</Parameter>
						<Parameter>null</Parameter>
						<Parameter>null</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>8</Parameter>
						<Parameter>i32CurrentBitOffset</Parameter>
						<Parameter>true</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="EndSi0"></TestStep>
				<TestStep Name="StartSi1">
					<Description Id="23" Level="Output">Start validate SubIndex1</Description>
					<WriteLine Id="24" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : Subindex '0x{0:X}.1'</WriteLine>
				</TestStep>
				<TestStep Name="SetSi1RequiredLevel">
					<SetVariable Target="bObjectOrEntryRequiredLevel">1</SetVariable>
					<WriteLine Id="25" Param0="u16ObjectIndexInclOffset" Level="Verbose">0x{0:X4}.1 'Device Temp. 1' may be available</WriteLine>
				</TestStep>
				<TestStep Name="CheckIfSi1Exists">
					<GetObjectDescription SourceDictionary="odDeviceObjectdictionary" Index="u16ObjectIndexInclOffset" SubIndex="1">
						<Type>u16DataType</Type>
					</GetObjectDescription>
					<GotoOnFailure>HandleNotExistingSi1</GotoOnFailure>
				</TestStep>
				<TestStep>
					<Compare>
						<NotEqual>
							<Value1>u16DataType</Value1>
							<Value2>0</Value2>
							<GotoStep>CallSi1CheckEntryDescription</GotoStep>
						</NotEqual>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="26" Param0="u16ObjectIndexInclOffset" Level="Verbose">The entry 0x{0:X4}.1 is defined as a padding entry.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>EndSi1</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="HandleNotExistingSi1">
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="27" Param0="u16ObjectIndexInclOffset" Level="Output">The entry 0x{0:X4}.1 does not exists.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>EndSi1</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CallSi1CheckEntryDescription">
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"offline"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>1</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>"Device Temp. 1"</Parameter>
						<Parameter>8</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>null</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>32</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>true</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="EndSi1"></TestStep>
				<TestStep Name="StartSi2">
					<Description Id="28" Level="Output">Start validate SubIndex2</Description>
					<WriteLine Id="29" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : Subindex '0x{0:X}.2'</WriteLine>
				</TestStep>
				<TestStep Name="SetSi2RequiredLevel">
					<SetVariable Target="bObjectOrEntryRequiredLevel">1</SetVariable>
					<WriteLine Id="30" Param0="u16ObjectIndexInclOffset" Level="Verbose">0x{0:X4}.2 'Device Temp. 2' may be available</WriteLine>
				</TestStep>
				<TestStep Name="CheckIfSi2Exists">
					<GetObjectDescription SourceDictionary="odDeviceObjectdictionary" Index="u16ObjectIndexInclOffset" SubIndex="2">
						<Type>u16DataType</Type>
					</GetObjectDescription>
					<GotoOnFailure>HandleNotExistingSi2</GotoOnFailure>
				</TestStep>
				<TestStep>
					<Compare>
						<NotEqual>
							<Value1>u16DataType</Value1>
							<Value2>0</Value2>
							<GotoStep>CallSi2CheckEntryDescription</GotoStep>
						</NotEqual>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="31" Param0="u16ObjectIndexInclOffset" Level="Verbose">The entry 0x{0:X4}.2 is defined as a padding entry.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>EndSi2</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="HandleNotExistingSi2">
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="32" Param0="u16ObjectIndexInclOffset" Level="Output">The entry 0x{0:X4}.2 does not exists.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>EndSi2</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CallSi2CheckEntryDescription">
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"offline"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>2</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>"Device Temp. 2"</Parameter>
						<Parameter>8</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>null</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>32</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>true</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="EndSi2"></TestStep>
				<TestStep Name="ProfileLoopEnd">
					<Compare>
						<Equal>
							<Value1>bAtLeastOneModuleMatch</Value1>
							<Value2>false</Value2>
							<GotoStep>HandleAbortTestCaseOnFirstError</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="HandleAbortTestCaseOnFirstError">
					<Compare>
						<Equal>
							<Value1>bAbortTestCaseOnFirstError</Value1>
							<Value2>false</Value2>
							<GotoStep>ProfileLoopIncrement</GotoStep>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>strResult</Value1>
							<Value2>EmptyString</Value2>
							<GotoStep>ProfileLoopIncrement</GotoStep>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="33" Level="Output">Object verification for all following modules abort because an error was already detected for the current module.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>END</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="ProfileLoopIncrement">
					<SetVariable Target="u32ProfileCounter">u32ProfileCounter + 1</SetVariable>
					<Compare>
						<Greater>
							<Value1>u32CurrentProfilesLength</Value1>
							<Value2>u32ProfileCounter</Value2>
							<GotoStep>ProfileLoopStart</GotoStep>
						</Greater>
					</Compare>
				</TestStep>
				<TestStep Name="END">
					<Compare>
						<NotEqual>
							<Value1>bAtLeastOneModuleMatch</Value1>
							<Value2>true</Value2>
							<SkipCase Id="34">SKIP TEST(no module/channel supports the current profile)</SkipCase>
						</NotEqual>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bDEBUG</Value1>
							<Value2>true</Value2>
							<WriteLine Id="35" Param0="strResult" Level="Verbose">DEBUG | Result : '{0}'.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>strResult</Value1>
							<Value2>EmptyString</Value2>
							<ReturnSuccess Id="36">Test succeed</ReturnSuccess>
						</Equal>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>strResult</Value1>
							<Value2>EmptyString</Value2>
							<RaiseError Id="37"></RaiseError>
						</NotEqual>
					</Compare>
				</TestStep>
			</TestCase>
			<TestCase Name="online | 0x9003 (Device Temperatures)" CaseId="8">
				<Description>
					<PreCondition>- The device profile is 5003
- The module profile is 2011
- The submodule profile is 0</PreCondition>
					<Action>- Iterate over all online defined modules/channels and if the PreCondition matches the following operations are done:
- Get the online description of object 0x9003(+module specific offset) 'Device Temperatures' and all entries
 Check:
    (Name)
    BitSize
    DataType
    Rx / Tx mappable
    Default Data
    MinData
    Flags       </Action>
					<PostCondition>Error if
- mandatory object / entry is not defined
- an optional object exists and the entries are invalid
- Object / entry description does not match with the specification</PostCondition>
					<ProposalForSolution>- Define the missing objects
- correct object / entry description</ProposalForSolution>
					<References>
						<Reference Specification="ETG.5003.2011"></Reference>
					</References>
					<Mandatory>true</Mandatory>
				</Description>
				<TestStep Name="InitResult">
					<SetVariable Target="strResult">EmptyString</SetVariable>
				</TestStep>
				<TestStep Name="CheckIfOdAvailable">
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Mailbox</Value1>
							<Value2>false</Value2>
							<SkipCase Id="1">DuT does not support mailbox.</SkipCase>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Mailbox.CoE</Value1>
							<Value2>false</Value2>
							<SkipCase Id="2">DuT does not support CoE.</SkipCase>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Mailbox.CoE.SdoInfo</Value1>
							<Value2>false</Value2>
							<SkipCase Id="3">DuT does not support SDO Info.</SkipCase>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="InitAtLeastOneProfileMatch">
					<SetVariable Target="bAtLeastOneModuleMatch">false</SetVariable>
				</TestStep>
				<TestStep Name="GetCurrentProfileList">
					<SizeOf UInt32Var="u32Tmp">arrOnlineProfiles</SizeOf>
					<Compare>
						<Equal>
							<Value1>u32Tmp</Value1>
							<Value2>0</Value2>
							<CallTestFunction Name="GetCurrentProfileList">
								<Parameter>"online"</Parameter>
								<Parameter>"SafeOP"</Parameter>
								<OutParameter>arrOnlineProfiles</OutParameter>
							</CallTestFunction>
						</Equal>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>u32Tmp</Value1>
							<Value2>0</Value2>
							<WriteLine Id="4" Param0="arrOnlineProfiles" Level="Verbose">Use previously created profile list ({0})</WriteLine>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep>
					<SizeOf UInt32Var="u32Tmp">arrOnlineProfiles</SizeOf>
				</TestStep>
				<TestStep>
					<InitArray TargetArray="arrCurrentProfiles" Length="u32Tmp"></InitArray>
				</TestStep>
				<TestStep>
					<CopyArray>
						<SourceArray>arrOnlineProfiles</SourceArray>
						<DestinationArray>arrCurrentProfiles</DestinationArray>
						<Length>u32Tmp</Length>
					</CopyArray>
				</TestStep>
				<TestStep Name="InitProfileLoopCounter">
					<SetVariable Target="u32ProfileCounter">0</SetVariable>
				</TestStep>
				<TestStep Name="GetProfileArrayLength">
					<SizeOf UInt32Var="u32CurrentProfilesLength">arrCurrentProfiles</SizeOf>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="5" Param0="u32CurrentProfilesLength" Level="Verbose">'{0}' Profile(s) defined online.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>u32CurrentProfilesLength</Value1>
							<Value2>0</Value2>
							<SkipCase Id="6">Skip case | no profile defined.</SkipCase>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="ProfileLoopStart">
					<GetArrayItem SourceArray="arrCurrentProfiles" Target="strTmpString" Index="u32ProfileCounter"></GetArrayItem>
				</TestStep>
				<TestStep Name="CheckProfileInformationString">
					<Compare>
						<Equal>
							<Value1>strTmpString</Value1>
							<Value2>null</Value2>
							<RaiseError Id="7" Param0="u32ProfileCounter">Profile Info element [{0}] is null.</RaiseError>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>strTmpString</Value1>
							<Value2>EmptyString</Value2>
							<RaiseError Id="8" Param0="u32ProfileCounter">Profile Info element [{0}] is an empty string.</RaiseError>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="GetDeviceProfile">
					<CallTestFunction Name="GetDeviceProfile">
						<Parameter>strTmpString</Parameter>
						<OutParameter>uint16CurDeviceProfile</OutParameter>
					</CallTestFunction>
				</TestStep>
				<TestStep Name="GetModuleProfile">
					<CallTestFunction Name="GetModuleProfile">
						<Parameter>strTmpString</Parameter>
						<OutParameter>uint16CurModuleProfile</OutParameter>
					</CallTestFunction>
				</TestStep>
				<TestStep Name="GetSubModuleProfile">
					<CallTestFunction Name="GetSubModuleProfile">
						<Parameter>strTmpString</Parameter>
						<OutParameter>uint16CurSubModuleProfile</OutParameter>
					</CallTestFunction>
				</TestStep>
				<TestStep Name="DumpProfileInfo">
					<Description Id="9" Param0="uint16CurDeviceProfile" Param1="uint16CurModuleProfile" Param2="uint16CurSubModuleProfile" Param3="u32ProfileCounter" Level="Output">Module[{3}] : DeviceProfile '{0}' ; ModuleProfile '{1}' ; SubModuleProfile '{2}'</Description>
					<Compare>
						<Equal>
							<Value1>bIgnoreProfileID</Value1>
							<Value2>true</Value2>
							<GotoStep>IndicateThatAtleastOneModuleMatch</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CompareDeviceProfile">
					<Compare>
						<NotEqual>
							<Value1>uint16CurDeviceProfile</Value1>
							<Value2>5003</Value2>
							<WriteLine Id="10" Param0="uint16CurDeviceProfile" Level="Output">Skip Profile  (Test Device Profile '5003' != Cur Device Profile '{0}')</WriteLine>
						</NotEqual>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>uint16CurDeviceProfile</Value1>
							<Value2>5003</Value2>
							<GotoStep>ProfileLoopEnd</GotoStep>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep Name="CompareModuleProfile">
					<Compare>
						<NotEqual>
							<Value1>uint16CurModuleProfile</Value1>
							<Value2>2011</Value2>
							<WriteLine Id="11" Param0="uint16CurModuleProfile" Level="Output">Skip Profile  (Test Module Profile '2011' != Cur Module Profile '{0}')</WriteLine>
						</NotEqual>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>uint16CurModuleProfile</Value1>
							<Value2>2011</Value2>
							<GotoStep>ProfileLoopEnd</GotoStep>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep Name="CompareSubModuleProfile">
					<Compare>
						<NotEqual>
							<Value1>uint16CurSubModuleProfile</Value1>
							<Value2>0</Value2>
							<WriteLine Id="12" Param0="uint16CurSubModuleProfile" Level="Output">Skip Profile  (Test SubModule Profile '0' != Cur SubModule Profile '{0}')</WriteLine>
						</NotEqual>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>uint16CurSubModuleProfile</Value1>
							<Value2>0</Value2>
							<GotoStep>ProfileLoopEnd</GotoStep>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep Name="IndicateThatAtleastOneModuleMatch">
					<SetVariable Target="bAtLeastOneModuleMatch">true</SetVariable>
				</TestStep>
				<TestStep Name="GetObjectIndexInclOffset">
					<SetVariable Target="u16ObjectIndexInclOffset">#x9003 + (u32ProfileCounter * #x10)</SetVariable>
					<WriteLine Id="13" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : ObjectIndex '0x{0:X}'</WriteLine>
				</TestStep>
				<TestStep Name="LoadDeviceObjectDictionary">
					<Description Id="14" Level="Verbose">Load 'online' object dictionary for testing.</Description>
					<GetObjectDictionary Target="odDeviceObjectdictionary">
						<DictionaryType>Online</DictionaryType>
					</GetObjectDictionary>
					<RaiseErrorOnFailure Id="15">VerifyObject : failed to load online object dictionary.</RaiseErrorOnFailure>
				</TestStep>
				<TestStep Name="SetObjectRequiredLevel">
					<SetVariable Target="bObjectOrEntryRequiredLevel">1</SetVariable>
					<WriteLine Id="16" Param0="u16ObjectIndexInclOffset" Level="Verbose">0x{0:X4} 'Device Temperatures' may be available</WriteLine>
				</TestStep>
				<TestStep Name="CheckIfObjectExists">
					<GetObjectDescription SourceDictionary="odDeviceObjectdictionary" Index="u16ObjectIndexInclOffset" SubIndex="-1"></GetObjectDescription>
					<GotoOnSuccess>CallCheckObjectDescription</GotoOnSuccess>
				</TestStep>
				<TestStep Name="HandleNotExistingObject">
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>2</Value2>
							<WriteLine Id="17" Param0="u16ObjectIndexInclOffset" Level="Warning">The object 0x{0:X4} 'Device Temperatures' does not exists.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>1</Value2>
							<WriteLine Id="18" Param0="u16ObjectIndexInclOffset" Level="Output">The object 0x{0:X4} 'Device Temperatures' does not exists.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>ProfileLoopEnd</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CallCheckObjectDescription">
					<Description Id="19" Param0="u16ObjectIndexInclOffset" Level="Output">Verify the object description 0x{0:X4} 'Device Temperatures'.</Description>
					<CallTestFunction Name="CheckObjectDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"online"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>"Device Temperatures"</Parameter>
						<Parameter>null</Parameter>
						<Parameter>9</Parameter>
						<Parameter>-1</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<GotoStep>ProfileLoopEnd</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="InitEntryBittOffset">
					<SetVariable Target="i32CurrentBitOffset">0</SetVariable>
				</TestStep>
				<TestStep Name="StartSi0">
					<Description Id="20" Level="Output">Start validate SubIndex0</Description>
					<WriteLine Id="21" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : Subindex '0x{0:X}.0'</WriteLine>
				</TestStep>
				<TestStep Name="CallSi0CheckEntryDescription">
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"online"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>0</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>null</Parameter>
						<Parameter>5</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>null</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>null</Parameter>
						<Parameter>null</Parameter>
						<Parameter>null</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>8</Parameter>
						<Parameter>i32CurrentBitOffset</Parameter>
						<Parameter>true</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="EndSi0"></TestStep>
				<TestStep Name="StartSi1">
					<Description Id="22" Level="Output">Start validate SubIndex1</Description>
					<WriteLine Id="23" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : Subindex '0x{0:X}.1'</WriteLine>
				</TestStep>
				<TestStep Name="SetSi1RequiredLevel">
					<SetVariable Target="bObjectOrEntryRequiredLevel">1</SetVariable>
					<WriteLine Id="24" Param0="u16ObjectIndexInclOffset" Level="Verbose">0x{0:X4}.1 'Device Temp. 1' may be available</WriteLine>
				</TestStep>
				<TestStep Name="CheckIfSi1Exists">
					<GetObjectDescription SourceDictionary="odDeviceObjectdictionary" Index="u16ObjectIndexInclOffset" SubIndex="1">
						<Type>u16DataType</Type>
					</GetObjectDescription>
					<GotoOnFailure>HandleNotExistingSi1</GotoOnFailure>
				</TestStep>
				<TestStep>
					<Compare>
						<NotEqual>
							<Value1>u16DataType</Value1>
							<Value2>0</Value2>
							<GotoStep>CallSi1CheckEntryDescription</GotoStep>
						</NotEqual>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="25" Param0="u16ObjectIndexInclOffset" Level="Verbose">The entry 0x{0:X4}.1 is defined as a padding entry.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>EndSi1</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="HandleNotExistingSi1">
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="26" Param0="u16ObjectIndexInclOffset" Level="Output">The entry 0x{0:X4}.1 does not exists.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>EndSi1</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CallSi1CheckEntryDescription">
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"online"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>1</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>"Device Temp. 1"</Parameter>
						<Parameter>8</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>null</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>32</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>true</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="EndSi1"></TestStep>
				<TestStep Name="StartSi2">
					<Description Id="27" Level="Output">Start validate SubIndex2</Description>
					<WriteLine Id="28" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : Subindex '0x{0:X}.2'</WriteLine>
				</TestStep>
				<TestStep Name="SetSi2RequiredLevel">
					<SetVariable Target="bObjectOrEntryRequiredLevel">1</SetVariable>
					<WriteLine Id="29" Param0="u16ObjectIndexInclOffset" Level="Verbose">0x{0:X4}.2 'Device Temp. 2' may be available</WriteLine>
				</TestStep>
				<TestStep Name="CheckIfSi2Exists">
					<GetObjectDescription SourceDictionary="odDeviceObjectdictionary" Index="u16ObjectIndexInclOffset" SubIndex="2">
						<Type>u16DataType</Type>
					</GetObjectDescription>
					<GotoOnFailure>HandleNotExistingSi2</GotoOnFailure>
				</TestStep>
				<TestStep>
					<Compare>
						<NotEqual>
							<Value1>u16DataType</Value1>
							<Value2>0</Value2>
							<GotoStep>CallSi2CheckEntryDescription</GotoStep>
						</NotEqual>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="30" Param0="u16ObjectIndexInclOffset" Level="Verbose">The entry 0x{0:X4}.2 is defined as a padding entry.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>EndSi2</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="HandleNotExistingSi2">
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="31" Param0="u16ObjectIndexInclOffset" Level="Output">The entry 0x{0:X4}.2 does not exists.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>EndSi2</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CallSi2CheckEntryDescription">
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"online"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>2</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>"Device Temp. 2"</Parameter>
						<Parameter>8</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>null</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>32</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>true</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="EndSi2"></TestStep>
				<TestStep Name="ProfileLoopEnd">
					<Compare>
						<Equal>
							<Value1>bAtLeastOneModuleMatch</Value1>
							<Value2>false</Value2>
							<GotoStep>HandleAbortTestCaseOnFirstError</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="HandleAbortTestCaseOnFirstError">
					<Compare>
						<Equal>
							<Value1>bAbortTestCaseOnFirstError</Value1>
							<Value2>false</Value2>
							<GotoStep>ProfileLoopIncrement</GotoStep>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>strResult</Value1>
							<Value2>EmptyString</Value2>
							<GotoStep>ProfileLoopIncrement</GotoStep>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="32" Level="Output">Object verification for all following modules abort because an error was already detected for the current module.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>END</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="ProfileLoopIncrement">
					<SetVariable Target="u32ProfileCounter">u32ProfileCounter + 1</SetVariable>
					<Compare>
						<Greater>
							<Value1>u32CurrentProfilesLength</Value1>
							<Value2>u32ProfileCounter</Value2>
							<GotoStep>ProfileLoopStart</GotoStep>
						</Greater>
					</Compare>
				</TestStep>
				<TestStep Name="END">
					<Compare>
						<NotEqual>
							<Value1>bAtLeastOneModuleMatch</Value1>
							<Value2>true</Value2>
							<SkipCase Id="33">SKIP TEST(no module/channel supports the current profile)</SkipCase>
						</NotEqual>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bDEBUG</Value1>
							<Value2>true</Value2>
							<WriteLine Id="34" Param0="strResult" Level="Verbose">DEBUG | Result : '{0}'.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>strResult</Value1>
							<Value2>EmptyString</Value2>
							<ReturnSuccess Id="35">Test succeed</ReturnSuccess>
						</Equal>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>strResult</Value1>
							<Value2>EmptyString</Value2>
							<RaiseError Id="36"></RaiseError>
						</NotEqual>
					</Compare>
				</TestStep>
			</TestCase>
			<TestCase Name="offline | 0x9004 (Device Counters)" CaseId="9">
				<Description>
					<PreCondition>- The device profile is 5003
- The module profile is 2011
- The submodule profile is 0</PreCondition>
					<Action>- Iterate over all offline defined modules/channels and if the PreCondition matches the following operations are done:
- Get the offline description of object 0x9004(+module specific offset) 'Device Counters' and all entries
 Check:
    (Name)
    BitSize
    DataType
    Rx / Tx mappable
    Default Data
    MinData
    Flags       </Action>
					<PostCondition>Error if
- mandatory object / entry is not defined
- an optional object exists and the entries are invalid
- Object / entry description does not match with the specification</PostCondition>
					<ProposalForSolution>- Define the missing objects
- correct object / entry description</ProposalForSolution>
					<References>
						<Reference Specification="ETG.5003.2011"></Reference>
					</References>
					<Mandatory>true</Mandatory>
				</Description>
				<TestStep Name="InitResult">
					<SetVariable Target="strResult">EmptyString</SetVariable>
				</TestStep>
				<TestStep Name="CheckIfOdAvailable">
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Mailbox</Value1>
							<Value2>false</Value2>
							<SkipCase Id="1">DuT does not support mailbox.</SkipCase>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Mailbox.CoE</Value1>
							<Value2>false</Value2>
							<SkipCase Id="2">DuT does not support CoE.</SkipCase>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep>
					<GetObjectDictionary Target="odDeviceObjectdictionary">
						<DictionaryType>Offline</DictionaryType>
					</GetObjectDictionary>
					<SkipOnFailure Id="3">No offline object dictionary defined.</SkipOnFailure>
				</TestStep>
				<TestStep>
					<GetObjectList Count="u32Tmp" Target="odDeviceObjectdictionaryList" SourceDict="odDeviceObjectdictionary"></GetObjectList>
					<Compare>
						<Equal>
							<Value1>u32Tmp</Value1>
							<Value2>0</Value2>
							<SkipCase Id="4">No offline object dictionary defined.</SkipCase>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="InitAtLeastOneProfileMatch">
					<SetVariable Target="bAtLeastOneModuleMatch">false</SetVariable>
				</TestStep>
				<TestStep Name="GetCurrentProfileList">
					<SizeOf UInt32Var="u32Tmp">arrOfflineProfiles</SizeOf>
					<Compare>
						<Equal>
							<Value1>u32Tmp</Value1>
							<Value2>0</Value2>
							<CallTestFunction Name="GetCurrentProfileList">
								<Parameter>"offline"</Parameter>
								<Parameter>"SafeOP"</Parameter>
								<OutParameter>arrOfflineProfiles</OutParameter>
							</CallTestFunction>
						</Equal>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>u32Tmp</Value1>
							<Value2>0</Value2>
							<WriteLine Id="5" Param0="arrOfflineProfiles" Level="Verbose">Use previously created profile list ({0})</WriteLine>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep>
					<SizeOf UInt32Var="u32Tmp">arrOfflineProfiles</SizeOf>
				</TestStep>
				<TestStep>
					<InitArray TargetArray="arrCurrentProfiles" Length="u32Tmp"></InitArray>
				</TestStep>
				<TestStep>
					<CopyArray>
						<SourceArray>arrOfflineProfiles</SourceArray>
						<DestinationArray>arrCurrentProfiles</DestinationArray>
						<Length>u32Tmp</Length>
					</CopyArray>
				</TestStep>
				<TestStep Name="InitProfileLoopCounter">
					<SetVariable Target="u32ProfileCounter">0</SetVariable>
				</TestStep>
				<TestStep Name="GetProfileArrayLength">
					<SizeOf UInt32Var="u32CurrentProfilesLength">arrCurrentProfiles</SizeOf>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="6" Param0="u32CurrentProfilesLength" Level="Verbose">'{0}' Profile(s) defined offline.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>u32CurrentProfilesLength</Value1>
							<Value2>0</Value2>
							<SkipCase Id="7">Skip case | no profile defined.</SkipCase>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="ProfileLoopStart">
					<GetArrayItem SourceArray="arrCurrentProfiles" Target="strTmpString" Index="u32ProfileCounter"></GetArrayItem>
				</TestStep>
				<TestStep Name="CheckProfileInformationString">
					<Compare>
						<Equal>
							<Value1>strTmpString</Value1>
							<Value2>null</Value2>
							<RaiseError Id="8" Param0="u32ProfileCounter">Profile Info element [{0}] is null.</RaiseError>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>strTmpString</Value1>
							<Value2>EmptyString</Value2>
							<RaiseError Id="9" Param0="u32ProfileCounter">Profile Info element [{0}] is an empty string.</RaiseError>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="GetDeviceProfile">
					<CallTestFunction Name="GetDeviceProfile">
						<Parameter>strTmpString</Parameter>
						<OutParameter>uint16CurDeviceProfile</OutParameter>
					</CallTestFunction>
				</TestStep>
				<TestStep Name="GetModuleProfile">
					<CallTestFunction Name="GetModuleProfile">
						<Parameter>strTmpString</Parameter>
						<OutParameter>uint16CurModuleProfile</OutParameter>
					</CallTestFunction>
				</TestStep>
				<TestStep Name="GetSubModuleProfile">
					<CallTestFunction Name="GetSubModuleProfile">
						<Parameter>strTmpString</Parameter>
						<OutParameter>uint16CurSubModuleProfile</OutParameter>
					</CallTestFunction>
				</TestStep>
				<TestStep Name="DumpProfileInfo">
					<Description Id="10" Param0="uint16CurDeviceProfile" Param1="uint16CurModuleProfile" Param2="uint16CurSubModuleProfile" Param3="u32ProfileCounter" Level="Output">Module[{3}] : DeviceProfile '{0}' ; ModuleProfile '{1}' ; SubModuleProfile '{2}'</Description>
					<Compare>
						<Equal>
							<Value1>bIgnoreProfileID</Value1>
							<Value2>true</Value2>
							<GotoStep>IndicateThatAtleastOneModuleMatch</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CompareDeviceProfile">
					<Compare>
						<NotEqual>
							<Value1>uint16CurDeviceProfile</Value1>
							<Value2>5003</Value2>
							<WriteLine Id="11" Param0="uint16CurDeviceProfile" Level="Output">Skip Profile  (Test Device Profile '5003' != Cur Device Profile '{0}')</WriteLine>
						</NotEqual>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>uint16CurDeviceProfile</Value1>
							<Value2>5003</Value2>
							<GotoStep>ProfileLoopEnd</GotoStep>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep Name="CompareModuleProfile">
					<Compare>
						<NotEqual>
							<Value1>uint16CurModuleProfile</Value1>
							<Value2>2011</Value2>
							<WriteLine Id="12" Param0="uint16CurModuleProfile" Level="Output">Skip Profile  (Test Module Profile '2011' != Cur Module Profile '{0}')</WriteLine>
						</NotEqual>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>uint16CurModuleProfile</Value1>
							<Value2>2011</Value2>
							<GotoStep>ProfileLoopEnd</GotoStep>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep Name="CompareSubModuleProfile">
					<Compare>
						<NotEqual>
							<Value1>uint16CurSubModuleProfile</Value1>
							<Value2>0</Value2>
							<WriteLine Id="13" Param0="uint16CurSubModuleProfile" Level="Output">Skip Profile  (Test SubModule Profile '0' != Cur SubModule Profile '{0}')</WriteLine>
						</NotEqual>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>uint16CurSubModuleProfile</Value1>
							<Value2>0</Value2>
							<GotoStep>ProfileLoopEnd</GotoStep>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep Name="IndicateThatAtleastOneModuleMatch">
					<SetVariable Target="bAtLeastOneModuleMatch">true</SetVariable>
				</TestStep>
				<TestStep Name="GetObjectIndexInclOffset">
					<SetVariable Target="u16ObjectIndexInclOffset">#x9004 + (u32ProfileCounter * #x10)</SetVariable>
					<WriteLine Id="14" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : ObjectIndex '0x{0:X}'</WriteLine>
				</TestStep>
				<TestStep Name="LoadDeviceObjectDictionary">
					<Description Id="15" Level="Verbose">Load 'offline' object dictionary for testing.</Description>
					<GetObjectDictionary Target="odDeviceObjectdictionary">
						<DictionaryType>Offline</DictionaryType>
					</GetObjectDictionary>
					<RaiseErrorOnFailure Id="16">VerifyObject : failed to load offline object dictionary.</RaiseErrorOnFailure>
				</TestStep>
				<TestStep Name="SetObjectRequiredLevel">
					<SetVariable Target="bObjectOrEntryRequiredLevel">1</SetVariable>
					<WriteLine Id="17" Param0="u16ObjectIndexInclOffset" Level="Verbose">0x{0:X4} 'Device Counters' may be available</WriteLine>
				</TestStep>
				<TestStep Name="CheckIfObjectExists">
					<GetObjectDescription SourceDictionary="odDeviceObjectdictionary" Index="u16ObjectIndexInclOffset" SubIndex="-1"></GetObjectDescription>
					<GotoOnSuccess>CallCheckObjectDescription</GotoOnSuccess>
				</TestStep>
				<TestStep Name="HandleNotExistingObject">
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>2</Value2>
							<WriteLine Id="18" Param0="u16ObjectIndexInclOffset" Level="Warning">The object 0x{0:X4} 'Device Counters' does not exists.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>1</Value2>
							<WriteLine Id="19" Param0="u16ObjectIndexInclOffset" Level="Output">The object 0x{0:X4} 'Device Counters' does not exists.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>ProfileLoopEnd</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CallCheckObjectDescription">
					<Description Id="20" Param0="u16ObjectIndexInclOffset" Level="Output">Verify the object description 0x{0:X4} 'Device Counters'.</Description>
					<CallTestFunction Name="CheckObjectDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"offline"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>"Device Counters"</Parameter>
						<Parameter>null</Parameter>
						<Parameter>9</Parameter>
						<Parameter>-1</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<GotoStep>ProfileLoopEnd</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="InitEntryBittOffset">
					<SetVariable Target="i32CurrentBitOffset">0</SetVariable>
				</TestStep>
				<TestStep Name="StartSi0">
					<Description Id="21" Level="Output">Start validate SubIndex0</Description>
					<WriteLine Id="22" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : Subindex '0x{0:X}.0'</WriteLine>
				</TestStep>
				<TestStep Name="CallSi0CheckEntryDescription">
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"offline"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>0</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>null</Parameter>
						<Parameter>5</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>null</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>null</Parameter>
						<Parameter>null</Parameter>
						<Parameter>null</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>8</Parameter>
						<Parameter>i32CurrentBitOffset</Parameter>
						<Parameter>true</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="EndSi0">
					<SetVariable Target="i32CurrentBitOffset">16</SetVariable>
				</TestStep>
				<TestStep Name="StartSi1">
					<Description Id="23" Level="Output">Start validate SubIndex1</Description>
					<WriteLine Id="24" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : Subindex '0x{0:X}.1'</WriteLine>
				</TestStep>
				<TestStep Name="SetSi1RequiredLevel">
					<SetVariable Target="bObjectOrEntryRequiredLevel">1</SetVariable>
					<WriteLine Id="25" Param0="u16ObjectIndexInclOffset" Level="Verbose">0x{0:X4}.1 'Report Total RF ON time' may be available</WriteLine>
				</TestStep>
				<TestStep Name="CheckIfSi1Exists">
					<GetObjectDescription SourceDictionary="odDeviceObjectdictionary" Index="u16ObjectIndexInclOffset" SubIndex="1">
						<Type>u16DataType</Type>
					</GetObjectDescription>
					<GotoOnFailure>HandleNotExistingSi1</GotoOnFailure>
				</TestStep>
				<TestStep>
					<Compare>
						<NotEqual>
							<Value1>u16DataType</Value1>
							<Value2>0</Value2>
							<GotoStep>CallSi1CheckEntryDescription</GotoStep>
						</NotEqual>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="26" Param0="u16ObjectIndexInclOffset" Level="Verbose">The entry 0x{0:X4}.1 is defined as a padding entry.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>EndSi1</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="HandleNotExistingSi1">
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="27" Param0="u16ObjectIndexInclOffset" Level="Output">The entry 0x{0:X4}.1 does not exists.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>EndSi1</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CallSi1CheckEntryDescription">
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"offline"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>1</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>"Report Total RF ON time"</Parameter>
						<Parameter>7</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>null</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>32</Parameter>
						<Parameter>i32CurrentBitOffset</Parameter>
						<Parameter>true</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="EndSi1">
					<SetVariable Target="i32CurrentBitOffset">-1</SetVariable>
				</TestStep>
				<TestStep Name="StartSi2">
					<Description Id="28" Level="Output">Start validate SubIndex2</Description>
					<WriteLine Id="29" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : Subindex '0x{0:X}.2'</WriteLine>
				</TestStep>
				<TestStep Name="SetSi2RequiredLevel">
					<SetVariable Target="bObjectOrEntryRequiredLevel">1</SetVariable>
					<WriteLine Id="30" Param0="u16ObjectIndexInclOffset" Level="Verbose">0x{0:X4}.2 'Report Total Energy / Energy Counter' may be available</WriteLine>
				</TestStep>
				<TestStep Name="CheckIfSi2Exists">
					<GetObjectDescription SourceDictionary="odDeviceObjectdictionary" Index="u16ObjectIndexInclOffset" SubIndex="2">
						<Type>u16DataType</Type>
					</GetObjectDescription>
					<GotoOnFailure>HandleNotExistingSi2</GotoOnFailure>
				</TestStep>
				<TestStep>
					<Compare>
						<NotEqual>
							<Value1>u16DataType</Value1>
							<Value2>0</Value2>
							<GotoStep>CallSi2CheckEntryDescription</GotoStep>
						</NotEqual>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="31" Param0="u16ObjectIndexInclOffset" Level="Verbose">The entry 0x{0:X4}.2 is defined as a padding entry.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>EndSi2</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="HandleNotExistingSi2">
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="32" Param0="u16ObjectIndexInclOffset" Level="Output">The entry 0x{0:X4}.2 does not exists.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>EndSi2</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CallSi2CheckEntryDescription">
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"offline"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>2</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>"Report Total Energy / Energy Counter"</Parameter>
						<Parameter>7</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>null</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>32</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>true</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="EndSi2"></TestStep>
				<TestStep Name="StartSi3">
					<Description Id="33" Level="Output">Start validate SubIndex3</Description>
					<WriteLine Id="34" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : Subindex '0x{0:X}.3'</WriteLine>
				</TestStep>
				<TestStep Name="SetSi3RequiredLevel">
					<SetVariable Target="bObjectOrEntryRequiredLevel">1</SetVariable>
					<WriteLine Id="35" Param0="u16ObjectIndexInclOffset" Level="Verbose">0x{0:X4}.3 'Report RF ON events' may be available</WriteLine>
				</TestStep>
				<TestStep Name="CheckIfSi3Exists">
					<GetObjectDescription SourceDictionary="odDeviceObjectdictionary" Index="u16ObjectIndexInclOffset" SubIndex="3">
						<Type>u16DataType</Type>
					</GetObjectDescription>
					<GotoOnFailure>HandleNotExistingSi3</GotoOnFailure>
				</TestStep>
				<TestStep>
					<Compare>
						<NotEqual>
							<Value1>u16DataType</Value1>
							<Value2>0</Value2>
							<GotoStep>CallSi3CheckEntryDescription</GotoStep>
						</NotEqual>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="36" Param0="u16ObjectIndexInclOffset" Level="Verbose">The entry 0x{0:X4}.3 is defined as a padding entry.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>EndSi3</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="HandleNotExistingSi3">
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="37" Param0="u16ObjectIndexInclOffset" Level="Output">The entry 0x{0:X4}.3 does not exists.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>EndSi3</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CallSi3CheckEntryDescription">
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"offline"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>3</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>"Report RF ON events"</Parameter>
						<Parameter>7</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>null</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>32</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>true</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="EndSi3"></TestStep>
				<TestStep Name="StartSi4">
					<Description Id="38" Level="Output">Start validate SubIndex4</Description>
					<WriteLine Id="39" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : Subindex '0x{0:X}.4'</WriteLine>
				</TestStep>
				<TestStep Name="SetSi4RequiredLevel">
					<SetVariable Target="bObjectOrEntryRequiredLevel">1</SetVariable>
					<WriteLine Id="40" Param0="u16ObjectIndexInclOffset" Level="Verbose">0x{0:X4}.4 'Report OverTemp events' may be available</WriteLine>
				</TestStep>
				<TestStep Name="CheckIfSi4Exists">
					<GetObjectDescription SourceDictionary="odDeviceObjectdictionary" Index="u16ObjectIndexInclOffset" SubIndex="4">
						<Type>u16DataType</Type>
					</GetObjectDescription>
					<GotoOnFailure>HandleNotExistingSi4</GotoOnFailure>
				</TestStep>
				<TestStep>
					<Compare>
						<NotEqual>
							<Value1>u16DataType</Value1>
							<Value2>0</Value2>
							<GotoStep>CallSi4CheckEntryDescription</GotoStep>
						</NotEqual>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="41" Param0="u16ObjectIndexInclOffset" Level="Verbose">The entry 0x{0:X4}.4 is defined as a padding entry.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>EndSi4</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="HandleNotExistingSi4">
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="42" Param0="u16ObjectIndexInclOffset" Level="Output">The entry 0x{0:X4}.4 does not exists.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>EndSi4</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CallSi4CheckEntryDescription">
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"offline"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>4</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>"Report OverTemp events"</Parameter>
						<Parameter>7</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>null</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>32</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>true</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="EndSi4"></TestStep>
				<TestStep Name="StartSi5">
					<Description Id="43" Level="Output">Start validate SubIndex5</Description>
					<WriteLine Id="44" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : Subindex '0x{0:X}.5'</WriteLine>
				</TestStep>
				<TestStep Name="SetSi5RequiredLevel">
					<SetVariable Target="bObjectOrEntryRequiredLevel">1</SetVariable>
					<WriteLine Id="45" Param0="u16ObjectIndexInclOffset" Level="Verbose">0x{0:X4}.5 'Report AC ON events' may be available</WriteLine>
				</TestStep>
				<TestStep Name="CheckIfSi5Exists">
					<GetObjectDescription SourceDictionary="odDeviceObjectdictionary" Index="u16ObjectIndexInclOffset" SubIndex="5">
						<Type>u16DataType</Type>
					</GetObjectDescription>
					<GotoOnFailure>HandleNotExistingSi5</GotoOnFailure>
				</TestStep>
				<TestStep>
					<Compare>
						<NotEqual>
							<Value1>u16DataType</Value1>
							<Value2>0</Value2>
							<GotoStep>CallSi5CheckEntryDescription</GotoStep>
						</NotEqual>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="46" Param0="u16ObjectIndexInclOffset" Level="Verbose">The entry 0x{0:X4}.5 is defined as a padding entry.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>EndSi5</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="HandleNotExistingSi5">
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="47" Param0="u16ObjectIndexInclOffset" Level="Output">The entry 0x{0:X4}.5 does not exists.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>EndSi5</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CallSi5CheckEntryDescription">
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"offline"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>5</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>"Report AC ON events"</Parameter>
						<Parameter>7</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>null</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>32</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>true</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="EndSi5"></TestStep>
				<TestStep Name="StartSi6">
					<Description Id="48" Level="Output">Start validate SubIndex6</Description>
					<WriteLine Id="49" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : Subindex '0x{0:X}.6'</WriteLine>
				</TestStep>
				<TestStep Name="SetSi6RequiredLevel">
					<SetVariable Target="bObjectOrEntryRequiredLevel">1</SetVariable>
					<WriteLine Id="50" Param0="u16ObjectIndexInclOffset" Level="Verbose">0x{0:X4}.6 'Report Error events' may be available</WriteLine>
				</TestStep>
				<TestStep Name="CheckIfSi6Exists">
					<GetObjectDescription SourceDictionary="odDeviceObjectdictionary" Index="u16ObjectIndexInclOffset" SubIndex="6">
						<Type>u16DataType</Type>
					</GetObjectDescription>
					<GotoOnFailure>HandleNotExistingSi6</GotoOnFailure>
				</TestStep>
				<TestStep>
					<Compare>
						<NotEqual>
							<Value1>u16DataType</Value1>
							<Value2>0</Value2>
							<GotoStep>CallSi6CheckEntryDescription</GotoStep>
						</NotEqual>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="51" Param0="u16ObjectIndexInclOffset" Level="Verbose">The entry 0x{0:X4}.6 is defined as a padding entry.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>EndSi6</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="HandleNotExistingSi6">
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="52" Param0="u16ObjectIndexInclOffset" Level="Output">The entry 0x{0:X4}.6 does not exists.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>EndSi6</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CallSi6CheckEntryDescription">
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"offline"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>6</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>"Report Error events"</Parameter>
						<Parameter>7</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>null</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>32</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>true</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="EndSi6"></TestStep>
				<TestStep Name="CheckReservedEntryRange_7_to_255">
					<Description Id="53" Level="Output">Start check reserved entry range 7 to 255</Description>
					<CallTestFunction Name="CheckReservedEntryRange">
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>7</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>odDeviceObjectdictionary</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="ProfileLoopEnd">
					<Compare>
						<Equal>
							<Value1>bAtLeastOneModuleMatch</Value1>
							<Value2>false</Value2>
							<GotoStep>HandleAbortTestCaseOnFirstError</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="HandleAbortTestCaseOnFirstError">
					<Compare>
						<Equal>
							<Value1>bAbortTestCaseOnFirstError</Value1>
							<Value2>false</Value2>
							<GotoStep>ProfileLoopIncrement</GotoStep>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>strResult</Value1>
							<Value2>EmptyString</Value2>
							<GotoStep>ProfileLoopIncrement</GotoStep>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="54" Level="Output">Object verification for all following modules abort because an error was already detected for the current module.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>END</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="ProfileLoopIncrement">
					<SetVariable Target="u32ProfileCounter">u32ProfileCounter + 1</SetVariable>
					<Compare>
						<Greater>
							<Value1>u32CurrentProfilesLength</Value1>
							<Value2>u32ProfileCounter</Value2>
							<GotoStep>ProfileLoopStart</GotoStep>
						</Greater>
					</Compare>
				</TestStep>
				<TestStep Name="END">
					<Compare>
						<NotEqual>
							<Value1>bAtLeastOneModuleMatch</Value1>
							<Value2>true</Value2>
							<SkipCase Id="55">SKIP TEST(no module/channel supports the current profile)</SkipCase>
						</NotEqual>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bDEBUG</Value1>
							<Value2>true</Value2>
							<WriteLine Id="56" Param0="strResult" Level="Verbose">DEBUG | Result : '{0}'.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>strResult</Value1>
							<Value2>EmptyString</Value2>
							<ReturnSuccess Id="57">Test succeed</ReturnSuccess>
						</Equal>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>strResult</Value1>
							<Value2>EmptyString</Value2>
							<RaiseError Id="58"></RaiseError>
						</NotEqual>
					</Compare>
				</TestStep>
			</TestCase>
			<TestCase Name="online | 0x9004 (Device Counters)" CaseId="10">
				<Description>
					<PreCondition>- The device profile is 5003
- The module profile is 2011
- The submodule profile is 0</PreCondition>
					<Action>- Iterate over all online defined modules/channels and if the PreCondition matches the following operations are done:
- Get the online description of object 0x9004(+module specific offset) 'Device Counters' and all entries
 Check:
    (Name)
    BitSize
    DataType
    Rx / Tx mappable
    Default Data
    MinData
    Flags       </Action>
					<PostCondition>Error if
- mandatory object / entry is not defined
- an optional object exists and the entries are invalid
- Object / entry description does not match with the specification</PostCondition>
					<ProposalForSolution>- Define the missing objects
- correct object / entry description</ProposalForSolution>
					<References>
						<Reference Specification="ETG.5003.2011"></Reference>
					</References>
					<Mandatory>true</Mandatory>
				</Description>
				<TestStep Name="InitResult">
					<SetVariable Target="strResult">EmptyString</SetVariable>
				</TestStep>
				<TestStep Name="CheckIfOdAvailable">
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Mailbox</Value1>
							<Value2>false</Value2>
							<SkipCase Id="1">DuT does not support mailbox.</SkipCase>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Mailbox.CoE</Value1>
							<Value2>false</Value2>
							<SkipCase Id="2">DuT does not support CoE.</SkipCase>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Mailbox.CoE.SdoInfo</Value1>
							<Value2>false</Value2>
							<SkipCase Id="3">DuT does not support SDO Info.</SkipCase>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="InitAtLeastOneProfileMatch">
					<SetVariable Target="bAtLeastOneModuleMatch">false</SetVariable>
				</TestStep>
				<TestStep Name="GetCurrentProfileList">
					<SizeOf UInt32Var="u32Tmp">arrOnlineProfiles</SizeOf>
					<Compare>
						<Equal>
							<Value1>u32Tmp</Value1>
							<Value2>0</Value2>
							<CallTestFunction Name="GetCurrentProfileList">
								<Parameter>"online"</Parameter>
								<Parameter>"SafeOP"</Parameter>
								<OutParameter>arrOnlineProfiles</OutParameter>
							</CallTestFunction>
						</Equal>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>u32Tmp</Value1>
							<Value2>0</Value2>
							<WriteLine Id="4" Param0="arrOnlineProfiles" Level="Verbose">Use previously created profile list ({0})</WriteLine>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep>
					<SizeOf UInt32Var="u32Tmp">arrOnlineProfiles</SizeOf>
				</TestStep>
				<TestStep>
					<InitArray TargetArray="arrCurrentProfiles" Length="u32Tmp"></InitArray>
				</TestStep>
				<TestStep>
					<CopyArray>
						<SourceArray>arrOnlineProfiles</SourceArray>
						<DestinationArray>arrCurrentProfiles</DestinationArray>
						<Length>u32Tmp</Length>
					</CopyArray>
				</TestStep>
				<TestStep Name="InitProfileLoopCounter">
					<SetVariable Target="u32ProfileCounter">0</SetVariable>
				</TestStep>
				<TestStep Name="GetProfileArrayLength">
					<SizeOf UInt32Var="u32CurrentProfilesLength">arrCurrentProfiles</SizeOf>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="5" Param0="u32CurrentProfilesLength" Level="Verbose">'{0}' Profile(s) defined online.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>u32CurrentProfilesLength</Value1>
							<Value2>0</Value2>
							<SkipCase Id="6">Skip case | no profile defined.</SkipCase>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="ProfileLoopStart">
					<GetArrayItem SourceArray="arrCurrentProfiles" Target="strTmpString" Index="u32ProfileCounter"></GetArrayItem>
				</TestStep>
				<TestStep Name="CheckProfileInformationString">
					<Compare>
						<Equal>
							<Value1>strTmpString</Value1>
							<Value2>null</Value2>
							<RaiseError Id="7" Param0="u32ProfileCounter">Profile Info element [{0}] is null.</RaiseError>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>strTmpString</Value1>
							<Value2>EmptyString</Value2>
							<RaiseError Id="8" Param0="u32ProfileCounter">Profile Info element [{0}] is an empty string.</RaiseError>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="GetDeviceProfile">
					<CallTestFunction Name="GetDeviceProfile">
						<Parameter>strTmpString</Parameter>
						<OutParameter>uint16CurDeviceProfile</OutParameter>
					</CallTestFunction>
				</TestStep>
				<TestStep Name="GetModuleProfile">
					<CallTestFunction Name="GetModuleProfile">
						<Parameter>strTmpString</Parameter>
						<OutParameter>uint16CurModuleProfile</OutParameter>
					</CallTestFunction>
				</TestStep>
				<TestStep Name="GetSubModuleProfile">
					<CallTestFunction Name="GetSubModuleProfile">
						<Parameter>strTmpString</Parameter>
						<OutParameter>uint16CurSubModuleProfile</OutParameter>
					</CallTestFunction>
				</TestStep>
				<TestStep Name="DumpProfileInfo">
					<Description Id="9" Param0="uint16CurDeviceProfile" Param1="uint16CurModuleProfile" Param2="uint16CurSubModuleProfile" Param3="u32ProfileCounter" Level="Output">Module[{3}] : DeviceProfile '{0}' ; ModuleProfile '{1}' ; SubModuleProfile '{2}'</Description>
					<Compare>
						<Equal>
							<Value1>bIgnoreProfileID</Value1>
							<Value2>true</Value2>
							<GotoStep>IndicateThatAtleastOneModuleMatch</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CompareDeviceProfile">
					<Compare>
						<NotEqual>
							<Value1>uint16CurDeviceProfile</Value1>
							<Value2>5003</Value2>
							<WriteLine Id="10" Param0="uint16CurDeviceProfile" Level="Output">Skip Profile  (Test Device Profile '5003' != Cur Device Profile '{0}')</WriteLine>
						</NotEqual>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>uint16CurDeviceProfile</Value1>
							<Value2>5003</Value2>
							<GotoStep>ProfileLoopEnd</GotoStep>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep Name="CompareModuleProfile">
					<Compare>
						<NotEqual>
							<Value1>uint16CurModuleProfile</Value1>
							<Value2>2011</Value2>
							<WriteLine Id="11" Param0="uint16CurModuleProfile" Level="Output">Skip Profile  (Test Module Profile '2011' != Cur Module Profile '{0}')</WriteLine>
						</NotEqual>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>uint16CurModuleProfile</Value1>
							<Value2>2011</Value2>
							<GotoStep>ProfileLoopEnd</GotoStep>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep Name="CompareSubModuleProfile">
					<Compare>
						<NotEqual>
							<Value1>uint16CurSubModuleProfile</Value1>
							<Value2>0</Value2>
							<WriteLine Id="12" Param0="uint16CurSubModuleProfile" Level="Output">Skip Profile  (Test SubModule Profile '0' != Cur SubModule Profile '{0}')</WriteLine>
						</NotEqual>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>uint16CurSubModuleProfile</Value1>
							<Value2>0</Value2>
							<GotoStep>ProfileLoopEnd</GotoStep>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep Name="IndicateThatAtleastOneModuleMatch">
					<SetVariable Target="bAtLeastOneModuleMatch">true</SetVariable>
				</TestStep>
				<TestStep Name="GetObjectIndexInclOffset">
					<SetVariable Target="u16ObjectIndexInclOffset">#x9004 + (u32ProfileCounter * #x10)</SetVariable>
					<WriteLine Id="13" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : ObjectIndex '0x{0:X}'</WriteLine>
				</TestStep>
				<TestStep Name="LoadDeviceObjectDictionary">
					<Description Id="14" Level="Verbose">Load 'online' object dictionary for testing.</Description>
					<GetObjectDictionary Target="odDeviceObjectdictionary">
						<DictionaryType>Online</DictionaryType>
					</GetObjectDictionary>
					<RaiseErrorOnFailure Id="15">VerifyObject : failed to load online object dictionary.</RaiseErrorOnFailure>
				</TestStep>
				<TestStep Name="SetObjectRequiredLevel">
					<SetVariable Target="bObjectOrEntryRequiredLevel">1</SetVariable>
					<WriteLine Id="16" Param0="u16ObjectIndexInclOffset" Level="Verbose">0x{0:X4} 'Device Counters' may be available</WriteLine>
				</TestStep>
				<TestStep Name="CheckIfObjectExists">
					<GetObjectDescription SourceDictionary="odDeviceObjectdictionary" Index="u16ObjectIndexInclOffset" SubIndex="-1"></GetObjectDescription>
					<GotoOnSuccess>CallCheckObjectDescription</GotoOnSuccess>
				</TestStep>
				<TestStep Name="HandleNotExistingObject">
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>2</Value2>
							<WriteLine Id="17" Param0="u16ObjectIndexInclOffset" Level="Warning">The object 0x{0:X4} 'Device Counters' does not exists.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>1</Value2>
							<WriteLine Id="18" Param0="u16ObjectIndexInclOffset" Level="Output">The object 0x{0:X4} 'Device Counters' does not exists.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>ProfileLoopEnd</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CallCheckObjectDescription">
					<Description Id="19" Param0="u16ObjectIndexInclOffset" Level="Output">Verify the object description 0x{0:X4} 'Device Counters'.</Description>
					<CallTestFunction Name="CheckObjectDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"online"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>"Device Counters"</Parameter>
						<Parameter>null</Parameter>
						<Parameter>9</Parameter>
						<Parameter>-1</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<GotoStep>ProfileLoopEnd</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="InitEntryBittOffset">
					<SetVariable Target="i32CurrentBitOffset">0</SetVariable>
				</TestStep>
				<TestStep Name="StartSi0">
					<Description Id="20" Level="Output">Start validate SubIndex0</Description>
					<WriteLine Id="21" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : Subindex '0x{0:X}.0'</WriteLine>
				</TestStep>
				<TestStep Name="CallSi0CheckEntryDescription">
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"online"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>0</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>null</Parameter>
						<Parameter>5</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>null</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>null</Parameter>
						<Parameter>null</Parameter>
						<Parameter>null</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>8</Parameter>
						<Parameter>i32CurrentBitOffset</Parameter>
						<Parameter>true</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="EndSi0">
					<SetVariable Target="i32CurrentBitOffset">16</SetVariable>
				</TestStep>
				<TestStep Name="StartSi1">
					<Description Id="22" Level="Output">Start validate SubIndex1</Description>
					<WriteLine Id="23" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : Subindex '0x{0:X}.1'</WriteLine>
				</TestStep>
				<TestStep Name="SetSi1RequiredLevel">
					<SetVariable Target="bObjectOrEntryRequiredLevel">1</SetVariable>
					<WriteLine Id="24" Param0="u16ObjectIndexInclOffset" Level="Verbose">0x{0:X4}.1 'Report Total RF ON time' may be available</WriteLine>
				</TestStep>
				<TestStep Name="CheckIfSi1Exists">
					<GetObjectDescription SourceDictionary="odDeviceObjectdictionary" Index="u16ObjectIndexInclOffset" SubIndex="1">
						<Type>u16DataType</Type>
					</GetObjectDescription>
					<GotoOnFailure>HandleNotExistingSi1</GotoOnFailure>
				</TestStep>
				<TestStep>
					<Compare>
						<NotEqual>
							<Value1>u16DataType</Value1>
							<Value2>0</Value2>
							<GotoStep>CallSi1CheckEntryDescription</GotoStep>
						</NotEqual>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="25" Param0="u16ObjectIndexInclOffset" Level="Verbose">The entry 0x{0:X4}.1 is defined as a padding entry.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>EndSi1</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="HandleNotExistingSi1">
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="26" Param0="u16ObjectIndexInclOffset" Level="Output">The entry 0x{0:X4}.1 does not exists.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>EndSi1</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CallSi1CheckEntryDescription">
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"online"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>1</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>"Report Total RF ON time"</Parameter>
						<Parameter>7</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>null</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>32</Parameter>
						<Parameter>i32CurrentBitOffset</Parameter>
						<Parameter>true</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="EndSi1">
					<SetVariable Target="i32CurrentBitOffset">-1</SetVariable>
				</TestStep>
				<TestStep Name="StartSi2">
					<Description Id="27" Level="Output">Start validate SubIndex2</Description>
					<WriteLine Id="28" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : Subindex '0x{0:X}.2'</WriteLine>
				</TestStep>
				<TestStep Name="SetSi2RequiredLevel">
					<SetVariable Target="bObjectOrEntryRequiredLevel">1</SetVariable>
					<WriteLine Id="29" Param0="u16ObjectIndexInclOffset" Level="Verbose">0x{0:X4}.2 'Report Total Energy / Energy Counter' may be available</WriteLine>
				</TestStep>
				<TestStep Name="CheckIfSi2Exists">
					<GetObjectDescription SourceDictionary="odDeviceObjectdictionary" Index="u16ObjectIndexInclOffset" SubIndex="2">
						<Type>u16DataType</Type>
					</GetObjectDescription>
					<GotoOnFailure>HandleNotExistingSi2</GotoOnFailure>
				</TestStep>
				<TestStep>
					<Compare>
						<NotEqual>
							<Value1>u16DataType</Value1>
							<Value2>0</Value2>
							<GotoStep>CallSi2CheckEntryDescription</GotoStep>
						</NotEqual>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="30" Param0="u16ObjectIndexInclOffset" Level="Verbose">The entry 0x{0:X4}.2 is defined as a padding entry.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>EndSi2</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="HandleNotExistingSi2">
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="31" Param0="u16ObjectIndexInclOffset" Level="Output">The entry 0x{0:X4}.2 does not exists.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>EndSi2</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CallSi2CheckEntryDescription">
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"online"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>2</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>"Report Total Energy / Energy Counter"</Parameter>
						<Parameter>7</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>null</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>32</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>true</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="EndSi2"></TestStep>
				<TestStep Name="StartSi3">
					<Description Id="32" Level="Output">Start validate SubIndex3</Description>
					<WriteLine Id="33" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : Subindex '0x{0:X}.3'</WriteLine>
				</TestStep>
				<TestStep Name="SetSi3RequiredLevel">
					<SetVariable Target="bObjectOrEntryRequiredLevel">1</SetVariable>
					<WriteLine Id="34" Param0="u16ObjectIndexInclOffset" Level="Verbose">0x{0:X4}.3 'Report RF ON events' may be available</WriteLine>
				</TestStep>
				<TestStep Name="CheckIfSi3Exists">
					<GetObjectDescription SourceDictionary="odDeviceObjectdictionary" Index="u16ObjectIndexInclOffset" SubIndex="3">
						<Type>u16DataType</Type>
					</GetObjectDescription>
					<GotoOnFailure>HandleNotExistingSi3</GotoOnFailure>
				</TestStep>
				<TestStep>
					<Compare>
						<NotEqual>
							<Value1>u16DataType</Value1>
							<Value2>0</Value2>
							<GotoStep>CallSi3CheckEntryDescription</GotoStep>
						</NotEqual>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="35" Param0="u16ObjectIndexInclOffset" Level="Verbose">The entry 0x{0:X4}.3 is defined as a padding entry.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>EndSi3</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="HandleNotExistingSi3">
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="36" Param0="u16ObjectIndexInclOffset" Level="Output">The entry 0x{0:X4}.3 does not exists.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>EndSi3</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CallSi3CheckEntryDescription">
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"online"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>3</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>"Report RF ON events"</Parameter>
						<Parameter>7</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>null</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>32</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>true</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="EndSi3"></TestStep>
				<TestStep Name="StartSi4">
					<Description Id="37" Level="Output">Start validate SubIndex4</Description>
					<WriteLine Id="38" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : Subindex '0x{0:X}.4'</WriteLine>
				</TestStep>
				<TestStep Name="SetSi4RequiredLevel">
					<SetVariable Target="bObjectOrEntryRequiredLevel">1</SetVariable>
					<WriteLine Id="39" Param0="u16ObjectIndexInclOffset" Level="Verbose">0x{0:X4}.4 'Report OverTemp events' may be available</WriteLine>
				</TestStep>
				<TestStep Name="CheckIfSi4Exists">
					<GetObjectDescription SourceDictionary="odDeviceObjectdictionary" Index="u16ObjectIndexInclOffset" SubIndex="4">
						<Type>u16DataType</Type>
					</GetObjectDescription>
					<GotoOnFailure>HandleNotExistingSi4</GotoOnFailure>
				</TestStep>
				<TestStep>
					<Compare>
						<NotEqual>
							<Value1>u16DataType</Value1>
							<Value2>0</Value2>
							<GotoStep>CallSi4CheckEntryDescription</GotoStep>
						</NotEqual>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="40" Param0="u16ObjectIndexInclOffset" Level="Verbose">The entry 0x{0:X4}.4 is defined as a padding entry.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>EndSi4</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="HandleNotExistingSi4">
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="41" Param0="u16ObjectIndexInclOffset" Level="Output">The entry 0x{0:X4}.4 does not exists.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>EndSi4</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CallSi4CheckEntryDescription">
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"online"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>4</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>"Report OverTemp events"</Parameter>
						<Parameter>7</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>null</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>32</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>true</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="EndSi4"></TestStep>
				<TestStep Name="StartSi5">
					<Description Id="42" Level="Output">Start validate SubIndex5</Description>
					<WriteLine Id="43" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : Subindex '0x{0:X}.5'</WriteLine>
				</TestStep>
				<TestStep Name="SetSi5RequiredLevel">
					<SetVariable Target="bObjectOrEntryRequiredLevel">1</SetVariable>
					<WriteLine Id="44" Param0="u16ObjectIndexInclOffset" Level="Verbose">0x{0:X4}.5 'Report AC ON events' may be available</WriteLine>
				</TestStep>
				<TestStep Name="CheckIfSi5Exists">
					<GetObjectDescription SourceDictionary="odDeviceObjectdictionary" Index="u16ObjectIndexInclOffset" SubIndex="5">
						<Type>u16DataType</Type>
					</GetObjectDescription>
					<GotoOnFailure>HandleNotExistingSi5</GotoOnFailure>
				</TestStep>
				<TestStep>
					<Compare>
						<NotEqual>
							<Value1>u16DataType</Value1>
							<Value2>0</Value2>
							<GotoStep>CallSi5CheckEntryDescription</GotoStep>
						</NotEqual>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="45" Param0="u16ObjectIndexInclOffset" Level="Verbose">The entry 0x{0:X4}.5 is defined as a padding entry.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>EndSi5</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="HandleNotExistingSi5">
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="46" Param0="u16ObjectIndexInclOffset" Level="Output">The entry 0x{0:X4}.5 does not exists.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>EndSi5</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CallSi5CheckEntryDescription">
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"online"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>5</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>"Report AC ON events"</Parameter>
						<Parameter>7</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>null</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>32</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>true</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="EndSi5"></TestStep>
				<TestStep Name="StartSi6">
					<Description Id="47" Level="Output">Start validate SubIndex6</Description>
					<WriteLine Id="48" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : Subindex '0x{0:X}.6'</WriteLine>
				</TestStep>
				<TestStep Name="SetSi6RequiredLevel">
					<SetVariable Target="bObjectOrEntryRequiredLevel">1</SetVariable>
					<WriteLine Id="49" Param0="u16ObjectIndexInclOffset" Level="Verbose">0x{0:X4}.6 'Report Error events' may be available</WriteLine>
				</TestStep>
				<TestStep Name="CheckIfSi6Exists">
					<GetObjectDescription SourceDictionary="odDeviceObjectdictionary" Index="u16ObjectIndexInclOffset" SubIndex="6">
						<Type>u16DataType</Type>
					</GetObjectDescription>
					<GotoOnFailure>HandleNotExistingSi6</GotoOnFailure>
				</TestStep>
				<TestStep>
					<Compare>
						<NotEqual>
							<Value1>u16DataType</Value1>
							<Value2>0</Value2>
							<GotoStep>CallSi6CheckEntryDescription</GotoStep>
						</NotEqual>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="50" Param0="u16ObjectIndexInclOffset" Level="Verbose">The entry 0x{0:X4}.6 is defined as a padding entry.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>EndSi6</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="HandleNotExistingSi6">
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="51" Param0="u16ObjectIndexInclOffset" Level="Output">The entry 0x{0:X4}.6 does not exists.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>EndSi6</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CallSi6CheckEntryDescription">
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"online"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>6</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>"Report Error events"</Parameter>
						<Parameter>7</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>null</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>32</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>true</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="EndSi6"></TestStep>
				<TestStep Name="CheckReservedEntryRange_7_to_255">
					<Description Id="52" Level="Output">Start check reserved entry range 7 to 255</Description>
					<CallTestFunction Name="CheckReservedEntryRange">
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>7</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>odDeviceObjectdictionary</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="ProfileLoopEnd">
					<Compare>
						<Equal>
							<Value1>bAtLeastOneModuleMatch</Value1>
							<Value2>false</Value2>
							<GotoStep>HandleAbortTestCaseOnFirstError</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="HandleAbortTestCaseOnFirstError">
					<Compare>
						<Equal>
							<Value1>bAbortTestCaseOnFirstError</Value1>
							<Value2>false</Value2>
							<GotoStep>ProfileLoopIncrement</GotoStep>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>strResult</Value1>
							<Value2>EmptyString</Value2>
							<GotoStep>ProfileLoopIncrement</GotoStep>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="53" Level="Output">Object verification for all following modules abort because an error was already detected for the current module.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>END</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="ProfileLoopIncrement">
					<SetVariable Target="u32ProfileCounter">u32ProfileCounter + 1</SetVariable>
					<Compare>
						<Greater>
							<Value1>u32CurrentProfilesLength</Value1>
							<Value2>u32ProfileCounter</Value2>
							<GotoStep>ProfileLoopStart</GotoStep>
						</Greater>
					</Compare>
				</TestStep>
				<TestStep Name="END">
					<Compare>
						<NotEqual>
							<Value1>bAtLeastOneModuleMatch</Value1>
							<Value2>true</Value2>
							<SkipCase Id="54">SKIP TEST(no module/channel supports the current profile)</SkipCase>
						</NotEqual>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bDEBUG</Value1>
							<Value2>true</Value2>
							<WriteLine Id="55" Param0="strResult" Level="Verbose">DEBUG | Result : '{0}'.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>strResult</Value1>
							<Value2>EmptyString</Value2>
							<ReturnSuccess Id="56">Test succeed</ReturnSuccess>
						</Equal>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>strResult</Value1>
							<Value2>EmptyString</Value2>
							<RaiseError Id="57"></RaiseError>
						</NotEqual>
					</Compare>
				</TestStep>
			</TestCase>
			<TestCase Name="offline | 0x9005 (reserved object)" CaseId="11">
				<Description>
					<PreCondition>- The device profile is 5003
- The module profile is 2011
- The submodule profile is 0</PreCondition>
					<Action>- Iterate over all offline defined modules/channels and if the PreCondition matches the check if one object in the reserved range is defined</Action>
					<PostCondition>- Error if at least one object is defined</PostCondition>
					<ProposalForSolution>- Remove the defined objects
</ProposalForSolution>
					<References>
						<Reference Specification="ETG.5003.2011"></Reference>
					</References>
					<Mandatory>true</Mandatory>
				</Description>
				<TestStep Name="InitResult">
					<SetVariable Target="strResult">EmptyString</SetVariable>
				</TestStep>
				<TestStep Name="CheckIfOdAvailable">
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Mailbox</Value1>
							<Value2>false</Value2>
							<SkipCase Id="1">DuT does not support mailbox.</SkipCase>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Mailbox.CoE</Value1>
							<Value2>false</Value2>
							<SkipCase Id="2">DuT does not support CoE.</SkipCase>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep>
					<GetObjectDictionary Target="odDeviceObjectdictionary">
						<DictionaryType>Offline</DictionaryType>
					</GetObjectDictionary>
					<SkipOnFailure Id="3">No offline object dictionary defined.</SkipOnFailure>
				</TestStep>
				<TestStep>
					<GetObjectList Count="u32Tmp" Target="odDeviceObjectdictionaryList" SourceDict="odDeviceObjectdictionary"></GetObjectList>
					<Compare>
						<Equal>
							<Value1>u32Tmp</Value1>
							<Value2>0</Value2>
							<SkipCase Id="4">No offline object dictionary defined.</SkipCase>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="InitAtLeastOneProfileMatch">
					<SetVariable Target="bAtLeastOneModuleMatch">false</SetVariable>
				</TestStep>
				<TestStep Name="GetCurrentProfileList">
					<SizeOf UInt32Var="u32Tmp">arrOfflineProfiles</SizeOf>
					<Compare>
						<Equal>
							<Value1>u32Tmp</Value1>
							<Value2>0</Value2>
							<CallTestFunction Name="GetCurrentProfileList">
								<Parameter>"offline"</Parameter>
								<Parameter>"SafeOP"</Parameter>
								<OutParameter>arrOfflineProfiles</OutParameter>
							</CallTestFunction>
						</Equal>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>u32Tmp</Value1>
							<Value2>0</Value2>
							<WriteLine Id="5" Param0="arrOfflineProfiles" Level="Verbose">Use previously created profile list ({0})</WriteLine>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep>
					<SizeOf UInt32Var="u32Tmp">arrOfflineProfiles</SizeOf>
				</TestStep>
				<TestStep>
					<InitArray TargetArray="arrCurrentProfiles" Length="u32Tmp"></InitArray>
				</TestStep>
				<TestStep>
					<CopyArray>
						<SourceArray>arrOfflineProfiles</SourceArray>
						<DestinationArray>arrCurrentProfiles</DestinationArray>
						<Length>u32Tmp</Length>
					</CopyArray>
				</TestStep>
				<TestStep Name="InitProfileLoopCounter">
					<SetVariable Target="u32ProfileCounter">0</SetVariable>
				</TestStep>
				<TestStep Name="GetProfileArrayLength">
					<SizeOf UInt32Var="u32CurrentProfilesLength">arrCurrentProfiles</SizeOf>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="6" Param0="u32CurrentProfilesLength" Level="Verbose">'{0}' Profile(s) defined offline.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>u32CurrentProfilesLength</Value1>
							<Value2>0</Value2>
							<SkipCase Id="7">Skip case | no profile defined.</SkipCase>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="ProfileLoopStart">
					<GetArrayItem SourceArray="arrCurrentProfiles" Target="strTmpString" Index="u32ProfileCounter"></GetArrayItem>
				</TestStep>
				<TestStep Name="CheckProfileInformationString">
					<Compare>
						<Equal>
							<Value1>strTmpString</Value1>
							<Value2>null</Value2>
							<RaiseError Id="8" Param0="u32ProfileCounter">Profile Info element [{0}] is null.</RaiseError>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>strTmpString</Value1>
							<Value2>EmptyString</Value2>
							<RaiseError Id="9" Param0="u32ProfileCounter">Profile Info element [{0}] is an empty string.</RaiseError>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="GetDeviceProfile">
					<CallTestFunction Name="GetDeviceProfile">
						<Parameter>strTmpString</Parameter>
						<OutParameter>uint16CurDeviceProfile</OutParameter>
					</CallTestFunction>
				</TestStep>
				<TestStep Name="GetModuleProfile">
					<CallTestFunction Name="GetModuleProfile">
						<Parameter>strTmpString</Parameter>
						<OutParameter>uint16CurModuleProfile</OutParameter>
					</CallTestFunction>
				</TestStep>
				<TestStep Name="GetSubModuleProfile">
					<CallTestFunction Name="GetSubModuleProfile">
						<Parameter>strTmpString</Parameter>
						<OutParameter>uint16CurSubModuleProfile</OutParameter>
					</CallTestFunction>
				</TestStep>
				<TestStep Name="DumpProfileInfo">
					<Description Id="10" Param0="uint16CurDeviceProfile" Param1="uint16CurModuleProfile" Param2="uint16CurSubModuleProfile" Param3="u32ProfileCounter" Level="Output">Module[{3}] : DeviceProfile '{0}' ; ModuleProfile '{1}' ; SubModuleProfile '{2}'</Description>
					<Compare>
						<Equal>
							<Value1>bIgnoreProfileID</Value1>
							<Value2>true</Value2>
							<GotoStep>IndicateThatAtleastOneModuleMatch</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CompareDeviceProfile">
					<Compare>
						<NotEqual>
							<Value1>uint16CurDeviceProfile</Value1>
							<Value2>5003</Value2>
							<WriteLine Id="11" Param0="uint16CurDeviceProfile" Level="Output">Skip Profile  (Test Device Profile '5003' != Cur Device Profile '{0}')</WriteLine>
						</NotEqual>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>uint16CurDeviceProfile</Value1>
							<Value2>5003</Value2>
							<GotoStep>ProfileLoopEnd</GotoStep>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep Name="CompareModuleProfile">
					<Compare>
						<NotEqual>
							<Value1>uint16CurModuleProfile</Value1>
							<Value2>2011</Value2>
							<WriteLine Id="12" Param0="uint16CurModuleProfile" Level="Output">Skip Profile  (Test Module Profile '2011' != Cur Module Profile '{0}')</WriteLine>
						</NotEqual>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>uint16CurModuleProfile</Value1>
							<Value2>2011</Value2>
							<GotoStep>ProfileLoopEnd</GotoStep>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep Name="CompareSubModuleProfile">
					<Compare>
						<NotEqual>
							<Value1>uint16CurSubModuleProfile</Value1>
							<Value2>0</Value2>
							<WriteLine Id="13" Param0="uint16CurSubModuleProfile" Level="Output">Skip Profile  (Test SubModule Profile '0' != Cur SubModule Profile '{0}')</WriteLine>
						</NotEqual>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>uint16CurSubModuleProfile</Value1>
							<Value2>0</Value2>
							<GotoStep>ProfileLoopEnd</GotoStep>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep Name="IndicateThatAtleastOneModuleMatch">
					<SetVariable Target="bAtLeastOneModuleMatch">true</SetVariable>
				</TestStep>
				<TestStep Name="GetFirstReservedObjectIndexInlcOffset">
					<SetVariable Target="u16ObjectIndexInclOffset">#x9005 + (u32ProfileCounter * #x10)</SetVariable>
					<WriteLine Id="14" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : First reserved object index '0x{0:X}'</WriteLine>
				</TestStep>
				<TestStep Name="GetNextDefinedObjectIndexInlcOffset">
					<SetVariable Target="u16NextDefObjectIndexInclOffset">#x9006 + (u32ProfileCounter * #x0010)</SetVariable>
					<WriteLine Id="15" Param0="u16NextDefObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : Next defined object index '0x{0:X}'</WriteLine>
				</TestStep>
				<TestStep Name="CallCheckReservedObjectRange">
					<Description Id="16" Level="Verbose">VerifyObject : Load 'offline' object dictionary for testing.</Description>
					<CallTestFunction Name="CheckReservedObjectRange">
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>u16NextDefObjectIndexInclOffset</Parameter>
						<Parameter>odDeviceObjectdictionary</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<GotoStep>ProfileLoopEnd</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="ProfileLoopEnd">
					<Compare>
						<Equal>
							<Value1>bAtLeastOneModuleMatch</Value1>
							<Value2>false</Value2>
							<GotoStep>HandleAbortTestCaseOnFirstError</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="HandleAbortTestCaseOnFirstError">
					<Compare>
						<Equal>
							<Value1>bAbortTestCaseOnFirstError</Value1>
							<Value2>false</Value2>
							<GotoStep>ProfileLoopIncrement</GotoStep>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>strResult</Value1>
							<Value2>EmptyString</Value2>
							<GotoStep>ProfileLoopIncrement</GotoStep>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="17" Level="Output">Object verification for all following modules abort because an error was already detected for the current module.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>END</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="ProfileLoopIncrement">
					<SetVariable Target="u32ProfileCounter">u32ProfileCounter + 1</SetVariable>
					<Compare>
						<Greater>
							<Value1>u32CurrentProfilesLength</Value1>
							<Value2>u32ProfileCounter</Value2>
							<GotoStep>ProfileLoopStart</GotoStep>
						</Greater>
					</Compare>
				</TestStep>
				<TestStep Name="END">
					<Compare>
						<NotEqual>
							<Value1>bAtLeastOneModuleMatch</Value1>
							<Value2>true</Value2>
							<SkipCase Id="18">SKIP TEST(no module/channel supports the current profile)</SkipCase>
						</NotEqual>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bDEBUG</Value1>
							<Value2>true</Value2>
							<WriteLine Id="19" Param0="strResult" Level="Verbose">DEBUG | Result : '{0}'.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>strResult</Value1>
							<Value2>EmptyString</Value2>
							<ReturnSuccess Id="20">Test succeed</ReturnSuccess>
						</Equal>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>strResult</Value1>
							<Value2>EmptyString</Value2>
							<RaiseError Id="21"></RaiseError>
						</NotEqual>
					</Compare>
				</TestStep>
			</TestCase>
			<TestCase Name="online | 0x9005 (reserved object)" CaseId="12">
				<Description>
					<PreCondition>- The device profile is 5003
- The module profile is 2011
- The submodule profile is 0</PreCondition>
					<Action>- Iterate over all online defined modules/channels and if the PreCondition matches the check if one object in the reserved range is defined</Action>
					<PostCondition>- Error if at least one object is defined</PostCondition>
					<ProposalForSolution>- Remove the defined objects
</ProposalForSolution>
					<References>
						<Reference Specification="ETG.5003.2011"></Reference>
					</References>
					<Mandatory>true</Mandatory>
				</Description>
				<TestStep Name="InitResult">
					<SetVariable Target="strResult">EmptyString</SetVariable>
				</TestStep>
				<TestStep Name="CheckIfOdAvailable">
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Mailbox</Value1>
							<Value2>false</Value2>
							<SkipCase Id="1">DuT does not support mailbox.</SkipCase>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Mailbox.CoE</Value1>
							<Value2>false</Value2>
							<SkipCase Id="2">DuT does not support CoE.</SkipCase>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Mailbox.CoE.SdoInfo</Value1>
							<Value2>false</Value2>
							<SkipCase Id="3">DuT does not support SDO Info.</SkipCase>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="InitAtLeastOneProfileMatch">
					<SetVariable Target="bAtLeastOneModuleMatch">false</SetVariable>
				</TestStep>
				<TestStep Name="GetCurrentProfileList">
					<SizeOf UInt32Var="u32Tmp">arrOnlineProfiles</SizeOf>
					<Compare>
						<Equal>
							<Value1>u32Tmp</Value1>
							<Value2>0</Value2>
							<CallTestFunction Name="GetCurrentProfileList">
								<Parameter>"online"</Parameter>
								<Parameter>"SafeOP"</Parameter>
								<OutParameter>arrOnlineProfiles</OutParameter>
							</CallTestFunction>
						</Equal>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>u32Tmp</Value1>
							<Value2>0</Value2>
							<WriteLine Id="4" Param0="arrOnlineProfiles" Level="Verbose">Use previously created profile list ({0})</WriteLine>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep>
					<SizeOf UInt32Var="u32Tmp">arrOnlineProfiles</SizeOf>
				</TestStep>
				<TestStep>
					<InitArray TargetArray="arrCurrentProfiles" Length="u32Tmp"></InitArray>
				</TestStep>
				<TestStep>
					<CopyArray>
						<SourceArray>arrOnlineProfiles</SourceArray>
						<DestinationArray>arrCurrentProfiles</DestinationArray>
						<Length>u32Tmp</Length>
					</CopyArray>
				</TestStep>
				<TestStep Name="InitProfileLoopCounter">
					<SetVariable Target="u32ProfileCounter">0</SetVariable>
				</TestStep>
				<TestStep Name="GetProfileArrayLength">
					<SizeOf UInt32Var="u32CurrentProfilesLength">arrCurrentProfiles</SizeOf>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="5" Param0="u32CurrentProfilesLength" Level="Verbose">'{0}' Profile(s) defined online.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>u32CurrentProfilesLength</Value1>
							<Value2>0</Value2>
							<SkipCase Id="6">Skip case | no profile defined.</SkipCase>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="ProfileLoopStart">
					<GetArrayItem SourceArray="arrCurrentProfiles" Target="strTmpString" Index="u32ProfileCounter"></GetArrayItem>
				</TestStep>
				<TestStep Name="CheckProfileInformationString">
					<Compare>
						<Equal>
							<Value1>strTmpString</Value1>
							<Value2>null</Value2>
							<RaiseError Id="7" Param0="u32ProfileCounter">Profile Info element [{0}] is null.</RaiseError>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>strTmpString</Value1>
							<Value2>EmptyString</Value2>
							<RaiseError Id="8" Param0="u32ProfileCounter">Profile Info element [{0}] is an empty string.</RaiseError>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="GetDeviceProfile">
					<CallTestFunction Name="GetDeviceProfile">
						<Parameter>strTmpString</Parameter>
						<OutParameter>uint16CurDeviceProfile</OutParameter>
					</CallTestFunction>
				</TestStep>
				<TestStep Name="GetModuleProfile">
					<CallTestFunction Name="GetModuleProfile">
						<Parameter>strTmpString</Parameter>
						<OutParameter>uint16CurModuleProfile</OutParameter>
					</CallTestFunction>
				</TestStep>
				<TestStep Name="GetSubModuleProfile">
					<CallTestFunction Name="GetSubModuleProfile">
						<Parameter>strTmpString</Parameter>
						<OutParameter>uint16CurSubModuleProfile</OutParameter>
					</CallTestFunction>
				</TestStep>
				<TestStep Name="DumpProfileInfo">
					<Description Id="9" Param0="uint16CurDeviceProfile" Param1="uint16CurModuleProfile" Param2="uint16CurSubModuleProfile" Param3="u32ProfileCounter" Level="Output">Module[{3}] : DeviceProfile '{0}' ; ModuleProfile '{1}' ; SubModuleProfile '{2}'</Description>
					<Compare>
						<Equal>
							<Value1>bIgnoreProfileID</Value1>
							<Value2>true</Value2>
							<GotoStep>IndicateThatAtleastOneModuleMatch</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CompareDeviceProfile">
					<Compare>
						<NotEqual>
							<Value1>uint16CurDeviceProfile</Value1>
							<Value2>5003</Value2>
							<WriteLine Id="10" Param0="uint16CurDeviceProfile" Level="Output">Skip Profile  (Test Device Profile '5003' != Cur Device Profile '{0}')</WriteLine>
						</NotEqual>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>uint16CurDeviceProfile</Value1>
							<Value2>5003</Value2>
							<GotoStep>ProfileLoopEnd</GotoStep>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep Name="CompareModuleProfile">
					<Compare>
						<NotEqual>
							<Value1>uint16CurModuleProfile</Value1>
							<Value2>2011</Value2>
							<WriteLine Id="11" Param0="uint16CurModuleProfile" Level="Output">Skip Profile  (Test Module Profile '2011' != Cur Module Profile '{0}')</WriteLine>
						</NotEqual>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>uint16CurModuleProfile</Value1>
							<Value2>2011</Value2>
							<GotoStep>ProfileLoopEnd</GotoStep>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep Name="CompareSubModuleProfile">
					<Compare>
						<NotEqual>
							<Value1>uint16CurSubModuleProfile</Value1>
							<Value2>0</Value2>
							<WriteLine Id="12" Param0="uint16CurSubModuleProfile" Level="Output">Skip Profile  (Test SubModule Profile '0' != Cur SubModule Profile '{0}')</WriteLine>
						</NotEqual>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>uint16CurSubModuleProfile</Value1>
							<Value2>0</Value2>
							<GotoStep>ProfileLoopEnd</GotoStep>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep Name="IndicateThatAtleastOneModuleMatch">
					<SetVariable Target="bAtLeastOneModuleMatch">true</SetVariable>
				</TestStep>
				<TestStep Name="GetFirstReservedObjectIndexInlcOffset">
					<SetVariable Target="u16ObjectIndexInclOffset">#x9005 + (u32ProfileCounter * #x10)</SetVariable>
					<WriteLine Id="13" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : First reserved object index '0x{0:X}'</WriteLine>
				</TestStep>
				<TestStep Name="GetNextDefinedObjectIndexInlcOffset">
					<SetVariable Target="u16NextDefObjectIndexInclOffset">#x9006 + (u32ProfileCounter * #x0010)</SetVariable>
					<WriteLine Id="14" Param0="u16NextDefObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : Next defined object index '0x{0:X}'</WriteLine>
				</TestStep>
				<TestStep Name="CallCheckReservedObjectRange">
					<Description Id="15" Level="Verbose">VerifyObject : Load 'online' object dictionary for testing.</Description>
					<CallTestFunction Name="CheckReservedObjectRange">
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>u16NextDefObjectIndexInclOffset</Parameter>
						<Parameter>odDeviceObjectdictionary</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<GotoStep>ProfileLoopEnd</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="ProfileLoopEnd">
					<Compare>
						<Equal>
							<Value1>bAtLeastOneModuleMatch</Value1>
							<Value2>false</Value2>
							<GotoStep>HandleAbortTestCaseOnFirstError</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="HandleAbortTestCaseOnFirstError">
					<Compare>
						<Equal>
							<Value1>bAbortTestCaseOnFirstError</Value1>
							<Value2>false</Value2>
							<GotoStep>ProfileLoopIncrement</GotoStep>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>strResult</Value1>
							<Value2>EmptyString</Value2>
							<GotoStep>ProfileLoopIncrement</GotoStep>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="16" Level="Output">Object verification for all following modules abort because an error was already detected for the current module.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>END</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="ProfileLoopIncrement">
					<SetVariable Target="u32ProfileCounter">u32ProfileCounter + 1</SetVariable>
					<Compare>
						<Greater>
							<Value1>u32CurrentProfilesLength</Value1>
							<Value2>u32ProfileCounter</Value2>
							<GotoStep>ProfileLoopStart</GotoStep>
						</Greater>
					</Compare>
				</TestStep>
				<TestStep Name="END">
					<Compare>
						<NotEqual>
							<Value1>bAtLeastOneModuleMatch</Value1>
							<Value2>true</Value2>
							<SkipCase Id="17">SKIP TEST(no module/channel supports the current profile)</SkipCase>
						</NotEqual>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bDEBUG</Value1>
							<Value2>true</Value2>
							<WriteLine Id="18" Param0="strResult" Level="Verbose">DEBUG | Result : '{0}'.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>strResult</Value1>
							<Value2>EmptyString</Value2>
							<ReturnSuccess Id="19">Test succeed</ReturnSuccess>
						</Equal>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>strResult</Value1>
							<Value2>EmptyString</Value2>
							<RaiseError Id="20"></RaiseError>
						</NotEqual>
					</Compare>
				</TestStep>
			</TestCase>
			<TestCase Name="offline | 0x9006 (Enable Info)" CaseId="13">
				<Description>
					<PreCondition>- The device profile is 5003
- The module profile is 2011
- The submodule profile is 0</PreCondition>
					<Action>- Iterate over all offline defined modules/channels and if the PreCondition matches the following operations are done:
- Get the offline description of object 0x9006(+module specific offset) 'Enable Info' and all entries
 Check:
    (Name)
    BitSize
    DataType
    Rx / Tx mappable
    Default Data
    MinData
    Flags       </Action>
					<PostCondition>Error if
- mandatory object / entry is not defined
- an optional object exists and the entries are invalid
- Object / entry description does not match with the specification</PostCondition>
					<ProposalForSolution>- Define the missing objects
- correct object / entry description</ProposalForSolution>
					<References>
						<Reference Specification="ETG.5003.2011"></Reference>
					</References>
					<Mandatory>true</Mandatory>
				</Description>
				<TestStep Name="InitResult">
					<SetVariable Target="strResult">EmptyString</SetVariable>
				</TestStep>
				<TestStep Name="CheckIfOdAvailable">
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Mailbox</Value1>
							<Value2>false</Value2>
							<SkipCase Id="1">DuT does not support mailbox.</SkipCase>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Mailbox.CoE</Value1>
							<Value2>false</Value2>
							<SkipCase Id="2">DuT does not support CoE.</SkipCase>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep>
					<GetObjectDictionary Target="odDeviceObjectdictionary">
						<DictionaryType>Offline</DictionaryType>
					</GetObjectDictionary>
					<SkipOnFailure Id="3">No offline object dictionary defined.</SkipOnFailure>
				</TestStep>
				<TestStep>
					<GetObjectList Count="u32Tmp" Target="odDeviceObjectdictionaryList" SourceDict="odDeviceObjectdictionary"></GetObjectList>
					<Compare>
						<Equal>
							<Value1>u32Tmp</Value1>
							<Value2>0</Value2>
							<SkipCase Id="4">No offline object dictionary defined.</SkipCase>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="InitAtLeastOneProfileMatch">
					<SetVariable Target="bAtLeastOneModuleMatch">false</SetVariable>
				</TestStep>
				<TestStep Name="GetCurrentProfileList">
					<SizeOf UInt32Var="u32Tmp">arrOfflineProfiles</SizeOf>
					<Compare>
						<Equal>
							<Value1>u32Tmp</Value1>
							<Value2>0</Value2>
							<CallTestFunction Name="GetCurrentProfileList">
								<Parameter>"offline"</Parameter>
								<Parameter>"SafeOP"</Parameter>
								<OutParameter>arrOfflineProfiles</OutParameter>
							</CallTestFunction>
						</Equal>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>u32Tmp</Value1>
							<Value2>0</Value2>
							<WriteLine Id="5" Param0="arrOfflineProfiles" Level="Verbose">Use previously created profile list ({0})</WriteLine>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep>
					<SizeOf UInt32Var="u32Tmp">arrOfflineProfiles</SizeOf>
				</TestStep>
				<TestStep>
					<InitArray TargetArray="arrCurrentProfiles" Length="u32Tmp"></InitArray>
				</TestStep>
				<TestStep>
					<CopyArray>
						<SourceArray>arrOfflineProfiles</SourceArray>
						<DestinationArray>arrCurrentProfiles</DestinationArray>
						<Length>u32Tmp</Length>
					</CopyArray>
				</TestStep>
				<TestStep Name="InitProfileLoopCounter">
					<SetVariable Target="u32ProfileCounter">0</SetVariable>
				</TestStep>
				<TestStep Name="GetProfileArrayLength">
					<SizeOf UInt32Var="u32CurrentProfilesLength">arrCurrentProfiles</SizeOf>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="6" Param0="u32CurrentProfilesLength" Level="Verbose">'{0}' Profile(s) defined offline.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>u32CurrentProfilesLength</Value1>
							<Value2>0</Value2>
							<SkipCase Id="7">Skip case | no profile defined.</SkipCase>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="ProfileLoopStart">
					<GetArrayItem SourceArray="arrCurrentProfiles" Target="strTmpString" Index="u32ProfileCounter"></GetArrayItem>
				</TestStep>
				<TestStep Name="CheckProfileInformationString">
					<Compare>
						<Equal>
							<Value1>strTmpString</Value1>
							<Value2>null</Value2>
							<RaiseError Id="8" Param0="u32ProfileCounter">Profile Info element [{0}] is null.</RaiseError>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>strTmpString</Value1>
							<Value2>EmptyString</Value2>
							<RaiseError Id="9" Param0="u32ProfileCounter">Profile Info element [{0}] is an empty string.</RaiseError>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="GetDeviceProfile">
					<CallTestFunction Name="GetDeviceProfile">
						<Parameter>strTmpString</Parameter>
						<OutParameter>uint16CurDeviceProfile</OutParameter>
					</CallTestFunction>
				</TestStep>
				<TestStep Name="GetModuleProfile">
					<CallTestFunction Name="GetModuleProfile">
						<Parameter>strTmpString</Parameter>
						<OutParameter>uint16CurModuleProfile</OutParameter>
					</CallTestFunction>
				</TestStep>
				<TestStep Name="GetSubModuleProfile">
					<CallTestFunction Name="GetSubModuleProfile">
						<Parameter>strTmpString</Parameter>
						<OutParameter>uint16CurSubModuleProfile</OutParameter>
					</CallTestFunction>
				</TestStep>
				<TestStep Name="DumpProfileInfo">
					<Description Id="10" Param0="uint16CurDeviceProfile" Param1="uint16CurModuleProfile" Param2="uint16CurSubModuleProfile" Param3="u32ProfileCounter" Level="Output">Module[{3}] : DeviceProfile '{0}' ; ModuleProfile '{1}' ; SubModuleProfile '{2}'</Description>
					<Compare>
						<Equal>
							<Value1>bIgnoreProfileID</Value1>
							<Value2>true</Value2>
							<GotoStep>IndicateThatAtleastOneModuleMatch</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CompareDeviceProfile">
					<Compare>
						<NotEqual>
							<Value1>uint16CurDeviceProfile</Value1>
							<Value2>5003</Value2>
							<WriteLine Id="11" Param0="uint16CurDeviceProfile" Level="Output">Skip Profile  (Test Device Profile '5003' != Cur Device Profile '{0}')</WriteLine>
						</NotEqual>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>uint16CurDeviceProfile</Value1>
							<Value2>5003</Value2>
							<GotoStep>ProfileLoopEnd</GotoStep>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep Name="CompareModuleProfile">
					<Compare>
						<NotEqual>
							<Value1>uint16CurModuleProfile</Value1>
							<Value2>2011</Value2>
							<WriteLine Id="12" Param0="uint16CurModuleProfile" Level="Output">Skip Profile  (Test Module Profile '2011' != Cur Module Profile '{0}')</WriteLine>
						</NotEqual>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>uint16CurModuleProfile</Value1>
							<Value2>2011</Value2>
							<GotoStep>ProfileLoopEnd</GotoStep>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep Name="CompareSubModuleProfile">
					<Compare>
						<NotEqual>
							<Value1>uint16CurSubModuleProfile</Value1>
							<Value2>0</Value2>
							<WriteLine Id="13" Param0="uint16CurSubModuleProfile" Level="Output">Skip Profile  (Test SubModule Profile '0' != Cur SubModule Profile '{0}')</WriteLine>
						</NotEqual>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>uint16CurSubModuleProfile</Value1>
							<Value2>0</Value2>
							<GotoStep>ProfileLoopEnd</GotoStep>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep Name="IndicateThatAtleastOneModuleMatch">
					<SetVariable Target="bAtLeastOneModuleMatch">true</SetVariable>
				</TestStep>
				<TestStep Name="GetObjectIndexInclOffset">
					<SetVariable Target="u16ObjectIndexInclOffset">#x9006 + (u32ProfileCounter * #x10)</SetVariable>
					<WriteLine Id="14" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : ObjectIndex '0x{0:X}'</WriteLine>
				</TestStep>
				<TestStep Name="LoadDeviceObjectDictionary">
					<Description Id="15" Level="Verbose">Load 'offline' object dictionary for testing.</Description>
					<GetObjectDictionary Target="odDeviceObjectdictionary">
						<DictionaryType>Offline</DictionaryType>
					</GetObjectDictionary>
					<RaiseErrorOnFailure Id="16">VerifyObject : failed to load offline object dictionary.</RaiseErrorOnFailure>
				</TestStep>
				<TestStep Name="SetObjectRequiredLevel">
					<SetVariable Target="bObjectOrEntryRequiredLevel">1</SetVariable>
					<WriteLine Id="17" Param0="u16ObjectIndexInclOffset" Level="Verbose">0x{0:X4} 'Enable Info' may be available</WriteLine>
				</TestStep>
				<TestStep Name="CheckIfObjectExists">
					<GetObjectDescription SourceDictionary="odDeviceObjectdictionary" Index="u16ObjectIndexInclOffset" SubIndex="-1"></GetObjectDescription>
					<GotoOnSuccess>CallCheckObjectDescription</GotoOnSuccess>
				</TestStep>
				<TestStep Name="HandleNotExistingObject">
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>2</Value2>
							<WriteLine Id="18" Param0="u16ObjectIndexInclOffset" Level="Warning">The object 0x{0:X4} 'Enable Info' does not exists.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>1</Value2>
							<WriteLine Id="19" Param0="u16ObjectIndexInclOffset" Level="Output">The object 0x{0:X4} 'Enable Info' does not exists.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>ProfileLoopEnd</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CallCheckObjectDescription">
					<Description Id="20" Param0="u16ObjectIndexInclOffset" Level="Output">Verify the object description 0x{0:X4} 'Enable Info'.</Description>
					<CallTestFunction Name="CheckObjectDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"offline"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>"Enable Info"</Parameter>
						<Parameter>null</Parameter>
						<Parameter>9</Parameter>
						<Parameter>-1</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<GotoStep>ProfileLoopEnd</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="InitEntryBittOffset">
					<SetVariable Target="i32CurrentBitOffset">0</SetVariable>
				</TestStep>
				<TestStep Name="StartSi0">
					<Description Id="21" Level="Output">Start validate SubIndex0</Description>
					<WriteLine Id="22" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : Subindex '0x{0:X}.0'</WriteLine>
				</TestStep>
				<TestStep Name="CallSi0CheckEntryDescription">
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"offline"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>0</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>null</Parameter>
						<Parameter>5</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>null</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>null</Parameter>
						<Parameter>null</Parameter>
						<Parameter>null</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>8</Parameter>
						<Parameter>i32CurrentBitOffset</Parameter>
						<Parameter>true</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="EndSi0">
					<SetVariable Target="i32CurrentBitOffset">16</SetVariable>
				</TestStep>
				<TestStep Name="StartSi1">
					<Description Id="23" Level="Output">Start validate SubIndex1</Description>
					<WriteLine Id="24" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : Subindex '0x{0:X}.1'</WriteLine>
				</TestStep>
				<TestStep Name="SetSi1RequiredLevel">
					<SetVariable Target="bObjectOrEntryRequiredLevel">1</SetVariable>
					<WriteLine Id="25" Param0="u16ObjectIndexInclOffset" Level="Verbose">0x{0:X4}.1 'Joule Mode Enabled' may be available</WriteLine>
				</TestStep>
				<TestStep Name="CheckIfSi1Exists">
					<GetObjectDescription SourceDictionary="odDeviceObjectdictionary" Index="u16ObjectIndexInclOffset" SubIndex="1">
						<Type>u16DataType</Type>
					</GetObjectDescription>
					<GotoOnFailure>HandleNotExistingSi1</GotoOnFailure>
				</TestStep>
				<TestStep>
					<Compare>
						<NotEqual>
							<Value1>u16DataType</Value1>
							<Value2>0</Value2>
							<GotoStep>CallSi1CheckEntryDescription</GotoStep>
						</NotEqual>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="26" Param0="u16ObjectIndexInclOffset" Level="Verbose">The entry 0x{0:X4}.1 is defined as a padding entry.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>EndSi1</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="HandleNotExistingSi1">
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="27" Param0="u16ObjectIndexInclOffset" Level="Output">The entry 0x{0:X4}.1 does not exists.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>EndSi1</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CallSi1CheckEntryDescription">
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"offline"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>1</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>"Joule Mode Enabled"</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>null</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>i32CurrentBitOffset</Parameter>
						<Parameter>true</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="EndSi1">
					<SetVariable Target="i32CurrentBitOffset">-1</SetVariable>
				</TestStep>
				<TestStep Name="StartSi2">
					<Description Id="28" Level="Output">Start validate SubIndex2</Description>
					<WriteLine Id="29" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : Subindex '0x{0:X}.2'</WriteLine>
				</TestStep>
				<TestStep Name="SetSi2RequiredLevel">
					<SetVariable Target="bObjectOrEntryRequiredLevel">1</SetVariable>
					<WriteLine Id="30" Param0="u16ObjectIndexInclOffset" Level="Verbose">0x{0:X4}.2 'Process Timer Enabled' may be available</WriteLine>
				</TestStep>
				<TestStep Name="CheckIfSi2Exists">
					<GetObjectDescription SourceDictionary="odDeviceObjectdictionary" Index="u16ObjectIndexInclOffset" SubIndex="2">
						<Type>u16DataType</Type>
					</GetObjectDescription>
					<GotoOnFailure>HandleNotExistingSi2</GotoOnFailure>
				</TestStep>
				<TestStep>
					<Compare>
						<NotEqual>
							<Value1>u16DataType</Value1>
							<Value2>0</Value2>
							<GotoStep>CallSi2CheckEntryDescription</GotoStep>
						</NotEqual>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="31" Param0="u16ObjectIndexInclOffset" Level="Verbose">The entry 0x{0:X4}.2 is defined as a padding entry.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>EndSi2</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="HandleNotExistingSi2">
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="32" Param0="u16ObjectIndexInclOffset" Level="Output">The entry 0x{0:X4}.2 does not exists.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>EndSi2</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CallSi2CheckEntryDescription">
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"offline"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>2</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>"Process Timer Enabled"</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>null</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>true</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="EndSi2"></TestStep>
				<TestStep Name="CheckReservedEntryRange_3_to_255">
					<Description Id="33" Level="Output">Start check reserved entry range 3 to 255</Description>
					<CallTestFunction Name="CheckReservedEntryRange">
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>3</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>odDeviceObjectdictionary</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="ProfileLoopEnd">
					<Compare>
						<Equal>
							<Value1>bAtLeastOneModuleMatch</Value1>
							<Value2>false</Value2>
							<GotoStep>HandleAbortTestCaseOnFirstError</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="HandleAbortTestCaseOnFirstError">
					<Compare>
						<Equal>
							<Value1>bAbortTestCaseOnFirstError</Value1>
							<Value2>false</Value2>
							<GotoStep>ProfileLoopIncrement</GotoStep>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>strResult</Value1>
							<Value2>EmptyString</Value2>
							<GotoStep>ProfileLoopIncrement</GotoStep>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="34" Level="Output">Object verification for all following modules abort because an error was already detected for the current module.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>END</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="ProfileLoopIncrement">
					<SetVariable Target="u32ProfileCounter">u32ProfileCounter + 1</SetVariable>
					<Compare>
						<Greater>
							<Value1>u32CurrentProfilesLength</Value1>
							<Value2>u32ProfileCounter</Value2>
							<GotoStep>ProfileLoopStart</GotoStep>
						</Greater>
					</Compare>
				</TestStep>
				<TestStep Name="END">
					<Compare>
						<NotEqual>
							<Value1>bAtLeastOneModuleMatch</Value1>
							<Value2>true</Value2>
							<SkipCase Id="35">SKIP TEST(no module/channel supports the current profile)</SkipCase>
						</NotEqual>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bDEBUG</Value1>
							<Value2>true</Value2>
							<WriteLine Id="36" Param0="strResult" Level="Verbose">DEBUG | Result : '{0}'.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>strResult</Value1>
							<Value2>EmptyString</Value2>
							<ReturnSuccess Id="37">Test succeed</ReturnSuccess>
						</Equal>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>strResult</Value1>
							<Value2>EmptyString</Value2>
							<RaiseError Id="38"></RaiseError>
						</NotEqual>
					</Compare>
				</TestStep>
			</TestCase>
			<TestCase Name="online | 0x9006 (Enable Info)" CaseId="14">
				<Description>
					<PreCondition>- The device profile is 5003
- The module profile is 2011
- The submodule profile is 0</PreCondition>
					<Action>- Iterate over all online defined modules/channels and if the PreCondition matches the following operations are done:
- Get the online description of object 0x9006(+module specific offset) 'Enable Info' and all entries
 Check:
    (Name)
    BitSize
    DataType
    Rx / Tx mappable
    Default Data
    MinData
    Flags       </Action>
					<PostCondition>Error if
- mandatory object / entry is not defined
- an optional object exists and the entries are invalid
- Object / entry description does not match with the specification</PostCondition>
					<ProposalForSolution>- Define the missing objects
- correct object / entry description</ProposalForSolution>
					<References>
						<Reference Specification="ETG.5003.2011"></Reference>
					</References>
					<Mandatory>true</Mandatory>
				</Description>
				<TestStep Name="InitResult">
					<SetVariable Target="strResult">EmptyString</SetVariable>
				</TestStep>
				<TestStep Name="CheckIfOdAvailable">
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Mailbox</Value1>
							<Value2>false</Value2>
							<SkipCase Id="1">DuT does not support mailbox.</SkipCase>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Mailbox.CoE</Value1>
							<Value2>false</Value2>
							<SkipCase Id="2">DuT does not support CoE.</SkipCase>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Mailbox.CoE.SdoInfo</Value1>
							<Value2>false</Value2>
							<SkipCase Id="3">DuT does not support SDO Info.</SkipCase>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="InitAtLeastOneProfileMatch">
					<SetVariable Target="bAtLeastOneModuleMatch">false</SetVariable>
				</TestStep>
				<TestStep Name="GetCurrentProfileList">
					<SizeOf UInt32Var="u32Tmp">arrOnlineProfiles</SizeOf>
					<Compare>
						<Equal>
							<Value1>u32Tmp</Value1>
							<Value2>0</Value2>
							<CallTestFunction Name="GetCurrentProfileList">
								<Parameter>"online"</Parameter>
								<Parameter>"SafeOP"</Parameter>
								<OutParameter>arrOnlineProfiles</OutParameter>
							</CallTestFunction>
						</Equal>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>u32Tmp</Value1>
							<Value2>0</Value2>
							<WriteLine Id="4" Param0="arrOnlineProfiles" Level="Verbose">Use previously created profile list ({0})</WriteLine>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep>
					<SizeOf UInt32Var="u32Tmp">arrOnlineProfiles</SizeOf>
				</TestStep>
				<TestStep>
					<InitArray TargetArray="arrCurrentProfiles" Length="u32Tmp"></InitArray>
				</TestStep>
				<TestStep>
					<CopyArray>
						<SourceArray>arrOnlineProfiles</SourceArray>
						<DestinationArray>arrCurrentProfiles</DestinationArray>
						<Length>u32Tmp</Length>
					</CopyArray>
				</TestStep>
				<TestStep Name="InitProfileLoopCounter">
					<SetVariable Target="u32ProfileCounter">0</SetVariable>
				</TestStep>
				<TestStep Name="GetProfileArrayLength">
					<SizeOf UInt32Var="u32CurrentProfilesLength">arrCurrentProfiles</SizeOf>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="5" Param0="u32CurrentProfilesLength" Level="Verbose">'{0}' Profile(s) defined online.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>u32CurrentProfilesLength</Value1>
							<Value2>0</Value2>
							<SkipCase Id="6">Skip case | no profile defined.</SkipCase>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="ProfileLoopStart">
					<GetArrayItem SourceArray="arrCurrentProfiles" Target="strTmpString" Index="u32ProfileCounter"></GetArrayItem>
				</TestStep>
				<TestStep Name="CheckProfileInformationString">
					<Compare>
						<Equal>
							<Value1>strTmpString</Value1>
							<Value2>null</Value2>
							<RaiseError Id="7" Param0="u32ProfileCounter">Profile Info element [{0}] is null.</RaiseError>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>strTmpString</Value1>
							<Value2>EmptyString</Value2>
							<RaiseError Id="8" Param0="u32ProfileCounter">Profile Info element [{0}] is an empty string.</RaiseError>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="GetDeviceProfile">
					<CallTestFunction Name="GetDeviceProfile">
						<Parameter>strTmpString</Parameter>
						<OutParameter>uint16CurDeviceProfile</OutParameter>
					</CallTestFunction>
				</TestStep>
				<TestStep Name="GetModuleProfile">
					<CallTestFunction Name="GetModuleProfile">
						<Parameter>strTmpString</Parameter>
						<OutParameter>uint16CurModuleProfile</OutParameter>
					</CallTestFunction>
				</TestStep>
				<TestStep Name="GetSubModuleProfile">
					<CallTestFunction Name="GetSubModuleProfile">
						<Parameter>strTmpString</Parameter>
						<OutParameter>uint16CurSubModuleProfile</OutParameter>
					</CallTestFunction>
				</TestStep>
				<TestStep Name="DumpProfileInfo">
					<Description Id="9" Param0="uint16CurDeviceProfile" Param1="uint16CurModuleProfile" Param2="uint16CurSubModuleProfile" Param3="u32ProfileCounter" Level="Output">Module[{3}] : DeviceProfile '{0}' ; ModuleProfile '{1}' ; SubModuleProfile '{2}'</Description>
					<Compare>
						<Equal>
							<Value1>bIgnoreProfileID</Value1>
							<Value2>true</Value2>
							<GotoStep>IndicateThatAtleastOneModuleMatch</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CompareDeviceProfile">
					<Compare>
						<NotEqual>
							<Value1>uint16CurDeviceProfile</Value1>
							<Value2>5003</Value2>
							<WriteLine Id="10" Param0="uint16CurDeviceProfile" Level="Output">Skip Profile  (Test Device Profile '5003' != Cur Device Profile '{0}')</WriteLine>
						</NotEqual>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>uint16CurDeviceProfile</Value1>
							<Value2>5003</Value2>
							<GotoStep>ProfileLoopEnd</GotoStep>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep Name="CompareModuleProfile">
					<Compare>
						<NotEqual>
							<Value1>uint16CurModuleProfile</Value1>
							<Value2>2011</Value2>
							<WriteLine Id="11" Param0="uint16CurModuleProfile" Level="Output">Skip Profile  (Test Module Profile '2011' != Cur Module Profile '{0}')</WriteLine>
						</NotEqual>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>uint16CurModuleProfile</Value1>
							<Value2>2011</Value2>
							<GotoStep>ProfileLoopEnd</GotoStep>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep Name="CompareSubModuleProfile">
					<Compare>
						<NotEqual>
							<Value1>uint16CurSubModuleProfile</Value1>
							<Value2>0</Value2>
							<WriteLine Id="12" Param0="uint16CurSubModuleProfile" Level="Output">Skip Profile  (Test SubModule Profile '0' != Cur SubModule Profile '{0}')</WriteLine>
						</NotEqual>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>uint16CurSubModuleProfile</Value1>
							<Value2>0</Value2>
							<GotoStep>ProfileLoopEnd</GotoStep>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep Name="IndicateThatAtleastOneModuleMatch">
					<SetVariable Target="bAtLeastOneModuleMatch">true</SetVariable>
				</TestStep>
				<TestStep Name="GetObjectIndexInclOffset">
					<SetVariable Target="u16ObjectIndexInclOffset">#x9006 + (u32ProfileCounter * #x10)</SetVariable>
					<WriteLine Id="13" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : ObjectIndex '0x{0:X}'</WriteLine>
				</TestStep>
				<TestStep Name="LoadDeviceObjectDictionary">
					<Description Id="14" Level="Verbose">Load 'online' object dictionary for testing.</Description>
					<GetObjectDictionary Target="odDeviceObjectdictionary">
						<DictionaryType>Online</DictionaryType>
					</GetObjectDictionary>
					<RaiseErrorOnFailure Id="15">VerifyObject : failed to load online object dictionary.</RaiseErrorOnFailure>
				</TestStep>
				<TestStep Name="SetObjectRequiredLevel">
					<SetVariable Target="bObjectOrEntryRequiredLevel">1</SetVariable>
					<WriteLine Id="16" Param0="u16ObjectIndexInclOffset" Level="Verbose">0x{0:X4} 'Enable Info' may be available</WriteLine>
				</TestStep>
				<TestStep Name="CheckIfObjectExists">
					<GetObjectDescription SourceDictionary="odDeviceObjectdictionary" Index="u16ObjectIndexInclOffset" SubIndex="-1"></GetObjectDescription>
					<GotoOnSuccess>CallCheckObjectDescription</GotoOnSuccess>
				</TestStep>
				<TestStep Name="HandleNotExistingObject">
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>2</Value2>
							<WriteLine Id="17" Param0="u16ObjectIndexInclOffset" Level="Warning">The object 0x{0:X4} 'Enable Info' does not exists.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>1</Value2>
							<WriteLine Id="18" Param0="u16ObjectIndexInclOffset" Level="Output">The object 0x{0:X4} 'Enable Info' does not exists.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>ProfileLoopEnd</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CallCheckObjectDescription">
					<Description Id="19" Param0="u16ObjectIndexInclOffset" Level="Output">Verify the object description 0x{0:X4} 'Enable Info'.</Description>
					<CallTestFunction Name="CheckObjectDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"online"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>"Enable Info"</Parameter>
						<Parameter>null</Parameter>
						<Parameter>9</Parameter>
						<Parameter>-1</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<GotoStep>ProfileLoopEnd</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="InitEntryBittOffset">
					<SetVariable Target="i32CurrentBitOffset">0</SetVariable>
				</TestStep>
				<TestStep Name="StartSi0">
					<Description Id="20" Level="Output">Start validate SubIndex0</Description>
					<WriteLine Id="21" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : Subindex '0x{0:X}.0'</WriteLine>
				</TestStep>
				<TestStep Name="CallSi0CheckEntryDescription">
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"online"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>0</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>null</Parameter>
						<Parameter>5</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>null</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>null</Parameter>
						<Parameter>null</Parameter>
						<Parameter>null</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>8</Parameter>
						<Parameter>i32CurrentBitOffset</Parameter>
						<Parameter>true</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="EndSi0">
					<SetVariable Target="i32CurrentBitOffset">16</SetVariable>
				</TestStep>
				<TestStep Name="StartSi1">
					<Description Id="22" Level="Output">Start validate SubIndex1</Description>
					<WriteLine Id="23" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : Subindex '0x{0:X}.1'</WriteLine>
				</TestStep>
				<TestStep Name="SetSi1RequiredLevel">
					<SetVariable Target="bObjectOrEntryRequiredLevel">1</SetVariable>
					<WriteLine Id="24" Param0="u16ObjectIndexInclOffset" Level="Verbose">0x{0:X4}.1 'Joule Mode Enabled' may be available</WriteLine>
				</TestStep>
				<TestStep Name="CheckIfSi1Exists">
					<GetObjectDescription SourceDictionary="odDeviceObjectdictionary" Index="u16ObjectIndexInclOffset" SubIndex="1">
						<Type>u16DataType</Type>
					</GetObjectDescription>
					<GotoOnFailure>HandleNotExistingSi1</GotoOnFailure>
				</TestStep>
				<TestStep>
					<Compare>
						<NotEqual>
							<Value1>u16DataType</Value1>
							<Value2>0</Value2>
							<GotoStep>CallSi1CheckEntryDescription</GotoStep>
						</NotEqual>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="25" Param0="u16ObjectIndexInclOffset" Level="Verbose">The entry 0x{0:X4}.1 is defined as a padding entry.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>EndSi1</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="HandleNotExistingSi1">
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="26" Param0="u16ObjectIndexInclOffset" Level="Output">The entry 0x{0:X4}.1 does not exists.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>EndSi1</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CallSi1CheckEntryDescription">
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"online"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>1</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>"Joule Mode Enabled"</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>null</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>i32CurrentBitOffset</Parameter>
						<Parameter>true</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="EndSi1">
					<SetVariable Target="i32CurrentBitOffset">-1</SetVariable>
				</TestStep>
				<TestStep Name="StartSi2">
					<Description Id="27" Level="Output">Start validate SubIndex2</Description>
					<WriteLine Id="28" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : Subindex '0x{0:X}.2'</WriteLine>
				</TestStep>
				<TestStep Name="SetSi2RequiredLevel">
					<SetVariable Target="bObjectOrEntryRequiredLevel">1</SetVariable>
					<WriteLine Id="29" Param0="u16ObjectIndexInclOffset" Level="Verbose">0x{0:X4}.2 'Process Timer Enabled' may be available</WriteLine>
				</TestStep>
				<TestStep Name="CheckIfSi2Exists">
					<GetObjectDescription SourceDictionary="odDeviceObjectdictionary" Index="u16ObjectIndexInclOffset" SubIndex="2">
						<Type>u16DataType</Type>
					</GetObjectDescription>
					<GotoOnFailure>HandleNotExistingSi2</GotoOnFailure>
				</TestStep>
				<TestStep>
					<Compare>
						<NotEqual>
							<Value1>u16DataType</Value1>
							<Value2>0</Value2>
							<GotoStep>CallSi2CheckEntryDescription</GotoStep>
						</NotEqual>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="30" Param0="u16ObjectIndexInclOffset" Level="Verbose">The entry 0x{0:X4}.2 is defined as a padding entry.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>EndSi2</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="HandleNotExistingSi2">
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="31" Param0="u16ObjectIndexInclOffset" Level="Output">The entry 0x{0:X4}.2 does not exists.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>EndSi2</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CallSi2CheckEntryDescription">
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"online"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>2</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>"Process Timer Enabled"</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>null</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>true</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="EndSi2"></TestStep>
				<TestStep Name="CheckReservedEntryRange_3_to_255">
					<Description Id="32" Level="Output">Start check reserved entry range 3 to 255</Description>
					<CallTestFunction Name="CheckReservedEntryRange">
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>3</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>odDeviceObjectdictionary</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="ProfileLoopEnd">
					<Compare>
						<Equal>
							<Value1>bAtLeastOneModuleMatch</Value1>
							<Value2>false</Value2>
							<GotoStep>HandleAbortTestCaseOnFirstError</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="HandleAbortTestCaseOnFirstError">
					<Compare>
						<Equal>
							<Value1>bAbortTestCaseOnFirstError</Value1>
							<Value2>false</Value2>
							<GotoStep>ProfileLoopIncrement</GotoStep>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>strResult</Value1>
							<Value2>EmptyString</Value2>
							<GotoStep>ProfileLoopIncrement</GotoStep>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="33" Level="Output">Object verification for all following modules abort because an error was already detected for the current module.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>END</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="ProfileLoopIncrement">
					<SetVariable Target="u32ProfileCounter">u32ProfileCounter + 1</SetVariable>
					<Compare>
						<Greater>
							<Value1>u32CurrentProfilesLength</Value1>
							<Value2>u32ProfileCounter</Value2>
							<GotoStep>ProfileLoopStart</GotoStep>
						</Greater>
					</Compare>
				</TestStep>
				<TestStep Name="END">
					<Compare>
						<NotEqual>
							<Value1>bAtLeastOneModuleMatch</Value1>
							<Value2>true</Value2>
							<SkipCase Id="34">SKIP TEST(no module/channel supports the current profile)</SkipCase>
						</NotEqual>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bDEBUG</Value1>
							<Value2>true</Value2>
							<WriteLine Id="35" Param0="strResult" Level="Verbose">DEBUG | Result : '{0}'.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>strResult</Value1>
							<Value2>EmptyString</Value2>
							<ReturnSuccess Id="36">Test succeed</ReturnSuccess>
						</Equal>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>strResult</Value1>
							<Value2>EmptyString</Value2>
							<RaiseError Id="37"></RaiseError>
						</NotEqual>
					</Compare>
				</TestStep>
			</TestCase>
			<TestCase Name="offline | 0x9007 (Joule Mode Info)" CaseId="15">
				<Description>
					<PreCondition>- The device profile is 5003
- The module profile is 2011
- The submodule profile is 0</PreCondition>
					<Action>- Iterate over all offline defined modules/channels and if the PreCondition matches the following operations are done:
- Get the offline description of object 0x9007(+module specific offset) 'Joule Mode Info' and all entries
 Check:
    (Name)
    BitSize
    DataType
    Rx / Tx mappable
    Default Data
    MinData
    Flags       </Action>
					<PostCondition>Error if
- mandatory object / entry is not defined
- an optional object exists and the entries are invalid
- Object / entry description does not match with the specification</PostCondition>
					<ProposalForSolution>- Define the missing objects
- correct object / entry description</ProposalForSolution>
					<References>
						<Reference Specification="ETG.5003.2011"></Reference>
					</References>
					<Mandatory>true</Mandatory>
				</Description>
				<TestStep Name="InitResult">
					<SetVariable Target="strResult">EmptyString</SetVariable>
				</TestStep>
				<TestStep Name="CheckIfOdAvailable">
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Mailbox</Value1>
							<Value2>false</Value2>
							<SkipCase Id="1">DuT does not support mailbox.</SkipCase>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Mailbox.CoE</Value1>
							<Value2>false</Value2>
							<SkipCase Id="2">DuT does not support CoE.</SkipCase>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep>
					<GetObjectDictionary Target="odDeviceObjectdictionary">
						<DictionaryType>Offline</DictionaryType>
					</GetObjectDictionary>
					<SkipOnFailure Id="3">No offline object dictionary defined.</SkipOnFailure>
				</TestStep>
				<TestStep>
					<GetObjectList Count="u32Tmp" Target="odDeviceObjectdictionaryList" SourceDict="odDeviceObjectdictionary"></GetObjectList>
					<Compare>
						<Equal>
							<Value1>u32Tmp</Value1>
							<Value2>0</Value2>
							<SkipCase Id="4">No offline object dictionary defined.</SkipCase>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="InitAtLeastOneProfileMatch">
					<SetVariable Target="bAtLeastOneModuleMatch">false</SetVariable>
				</TestStep>
				<TestStep Name="GetCurrentProfileList">
					<SizeOf UInt32Var="u32Tmp">arrOfflineProfiles</SizeOf>
					<Compare>
						<Equal>
							<Value1>u32Tmp</Value1>
							<Value2>0</Value2>
							<CallTestFunction Name="GetCurrentProfileList">
								<Parameter>"offline"</Parameter>
								<Parameter>"SafeOP"</Parameter>
								<OutParameter>arrOfflineProfiles</OutParameter>
							</CallTestFunction>
						</Equal>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>u32Tmp</Value1>
							<Value2>0</Value2>
							<WriteLine Id="5" Param0="arrOfflineProfiles" Level="Verbose">Use previously created profile list ({0})</WriteLine>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep>
					<SizeOf UInt32Var="u32Tmp">arrOfflineProfiles</SizeOf>
				</TestStep>
				<TestStep>
					<InitArray TargetArray="arrCurrentProfiles" Length="u32Tmp"></InitArray>
				</TestStep>
				<TestStep>
					<CopyArray>
						<SourceArray>arrOfflineProfiles</SourceArray>
						<DestinationArray>arrCurrentProfiles</DestinationArray>
						<Length>u32Tmp</Length>
					</CopyArray>
				</TestStep>
				<TestStep Name="InitProfileLoopCounter">
					<SetVariable Target="u32ProfileCounter">0</SetVariable>
				</TestStep>
				<TestStep Name="GetProfileArrayLength">
					<SizeOf UInt32Var="u32CurrentProfilesLength">arrCurrentProfiles</SizeOf>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="6" Param0="u32CurrentProfilesLength" Level="Verbose">'{0}' Profile(s) defined offline.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>u32CurrentProfilesLength</Value1>
							<Value2>0</Value2>
							<SkipCase Id="7">Skip case | no profile defined.</SkipCase>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="ProfileLoopStart">
					<GetArrayItem SourceArray="arrCurrentProfiles" Target="strTmpString" Index="u32ProfileCounter"></GetArrayItem>
				</TestStep>
				<TestStep Name="CheckProfileInformationString">
					<Compare>
						<Equal>
							<Value1>strTmpString</Value1>
							<Value2>null</Value2>
							<RaiseError Id="8" Param0="u32ProfileCounter">Profile Info element [{0}] is null.</RaiseError>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>strTmpString</Value1>
							<Value2>EmptyString</Value2>
							<RaiseError Id="9" Param0="u32ProfileCounter">Profile Info element [{0}] is an empty string.</RaiseError>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="GetDeviceProfile">
					<CallTestFunction Name="GetDeviceProfile">
						<Parameter>strTmpString</Parameter>
						<OutParameter>uint16CurDeviceProfile</OutParameter>
					</CallTestFunction>
				</TestStep>
				<TestStep Name="GetModuleProfile">
					<CallTestFunction Name="GetModuleProfile">
						<Parameter>strTmpString</Parameter>
						<OutParameter>uint16CurModuleProfile</OutParameter>
					</CallTestFunction>
				</TestStep>
				<TestStep Name="GetSubModuleProfile">
					<CallTestFunction Name="GetSubModuleProfile">
						<Parameter>strTmpString</Parameter>
						<OutParameter>uint16CurSubModuleProfile</OutParameter>
					</CallTestFunction>
				</TestStep>
				<TestStep Name="DumpProfileInfo">
					<Description Id="10" Param0="uint16CurDeviceProfile" Param1="uint16CurModuleProfile" Param2="uint16CurSubModuleProfile" Param3="u32ProfileCounter" Level="Output">Module[{3}] : DeviceProfile '{0}' ; ModuleProfile '{1}' ; SubModuleProfile '{2}'</Description>
					<Compare>
						<Equal>
							<Value1>bIgnoreProfileID</Value1>
							<Value2>true</Value2>
							<GotoStep>IndicateThatAtleastOneModuleMatch</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CompareDeviceProfile">
					<Compare>
						<NotEqual>
							<Value1>uint16CurDeviceProfile</Value1>
							<Value2>5003</Value2>
							<WriteLine Id="11" Param0="uint16CurDeviceProfile" Level="Output">Skip Profile  (Test Device Profile '5003' != Cur Device Profile '{0}')</WriteLine>
						</NotEqual>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>uint16CurDeviceProfile</Value1>
							<Value2>5003</Value2>
							<GotoStep>ProfileLoopEnd</GotoStep>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep Name="CompareModuleProfile">
					<Compare>
						<NotEqual>
							<Value1>uint16CurModuleProfile</Value1>
							<Value2>2011</Value2>
							<WriteLine Id="12" Param0="uint16CurModuleProfile" Level="Output">Skip Profile  (Test Module Profile '2011' != Cur Module Profile '{0}')</WriteLine>
						</NotEqual>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>uint16CurModuleProfile</Value1>
							<Value2>2011</Value2>
							<GotoStep>ProfileLoopEnd</GotoStep>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep Name="CompareSubModuleProfile">
					<Compare>
						<NotEqual>
							<Value1>uint16CurSubModuleProfile</Value1>
							<Value2>0</Value2>
							<WriteLine Id="13" Param0="uint16CurSubModuleProfile" Level="Output">Skip Profile  (Test SubModule Profile '0' != Cur SubModule Profile '{0}')</WriteLine>
						</NotEqual>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>uint16CurSubModuleProfile</Value1>
							<Value2>0</Value2>
							<GotoStep>ProfileLoopEnd</GotoStep>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep Name="IndicateThatAtleastOneModuleMatch">
					<SetVariable Target="bAtLeastOneModuleMatch">true</SetVariable>
				</TestStep>
				<TestStep Name="GetObjectIndexInclOffset">
					<SetVariable Target="u16ObjectIndexInclOffset">#x9007 + (u32ProfileCounter * #x10)</SetVariable>
					<WriteLine Id="14" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : ObjectIndex '0x{0:X}'</WriteLine>
				</TestStep>
				<TestStep Name="LoadDeviceObjectDictionary">
					<Description Id="15" Level="Verbose">Load 'offline' object dictionary for testing.</Description>
					<GetObjectDictionary Target="odDeviceObjectdictionary">
						<DictionaryType>Offline</DictionaryType>
					</GetObjectDictionary>
					<RaiseErrorOnFailure Id="16">VerifyObject : failed to load offline object dictionary.</RaiseErrorOnFailure>
				</TestStep>
				<TestStep Name="SetObjectRequiredLevel">
					<SetVariable Target="bObjectOrEntryRequiredLevel">1</SetVariable>
					<WriteLine Id="17" Param0="u16ObjectIndexInclOffset" Level="Verbose">0x{0:X4} 'Joule Mode Info' may be available</WriteLine>
				</TestStep>
				<TestStep Name="CheckIfObjectExists">
					<GetObjectDescription SourceDictionary="odDeviceObjectdictionary" Index="u16ObjectIndexInclOffset" SubIndex="-1"></GetObjectDescription>
					<GotoOnSuccess>CallCheckObjectDescription</GotoOnSuccess>
				</TestStep>
				<TestStep Name="HandleNotExistingObject">
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>2</Value2>
							<WriteLine Id="18" Param0="u16ObjectIndexInclOffset" Level="Warning">The object 0x{0:X4} 'Joule Mode Info' does not exists.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>1</Value2>
							<WriteLine Id="19" Param0="u16ObjectIndexInclOffset" Level="Output">The object 0x{0:X4} 'Joule Mode Info' does not exists.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>ProfileLoopEnd</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CallCheckObjectDescription">
					<Description Id="20" Param0="u16ObjectIndexInclOffset" Level="Output">Verify the object description 0x{0:X4} 'Joule Mode Info'.</Description>
					<CallTestFunction Name="CheckObjectDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"offline"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>"Joule Mode Info"</Parameter>
						<Parameter>null</Parameter>
						<Parameter>9</Parameter>
						<Parameter>-1</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<GotoStep>ProfileLoopEnd</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="InitEntryBittOffset">
					<SetVariable Target="i32CurrentBitOffset">0</SetVariable>
				</TestStep>
				<TestStep Name="StartSi0">
					<Description Id="21" Level="Output">Start validate SubIndex0</Description>
					<WriteLine Id="22" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : Subindex '0x{0:X}.0'</WriteLine>
				</TestStep>
				<TestStep Name="CallSi0CheckEntryDescription">
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"offline"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>0</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>null</Parameter>
						<Parameter>5</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>null</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>null</Parameter>
						<Parameter>null</Parameter>
						<Parameter>null</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>8</Parameter>
						<Parameter>i32CurrentBitOffset</Parameter>
						<Parameter>true</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="EndSi0">
					<SetVariable Target="i32CurrentBitOffset">16</SetVariable>
				</TestStep>
				<TestStep Name="StartSi1">
					<Description Id="23" Level="Output">Start validate SubIndex1</Description>
					<WriteLine Id="24" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : Subindex '0x{0:X}.1'</WriteLine>
				</TestStep>
				<TestStep Name="SetSi1RequiredLevel">
					<SetVariable Target="bObjectOrEntryRequiredLevel">1</SetVariable>
					<WriteLine Id="25" Param0="u16ObjectIndexInclOffset" Level="Verbose">0x{0:X4}.1 'Actual Remaining Joule Mode Energy' may be available</WriteLine>
				</TestStep>
				<TestStep Name="CheckIfSi1Exists">
					<GetObjectDescription SourceDictionary="odDeviceObjectdictionary" Index="u16ObjectIndexInclOffset" SubIndex="1">
						<Type>u16DataType</Type>
					</GetObjectDescription>
					<GotoOnFailure>HandleNotExistingSi1</GotoOnFailure>
				</TestStep>
				<TestStep>
					<Compare>
						<NotEqual>
							<Value1>u16DataType</Value1>
							<Value2>0</Value2>
							<GotoStep>CallSi1CheckEntryDescription</GotoStep>
						</NotEqual>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="26" Param0="u16ObjectIndexInclOffset" Level="Verbose">The entry 0x{0:X4}.1 is defined as a padding entry.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>EndSi1</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="HandleNotExistingSi1">
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="27" Param0="u16ObjectIndexInclOffset" Level="Output">The entry 0x{0:X4}.1 does not exists.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>EndSi1</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CallSi1CheckEntryDescription">
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"offline"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>1</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>"Actual Remaining Joule Mode Energy"</Parameter>
						<Parameter>8</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>null</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>32</Parameter>
						<Parameter>i32CurrentBitOffset</Parameter>
						<Parameter>true</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="EndSi1">
					<SetVariable Target="i32CurrentBitOffset">-1</SetVariable>
				</TestStep>
				<TestStep Name="CheckReservedEntryRange_2_to_255">
					<Description Id="28" Level="Output">Start check reserved entry range 2 to 255</Description>
					<CallTestFunction Name="CheckReservedEntryRange">
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>2</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>odDeviceObjectdictionary</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="ProfileLoopEnd">
					<Compare>
						<Equal>
							<Value1>bAtLeastOneModuleMatch</Value1>
							<Value2>false</Value2>
							<GotoStep>HandleAbortTestCaseOnFirstError</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="HandleAbortTestCaseOnFirstError">
					<Compare>
						<Equal>
							<Value1>bAbortTestCaseOnFirstError</Value1>
							<Value2>false</Value2>
							<GotoStep>ProfileLoopIncrement</GotoStep>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>strResult</Value1>
							<Value2>EmptyString</Value2>
							<GotoStep>ProfileLoopIncrement</GotoStep>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="29" Level="Output">Object verification for all following modules abort because an error was already detected for the current module.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>END</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="ProfileLoopIncrement">
					<SetVariable Target="u32ProfileCounter">u32ProfileCounter + 1</SetVariable>
					<Compare>
						<Greater>
							<Value1>u32CurrentProfilesLength</Value1>
							<Value2>u32ProfileCounter</Value2>
							<GotoStep>ProfileLoopStart</GotoStep>
						</Greater>
					</Compare>
				</TestStep>
				<TestStep Name="END">
					<Compare>
						<NotEqual>
							<Value1>bAtLeastOneModuleMatch</Value1>
							<Value2>true</Value2>
							<SkipCase Id="30">SKIP TEST(no module/channel supports the current profile)</SkipCase>
						</NotEqual>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bDEBUG</Value1>
							<Value2>true</Value2>
							<WriteLine Id="31" Param0="strResult" Level="Verbose">DEBUG | Result : '{0}'.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>strResult</Value1>
							<Value2>EmptyString</Value2>
							<ReturnSuccess Id="32">Test succeed</ReturnSuccess>
						</Equal>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>strResult</Value1>
							<Value2>EmptyString</Value2>
							<RaiseError Id="33"></RaiseError>
						</NotEqual>
					</Compare>
				</TestStep>
			</TestCase>
			<TestCase Name="online | 0x9007 (Joule Mode Info)" CaseId="16">
				<Description>
					<PreCondition>- The device profile is 5003
- The module profile is 2011
- The submodule profile is 0</PreCondition>
					<Action>- Iterate over all online defined modules/channels and if the PreCondition matches the following operations are done:
- Get the online description of object 0x9007(+module specific offset) 'Joule Mode Info' and all entries
 Check:
    (Name)
    BitSize
    DataType
    Rx / Tx mappable
    Default Data
    MinData
    Flags       </Action>
					<PostCondition>Error if
- mandatory object / entry is not defined
- an optional object exists and the entries are invalid
- Object / entry description does not match with the specification</PostCondition>
					<ProposalForSolution>- Define the missing objects
- correct object / entry description</ProposalForSolution>
					<References>
						<Reference Specification="ETG.5003.2011"></Reference>
					</References>
					<Mandatory>true</Mandatory>
				</Description>
				<TestStep Name="InitResult">
					<SetVariable Target="strResult">EmptyString</SetVariable>
				</TestStep>
				<TestStep Name="CheckIfOdAvailable">
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Mailbox</Value1>
							<Value2>false</Value2>
							<SkipCase Id="1">DuT does not support mailbox.</SkipCase>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Mailbox.CoE</Value1>
							<Value2>false</Value2>
							<SkipCase Id="2">DuT does not support CoE.</SkipCase>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Mailbox.CoE.SdoInfo</Value1>
							<Value2>false</Value2>
							<SkipCase Id="3">DuT does not support SDO Info.</SkipCase>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="InitAtLeastOneProfileMatch">
					<SetVariable Target="bAtLeastOneModuleMatch">false</SetVariable>
				</TestStep>
				<TestStep Name="GetCurrentProfileList">
					<SizeOf UInt32Var="u32Tmp">arrOnlineProfiles</SizeOf>
					<Compare>
						<Equal>
							<Value1>u32Tmp</Value1>
							<Value2>0</Value2>
							<CallTestFunction Name="GetCurrentProfileList">
								<Parameter>"online"</Parameter>
								<Parameter>"SafeOP"</Parameter>
								<OutParameter>arrOnlineProfiles</OutParameter>
							</CallTestFunction>
						</Equal>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>u32Tmp</Value1>
							<Value2>0</Value2>
							<WriteLine Id="4" Param0="arrOnlineProfiles" Level="Verbose">Use previously created profile list ({0})</WriteLine>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep>
					<SizeOf UInt32Var="u32Tmp">arrOnlineProfiles</SizeOf>
				</TestStep>
				<TestStep>
					<InitArray TargetArray="arrCurrentProfiles" Length="u32Tmp"></InitArray>
				</TestStep>
				<TestStep>
					<CopyArray>
						<SourceArray>arrOnlineProfiles</SourceArray>
						<DestinationArray>arrCurrentProfiles</DestinationArray>
						<Length>u32Tmp</Length>
					</CopyArray>
				</TestStep>
				<TestStep Name="InitProfileLoopCounter">
					<SetVariable Target="u32ProfileCounter">0</SetVariable>
				</TestStep>
				<TestStep Name="GetProfileArrayLength">
					<SizeOf UInt32Var="u32CurrentProfilesLength">arrCurrentProfiles</SizeOf>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="5" Param0="u32CurrentProfilesLength" Level="Verbose">'{0}' Profile(s) defined online.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>u32CurrentProfilesLength</Value1>
							<Value2>0</Value2>
							<SkipCase Id="6">Skip case | no profile defined.</SkipCase>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="ProfileLoopStart">
					<GetArrayItem SourceArray="arrCurrentProfiles" Target="strTmpString" Index="u32ProfileCounter"></GetArrayItem>
				</TestStep>
				<TestStep Name="CheckProfileInformationString">
					<Compare>
						<Equal>
							<Value1>strTmpString</Value1>
							<Value2>null</Value2>
							<RaiseError Id="7" Param0="u32ProfileCounter">Profile Info element [{0}] is null.</RaiseError>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>strTmpString</Value1>
							<Value2>EmptyString</Value2>
							<RaiseError Id="8" Param0="u32ProfileCounter">Profile Info element [{0}] is an empty string.</RaiseError>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="GetDeviceProfile">
					<CallTestFunction Name="GetDeviceProfile">
						<Parameter>strTmpString</Parameter>
						<OutParameter>uint16CurDeviceProfile</OutParameter>
					</CallTestFunction>
				</TestStep>
				<TestStep Name="GetModuleProfile">
					<CallTestFunction Name="GetModuleProfile">
						<Parameter>strTmpString</Parameter>
						<OutParameter>uint16CurModuleProfile</OutParameter>
					</CallTestFunction>
				</TestStep>
				<TestStep Name="GetSubModuleProfile">
					<CallTestFunction Name="GetSubModuleProfile">
						<Parameter>strTmpString</Parameter>
						<OutParameter>uint16CurSubModuleProfile</OutParameter>
					</CallTestFunction>
				</TestStep>
				<TestStep Name="DumpProfileInfo">
					<Description Id="9" Param0="uint16CurDeviceProfile" Param1="uint16CurModuleProfile" Param2="uint16CurSubModuleProfile" Param3="u32ProfileCounter" Level="Output">Module[{3}] : DeviceProfile '{0}' ; ModuleProfile '{1}' ; SubModuleProfile '{2}'</Description>
					<Compare>
						<Equal>
							<Value1>bIgnoreProfileID</Value1>
							<Value2>true</Value2>
							<GotoStep>IndicateThatAtleastOneModuleMatch</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CompareDeviceProfile">
					<Compare>
						<NotEqual>
							<Value1>uint16CurDeviceProfile</Value1>
							<Value2>5003</Value2>
							<WriteLine Id="10" Param0="uint16CurDeviceProfile" Level="Output">Skip Profile  (Test Device Profile '5003' != Cur Device Profile '{0}')</WriteLine>
						</NotEqual>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>uint16CurDeviceProfile</Value1>
							<Value2>5003</Value2>
							<GotoStep>ProfileLoopEnd</GotoStep>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep Name="CompareModuleProfile">
					<Compare>
						<NotEqual>
							<Value1>uint16CurModuleProfile</Value1>
							<Value2>2011</Value2>
							<WriteLine Id="11" Param0="uint16CurModuleProfile" Level="Output">Skip Profile  (Test Module Profile '2011' != Cur Module Profile '{0}')</WriteLine>
						</NotEqual>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>uint16CurModuleProfile</Value1>
							<Value2>2011</Value2>
							<GotoStep>ProfileLoopEnd</GotoStep>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep Name="CompareSubModuleProfile">
					<Compare>
						<NotEqual>
							<Value1>uint16CurSubModuleProfile</Value1>
							<Value2>0</Value2>
							<WriteLine Id="12" Param0="uint16CurSubModuleProfile" Level="Output">Skip Profile  (Test SubModule Profile '0' != Cur SubModule Profile '{0}')</WriteLine>
						</NotEqual>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>uint16CurSubModuleProfile</Value1>
							<Value2>0</Value2>
							<GotoStep>ProfileLoopEnd</GotoStep>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep Name="IndicateThatAtleastOneModuleMatch">
					<SetVariable Target="bAtLeastOneModuleMatch">true</SetVariable>
				</TestStep>
				<TestStep Name="GetObjectIndexInclOffset">
					<SetVariable Target="u16ObjectIndexInclOffset">#x9007 + (u32ProfileCounter * #x10)</SetVariable>
					<WriteLine Id="13" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : ObjectIndex '0x{0:X}'</WriteLine>
				</TestStep>
				<TestStep Name="LoadDeviceObjectDictionary">
					<Description Id="14" Level="Verbose">Load 'online' object dictionary for testing.</Description>
					<GetObjectDictionary Target="odDeviceObjectdictionary">
						<DictionaryType>Online</DictionaryType>
					</GetObjectDictionary>
					<RaiseErrorOnFailure Id="15">VerifyObject : failed to load online object dictionary.</RaiseErrorOnFailure>
				</TestStep>
				<TestStep Name="SetObjectRequiredLevel">
					<SetVariable Target="bObjectOrEntryRequiredLevel">1</SetVariable>
					<WriteLine Id="16" Param0="u16ObjectIndexInclOffset" Level="Verbose">0x{0:X4} 'Joule Mode Info' may be available</WriteLine>
				</TestStep>
				<TestStep Name="CheckIfObjectExists">
					<GetObjectDescription SourceDictionary="odDeviceObjectdictionary" Index="u16ObjectIndexInclOffset" SubIndex="-1"></GetObjectDescription>
					<GotoOnSuccess>CallCheckObjectDescription</GotoOnSuccess>
				</TestStep>
				<TestStep Name="HandleNotExistingObject">
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>2</Value2>
							<WriteLine Id="17" Param0="u16ObjectIndexInclOffset" Level="Warning">The object 0x{0:X4} 'Joule Mode Info' does not exists.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>1</Value2>
							<WriteLine Id="18" Param0="u16ObjectIndexInclOffset" Level="Output">The object 0x{0:X4} 'Joule Mode Info' does not exists.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>ProfileLoopEnd</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CallCheckObjectDescription">
					<Description Id="19" Param0="u16ObjectIndexInclOffset" Level="Output">Verify the object description 0x{0:X4} 'Joule Mode Info'.</Description>
					<CallTestFunction Name="CheckObjectDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"online"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>"Joule Mode Info"</Parameter>
						<Parameter>null</Parameter>
						<Parameter>9</Parameter>
						<Parameter>-1</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<GotoStep>ProfileLoopEnd</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="InitEntryBittOffset">
					<SetVariable Target="i32CurrentBitOffset">0</SetVariable>
				</TestStep>
				<TestStep Name="StartSi0">
					<Description Id="20" Level="Output">Start validate SubIndex0</Description>
					<WriteLine Id="21" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : Subindex '0x{0:X}.0'</WriteLine>
				</TestStep>
				<TestStep Name="CallSi0CheckEntryDescription">
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"online"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>0</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>null</Parameter>
						<Parameter>5</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>null</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>null</Parameter>
						<Parameter>null</Parameter>
						<Parameter>null</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>8</Parameter>
						<Parameter>i32CurrentBitOffset</Parameter>
						<Parameter>true</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="EndSi0">
					<SetVariable Target="i32CurrentBitOffset">16</SetVariable>
				</TestStep>
				<TestStep Name="StartSi1">
					<Description Id="22" Level="Output">Start validate SubIndex1</Description>
					<WriteLine Id="23" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : Subindex '0x{0:X}.1'</WriteLine>
				</TestStep>
				<TestStep Name="SetSi1RequiredLevel">
					<SetVariable Target="bObjectOrEntryRequiredLevel">1</SetVariable>
					<WriteLine Id="24" Param0="u16ObjectIndexInclOffset" Level="Verbose">0x{0:X4}.1 'Actual Remaining Joule Mode Energy' may be available</WriteLine>
				</TestStep>
				<TestStep Name="CheckIfSi1Exists">
					<GetObjectDescription SourceDictionary="odDeviceObjectdictionary" Index="u16ObjectIndexInclOffset" SubIndex="1">
						<Type>u16DataType</Type>
					</GetObjectDescription>
					<GotoOnFailure>HandleNotExistingSi1</GotoOnFailure>
				</TestStep>
				<TestStep>
					<Compare>
						<NotEqual>
							<Value1>u16DataType</Value1>
							<Value2>0</Value2>
							<GotoStep>CallSi1CheckEntryDescription</GotoStep>
						</NotEqual>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="25" Param0="u16ObjectIndexInclOffset" Level="Verbose">The entry 0x{0:X4}.1 is defined as a padding entry.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>EndSi1</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="HandleNotExistingSi1">
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="26" Param0="u16ObjectIndexInclOffset" Level="Output">The entry 0x{0:X4}.1 does not exists.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>EndSi1</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CallSi1CheckEntryDescription">
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"online"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>1</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>"Actual Remaining Joule Mode Energy"</Parameter>
						<Parameter>8</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>null</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>32</Parameter>
						<Parameter>i32CurrentBitOffset</Parameter>
						<Parameter>true</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="EndSi1">
					<SetVariable Target="i32CurrentBitOffset">-1</SetVariable>
				</TestStep>
				<TestStep Name="CheckReservedEntryRange_2_to_255">
					<Description Id="27" Level="Output">Start check reserved entry range 2 to 255</Description>
					<CallTestFunction Name="CheckReservedEntryRange">
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>2</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>odDeviceObjectdictionary</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="ProfileLoopEnd">
					<Compare>
						<Equal>
							<Value1>bAtLeastOneModuleMatch</Value1>
							<Value2>false</Value2>
							<GotoStep>HandleAbortTestCaseOnFirstError</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="HandleAbortTestCaseOnFirstError">
					<Compare>
						<Equal>
							<Value1>bAbortTestCaseOnFirstError</Value1>
							<Value2>false</Value2>
							<GotoStep>ProfileLoopIncrement</GotoStep>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>strResult</Value1>
							<Value2>EmptyString</Value2>
							<GotoStep>ProfileLoopIncrement</GotoStep>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="28" Level="Output">Object verification for all following modules abort because an error was already detected for the current module.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>END</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="ProfileLoopIncrement">
					<SetVariable Target="u32ProfileCounter">u32ProfileCounter + 1</SetVariable>
					<Compare>
						<Greater>
							<Value1>u32CurrentProfilesLength</Value1>
							<Value2>u32ProfileCounter</Value2>
							<GotoStep>ProfileLoopStart</GotoStep>
						</Greater>
					</Compare>
				</TestStep>
				<TestStep Name="END">
					<Compare>
						<NotEqual>
							<Value1>bAtLeastOneModuleMatch</Value1>
							<Value2>true</Value2>
							<SkipCase Id="29">SKIP TEST(no module/channel supports the current profile)</SkipCase>
						</NotEqual>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bDEBUG</Value1>
							<Value2>true</Value2>
							<WriteLine Id="30" Param0="strResult" Level="Verbose">DEBUG | Result : '{0}'.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>strResult</Value1>
							<Value2>EmptyString</Value2>
							<ReturnSuccess Id="31">Test succeed</ReturnSuccess>
						</Equal>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>strResult</Value1>
							<Value2>EmptyString</Value2>
							<RaiseError Id="32"></RaiseError>
						</NotEqual>
					</Compare>
				</TestStep>
			</TestCase>
			<TestCase Name="offline | 0x9008 (Process Timer Info)" CaseId="17">
				<Description>
					<PreCondition>- The device profile is 5003
- The module profile is 2011
- The submodule profile is 0</PreCondition>
					<Action>- Iterate over all offline defined modules/channels and if the PreCondition matches the following operations are done:
- Get the offline description of object 0x9008(+module specific offset) 'Process Timer Info' and all entries
 Check:
    (Name)
    BitSize
    DataType
    Rx / Tx mappable
    Default Data
    MinData
    Flags       </Action>
					<PostCondition>Error if
- mandatory object / entry is not defined
- an optional object exists and the entries are invalid
- Object / entry description does not match with the specification</PostCondition>
					<ProposalForSolution>- Define the missing objects
- correct object / entry description</ProposalForSolution>
					<References>
						<Reference Specification="ETG.5003.2011"></Reference>
					</References>
					<Mandatory>true</Mandatory>
				</Description>
				<TestStep Name="InitResult">
					<SetVariable Target="strResult">EmptyString</SetVariable>
				</TestStep>
				<TestStep Name="CheckIfOdAvailable">
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Mailbox</Value1>
							<Value2>false</Value2>
							<SkipCase Id="1">DuT does not support mailbox.</SkipCase>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Mailbox.CoE</Value1>
							<Value2>false</Value2>
							<SkipCase Id="2">DuT does not support CoE.</SkipCase>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep>
					<GetObjectDictionary Target="odDeviceObjectdictionary">
						<DictionaryType>Offline</DictionaryType>
					</GetObjectDictionary>
					<SkipOnFailure Id="3">No offline object dictionary defined.</SkipOnFailure>
				</TestStep>
				<TestStep>
					<GetObjectList Count="u32Tmp" Target="odDeviceObjectdictionaryList" SourceDict="odDeviceObjectdictionary"></GetObjectList>
					<Compare>
						<Equal>
							<Value1>u32Tmp</Value1>
							<Value2>0</Value2>
							<SkipCase Id="4">No offline object dictionary defined.</SkipCase>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="InitAtLeastOneProfileMatch">
					<SetVariable Target="bAtLeastOneModuleMatch">false</SetVariable>
				</TestStep>
				<TestStep Name="GetCurrentProfileList">
					<SizeOf UInt32Var="u32Tmp">arrOfflineProfiles</SizeOf>
					<Compare>
						<Equal>
							<Value1>u32Tmp</Value1>
							<Value2>0</Value2>
							<CallTestFunction Name="GetCurrentProfileList">
								<Parameter>"offline"</Parameter>
								<Parameter>"SafeOP"</Parameter>
								<OutParameter>arrOfflineProfiles</OutParameter>
							</CallTestFunction>
						</Equal>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>u32Tmp</Value1>
							<Value2>0</Value2>
							<WriteLine Id="5" Param0="arrOfflineProfiles" Level="Verbose">Use previously created profile list ({0})</WriteLine>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep>
					<SizeOf UInt32Var="u32Tmp">arrOfflineProfiles</SizeOf>
				</TestStep>
				<TestStep>
					<InitArray TargetArray="arrCurrentProfiles" Length="u32Tmp"></InitArray>
				</TestStep>
				<TestStep>
					<CopyArray>
						<SourceArray>arrOfflineProfiles</SourceArray>
						<DestinationArray>arrCurrentProfiles</DestinationArray>
						<Length>u32Tmp</Length>
					</CopyArray>
				</TestStep>
				<TestStep Name="InitProfileLoopCounter">
					<SetVariable Target="u32ProfileCounter">0</SetVariable>
				</TestStep>
				<TestStep Name="GetProfileArrayLength">
					<SizeOf UInt32Var="u32CurrentProfilesLength">arrCurrentProfiles</SizeOf>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="6" Param0="u32CurrentProfilesLength" Level="Verbose">'{0}' Profile(s) defined offline.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>u32CurrentProfilesLength</Value1>
							<Value2>0</Value2>
							<SkipCase Id="7">Skip case | no profile defined.</SkipCase>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="ProfileLoopStart">
					<GetArrayItem SourceArray="arrCurrentProfiles" Target="strTmpString" Index="u32ProfileCounter"></GetArrayItem>
				</TestStep>
				<TestStep Name="CheckProfileInformationString">
					<Compare>
						<Equal>
							<Value1>strTmpString</Value1>
							<Value2>null</Value2>
							<RaiseError Id="8" Param0="u32ProfileCounter">Profile Info element [{0}] is null.</RaiseError>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>strTmpString</Value1>
							<Value2>EmptyString</Value2>
							<RaiseError Id="9" Param0="u32ProfileCounter">Profile Info element [{0}] is an empty string.</RaiseError>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="GetDeviceProfile">
					<CallTestFunction Name="GetDeviceProfile">
						<Parameter>strTmpString</Parameter>
						<OutParameter>uint16CurDeviceProfile</OutParameter>
					</CallTestFunction>
				</TestStep>
				<TestStep Name="GetModuleProfile">
					<CallTestFunction Name="GetModuleProfile">
						<Parameter>strTmpString</Parameter>
						<OutParameter>uint16CurModuleProfile</OutParameter>
					</CallTestFunction>
				</TestStep>
				<TestStep Name="GetSubModuleProfile">
					<CallTestFunction Name="GetSubModuleProfile">
						<Parameter>strTmpString</Parameter>
						<OutParameter>uint16CurSubModuleProfile</OutParameter>
					</CallTestFunction>
				</TestStep>
				<TestStep Name="DumpProfileInfo">
					<Description Id="10" Param0="uint16CurDeviceProfile" Param1="uint16CurModuleProfile" Param2="uint16CurSubModuleProfile" Param3="u32ProfileCounter" Level="Output">Module[{3}] : DeviceProfile '{0}' ; ModuleProfile '{1}' ; SubModuleProfile '{2}'</Description>
					<Compare>
						<Equal>
							<Value1>bIgnoreProfileID</Value1>
							<Value2>true</Value2>
							<GotoStep>IndicateThatAtleastOneModuleMatch</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CompareDeviceProfile">
					<Compare>
						<NotEqual>
							<Value1>uint16CurDeviceProfile</Value1>
							<Value2>5003</Value2>
							<WriteLine Id="11" Param0="uint16CurDeviceProfile" Level="Output">Skip Profile  (Test Device Profile '5003' != Cur Device Profile '{0}')</WriteLine>
						</NotEqual>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>uint16CurDeviceProfile</Value1>
							<Value2>5003</Value2>
							<GotoStep>ProfileLoopEnd</GotoStep>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep Name="CompareModuleProfile">
					<Compare>
						<NotEqual>
							<Value1>uint16CurModuleProfile</Value1>
							<Value2>2011</Value2>
							<WriteLine Id="12" Param0="uint16CurModuleProfile" Level="Output">Skip Profile  (Test Module Profile '2011' != Cur Module Profile '{0}')</WriteLine>
						</NotEqual>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>uint16CurModuleProfile</Value1>
							<Value2>2011</Value2>
							<GotoStep>ProfileLoopEnd</GotoStep>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep Name="CompareSubModuleProfile">
					<Compare>
						<NotEqual>
							<Value1>uint16CurSubModuleProfile</Value1>
							<Value2>0</Value2>
							<WriteLine Id="13" Param0="uint16CurSubModuleProfile" Level="Output">Skip Profile  (Test SubModule Profile '0' != Cur SubModule Profile '{0}')</WriteLine>
						</NotEqual>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>uint16CurSubModuleProfile</Value1>
							<Value2>0</Value2>
							<GotoStep>ProfileLoopEnd</GotoStep>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep Name="IndicateThatAtleastOneModuleMatch">
					<SetVariable Target="bAtLeastOneModuleMatch">true</SetVariable>
				</TestStep>
				<TestStep Name="GetObjectIndexInclOffset">
					<SetVariable Target="u16ObjectIndexInclOffset">#x9008 + (u32ProfileCounter * #x10)</SetVariable>
					<WriteLine Id="14" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : ObjectIndex '0x{0:X}'</WriteLine>
				</TestStep>
				<TestStep Name="LoadDeviceObjectDictionary">
					<Description Id="15" Level="Verbose">Load 'offline' object dictionary for testing.</Description>
					<GetObjectDictionary Target="odDeviceObjectdictionary">
						<DictionaryType>Offline</DictionaryType>
					</GetObjectDictionary>
					<RaiseErrorOnFailure Id="16">VerifyObject : failed to load offline object dictionary.</RaiseErrorOnFailure>
				</TestStep>
				<TestStep Name="SetObjectRequiredLevel">
					<SetVariable Target="bObjectOrEntryRequiredLevel">1</SetVariable>
					<WriteLine Id="17" Param0="u16ObjectIndexInclOffset" Level="Verbose">0x{0:X4} 'Process Timer Info' may be available</WriteLine>
				</TestStep>
				<TestStep Name="CheckIfObjectExists">
					<GetObjectDescription SourceDictionary="odDeviceObjectdictionary" Index="u16ObjectIndexInclOffset" SubIndex="-1"></GetObjectDescription>
					<GotoOnSuccess>CallCheckObjectDescription</GotoOnSuccess>
				</TestStep>
				<TestStep Name="HandleNotExistingObject">
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>2</Value2>
							<WriteLine Id="18" Param0="u16ObjectIndexInclOffset" Level="Warning">The object 0x{0:X4} 'Process Timer Info' does not exists.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>1</Value2>
							<WriteLine Id="19" Param0="u16ObjectIndexInclOffset" Level="Output">The object 0x{0:X4} 'Process Timer Info' does not exists.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>ProfileLoopEnd</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CallCheckObjectDescription">
					<Description Id="20" Param0="u16ObjectIndexInclOffset" Level="Output">Verify the object description 0x{0:X4} 'Process Timer Info'.</Description>
					<CallTestFunction Name="CheckObjectDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"offline"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>"Process Timer Info"</Parameter>
						<Parameter>null</Parameter>
						<Parameter>9</Parameter>
						<Parameter>-1</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<GotoStep>ProfileLoopEnd</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="InitEntryBittOffset">
					<SetVariable Target="i32CurrentBitOffset">0</SetVariable>
				</TestStep>
				<TestStep Name="StartSi0">
					<Description Id="21" Level="Output">Start validate SubIndex0</Description>
					<WriteLine Id="22" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : Subindex '0x{0:X}.0'</WriteLine>
				</TestStep>
				<TestStep Name="CallSi0CheckEntryDescription">
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"offline"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>0</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>null</Parameter>
						<Parameter>5</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>null</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>null</Parameter>
						<Parameter>null</Parameter>
						<Parameter>null</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>8</Parameter>
						<Parameter>i32CurrentBitOffset</Parameter>
						<Parameter>true</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="EndSi0">
					<SetVariable Target="i32CurrentBitOffset">16</SetVariable>
				</TestStep>
				<TestStep Name="StartSi1">
					<Description Id="23" Level="Output">Start validate SubIndex1</Description>
					<WriteLine Id="24" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : Subindex '0x{0:X}.1'</WriteLine>
				</TestStep>
				<TestStep Name="SetSi1RequiredLevel">
					<SetVariable Target="bObjectOrEntryRequiredLevel">1</SetVariable>
					<WriteLine Id="25" Param0="u16ObjectIndexInclOffset" Level="Verbose">0x{0:X4}.1 'Actual Remaining Process Time' may be available</WriteLine>
				</TestStep>
				<TestStep Name="CheckIfSi1Exists">
					<GetObjectDescription SourceDictionary="odDeviceObjectdictionary" Index="u16ObjectIndexInclOffset" SubIndex="1">
						<Type>u16DataType</Type>
					</GetObjectDescription>
					<GotoOnFailure>HandleNotExistingSi1</GotoOnFailure>
				</TestStep>
				<TestStep>
					<Compare>
						<NotEqual>
							<Value1>u16DataType</Value1>
							<Value2>0</Value2>
							<GotoStep>CallSi1CheckEntryDescription</GotoStep>
						</NotEqual>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="26" Param0="u16ObjectIndexInclOffset" Level="Verbose">The entry 0x{0:X4}.1 is defined as a padding entry.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>EndSi1</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="HandleNotExistingSi1">
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="27" Param0="u16ObjectIndexInclOffset" Level="Output">The entry 0x{0:X4}.1 does not exists.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>EndSi1</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CallSi1CheckEntryDescription">
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"offline"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>1</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>"Actual Remaining Process Time"</Parameter>
						<Parameter>8</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>null</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>32</Parameter>
						<Parameter>i32CurrentBitOffset</Parameter>
						<Parameter>true</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="EndSi1">
					<SetVariable Target="i32CurrentBitOffset">-1</SetVariable>
				</TestStep>
				<TestStep Name="CheckReservedEntryRange_2_to_255">
					<Description Id="28" Level="Output">Start check reserved entry range 2 to 255</Description>
					<CallTestFunction Name="CheckReservedEntryRange">
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>2</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>odDeviceObjectdictionary</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="ProfileLoopEnd">
					<Compare>
						<Equal>
							<Value1>bAtLeastOneModuleMatch</Value1>
							<Value2>false</Value2>
							<GotoStep>HandleAbortTestCaseOnFirstError</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="HandleAbortTestCaseOnFirstError">
					<Compare>
						<Equal>
							<Value1>bAbortTestCaseOnFirstError</Value1>
							<Value2>false</Value2>
							<GotoStep>ProfileLoopIncrement</GotoStep>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>strResult</Value1>
							<Value2>EmptyString</Value2>
							<GotoStep>ProfileLoopIncrement</GotoStep>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="29" Level="Output">Object verification for all following modules abort because an error was already detected for the current module.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>END</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="ProfileLoopIncrement">
					<SetVariable Target="u32ProfileCounter">u32ProfileCounter + 1</SetVariable>
					<Compare>
						<Greater>
							<Value1>u32CurrentProfilesLength</Value1>
							<Value2>u32ProfileCounter</Value2>
							<GotoStep>ProfileLoopStart</GotoStep>
						</Greater>
					</Compare>
				</TestStep>
				<TestStep Name="END">
					<Compare>
						<NotEqual>
							<Value1>bAtLeastOneModuleMatch</Value1>
							<Value2>true</Value2>
							<SkipCase Id="30">SKIP TEST(no module/channel supports the current profile)</SkipCase>
						</NotEqual>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bDEBUG</Value1>
							<Value2>true</Value2>
							<WriteLine Id="31" Param0="strResult" Level="Verbose">DEBUG | Result : '{0}'.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>strResult</Value1>
							<Value2>EmptyString</Value2>
							<ReturnSuccess Id="32">Test succeed</ReturnSuccess>
						</Equal>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>strResult</Value1>
							<Value2>EmptyString</Value2>
							<RaiseError Id="33"></RaiseError>
						</NotEqual>
					</Compare>
				</TestStep>
			</TestCase>
			<TestCase Name="online | 0x9008 (Process Timer Info)" CaseId="18">
				<Description>
					<PreCondition>- The device profile is 5003
- The module profile is 2011
- The submodule profile is 0</PreCondition>
					<Action>- Iterate over all online defined modules/channels and if the PreCondition matches the following operations are done:
- Get the online description of object 0x9008(+module specific offset) 'Process Timer Info' and all entries
 Check:
    (Name)
    BitSize
    DataType
    Rx / Tx mappable
    Default Data
    MinData
    Flags       </Action>
					<PostCondition>Error if
- mandatory object / entry is not defined
- an optional object exists and the entries are invalid
- Object / entry description does not match with the specification</PostCondition>
					<ProposalForSolution>- Define the missing objects
- correct object / entry description</ProposalForSolution>
					<References>
						<Reference Specification="ETG.5003.2011"></Reference>
					</References>
					<Mandatory>true</Mandatory>
				</Description>
				<TestStep Name="InitResult">
					<SetVariable Target="strResult">EmptyString</SetVariable>
				</TestStep>
				<TestStep Name="CheckIfOdAvailable">
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Mailbox</Value1>
							<Value2>false</Value2>
							<SkipCase Id="1">DuT does not support mailbox.</SkipCase>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Mailbox.CoE</Value1>
							<Value2>false</Value2>
							<SkipCase Id="2">DuT does not support CoE.</SkipCase>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Mailbox.CoE.SdoInfo</Value1>
							<Value2>false</Value2>
							<SkipCase Id="3">DuT does not support SDO Info.</SkipCase>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="InitAtLeastOneProfileMatch">
					<SetVariable Target="bAtLeastOneModuleMatch">false</SetVariable>
				</TestStep>
				<TestStep Name="GetCurrentProfileList">
					<SizeOf UInt32Var="u32Tmp">arrOnlineProfiles</SizeOf>
					<Compare>
						<Equal>
							<Value1>u32Tmp</Value1>
							<Value2>0</Value2>
							<CallTestFunction Name="GetCurrentProfileList">
								<Parameter>"online"</Parameter>
								<Parameter>"SafeOP"</Parameter>
								<OutParameter>arrOnlineProfiles</OutParameter>
							</CallTestFunction>
						</Equal>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>u32Tmp</Value1>
							<Value2>0</Value2>
							<WriteLine Id="4" Param0="arrOnlineProfiles" Level="Verbose">Use previously created profile list ({0})</WriteLine>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep>
					<SizeOf UInt32Var="u32Tmp">arrOnlineProfiles</SizeOf>
				</TestStep>
				<TestStep>
					<InitArray TargetArray="arrCurrentProfiles" Length="u32Tmp"></InitArray>
				</TestStep>
				<TestStep>
					<CopyArray>
						<SourceArray>arrOnlineProfiles</SourceArray>
						<DestinationArray>arrCurrentProfiles</DestinationArray>
						<Length>u32Tmp</Length>
					</CopyArray>
				</TestStep>
				<TestStep Name="InitProfileLoopCounter">
					<SetVariable Target="u32ProfileCounter">0</SetVariable>
				</TestStep>
				<TestStep Name="GetProfileArrayLength">
					<SizeOf UInt32Var="u32CurrentProfilesLength">arrCurrentProfiles</SizeOf>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="5" Param0="u32CurrentProfilesLength" Level="Verbose">'{0}' Profile(s) defined online.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>u32CurrentProfilesLength</Value1>
							<Value2>0</Value2>
							<SkipCase Id="6">Skip case | no profile defined.</SkipCase>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="ProfileLoopStart">
					<GetArrayItem SourceArray="arrCurrentProfiles" Target="strTmpString" Index="u32ProfileCounter"></GetArrayItem>
				</TestStep>
				<TestStep Name="CheckProfileInformationString">
					<Compare>
						<Equal>
							<Value1>strTmpString</Value1>
							<Value2>null</Value2>
							<RaiseError Id="7" Param0="u32ProfileCounter">Profile Info element [{0}] is null.</RaiseError>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>strTmpString</Value1>
							<Value2>EmptyString</Value2>
							<RaiseError Id="8" Param0="u32ProfileCounter">Profile Info element [{0}] is an empty string.</RaiseError>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="GetDeviceProfile">
					<CallTestFunction Name="GetDeviceProfile">
						<Parameter>strTmpString</Parameter>
						<OutParameter>uint16CurDeviceProfile</OutParameter>
					</CallTestFunction>
				</TestStep>
				<TestStep Name="GetModuleProfile">
					<CallTestFunction Name="GetModuleProfile">
						<Parameter>strTmpString</Parameter>
						<OutParameter>uint16CurModuleProfile</OutParameter>
					</CallTestFunction>
				</TestStep>
				<TestStep Name="GetSubModuleProfile">
					<CallTestFunction Name="GetSubModuleProfile">
						<Parameter>strTmpString</Parameter>
						<OutParameter>uint16CurSubModuleProfile</OutParameter>
					</CallTestFunction>
				</TestStep>
				<TestStep Name="DumpProfileInfo">
					<Description Id="9" Param0="uint16CurDeviceProfile" Param1="uint16CurModuleProfile" Param2="uint16CurSubModuleProfile" Param3="u32ProfileCounter" Level="Output">Module[{3}] : DeviceProfile '{0}' ; ModuleProfile '{1}' ; SubModuleProfile '{2}'</Description>
					<Compare>
						<Equal>
							<Value1>bIgnoreProfileID</Value1>
							<Value2>true</Value2>
							<GotoStep>IndicateThatAtleastOneModuleMatch</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CompareDeviceProfile">
					<Compare>
						<NotEqual>
							<Value1>uint16CurDeviceProfile</Value1>
							<Value2>5003</Value2>
							<WriteLine Id="10" Param0="uint16CurDeviceProfile" Level="Output">Skip Profile  (Test Device Profile '5003' != Cur Device Profile '{0}')</WriteLine>
						</NotEqual>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>uint16CurDeviceProfile</Value1>
							<Value2>5003</Value2>
							<GotoStep>ProfileLoopEnd</GotoStep>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep Name="CompareModuleProfile">
					<Compare>
						<NotEqual>
							<Value1>uint16CurModuleProfile</Value1>
							<Value2>2011</Value2>
							<WriteLine Id="11" Param0="uint16CurModuleProfile" Level="Output">Skip Profile  (Test Module Profile '2011' != Cur Module Profile '{0}')</WriteLine>
						</NotEqual>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>uint16CurModuleProfile</Value1>
							<Value2>2011</Value2>
							<GotoStep>ProfileLoopEnd</GotoStep>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep Name="CompareSubModuleProfile">
					<Compare>
						<NotEqual>
							<Value1>uint16CurSubModuleProfile</Value1>
							<Value2>0</Value2>
							<WriteLine Id="12" Param0="uint16CurSubModuleProfile" Level="Output">Skip Profile  (Test SubModule Profile '0' != Cur SubModule Profile '{0}')</WriteLine>
						</NotEqual>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>uint16CurSubModuleProfile</Value1>
							<Value2>0</Value2>
							<GotoStep>ProfileLoopEnd</GotoStep>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep Name="IndicateThatAtleastOneModuleMatch">
					<SetVariable Target="bAtLeastOneModuleMatch">true</SetVariable>
				</TestStep>
				<TestStep Name="GetObjectIndexInclOffset">
					<SetVariable Target="u16ObjectIndexInclOffset">#x9008 + (u32ProfileCounter * #x10)</SetVariable>
					<WriteLine Id="13" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : ObjectIndex '0x{0:X}'</WriteLine>
				</TestStep>
				<TestStep Name="LoadDeviceObjectDictionary">
					<Description Id="14" Level="Verbose">Load 'online' object dictionary for testing.</Description>
					<GetObjectDictionary Target="odDeviceObjectdictionary">
						<DictionaryType>Online</DictionaryType>
					</GetObjectDictionary>
					<RaiseErrorOnFailure Id="15">VerifyObject : failed to load online object dictionary.</RaiseErrorOnFailure>
				</TestStep>
				<TestStep Name="SetObjectRequiredLevel">
					<SetVariable Target="bObjectOrEntryRequiredLevel">1</SetVariable>
					<WriteLine Id="16" Param0="u16ObjectIndexInclOffset" Level="Verbose">0x{0:X4} 'Process Timer Info' may be available</WriteLine>
				</TestStep>
				<TestStep Name="CheckIfObjectExists">
					<GetObjectDescription SourceDictionary="odDeviceObjectdictionary" Index="u16ObjectIndexInclOffset" SubIndex="-1"></GetObjectDescription>
					<GotoOnSuccess>CallCheckObjectDescription</GotoOnSuccess>
				</TestStep>
				<TestStep Name="HandleNotExistingObject">
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>2</Value2>
							<WriteLine Id="17" Param0="u16ObjectIndexInclOffset" Level="Warning">The object 0x{0:X4} 'Process Timer Info' does not exists.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>1</Value2>
							<WriteLine Id="18" Param0="u16ObjectIndexInclOffset" Level="Output">The object 0x{0:X4} 'Process Timer Info' does not exists.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>ProfileLoopEnd</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CallCheckObjectDescription">
					<Description Id="19" Param0="u16ObjectIndexInclOffset" Level="Output">Verify the object description 0x{0:X4} 'Process Timer Info'.</Description>
					<CallTestFunction Name="CheckObjectDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"online"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>"Process Timer Info"</Parameter>
						<Parameter>null</Parameter>
						<Parameter>9</Parameter>
						<Parameter>-1</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<GotoStep>ProfileLoopEnd</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="InitEntryBittOffset">
					<SetVariable Target="i32CurrentBitOffset">0</SetVariable>
				</TestStep>
				<TestStep Name="StartSi0">
					<Description Id="20" Level="Output">Start validate SubIndex0</Description>
					<WriteLine Id="21" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : Subindex '0x{0:X}.0'</WriteLine>
				</TestStep>
				<TestStep Name="CallSi0CheckEntryDescription">
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"online"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>0</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>null</Parameter>
						<Parameter>5</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>null</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>null</Parameter>
						<Parameter>null</Parameter>
						<Parameter>null</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>8</Parameter>
						<Parameter>i32CurrentBitOffset</Parameter>
						<Parameter>true</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="EndSi0">
					<SetVariable Target="i32CurrentBitOffset">16</SetVariable>
				</TestStep>
				<TestStep Name="StartSi1">
					<Description Id="22" Level="Output">Start validate SubIndex1</Description>
					<WriteLine Id="23" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : Subindex '0x{0:X}.1'</WriteLine>
				</TestStep>
				<TestStep Name="SetSi1RequiredLevel">
					<SetVariable Target="bObjectOrEntryRequiredLevel">1</SetVariable>
					<WriteLine Id="24" Param0="u16ObjectIndexInclOffset" Level="Verbose">0x{0:X4}.1 'Actual Remaining Process Time' may be available</WriteLine>
				</TestStep>
				<TestStep Name="CheckIfSi1Exists">
					<GetObjectDescription SourceDictionary="odDeviceObjectdictionary" Index="u16ObjectIndexInclOffset" SubIndex="1">
						<Type>u16DataType</Type>
					</GetObjectDescription>
					<GotoOnFailure>HandleNotExistingSi1</GotoOnFailure>
				</TestStep>
				<TestStep>
					<Compare>
						<NotEqual>
							<Value1>u16DataType</Value1>
							<Value2>0</Value2>
							<GotoStep>CallSi1CheckEntryDescription</GotoStep>
						</NotEqual>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="25" Param0="u16ObjectIndexInclOffset" Level="Verbose">The entry 0x{0:X4}.1 is defined as a padding entry.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>EndSi1</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="HandleNotExistingSi1">
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="26" Param0="u16ObjectIndexInclOffset" Level="Output">The entry 0x{0:X4}.1 does not exists.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>EndSi1</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CallSi1CheckEntryDescription">
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"online"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>1</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>"Actual Remaining Process Time"</Parameter>
						<Parameter>8</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>null</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>32</Parameter>
						<Parameter>i32CurrentBitOffset</Parameter>
						<Parameter>true</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="EndSi1">
					<SetVariable Target="i32CurrentBitOffset">-1</SetVariable>
				</TestStep>
				<TestStep Name="CheckReservedEntryRange_2_to_255">
					<Description Id="27" Level="Output">Start check reserved entry range 2 to 255</Description>
					<CallTestFunction Name="CheckReservedEntryRange">
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>2</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>odDeviceObjectdictionary</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="ProfileLoopEnd">
					<Compare>
						<Equal>
							<Value1>bAtLeastOneModuleMatch</Value1>
							<Value2>false</Value2>
							<GotoStep>HandleAbortTestCaseOnFirstError</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="HandleAbortTestCaseOnFirstError">
					<Compare>
						<Equal>
							<Value1>bAbortTestCaseOnFirstError</Value1>
							<Value2>false</Value2>
							<GotoStep>ProfileLoopIncrement</GotoStep>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>strResult</Value1>
							<Value2>EmptyString</Value2>
							<GotoStep>ProfileLoopIncrement</GotoStep>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="28" Level="Output">Object verification for all following modules abort because an error was already detected for the current module.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>END</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="ProfileLoopIncrement">
					<SetVariable Target="u32ProfileCounter">u32ProfileCounter + 1</SetVariable>
					<Compare>
						<Greater>
							<Value1>u32CurrentProfilesLength</Value1>
							<Value2>u32ProfileCounter</Value2>
							<GotoStep>ProfileLoopStart</GotoStep>
						</Greater>
					</Compare>
				</TestStep>
				<TestStep Name="END">
					<Compare>
						<NotEqual>
							<Value1>bAtLeastOneModuleMatch</Value1>
							<Value2>true</Value2>
							<SkipCase Id="29">SKIP TEST(no module/channel supports the current profile)</SkipCase>
						</NotEqual>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bDEBUG</Value1>
							<Value2>true</Value2>
							<WriteLine Id="30" Param0="strResult" Level="Verbose">DEBUG | Result : '{0}'.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>strResult</Value1>
							<Value2>EmptyString</Value2>
							<ReturnSuccess Id="31">Test succeed</ReturnSuccess>
						</Equal>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>strResult</Value1>
							<Value2>EmptyString</Value2>
							<RaiseError Id="32"></RaiseError>
						</NotEqual>
					</Compare>
				</TestStep>
			</TestCase>
			<TestCase Name="offline | 0x9009 (Arc Info)" CaseId="19">
				<Description>
					<PreCondition>- The device profile is 5003
- The module profile is 2011
- The submodule profile is 0</PreCondition>
					<Action>- Iterate over all offline defined modules/channels and if the PreCondition matches the following operations are done:
- Get the offline description of object 0x9009(+module specific offset) 'Arc Info' and all entries
 Check:
    (Name)
    BitSize
    DataType
    Rx / Tx mappable
    Default Data
    MinData
    Flags       </Action>
					<PostCondition>Error if
- mandatory object / entry is not defined
- an optional object exists and the entries are invalid
- Object / entry description does not match with the specification</PostCondition>
					<ProposalForSolution>- Define the missing objects
- correct object / entry description</ProposalForSolution>
					<References>
						<Reference Specification="ETG.5003.2011"></Reference>
					</References>
					<Mandatory>true</Mandatory>
				</Description>
				<TestStep Name="InitResult">
					<SetVariable Target="strResult">EmptyString</SetVariable>
				</TestStep>
				<TestStep Name="CheckIfOdAvailable">
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Mailbox</Value1>
							<Value2>false</Value2>
							<SkipCase Id="1">DuT does not support mailbox.</SkipCase>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Mailbox.CoE</Value1>
							<Value2>false</Value2>
							<SkipCase Id="2">DuT does not support CoE.</SkipCase>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep>
					<GetObjectDictionary Target="odDeviceObjectdictionary">
						<DictionaryType>Offline</DictionaryType>
					</GetObjectDictionary>
					<SkipOnFailure Id="3">No offline object dictionary defined.</SkipOnFailure>
				</TestStep>
				<TestStep>
					<GetObjectList Count="u32Tmp" Target="odDeviceObjectdictionaryList" SourceDict="odDeviceObjectdictionary"></GetObjectList>
					<Compare>
						<Equal>
							<Value1>u32Tmp</Value1>
							<Value2>0</Value2>
							<SkipCase Id="4">No offline object dictionary defined.</SkipCase>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="InitAtLeastOneProfileMatch">
					<SetVariable Target="bAtLeastOneModuleMatch">false</SetVariable>
				</TestStep>
				<TestStep Name="GetCurrentProfileList">
					<SizeOf UInt32Var="u32Tmp">arrOfflineProfiles</SizeOf>
					<Compare>
						<Equal>
							<Value1>u32Tmp</Value1>
							<Value2>0</Value2>
							<CallTestFunction Name="GetCurrentProfileList">
								<Parameter>"offline"</Parameter>
								<Parameter>"SafeOP"</Parameter>
								<OutParameter>arrOfflineProfiles</OutParameter>
							</CallTestFunction>
						</Equal>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>u32Tmp</Value1>
							<Value2>0</Value2>
							<WriteLine Id="5" Param0="arrOfflineProfiles" Level="Verbose">Use previously created profile list ({0})</WriteLine>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep>
					<SizeOf UInt32Var="u32Tmp">arrOfflineProfiles</SizeOf>
				</TestStep>
				<TestStep>
					<InitArray TargetArray="arrCurrentProfiles" Length="u32Tmp"></InitArray>
				</TestStep>
				<TestStep>
					<CopyArray>
						<SourceArray>arrOfflineProfiles</SourceArray>
						<DestinationArray>arrCurrentProfiles</DestinationArray>
						<Length>u32Tmp</Length>
					</CopyArray>
				</TestStep>
				<TestStep Name="InitProfileLoopCounter">
					<SetVariable Target="u32ProfileCounter">0</SetVariable>
				</TestStep>
				<TestStep Name="GetProfileArrayLength">
					<SizeOf UInt32Var="u32CurrentProfilesLength">arrCurrentProfiles</SizeOf>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="6" Param0="u32CurrentProfilesLength" Level="Verbose">'{0}' Profile(s) defined offline.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>u32CurrentProfilesLength</Value1>
							<Value2>0</Value2>
							<SkipCase Id="7">Skip case | no profile defined.</SkipCase>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="ProfileLoopStart">
					<GetArrayItem SourceArray="arrCurrentProfiles" Target="strTmpString" Index="u32ProfileCounter"></GetArrayItem>
				</TestStep>
				<TestStep Name="CheckProfileInformationString">
					<Compare>
						<Equal>
							<Value1>strTmpString</Value1>
							<Value2>null</Value2>
							<RaiseError Id="8" Param0="u32ProfileCounter">Profile Info element [{0}] is null.</RaiseError>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>strTmpString</Value1>
							<Value2>EmptyString</Value2>
							<RaiseError Id="9" Param0="u32ProfileCounter">Profile Info element [{0}] is an empty string.</RaiseError>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="GetDeviceProfile">
					<CallTestFunction Name="GetDeviceProfile">
						<Parameter>strTmpString</Parameter>
						<OutParameter>uint16CurDeviceProfile</OutParameter>
					</CallTestFunction>
				</TestStep>
				<TestStep Name="GetModuleProfile">
					<CallTestFunction Name="GetModuleProfile">
						<Parameter>strTmpString</Parameter>
						<OutParameter>uint16CurModuleProfile</OutParameter>
					</CallTestFunction>
				</TestStep>
				<TestStep Name="GetSubModuleProfile">
					<CallTestFunction Name="GetSubModuleProfile">
						<Parameter>strTmpString</Parameter>
						<OutParameter>uint16CurSubModuleProfile</OutParameter>
					</CallTestFunction>
				</TestStep>
				<TestStep Name="DumpProfileInfo">
					<Description Id="10" Param0="uint16CurDeviceProfile" Param1="uint16CurModuleProfile" Param2="uint16CurSubModuleProfile" Param3="u32ProfileCounter" Level="Output">Module[{3}] : DeviceProfile '{0}' ; ModuleProfile '{1}' ; SubModuleProfile '{2}'</Description>
					<Compare>
						<Equal>
							<Value1>bIgnoreProfileID</Value1>
							<Value2>true</Value2>
							<GotoStep>IndicateThatAtleastOneModuleMatch</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CompareDeviceProfile">
					<Compare>
						<NotEqual>
							<Value1>uint16CurDeviceProfile</Value1>
							<Value2>5003</Value2>
							<WriteLine Id="11" Param0="uint16CurDeviceProfile" Level="Output">Skip Profile  (Test Device Profile '5003' != Cur Device Profile '{0}')</WriteLine>
						</NotEqual>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>uint16CurDeviceProfile</Value1>
							<Value2>5003</Value2>
							<GotoStep>ProfileLoopEnd</GotoStep>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep Name="CompareModuleProfile">
					<Compare>
						<NotEqual>
							<Value1>uint16CurModuleProfile</Value1>
							<Value2>2011</Value2>
							<WriteLine Id="12" Param0="uint16CurModuleProfile" Level="Output">Skip Profile  (Test Module Profile '2011' != Cur Module Profile '{0}')</WriteLine>
						</NotEqual>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>uint16CurModuleProfile</Value1>
							<Value2>2011</Value2>
							<GotoStep>ProfileLoopEnd</GotoStep>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep Name="CompareSubModuleProfile">
					<Compare>
						<NotEqual>
							<Value1>uint16CurSubModuleProfile</Value1>
							<Value2>0</Value2>
							<WriteLine Id="13" Param0="uint16CurSubModuleProfile" Level="Output">Skip Profile  (Test SubModule Profile '0' != Cur SubModule Profile '{0}')</WriteLine>
						</NotEqual>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>uint16CurSubModuleProfile</Value1>
							<Value2>0</Value2>
							<GotoStep>ProfileLoopEnd</GotoStep>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep Name="IndicateThatAtleastOneModuleMatch">
					<SetVariable Target="bAtLeastOneModuleMatch">true</SetVariable>
				</TestStep>
				<TestStep Name="GetObjectIndexInclOffset">
					<SetVariable Target="u16ObjectIndexInclOffset">#x9009 + (u32ProfileCounter * #x10)</SetVariable>
					<WriteLine Id="14" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : ObjectIndex '0x{0:X}'</WriteLine>
				</TestStep>
				<TestStep Name="LoadDeviceObjectDictionary">
					<Description Id="15" Level="Verbose">Load 'offline' object dictionary for testing.</Description>
					<GetObjectDictionary Target="odDeviceObjectdictionary">
						<DictionaryType>Offline</DictionaryType>
					</GetObjectDictionary>
					<RaiseErrorOnFailure Id="16">VerifyObject : failed to load offline object dictionary.</RaiseErrorOnFailure>
				</TestStep>
				<TestStep Name="SetObjectRequiredLevel">
					<SetVariable Target="bObjectOrEntryRequiredLevel">1</SetVariable>
					<WriteLine Id="17" Param0="u16ObjectIndexInclOffset" Level="Verbose">0x{0:X4} 'Arc Info' may be available</WriteLine>
				</TestStep>
				<TestStep Name="CheckIfObjectExists">
					<GetObjectDescription SourceDictionary="odDeviceObjectdictionary" Index="u16ObjectIndexInclOffset" SubIndex="-1"></GetObjectDescription>
					<GotoOnSuccess>CallCheckObjectDescription</GotoOnSuccess>
				</TestStep>
				<TestStep Name="HandleNotExistingObject">
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>2</Value2>
							<WriteLine Id="18" Param0="u16ObjectIndexInclOffset" Level="Warning">The object 0x{0:X4} 'Arc Info' does not exists.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>1</Value2>
							<WriteLine Id="19" Param0="u16ObjectIndexInclOffset" Level="Output">The object 0x{0:X4} 'Arc Info' does not exists.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>ProfileLoopEnd</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CallCheckObjectDescription">
					<Description Id="20" Param0="u16ObjectIndexInclOffset" Level="Output">Verify the object description 0x{0:X4} 'Arc Info'.</Description>
					<CallTestFunction Name="CheckObjectDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"offline"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>"Arc Info"</Parameter>
						<Parameter>null</Parameter>
						<Parameter>9</Parameter>
						<Parameter>-1</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<GotoStep>ProfileLoopEnd</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="InitEntryBittOffset">
					<SetVariable Target="i32CurrentBitOffset">0</SetVariable>
				</TestStep>
				<TestStep Name="StartSi0">
					<Description Id="21" Level="Output">Start validate SubIndex0</Description>
					<WriteLine Id="22" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : Subindex '0x{0:X}.0'</WriteLine>
				</TestStep>
				<TestStep Name="CallSi0CheckEntryDescription">
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"offline"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>0</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>null</Parameter>
						<Parameter>5</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>null</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>null</Parameter>
						<Parameter>null</Parameter>
						<Parameter>null</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>8</Parameter>
						<Parameter>i32CurrentBitOffset</Parameter>
						<Parameter>true</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="EndSi0">
					<SetVariable Target="i32CurrentBitOffset">16</SetVariable>
				</TestStep>
				<TestStep Name="StartSi1">
					<Description Id="23" Level="Output">Start validate SubIndex1</Description>
					<WriteLine Id="24" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : Subindex '0x{0:X}.1'</WriteLine>
				</TestStep>
				<TestStep Name="SetSi1RequiredLevel">
					<SetVariable Target="bObjectOrEntryRequiredLevel">1</SetVariable>
					<WriteLine Id="25" Param0="u16ObjectIndexInclOffset" Level="Verbose">0x{0:X4}.1 'Arc Rate' may be available</WriteLine>
				</TestStep>
				<TestStep Name="CheckIfSi1Exists">
					<GetObjectDescription SourceDictionary="odDeviceObjectdictionary" Index="u16ObjectIndexInclOffset" SubIndex="1">
						<Type>u16DataType</Type>
					</GetObjectDescription>
					<GotoOnFailure>HandleNotExistingSi1</GotoOnFailure>
				</TestStep>
				<TestStep>
					<Compare>
						<NotEqual>
							<Value1>u16DataType</Value1>
							<Value2>0</Value2>
							<GotoStep>CallSi1CheckEntryDescription</GotoStep>
						</NotEqual>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="26" Param0="u16ObjectIndexInclOffset" Level="Verbose">The entry 0x{0:X4}.1 is defined as a padding entry.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>EndSi1</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="HandleNotExistingSi1">
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="27" Param0="u16ObjectIndexInclOffset" Level="Output">The entry 0x{0:X4}.1 does not exists.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>EndSi1</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CallSi1CheckEntryDescription">
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"offline"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>1</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>"Arc Rate"</Parameter>
						<Parameter>6</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>null</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>16</Parameter>
						<Parameter>i32CurrentBitOffset</Parameter>
						<Parameter>true</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="EndSi1">
					<SetVariable Target="i32CurrentBitOffset">-1</SetVariable>
				</TestStep>
				<TestStep Name="CheckReservedEntryRange_2_to_255">
					<Description Id="28" Level="Output">Start check reserved entry range 2 to 255</Description>
					<CallTestFunction Name="CheckReservedEntryRange">
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>2</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>odDeviceObjectdictionary</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="ProfileLoopEnd">
					<Compare>
						<Equal>
							<Value1>bAtLeastOneModuleMatch</Value1>
							<Value2>false</Value2>
							<GotoStep>HandleAbortTestCaseOnFirstError</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="HandleAbortTestCaseOnFirstError">
					<Compare>
						<Equal>
							<Value1>bAbortTestCaseOnFirstError</Value1>
							<Value2>false</Value2>
							<GotoStep>ProfileLoopIncrement</GotoStep>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>strResult</Value1>
							<Value2>EmptyString</Value2>
							<GotoStep>ProfileLoopIncrement</GotoStep>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="29" Level="Output">Object verification for all following modules abort because an error was already detected for the current module.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>END</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="ProfileLoopIncrement">
					<SetVariable Target="u32ProfileCounter">u32ProfileCounter + 1</SetVariable>
					<Compare>
						<Greater>
							<Value1>u32CurrentProfilesLength</Value1>
							<Value2>u32ProfileCounter</Value2>
							<GotoStep>ProfileLoopStart</GotoStep>
						</Greater>
					</Compare>
				</TestStep>
				<TestStep Name="END">
					<Compare>
						<NotEqual>
							<Value1>bAtLeastOneModuleMatch</Value1>
							<Value2>true</Value2>
							<SkipCase Id="30">SKIP TEST(no module/channel supports the current profile)</SkipCase>
						</NotEqual>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bDEBUG</Value1>
							<Value2>true</Value2>
							<WriteLine Id="31" Param0="strResult" Level="Verbose">DEBUG | Result : '{0}'.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>strResult</Value1>
							<Value2>EmptyString</Value2>
							<ReturnSuccess Id="32">Test succeed</ReturnSuccess>
						</Equal>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>strResult</Value1>
							<Value2>EmptyString</Value2>
							<RaiseError Id="33"></RaiseError>
						</NotEqual>
					</Compare>
				</TestStep>
			</TestCase>
			<TestCase Name="online | 0x9009 (Arc Info)" CaseId="20">
				<Description>
					<PreCondition>- The device profile is 5003
- The module profile is 2011
- The submodule profile is 0</PreCondition>
					<Action>- Iterate over all online defined modules/channels and if the PreCondition matches the following operations are done:
- Get the online description of object 0x9009(+module specific offset) 'Arc Info' and all entries
 Check:
    (Name)
    BitSize
    DataType
    Rx / Tx mappable
    Default Data
    MinData
    Flags       </Action>
					<PostCondition>Error if
- mandatory object / entry is not defined
- an optional object exists and the entries are invalid
- Object / entry description does not match with the specification</PostCondition>
					<ProposalForSolution>- Define the missing objects
- correct object / entry description</ProposalForSolution>
					<References>
						<Reference Specification="ETG.5003.2011"></Reference>
					</References>
					<Mandatory>true</Mandatory>
				</Description>
				<TestStep Name="InitResult">
					<SetVariable Target="strResult">EmptyString</SetVariable>
				</TestStep>
				<TestStep Name="CheckIfOdAvailable">
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Mailbox</Value1>
							<Value2>false</Value2>
							<SkipCase Id="1">DuT does not support mailbox.</SkipCase>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Mailbox.CoE</Value1>
							<Value2>false</Value2>
							<SkipCase Id="2">DuT does not support CoE.</SkipCase>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Mailbox.CoE.SdoInfo</Value1>
							<Value2>false</Value2>
							<SkipCase Id="3">DuT does not support SDO Info.</SkipCase>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="InitAtLeastOneProfileMatch">
					<SetVariable Target="bAtLeastOneModuleMatch">false</SetVariable>
				</TestStep>
				<TestStep Name="GetCurrentProfileList">
					<SizeOf UInt32Var="u32Tmp">arrOnlineProfiles</SizeOf>
					<Compare>
						<Equal>
							<Value1>u32Tmp</Value1>
							<Value2>0</Value2>
							<CallTestFunction Name="GetCurrentProfileList">
								<Parameter>"online"</Parameter>
								<Parameter>"SafeOP"</Parameter>
								<OutParameter>arrOnlineProfiles</OutParameter>
							</CallTestFunction>
						</Equal>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>u32Tmp</Value1>
							<Value2>0</Value2>
							<WriteLine Id="4" Param0="arrOnlineProfiles" Level="Verbose">Use previously created profile list ({0})</WriteLine>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep>
					<SizeOf UInt32Var="u32Tmp">arrOnlineProfiles</SizeOf>
				</TestStep>
				<TestStep>
					<InitArray TargetArray="arrCurrentProfiles" Length="u32Tmp"></InitArray>
				</TestStep>
				<TestStep>
					<CopyArray>
						<SourceArray>arrOnlineProfiles</SourceArray>
						<DestinationArray>arrCurrentProfiles</DestinationArray>
						<Length>u32Tmp</Length>
					</CopyArray>
				</TestStep>
				<TestStep Name="InitProfileLoopCounter">
					<SetVariable Target="u32ProfileCounter">0</SetVariable>
				</TestStep>
				<TestStep Name="GetProfileArrayLength">
					<SizeOf UInt32Var="u32CurrentProfilesLength">arrCurrentProfiles</SizeOf>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="5" Param0="u32CurrentProfilesLength" Level="Verbose">'{0}' Profile(s) defined online.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>u32CurrentProfilesLength</Value1>
							<Value2>0</Value2>
							<SkipCase Id="6">Skip case | no profile defined.</SkipCase>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="ProfileLoopStart">
					<GetArrayItem SourceArray="arrCurrentProfiles" Target="strTmpString" Index="u32ProfileCounter"></GetArrayItem>
				</TestStep>
				<TestStep Name="CheckProfileInformationString">
					<Compare>
						<Equal>
							<Value1>strTmpString</Value1>
							<Value2>null</Value2>
							<RaiseError Id="7" Param0="u32ProfileCounter">Profile Info element [{0}] is null.</RaiseError>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>strTmpString</Value1>
							<Value2>EmptyString</Value2>
							<RaiseError Id="8" Param0="u32ProfileCounter">Profile Info element [{0}] is an empty string.</RaiseError>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="GetDeviceProfile">
					<CallTestFunction Name="GetDeviceProfile">
						<Parameter>strTmpString</Parameter>
						<OutParameter>uint16CurDeviceProfile</OutParameter>
					</CallTestFunction>
				</TestStep>
				<TestStep Name="GetModuleProfile">
					<CallTestFunction Name="GetModuleProfile">
						<Parameter>strTmpString</Parameter>
						<OutParameter>uint16CurModuleProfile</OutParameter>
					</CallTestFunction>
				</TestStep>
				<TestStep Name="GetSubModuleProfile">
					<CallTestFunction Name="GetSubModuleProfile">
						<Parameter>strTmpString</Parameter>
						<OutParameter>uint16CurSubModuleProfile</OutParameter>
					</CallTestFunction>
				</TestStep>
				<TestStep Name="DumpProfileInfo">
					<Description Id="9" Param0="uint16CurDeviceProfile" Param1="uint16CurModuleProfile" Param2="uint16CurSubModuleProfile" Param3="u32ProfileCounter" Level="Output">Module[{3}] : DeviceProfile '{0}' ; ModuleProfile '{1}' ; SubModuleProfile '{2}'</Description>
					<Compare>
						<Equal>
							<Value1>bIgnoreProfileID</Value1>
							<Value2>true</Value2>
							<GotoStep>IndicateThatAtleastOneModuleMatch</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CompareDeviceProfile">
					<Compare>
						<NotEqual>
							<Value1>uint16CurDeviceProfile</Value1>
							<Value2>5003</Value2>
							<WriteLine Id="10" Param0="uint16CurDeviceProfile" Level="Output">Skip Profile  (Test Device Profile '5003' != Cur Device Profile '{0}')</WriteLine>
						</NotEqual>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>uint16CurDeviceProfile</Value1>
							<Value2>5003</Value2>
							<GotoStep>ProfileLoopEnd</GotoStep>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep Name="CompareModuleProfile">
					<Compare>
						<NotEqual>
							<Value1>uint16CurModuleProfile</Value1>
							<Value2>2011</Value2>
							<WriteLine Id="11" Param0="uint16CurModuleProfile" Level="Output">Skip Profile  (Test Module Profile '2011' != Cur Module Profile '{0}')</WriteLine>
						</NotEqual>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>uint16CurModuleProfile</Value1>
							<Value2>2011</Value2>
							<GotoStep>ProfileLoopEnd</GotoStep>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep Name="CompareSubModuleProfile">
					<Compare>
						<NotEqual>
							<Value1>uint16CurSubModuleProfile</Value1>
							<Value2>0</Value2>
							<WriteLine Id="12" Param0="uint16CurSubModuleProfile" Level="Output">Skip Profile  (Test SubModule Profile '0' != Cur SubModule Profile '{0}')</WriteLine>
						</NotEqual>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>uint16CurSubModuleProfile</Value1>
							<Value2>0</Value2>
							<GotoStep>ProfileLoopEnd</GotoStep>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep Name="IndicateThatAtleastOneModuleMatch">
					<SetVariable Target="bAtLeastOneModuleMatch">true</SetVariable>
				</TestStep>
				<TestStep Name="GetObjectIndexInclOffset">
					<SetVariable Target="u16ObjectIndexInclOffset">#x9009 + (u32ProfileCounter * #x10)</SetVariable>
					<WriteLine Id="13" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : ObjectIndex '0x{0:X}'</WriteLine>
				</TestStep>
				<TestStep Name="LoadDeviceObjectDictionary">
					<Description Id="14" Level="Verbose">Load 'online' object dictionary for testing.</Description>
					<GetObjectDictionary Target="odDeviceObjectdictionary">
						<DictionaryType>Online</DictionaryType>
					</GetObjectDictionary>
					<RaiseErrorOnFailure Id="15">VerifyObject : failed to load online object dictionary.</RaiseErrorOnFailure>
				</TestStep>
				<TestStep Name="SetObjectRequiredLevel">
					<SetVariable Target="bObjectOrEntryRequiredLevel">1</SetVariable>
					<WriteLine Id="16" Param0="u16ObjectIndexInclOffset" Level="Verbose">0x{0:X4} 'Arc Info' may be available</WriteLine>
				</TestStep>
				<TestStep Name="CheckIfObjectExists">
					<GetObjectDescription SourceDictionary="odDeviceObjectdictionary" Index="u16ObjectIndexInclOffset" SubIndex="-1"></GetObjectDescription>
					<GotoOnSuccess>CallCheckObjectDescription</GotoOnSuccess>
				</TestStep>
				<TestStep Name="HandleNotExistingObject">
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>2</Value2>
							<WriteLine Id="17" Param0="u16ObjectIndexInclOffset" Level="Warning">The object 0x{0:X4} 'Arc Info' does not exists.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>1</Value2>
							<WriteLine Id="18" Param0="u16ObjectIndexInclOffset" Level="Output">The object 0x{0:X4} 'Arc Info' does not exists.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>ProfileLoopEnd</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CallCheckObjectDescription">
					<Description Id="19" Param0="u16ObjectIndexInclOffset" Level="Output">Verify the object description 0x{0:X4} 'Arc Info'.</Description>
					<CallTestFunction Name="CheckObjectDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"online"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>"Arc Info"</Parameter>
						<Parameter>null</Parameter>
						<Parameter>9</Parameter>
						<Parameter>-1</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<GotoStep>ProfileLoopEnd</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="InitEntryBittOffset">
					<SetVariable Target="i32CurrentBitOffset">0</SetVariable>
				</TestStep>
				<TestStep Name="StartSi0">
					<Description Id="20" Level="Output">Start validate SubIndex0</Description>
					<WriteLine Id="21" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : Subindex '0x{0:X}.0'</WriteLine>
				</TestStep>
				<TestStep Name="CallSi0CheckEntryDescription">
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"online"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>0</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>null</Parameter>
						<Parameter>5</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>null</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>null</Parameter>
						<Parameter>null</Parameter>
						<Parameter>null</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>8</Parameter>
						<Parameter>i32CurrentBitOffset</Parameter>
						<Parameter>true</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="EndSi0">
					<SetVariable Target="i32CurrentBitOffset">16</SetVariable>
				</TestStep>
				<TestStep Name="StartSi1">
					<Description Id="22" Level="Output">Start validate SubIndex1</Description>
					<WriteLine Id="23" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : Subindex '0x{0:X}.1'</WriteLine>
				</TestStep>
				<TestStep Name="SetSi1RequiredLevel">
					<SetVariable Target="bObjectOrEntryRequiredLevel">1</SetVariable>
					<WriteLine Id="24" Param0="u16ObjectIndexInclOffset" Level="Verbose">0x{0:X4}.1 'Arc Rate' may be available</WriteLine>
				</TestStep>
				<TestStep Name="CheckIfSi1Exists">
					<GetObjectDescription SourceDictionary="odDeviceObjectdictionary" Index="u16ObjectIndexInclOffset" SubIndex="1">
						<Type>u16DataType</Type>
					</GetObjectDescription>
					<GotoOnFailure>HandleNotExistingSi1</GotoOnFailure>
				</TestStep>
				<TestStep>
					<Compare>
						<NotEqual>
							<Value1>u16DataType</Value1>
							<Value2>0</Value2>
							<GotoStep>CallSi1CheckEntryDescription</GotoStep>
						</NotEqual>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="25" Param0="u16ObjectIndexInclOffset" Level="Verbose">The entry 0x{0:X4}.1 is defined as a padding entry.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>EndSi1</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="HandleNotExistingSi1">
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="26" Param0="u16ObjectIndexInclOffset" Level="Output">The entry 0x{0:X4}.1 does not exists.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>EndSi1</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CallSi1CheckEntryDescription">
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"online"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>1</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>"Arc Rate"</Parameter>
						<Parameter>6</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>null</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>16</Parameter>
						<Parameter>i32CurrentBitOffset</Parameter>
						<Parameter>true</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="EndSi1">
					<SetVariable Target="i32CurrentBitOffset">-1</SetVariable>
				</TestStep>
				<TestStep Name="CheckReservedEntryRange_2_to_255">
					<Description Id="27" Level="Output">Start check reserved entry range 2 to 255</Description>
					<CallTestFunction Name="CheckReservedEntryRange">
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>2</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>odDeviceObjectdictionary</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="ProfileLoopEnd">
					<Compare>
						<Equal>
							<Value1>bAtLeastOneModuleMatch</Value1>
							<Value2>false</Value2>
							<GotoStep>HandleAbortTestCaseOnFirstError</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="HandleAbortTestCaseOnFirstError">
					<Compare>
						<Equal>
							<Value1>bAbortTestCaseOnFirstError</Value1>
							<Value2>false</Value2>
							<GotoStep>ProfileLoopIncrement</GotoStep>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>strResult</Value1>
							<Value2>EmptyString</Value2>
							<GotoStep>ProfileLoopIncrement</GotoStep>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="28" Level="Output">Object verification for all following modules abort because an error was already detected for the current module.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>END</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="ProfileLoopIncrement">
					<SetVariable Target="u32ProfileCounter">u32ProfileCounter + 1</SetVariable>
					<Compare>
						<Greater>
							<Value1>u32CurrentProfilesLength</Value1>
							<Value2>u32ProfileCounter</Value2>
							<GotoStep>ProfileLoopStart</GotoStep>
						</Greater>
					</Compare>
				</TestStep>
				<TestStep Name="END">
					<Compare>
						<NotEqual>
							<Value1>bAtLeastOneModuleMatch</Value1>
							<Value2>true</Value2>
							<SkipCase Id="29">SKIP TEST(no module/channel supports the current profile)</SkipCase>
						</NotEqual>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bDEBUG</Value1>
							<Value2>true</Value2>
							<WriteLine Id="30" Param0="strResult" Level="Verbose">DEBUG | Result : '{0}'.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>strResult</Value1>
							<Value2>EmptyString</Value2>
							<ReturnSuccess Id="31">Test succeed</ReturnSuccess>
						</Equal>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>strResult</Value1>
							<Value2>EmptyString</Value2>
							<RaiseError Id="32"></RaiseError>
						</NotEqual>
					</Compare>
				</TestStep>
			</TestCase>
			<TestCase Name="offline | 0x900A to 0x900F (reserved range)" CaseId="21">
				<Description>
					<PreCondition>- The device profile is 5003
- The module profile is 2011
- The submodule profile is 0</PreCondition>
					<Action>- Iterate over all offline defined modules/channels and if the PreCondition matches the check if one object in the reserved range is defined</Action>
					<PostCondition>- Error if at least one object is defined</PostCondition>
					<ProposalForSolution>- Remove the defined objects
</ProposalForSolution>
					<References>
						<Reference Specification="ETG.5003.2011"></Reference>
					</References>
					<Mandatory>true</Mandatory>
				</Description>
				<TestStep Name="InitResult">
					<SetVariable Target="strResult">EmptyString</SetVariable>
				</TestStep>
				<TestStep Name="CheckIfOdAvailable">
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Mailbox</Value1>
							<Value2>false</Value2>
							<SkipCase Id="1">DuT does not support mailbox.</SkipCase>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Mailbox.CoE</Value1>
							<Value2>false</Value2>
							<SkipCase Id="2">DuT does not support CoE.</SkipCase>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep>
					<GetObjectDictionary Target="odDeviceObjectdictionary">
						<DictionaryType>Offline</DictionaryType>
					</GetObjectDictionary>
					<SkipOnFailure Id="3">No offline object dictionary defined.</SkipOnFailure>
				</TestStep>
				<TestStep>
					<GetObjectList Count="u32Tmp" Target="odDeviceObjectdictionaryList" SourceDict="odDeviceObjectdictionary"></GetObjectList>
					<Compare>
						<Equal>
							<Value1>u32Tmp</Value1>
							<Value2>0</Value2>
							<SkipCase Id="4">No offline object dictionary defined.</SkipCase>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="InitAtLeastOneProfileMatch">
					<SetVariable Target="bAtLeastOneModuleMatch">false</SetVariable>
				</TestStep>
				<TestStep Name="GetCurrentProfileList">
					<SizeOf UInt32Var="u32Tmp">arrOfflineProfiles</SizeOf>
					<Compare>
						<Equal>
							<Value1>u32Tmp</Value1>
							<Value2>0</Value2>
							<CallTestFunction Name="GetCurrentProfileList">
								<Parameter>"offline"</Parameter>
								<Parameter>"SafeOP"</Parameter>
								<OutParameter>arrOfflineProfiles</OutParameter>
							</CallTestFunction>
						</Equal>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>u32Tmp</Value1>
							<Value2>0</Value2>
							<WriteLine Id="5" Param0="arrOfflineProfiles" Level="Verbose">Use previously created profile list ({0})</WriteLine>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep>
					<SizeOf UInt32Var="u32Tmp">arrOfflineProfiles</SizeOf>
				</TestStep>
				<TestStep>
					<InitArray TargetArray="arrCurrentProfiles" Length="u32Tmp"></InitArray>
				</TestStep>
				<TestStep>
					<CopyArray>
						<SourceArray>arrOfflineProfiles</SourceArray>
						<DestinationArray>arrCurrentProfiles</DestinationArray>
						<Length>u32Tmp</Length>
					</CopyArray>
				</TestStep>
				<TestStep Name="InitProfileLoopCounter">
					<SetVariable Target="u32ProfileCounter">0</SetVariable>
				</TestStep>
				<TestStep Name="GetProfileArrayLength">
					<SizeOf UInt32Var="u32CurrentProfilesLength">arrCurrentProfiles</SizeOf>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="6" Param0="u32CurrentProfilesLength" Level="Verbose">'{0}' Profile(s) defined offline.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>u32CurrentProfilesLength</Value1>
							<Value2>0</Value2>
							<SkipCase Id="7">Skip case | no profile defined.</SkipCase>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="ProfileLoopStart">
					<GetArrayItem SourceArray="arrCurrentProfiles" Target="strTmpString" Index="u32ProfileCounter"></GetArrayItem>
				</TestStep>
				<TestStep Name="CheckProfileInformationString">
					<Compare>
						<Equal>
							<Value1>strTmpString</Value1>
							<Value2>null</Value2>
							<RaiseError Id="8" Param0="u32ProfileCounter">Profile Info element [{0}] is null.</RaiseError>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>strTmpString</Value1>
							<Value2>EmptyString</Value2>
							<RaiseError Id="9" Param0="u32ProfileCounter">Profile Info element [{0}] is an empty string.</RaiseError>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="GetDeviceProfile">
					<CallTestFunction Name="GetDeviceProfile">
						<Parameter>strTmpString</Parameter>
						<OutParameter>uint16CurDeviceProfile</OutParameter>
					</CallTestFunction>
				</TestStep>
				<TestStep Name="GetModuleProfile">
					<CallTestFunction Name="GetModuleProfile">
						<Parameter>strTmpString</Parameter>
						<OutParameter>uint16CurModuleProfile</OutParameter>
					</CallTestFunction>
				</TestStep>
				<TestStep Name="GetSubModuleProfile">
					<CallTestFunction Name="GetSubModuleProfile">
						<Parameter>strTmpString</Parameter>
						<OutParameter>uint16CurSubModuleProfile</OutParameter>
					</CallTestFunction>
				</TestStep>
				<TestStep Name="DumpProfileInfo">
					<Description Id="10" Param0="uint16CurDeviceProfile" Param1="uint16CurModuleProfile" Param2="uint16CurSubModuleProfile" Param3="u32ProfileCounter" Level="Output">Module[{3}] : DeviceProfile '{0}' ; ModuleProfile '{1}' ; SubModuleProfile '{2}'</Description>
					<Compare>
						<Equal>
							<Value1>bIgnoreProfileID</Value1>
							<Value2>true</Value2>
							<GotoStep>IndicateThatAtleastOneModuleMatch</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CompareDeviceProfile">
					<Compare>
						<NotEqual>
							<Value1>uint16CurDeviceProfile</Value1>
							<Value2>5003</Value2>
							<WriteLine Id="11" Param0="uint16CurDeviceProfile" Level="Output">Skip Profile  (Test Device Profile '5003' != Cur Device Profile '{0}')</WriteLine>
						</NotEqual>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>uint16CurDeviceProfile</Value1>
							<Value2>5003</Value2>
							<GotoStep>ProfileLoopEnd</GotoStep>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep Name="CompareModuleProfile">
					<Compare>
						<NotEqual>
							<Value1>uint16CurModuleProfile</Value1>
							<Value2>2011</Value2>
							<WriteLine Id="12" Param0="uint16CurModuleProfile" Level="Output">Skip Profile  (Test Module Profile '2011' != Cur Module Profile '{0}')</WriteLine>
						</NotEqual>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>uint16CurModuleProfile</Value1>
							<Value2>2011</Value2>
							<GotoStep>ProfileLoopEnd</GotoStep>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep Name="CompareSubModuleProfile">
					<Compare>
						<NotEqual>
							<Value1>uint16CurSubModuleProfile</Value1>
							<Value2>0</Value2>
							<WriteLine Id="13" Param0="uint16CurSubModuleProfile" Level="Output">Skip Profile  (Test SubModule Profile '0' != Cur SubModule Profile '{0}')</WriteLine>
						</NotEqual>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>uint16CurSubModuleProfile</Value1>
							<Value2>0</Value2>
							<GotoStep>ProfileLoopEnd</GotoStep>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep Name="IndicateThatAtleastOneModuleMatch">
					<SetVariable Target="bAtLeastOneModuleMatch">true</SetVariable>
				</TestStep>
				<TestStep Name="GetFirstReservedObjectIndexInlcOffset">
					<SetVariable Target="u16ObjectIndexInclOffset">#x900A + (u32ProfileCounter * #x10)</SetVariable>
					<WriteLine Id="14" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : First reserved object index '0x{0:X}'</WriteLine>
				</TestStep>
				<TestStep Name="GetNextDefinedObjectIndexInlcOffset">
					<SetVariable Target="u16NextDefObjectIndexInclOffset">#x9010 + (u32ProfileCounter * #x0010)</SetVariable>
					<WriteLine Id="15" Param0="u16NextDefObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : Next defined object index '0x{0:X}'</WriteLine>
				</TestStep>
				<TestStep Name="CallCheckReservedObjectRange">
					<Description Id="16" Level="Verbose">VerifyObject : Load 'offline' object dictionary for testing.</Description>
					<CallTestFunction Name="CheckReservedObjectRange">
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>u16NextDefObjectIndexInclOffset</Parameter>
						<Parameter>odDeviceObjectdictionary</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<GotoStep>ProfileLoopEnd</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="ProfileLoopEnd">
					<Compare>
						<Equal>
							<Value1>bAtLeastOneModuleMatch</Value1>
							<Value2>false</Value2>
							<GotoStep>HandleAbortTestCaseOnFirstError</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="HandleAbortTestCaseOnFirstError">
					<Compare>
						<Equal>
							<Value1>bAbortTestCaseOnFirstError</Value1>
							<Value2>false</Value2>
							<GotoStep>ProfileLoopIncrement</GotoStep>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>strResult</Value1>
							<Value2>EmptyString</Value2>
							<GotoStep>ProfileLoopIncrement</GotoStep>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="17" Level="Output">Object verification for all following modules abort because an error was already detected for the current module.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>END</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="ProfileLoopIncrement">
					<SetVariable Target="u32ProfileCounter">u32ProfileCounter + 1</SetVariable>
					<Compare>
						<Greater>
							<Value1>u32CurrentProfilesLength</Value1>
							<Value2>u32ProfileCounter</Value2>
							<GotoStep>ProfileLoopStart</GotoStep>
						</Greater>
					</Compare>
				</TestStep>
				<TestStep Name="END">
					<Compare>
						<NotEqual>
							<Value1>bAtLeastOneModuleMatch</Value1>
							<Value2>true</Value2>
							<SkipCase Id="18">SKIP TEST(no module/channel supports the current profile)</SkipCase>
						</NotEqual>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bDEBUG</Value1>
							<Value2>true</Value2>
							<WriteLine Id="19" Param0="strResult" Level="Verbose">DEBUG | Result : '{0}'.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>strResult</Value1>
							<Value2>EmptyString</Value2>
							<ReturnSuccess Id="20">Test succeed</ReturnSuccess>
						</Equal>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>strResult</Value1>
							<Value2>EmptyString</Value2>
							<RaiseError Id="21"></RaiseError>
						</NotEqual>
					</Compare>
				</TestStep>
			</TestCase>
			<TestCase Name="online | 0x900A to 0x900F (reserved range)" CaseId="22">
				<Description>
					<PreCondition>- The device profile is 5003
- The module profile is 2011
- The submodule profile is 0</PreCondition>
					<Action>- Iterate over all online defined modules/channels and if the PreCondition matches the check if one object in the reserved range is defined</Action>
					<PostCondition>- Error if at least one object is defined</PostCondition>
					<ProposalForSolution>- Remove the defined objects
</ProposalForSolution>
					<References>
						<Reference Specification="ETG.5003.2011"></Reference>
					</References>
					<Mandatory>true</Mandatory>
				</Description>
				<TestStep Name="InitResult">
					<SetVariable Target="strResult">EmptyString</SetVariable>
				</TestStep>
				<TestStep Name="CheckIfOdAvailable">
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Mailbox</Value1>
							<Value2>false</Value2>
							<SkipCase Id="1">DuT does not support mailbox.</SkipCase>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Mailbox.CoE</Value1>
							<Value2>false</Value2>
							<SkipCase Id="2">DuT does not support CoE.</SkipCase>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Mailbox.CoE.SdoInfo</Value1>
							<Value2>false</Value2>
							<SkipCase Id="3">DuT does not support SDO Info.</SkipCase>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="InitAtLeastOneProfileMatch">
					<SetVariable Target="bAtLeastOneModuleMatch">false</SetVariable>
				</TestStep>
				<TestStep Name="GetCurrentProfileList">
					<SizeOf UInt32Var="u32Tmp">arrOnlineProfiles</SizeOf>
					<Compare>
						<Equal>
							<Value1>u32Tmp</Value1>
							<Value2>0</Value2>
							<CallTestFunction Name="GetCurrentProfileList">
								<Parameter>"online"</Parameter>
								<Parameter>"SafeOP"</Parameter>
								<OutParameter>arrOnlineProfiles</OutParameter>
							</CallTestFunction>
						</Equal>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>u32Tmp</Value1>
							<Value2>0</Value2>
							<WriteLine Id="4" Param0="arrOnlineProfiles" Level="Verbose">Use previously created profile list ({0})</WriteLine>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep>
					<SizeOf UInt32Var="u32Tmp">arrOnlineProfiles</SizeOf>
				</TestStep>
				<TestStep>
					<InitArray TargetArray="arrCurrentProfiles" Length="u32Tmp"></InitArray>
				</TestStep>
				<TestStep>
					<CopyArray>
						<SourceArray>arrOnlineProfiles</SourceArray>
						<DestinationArray>arrCurrentProfiles</DestinationArray>
						<Length>u32Tmp</Length>
					</CopyArray>
				</TestStep>
				<TestStep Name="InitProfileLoopCounter">
					<SetVariable Target="u32ProfileCounter">0</SetVariable>
				</TestStep>
				<TestStep Name="GetProfileArrayLength">
					<SizeOf UInt32Var="u32CurrentProfilesLength">arrCurrentProfiles</SizeOf>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="5" Param0="u32CurrentProfilesLength" Level="Verbose">'{0}' Profile(s) defined online.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>u32CurrentProfilesLength</Value1>
							<Value2>0</Value2>
							<SkipCase Id="6">Skip case | no profile defined.</SkipCase>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="ProfileLoopStart">
					<GetArrayItem SourceArray="arrCurrentProfiles" Target="strTmpString" Index="u32ProfileCounter"></GetArrayItem>
				</TestStep>
				<TestStep Name="CheckProfileInformationString">
					<Compare>
						<Equal>
							<Value1>strTmpString</Value1>
							<Value2>null</Value2>
							<RaiseError Id="7" Param0="u32ProfileCounter">Profile Info element [{0}] is null.</RaiseError>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>strTmpString</Value1>
							<Value2>EmptyString</Value2>
							<RaiseError Id="8" Param0="u32ProfileCounter">Profile Info element [{0}] is an empty string.</RaiseError>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="GetDeviceProfile">
					<CallTestFunction Name="GetDeviceProfile">
						<Parameter>strTmpString</Parameter>
						<OutParameter>uint16CurDeviceProfile</OutParameter>
					</CallTestFunction>
				</TestStep>
				<TestStep Name="GetModuleProfile">
					<CallTestFunction Name="GetModuleProfile">
						<Parameter>strTmpString</Parameter>
						<OutParameter>uint16CurModuleProfile</OutParameter>
					</CallTestFunction>
				</TestStep>
				<TestStep Name="GetSubModuleProfile">
					<CallTestFunction Name="GetSubModuleProfile">
						<Parameter>strTmpString</Parameter>
						<OutParameter>uint16CurSubModuleProfile</OutParameter>
					</CallTestFunction>
				</TestStep>
				<TestStep Name="DumpProfileInfo">
					<Description Id="9" Param0="uint16CurDeviceProfile" Param1="uint16CurModuleProfile" Param2="uint16CurSubModuleProfile" Param3="u32ProfileCounter" Level="Output">Module[{3}] : DeviceProfile '{0}' ; ModuleProfile '{1}' ; SubModuleProfile '{2}'</Description>
					<Compare>
						<Equal>
							<Value1>bIgnoreProfileID</Value1>
							<Value2>true</Value2>
							<GotoStep>IndicateThatAtleastOneModuleMatch</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CompareDeviceProfile">
					<Compare>
						<NotEqual>
							<Value1>uint16CurDeviceProfile</Value1>
							<Value2>5003</Value2>
							<WriteLine Id="10" Param0="uint16CurDeviceProfile" Level="Output">Skip Profile  (Test Device Profile '5003' != Cur Device Profile '{0}')</WriteLine>
						</NotEqual>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>uint16CurDeviceProfile</Value1>
							<Value2>5003</Value2>
							<GotoStep>ProfileLoopEnd</GotoStep>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep Name="CompareModuleProfile">
					<Compare>
						<NotEqual>
							<Value1>uint16CurModuleProfile</Value1>
							<Value2>2011</Value2>
							<WriteLine Id="11" Param0="uint16CurModuleProfile" Level="Output">Skip Profile  (Test Module Profile '2011' != Cur Module Profile '{0}')</WriteLine>
						</NotEqual>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>uint16CurModuleProfile</Value1>
							<Value2>2011</Value2>
							<GotoStep>ProfileLoopEnd</GotoStep>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep Name="CompareSubModuleProfile">
					<Compare>
						<NotEqual>
							<Value1>uint16CurSubModuleProfile</Value1>
							<Value2>0</Value2>
							<WriteLine Id="12" Param0="uint16CurSubModuleProfile" Level="Output">Skip Profile  (Test SubModule Profile '0' != Cur SubModule Profile '{0}')</WriteLine>
						</NotEqual>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>uint16CurSubModuleProfile</Value1>
							<Value2>0</Value2>
							<GotoStep>ProfileLoopEnd</GotoStep>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep Name="IndicateThatAtleastOneModuleMatch">
					<SetVariable Target="bAtLeastOneModuleMatch">true</SetVariable>
				</TestStep>
				<TestStep Name="GetFirstReservedObjectIndexInlcOffset">
					<SetVariable Target="u16ObjectIndexInclOffset">#x900A + (u32ProfileCounter * #x10)</SetVariable>
					<WriteLine Id="13" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : First reserved object index '0x{0:X}'</WriteLine>
				</TestStep>
				<TestStep Name="GetNextDefinedObjectIndexInlcOffset">
					<SetVariable Target="u16NextDefObjectIndexInclOffset">#x9010 + (u32ProfileCounter * #x0010)</SetVariable>
					<WriteLine Id="14" Param0="u16NextDefObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : Next defined object index '0x{0:X}'</WriteLine>
				</TestStep>
				<TestStep Name="CallCheckReservedObjectRange">
					<Description Id="15" Level="Verbose">VerifyObject : Load 'online' object dictionary for testing.</Description>
					<CallTestFunction Name="CheckReservedObjectRange">
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>u16NextDefObjectIndexInclOffset</Parameter>
						<Parameter>odDeviceObjectdictionary</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<GotoStep>ProfileLoopEnd</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="ProfileLoopEnd">
					<Compare>
						<Equal>
							<Value1>bAtLeastOneModuleMatch</Value1>
							<Value2>false</Value2>
							<GotoStep>HandleAbortTestCaseOnFirstError</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="HandleAbortTestCaseOnFirstError">
					<Compare>
						<Equal>
							<Value1>bAbortTestCaseOnFirstError</Value1>
							<Value2>false</Value2>
							<GotoStep>ProfileLoopIncrement</GotoStep>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>strResult</Value1>
							<Value2>EmptyString</Value2>
							<GotoStep>ProfileLoopIncrement</GotoStep>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="16" Level="Output">Object verification for all following modules abort because an error was already detected for the current module.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>END</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="ProfileLoopIncrement">
					<SetVariable Target="u32ProfileCounter">u32ProfileCounter + 1</SetVariable>
					<Compare>
						<Greater>
							<Value1>u32CurrentProfilesLength</Value1>
							<Value2>u32ProfileCounter</Value2>
							<GotoStep>ProfileLoopStart</GotoStep>
						</Greater>
					</Compare>
				</TestStep>
				<TestStep Name="END">
					<Compare>
						<NotEqual>
							<Value1>bAtLeastOneModuleMatch</Value1>
							<Value2>true</Value2>
							<SkipCase Id="17">SKIP TEST(no module/channel supports the current profile)</SkipCase>
						</NotEqual>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bDEBUG</Value1>
							<Value2>true</Value2>
							<WriteLine Id="18" Param0="strResult" Level="Verbose">DEBUG | Result : '{0}'.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>strResult</Value1>
							<Value2>EmptyString</Value2>
							<ReturnSuccess Id="19">Test succeed</ReturnSuccess>
						</Equal>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>strResult</Value1>
							<Value2>EmptyString</Value2>
							<RaiseError Id="20"></RaiseError>
						</NotEqual>
					</Compare>
				</TestStep>
			</TestCase>
		</TestGroup>
		<TestGroup Name="Verify objects 0xF000 - 0xF0FF (Semiconductor Device Profile Area)" GroupId="6">
			<TestCase Name="offline | 0xF000 (Semiconductor Device Profile)" CaseId="1">
				<Description>
					<PreCondition>- The device profile is 5003
- The module profile is 2011
- The submodule profile is 0</PreCondition>
					<Action>- Iterate over all offline defined modules/channels and if the PreCondition matches the following operations are done:
- Get the offline description of object 0xF000(+module specific offset) 'Semiconductor Device Profile' and all entries
 Check:
    (Name)
    BitSize
    DataType
    Rx / Tx mappable
    Default Data
    MinData
    Flags       </Action>
					<PostCondition>Error if
- mandatory object / entry is not defined
- an optional object exists and the entries are invalid
- Object / entry description does not match with the specification</PostCondition>
					<ProposalForSolution>- Define the missing objects
- correct object / entry description</ProposalForSolution>
					<References>
						<Reference Specification="ETG.5003.2011"></Reference>
					</References>
					<Mandatory>true</Mandatory>
				</Description>
				<TestStep Name="InitResult">
					<SetVariable Target="strResult">EmptyString</SetVariable>
				</TestStep>
				<TestStep Name="CheckIfOdAvailable">
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Mailbox</Value1>
							<Value2>false</Value2>
							<SkipCase Id="1">DuT does not support mailbox.</SkipCase>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Mailbox.CoE</Value1>
							<Value2>false</Value2>
							<SkipCase Id="2">DuT does not support CoE.</SkipCase>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep>
					<GetObjectDictionary Target="odDeviceObjectdictionary">
						<DictionaryType>Offline</DictionaryType>
					</GetObjectDictionary>
					<SkipOnFailure Id="3">No offline object dictionary defined.</SkipOnFailure>
				</TestStep>
				<TestStep>
					<GetObjectList Count="u32Tmp" Target="odDeviceObjectdictionaryList" SourceDict="odDeviceObjectdictionary"></GetObjectList>
					<Compare>
						<Equal>
							<Value1>u32Tmp</Value1>
							<Value2>0</Value2>
							<SkipCase Id="4">No offline object dictionary defined.</SkipCase>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="InitAtLeastOneProfileMatch">
					<SetVariable Target="bAtLeastOneModuleMatch">false</SetVariable>
				</TestStep>
				<TestStep Name="GetCurrentProfileList">
					<SizeOf UInt32Var="u32Tmp">arrOfflineProfiles</SizeOf>
					<Compare>
						<Equal>
							<Value1>u32Tmp</Value1>
							<Value2>0</Value2>
							<CallTestFunction Name="GetCurrentProfileList">
								<Parameter>"offline"</Parameter>
								<Parameter>"SafeOP"</Parameter>
								<OutParameter>arrOfflineProfiles</OutParameter>
							</CallTestFunction>
						</Equal>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>u32Tmp</Value1>
							<Value2>0</Value2>
							<WriteLine Id="5" Param0="arrOfflineProfiles" Level="Verbose">Use previously created profile list ({0})</WriteLine>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep>
					<SizeOf UInt32Var="u32Tmp">arrOfflineProfiles</SizeOf>
				</TestStep>
				<TestStep>
					<InitArray TargetArray="arrCurrentProfiles" Length="u32Tmp"></InitArray>
				</TestStep>
				<TestStep>
					<CopyArray>
						<SourceArray>arrOfflineProfiles</SourceArray>
						<DestinationArray>arrCurrentProfiles</DestinationArray>
						<Length>u32Tmp</Length>
					</CopyArray>
				</TestStep>
				<TestStep Name="IsProfileSupported">
					<CallTestFunction Name="DeviceAndModuleProfileDefined">
						<Parameter>arrCurrentProfiles</Parameter>
						<Parameter>5003</Parameter>
						<Parameter>2011</Parameter>
						<OutParameter>bAtLeastOneModuleMatch</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>bAtLeastOneModuleMatch</Value1>
							<Value2>false</Value2>
							<GotoStep>END</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="GetObjectIndexInclOffset">
					<SetVariable Target="u16ObjectIndexInclOffset">#xF000</SetVariable>
					<WriteLine Id="6" Param0="u16ObjectIndexInclOffset" Level="Verbose">ObjectIndex '0x{0:X}' (module independent)</WriteLine>
				</TestStep>
				<TestStep Name="LoadDeviceObjectDictionary">
					<Description Id="7" Level="Verbose">Load 'offline' object dictionary for testing.</Description>
					<GetObjectDictionary Target="odDeviceObjectdictionary">
						<DictionaryType>Offline</DictionaryType>
					</GetObjectDictionary>
					<RaiseErrorOnFailure Id="8">VerifyObject : failed to load offline object dictionary.</RaiseErrorOnFailure>
				</TestStep>
				<TestStep Name="CallCheckObjectDescription">
					<Description Id="9" Param0="u16ObjectIndexInclOffset" Level="Output">Verify the object description 0x{0:X4} 'Semiconductor Device Profile'.</Description>
					<CallTestFunction Name="CheckObjectDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"offline"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>"Semiconductor Device Profile"</Parameter>
						<Parameter>null</Parameter>
						<Parameter>9</Parameter>
						<Parameter>-1</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<GotoStep>END</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="InitEntryBittOffset">
					<SetVariable Target="i32CurrentBitOffset">0</SetVariable>
				</TestStep>
				<TestStep Name="StartSi0">
					<Description Id="10" Level="Output">Start validate SubIndex0</Description>
					<WriteLine Id="11" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : Subindex '0x{0:X}.0'</WriteLine>
				</TestStep>
				<TestStep Name="CallSi0CheckEntryDescription">
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"offline"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>0</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>null</Parameter>
						<Parameter>5</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>null</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>null</Parameter>
						<Parameter>null</Parameter>
						<Parameter>null</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>8</Parameter>
						<Parameter>i32CurrentBitOffset</Parameter>
						<Parameter>true</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="EndSi0">
					<SetVariable Target="i32CurrentBitOffset">16</SetVariable>
				</TestStep>
				<TestStep Name="StartSi1">
					<Description Id="12" Level="Output">Start validate SubIndex1</Description>
					<WriteLine Id="13" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : Subindex '0x{0:X}.1'</WriteLine>
				</TestStep>
				<TestStep Name="CallSi1CheckEntryDescription">
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"offline"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>1</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>"Index Distance"</Parameter>
						<Parameter>6</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>null</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>16</Parameter>
						<Parameter>i32CurrentBitOffset</Parameter>
						<Parameter>true</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="EndSi1">
					<SetVariable Target="i32CurrentBitOffset">i32CurrentBitOffset + 16</SetVariable>
				</TestStep>
				<TestStep Name="StartSi2">
					<Description Id="14" Level="Output">Start validate SubIndex2</Description>
					<WriteLine Id="15" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : Subindex '0x{0:X}.2'</WriteLine>
				</TestStep>
				<TestStep Name="CallSi2CheckEntryDescription">
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"offline"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>2</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>"Maximum Number of Modules"</Parameter>
						<Parameter>6</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>null</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>16</Parameter>
						<Parameter>i32CurrentBitOffset</Parameter>
						<Parameter>true</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="EndSi2">
					<SetVariable Target="i32CurrentBitOffset">i32CurrentBitOffset + 16</SetVariable>
				</TestStep>
				<TestStep Name="CheckReservedEntryRange_3_to_255">
					<Description Id="16" Level="Output">Start check reserved entry range 3 to 255</Description>
					<CallTestFunction Name="CheckReservedEntryRange">
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>3</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>odDeviceObjectdictionary</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="END">
					<Compare>
						<NotEqual>
							<Value1>bAtLeastOneModuleMatch</Value1>
							<Value2>true</Value2>
							<SkipCase Id="17">SKIP TEST(no module/channel supports the current profile)</SkipCase>
						</NotEqual>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bDEBUG</Value1>
							<Value2>true</Value2>
							<WriteLine Id="18" Param0="strResult" Level="Verbose">DEBUG | Result : '{0}'.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>strResult</Value1>
							<Value2>EmptyString</Value2>
							<ReturnSuccess Id="19">Test succeed</ReturnSuccess>
						</Equal>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>strResult</Value1>
							<Value2>EmptyString</Value2>
							<RaiseError Id="20"></RaiseError>
						</NotEqual>
					</Compare>
				</TestStep>
			</TestCase>
			<TestCase Name="online | 0xF000 (Semiconductor Device Profile)" CaseId="2">
				<Description>
					<PreCondition>- The device profile is 5003
- The module profile is 2011
- The submodule profile is 0</PreCondition>
					<Action>- Iterate over all online defined modules/channels and if the PreCondition matches the following operations are done:
- Get the online description of object 0xF000(+module specific offset) 'Semiconductor Device Profile' and all entries
 Check:
    (Name)
    BitSize
    DataType
    Rx / Tx mappable
    Default Data
    MinData
    Flags       </Action>
					<PostCondition>Error if
- mandatory object / entry is not defined
- an optional object exists and the entries are invalid
- Object / entry description does not match with the specification</PostCondition>
					<ProposalForSolution>- Define the missing objects
- correct object / entry description</ProposalForSolution>
					<References>
						<Reference Specification="ETG.5003.2011"></Reference>
					</References>
					<Mandatory>true</Mandatory>
				</Description>
				<TestStep Name="InitResult">
					<SetVariable Target="strResult">EmptyString</SetVariable>
				</TestStep>
				<TestStep Name="CheckIfOdAvailable">
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Mailbox</Value1>
							<Value2>false</Value2>
							<SkipCase Id="1">DuT does not support mailbox.</SkipCase>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Mailbox.CoE</Value1>
							<Value2>false</Value2>
							<SkipCase Id="2">DuT does not support CoE.</SkipCase>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Mailbox.CoE.SdoInfo</Value1>
							<Value2>false</Value2>
							<SkipCase Id="3">DuT does not support SDO Info.</SkipCase>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="InitAtLeastOneProfileMatch">
					<SetVariable Target="bAtLeastOneModuleMatch">false</SetVariable>
				</TestStep>
				<TestStep Name="GetCurrentProfileList">
					<SizeOf UInt32Var="u32Tmp">arrOnlineProfiles</SizeOf>
					<Compare>
						<Equal>
							<Value1>u32Tmp</Value1>
							<Value2>0</Value2>
							<CallTestFunction Name="GetCurrentProfileList">
								<Parameter>"online"</Parameter>
								<Parameter>"SafeOP"</Parameter>
								<OutParameter>arrOnlineProfiles</OutParameter>
							</CallTestFunction>
						</Equal>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>u32Tmp</Value1>
							<Value2>0</Value2>
							<WriteLine Id="4" Param0="arrOnlineProfiles" Level="Verbose">Use previously created profile list ({0})</WriteLine>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep>
					<SizeOf UInt32Var="u32Tmp">arrOnlineProfiles</SizeOf>
				</TestStep>
				<TestStep>
					<InitArray TargetArray="arrCurrentProfiles" Length="u32Tmp"></InitArray>
				</TestStep>
				<TestStep>
					<CopyArray>
						<SourceArray>arrOnlineProfiles</SourceArray>
						<DestinationArray>arrCurrentProfiles</DestinationArray>
						<Length>u32Tmp</Length>
					</CopyArray>
				</TestStep>
				<TestStep Name="IsProfileSupported">
					<CallTestFunction Name="DeviceAndModuleProfileDefined">
						<Parameter>arrCurrentProfiles</Parameter>
						<Parameter>5003</Parameter>
						<Parameter>2011</Parameter>
						<OutParameter>bAtLeastOneModuleMatch</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>bAtLeastOneModuleMatch</Value1>
							<Value2>false</Value2>
							<GotoStep>END</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="GetObjectIndexInclOffset">
					<SetVariable Target="u16ObjectIndexInclOffset">#xF000</SetVariable>
					<WriteLine Id="5" Param0="u16ObjectIndexInclOffset" Level="Verbose">ObjectIndex '0x{0:X}' (module independent)</WriteLine>
				</TestStep>
				<TestStep Name="LoadDeviceObjectDictionary">
					<Description Id="6" Level="Verbose">Load 'online' object dictionary for testing.</Description>
					<GetObjectDictionary Target="odDeviceObjectdictionary">
						<DictionaryType>Online</DictionaryType>
					</GetObjectDictionary>
					<RaiseErrorOnFailure Id="7">VerifyObject : failed to load online object dictionary.</RaiseErrorOnFailure>
				</TestStep>
				<TestStep Name="CallCheckObjectDescription">
					<Description Id="8" Param0="u16ObjectIndexInclOffset" Level="Output">Verify the object description 0x{0:X4} 'Semiconductor Device Profile'.</Description>
					<CallTestFunction Name="CheckObjectDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"online"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>"Semiconductor Device Profile"</Parameter>
						<Parameter>null</Parameter>
						<Parameter>9</Parameter>
						<Parameter>-1</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<GotoStep>END</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="InitEntryBittOffset">
					<SetVariable Target="i32CurrentBitOffset">0</SetVariable>
				</TestStep>
				<TestStep Name="StartSi0">
					<Description Id="9" Level="Output">Start validate SubIndex0</Description>
					<WriteLine Id="10" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : Subindex '0x{0:X}.0'</WriteLine>
				</TestStep>
				<TestStep Name="CallSi0CheckEntryDescription">
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"online"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>0</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>null</Parameter>
						<Parameter>5</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>null</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>null</Parameter>
						<Parameter>null</Parameter>
						<Parameter>null</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>8</Parameter>
						<Parameter>i32CurrentBitOffset</Parameter>
						<Parameter>true</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="EndSi0">
					<SetVariable Target="i32CurrentBitOffset">16</SetVariable>
				</TestStep>
				<TestStep Name="StartSi1">
					<Description Id="11" Level="Output">Start validate SubIndex1</Description>
					<WriteLine Id="12" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : Subindex '0x{0:X}.1'</WriteLine>
				</TestStep>
				<TestStep Name="CallSi1CheckEntryDescription">
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"online"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>1</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>"Index Distance"</Parameter>
						<Parameter>6</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>null</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>16</Parameter>
						<Parameter>i32CurrentBitOffset</Parameter>
						<Parameter>true</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="EndSi1">
					<SetVariable Target="i32CurrentBitOffset">i32CurrentBitOffset + 16</SetVariable>
				</TestStep>
				<TestStep Name="StartSi2">
					<Description Id="13" Level="Output">Start validate SubIndex2</Description>
					<WriteLine Id="14" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : Subindex '0x{0:X}.2'</WriteLine>
				</TestStep>
				<TestStep Name="CallSi2CheckEntryDescription">
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"online"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>2</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>"Maximum Number of Modules"</Parameter>
						<Parameter>6</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>null</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>16</Parameter>
						<Parameter>i32CurrentBitOffset</Parameter>
						<Parameter>true</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="EndSi2">
					<SetVariable Target="i32CurrentBitOffset">i32CurrentBitOffset + 16</SetVariable>
				</TestStep>
				<TestStep Name="CheckReservedEntryRange_3_to_255">
					<Description Id="15" Level="Output">Start check reserved entry range 3 to 255</Description>
					<CallTestFunction Name="CheckReservedEntryRange">
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>3</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>odDeviceObjectdictionary</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="END">
					<Compare>
						<NotEqual>
							<Value1>bAtLeastOneModuleMatch</Value1>
							<Value2>true</Value2>
							<SkipCase Id="16">SKIP TEST(no module/channel supports the current profile)</SkipCase>
						</NotEqual>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bDEBUG</Value1>
							<Value2>true</Value2>
							<WriteLine Id="17" Param0="strResult" Level="Verbose">DEBUG | Result : '{0}'.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>strResult</Value1>
							<Value2>EmptyString</Value2>
							<ReturnSuccess Id="18">Test succeed</ReturnSuccess>
						</Equal>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>strResult</Value1>
							<Value2>EmptyString</Value2>
							<RaiseError Id="19"></RaiseError>
						</NotEqual>
					</Compare>
				</TestStep>
			</TestCase>
			<TestCase Name="offline | 0xF010 (Module Profile List)" CaseId="3">
				<Description>
					<PreCondition>- The device profile is 5003
- The module profile is 2011
- The submodule profile is 0</PreCondition>
					<Action>- Iterate over all offline defined modules/channels and if the PreCondition matches the following operations are done:
- Get the offline description of object 0xF010(+module specific offset) 'Module Profile List' and all entries
 Check:
    (Name)
    BitSize
    DataType
    Rx / Tx mappable
    Default Data
    MinData
    Flags       </Action>
					<PostCondition>Error if
- mandatory object / entry is not defined
- an optional object exists and the entries are invalid
- Object / entry description does not match with the specification</PostCondition>
					<ProposalForSolution>- Define the missing objects
- correct object / entry description</ProposalForSolution>
					<References>
						<Reference Specification="ETG.5003.2011"></Reference>
					</References>
					<Mandatory>true</Mandatory>
				</Description>
				<TestStep Name="InitResult">
					<SetVariable Target="strResult">EmptyString</SetVariable>
				</TestStep>
				<TestStep Name="CheckIfOdAvailable">
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Mailbox</Value1>
							<Value2>false</Value2>
							<SkipCase Id="1">DuT does not support mailbox.</SkipCase>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Mailbox.CoE</Value1>
							<Value2>false</Value2>
							<SkipCase Id="2">DuT does not support CoE.</SkipCase>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep>
					<GetObjectDictionary Target="odDeviceObjectdictionary">
						<DictionaryType>Offline</DictionaryType>
					</GetObjectDictionary>
					<SkipOnFailure Id="3">No offline object dictionary defined.</SkipOnFailure>
				</TestStep>
				<TestStep>
					<GetObjectList Count="u32Tmp" Target="odDeviceObjectdictionaryList" SourceDict="odDeviceObjectdictionary"></GetObjectList>
					<Compare>
						<Equal>
							<Value1>u32Tmp</Value1>
							<Value2>0</Value2>
							<SkipCase Id="4">No offline object dictionary defined.</SkipCase>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="InitAtLeastOneProfileMatch">
					<SetVariable Target="bAtLeastOneModuleMatch">false</SetVariable>
				</TestStep>
				<TestStep Name="GetCurrentProfileList">
					<SizeOf UInt32Var="u32Tmp">arrOfflineProfiles</SizeOf>
					<Compare>
						<Equal>
							<Value1>u32Tmp</Value1>
							<Value2>0</Value2>
							<CallTestFunction Name="GetCurrentProfileList">
								<Parameter>"offline"</Parameter>
								<Parameter>"SafeOP"</Parameter>
								<OutParameter>arrOfflineProfiles</OutParameter>
							</CallTestFunction>
						</Equal>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>u32Tmp</Value1>
							<Value2>0</Value2>
							<WriteLine Id="5" Param0="arrOfflineProfiles" Level="Verbose">Use previously created profile list ({0})</WriteLine>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep>
					<SizeOf UInt32Var="u32Tmp">arrOfflineProfiles</SizeOf>
				</TestStep>
				<TestStep>
					<InitArray TargetArray="arrCurrentProfiles" Length="u32Tmp"></InitArray>
				</TestStep>
				<TestStep>
					<CopyArray>
						<SourceArray>arrOfflineProfiles</SourceArray>
						<DestinationArray>arrCurrentProfiles</DestinationArray>
						<Length>u32Tmp</Length>
					</CopyArray>
				</TestStep>
				<TestStep Name="IsProfileSupported">
					<CallTestFunction Name="DeviceAndModuleProfileDefined">
						<Parameter>arrCurrentProfiles</Parameter>
						<Parameter>5003</Parameter>
						<Parameter>2011</Parameter>
						<OutParameter>bAtLeastOneModuleMatch</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>bAtLeastOneModuleMatch</Value1>
							<Value2>false</Value2>
							<GotoStep>END</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="GetObjectIndexInclOffset">
					<SetVariable Target="u16ObjectIndexInclOffset">#xF010</SetVariable>
					<WriteLine Id="6" Param0="u16ObjectIndexInclOffset" Level="Verbose">ObjectIndex '0x{0:X}' (module independent)</WriteLine>
				</TestStep>
				<TestStep Name="LoadDeviceObjectDictionary">
					<Description Id="7" Level="Verbose">Load 'offline' object dictionary for testing.</Description>
					<GetObjectDictionary Target="odDeviceObjectdictionary">
						<DictionaryType>Offline</DictionaryType>
					</GetObjectDictionary>
					<RaiseErrorOnFailure Id="8">VerifyObject : failed to load offline object dictionary.</RaiseErrorOnFailure>
				</TestStep>
				<TestStep Name="CallCheckObjectDescription">
					<Description Id="9" Param0="u16ObjectIndexInclOffset" Level="Output">Verify the object description 0x{0:X4} 'Module Profile List'.</Description>
					<CallTestFunction Name="CheckObjectDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"offline"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>"Module Profile List"</Parameter>
						<Parameter>null</Parameter>
						<Parameter>8</Parameter>
						<Parameter>-1</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<GotoStep>END</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="InitEntryBittOffset">
					<SetVariable Target="i32CurrentBitOffset">0</SetVariable>
				</TestStep>
				<TestStep Name="StartSi0">
					<Description Id="10" Level="Output">Start validate SubIndex0</Description>
					<WriteLine Id="11" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : Subindex '0x{0:X}.0'</WriteLine>
				</TestStep>
				<TestStep Name="CallSi0CheckEntryDescription">
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"offline"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>0</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>null</Parameter>
						<Parameter>5</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>null</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>null</Parameter>
						<Parameter>null</Parameter>
						<Parameter>null</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>8</Parameter>
						<Parameter>i32CurrentBitOffset</Parameter>
						<Parameter>true</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="EndSi0">
					<SetVariable Target="i32CurrentBitOffset">16</SetVariable>
				</TestStep>
				<TestStep Name="InitProfileLoopCounter">
					<SetVariable Target="u32ProfileCounter">0</SetVariable>
				</TestStep>
				<TestStep Name="GetProfileArrayLength">
					<SizeOf UInt32Var="u32CurrentProfilesLength">arrCurrentProfiles</SizeOf>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="12" Param0="u32CurrentProfilesLength" Level="Verbose">'{0}' Profile(s) defined offline.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>u32CurrentProfilesLength</Value1>
							<Value2>0</Value2>
							<SkipCase Id="13">Skip case | no profile defined.</SkipCase>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="ProfileLoopStart">
					<GetArrayItem SourceArray="arrCurrentProfiles" Target="strTmpString" Index="u32ProfileCounter"></GetArrayItem>
				</TestStep>
				<TestStep Name="CheckProfileInformationString">
					<Compare>
						<Equal>
							<Value1>strTmpString</Value1>
							<Value2>null</Value2>
							<RaiseError Id="14" Param0="u32ProfileCounter">Profile Info element [{0}] is null.</RaiseError>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>strTmpString</Value1>
							<Value2>EmptyString</Value2>
							<RaiseError Id="15" Param0="u32ProfileCounter">Profile Info element [{0}] is an empty string.</RaiseError>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="GetDeviceProfile">
					<CallTestFunction Name="GetDeviceProfile">
						<Parameter>strTmpString</Parameter>
						<OutParameter>uint16CurDeviceProfile</OutParameter>
					</CallTestFunction>
				</TestStep>
				<TestStep Name="GetModuleProfile">
					<CallTestFunction Name="GetModuleProfile">
						<Parameter>strTmpString</Parameter>
						<OutParameter>uint16CurModuleProfile</OutParameter>
					</CallTestFunction>
				</TestStep>
				<TestStep Name="GetSubModuleProfile">
					<CallTestFunction Name="GetSubModuleProfile">
						<Parameter>strTmpString</Parameter>
						<OutParameter>uint16CurSubModuleProfile</OutParameter>
					</CallTestFunction>
				</TestStep>
				<TestStep Name="DumpProfileInfo">
					<Description Id="16" Param0="uint16CurDeviceProfile" Param1="uint16CurModuleProfile" Param2="uint16CurSubModuleProfile" Param3="u32ProfileCounter" Level="Output">Module[{3}] : DeviceProfile '{0}' ; ModuleProfile '{1}' ; SubModuleProfile '{2}'</Description>
					<Compare>
						<Equal>
							<Value1>bIgnoreProfileID</Value1>
							<Value2>true</Value2>
							<GotoStep>IndicateThatAtleastOneModuleMatch</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CompareDeviceProfile">
					<Compare>
						<NotEqual>
							<Value1>uint16CurDeviceProfile</Value1>
							<Value2>5003</Value2>
							<WriteLine Id="17" Param0="uint16CurDeviceProfile" Level="Output">Skip Profile  (Test Device Profile '5003' != Cur Device Profile '{0}')</WriteLine>
						</NotEqual>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>uint16CurDeviceProfile</Value1>
							<Value2>5003</Value2>
							<GotoStep>ProfileLoopEnd</GotoStep>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep Name="CompareModuleProfile">
					<Compare>
						<NotEqual>
							<Value1>uint16CurModuleProfile</Value1>
							<Value2>2011</Value2>
							<WriteLine Id="18" Param0="uint16CurModuleProfile" Level="Output">Skip Profile  (Test Module Profile '2011' != Cur Module Profile '{0}')</WriteLine>
						</NotEqual>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>uint16CurModuleProfile</Value1>
							<Value2>2011</Value2>
							<GotoStep>ProfileLoopEnd</GotoStep>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep Name="CompareSubModuleProfile">
					<Compare>
						<NotEqual>
							<Value1>uint16CurSubModuleProfile</Value1>
							<Value2>0</Value2>
							<WriteLine Id="19" Param0="uint16CurSubModuleProfile" Level="Output">Skip Profile  (Test SubModule Profile '0' != Cur SubModule Profile '{0}')</WriteLine>
						</NotEqual>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>uint16CurSubModuleProfile</Value1>
							<Value2>0</Value2>
							<GotoStep>ProfileLoopEnd</GotoStep>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep Name="IndicateThatAtleastOneModuleMatch">
					<SetVariable Target="bAtLeastOneModuleMatch">true</SetVariable>
				</TestStep>
				<TestStep Name="StartSi1">
					<Description Id="20" Param0="1 + (u32ProfileCounter * 1)" Level="Output">Start validate SubIndex{0}</Description>
					<SetVariable Target="byteSubIndexInclOffset">1 + (u32ProfileCounter * 1)</SetVariable>
					<WriteLine Id="21" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Param2="byteSubIndexInclOffset" Level="Verbose">Module[{1}] : Subindex '0x{0:X}.{2}'</WriteLine>
				</TestStep>
				<TestStep Name="CallSi1CheckEntryDescription">
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"offline"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>byteSubIndexInclOffset</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>null</Parameter>
						<Parameter>7</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>null</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>32</Parameter>
						<Parameter>i32CurrentBitOffset</Parameter>
						<Parameter>true</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="EndSi1">
					<SetVariable Target="i32CurrentBitOffset">i32CurrentBitOffset + 32</SetVariable>
				</TestStep>
				<TestStep Name="ProfileLoopEnd">
					<Compare>
						<Equal>
							<Value1>bAtLeastOneModuleMatch</Value1>
							<Value2>false</Value2>
							<GotoStep>HandleAbortTestCaseOnFirstError</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="HandleAbortTestCaseOnFirstError">
					<Compare>
						<Equal>
							<Value1>bAbortTestCaseOnFirstError</Value1>
							<Value2>false</Value2>
							<GotoStep>ProfileLoopIncrement</GotoStep>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>strResult</Value1>
							<Value2>EmptyString</Value2>
							<GotoStep>ProfileLoopIncrement</GotoStep>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="22" Level="Output">Object verification for all following modules abort because an error was already detected for the current module.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>END</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="ProfileLoopIncrement">
					<SetVariable Target="u32ProfileCounter">u32ProfileCounter + 1</SetVariable>
					<Compare>
						<Greater>
							<Value1>u32CurrentProfilesLength</Value1>
							<Value2>u32ProfileCounter</Value2>
							<GotoStep>ProfileLoopStart</GotoStep>
						</Greater>
					</Compare>
				</TestStep>
				<TestStep Name="END">
					<Compare>
						<NotEqual>
							<Value1>bAtLeastOneModuleMatch</Value1>
							<Value2>true</Value2>
							<SkipCase Id="23">SKIP TEST(no module/channel supports the current profile)</SkipCase>
						</NotEqual>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bDEBUG</Value1>
							<Value2>true</Value2>
							<WriteLine Id="24" Param0="strResult" Level="Verbose">DEBUG | Result : '{0}'.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>strResult</Value1>
							<Value2>EmptyString</Value2>
							<ReturnSuccess Id="25">Test succeed</ReturnSuccess>
						</Equal>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>strResult</Value1>
							<Value2>EmptyString</Value2>
							<RaiseError Id="26"></RaiseError>
						</NotEqual>
					</Compare>
				</TestStep>
			</TestCase>
			<TestCase Name="online | 0xF010 (Module Profile List)" CaseId="4">
				<Description>
					<PreCondition>- The device profile is 5003
- The module profile is 2011
- The submodule profile is 0</PreCondition>
					<Action>- Iterate over all online defined modules/channels and if the PreCondition matches the following operations are done:
- Get the online description of object 0xF010(+module specific offset) 'Module Profile List' and all entries
 Check:
    (Name)
    BitSize
    DataType
    Rx / Tx mappable
    Default Data
    MinData
    Flags       </Action>
					<PostCondition>Error if
- mandatory object / entry is not defined
- an optional object exists and the entries are invalid
- Object / entry description does not match with the specification</PostCondition>
					<ProposalForSolution>- Define the missing objects
- correct object / entry description</ProposalForSolution>
					<References>
						<Reference Specification="ETG.5003.2011"></Reference>
					</References>
					<Mandatory>true</Mandatory>
				</Description>
				<TestStep Name="InitResult">
					<SetVariable Target="strResult">EmptyString</SetVariable>
				</TestStep>
				<TestStep Name="CheckIfOdAvailable">
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Mailbox</Value1>
							<Value2>false</Value2>
							<SkipCase Id="1">DuT does not support mailbox.</SkipCase>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Mailbox.CoE</Value1>
							<Value2>false</Value2>
							<SkipCase Id="2">DuT does not support CoE.</SkipCase>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Mailbox.CoE.SdoInfo</Value1>
							<Value2>false</Value2>
							<SkipCase Id="3">DuT does not support SDO Info.</SkipCase>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="InitAtLeastOneProfileMatch">
					<SetVariable Target="bAtLeastOneModuleMatch">false</SetVariable>
				</TestStep>
				<TestStep Name="GetCurrentProfileList">
					<SizeOf UInt32Var="u32Tmp">arrOnlineProfiles</SizeOf>
					<Compare>
						<Equal>
							<Value1>u32Tmp</Value1>
							<Value2>0</Value2>
							<CallTestFunction Name="GetCurrentProfileList">
								<Parameter>"online"</Parameter>
								<Parameter>"SafeOP"</Parameter>
								<OutParameter>arrOnlineProfiles</OutParameter>
							</CallTestFunction>
						</Equal>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>u32Tmp</Value1>
							<Value2>0</Value2>
							<WriteLine Id="4" Param0="arrOnlineProfiles" Level="Verbose">Use previously created profile list ({0})</WriteLine>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep>
					<SizeOf UInt32Var="u32Tmp">arrOnlineProfiles</SizeOf>
				</TestStep>
				<TestStep>
					<InitArray TargetArray="arrCurrentProfiles" Length="u32Tmp"></InitArray>
				</TestStep>
				<TestStep>
					<CopyArray>
						<SourceArray>arrOnlineProfiles</SourceArray>
						<DestinationArray>arrCurrentProfiles</DestinationArray>
						<Length>u32Tmp</Length>
					</CopyArray>
				</TestStep>
				<TestStep Name="IsProfileSupported">
					<CallTestFunction Name="DeviceAndModuleProfileDefined">
						<Parameter>arrCurrentProfiles</Parameter>
						<Parameter>5003</Parameter>
						<Parameter>2011</Parameter>
						<OutParameter>bAtLeastOneModuleMatch</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>bAtLeastOneModuleMatch</Value1>
							<Value2>false</Value2>
							<GotoStep>END</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="GetObjectIndexInclOffset">
					<SetVariable Target="u16ObjectIndexInclOffset">#xF010</SetVariable>
					<WriteLine Id="5" Param0="u16ObjectIndexInclOffset" Level="Verbose">ObjectIndex '0x{0:X}' (module independent)</WriteLine>
				</TestStep>
				<TestStep Name="LoadDeviceObjectDictionary">
					<Description Id="6" Level="Verbose">Load 'online' object dictionary for testing.</Description>
					<GetObjectDictionary Target="odDeviceObjectdictionary">
						<DictionaryType>Online</DictionaryType>
					</GetObjectDictionary>
					<RaiseErrorOnFailure Id="7">VerifyObject : failed to load online object dictionary.</RaiseErrorOnFailure>
				</TestStep>
				<TestStep Name="CallCheckObjectDescription">
					<Description Id="8" Param0="u16ObjectIndexInclOffset" Level="Output">Verify the object description 0x{0:X4} 'Module Profile List'.</Description>
					<CallTestFunction Name="CheckObjectDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"online"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>"Module Profile List"</Parameter>
						<Parameter>null</Parameter>
						<Parameter>8</Parameter>
						<Parameter>-1</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<GotoStep>END</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="InitEntryBittOffset">
					<SetVariable Target="i32CurrentBitOffset">0</SetVariable>
				</TestStep>
				<TestStep Name="StartSi0">
					<Description Id="9" Level="Output">Start validate SubIndex0</Description>
					<WriteLine Id="10" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : Subindex '0x{0:X}.0'</WriteLine>
				</TestStep>
				<TestStep Name="CallSi0CheckEntryDescription">
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"online"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>0</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>null</Parameter>
						<Parameter>5</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>null</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>null</Parameter>
						<Parameter>null</Parameter>
						<Parameter>null</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>8</Parameter>
						<Parameter>i32CurrentBitOffset</Parameter>
						<Parameter>true</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="EndSi0">
					<SetVariable Target="i32CurrentBitOffset">16</SetVariable>
				</TestStep>
				<TestStep Name="InitProfileLoopCounter">
					<SetVariable Target="u32ProfileCounter">0</SetVariable>
				</TestStep>
				<TestStep Name="GetProfileArrayLength">
					<SizeOf UInt32Var="u32CurrentProfilesLength">arrCurrentProfiles</SizeOf>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="11" Param0="u32CurrentProfilesLength" Level="Verbose">'{0}' Profile(s) defined online.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>u32CurrentProfilesLength</Value1>
							<Value2>0</Value2>
							<SkipCase Id="12">Skip case | no profile defined.</SkipCase>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="ProfileLoopStart">
					<GetArrayItem SourceArray="arrCurrentProfiles" Target="strTmpString" Index="u32ProfileCounter"></GetArrayItem>
				</TestStep>
				<TestStep Name="CheckProfileInformationString">
					<Compare>
						<Equal>
							<Value1>strTmpString</Value1>
							<Value2>null</Value2>
							<RaiseError Id="13" Param0="u32ProfileCounter">Profile Info element [{0}] is null.</RaiseError>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>strTmpString</Value1>
							<Value2>EmptyString</Value2>
							<RaiseError Id="14" Param0="u32ProfileCounter">Profile Info element [{0}] is an empty string.</RaiseError>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="GetDeviceProfile">
					<CallTestFunction Name="GetDeviceProfile">
						<Parameter>strTmpString</Parameter>
						<OutParameter>uint16CurDeviceProfile</OutParameter>
					</CallTestFunction>
				</TestStep>
				<TestStep Name="GetModuleProfile">
					<CallTestFunction Name="GetModuleProfile">
						<Parameter>strTmpString</Parameter>
						<OutParameter>uint16CurModuleProfile</OutParameter>
					</CallTestFunction>
				</TestStep>
				<TestStep Name="GetSubModuleProfile">
					<CallTestFunction Name="GetSubModuleProfile">
						<Parameter>strTmpString</Parameter>
						<OutParameter>uint16CurSubModuleProfile</OutParameter>
					</CallTestFunction>
				</TestStep>
				<TestStep Name="DumpProfileInfo">
					<Description Id="15" Param0="uint16CurDeviceProfile" Param1="uint16CurModuleProfile" Param2="uint16CurSubModuleProfile" Param3="u32ProfileCounter" Level="Output">Module[{3}] : DeviceProfile '{0}' ; ModuleProfile '{1}' ; SubModuleProfile '{2}'</Description>
					<Compare>
						<Equal>
							<Value1>bIgnoreProfileID</Value1>
							<Value2>true</Value2>
							<GotoStep>IndicateThatAtleastOneModuleMatch</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CompareDeviceProfile">
					<Compare>
						<NotEqual>
							<Value1>uint16CurDeviceProfile</Value1>
							<Value2>5003</Value2>
							<WriteLine Id="16" Param0="uint16CurDeviceProfile" Level="Output">Skip Profile  (Test Device Profile '5003' != Cur Device Profile '{0}')</WriteLine>
						</NotEqual>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>uint16CurDeviceProfile</Value1>
							<Value2>5003</Value2>
							<GotoStep>ProfileLoopEnd</GotoStep>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep Name="CompareModuleProfile">
					<Compare>
						<NotEqual>
							<Value1>uint16CurModuleProfile</Value1>
							<Value2>2011</Value2>
							<WriteLine Id="17" Param0="uint16CurModuleProfile" Level="Output">Skip Profile  (Test Module Profile '2011' != Cur Module Profile '{0}')</WriteLine>
						</NotEqual>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>uint16CurModuleProfile</Value1>
							<Value2>2011</Value2>
							<GotoStep>ProfileLoopEnd</GotoStep>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep Name="CompareSubModuleProfile">
					<Compare>
						<NotEqual>
							<Value1>uint16CurSubModuleProfile</Value1>
							<Value2>0</Value2>
							<WriteLine Id="18" Param0="uint16CurSubModuleProfile" Level="Output">Skip Profile  (Test SubModule Profile '0' != Cur SubModule Profile '{0}')</WriteLine>
						</NotEqual>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>uint16CurSubModuleProfile</Value1>
							<Value2>0</Value2>
							<GotoStep>ProfileLoopEnd</GotoStep>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep Name="IndicateThatAtleastOneModuleMatch">
					<SetVariable Target="bAtLeastOneModuleMatch">true</SetVariable>
				</TestStep>
				<TestStep Name="StartSi1">
					<Description Id="19" Param0="1 + (u32ProfileCounter * 1)" Level="Output">Start validate SubIndex{0}</Description>
					<SetVariable Target="byteSubIndexInclOffset">1 + (u32ProfileCounter * 1)</SetVariable>
					<WriteLine Id="20" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Param2="byteSubIndexInclOffset" Level="Verbose">Module[{1}] : Subindex '0x{0:X}.{2}'</WriteLine>
				</TestStep>
				<TestStep Name="CallSi1CheckEntryDescription">
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"online"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>byteSubIndexInclOffset</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>null</Parameter>
						<Parameter>7</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>null</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>32</Parameter>
						<Parameter>i32CurrentBitOffset</Parameter>
						<Parameter>true</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="EndSi1">
					<SetVariable Target="i32CurrentBitOffset">i32CurrentBitOffset + 32</SetVariable>
				</TestStep>
				<TestStep Name="ProfileLoopEnd">
					<Compare>
						<Equal>
							<Value1>bAtLeastOneModuleMatch</Value1>
							<Value2>false</Value2>
							<GotoStep>HandleAbortTestCaseOnFirstError</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="HandleAbortTestCaseOnFirstError">
					<Compare>
						<Equal>
							<Value1>bAbortTestCaseOnFirstError</Value1>
							<Value2>false</Value2>
							<GotoStep>ProfileLoopIncrement</GotoStep>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>strResult</Value1>
							<Value2>EmptyString</Value2>
							<GotoStep>ProfileLoopIncrement</GotoStep>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="21" Level="Output">Object verification for all following modules abort because an error was already detected for the current module.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>END</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="ProfileLoopIncrement">
					<SetVariable Target="u32ProfileCounter">u32ProfileCounter + 1</SetVariable>
					<Compare>
						<Greater>
							<Value1>u32CurrentProfilesLength</Value1>
							<Value2>u32ProfileCounter</Value2>
							<GotoStep>ProfileLoopStart</GotoStep>
						</Greater>
					</Compare>
				</TestStep>
				<TestStep Name="END">
					<Compare>
						<NotEqual>
							<Value1>bAtLeastOneModuleMatch</Value1>
							<Value2>true</Value2>
							<SkipCase Id="22">SKIP TEST(no module/channel supports the current profile)</SkipCase>
						</NotEqual>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bDEBUG</Value1>
							<Value2>true</Value2>
							<WriteLine Id="23" Param0="strResult" Level="Verbose">DEBUG | Result : '{0}'.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>strResult</Value1>
							<Value2>EmptyString</Value2>
							<ReturnSuccess Id="24">Test succeed</ReturnSuccess>
						</Equal>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>strResult</Value1>
							<Value2>EmptyString</Value2>
							<RaiseError Id="25"></RaiseError>
						</NotEqual>
					</Compare>
				</TestStep>
			</TestCase>
			<TestCase Name="offline | 0xF020 (Configured Address List)" CaseId="5">
				<Description>
					<PreCondition>- The device profile is 5003
- The module profile is 2011
- The submodule profile is 0</PreCondition>
					<Action>- Iterate over all offline defined modules/channels and if the PreCondition matches the following operations are done:
- Get the offline description of object 0xF020(+module specific offset) 'Configured Address List' and all entries
 Check:
    (Name)
    BitSize
    DataType
    Rx / Tx mappable
    Default Data
    MinData
    Flags       </Action>
					<PostCondition>Error if
- mandatory object / entry is not defined
- an optional object exists and the entries are invalid
- Object / entry description does not match with the specification</PostCondition>
					<ProposalForSolution>- Define the missing objects
- correct object / entry description</ProposalForSolution>
					<References>
						<Reference Specification="ETG.5003.2011"></Reference>
					</References>
					<Mandatory>true</Mandatory>
				</Description>
				<TestStep Name="InitResult">
					<SetVariable Target="strResult">EmptyString</SetVariable>
				</TestStep>
				<TestStep Name="CheckIfOdAvailable">
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Mailbox</Value1>
							<Value2>false</Value2>
							<SkipCase Id="1">DuT does not support mailbox.</SkipCase>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Mailbox.CoE</Value1>
							<Value2>false</Value2>
							<SkipCase Id="2">DuT does not support CoE.</SkipCase>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep>
					<GetObjectDictionary Target="odDeviceObjectdictionary">
						<DictionaryType>Offline</DictionaryType>
					</GetObjectDictionary>
					<SkipOnFailure Id="3">No offline object dictionary defined.</SkipOnFailure>
				</TestStep>
				<TestStep>
					<GetObjectList Count="u32Tmp" Target="odDeviceObjectdictionaryList" SourceDict="odDeviceObjectdictionary"></GetObjectList>
					<Compare>
						<Equal>
							<Value1>u32Tmp</Value1>
							<Value2>0</Value2>
							<SkipCase Id="4">No offline object dictionary defined.</SkipCase>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="InitAtLeastOneProfileMatch">
					<SetVariable Target="bAtLeastOneModuleMatch">false</SetVariable>
				</TestStep>
				<TestStep Name="GetCurrentProfileList">
					<SizeOf UInt32Var="u32Tmp">arrOfflineProfiles</SizeOf>
					<Compare>
						<Equal>
							<Value1>u32Tmp</Value1>
							<Value2>0</Value2>
							<CallTestFunction Name="GetCurrentProfileList">
								<Parameter>"offline"</Parameter>
								<Parameter>"SafeOP"</Parameter>
								<OutParameter>arrOfflineProfiles</OutParameter>
							</CallTestFunction>
						</Equal>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>u32Tmp</Value1>
							<Value2>0</Value2>
							<WriteLine Id="5" Param0="arrOfflineProfiles" Level="Verbose">Use previously created profile list ({0})</WriteLine>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep>
					<SizeOf UInt32Var="u32Tmp">arrOfflineProfiles</SizeOf>
				</TestStep>
				<TestStep>
					<InitArray TargetArray="arrCurrentProfiles" Length="u32Tmp"></InitArray>
				</TestStep>
				<TestStep>
					<CopyArray>
						<SourceArray>arrOfflineProfiles</SourceArray>
						<DestinationArray>arrCurrentProfiles</DestinationArray>
						<Length>u32Tmp</Length>
					</CopyArray>
				</TestStep>
				<TestStep Name="IsProfileSupported">
					<CallTestFunction Name="DeviceAndModuleProfileDefined">
						<Parameter>arrCurrentProfiles</Parameter>
						<Parameter>5003</Parameter>
						<Parameter>2011</Parameter>
						<OutParameter>bAtLeastOneModuleMatch</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>bAtLeastOneModuleMatch</Value1>
							<Value2>false</Value2>
							<GotoStep>END</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="GetObjectIndexInclOffset">
					<SetVariable Target="u16ObjectIndexInclOffset">#xF020</SetVariable>
					<WriteLine Id="6" Param0="u16ObjectIndexInclOffset" Level="Verbose">ObjectIndex '0x{0:X}' (module independent)</WriteLine>
				</TestStep>
				<TestStep Name="LoadDeviceObjectDictionary">
					<Description Id="7" Level="Verbose">Load 'offline' object dictionary for testing.</Description>
					<GetObjectDictionary Target="odDeviceObjectdictionary">
						<DictionaryType>Offline</DictionaryType>
					</GetObjectDictionary>
					<RaiseErrorOnFailure Id="8">VerifyObject : failed to load offline object dictionary.</RaiseErrorOnFailure>
				</TestStep>
				<TestStep Name="SetObjectRequiredLevel">
					<SetVariable Target="bObjectOrEntryRequiredLevel">1</SetVariable>
					<WriteLine Id="9" Param0="u16ObjectIndexInclOffset" Level="Verbose">0x{0:X4} 'Configured Address List' may be available</WriteLine>
				</TestStep>
				<TestStep Name="CheckIfObjectExists">
					<GetObjectDescription SourceDictionary="odDeviceObjectdictionary" Index="u16ObjectIndexInclOffset" SubIndex="-1"></GetObjectDescription>
					<GotoOnSuccess>CallCheckObjectDescription</GotoOnSuccess>
				</TestStep>
				<TestStep Name="HandleNotExistingObject">
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>2</Value2>
							<WriteLine Id="10" Param0="u16ObjectIndexInclOffset" Level="Warning">The object 0x{0:X4} 'Configured Address List' does not exists.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>1</Value2>
							<WriteLine Id="11" Param0="u16ObjectIndexInclOffset" Level="Output">The object 0x{0:X4} 'Configured Address List' does not exists.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>END</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CallCheckObjectDescription">
					<Description Id="12" Param0="u16ObjectIndexInclOffset" Level="Output">Verify the object description 0x{0:X4} 'Configured Address List'.</Description>
					<CallTestFunction Name="CheckObjectDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"offline"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>"Configured Address List"</Parameter>
						<Parameter>null</Parameter>
						<Parameter>8</Parameter>
						<Parameter>-1</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<GotoStep>END</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="InitEntryBittOffset">
					<SetVariable Target="i32CurrentBitOffset">0</SetVariable>
				</TestStep>
				<TestStep Name="StartSi0">
					<Description Id="13" Level="Output">Start validate SubIndex0</Description>
					<WriteLine Id="14" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : Subindex '0x{0:X}.0'</WriteLine>
				</TestStep>
				<TestStep Name="CallSi0CheckEntryDescription">
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"offline"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>0</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>null</Parameter>
						<Parameter>5</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>null</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>null</Parameter>
						<Parameter>null</Parameter>
						<Parameter>null</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>8</Parameter>
						<Parameter>i32CurrentBitOffset</Parameter>
						<Parameter>true</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="EndSi0">
					<SetVariable Target="i32CurrentBitOffset">16</SetVariable>
				</TestStep>
				<TestStep Name="InitProfileLoopCounter">
					<SetVariable Target="u32ProfileCounter">0</SetVariable>
				</TestStep>
				<TestStep Name="GetProfileArrayLength">
					<SizeOf UInt32Var="u32CurrentProfilesLength">arrCurrentProfiles</SizeOf>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="15" Param0="u32CurrentProfilesLength" Level="Verbose">'{0}' Profile(s) defined offline.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>u32CurrentProfilesLength</Value1>
							<Value2>0</Value2>
							<SkipCase Id="16">Skip case | no profile defined.</SkipCase>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="ProfileLoopStart">
					<GetArrayItem SourceArray="arrCurrentProfiles" Target="strTmpString" Index="u32ProfileCounter"></GetArrayItem>
				</TestStep>
				<TestStep Name="CheckProfileInformationString">
					<Compare>
						<Equal>
							<Value1>strTmpString</Value1>
							<Value2>null</Value2>
							<RaiseError Id="17" Param0="u32ProfileCounter">Profile Info element [{0}] is null.</RaiseError>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>strTmpString</Value1>
							<Value2>EmptyString</Value2>
							<RaiseError Id="18" Param0="u32ProfileCounter">Profile Info element [{0}] is an empty string.</RaiseError>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="GetDeviceProfile">
					<CallTestFunction Name="GetDeviceProfile">
						<Parameter>strTmpString</Parameter>
						<OutParameter>uint16CurDeviceProfile</OutParameter>
					</CallTestFunction>
				</TestStep>
				<TestStep Name="GetModuleProfile">
					<CallTestFunction Name="GetModuleProfile">
						<Parameter>strTmpString</Parameter>
						<OutParameter>uint16CurModuleProfile</OutParameter>
					</CallTestFunction>
				</TestStep>
				<TestStep Name="GetSubModuleProfile">
					<CallTestFunction Name="GetSubModuleProfile">
						<Parameter>strTmpString</Parameter>
						<OutParameter>uint16CurSubModuleProfile</OutParameter>
					</CallTestFunction>
				</TestStep>
				<TestStep Name="DumpProfileInfo">
					<Description Id="19" Param0="uint16CurDeviceProfile" Param1="uint16CurModuleProfile" Param2="uint16CurSubModuleProfile" Param3="u32ProfileCounter" Level="Output">Module[{3}] : DeviceProfile '{0}' ; ModuleProfile '{1}' ; SubModuleProfile '{2}'</Description>
					<Compare>
						<Equal>
							<Value1>bIgnoreProfileID</Value1>
							<Value2>true</Value2>
							<GotoStep>IndicateThatAtleastOneModuleMatch</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CompareDeviceProfile">
					<Compare>
						<NotEqual>
							<Value1>uint16CurDeviceProfile</Value1>
							<Value2>5003</Value2>
							<WriteLine Id="20" Param0="uint16CurDeviceProfile" Level="Output">Skip Profile  (Test Device Profile '5003' != Cur Device Profile '{0}')</WriteLine>
						</NotEqual>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>uint16CurDeviceProfile</Value1>
							<Value2>5003</Value2>
							<GotoStep>ProfileLoopEnd</GotoStep>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep Name="CompareModuleProfile">
					<Compare>
						<NotEqual>
							<Value1>uint16CurModuleProfile</Value1>
							<Value2>2011</Value2>
							<WriteLine Id="21" Param0="uint16CurModuleProfile" Level="Output">Skip Profile  (Test Module Profile '2011' != Cur Module Profile '{0}')</WriteLine>
						</NotEqual>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>uint16CurModuleProfile</Value1>
							<Value2>2011</Value2>
							<GotoStep>ProfileLoopEnd</GotoStep>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep Name="CompareSubModuleProfile">
					<Compare>
						<NotEqual>
							<Value1>uint16CurSubModuleProfile</Value1>
							<Value2>0</Value2>
							<WriteLine Id="22" Param0="uint16CurSubModuleProfile" Level="Output">Skip Profile  (Test SubModule Profile '0' != Cur SubModule Profile '{0}')</WriteLine>
						</NotEqual>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>uint16CurSubModuleProfile</Value1>
							<Value2>0</Value2>
							<GotoStep>ProfileLoopEnd</GotoStep>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep Name="IndicateThatAtleastOneModuleMatch">
					<SetVariable Target="bAtLeastOneModuleMatch">true</SetVariable>
				</TestStep>
				<TestStep Name="StartSi1">
					<Description Id="23" Param0="1 + (u32ProfileCounter * 1)" Level="Output">Start validate SubIndex{0}</Description>
					<SetVariable Target="byteSubIndexInclOffset">1 + (u32ProfileCounter * 1)</SetVariable>
					<WriteLine Id="24" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Param2="byteSubIndexInclOffset" Level="Verbose">Module[{1}] : Subindex '0x{0:X}.{2}'</WriteLine>
				</TestStep>
				<TestStep Name="SetSi1RequiredLevel">
					<SetVariable Target="bObjectOrEntryRequiredLevel">1</SetVariable>
					<WriteLine Id="25" Param0="u16ObjectIndexInclOffset" Param1="byteSubIndexInclOffset" Level="Verbose">0x{0:X4}.{1} may be available</WriteLine>
				</TestStep>
				<TestStep Name="CheckIfSi1Exists">
					<GetObjectDescription SourceDictionary="odDeviceObjectdictionary" Index="u16ObjectIndexInclOffset" SubIndex="byteSubIndexInclOffset">
						<Type>u16DataType</Type>
					</GetObjectDescription>
					<GotoOnFailure>HandleNotExistingSi1</GotoOnFailure>
				</TestStep>
				<TestStep>
					<Compare>
						<NotEqual>
							<Value1>u16DataType</Value1>
							<Value2>0</Value2>
							<GotoStep>CallSi1CheckEntryDescription</GotoStep>
						</NotEqual>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="26" Param0="u16ObjectIndexInclOffset" Level="Verbose">The entry 0x{0:X4}.1 is defined as a padding entry.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>EndSi1</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="HandleNotExistingSi1">
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="27" Param0="u16ObjectIndexInclOffset" Param1="byteSubIndexInclOffset" Level="Output">The entry 0x{0:X4}.{1} does not exists.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>EndSi1</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CallSi1CheckEntryDescription">
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"offline"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>byteSubIndexInclOffset</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>null</Parameter>
						<Parameter>7</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>null</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>32</Parameter>
						<Parameter>i32CurrentBitOffset</Parameter>
						<Parameter>true</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="EndSi1">
					<SetVariable Target="i32CurrentBitOffset">-1</SetVariable>
				</TestStep>
				<TestStep Name="ProfileLoopEnd">
					<Compare>
						<Equal>
							<Value1>bAtLeastOneModuleMatch</Value1>
							<Value2>false</Value2>
							<GotoStep>HandleAbortTestCaseOnFirstError</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="HandleAbortTestCaseOnFirstError">
					<Compare>
						<Equal>
							<Value1>bAbortTestCaseOnFirstError</Value1>
							<Value2>false</Value2>
							<GotoStep>ProfileLoopIncrement</GotoStep>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>strResult</Value1>
							<Value2>EmptyString</Value2>
							<GotoStep>ProfileLoopIncrement</GotoStep>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="28" Level="Output">Object verification for all following modules abort because an error was already detected for the current module.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>END</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="ProfileLoopIncrement">
					<SetVariable Target="u32ProfileCounter">u32ProfileCounter + 1</SetVariable>
					<Compare>
						<Greater>
							<Value1>u32CurrentProfilesLength</Value1>
							<Value2>u32ProfileCounter</Value2>
							<GotoStep>ProfileLoopStart</GotoStep>
						</Greater>
					</Compare>
				</TestStep>
				<TestStep Name="END">
					<Compare>
						<NotEqual>
							<Value1>bAtLeastOneModuleMatch</Value1>
							<Value2>true</Value2>
							<SkipCase Id="29">SKIP TEST(no module/channel supports the current profile)</SkipCase>
						</NotEqual>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bDEBUG</Value1>
							<Value2>true</Value2>
							<WriteLine Id="30" Param0="strResult" Level="Verbose">DEBUG | Result : '{0}'.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>strResult</Value1>
							<Value2>EmptyString</Value2>
							<ReturnSuccess Id="31">Test succeed</ReturnSuccess>
						</Equal>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>strResult</Value1>
							<Value2>EmptyString</Value2>
							<RaiseError Id="32"></RaiseError>
						</NotEqual>
					</Compare>
				</TestStep>
			</TestCase>
			<TestCase Name="online | 0xF020 (Configured Address List)" CaseId="6">
				<Description>
					<PreCondition>- The device profile is 5003
- The module profile is 2011
- The submodule profile is 0</PreCondition>
					<Action>- Iterate over all online defined modules/channels and if the PreCondition matches the following operations are done:
- Get the online description of object 0xF020(+module specific offset) 'Configured Address List' and all entries
 Check:
    (Name)
    BitSize
    DataType
    Rx / Tx mappable
    Default Data
    MinData
    Flags       </Action>
					<PostCondition>Error if
- mandatory object / entry is not defined
- an optional object exists and the entries are invalid
- Object / entry description does not match with the specification</PostCondition>
					<ProposalForSolution>- Define the missing objects
- correct object / entry description</ProposalForSolution>
					<References>
						<Reference Specification="ETG.5003.2011"></Reference>
					</References>
					<Mandatory>true</Mandatory>
				</Description>
				<TestStep Name="InitResult">
					<SetVariable Target="strResult">EmptyString</SetVariable>
				</TestStep>
				<TestStep Name="CheckIfOdAvailable">
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Mailbox</Value1>
							<Value2>false</Value2>
							<SkipCase Id="1">DuT does not support mailbox.</SkipCase>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Mailbox.CoE</Value1>
							<Value2>false</Value2>
							<SkipCase Id="2">DuT does not support CoE.</SkipCase>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Mailbox.CoE.SdoInfo</Value1>
							<Value2>false</Value2>
							<SkipCase Id="3">DuT does not support SDO Info.</SkipCase>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="InitAtLeastOneProfileMatch">
					<SetVariable Target="bAtLeastOneModuleMatch">false</SetVariable>
				</TestStep>
				<TestStep Name="GetCurrentProfileList">
					<SizeOf UInt32Var="u32Tmp">arrOnlineProfiles</SizeOf>
					<Compare>
						<Equal>
							<Value1>u32Tmp</Value1>
							<Value2>0</Value2>
							<CallTestFunction Name="GetCurrentProfileList">
								<Parameter>"online"</Parameter>
								<Parameter>"SafeOP"</Parameter>
								<OutParameter>arrOnlineProfiles</OutParameter>
							</CallTestFunction>
						</Equal>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>u32Tmp</Value1>
							<Value2>0</Value2>
							<WriteLine Id="4" Param0="arrOnlineProfiles" Level="Verbose">Use previously created profile list ({0})</WriteLine>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep>
					<SizeOf UInt32Var="u32Tmp">arrOnlineProfiles</SizeOf>
				</TestStep>
				<TestStep>
					<InitArray TargetArray="arrCurrentProfiles" Length="u32Tmp"></InitArray>
				</TestStep>
				<TestStep>
					<CopyArray>
						<SourceArray>arrOnlineProfiles</SourceArray>
						<DestinationArray>arrCurrentProfiles</DestinationArray>
						<Length>u32Tmp</Length>
					</CopyArray>
				</TestStep>
				<TestStep Name="IsProfileSupported">
					<CallTestFunction Name="DeviceAndModuleProfileDefined">
						<Parameter>arrCurrentProfiles</Parameter>
						<Parameter>5003</Parameter>
						<Parameter>2011</Parameter>
						<OutParameter>bAtLeastOneModuleMatch</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>bAtLeastOneModuleMatch</Value1>
							<Value2>false</Value2>
							<GotoStep>END</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="GetObjectIndexInclOffset">
					<SetVariable Target="u16ObjectIndexInclOffset">#xF020</SetVariable>
					<WriteLine Id="5" Param0="u16ObjectIndexInclOffset" Level="Verbose">ObjectIndex '0x{0:X}' (module independent)</WriteLine>
				</TestStep>
				<TestStep Name="LoadDeviceObjectDictionary">
					<Description Id="6" Level="Verbose">Load 'online' object dictionary for testing.</Description>
					<GetObjectDictionary Target="odDeviceObjectdictionary">
						<DictionaryType>Online</DictionaryType>
					</GetObjectDictionary>
					<RaiseErrorOnFailure Id="7">VerifyObject : failed to load online object dictionary.</RaiseErrorOnFailure>
				</TestStep>
				<TestStep Name="SetObjectRequiredLevel">
					<SetVariable Target="bObjectOrEntryRequiredLevel">1</SetVariable>
					<WriteLine Id="8" Param0="u16ObjectIndexInclOffset" Level="Verbose">0x{0:X4} 'Configured Address List' may be available</WriteLine>
				</TestStep>
				<TestStep Name="CheckIfObjectExists">
					<GetObjectDescription SourceDictionary="odDeviceObjectdictionary" Index="u16ObjectIndexInclOffset" SubIndex="-1"></GetObjectDescription>
					<GotoOnSuccess>CallCheckObjectDescription</GotoOnSuccess>
				</TestStep>
				<TestStep Name="HandleNotExistingObject">
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>2</Value2>
							<WriteLine Id="9" Param0="u16ObjectIndexInclOffset" Level="Warning">The object 0x{0:X4} 'Configured Address List' does not exists.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>1</Value2>
							<WriteLine Id="10" Param0="u16ObjectIndexInclOffset" Level="Output">The object 0x{0:X4} 'Configured Address List' does not exists.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>END</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CallCheckObjectDescription">
					<Description Id="11" Param0="u16ObjectIndexInclOffset" Level="Output">Verify the object description 0x{0:X4} 'Configured Address List'.</Description>
					<CallTestFunction Name="CheckObjectDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"online"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>"Configured Address List"</Parameter>
						<Parameter>null</Parameter>
						<Parameter>8</Parameter>
						<Parameter>-1</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<GotoStep>END</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="InitEntryBittOffset">
					<SetVariable Target="i32CurrentBitOffset">0</SetVariable>
				</TestStep>
				<TestStep Name="StartSi0">
					<Description Id="12" Level="Output">Start validate SubIndex0</Description>
					<WriteLine Id="13" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : Subindex '0x{0:X}.0'</WriteLine>
				</TestStep>
				<TestStep Name="CallSi0CheckEntryDescription">
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"online"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>0</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>null</Parameter>
						<Parameter>5</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>null</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>null</Parameter>
						<Parameter>null</Parameter>
						<Parameter>null</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>8</Parameter>
						<Parameter>i32CurrentBitOffset</Parameter>
						<Parameter>true</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="EndSi0">
					<SetVariable Target="i32CurrentBitOffset">16</SetVariable>
				</TestStep>
				<TestStep Name="InitProfileLoopCounter">
					<SetVariable Target="u32ProfileCounter">0</SetVariable>
				</TestStep>
				<TestStep Name="GetProfileArrayLength">
					<SizeOf UInt32Var="u32CurrentProfilesLength">arrCurrentProfiles</SizeOf>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="14" Param0="u32CurrentProfilesLength" Level="Verbose">'{0}' Profile(s) defined online.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>u32CurrentProfilesLength</Value1>
							<Value2>0</Value2>
							<SkipCase Id="15">Skip case | no profile defined.</SkipCase>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="ProfileLoopStart">
					<GetArrayItem SourceArray="arrCurrentProfiles" Target="strTmpString" Index="u32ProfileCounter"></GetArrayItem>
				</TestStep>
				<TestStep Name="CheckProfileInformationString">
					<Compare>
						<Equal>
							<Value1>strTmpString</Value1>
							<Value2>null</Value2>
							<RaiseError Id="16" Param0="u32ProfileCounter">Profile Info element [{0}] is null.</RaiseError>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>strTmpString</Value1>
							<Value2>EmptyString</Value2>
							<RaiseError Id="17" Param0="u32ProfileCounter">Profile Info element [{0}] is an empty string.</RaiseError>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="GetDeviceProfile">
					<CallTestFunction Name="GetDeviceProfile">
						<Parameter>strTmpString</Parameter>
						<OutParameter>uint16CurDeviceProfile</OutParameter>
					</CallTestFunction>
				</TestStep>
				<TestStep Name="GetModuleProfile">
					<CallTestFunction Name="GetModuleProfile">
						<Parameter>strTmpString</Parameter>
						<OutParameter>uint16CurModuleProfile</OutParameter>
					</CallTestFunction>
				</TestStep>
				<TestStep Name="GetSubModuleProfile">
					<CallTestFunction Name="GetSubModuleProfile">
						<Parameter>strTmpString</Parameter>
						<OutParameter>uint16CurSubModuleProfile</OutParameter>
					</CallTestFunction>
				</TestStep>
				<TestStep Name="DumpProfileInfo">
					<Description Id="18" Param0="uint16CurDeviceProfile" Param1="uint16CurModuleProfile" Param2="uint16CurSubModuleProfile" Param3="u32ProfileCounter" Level="Output">Module[{3}] : DeviceProfile '{0}' ; ModuleProfile '{1}' ; SubModuleProfile '{2}'</Description>
					<Compare>
						<Equal>
							<Value1>bIgnoreProfileID</Value1>
							<Value2>true</Value2>
							<GotoStep>IndicateThatAtleastOneModuleMatch</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CompareDeviceProfile">
					<Compare>
						<NotEqual>
							<Value1>uint16CurDeviceProfile</Value1>
							<Value2>5003</Value2>
							<WriteLine Id="19" Param0="uint16CurDeviceProfile" Level="Output">Skip Profile  (Test Device Profile '5003' != Cur Device Profile '{0}')</WriteLine>
						</NotEqual>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>uint16CurDeviceProfile</Value1>
							<Value2>5003</Value2>
							<GotoStep>ProfileLoopEnd</GotoStep>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep Name="CompareModuleProfile">
					<Compare>
						<NotEqual>
							<Value1>uint16CurModuleProfile</Value1>
							<Value2>2011</Value2>
							<WriteLine Id="20" Param0="uint16CurModuleProfile" Level="Output">Skip Profile  (Test Module Profile '2011' != Cur Module Profile '{0}')</WriteLine>
						</NotEqual>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>uint16CurModuleProfile</Value1>
							<Value2>2011</Value2>
							<GotoStep>ProfileLoopEnd</GotoStep>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep Name="CompareSubModuleProfile">
					<Compare>
						<NotEqual>
							<Value1>uint16CurSubModuleProfile</Value1>
							<Value2>0</Value2>
							<WriteLine Id="21" Param0="uint16CurSubModuleProfile" Level="Output">Skip Profile  (Test SubModule Profile '0' != Cur SubModule Profile '{0}')</WriteLine>
						</NotEqual>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>uint16CurSubModuleProfile</Value1>
							<Value2>0</Value2>
							<GotoStep>ProfileLoopEnd</GotoStep>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep Name="IndicateThatAtleastOneModuleMatch">
					<SetVariable Target="bAtLeastOneModuleMatch">true</SetVariable>
				</TestStep>
				<TestStep Name="StartSi1">
					<Description Id="22" Param0="1 + (u32ProfileCounter * 1)" Level="Output">Start validate SubIndex{0}</Description>
					<SetVariable Target="byteSubIndexInclOffset">1 + (u32ProfileCounter * 1)</SetVariable>
					<WriteLine Id="23" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Param2="byteSubIndexInclOffset" Level="Verbose">Module[{1}] : Subindex '0x{0:X}.{2}'</WriteLine>
				</TestStep>
				<TestStep Name="SetSi1RequiredLevel">
					<SetVariable Target="bObjectOrEntryRequiredLevel">1</SetVariable>
					<WriteLine Id="24" Param0="u16ObjectIndexInclOffset" Param1="byteSubIndexInclOffset" Level="Verbose">0x{0:X4}.{1} may be available</WriteLine>
				</TestStep>
				<TestStep Name="CheckIfSi1Exists">
					<GetObjectDescription SourceDictionary="odDeviceObjectdictionary" Index="u16ObjectIndexInclOffset" SubIndex="byteSubIndexInclOffset">
						<Type>u16DataType</Type>
					</GetObjectDescription>
					<GotoOnFailure>HandleNotExistingSi1</GotoOnFailure>
				</TestStep>
				<TestStep>
					<Compare>
						<NotEqual>
							<Value1>u16DataType</Value1>
							<Value2>0</Value2>
							<GotoStep>CallSi1CheckEntryDescription</GotoStep>
						</NotEqual>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="25" Param0="u16ObjectIndexInclOffset" Level="Verbose">The entry 0x{0:X4}.1 is defined as a padding entry.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>EndSi1</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="HandleNotExistingSi1">
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="26" Param0="u16ObjectIndexInclOffset" Param1="byteSubIndexInclOffset" Level="Output">The entry 0x{0:X4}.{1} does not exists.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>EndSi1</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CallSi1CheckEntryDescription">
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"online"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>byteSubIndexInclOffset</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>null</Parameter>
						<Parameter>7</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>null</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>32</Parameter>
						<Parameter>i32CurrentBitOffset</Parameter>
						<Parameter>true</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="EndSi1">
					<SetVariable Target="i32CurrentBitOffset">-1</SetVariable>
				</TestStep>
				<TestStep Name="ProfileLoopEnd">
					<Compare>
						<Equal>
							<Value1>bAtLeastOneModuleMatch</Value1>
							<Value2>false</Value2>
							<GotoStep>HandleAbortTestCaseOnFirstError</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="HandleAbortTestCaseOnFirstError">
					<Compare>
						<Equal>
							<Value1>bAbortTestCaseOnFirstError</Value1>
							<Value2>false</Value2>
							<GotoStep>ProfileLoopIncrement</GotoStep>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>strResult</Value1>
							<Value2>EmptyString</Value2>
							<GotoStep>ProfileLoopIncrement</GotoStep>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="27" Level="Output">Object verification for all following modules abort because an error was already detected for the current module.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>END</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="ProfileLoopIncrement">
					<SetVariable Target="u32ProfileCounter">u32ProfileCounter + 1</SetVariable>
					<Compare>
						<Greater>
							<Value1>u32CurrentProfilesLength</Value1>
							<Value2>u32ProfileCounter</Value2>
							<GotoStep>ProfileLoopStart</GotoStep>
						</Greater>
					</Compare>
				</TestStep>
				<TestStep Name="END">
					<Compare>
						<NotEqual>
							<Value1>bAtLeastOneModuleMatch</Value1>
							<Value2>true</Value2>
							<SkipCase Id="28">SKIP TEST(no module/channel supports the current profile)</SkipCase>
						</NotEqual>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bDEBUG</Value1>
							<Value2>true</Value2>
							<WriteLine Id="29" Param0="strResult" Level="Verbose">DEBUG | Result : '{0}'.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>strResult</Value1>
							<Value2>EmptyString</Value2>
							<ReturnSuccess Id="30">Test succeed</ReturnSuccess>
						</Equal>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>strResult</Value1>
							<Value2>EmptyString</Value2>
							<RaiseError Id="31"></RaiseError>
						</NotEqual>
					</Compare>
				</TestStep>
			</TestCase>
			<TestCase Name="offline | 0xF030 (Configured Module Ident List)" CaseId="7">
				<Description>
					<PreCondition>- The device profile is 5003
- The module profile is 2011
- The submodule profile is 0</PreCondition>
					<Action>- Iterate over all offline defined modules/channels and if the PreCondition matches the following operations are done:
- Get the offline description of object 0xF030(+module specific offset) 'Configured Module Ident List' and all entries
 Check:
    (Name)
    BitSize
    DataType
    Rx / Tx mappable
    Default Data
    MinData
    Flags       </Action>
					<PostCondition>Error if
- mandatory object / entry is not defined
- an optional object exists and the entries are invalid
- Object / entry description does not match with the specification</PostCondition>
					<ProposalForSolution>- Define the missing objects
- correct object / entry description</ProposalForSolution>
					<References>
						<Reference Specification="ETG.5003.2011"></Reference>
					</References>
					<Mandatory>true</Mandatory>
				</Description>
				<TestStep Name="InitResult">
					<SetVariable Target="strResult">EmptyString</SetVariable>
				</TestStep>
				<TestStep Name="CheckIfOdAvailable">
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Mailbox</Value1>
							<Value2>false</Value2>
							<SkipCase Id="1">DuT does not support mailbox.</SkipCase>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Mailbox.CoE</Value1>
							<Value2>false</Value2>
							<SkipCase Id="2">DuT does not support CoE.</SkipCase>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep>
					<GetObjectDictionary Target="odDeviceObjectdictionary">
						<DictionaryType>Offline</DictionaryType>
					</GetObjectDictionary>
					<SkipOnFailure Id="3">No offline object dictionary defined.</SkipOnFailure>
				</TestStep>
				<TestStep>
					<GetObjectList Count="u32Tmp" Target="odDeviceObjectdictionaryList" SourceDict="odDeviceObjectdictionary"></GetObjectList>
					<Compare>
						<Equal>
							<Value1>u32Tmp</Value1>
							<Value2>0</Value2>
							<SkipCase Id="4">No offline object dictionary defined.</SkipCase>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="InitAtLeastOneProfileMatch">
					<SetVariable Target="bAtLeastOneModuleMatch">false</SetVariable>
				</TestStep>
				<TestStep Name="GetCurrentProfileList">
					<SizeOf UInt32Var="u32Tmp">arrOfflineProfiles</SizeOf>
					<Compare>
						<Equal>
							<Value1>u32Tmp</Value1>
							<Value2>0</Value2>
							<CallTestFunction Name="GetCurrentProfileList">
								<Parameter>"offline"</Parameter>
								<Parameter>"SafeOP"</Parameter>
								<OutParameter>arrOfflineProfiles</OutParameter>
							</CallTestFunction>
						</Equal>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>u32Tmp</Value1>
							<Value2>0</Value2>
							<WriteLine Id="5" Param0="arrOfflineProfiles" Level="Verbose">Use previously created profile list ({0})</WriteLine>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep>
					<SizeOf UInt32Var="u32Tmp">arrOfflineProfiles</SizeOf>
				</TestStep>
				<TestStep>
					<InitArray TargetArray="arrCurrentProfiles" Length="u32Tmp"></InitArray>
				</TestStep>
				<TestStep>
					<CopyArray>
						<SourceArray>arrOfflineProfiles</SourceArray>
						<DestinationArray>arrCurrentProfiles</DestinationArray>
						<Length>u32Tmp</Length>
					</CopyArray>
				</TestStep>
				<TestStep Name="IsProfileSupported">
					<CallTestFunction Name="DeviceAndModuleProfileDefined">
						<Parameter>arrCurrentProfiles</Parameter>
						<Parameter>5003</Parameter>
						<Parameter>2011</Parameter>
						<OutParameter>bAtLeastOneModuleMatch</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>bAtLeastOneModuleMatch</Value1>
							<Value2>false</Value2>
							<GotoStep>END</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="GetObjectIndexInclOffset">
					<SetVariable Target="u16ObjectIndexInclOffset">#xF030</SetVariable>
					<WriteLine Id="6" Param0="u16ObjectIndexInclOffset" Level="Verbose">ObjectIndex '0x{0:X}' (module independent)</WriteLine>
				</TestStep>
				<TestStep Name="LoadDeviceObjectDictionary">
					<Description Id="7" Level="Verbose">Load 'offline' object dictionary for testing.</Description>
					<GetObjectDictionary Target="odDeviceObjectdictionary">
						<DictionaryType>Offline</DictionaryType>
					</GetObjectDictionary>
					<RaiseErrorOnFailure Id="8">VerifyObject : failed to load offline object dictionary.</RaiseErrorOnFailure>
				</TestStep>
				<TestStep Name="SetObjectRequiredLevel">
					<SetVariable Target="bObjectOrEntryRequiredLevel">1</SetVariable>
					<WriteLine Id="9" Param0="u16ObjectIndexInclOffset" Level="Verbose">0x{0:X4} 'Configured Module Ident List' may be available</WriteLine>
				</TestStep>
				<TestStep Name="CheckIfObjectExists">
					<GetObjectDescription SourceDictionary="odDeviceObjectdictionary" Index="u16ObjectIndexInclOffset" SubIndex="-1"></GetObjectDescription>
					<GotoOnSuccess>CallCheckObjectDescription</GotoOnSuccess>
				</TestStep>
				<TestStep Name="HandleNotExistingObject">
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>2</Value2>
							<WriteLine Id="10" Param0="u16ObjectIndexInclOffset" Level="Warning">The object 0x{0:X4} 'Configured Module Ident List' does not exists.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>1</Value2>
							<WriteLine Id="11" Param0="u16ObjectIndexInclOffset" Level="Output">The object 0x{0:X4} 'Configured Module Ident List' does not exists.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>END</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CallCheckObjectDescription">
					<Description Id="12" Param0="u16ObjectIndexInclOffset" Level="Output">Verify the object description 0x{0:X4} 'Configured Module Ident List'.</Description>
					<CallTestFunction Name="CheckObjectDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"offline"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>"Configured Module Ident List"</Parameter>
						<Parameter>null</Parameter>
						<Parameter>8</Parameter>
						<Parameter>-1</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<GotoStep>END</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="InitEntryBittOffset">
					<SetVariable Target="i32CurrentBitOffset">0</SetVariable>
				</TestStep>
				<TestStep Name="StartSi0">
					<Description Id="13" Level="Output">Start validate SubIndex0</Description>
					<WriteLine Id="14" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : Subindex '0x{0:X}.0'</WriteLine>
				</TestStep>
				<TestStep Name="CallSi0CheckEntryDescription">
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"offline"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>0</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>null</Parameter>
						<Parameter>5</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>null</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>null</Parameter>
						<Parameter>null</Parameter>
						<Parameter>null</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>8</Parameter>
						<Parameter>i32CurrentBitOffset</Parameter>
						<Parameter>true</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="EndSi0">
					<SetVariable Target="i32CurrentBitOffset">16</SetVariable>
				</TestStep>
				<TestStep Name="InitProfileLoopCounter">
					<SetVariable Target="u32ProfileCounter">0</SetVariable>
				</TestStep>
				<TestStep Name="GetProfileArrayLength">
					<SizeOf UInt32Var="u32CurrentProfilesLength">arrCurrentProfiles</SizeOf>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="15" Param0="u32CurrentProfilesLength" Level="Verbose">'{0}' Profile(s) defined offline.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>u32CurrentProfilesLength</Value1>
							<Value2>0</Value2>
							<SkipCase Id="16">Skip case | no profile defined.</SkipCase>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="ProfileLoopStart">
					<GetArrayItem SourceArray="arrCurrentProfiles" Target="strTmpString" Index="u32ProfileCounter"></GetArrayItem>
				</TestStep>
				<TestStep Name="CheckProfileInformationString">
					<Compare>
						<Equal>
							<Value1>strTmpString</Value1>
							<Value2>null</Value2>
							<RaiseError Id="17" Param0="u32ProfileCounter">Profile Info element [{0}] is null.</RaiseError>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>strTmpString</Value1>
							<Value2>EmptyString</Value2>
							<RaiseError Id="18" Param0="u32ProfileCounter">Profile Info element [{0}] is an empty string.</RaiseError>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="GetDeviceProfile">
					<CallTestFunction Name="GetDeviceProfile">
						<Parameter>strTmpString</Parameter>
						<OutParameter>uint16CurDeviceProfile</OutParameter>
					</CallTestFunction>
				</TestStep>
				<TestStep Name="GetModuleProfile">
					<CallTestFunction Name="GetModuleProfile">
						<Parameter>strTmpString</Parameter>
						<OutParameter>uint16CurModuleProfile</OutParameter>
					</CallTestFunction>
				</TestStep>
				<TestStep Name="GetSubModuleProfile">
					<CallTestFunction Name="GetSubModuleProfile">
						<Parameter>strTmpString</Parameter>
						<OutParameter>uint16CurSubModuleProfile</OutParameter>
					</CallTestFunction>
				</TestStep>
				<TestStep Name="DumpProfileInfo">
					<Description Id="19" Param0="uint16CurDeviceProfile" Param1="uint16CurModuleProfile" Param2="uint16CurSubModuleProfile" Param3="u32ProfileCounter" Level="Output">Module[{3}] : DeviceProfile '{0}' ; ModuleProfile '{1}' ; SubModuleProfile '{2}'</Description>
					<Compare>
						<Equal>
							<Value1>bIgnoreProfileID</Value1>
							<Value2>true</Value2>
							<GotoStep>IndicateThatAtleastOneModuleMatch</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CompareDeviceProfile">
					<Compare>
						<NotEqual>
							<Value1>uint16CurDeviceProfile</Value1>
							<Value2>5003</Value2>
							<WriteLine Id="20" Param0="uint16CurDeviceProfile" Level="Output">Skip Profile  (Test Device Profile '5003' != Cur Device Profile '{0}')</WriteLine>
						</NotEqual>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>uint16CurDeviceProfile</Value1>
							<Value2>5003</Value2>
							<GotoStep>ProfileLoopEnd</GotoStep>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep Name="CompareModuleProfile">
					<Compare>
						<NotEqual>
							<Value1>uint16CurModuleProfile</Value1>
							<Value2>2011</Value2>
							<WriteLine Id="21" Param0="uint16CurModuleProfile" Level="Output">Skip Profile  (Test Module Profile '2011' != Cur Module Profile '{0}')</WriteLine>
						</NotEqual>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>uint16CurModuleProfile</Value1>
							<Value2>2011</Value2>
							<GotoStep>ProfileLoopEnd</GotoStep>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep Name="CompareSubModuleProfile">
					<Compare>
						<NotEqual>
							<Value1>uint16CurSubModuleProfile</Value1>
							<Value2>0</Value2>
							<WriteLine Id="22" Param0="uint16CurSubModuleProfile" Level="Output">Skip Profile  (Test SubModule Profile '0' != Cur SubModule Profile '{0}')</WriteLine>
						</NotEqual>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>uint16CurSubModuleProfile</Value1>
							<Value2>0</Value2>
							<GotoStep>ProfileLoopEnd</GotoStep>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep Name="IndicateThatAtleastOneModuleMatch">
					<SetVariable Target="bAtLeastOneModuleMatch">true</SetVariable>
				</TestStep>
				<TestStep Name="StartSi1">
					<Description Id="23" Param0="1 + (u32ProfileCounter * 1)" Level="Output">Start validate SubIndex{0}</Description>
					<SetVariable Target="byteSubIndexInclOffset">1 + (u32ProfileCounter * 1)</SetVariable>
					<WriteLine Id="24" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Param2="byteSubIndexInclOffset" Level="Verbose">Module[{1}] : Subindex '0x{0:X}.{2}'</WriteLine>
				</TestStep>
				<TestStep Name="SetSi1RequiredLevel">
					<SetVariable Target="bObjectOrEntryRequiredLevel">1</SetVariable>
					<WriteLine Id="25" Param0="u16ObjectIndexInclOffset" Param1="byteSubIndexInclOffset" Level="Verbose">0x{0:X4}.{1} may be available</WriteLine>
				</TestStep>
				<TestStep Name="CheckIfSi1Exists">
					<GetObjectDescription SourceDictionary="odDeviceObjectdictionary" Index="u16ObjectIndexInclOffset" SubIndex="byteSubIndexInclOffset">
						<Type>u16DataType</Type>
					</GetObjectDescription>
					<GotoOnFailure>HandleNotExistingSi1</GotoOnFailure>
				</TestStep>
				<TestStep>
					<Compare>
						<NotEqual>
							<Value1>u16DataType</Value1>
							<Value2>0</Value2>
							<GotoStep>CallSi1CheckEntryDescription</GotoStep>
						</NotEqual>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="26" Param0="u16ObjectIndexInclOffset" Level="Verbose">The entry 0x{0:X4}.1 is defined as a padding entry.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>EndSi1</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="HandleNotExistingSi1">
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="27" Param0="u16ObjectIndexInclOffset" Param1="byteSubIndexInclOffset" Level="Output">The entry 0x{0:X4}.{1} does not exists.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>EndSi1</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CallSi1CheckEntryDescription">
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"offline"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>byteSubIndexInclOffset</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>null</Parameter>
						<Parameter>7</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>null</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>32</Parameter>
						<Parameter>i32CurrentBitOffset</Parameter>
						<Parameter>true</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="EndSi1">
					<SetVariable Target="i32CurrentBitOffset">-1</SetVariable>
				</TestStep>
				<TestStep Name="ProfileLoopEnd">
					<Compare>
						<Equal>
							<Value1>bAtLeastOneModuleMatch</Value1>
							<Value2>false</Value2>
							<GotoStep>HandleAbortTestCaseOnFirstError</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="HandleAbortTestCaseOnFirstError">
					<Compare>
						<Equal>
							<Value1>bAbortTestCaseOnFirstError</Value1>
							<Value2>false</Value2>
							<GotoStep>ProfileLoopIncrement</GotoStep>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>strResult</Value1>
							<Value2>EmptyString</Value2>
							<GotoStep>ProfileLoopIncrement</GotoStep>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="28" Level="Output">Object verification for all following modules abort because an error was already detected for the current module.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>END</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="ProfileLoopIncrement">
					<SetVariable Target="u32ProfileCounter">u32ProfileCounter + 1</SetVariable>
					<Compare>
						<Greater>
							<Value1>u32CurrentProfilesLength</Value1>
							<Value2>u32ProfileCounter</Value2>
							<GotoStep>ProfileLoopStart</GotoStep>
						</Greater>
					</Compare>
				</TestStep>
				<TestStep Name="END">
					<Compare>
						<NotEqual>
							<Value1>bAtLeastOneModuleMatch</Value1>
							<Value2>true</Value2>
							<SkipCase Id="29">SKIP TEST(no module/channel supports the current profile)</SkipCase>
						</NotEqual>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bDEBUG</Value1>
							<Value2>true</Value2>
							<WriteLine Id="30" Param0="strResult" Level="Verbose">DEBUG | Result : '{0}'.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>strResult</Value1>
							<Value2>EmptyString</Value2>
							<ReturnSuccess Id="31">Test succeed</ReturnSuccess>
						</Equal>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>strResult</Value1>
							<Value2>EmptyString</Value2>
							<RaiseError Id="32"></RaiseError>
						</NotEqual>
					</Compare>
				</TestStep>
			</TestCase>
			<TestCase Name="online | 0xF030 (Configured Module Ident List)" CaseId="8">
				<Description>
					<PreCondition>- The device profile is 5003
- The module profile is 2011
- The submodule profile is 0</PreCondition>
					<Action>- Iterate over all online defined modules/channels and if the PreCondition matches the following operations are done:
- Get the online description of object 0xF030(+module specific offset) 'Configured Module Ident List' and all entries
 Check:
    (Name)
    BitSize
    DataType
    Rx / Tx mappable
    Default Data
    MinData
    Flags       </Action>
					<PostCondition>Error if
- mandatory object / entry is not defined
- an optional object exists and the entries are invalid
- Object / entry description does not match with the specification</PostCondition>
					<ProposalForSolution>- Define the missing objects
- correct object / entry description</ProposalForSolution>
					<References>
						<Reference Specification="ETG.5003.2011"></Reference>
					</References>
					<Mandatory>true</Mandatory>
				</Description>
				<TestStep Name="InitResult">
					<SetVariable Target="strResult">EmptyString</SetVariable>
				</TestStep>
				<TestStep Name="CheckIfOdAvailable">
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Mailbox</Value1>
							<Value2>false</Value2>
							<SkipCase Id="1">DuT does not support mailbox.</SkipCase>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Mailbox.CoE</Value1>
							<Value2>false</Value2>
							<SkipCase Id="2">DuT does not support CoE.</SkipCase>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Mailbox.CoE.SdoInfo</Value1>
							<Value2>false</Value2>
							<SkipCase Id="3">DuT does not support SDO Info.</SkipCase>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="InitAtLeastOneProfileMatch">
					<SetVariable Target="bAtLeastOneModuleMatch">false</SetVariable>
				</TestStep>
				<TestStep Name="GetCurrentProfileList">
					<SizeOf UInt32Var="u32Tmp">arrOnlineProfiles</SizeOf>
					<Compare>
						<Equal>
							<Value1>u32Tmp</Value1>
							<Value2>0</Value2>
							<CallTestFunction Name="GetCurrentProfileList">
								<Parameter>"online"</Parameter>
								<Parameter>"SafeOP"</Parameter>
								<OutParameter>arrOnlineProfiles</OutParameter>
							</CallTestFunction>
						</Equal>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>u32Tmp</Value1>
							<Value2>0</Value2>
							<WriteLine Id="4" Param0="arrOnlineProfiles" Level="Verbose">Use previously created profile list ({0})</WriteLine>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep>
					<SizeOf UInt32Var="u32Tmp">arrOnlineProfiles</SizeOf>
				</TestStep>
				<TestStep>
					<InitArray TargetArray="arrCurrentProfiles" Length="u32Tmp"></InitArray>
				</TestStep>
				<TestStep>
					<CopyArray>
						<SourceArray>arrOnlineProfiles</SourceArray>
						<DestinationArray>arrCurrentProfiles</DestinationArray>
						<Length>u32Tmp</Length>
					</CopyArray>
				</TestStep>
				<TestStep Name="IsProfileSupported">
					<CallTestFunction Name="DeviceAndModuleProfileDefined">
						<Parameter>arrCurrentProfiles</Parameter>
						<Parameter>5003</Parameter>
						<Parameter>2011</Parameter>
						<OutParameter>bAtLeastOneModuleMatch</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>bAtLeastOneModuleMatch</Value1>
							<Value2>false</Value2>
							<GotoStep>END</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="GetObjectIndexInclOffset">
					<SetVariable Target="u16ObjectIndexInclOffset">#xF030</SetVariable>
					<WriteLine Id="5" Param0="u16ObjectIndexInclOffset" Level="Verbose">ObjectIndex '0x{0:X}' (module independent)</WriteLine>
				</TestStep>
				<TestStep Name="LoadDeviceObjectDictionary">
					<Description Id="6" Level="Verbose">Load 'online' object dictionary for testing.</Description>
					<GetObjectDictionary Target="odDeviceObjectdictionary">
						<DictionaryType>Online</DictionaryType>
					</GetObjectDictionary>
					<RaiseErrorOnFailure Id="7">VerifyObject : failed to load online object dictionary.</RaiseErrorOnFailure>
				</TestStep>
				<TestStep Name="SetObjectRequiredLevel">
					<SetVariable Target="bObjectOrEntryRequiredLevel">1</SetVariable>
					<WriteLine Id="8" Param0="u16ObjectIndexInclOffset" Level="Verbose">0x{0:X4} 'Configured Module Ident List' may be available</WriteLine>
				</TestStep>
				<TestStep Name="CheckIfObjectExists">
					<GetObjectDescription SourceDictionary="odDeviceObjectdictionary" Index="u16ObjectIndexInclOffset" SubIndex="-1"></GetObjectDescription>
					<GotoOnSuccess>CallCheckObjectDescription</GotoOnSuccess>
				</TestStep>
				<TestStep Name="HandleNotExistingObject">
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>2</Value2>
							<WriteLine Id="9" Param0="u16ObjectIndexInclOffset" Level="Warning">The object 0x{0:X4} 'Configured Module Ident List' does not exists.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>1</Value2>
							<WriteLine Id="10" Param0="u16ObjectIndexInclOffset" Level="Output">The object 0x{0:X4} 'Configured Module Ident List' does not exists.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>END</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CallCheckObjectDescription">
					<Description Id="11" Param0="u16ObjectIndexInclOffset" Level="Output">Verify the object description 0x{0:X4} 'Configured Module Ident List'.</Description>
					<CallTestFunction Name="CheckObjectDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"online"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>"Configured Module Ident List"</Parameter>
						<Parameter>null</Parameter>
						<Parameter>8</Parameter>
						<Parameter>-1</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<GotoStep>END</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="InitEntryBittOffset">
					<SetVariable Target="i32CurrentBitOffset">0</SetVariable>
				</TestStep>
				<TestStep Name="StartSi0">
					<Description Id="12" Level="Output">Start validate SubIndex0</Description>
					<WriteLine Id="13" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : Subindex '0x{0:X}.0'</WriteLine>
				</TestStep>
				<TestStep Name="CallSi0CheckEntryDescription">
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"online"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>0</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>null</Parameter>
						<Parameter>5</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>null</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>null</Parameter>
						<Parameter>null</Parameter>
						<Parameter>null</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>8</Parameter>
						<Parameter>i32CurrentBitOffset</Parameter>
						<Parameter>true</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="EndSi0">
					<SetVariable Target="i32CurrentBitOffset">16</SetVariable>
				</TestStep>
				<TestStep Name="InitProfileLoopCounter">
					<SetVariable Target="u32ProfileCounter">0</SetVariable>
				</TestStep>
				<TestStep Name="GetProfileArrayLength">
					<SizeOf UInt32Var="u32CurrentProfilesLength">arrCurrentProfiles</SizeOf>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="14" Param0="u32CurrentProfilesLength" Level="Verbose">'{0}' Profile(s) defined online.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>u32CurrentProfilesLength</Value1>
							<Value2>0</Value2>
							<SkipCase Id="15">Skip case | no profile defined.</SkipCase>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="ProfileLoopStart">
					<GetArrayItem SourceArray="arrCurrentProfiles" Target="strTmpString" Index="u32ProfileCounter"></GetArrayItem>
				</TestStep>
				<TestStep Name="CheckProfileInformationString">
					<Compare>
						<Equal>
							<Value1>strTmpString</Value1>
							<Value2>null</Value2>
							<RaiseError Id="16" Param0="u32ProfileCounter">Profile Info element [{0}] is null.</RaiseError>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>strTmpString</Value1>
							<Value2>EmptyString</Value2>
							<RaiseError Id="17" Param0="u32ProfileCounter">Profile Info element [{0}] is an empty string.</RaiseError>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="GetDeviceProfile">
					<CallTestFunction Name="GetDeviceProfile">
						<Parameter>strTmpString</Parameter>
						<OutParameter>uint16CurDeviceProfile</OutParameter>
					</CallTestFunction>
				</TestStep>
				<TestStep Name="GetModuleProfile">
					<CallTestFunction Name="GetModuleProfile">
						<Parameter>strTmpString</Parameter>
						<OutParameter>uint16CurModuleProfile</OutParameter>
					</CallTestFunction>
				</TestStep>
				<TestStep Name="GetSubModuleProfile">
					<CallTestFunction Name="GetSubModuleProfile">
						<Parameter>strTmpString</Parameter>
						<OutParameter>uint16CurSubModuleProfile</OutParameter>
					</CallTestFunction>
				</TestStep>
				<TestStep Name="DumpProfileInfo">
					<Description Id="18" Param0="uint16CurDeviceProfile" Param1="uint16CurModuleProfile" Param2="uint16CurSubModuleProfile" Param3="u32ProfileCounter" Level="Output">Module[{3}] : DeviceProfile '{0}' ; ModuleProfile '{1}' ; SubModuleProfile '{2}'</Description>
					<Compare>
						<Equal>
							<Value1>bIgnoreProfileID</Value1>
							<Value2>true</Value2>
							<GotoStep>IndicateThatAtleastOneModuleMatch</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CompareDeviceProfile">
					<Compare>
						<NotEqual>
							<Value1>uint16CurDeviceProfile</Value1>
							<Value2>5003</Value2>
							<WriteLine Id="19" Param0="uint16CurDeviceProfile" Level="Output">Skip Profile  (Test Device Profile '5003' != Cur Device Profile '{0}')</WriteLine>
						</NotEqual>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>uint16CurDeviceProfile</Value1>
							<Value2>5003</Value2>
							<GotoStep>ProfileLoopEnd</GotoStep>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep Name="CompareModuleProfile">
					<Compare>
						<NotEqual>
							<Value1>uint16CurModuleProfile</Value1>
							<Value2>2011</Value2>
							<WriteLine Id="20" Param0="uint16CurModuleProfile" Level="Output">Skip Profile  (Test Module Profile '2011' != Cur Module Profile '{0}')</WriteLine>
						</NotEqual>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>uint16CurModuleProfile</Value1>
							<Value2>2011</Value2>
							<GotoStep>ProfileLoopEnd</GotoStep>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep Name="CompareSubModuleProfile">
					<Compare>
						<NotEqual>
							<Value1>uint16CurSubModuleProfile</Value1>
							<Value2>0</Value2>
							<WriteLine Id="21" Param0="uint16CurSubModuleProfile" Level="Output">Skip Profile  (Test SubModule Profile '0' != Cur SubModule Profile '{0}')</WriteLine>
						</NotEqual>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>uint16CurSubModuleProfile</Value1>
							<Value2>0</Value2>
							<GotoStep>ProfileLoopEnd</GotoStep>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep Name="IndicateThatAtleastOneModuleMatch">
					<SetVariable Target="bAtLeastOneModuleMatch">true</SetVariable>
				</TestStep>
				<TestStep Name="StartSi1">
					<Description Id="22" Param0="1 + (u32ProfileCounter * 1)" Level="Output">Start validate SubIndex{0}</Description>
					<SetVariable Target="byteSubIndexInclOffset">1 + (u32ProfileCounter * 1)</SetVariable>
					<WriteLine Id="23" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Param2="byteSubIndexInclOffset" Level="Verbose">Module[{1}] : Subindex '0x{0:X}.{2}'</WriteLine>
				</TestStep>
				<TestStep Name="SetSi1RequiredLevel">
					<SetVariable Target="bObjectOrEntryRequiredLevel">1</SetVariable>
					<WriteLine Id="24" Param0="u16ObjectIndexInclOffset" Param1="byteSubIndexInclOffset" Level="Verbose">0x{0:X4}.{1} may be available</WriteLine>
				</TestStep>
				<TestStep Name="CheckIfSi1Exists">
					<GetObjectDescription SourceDictionary="odDeviceObjectdictionary" Index="u16ObjectIndexInclOffset" SubIndex="byteSubIndexInclOffset">
						<Type>u16DataType</Type>
					</GetObjectDescription>
					<GotoOnFailure>HandleNotExistingSi1</GotoOnFailure>
				</TestStep>
				<TestStep>
					<Compare>
						<NotEqual>
							<Value1>u16DataType</Value1>
							<Value2>0</Value2>
							<GotoStep>CallSi1CheckEntryDescription</GotoStep>
						</NotEqual>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="25" Param0="u16ObjectIndexInclOffset" Level="Verbose">The entry 0x{0:X4}.1 is defined as a padding entry.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>EndSi1</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="HandleNotExistingSi1">
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="26" Param0="u16ObjectIndexInclOffset" Param1="byteSubIndexInclOffset" Level="Output">The entry 0x{0:X4}.{1} does not exists.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>EndSi1</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CallSi1CheckEntryDescription">
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"online"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>byteSubIndexInclOffset</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>null</Parameter>
						<Parameter>7</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>null</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>32</Parameter>
						<Parameter>i32CurrentBitOffset</Parameter>
						<Parameter>true</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="EndSi1">
					<SetVariable Target="i32CurrentBitOffset">-1</SetVariable>
				</TestStep>
				<TestStep Name="ProfileLoopEnd">
					<Compare>
						<Equal>
							<Value1>bAtLeastOneModuleMatch</Value1>
							<Value2>false</Value2>
							<GotoStep>HandleAbortTestCaseOnFirstError</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="HandleAbortTestCaseOnFirstError">
					<Compare>
						<Equal>
							<Value1>bAbortTestCaseOnFirstError</Value1>
							<Value2>false</Value2>
							<GotoStep>ProfileLoopIncrement</GotoStep>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>strResult</Value1>
							<Value2>EmptyString</Value2>
							<GotoStep>ProfileLoopIncrement</GotoStep>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="27" Level="Output">Object verification for all following modules abort because an error was already detected for the current module.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>END</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="ProfileLoopIncrement">
					<SetVariable Target="u32ProfileCounter">u32ProfileCounter + 1</SetVariable>
					<Compare>
						<Greater>
							<Value1>u32CurrentProfilesLength</Value1>
							<Value2>u32ProfileCounter</Value2>
							<GotoStep>ProfileLoopStart</GotoStep>
						</Greater>
					</Compare>
				</TestStep>
				<TestStep Name="END">
					<Compare>
						<NotEqual>
							<Value1>bAtLeastOneModuleMatch</Value1>
							<Value2>true</Value2>
							<SkipCase Id="28">SKIP TEST(no module/channel supports the current profile)</SkipCase>
						</NotEqual>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bDEBUG</Value1>
							<Value2>true</Value2>
							<WriteLine Id="29" Param0="strResult" Level="Verbose">DEBUG | Result : '{0}'.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>strResult</Value1>
							<Value2>EmptyString</Value2>
							<ReturnSuccess Id="30">Test succeed</ReturnSuccess>
						</Equal>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>strResult</Value1>
							<Value2>EmptyString</Value2>
							<RaiseError Id="31"></RaiseError>
						</NotEqual>
					</Compare>
				</TestStep>
			</TestCase>
			<TestCase Name="offline | 0xF050 (Detected Module Ident List)" CaseId="9">
				<Description>
					<PreCondition>- The device profile is 5003
- The module profile is 2011
- The submodule profile is 0</PreCondition>
					<Action>- Iterate over all offline defined modules/channels and if the PreCondition matches the following operations are done:
- Get the offline description of object 0xF050(+module specific offset) 'Detected Module Ident List' and all entries
 Check:
    (Name)
    BitSize
    DataType
    Rx / Tx mappable
    Default Data
    MinData
    Flags       </Action>
					<PostCondition>Error if
- mandatory object / entry is not defined
- an optional object exists and the entries are invalid
- Object / entry description does not match with the specification</PostCondition>
					<ProposalForSolution>- Define the missing objects
- correct object / entry description</ProposalForSolution>
					<References>
						<Reference Specification="ETG.5003.2011"></Reference>
					</References>
					<Mandatory>true</Mandatory>
				</Description>
				<TestStep Name="InitResult">
					<SetVariable Target="strResult">EmptyString</SetVariable>
				</TestStep>
				<TestStep Name="CheckIfOdAvailable">
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Mailbox</Value1>
							<Value2>false</Value2>
							<SkipCase Id="1">DuT does not support mailbox.</SkipCase>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Mailbox.CoE</Value1>
							<Value2>false</Value2>
							<SkipCase Id="2">DuT does not support CoE.</SkipCase>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep>
					<GetObjectDictionary Target="odDeviceObjectdictionary">
						<DictionaryType>Offline</DictionaryType>
					</GetObjectDictionary>
					<SkipOnFailure Id="3">No offline object dictionary defined.</SkipOnFailure>
				</TestStep>
				<TestStep>
					<GetObjectList Count="u32Tmp" Target="odDeviceObjectdictionaryList" SourceDict="odDeviceObjectdictionary"></GetObjectList>
					<Compare>
						<Equal>
							<Value1>u32Tmp</Value1>
							<Value2>0</Value2>
							<SkipCase Id="4">No offline object dictionary defined.</SkipCase>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="InitAtLeastOneProfileMatch">
					<SetVariable Target="bAtLeastOneModuleMatch">false</SetVariable>
				</TestStep>
				<TestStep Name="GetCurrentProfileList">
					<SizeOf UInt32Var="u32Tmp">arrOfflineProfiles</SizeOf>
					<Compare>
						<Equal>
							<Value1>u32Tmp</Value1>
							<Value2>0</Value2>
							<CallTestFunction Name="GetCurrentProfileList">
								<Parameter>"offline"</Parameter>
								<Parameter>"SafeOP"</Parameter>
								<OutParameter>arrOfflineProfiles</OutParameter>
							</CallTestFunction>
						</Equal>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>u32Tmp</Value1>
							<Value2>0</Value2>
							<WriteLine Id="5" Param0="arrOfflineProfiles" Level="Verbose">Use previously created profile list ({0})</WriteLine>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep>
					<SizeOf UInt32Var="u32Tmp">arrOfflineProfiles</SizeOf>
				</TestStep>
				<TestStep>
					<InitArray TargetArray="arrCurrentProfiles" Length="u32Tmp"></InitArray>
				</TestStep>
				<TestStep>
					<CopyArray>
						<SourceArray>arrOfflineProfiles</SourceArray>
						<DestinationArray>arrCurrentProfiles</DestinationArray>
						<Length>u32Tmp</Length>
					</CopyArray>
				</TestStep>
				<TestStep Name="IsProfileSupported">
					<CallTestFunction Name="DeviceAndModuleProfileDefined">
						<Parameter>arrCurrentProfiles</Parameter>
						<Parameter>5003</Parameter>
						<Parameter>2011</Parameter>
						<OutParameter>bAtLeastOneModuleMatch</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>bAtLeastOneModuleMatch</Value1>
							<Value2>false</Value2>
							<GotoStep>END</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="GetObjectIndexInclOffset">
					<SetVariable Target="u16ObjectIndexInclOffset">#xF050</SetVariable>
					<WriteLine Id="6" Param0="u16ObjectIndexInclOffset" Level="Verbose">ObjectIndex '0x{0:X}' (module independent)</WriteLine>
				</TestStep>
				<TestStep Name="LoadDeviceObjectDictionary">
					<Description Id="7" Level="Verbose">Load 'offline' object dictionary for testing.</Description>
					<GetObjectDictionary Target="odDeviceObjectdictionary">
						<DictionaryType>Offline</DictionaryType>
					</GetObjectDictionary>
					<RaiseErrorOnFailure Id="8">VerifyObject : failed to load offline object dictionary.</RaiseErrorOnFailure>
				</TestStep>
				<TestStep Name="SetObjectRequiredLevel">
					<SetVariable Target="bObjectOrEntryRequiredLevel">1</SetVariable>
					<WriteLine Id="9" Param0="u16ObjectIndexInclOffset" Level="Verbose">0x{0:X4} 'Detected Module Ident List' may be available</WriteLine>
				</TestStep>
				<TestStep Name="CheckIfObjectExists">
					<GetObjectDescription SourceDictionary="odDeviceObjectdictionary" Index="u16ObjectIndexInclOffset" SubIndex="-1"></GetObjectDescription>
					<GotoOnSuccess>CallCheckObjectDescription</GotoOnSuccess>
				</TestStep>
				<TestStep Name="HandleNotExistingObject">
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>2</Value2>
							<WriteLine Id="10" Param0="u16ObjectIndexInclOffset" Level="Warning">The object 0x{0:X4} 'Detected Module Ident List' does not exists.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>1</Value2>
							<WriteLine Id="11" Param0="u16ObjectIndexInclOffset" Level="Output">The object 0x{0:X4} 'Detected Module Ident List' does not exists.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>END</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CallCheckObjectDescription">
					<Description Id="12" Param0="u16ObjectIndexInclOffset" Level="Output">Verify the object description 0x{0:X4} 'Detected Module Ident List'.</Description>
					<CallTestFunction Name="CheckObjectDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"offline"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>"Detected Module Ident List"</Parameter>
						<Parameter>null</Parameter>
						<Parameter>8</Parameter>
						<Parameter>-1</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<GotoStep>END</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="InitEntryBittOffset">
					<SetVariable Target="i32CurrentBitOffset">0</SetVariable>
				</TestStep>
				<TestStep Name="StartSi0">
					<Description Id="13" Level="Output">Start validate SubIndex0</Description>
					<WriteLine Id="14" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : Subindex '0x{0:X}.0'</WriteLine>
				</TestStep>
				<TestStep Name="CallSi0CheckEntryDescription">
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"offline"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>0</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>null</Parameter>
						<Parameter>5</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>null</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>null</Parameter>
						<Parameter>null</Parameter>
						<Parameter>null</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>8</Parameter>
						<Parameter>i32CurrentBitOffset</Parameter>
						<Parameter>true</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="EndSi0">
					<SetVariable Target="i32CurrentBitOffset">16</SetVariable>
				</TestStep>
				<TestStep Name="InitProfileLoopCounter">
					<SetVariable Target="u32ProfileCounter">0</SetVariable>
				</TestStep>
				<TestStep Name="GetProfileArrayLength">
					<SizeOf UInt32Var="u32CurrentProfilesLength">arrCurrentProfiles</SizeOf>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="15" Param0="u32CurrentProfilesLength" Level="Verbose">'{0}' Profile(s) defined offline.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>u32CurrentProfilesLength</Value1>
							<Value2>0</Value2>
							<SkipCase Id="16">Skip case | no profile defined.</SkipCase>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="ProfileLoopStart">
					<GetArrayItem SourceArray="arrCurrentProfiles" Target="strTmpString" Index="u32ProfileCounter"></GetArrayItem>
				</TestStep>
				<TestStep Name="CheckProfileInformationString">
					<Compare>
						<Equal>
							<Value1>strTmpString</Value1>
							<Value2>null</Value2>
							<RaiseError Id="17" Param0="u32ProfileCounter">Profile Info element [{0}] is null.</RaiseError>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>strTmpString</Value1>
							<Value2>EmptyString</Value2>
							<RaiseError Id="18" Param0="u32ProfileCounter">Profile Info element [{0}] is an empty string.</RaiseError>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="GetDeviceProfile">
					<CallTestFunction Name="GetDeviceProfile">
						<Parameter>strTmpString</Parameter>
						<OutParameter>uint16CurDeviceProfile</OutParameter>
					</CallTestFunction>
				</TestStep>
				<TestStep Name="GetModuleProfile">
					<CallTestFunction Name="GetModuleProfile">
						<Parameter>strTmpString</Parameter>
						<OutParameter>uint16CurModuleProfile</OutParameter>
					</CallTestFunction>
				</TestStep>
				<TestStep Name="GetSubModuleProfile">
					<CallTestFunction Name="GetSubModuleProfile">
						<Parameter>strTmpString</Parameter>
						<OutParameter>uint16CurSubModuleProfile</OutParameter>
					</CallTestFunction>
				</TestStep>
				<TestStep Name="DumpProfileInfo">
					<Description Id="19" Param0="uint16CurDeviceProfile" Param1="uint16CurModuleProfile" Param2="uint16CurSubModuleProfile" Param3="u32ProfileCounter" Level="Output">Module[{3}] : DeviceProfile '{0}' ; ModuleProfile '{1}' ; SubModuleProfile '{2}'</Description>
					<Compare>
						<Equal>
							<Value1>bIgnoreProfileID</Value1>
							<Value2>true</Value2>
							<GotoStep>IndicateThatAtleastOneModuleMatch</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CompareDeviceProfile">
					<Compare>
						<NotEqual>
							<Value1>uint16CurDeviceProfile</Value1>
							<Value2>5003</Value2>
							<WriteLine Id="20" Param0="uint16CurDeviceProfile" Level="Output">Skip Profile  (Test Device Profile '5003' != Cur Device Profile '{0}')</WriteLine>
						</NotEqual>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>uint16CurDeviceProfile</Value1>
							<Value2>5003</Value2>
							<GotoStep>ProfileLoopEnd</GotoStep>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep Name="CompareModuleProfile">
					<Compare>
						<NotEqual>
							<Value1>uint16CurModuleProfile</Value1>
							<Value2>2011</Value2>
							<WriteLine Id="21" Param0="uint16CurModuleProfile" Level="Output">Skip Profile  (Test Module Profile '2011' != Cur Module Profile '{0}')</WriteLine>
						</NotEqual>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>uint16CurModuleProfile</Value1>
							<Value2>2011</Value2>
							<GotoStep>ProfileLoopEnd</GotoStep>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep Name="CompareSubModuleProfile">
					<Compare>
						<NotEqual>
							<Value1>uint16CurSubModuleProfile</Value1>
							<Value2>0</Value2>
							<WriteLine Id="22" Param0="uint16CurSubModuleProfile" Level="Output">Skip Profile  (Test SubModule Profile '0' != Cur SubModule Profile '{0}')</WriteLine>
						</NotEqual>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>uint16CurSubModuleProfile</Value1>
							<Value2>0</Value2>
							<GotoStep>ProfileLoopEnd</GotoStep>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep Name="IndicateThatAtleastOneModuleMatch">
					<SetVariable Target="bAtLeastOneModuleMatch">true</SetVariable>
				</TestStep>
				<TestStep Name="StartSi1">
					<Description Id="23" Param0="1 + (u32ProfileCounter * 1)" Level="Output">Start validate SubIndex{0}</Description>
					<SetVariable Target="byteSubIndexInclOffset">1 + (u32ProfileCounter * 1)</SetVariable>
					<WriteLine Id="24" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Param2="byteSubIndexInclOffset" Level="Verbose">Module[{1}] : Subindex '0x{0:X}.{2}'</WriteLine>
				</TestStep>
				<TestStep Name="SetSi1RequiredLevel">
					<SetVariable Target="bObjectOrEntryRequiredLevel">1</SetVariable>
					<WriteLine Id="25" Param0="u16ObjectIndexInclOffset" Param1="byteSubIndexInclOffset" Level="Verbose">0x{0:X4}.{1} may be available</WriteLine>
				</TestStep>
				<TestStep Name="CheckIfSi1Exists">
					<GetObjectDescription SourceDictionary="odDeviceObjectdictionary" Index="u16ObjectIndexInclOffset" SubIndex="byteSubIndexInclOffset">
						<Type>u16DataType</Type>
					</GetObjectDescription>
					<GotoOnFailure>HandleNotExistingSi1</GotoOnFailure>
				</TestStep>
				<TestStep>
					<Compare>
						<NotEqual>
							<Value1>u16DataType</Value1>
							<Value2>0</Value2>
							<GotoStep>CallSi1CheckEntryDescription</GotoStep>
						</NotEqual>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="26" Param0="u16ObjectIndexInclOffset" Level="Verbose">The entry 0x{0:X4}.1 is defined as a padding entry.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>EndSi1</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="HandleNotExistingSi1">
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="27" Param0="u16ObjectIndexInclOffset" Param1="byteSubIndexInclOffset" Level="Output">The entry 0x{0:X4}.{1} does not exists.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>EndSi1</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CallSi1CheckEntryDescription">
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"offline"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>byteSubIndexInclOffset</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>null</Parameter>
						<Parameter>7</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>null</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>32</Parameter>
						<Parameter>i32CurrentBitOffset</Parameter>
						<Parameter>true</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="EndSi1">
					<SetVariable Target="i32CurrentBitOffset">-1</SetVariable>
				</TestStep>
				<TestStep Name="ProfileLoopEnd">
					<Compare>
						<Equal>
							<Value1>bAtLeastOneModuleMatch</Value1>
							<Value2>false</Value2>
							<GotoStep>HandleAbortTestCaseOnFirstError</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="HandleAbortTestCaseOnFirstError">
					<Compare>
						<Equal>
							<Value1>bAbortTestCaseOnFirstError</Value1>
							<Value2>false</Value2>
							<GotoStep>ProfileLoopIncrement</GotoStep>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>strResult</Value1>
							<Value2>EmptyString</Value2>
							<GotoStep>ProfileLoopIncrement</GotoStep>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="28" Level="Output">Object verification for all following modules abort because an error was already detected for the current module.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>END</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="ProfileLoopIncrement">
					<SetVariable Target="u32ProfileCounter">u32ProfileCounter + 1</SetVariable>
					<Compare>
						<Greater>
							<Value1>u32CurrentProfilesLength</Value1>
							<Value2>u32ProfileCounter</Value2>
							<GotoStep>ProfileLoopStart</GotoStep>
						</Greater>
					</Compare>
				</TestStep>
				<TestStep Name="END">
					<Compare>
						<NotEqual>
							<Value1>bAtLeastOneModuleMatch</Value1>
							<Value2>true</Value2>
							<SkipCase Id="29">SKIP TEST(no module/channel supports the current profile)</SkipCase>
						</NotEqual>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bDEBUG</Value1>
							<Value2>true</Value2>
							<WriteLine Id="30" Param0="strResult" Level="Verbose">DEBUG | Result : '{0}'.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>strResult</Value1>
							<Value2>EmptyString</Value2>
							<ReturnSuccess Id="31">Test succeed</ReturnSuccess>
						</Equal>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>strResult</Value1>
							<Value2>EmptyString</Value2>
							<RaiseError Id="32"></RaiseError>
						</NotEqual>
					</Compare>
				</TestStep>
			</TestCase>
			<TestCase Name="online | 0xF050 (Detected Module Ident List)" CaseId="10">
				<Description>
					<PreCondition>- The device profile is 5003
- The module profile is 2011
- The submodule profile is 0</PreCondition>
					<Action>- Iterate over all online defined modules/channels and if the PreCondition matches the following operations are done:
- Get the online description of object 0xF050(+module specific offset) 'Detected Module Ident List' and all entries
 Check:
    (Name)
    BitSize
    DataType
    Rx / Tx mappable
    Default Data
    MinData
    Flags       </Action>
					<PostCondition>Error if
- mandatory object / entry is not defined
- an optional object exists and the entries are invalid
- Object / entry description does not match with the specification</PostCondition>
					<ProposalForSolution>- Define the missing objects
- correct object / entry description</ProposalForSolution>
					<References>
						<Reference Specification="ETG.5003.2011"></Reference>
					</References>
					<Mandatory>true</Mandatory>
				</Description>
				<TestStep Name="InitResult">
					<SetVariable Target="strResult">EmptyString</SetVariable>
				</TestStep>
				<TestStep Name="CheckIfOdAvailable">
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Mailbox</Value1>
							<Value2>false</Value2>
							<SkipCase Id="1">DuT does not support mailbox.</SkipCase>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Mailbox.CoE</Value1>
							<Value2>false</Value2>
							<SkipCase Id="2">DuT does not support CoE.</SkipCase>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Mailbox.CoE.SdoInfo</Value1>
							<Value2>false</Value2>
							<SkipCase Id="3">DuT does not support SDO Info.</SkipCase>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="InitAtLeastOneProfileMatch">
					<SetVariable Target="bAtLeastOneModuleMatch">false</SetVariable>
				</TestStep>
				<TestStep Name="GetCurrentProfileList">
					<SizeOf UInt32Var="u32Tmp">arrOnlineProfiles</SizeOf>
					<Compare>
						<Equal>
							<Value1>u32Tmp</Value1>
							<Value2>0</Value2>
							<CallTestFunction Name="GetCurrentProfileList">
								<Parameter>"online"</Parameter>
								<Parameter>"SafeOP"</Parameter>
								<OutParameter>arrOnlineProfiles</OutParameter>
							</CallTestFunction>
						</Equal>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>u32Tmp</Value1>
							<Value2>0</Value2>
							<WriteLine Id="4" Param0="arrOnlineProfiles" Level="Verbose">Use previously created profile list ({0})</WriteLine>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep>
					<SizeOf UInt32Var="u32Tmp">arrOnlineProfiles</SizeOf>
				</TestStep>
				<TestStep>
					<InitArray TargetArray="arrCurrentProfiles" Length="u32Tmp"></InitArray>
				</TestStep>
				<TestStep>
					<CopyArray>
						<SourceArray>arrOnlineProfiles</SourceArray>
						<DestinationArray>arrCurrentProfiles</DestinationArray>
						<Length>u32Tmp</Length>
					</CopyArray>
				</TestStep>
				<TestStep Name="IsProfileSupported">
					<CallTestFunction Name="DeviceAndModuleProfileDefined">
						<Parameter>arrCurrentProfiles</Parameter>
						<Parameter>5003</Parameter>
						<Parameter>2011</Parameter>
						<OutParameter>bAtLeastOneModuleMatch</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>bAtLeastOneModuleMatch</Value1>
							<Value2>false</Value2>
							<GotoStep>END</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="GetObjectIndexInclOffset">
					<SetVariable Target="u16ObjectIndexInclOffset">#xF050</SetVariable>
					<WriteLine Id="5" Param0="u16ObjectIndexInclOffset" Level="Verbose">ObjectIndex '0x{0:X}' (module independent)</WriteLine>
				</TestStep>
				<TestStep Name="LoadDeviceObjectDictionary">
					<Description Id="6" Level="Verbose">Load 'online' object dictionary for testing.</Description>
					<GetObjectDictionary Target="odDeviceObjectdictionary">
						<DictionaryType>Online</DictionaryType>
					</GetObjectDictionary>
					<RaiseErrorOnFailure Id="7">VerifyObject : failed to load online object dictionary.</RaiseErrorOnFailure>
				</TestStep>
				<TestStep Name="SetObjectRequiredLevel">
					<SetVariable Target="bObjectOrEntryRequiredLevel">1</SetVariable>
					<WriteLine Id="8" Param0="u16ObjectIndexInclOffset" Level="Verbose">0x{0:X4} 'Detected Module Ident List' may be available</WriteLine>
				</TestStep>
				<TestStep Name="CheckIfObjectExists">
					<GetObjectDescription SourceDictionary="odDeviceObjectdictionary" Index="u16ObjectIndexInclOffset" SubIndex="-1"></GetObjectDescription>
					<GotoOnSuccess>CallCheckObjectDescription</GotoOnSuccess>
				</TestStep>
				<TestStep Name="HandleNotExistingObject">
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>2</Value2>
							<WriteLine Id="9" Param0="u16ObjectIndexInclOffset" Level="Warning">The object 0x{0:X4} 'Detected Module Ident List' does not exists.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>1</Value2>
							<WriteLine Id="10" Param0="u16ObjectIndexInclOffset" Level="Output">The object 0x{0:X4} 'Detected Module Ident List' does not exists.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>END</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CallCheckObjectDescription">
					<Description Id="11" Param0="u16ObjectIndexInclOffset" Level="Output">Verify the object description 0x{0:X4} 'Detected Module Ident List'.</Description>
					<CallTestFunction Name="CheckObjectDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"online"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>"Detected Module Ident List"</Parameter>
						<Parameter>null</Parameter>
						<Parameter>8</Parameter>
						<Parameter>-1</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<GotoStep>END</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="InitEntryBittOffset">
					<SetVariable Target="i32CurrentBitOffset">0</SetVariable>
				</TestStep>
				<TestStep Name="StartSi0">
					<Description Id="12" Level="Output">Start validate SubIndex0</Description>
					<WriteLine Id="13" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : Subindex '0x{0:X}.0'</WriteLine>
				</TestStep>
				<TestStep Name="CallSi0CheckEntryDescription">
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"online"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>0</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>null</Parameter>
						<Parameter>5</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>null</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>null</Parameter>
						<Parameter>null</Parameter>
						<Parameter>null</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>8</Parameter>
						<Parameter>i32CurrentBitOffset</Parameter>
						<Parameter>true</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="EndSi0">
					<SetVariable Target="i32CurrentBitOffset">16</SetVariable>
				</TestStep>
				<TestStep Name="InitProfileLoopCounter">
					<SetVariable Target="u32ProfileCounter">0</SetVariable>
				</TestStep>
				<TestStep Name="GetProfileArrayLength">
					<SizeOf UInt32Var="u32CurrentProfilesLength">arrCurrentProfiles</SizeOf>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="14" Param0="u32CurrentProfilesLength" Level="Verbose">'{0}' Profile(s) defined online.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>u32CurrentProfilesLength</Value1>
							<Value2>0</Value2>
							<SkipCase Id="15">Skip case | no profile defined.</SkipCase>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="ProfileLoopStart">
					<GetArrayItem SourceArray="arrCurrentProfiles" Target="strTmpString" Index="u32ProfileCounter"></GetArrayItem>
				</TestStep>
				<TestStep Name="CheckProfileInformationString">
					<Compare>
						<Equal>
							<Value1>strTmpString</Value1>
							<Value2>null</Value2>
							<RaiseError Id="16" Param0="u32ProfileCounter">Profile Info element [{0}] is null.</RaiseError>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>strTmpString</Value1>
							<Value2>EmptyString</Value2>
							<RaiseError Id="17" Param0="u32ProfileCounter">Profile Info element [{0}] is an empty string.</RaiseError>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="GetDeviceProfile">
					<CallTestFunction Name="GetDeviceProfile">
						<Parameter>strTmpString</Parameter>
						<OutParameter>uint16CurDeviceProfile</OutParameter>
					</CallTestFunction>
				</TestStep>
				<TestStep Name="GetModuleProfile">
					<CallTestFunction Name="GetModuleProfile">
						<Parameter>strTmpString</Parameter>
						<OutParameter>uint16CurModuleProfile</OutParameter>
					</CallTestFunction>
				</TestStep>
				<TestStep Name="GetSubModuleProfile">
					<CallTestFunction Name="GetSubModuleProfile">
						<Parameter>strTmpString</Parameter>
						<OutParameter>uint16CurSubModuleProfile</OutParameter>
					</CallTestFunction>
				</TestStep>
				<TestStep Name="DumpProfileInfo">
					<Description Id="18" Param0="uint16CurDeviceProfile" Param1="uint16CurModuleProfile" Param2="uint16CurSubModuleProfile" Param3="u32ProfileCounter" Level="Output">Module[{3}] : DeviceProfile '{0}' ; ModuleProfile '{1}' ; SubModuleProfile '{2}'</Description>
					<Compare>
						<Equal>
							<Value1>bIgnoreProfileID</Value1>
							<Value2>true</Value2>
							<GotoStep>IndicateThatAtleastOneModuleMatch</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CompareDeviceProfile">
					<Compare>
						<NotEqual>
							<Value1>uint16CurDeviceProfile</Value1>
							<Value2>5003</Value2>
							<WriteLine Id="19" Param0="uint16CurDeviceProfile" Level="Output">Skip Profile  (Test Device Profile '5003' != Cur Device Profile '{0}')</WriteLine>
						</NotEqual>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>uint16CurDeviceProfile</Value1>
							<Value2>5003</Value2>
							<GotoStep>ProfileLoopEnd</GotoStep>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep Name="CompareModuleProfile">
					<Compare>
						<NotEqual>
							<Value1>uint16CurModuleProfile</Value1>
							<Value2>2011</Value2>
							<WriteLine Id="20" Param0="uint16CurModuleProfile" Level="Output">Skip Profile  (Test Module Profile '2011' != Cur Module Profile '{0}')</WriteLine>
						</NotEqual>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>uint16CurModuleProfile</Value1>
							<Value2>2011</Value2>
							<GotoStep>ProfileLoopEnd</GotoStep>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep Name="CompareSubModuleProfile">
					<Compare>
						<NotEqual>
							<Value1>uint16CurSubModuleProfile</Value1>
							<Value2>0</Value2>
							<WriteLine Id="21" Param0="uint16CurSubModuleProfile" Level="Output">Skip Profile  (Test SubModule Profile '0' != Cur SubModule Profile '{0}')</WriteLine>
						</NotEqual>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>uint16CurSubModuleProfile</Value1>
							<Value2>0</Value2>
							<GotoStep>ProfileLoopEnd</GotoStep>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep Name="IndicateThatAtleastOneModuleMatch">
					<SetVariable Target="bAtLeastOneModuleMatch">true</SetVariable>
				</TestStep>
				<TestStep Name="StartSi1">
					<Description Id="22" Param0="1 + (u32ProfileCounter * 1)" Level="Output">Start validate SubIndex{0}</Description>
					<SetVariable Target="byteSubIndexInclOffset">1 + (u32ProfileCounter * 1)</SetVariable>
					<WriteLine Id="23" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Param2="byteSubIndexInclOffset" Level="Verbose">Module[{1}] : Subindex '0x{0:X}.{2}'</WriteLine>
				</TestStep>
				<TestStep Name="SetSi1RequiredLevel">
					<SetVariable Target="bObjectOrEntryRequiredLevel">1</SetVariable>
					<WriteLine Id="24" Param0="u16ObjectIndexInclOffset" Param1="byteSubIndexInclOffset" Level="Verbose">0x{0:X4}.{1} may be available</WriteLine>
				</TestStep>
				<TestStep Name="CheckIfSi1Exists">
					<GetObjectDescription SourceDictionary="odDeviceObjectdictionary" Index="u16ObjectIndexInclOffset" SubIndex="byteSubIndexInclOffset">
						<Type>u16DataType</Type>
					</GetObjectDescription>
					<GotoOnFailure>HandleNotExistingSi1</GotoOnFailure>
				</TestStep>
				<TestStep>
					<Compare>
						<NotEqual>
							<Value1>u16DataType</Value1>
							<Value2>0</Value2>
							<GotoStep>CallSi1CheckEntryDescription</GotoStep>
						</NotEqual>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="25" Param0="u16ObjectIndexInclOffset" Level="Verbose">The entry 0x{0:X4}.1 is defined as a padding entry.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>EndSi1</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="HandleNotExistingSi1">
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="26" Param0="u16ObjectIndexInclOffset" Param1="byteSubIndexInclOffset" Level="Output">The entry 0x{0:X4}.{1} does not exists.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>EndSi1</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CallSi1CheckEntryDescription">
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"online"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>byteSubIndexInclOffset</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>null</Parameter>
						<Parameter>7</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>null</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>32</Parameter>
						<Parameter>i32CurrentBitOffset</Parameter>
						<Parameter>true</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="EndSi1">
					<SetVariable Target="i32CurrentBitOffset">-1</SetVariable>
				</TestStep>
				<TestStep Name="ProfileLoopEnd">
					<Compare>
						<Equal>
							<Value1>bAtLeastOneModuleMatch</Value1>
							<Value2>false</Value2>
							<GotoStep>HandleAbortTestCaseOnFirstError</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="HandleAbortTestCaseOnFirstError">
					<Compare>
						<Equal>
							<Value1>bAbortTestCaseOnFirstError</Value1>
							<Value2>false</Value2>
							<GotoStep>ProfileLoopIncrement</GotoStep>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>strResult</Value1>
							<Value2>EmptyString</Value2>
							<GotoStep>ProfileLoopIncrement</GotoStep>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="27" Level="Output">Object verification for all following modules abort because an error was already detected for the current module.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>END</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="ProfileLoopIncrement">
					<SetVariable Target="u32ProfileCounter">u32ProfileCounter + 1</SetVariable>
					<Compare>
						<Greater>
							<Value1>u32CurrentProfilesLength</Value1>
							<Value2>u32ProfileCounter</Value2>
							<GotoStep>ProfileLoopStart</GotoStep>
						</Greater>
					</Compare>
				</TestStep>
				<TestStep Name="END">
					<Compare>
						<NotEqual>
							<Value1>bAtLeastOneModuleMatch</Value1>
							<Value2>true</Value2>
							<SkipCase Id="28">SKIP TEST(no module/channel supports the current profile)</SkipCase>
						</NotEqual>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bDEBUG</Value1>
							<Value2>true</Value2>
							<WriteLine Id="29" Param0="strResult" Level="Verbose">DEBUG | Result : '{0}'.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>strResult</Value1>
							<Value2>EmptyString</Value2>
							<ReturnSuccess Id="30">Test succeed</ReturnSuccess>
						</Equal>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>strResult</Value1>
							<Value2>EmptyString</Value2>
							<RaiseError Id="31"></RaiseError>
						</NotEqual>
					</Compare>
				</TestStep>
			</TestCase>
		</TestGroup>
		<TestGroup Name="Verify objects 0xF380 - 0xF3FF (Exception Handling)" GroupId="7">
			<TestCase Name="offline | 0xF380 (Active Exception Status)" CaseId="1">
				<Description>
					<PreCondition>- The device profile is 5003
- The module profile is 2011
- The submodule profile is 0</PreCondition>
					<Action>- Iterate over all offline defined modules/channels and if the PreCondition matches the following operations are done:
- Get the offline description of object 0xF380(+module specific offset) 'Active Exception Status' and all entries
 Check:
    (Name)
    BitSize
    DataType
    Rx / Tx mappable
    Default Data
    MinData
    Flags       </Action>
					<PostCondition>Error if
- mandatory object / entry is not defined
- an optional object exists and the entries are invalid
- Object / entry description does not match with the specification</PostCondition>
					<ProposalForSolution>- Define the missing objects
- correct object / entry description</ProposalForSolution>
					<References>
						<Reference Specification="ETG.5003.2011"></Reference>
					</References>
					<Mandatory>true</Mandatory>
				</Description>
				<TestStep Name="InitResult">
					<SetVariable Target="strResult">EmptyString</SetVariable>
				</TestStep>
				<TestStep Name="CheckIfOdAvailable">
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Mailbox</Value1>
							<Value2>false</Value2>
							<SkipCase Id="1">DuT does not support mailbox.</SkipCase>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Mailbox.CoE</Value1>
							<Value2>false</Value2>
							<SkipCase Id="2">DuT does not support CoE.</SkipCase>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep>
					<GetObjectDictionary Target="odDeviceObjectdictionary">
						<DictionaryType>Offline</DictionaryType>
					</GetObjectDictionary>
					<SkipOnFailure Id="3">No offline object dictionary defined.</SkipOnFailure>
				</TestStep>
				<TestStep>
					<GetObjectList Count="u32Tmp" Target="odDeviceObjectdictionaryList" SourceDict="odDeviceObjectdictionary"></GetObjectList>
					<Compare>
						<Equal>
							<Value1>u32Tmp</Value1>
							<Value2>0</Value2>
							<SkipCase Id="4">No offline object dictionary defined.</SkipCase>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="InitAtLeastOneProfileMatch">
					<SetVariable Target="bAtLeastOneModuleMatch">false</SetVariable>
				</TestStep>
				<TestStep Name="GetCurrentProfileList">
					<SizeOf UInt32Var="u32Tmp">arrOfflineProfiles</SizeOf>
					<Compare>
						<Equal>
							<Value1>u32Tmp</Value1>
							<Value2>0</Value2>
							<CallTestFunction Name="GetCurrentProfileList">
								<Parameter>"offline"</Parameter>
								<Parameter>"SafeOP"</Parameter>
								<OutParameter>arrOfflineProfiles</OutParameter>
							</CallTestFunction>
						</Equal>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>u32Tmp</Value1>
							<Value2>0</Value2>
							<WriteLine Id="5" Param0="arrOfflineProfiles" Level="Verbose">Use previously created profile list ({0})</WriteLine>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep>
					<SizeOf UInt32Var="u32Tmp">arrOfflineProfiles</SizeOf>
				</TestStep>
				<TestStep>
					<InitArray TargetArray="arrCurrentProfiles" Length="u32Tmp"></InitArray>
				</TestStep>
				<TestStep>
					<CopyArray>
						<SourceArray>arrOfflineProfiles</SourceArray>
						<DestinationArray>arrCurrentProfiles</DestinationArray>
						<Length>u32Tmp</Length>
					</CopyArray>
				</TestStep>
				<TestStep Name="IsProfileSupported">
					<CallTestFunction Name="DeviceAndModuleProfileDefined">
						<Parameter>arrCurrentProfiles</Parameter>
						<Parameter>5003</Parameter>
						<Parameter>2011</Parameter>
						<OutParameter>bAtLeastOneModuleMatch</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>bAtLeastOneModuleMatch</Value1>
							<Value2>false</Value2>
							<GotoStep>END</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="GetObjectIndexInclOffset">
					<SetVariable Target="u16ObjectIndexInclOffset">#xF380</SetVariable>
					<WriteLine Id="6" Param0="u16ObjectIndexInclOffset" Level="Verbose">ObjectIndex '0x{0:X}' (module independent)</WriteLine>
				</TestStep>
				<TestStep Name="LoadDeviceObjectDictionary">
					<Description Id="7" Level="Verbose">Load 'offline' object dictionary for testing.</Description>
					<GetObjectDictionary Target="odDeviceObjectdictionary">
						<DictionaryType>Offline</DictionaryType>
					</GetObjectDictionary>
					<RaiseErrorOnFailure Id="8">VerifyObject : failed to load offline object dictionary.</RaiseErrorOnFailure>
				</TestStep>
				<TestStep Name="CallCheckObjectDescription">
					<Description Id="9" Param0="u16ObjectIndexInclOffset" Level="Output">Verify the object description 0x{0:X4} 'Active Exception Status'.</Description>
					<CallTestFunction Name="CheckObjectDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"offline"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>"Active Exception Status"</Parameter>
						<Parameter>null</Parameter>
						<Parameter>7</Parameter>
						<Parameter>-1</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<GotoStep>END</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CallSi0CheckEntryDescription">
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"offline"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>0</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>null</Parameter>
						<Parameter>5</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>null</Parameter>
						<Parameter>T</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>8</Parameter>
						<Parameter>i32CurrentBitOffset</Parameter>
						<Parameter>true</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="END">
					<Compare>
						<NotEqual>
							<Value1>bAtLeastOneModuleMatch</Value1>
							<Value2>true</Value2>
							<SkipCase Id="10">SKIP TEST(no module/channel supports the current profile)</SkipCase>
						</NotEqual>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bDEBUG</Value1>
							<Value2>true</Value2>
							<WriteLine Id="11" Param0="strResult" Level="Verbose">DEBUG | Result : '{0}'.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>strResult</Value1>
							<Value2>EmptyString</Value2>
							<ReturnSuccess Id="12">Test succeed</ReturnSuccess>
						</Equal>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>strResult</Value1>
							<Value2>EmptyString</Value2>
							<RaiseError Id="13"></RaiseError>
						</NotEqual>
					</Compare>
				</TestStep>
			</TestCase>
			<TestCase Name="online | 0xF380 (Active Exception Status)" CaseId="2">
				<Description>
					<PreCondition>- The device profile is 5003
- The module profile is 2011
- The submodule profile is 0</PreCondition>
					<Action>- Iterate over all online defined modules/channels and if the PreCondition matches the following operations are done:
- Get the online description of object 0xF380(+module specific offset) 'Active Exception Status' and all entries
 Check:
    (Name)
    BitSize
    DataType
    Rx / Tx mappable
    Default Data
    MinData
    Flags       </Action>
					<PostCondition>Error if
- mandatory object / entry is not defined
- an optional object exists and the entries are invalid
- Object / entry description does not match with the specification</PostCondition>
					<ProposalForSolution>- Define the missing objects
- correct object / entry description</ProposalForSolution>
					<References>
						<Reference Specification="ETG.5003.2011"></Reference>
					</References>
					<Mandatory>true</Mandatory>
				</Description>
				<TestStep Name="InitResult">
					<SetVariable Target="strResult">EmptyString</SetVariable>
				</TestStep>
				<TestStep Name="CheckIfOdAvailable">
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Mailbox</Value1>
							<Value2>false</Value2>
							<SkipCase Id="1">DuT does not support mailbox.</SkipCase>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Mailbox.CoE</Value1>
							<Value2>false</Value2>
							<SkipCase Id="2">DuT does not support CoE.</SkipCase>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Mailbox.CoE.SdoInfo</Value1>
							<Value2>false</Value2>
							<SkipCase Id="3">DuT does not support SDO Info.</SkipCase>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="InitAtLeastOneProfileMatch">
					<SetVariable Target="bAtLeastOneModuleMatch">false</SetVariable>
				</TestStep>
				<TestStep Name="GetCurrentProfileList">
					<SizeOf UInt32Var="u32Tmp">arrOnlineProfiles</SizeOf>
					<Compare>
						<Equal>
							<Value1>u32Tmp</Value1>
							<Value2>0</Value2>
							<CallTestFunction Name="GetCurrentProfileList">
								<Parameter>"online"</Parameter>
								<Parameter>"SafeOP"</Parameter>
								<OutParameter>arrOnlineProfiles</OutParameter>
							</CallTestFunction>
						</Equal>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>u32Tmp</Value1>
							<Value2>0</Value2>
							<WriteLine Id="4" Param0="arrOnlineProfiles" Level="Verbose">Use previously created profile list ({0})</WriteLine>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep>
					<SizeOf UInt32Var="u32Tmp">arrOnlineProfiles</SizeOf>
				</TestStep>
				<TestStep>
					<InitArray TargetArray="arrCurrentProfiles" Length="u32Tmp"></InitArray>
				</TestStep>
				<TestStep>
					<CopyArray>
						<SourceArray>arrOnlineProfiles</SourceArray>
						<DestinationArray>arrCurrentProfiles</DestinationArray>
						<Length>u32Tmp</Length>
					</CopyArray>
				</TestStep>
				<TestStep Name="IsProfileSupported">
					<CallTestFunction Name="DeviceAndModuleProfileDefined">
						<Parameter>arrCurrentProfiles</Parameter>
						<Parameter>5003</Parameter>
						<Parameter>2011</Parameter>
						<OutParameter>bAtLeastOneModuleMatch</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>bAtLeastOneModuleMatch</Value1>
							<Value2>false</Value2>
							<GotoStep>END</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="GetObjectIndexInclOffset">
					<SetVariable Target="u16ObjectIndexInclOffset">#xF380</SetVariable>
					<WriteLine Id="5" Param0="u16ObjectIndexInclOffset" Level="Verbose">ObjectIndex '0x{0:X}' (module independent)</WriteLine>
				</TestStep>
				<TestStep Name="LoadDeviceObjectDictionary">
					<Description Id="6" Level="Verbose">Load 'online' object dictionary for testing.</Description>
					<GetObjectDictionary Target="odDeviceObjectdictionary">
						<DictionaryType>Online</DictionaryType>
					</GetObjectDictionary>
					<RaiseErrorOnFailure Id="7">VerifyObject : failed to load online object dictionary.</RaiseErrorOnFailure>
				</TestStep>
				<TestStep Name="CallCheckObjectDescription">
					<Description Id="8" Param0="u16ObjectIndexInclOffset" Level="Output">Verify the object description 0x{0:X4} 'Active Exception Status'.</Description>
					<CallTestFunction Name="CheckObjectDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"online"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>"Active Exception Status"</Parameter>
						<Parameter>null</Parameter>
						<Parameter>7</Parameter>
						<Parameter>-1</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<GotoStep>END</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CallSi0CheckEntryDescription">
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"online"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>0</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>null</Parameter>
						<Parameter>5</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>null</Parameter>
						<Parameter>T</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>8</Parameter>
						<Parameter>i32CurrentBitOffset</Parameter>
						<Parameter>true</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="END">
					<Compare>
						<NotEqual>
							<Value1>bAtLeastOneModuleMatch</Value1>
							<Value2>true</Value2>
							<SkipCase Id="9">SKIP TEST(no module/channel supports the current profile)</SkipCase>
						</NotEqual>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bDEBUG</Value1>
							<Value2>true</Value2>
							<WriteLine Id="10" Param0="strResult" Level="Verbose">DEBUG | Result : '{0}'.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>strResult</Value1>
							<Value2>EmptyString</Value2>
							<ReturnSuccess Id="11">Test succeed</ReturnSuccess>
						</Equal>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>strResult</Value1>
							<Value2>EmptyString</Value2>
							<RaiseError Id="12"></RaiseError>
						</NotEqual>
					</Compare>
				</TestStep>
			</TestCase>
			<TestCase Name="offline | 0xF381 (Active Device Warning Details)" CaseId="3">
				<Description>
					<PreCondition>- The device profile is 5003
- The module profile is 2011
- The submodule profile is 0</PreCondition>
					<Action>- Iterate over all offline defined modules/channels and if the PreCondition matches the following operations are done:
- Get the offline description of object 0xF381(+module specific offset) 'Active Device Warning Details' and all entries
 Check:
    (Name)
    BitSize
    DataType
    Rx / Tx mappable
    Default Data
    MinData
    Flags       </Action>
					<PostCondition>Error if
- mandatory object / entry is not defined
- an optional object exists and the entries are invalid
- Object / entry description does not match with the specification</PostCondition>
					<ProposalForSolution>- Define the missing objects
- correct object / entry description</ProposalForSolution>
					<References>
						<Reference Specification="ETG.5003.2011"></Reference>
					</References>
					<Mandatory>true</Mandatory>
				</Description>
				<TestStep Name="InitResult">
					<SetVariable Target="strResult">EmptyString</SetVariable>
				</TestStep>
				<TestStep Name="CheckIfOdAvailable">
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Mailbox</Value1>
							<Value2>false</Value2>
							<SkipCase Id="1">DuT does not support mailbox.</SkipCase>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Mailbox.CoE</Value1>
							<Value2>false</Value2>
							<SkipCase Id="2">DuT does not support CoE.</SkipCase>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep>
					<GetObjectDictionary Target="odDeviceObjectdictionary">
						<DictionaryType>Offline</DictionaryType>
					</GetObjectDictionary>
					<SkipOnFailure Id="3">No offline object dictionary defined.</SkipOnFailure>
				</TestStep>
				<TestStep>
					<GetObjectList Count="u32Tmp" Target="odDeviceObjectdictionaryList" SourceDict="odDeviceObjectdictionary"></GetObjectList>
					<Compare>
						<Equal>
							<Value1>u32Tmp</Value1>
							<Value2>0</Value2>
							<SkipCase Id="4">No offline object dictionary defined.</SkipCase>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="InitAtLeastOneProfileMatch">
					<SetVariable Target="bAtLeastOneModuleMatch">false</SetVariable>
				</TestStep>
				<TestStep Name="GetCurrentProfileList">
					<SizeOf UInt32Var="u32Tmp">arrOfflineProfiles</SizeOf>
					<Compare>
						<Equal>
							<Value1>u32Tmp</Value1>
							<Value2>0</Value2>
							<CallTestFunction Name="GetCurrentProfileList">
								<Parameter>"offline"</Parameter>
								<Parameter>"SafeOP"</Parameter>
								<OutParameter>arrOfflineProfiles</OutParameter>
							</CallTestFunction>
						</Equal>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>u32Tmp</Value1>
							<Value2>0</Value2>
							<WriteLine Id="5" Param0="arrOfflineProfiles" Level="Verbose">Use previously created profile list ({0})</WriteLine>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep>
					<SizeOf UInt32Var="u32Tmp">arrOfflineProfiles</SizeOf>
				</TestStep>
				<TestStep>
					<InitArray TargetArray="arrCurrentProfiles" Length="u32Tmp"></InitArray>
				</TestStep>
				<TestStep>
					<CopyArray>
						<SourceArray>arrOfflineProfiles</SourceArray>
						<DestinationArray>arrCurrentProfiles</DestinationArray>
						<Length>u32Tmp</Length>
					</CopyArray>
				</TestStep>
				<TestStep Name="IsProfileSupported">
					<CallTestFunction Name="DeviceAndModuleProfileDefined">
						<Parameter>arrCurrentProfiles</Parameter>
						<Parameter>5003</Parameter>
						<Parameter>2011</Parameter>
						<OutParameter>bAtLeastOneModuleMatch</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>bAtLeastOneModuleMatch</Value1>
							<Value2>false</Value2>
							<GotoStep>END</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="GetObjectIndexInclOffset">
					<SetVariable Target="u16ObjectIndexInclOffset">#xF381</SetVariable>
					<WriteLine Id="6" Param0="u16ObjectIndexInclOffset" Level="Verbose">ObjectIndex '0x{0:X}' (module independent)</WriteLine>
				</TestStep>
				<TestStep Name="LoadDeviceObjectDictionary">
					<Description Id="7" Level="Verbose">Load 'offline' object dictionary for testing.</Description>
					<GetObjectDictionary Target="odDeviceObjectdictionary">
						<DictionaryType>Offline</DictionaryType>
					</GetObjectDictionary>
					<RaiseErrorOnFailure Id="8">VerifyObject : failed to load offline object dictionary.</RaiseErrorOnFailure>
				</TestStep>
				<TestStep Name="CallCheckObjectDescription">
					<Description Id="9" Param0="u16ObjectIndexInclOffset" Level="Output">Verify the object description 0x{0:X4} 'Active Device Warning Details'.</Description>
					<CallTestFunction Name="CheckObjectDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"offline"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>"Active Device Warning Details"</Parameter>
						<Parameter>null</Parameter>
						<Parameter>8</Parameter>
						<Parameter>-1</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<GotoStep>END</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="InitEntryBittOffset">
					<SetVariable Target="i32CurrentBitOffset">0</SetVariable>
				</TestStep>
				<TestStep Name="StartSi0">
					<Description Id="10" Level="Output">Start validate SubIndex0</Description>
					<WriteLine Id="11" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : Subindex '0x{0:X}.0'</WriteLine>
				</TestStep>
				<TestStep Name="CallSi0CheckEntryDescription">
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"offline"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>0</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>null</Parameter>
						<Parameter>5</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>null</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>null</Parameter>
						<Parameter>null</Parameter>
						<Parameter>null</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>8</Parameter>
						<Parameter>i32CurrentBitOffset</Parameter>
						<Parameter>true</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="EndSi0">
					<SetVariable Target="i32CurrentBitOffset">16</SetVariable>
				</TestStep>
				<TestStep Name="InitProfileLoopCounter">
					<SetVariable Target="u32ProfileCounter">0</SetVariable>
				</TestStep>
				<TestStep Name="GetProfileArrayLength">
					<SizeOf UInt32Var="u32CurrentProfilesLength">arrCurrentProfiles</SizeOf>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="12" Param0="u32CurrentProfilesLength" Level="Verbose">'{0}' Profile(s) defined offline.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>u32CurrentProfilesLength</Value1>
							<Value2>0</Value2>
							<SkipCase Id="13">Skip case | no profile defined.</SkipCase>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="ProfileLoopStart">
					<GetArrayItem SourceArray="arrCurrentProfiles" Target="strTmpString" Index="u32ProfileCounter"></GetArrayItem>
				</TestStep>
				<TestStep Name="CheckProfileInformationString">
					<Compare>
						<Equal>
							<Value1>strTmpString</Value1>
							<Value2>null</Value2>
							<RaiseError Id="14" Param0="u32ProfileCounter">Profile Info element [{0}] is null.</RaiseError>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>strTmpString</Value1>
							<Value2>EmptyString</Value2>
							<RaiseError Id="15" Param0="u32ProfileCounter">Profile Info element [{0}] is an empty string.</RaiseError>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="GetDeviceProfile">
					<CallTestFunction Name="GetDeviceProfile">
						<Parameter>strTmpString</Parameter>
						<OutParameter>uint16CurDeviceProfile</OutParameter>
					</CallTestFunction>
				</TestStep>
				<TestStep Name="GetModuleProfile">
					<CallTestFunction Name="GetModuleProfile">
						<Parameter>strTmpString</Parameter>
						<OutParameter>uint16CurModuleProfile</OutParameter>
					</CallTestFunction>
				</TestStep>
				<TestStep Name="GetSubModuleProfile">
					<CallTestFunction Name="GetSubModuleProfile">
						<Parameter>strTmpString</Parameter>
						<OutParameter>uint16CurSubModuleProfile</OutParameter>
					</CallTestFunction>
				</TestStep>
				<TestStep Name="DumpProfileInfo">
					<Description Id="16" Param0="uint16CurDeviceProfile" Param1="uint16CurModuleProfile" Param2="uint16CurSubModuleProfile" Param3="u32ProfileCounter" Level="Output">Module[{3}] : DeviceProfile '{0}' ; ModuleProfile '{1}' ; SubModuleProfile '{2}'</Description>
					<Compare>
						<Equal>
							<Value1>bIgnoreProfileID</Value1>
							<Value2>true</Value2>
							<GotoStep>IndicateThatAtleastOneModuleMatch</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CompareDeviceProfile">
					<Compare>
						<NotEqual>
							<Value1>uint16CurDeviceProfile</Value1>
							<Value2>5003</Value2>
							<WriteLine Id="17" Param0="uint16CurDeviceProfile" Level="Output">Skip Profile  (Test Device Profile '5003' != Cur Device Profile '{0}')</WriteLine>
						</NotEqual>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>uint16CurDeviceProfile</Value1>
							<Value2>5003</Value2>
							<GotoStep>ProfileLoopEnd</GotoStep>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep Name="CompareModuleProfile">
					<Compare>
						<NotEqual>
							<Value1>uint16CurModuleProfile</Value1>
							<Value2>2011</Value2>
							<WriteLine Id="18" Param0="uint16CurModuleProfile" Level="Output">Skip Profile  (Test Module Profile '2011' != Cur Module Profile '{0}')</WriteLine>
						</NotEqual>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>uint16CurModuleProfile</Value1>
							<Value2>2011</Value2>
							<GotoStep>ProfileLoopEnd</GotoStep>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep Name="CompareSubModuleProfile">
					<Compare>
						<NotEqual>
							<Value1>uint16CurSubModuleProfile</Value1>
							<Value2>0</Value2>
							<WriteLine Id="19" Param0="uint16CurSubModuleProfile" Level="Output">Skip Profile  (Test SubModule Profile '0' != Cur SubModule Profile '{0}')</WriteLine>
						</NotEqual>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>uint16CurSubModuleProfile</Value1>
							<Value2>0</Value2>
							<GotoStep>ProfileLoopEnd</GotoStep>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep Name="IndicateThatAtleastOneModuleMatch">
					<SetVariable Target="bAtLeastOneModuleMatch">true</SetVariable>
				</TestStep>
				<TestStep Name="StartSi1">
					<Description Id="20" Param0="1 + (u32ProfileCounter * 1)" Level="Output">Start validate SubIndex{0}</Description>
					<SetVariable Target="byteSubIndexInclOffset">1 + (u32ProfileCounter * 1)</SetVariable>
					<WriteLine Id="21" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Param2="byteSubIndexInclOffset" Level="Verbose">Module[{1}] : Subindex '0x{0:X}.{2}'</WriteLine>
				</TestStep>
				<TestStep Name="CallSi1CheckEntryDescription">
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"offline"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>byteSubIndexInclOffset</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>null</Parameter>
						<Parameter>7</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>null</Parameter>
						<Parameter>T</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>32</Parameter>
						<Parameter>i32CurrentBitOffset</Parameter>
						<Parameter>true</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="EndSi1">
					<SetVariable Target="i32CurrentBitOffset">i32CurrentBitOffset + 32</SetVariable>
				</TestStep>
				<TestStep Name="ProfileLoopEnd">
					<Compare>
						<Equal>
							<Value1>bAtLeastOneModuleMatch</Value1>
							<Value2>false</Value2>
							<GotoStep>HandleAbortTestCaseOnFirstError</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="HandleAbortTestCaseOnFirstError">
					<Compare>
						<Equal>
							<Value1>bAbortTestCaseOnFirstError</Value1>
							<Value2>false</Value2>
							<GotoStep>ProfileLoopIncrement</GotoStep>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>strResult</Value1>
							<Value2>EmptyString</Value2>
							<GotoStep>ProfileLoopIncrement</GotoStep>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="22" Level="Output">Object verification for all following modules abort because an error was already detected for the current module.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>END</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="ProfileLoopIncrement">
					<SetVariable Target="u32ProfileCounter">u32ProfileCounter + 1</SetVariable>
					<Compare>
						<Greater>
							<Value1>u32CurrentProfilesLength</Value1>
							<Value2>u32ProfileCounter</Value2>
							<GotoStep>ProfileLoopStart</GotoStep>
						</Greater>
					</Compare>
				</TestStep>
				<TestStep Name="END">
					<Compare>
						<NotEqual>
							<Value1>bAtLeastOneModuleMatch</Value1>
							<Value2>true</Value2>
							<SkipCase Id="23">SKIP TEST(no module/channel supports the current profile)</SkipCase>
						</NotEqual>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bDEBUG</Value1>
							<Value2>true</Value2>
							<WriteLine Id="24" Param0="strResult" Level="Verbose">DEBUG | Result : '{0}'.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>strResult</Value1>
							<Value2>EmptyString</Value2>
							<ReturnSuccess Id="25">Test succeed</ReturnSuccess>
						</Equal>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>strResult</Value1>
							<Value2>EmptyString</Value2>
							<RaiseError Id="26"></RaiseError>
						</NotEqual>
					</Compare>
				</TestStep>
			</TestCase>
			<TestCase Name="online | 0xF381 (Active Device Warning Details)" CaseId="4">
				<Description>
					<PreCondition>- The device profile is 5003
- The module profile is 2011
- The submodule profile is 0</PreCondition>
					<Action>- Iterate over all online defined modules/channels and if the PreCondition matches the following operations are done:
- Get the online description of object 0xF381(+module specific offset) 'Active Device Warning Details' and all entries
 Check:
    (Name)
    BitSize
    DataType
    Rx / Tx mappable
    Default Data
    MinData
    Flags       </Action>
					<PostCondition>Error if
- mandatory object / entry is not defined
- an optional object exists and the entries are invalid
- Object / entry description does not match with the specification</PostCondition>
					<ProposalForSolution>- Define the missing objects
- correct object / entry description</ProposalForSolution>
					<References>
						<Reference Specification="ETG.5003.2011"></Reference>
					</References>
					<Mandatory>true</Mandatory>
				</Description>
				<TestStep Name="InitResult">
					<SetVariable Target="strResult">EmptyString</SetVariable>
				</TestStep>
				<TestStep Name="CheckIfOdAvailable">
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Mailbox</Value1>
							<Value2>false</Value2>
							<SkipCase Id="1">DuT does not support mailbox.</SkipCase>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Mailbox.CoE</Value1>
							<Value2>false</Value2>
							<SkipCase Id="2">DuT does not support CoE.</SkipCase>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Mailbox.CoE.SdoInfo</Value1>
							<Value2>false</Value2>
							<SkipCase Id="3">DuT does not support SDO Info.</SkipCase>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="InitAtLeastOneProfileMatch">
					<SetVariable Target="bAtLeastOneModuleMatch">false</SetVariable>
				</TestStep>
				<TestStep Name="GetCurrentProfileList">
					<SizeOf UInt32Var="u32Tmp">arrOnlineProfiles</SizeOf>
					<Compare>
						<Equal>
							<Value1>u32Tmp</Value1>
							<Value2>0</Value2>
							<CallTestFunction Name="GetCurrentProfileList">
								<Parameter>"online"</Parameter>
								<Parameter>"SafeOP"</Parameter>
								<OutParameter>arrOnlineProfiles</OutParameter>
							</CallTestFunction>
						</Equal>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>u32Tmp</Value1>
							<Value2>0</Value2>
							<WriteLine Id="4" Param0="arrOnlineProfiles" Level="Verbose">Use previously created profile list ({0})</WriteLine>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep>
					<SizeOf UInt32Var="u32Tmp">arrOnlineProfiles</SizeOf>
				</TestStep>
				<TestStep>
					<InitArray TargetArray="arrCurrentProfiles" Length="u32Tmp"></InitArray>
				</TestStep>
				<TestStep>
					<CopyArray>
						<SourceArray>arrOnlineProfiles</SourceArray>
						<DestinationArray>arrCurrentProfiles</DestinationArray>
						<Length>u32Tmp</Length>
					</CopyArray>
				</TestStep>
				<TestStep Name="IsProfileSupported">
					<CallTestFunction Name="DeviceAndModuleProfileDefined">
						<Parameter>arrCurrentProfiles</Parameter>
						<Parameter>5003</Parameter>
						<Parameter>2011</Parameter>
						<OutParameter>bAtLeastOneModuleMatch</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>bAtLeastOneModuleMatch</Value1>
							<Value2>false</Value2>
							<GotoStep>END</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="GetObjectIndexInclOffset">
					<SetVariable Target="u16ObjectIndexInclOffset">#xF381</SetVariable>
					<WriteLine Id="5" Param0="u16ObjectIndexInclOffset" Level="Verbose">ObjectIndex '0x{0:X}' (module independent)</WriteLine>
				</TestStep>
				<TestStep Name="LoadDeviceObjectDictionary">
					<Description Id="6" Level="Verbose">Load 'online' object dictionary for testing.</Description>
					<GetObjectDictionary Target="odDeviceObjectdictionary">
						<DictionaryType>Online</DictionaryType>
					</GetObjectDictionary>
					<RaiseErrorOnFailure Id="7">VerifyObject : failed to load online object dictionary.</RaiseErrorOnFailure>
				</TestStep>
				<TestStep Name="CallCheckObjectDescription">
					<Description Id="8" Param0="u16ObjectIndexInclOffset" Level="Output">Verify the object description 0x{0:X4} 'Active Device Warning Details'.</Description>
					<CallTestFunction Name="CheckObjectDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"online"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>"Active Device Warning Details"</Parameter>
						<Parameter>null</Parameter>
						<Parameter>8</Parameter>
						<Parameter>-1</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<GotoStep>END</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="InitEntryBittOffset">
					<SetVariable Target="i32CurrentBitOffset">0</SetVariable>
				</TestStep>
				<TestStep Name="StartSi0">
					<Description Id="9" Level="Output">Start validate SubIndex0</Description>
					<WriteLine Id="10" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : Subindex '0x{0:X}.0'</WriteLine>
				</TestStep>
				<TestStep Name="CallSi0CheckEntryDescription">
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"online"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>0</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>null</Parameter>
						<Parameter>5</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>null</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>null</Parameter>
						<Parameter>null</Parameter>
						<Parameter>null</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>8</Parameter>
						<Parameter>i32CurrentBitOffset</Parameter>
						<Parameter>true</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="EndSi0">
					<SetVariable Target="i32CurrentBitOffset">16</SetVariable>
				</TestStep>
				<TestStep Name="InitProfileLoopCounter">
					<SetVariable Target="u32ProfileCounter">0</SetVariable>
				</TestStep>
				<TestStep Name="GetProfileArrayLength">
					<SizeOf UInt32Var="u32CurrentProfilesLength">arrCurrentProfiles</SizeOf>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="11" Param0="u32CurrentProfilesLength" Level="Verbose">'{0}' Profile(s) defined online.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>u32CurrentProfilesLength</Value1>
							<Value2>0</Value2>
							<SkipCase Id="12">Skip case | no profile defined.</SkipCase>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="ProfileLoopStart">
					<GetArrayItem SourceArray="arrCurrentProfiles" Target="strTmpString" Index="u32ProfileCounter"></GetArrayItem>
				</TestStep>
				<TestStep Name="CheckProfileInformationString">
					<Compare>
						<Equal>
							<Value1>strTmpString</Value1>
							<Value2>null</Value2>
							<RaiseError Id="13" Param0="u32ProfileCounter">Profile Info element [{0}] is null.</RaiseError>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>strTmpString</Value1>
							<Value2>EmptyString</Value2>
							<RaiseError Id="14" Param0="u32ProfileCounter">Profile Info element [{0}] is an empty string.</RaiseError>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="GetDeviceProfile">
					<CallTestFunction Name="GetDeviceProfile">
						<Parameter>strTmpString</Parameter>
						<OutParameter>uint16CurDeviceProfile</OutParameter>
					</CallTestFunction>
				</TestStep>
				<TestStep Name="GetModuleProfile">
					<CallTestFunction Name="GetModuleProfile">
						<Parameter>strTmpString</Parameter>
						<OutParameter>uint16CurModuleProfile</OutParameter>
					</CallTestFunction>
				</TestStep>
				<TestStep Name="GetSubModuleProfile">
					<CallTestFunction Name="GetSubModuleProfile">
						<Parameter>strTmpString</Parameter>
						<OutParameter>uint16CurSubModuleProfile</OutParameter>
					</CallTestFunction>
				</TestStep>
				<TestStep Name="DumpProfileInfo">
					<Description Id="15" Param0="uint16CurDeviceProfile" Param1="uint16CurModuleProfile" Param2="uint16CurSubModuleProfile" Param3="u32ProfileCounter" Level="Output">Module[{3}] : DeviceProfile '{0}' ; ModuleProfile '{1}' ; SubModuleProfile '{2}'</Description>
					<Compare>
						<Equal>
							<Value1>bIgnoreProfileID</Value1>
							<Value2>true</Value2>
							<GotoStep>IndicateThatAtleastOneModuleMatch</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CompareDeviceProfile">
					<Compare>
						<NotEqual>
							<Value1>uint16CurDeviceProfile</Value1>
							<Value2>5003</Value2>
							<WriteLine Id="16" Param0="uint16CurDeviceProfile" Level="Output">Skip Profile  (Test Device Profile '5003' != Cur Device Profile '{0}')</WriteLine>
						</NotEqual>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>uint16CurDeviceProfile</Value1>
							<Value2>5003</Value2>
							<GotoStep>ProfileLoopEnd</GotoStep>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep Name="CompareModuleProfile">
					<Compare>
						<NotEqual>
							<Value1>uint16CurModuleProfile</Value1>
							<Value2>2011</Value2>
							<WriteLine Id="17" Param0="uint16CurModuleProfile" Level="Output">Skip Profile  (Test Module Profile '2011' != Cur Module Profile '{0}')</WriteLine>
						</NotEqual>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>uint16CurModuleProfile</Value1>
							<Value2>2011</Value2>
							<GotoStep>ProfileLoopEnd</GotoStep>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep Name="CompareSubModuleProfile">
					<Compare>
						<NotEqual>
							<Value1>uint16CurSubModuleProfile</Value1>
							<Value2>0</Value2>
							<WriteLine Id="18" Param0="uint16CurSubModuleProfile" Level="Output">Skip Profile  (Test SubModule Profile '0' != Cur SubModule Profile '{0}')</WriteLine>
						</NotEqual>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>uint16CurSubModuleProfile</Value1>
							<Value2>0</Value2>
							<GotoStep>ProfileLoopEnd</GotoStep>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep Name="IndicateThatAtleastOneModuleMatch">
					<SetVariable Target="bAtLeastOneModuleMatch">true</SetVariable>
				</TestStep>
				<TestStep Name="StartSi1">
					<Description Id="19" Param0="1 + (u32ProfileCounter * 1)" Level="Output">Start validate SubIndex{0}</Description>
					<SetVariable Target="byteSubIndexInclOffset">1 + (u32ProfileCounter * 1)</SetVariable>
					<WriteLine Id="20" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Param2="byteSubIndexInclOffset" Level="Verbose">Module[{1}] : Subindex '0x{0:X}.{2}'</WriteLine>
				</TestStep>
				<TestStep Name="CallSi1CheckEntryDescription">
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"online"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>byteSubIndexInclOffset</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>null</Parameter>
						<Parameter>7</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>null</Parameter>
						<Parameter>T</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>32</Parameter>
						<Parameter>i32CurrentBitOffset</Parameter>
						<Parameter>true</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="EndSi1">
					<SetVariable Target="i32CurrentBitOffset">i32CurrentBitOffset + 32</SetVariable>
				</TestStep>
				<TestStep Name="ProfileLoopEnd">
					<Compare>
						<Equal>
							<Value1>bAtLeastOneModuleMatch</Value1>
							<Value2>false</Value2>
							<GotoStep>HandleAbortTestCaseOnFirstError</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="HandleAbortTestCaseOnFirstError">
					<Compare>
						<Equal>
							<Value1>bAbortTestCaseOnFirstError</Value1>
							<Value2>false</Value2>
							<GotoStep>ProfileLoopIncrement</GotoStep>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>strResult</Value1>
							<Value2>EmptyString</Value2>
							<GotoStep>ProfileLoopIncrement</GotoStep>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="21" Level="Output">Object verification for all following modules abort because an error was already detected for the current module.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>END</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="ProfileLoopIncrement">
					<SetVariable Target="u32ProfileCounter">u32ProfileCounter + 1</SetVariable>
					<Compare>
						<Greater>
							<Value1>u32CurrentProfilesLength</Value1>
							<Value2>u32ProfileCounter</Value2>
							<GotoStep>ProfileLoopStart</GotoStep>
						</Greater>
					</Compare>
				</TestStep>
				<TestStep Name="END">
					<Compare>
						<NotEqual>
							<Value1>bAtLeastOneModuleMatch</Value1>
							<Value2>true</Value2>
							<SkipCase Id="22">SKIP TEST(no module/channel supports the current profile)</SkipCase>
						</NotEqual>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bDEBUG</Value1>
							<Value2>true</Value2>
							<WriteLine Id="23" Param0="strResult" Level="Verbose">DEBUG | Result : '{0}'.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>strResult</Value1>
							<Value2>EmptyString</Value2>
							<ReturnSuccess Id="24">Test succeed</ReturnSuccess>
						</Equal>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>strResult</Value1>
							<Value2>EmptyString</Value2>
							<RaiseError Id="25"></RaiseError>
						</NotEqual>
					</Compare>
				</TestStep>
			</TestCase>
			<TestCase Name="offline | 0xF382 (Active Manufacturer Warning Details)" CaseId="5">
				<Description>
					<PreCondition>- The device profile is 5003
- The module profile is 2011
- The submodule profile is 0</PreCondition>
					<Action>- Iterate over all offline defined modules/channels and if the PreCondition matches the following operations are done:
- Get the offline description of object 0xF382(+module specific offset) 'Active Manufacturer Warning Details' and all entries
 Check:
    (Name)
    BitSize
    DataType
    Rx / Tx mappable
    Default Data
    MinData
    Flags       </Action>
					<PostCondition>Error if
- mandatory object / entry is not defined
- an optional object exists and the entries are invalid
- Object / entry description does not match with the specification</PostCondition>
					<ProposalForSolution>- Define the missing objects
- correct object / entry description</ProposalForSolution>
					<References>
						<Reference Specification="ETG.5003.2011"></Reference>
					</References>
					<Mandatory>true</Mandatory>
				</Description>
				<TestStep Name="InitResult">
					<SetVariable Target="strResult">EmptyString</SetVariable>
				</TestStep>
				<TestStep Name="CheckIfOdAvailable">
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Mailbox</Value1>
							<Value2>false</Value2>
							<SkipCase Id="1">DuT does not support mailbox.</SkipCase>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Mailbox.CoE</Value1>
							<Value2>false</Value2>
							<SkipCase Id="2">DuT does not support CoE.</SkipCase>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep>
					<GetObjectDictionary Target="odDeviceObjectdictionary">
						<DictionaryType>Offline</DictionaryType>
					</GetObjectDictionary>
					<SkipOnFailure Id="3">No offline object dictionary defined.</SkipOnFailure>
				</TestStep>
				<TestStep>
					<GetObjectList Count="u32Tmp" Target="odDeviceObjectdictionaryList" SourceDict="odDeviceObjectdictionary"></GetObjectList>
					<Compare>
						<Equal>
							<Value1>u32Tmp</Value1>
							<Value2>0</Value2>
							<SkipCase Id="4">No offline object dictionary defined.</SkipCase>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="InitAtLeastOneProfileMatch">
					<SetVariable Target="bAtLeastOneModuleMatch">false</SetVariable>
				</TestStep>
				<TestStep Name="GetCurrentProfileList">
					<SizeOf UInt32Var="u32Tmp">arrOfflineProfiles</SizeOf>
					<Compare>
						<Equal>
							<Value1>u32Tmp</Value1>
							<Value2>0</Value2>
							<CallTestFunction Name="GetCurrentProfileList">
								<Parameter>"offline"</Parameter>
								<Parameter>"SafeOP"</Parameter>
								<OutParameter>arrOfflineProfiles</OutParameter>
							</CallTestFunction>
						</Equal>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>u32Tmp</Value1>
							<Value2>0</Value2>
							<WriteLine Id="5" Param0="arrOfflineProfiles" Level="Verbose">Use previously created profile list ({0})</WriteLine>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep>
					<SizeOf UInt32Var="u32Tmp">arrOfflineProfiles</SizeOf>
				</TestStep>
				<TestStep>
					<InitArray TargetArray="arrCurrentProfiles" Length="u32Tmp"></InitArray>
				</TestStep>
				<TestStep>
					<CopyArray>
						<SourceArray>arrOfflineProfiles</SourceArray>
						<DestinationArray>arrCurrentProfiles</DestinationArray>
						<Length>u32Tmp</Length>
					</CopyArray>
				</TestStep>
				<TestStep Name="IsProfileSupported">
					<CallTestFunction Name="DeviceAndModuleProfileDefined">
						<Parameter>arrCurrentProfiles</Parameter>
						<Parameter>5003</Parameter>
						<Parameter>2011</Parameter>
						<OutParameter>bAtLeastOneModuleMatch</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>bAtLeastOneModuleMatch</Value1>
							<Value2>false</Value2>
							<GotoStep>END</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="GetObjectIndexInclOffset">
					<SetVariable Target="u16ObjectIndexInclOffset">#xF382</SetVariable>
					<WriteLine Id="6" Param0="u16ObjectIndexInclOffset" Level="Verbose">ObjectIndex '0x{0:X}' (module independent)</WriteLine>
				</TestStep>
				<TestStep Name="LoadDeviceObjectDictionary">
					<Description Id="7" Level="Verbose">Load 'offline' object dictionary for testing.</Description>
					<GetObjectDictionary Target="odDeviceObjectdictionary">
						<DictionaryType>Offline</DictionaryType>
					</GetObjectDictionary>
					<RaiseErrorOnFailure Id="8">VerifyObject : failed to load offline object dictionary.</RaiseErrorOnFailure>
				</TestStep>
				<TestStep Name="SetObjectRequiredLevel">
					<SetVariable Target="bObjectOrEntryRequiredLevel">1</SetVariable>
					<WriteLine Id="9" Param0="u16ObjectIndexInclOffset" Level="Verbose">0x{0:X4} 'Active Manufacturer Warning Details' may be available</WriteLine>
				</TestStep>
				<TestStep Name="CheckIfObjectExists">
					<GetObjectDescription SourceDictionary="odDeviceObjectdictionary" Index="u16ObjectIndexInclOffset" SubIndex="-1"></GetObjectDescription>
					<GotoOnSuccess>CallCheckObjectDescription</GotoOnSuccess>
				</TestStep>
				<TestStep Name="HandleNotExistingObject">
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>2</Value2>
							<WriteLine Id="10" Param0="u16ObjectIndexInclOffset" Level="Warning">The object 0x{0:X4} 'Active Manufacturer Warning Details' does not exists.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>1</Value2>
							<WriteLine Id="11" Param0="u16ObjectIndexInclOffset" Level="Output">The object 0x{0:X4} 'Active Manufacturer Warning Details' does not exists.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>END</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CallCheckObjectDescription">
					<Description Id="12" Param0="u16ObjectIndexInclOffset" Level="Output">Verify the object description 0x{0:X4} 'Active Manufacturer Warning Details'.</Description>
					<CallTestFunction Name="CheckObjectDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"offline"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>"Active Manufacturer Warning Details"</Parameter>
						<Parameter>null</Parameter>
						<Parameter>8</Parameter>
						<Parameter>-1</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<GotoStep>END</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="InitEntryBittOffset">
					<SetVariable Target="i32CurrentBitOffset">0</SetVariable>
				</TestStep>
				<TestStep Name="StartSi0">
					<Description Id="13" Level="Output">Start validate SubIndex0</Description>
					<WriteLine Id="14" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : Subindex '0x{0:X}.0'</WriteLine>
				</TestStep>
				<TestStep Name="CallSi0CheckEntryDescription">
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"offline"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>0</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>null</Parameter>
						<Parameter>5</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>null</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>null</Parameter>
						<Parameter>null</Parameter>
						<Parameter>null</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>8</Parameter>
						<Parameter>i32CurrentBitOffset</Parameter>
						<Parameter>true</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="EndSi0">
					<SetVariable Target="i32CurrentBitOffset">16</SetVariable>
				</TestStep>
				<TestStep Name="InitProfileLoopCounter">
					<SetVariable Target="u32ProfileCounter">0</SetVariable>
				</TestStep>
				<TestStep Name="GetProfileArrayLength">
					<SizeOf UInt32Var="u32CurrentProfilesLength">arrCurrentProfiles</SizeOf>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="15" Param0="u32CurrentProfilesLength" Level="Verbose">'{0}' Profile(s) defined offline.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>u32CurrentProfilesLength</Value1>
							<Value2>0</Value2>
							<SkipCase Id="16">Skip case | no profile defined.</SkipCase>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="ProfileLoopStart">
					<GetArrayItem SourceArray="arrCurrentProfiles" Target="strTmpString" Index="u32ProfileCounter"></GetArrayItem>
				</TestStep>
				<TestStep Name="CheckProfileInformationString">
					<Compare>
						<Equal>
							<Value1>strTmpString</Value1>
							<Value2>null</Value2>
							<RaiseError Id="17" Param0="u32ProfileCounter">Profile Info element [{0}] is null.</RaiseError>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>strTmpString</Value1>
							<Value2>EmptyString</Value2>
							<RaiseError Id="18" Param0="u32ProfileCounter">Profile Info element [{0}] is an empty string.</RaiseError>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="GetDeviceProfile">
					<CallTestFunction Name="GetDeviceProfile">
						<Parameter>strTmpString</Parameter>
						<OutParameter>uint16CurDeviceProfile</OutParameter>
					</CallTestFunction>
				</TestStep>
				<TestStep Name="GetModuleProfile">
					<CallTestFunction Name="GetModuleProfile">
						<Parameter>strTmpString</Parameter>
						<OutParameter>uint16CurModuleProfile</OutParameter>
					</CallTestFunction>
				</TestStep>
				<TestStep Name="GetSubModuleProfile">
					<CallTestFunction Name="GetSubModuleProfile">
						<Parameter>strTmpString</Parameter>
						<OutParameter>uint16CurSubModuleProfile</OutParameter>
					</CallTestFunction>
				</TestStep>
				<TestStep Name="DumpProfileInfo">
					<Description Id="19" Param0="uint16CurDeviceProfile" Param1="uint16CurModuleProfile" Param2="uint16CurSubModuleProfile" Param3="u32ProfileCounter" Level="Output">Module[{3}] : DeviceProfile '{0}' ; ModuleProfile '{1}' ; SubModuleProfile '{2}'</Description>
					<Compare>
						<Equal>
							<Value1>bIgnoreProfileID</Value1>
							<Value2>true</Value2>
							<GotoStep>IndicateThatAtleastOneModuleMatch</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CompareDeviceProfile">
					<Compare>
						<NotEqual>
							<Value1>uint16CurDeviceProfile</Value1>
							<Value2>5003</Value2>
							<WriteLine Id="20" Param0="uint16CurDeviceProfile" Level="Output">Skip Profile  (Test Device Profile '5003' != Cur Device Profile '{0}')</WriteLine>
						</NotEqual>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>uint16CurDeviceProfile</Value1>
							<Value2>5003</Value2>
							<GotoStep>ProfileLoopEnd</GotoStep>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep Name="CompareModuleProfile">
					<Compare>
						<NotEqual>
							<Value1>uint16CurModuleProfile</Value1>
							<Value2>2011</Value2>
							<WriteLine Id="21" Param0="uint16CurModuleProfile" Level="Output">Skip Profile  (Test Module Profile '2011' != Cur Module Profile '{0}')</WriteLine>
						</NotEqual>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>uint16CurModuleProfile</Value1>
							<Value2>2011</Value2>
							<GotoStep>ProfileLoopEnd</GotoStep>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep Name="CompareSubModuleProfile">
					<Compare>
						<NotEqual>
							<Value1>uint16CurSubModuleProfile</Value1>
							<Value2>0</Value2>
							<WriteLine Id="22" Param0="uint16CurSubModuleProfile" Level="Output">Skip Profile  (Test SubModule Profile '0' != Cur SubModule Profile '{0}')</WriteLine>
						</NotEqual>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>uint16CurSubModuleProfile</Value1>
							<Value2>0</Value2>
							<GotoStep>ProfileLoopEnd</GotoStep>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep Name="IndicateThatAtleastOneModuleMatch">
					<SetVariable Target="bAtLeastOneModuleMatch">true</SetVariable>
				</TestStep>
				<TestStep Name="StartSi1">
					<Description Id="23" Param0="1 + (u32ProfileCounter * 1)" Level="Output">Start validate SubIndex{0}</Description>
					<SetVariable Target="byteSubIndexInclOffset">1 + (u32ProfileCounter * 1)</SetVariable>
					<WriteLine Id="24" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Param2="byteSubIndexInclOffset" Level="Verbose">Module[{1}] : Subindex '0x{0:X}.{2}'</WriteLine>
				</TestStep>
				<TestStep Name="SetSi1RequiredLevel">
					<SetVariable Target="bObjectOrEntryRequiredLevel">1</SetVariable>
					<WriteLine Id="25" Param0="u16ObjectIndexInclOffset" Param1="byteSubIndexInclOffset" Level="Verbose">0x{0:X4}.{1} may be available</WriteLine>
				</TestStep>
				<TestStep Name="CheckIfSi1Exists">
					<GetObjectDescription SourceDictionary="odDeviceObjectdictionary" Index="u16ObjectIndexInclOffset" SubIndex="byteSubIndexInclOffset">
						<Type>u16DataType</Type>
					</GetObjectDescription>
					<GotoOnFailure>HandleNotExistingSi1</GotoOnFailure>
				</TestStep>
				<TestStep>
					<Compare>
						<NotEqual>
							<Value1>u16DataType</Value1>
							<Value2>0</Value2>
							<GotoStep>CallSi1CheckEntryDescription</GotoStep>
						</NotEqual>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="26" Param0="u16ObjectIndexInclOffset" Level="Verbose">The entry 0x{0:X4}.1 is defined as a padding entry.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>EndSi1</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="HandleNotExistingSi1">
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="27" Param0="u16ObjectIndexInclOffset" Param1="byteSubIndexInclOffset" Level="Output">The entry 0x{0:X4}.{1} does not exists.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>EndSi1</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CallSi1CheckEntryDescription">
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"offline"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>byteSubIndexInclOffset</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>null</Parameter>
						<Parameter>7</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>null</Parameter>
						<Parameter>T</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>32</Parameter>
						<Parameter>i32CurrentBitOffset</Parameter>
						<Parameter>true</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="EndSi1">
					<SetVariable Target="i32CurrentBitOffset">-1</SetVariable>
				</TestStep>
				<TestStep Name="ProfileLoopEnd">
					<Compare>
						<Equal>
							<Value1>bAtLeastOneModuleMatch</Value1>
							<Value2>false</Value2>
							<GotoStep>HandleAbortTestCaseOnFirstError</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="HandleAbortTestCaseOnFirstError">
					<Compare>
						<Equal>
							<Value1>bAbortTestCaseOnFirstError</Value1>
							<Value2>false</Value2>
							<GotoStep>ProfileLoopIncrement</GotoStep>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>strResult</Value1>
							<Value2>EmptyString</Value2>
							<GotoStep>ProfileLoopIncrement</GotoStep>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="28" Level="Output">Object verification for all following modules abort because an error was already detected for the current module.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>END</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="ProfileLoopIncrement">
					<SetVariable Target="u32ProfileCounter">u32ProfileCounter + 1</SetVariable>
					<Compare>
						<Greater>
							<Value1>u32CurrentProfilesLength</Value1>
							<Value2>u32ProfileCounter</Value2>
							<GotoStep>ProfileLoopStart</GotoStep>
						</Greater>
					</Compare>
				</TestStep>
				<TestStep Name="END">
					<Compare>
						<NotEqual>
							<Value1>bAtLeastOneModuleMatch</Value1>
							<Value2>true</Value2>
							<SkipCase Id="29">SKIP TEST(no module/channel supports the current profile)</SkipCase>
						</NotEqual>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bDEBUG</Value1>
							<Value2>true</Value2>
							<WriteLine Id="30" Param0="strResult" Level="Verbose">DEBUG | Result : '{0}'.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>strResult</Value1>
							<Value2>EmptyString</Value2>
							<ReturnSuccess Id="31">Test succeed</ReturnSuccess>
						</Equal>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>strResult</Value1>
							<Value2>EmptyString</Value2>
							<RaiseError Id="32"></RaiseError>
						</NotEqual>
					</Compare>
				</TestStep>
			</TestCase>
			<TestCase Name="online | 0xF382 (Active Manufacturer Warning Details)" CaseId="6">
				<Description>
					<PreCondition>- The device profile is 5003
- The module profile is 2011
- The submodule profile is 0</PreCondition>
					<Action>- Iterate over all online defined modules/channels and if the PreCondition matches the following operations are done:
- Get the online description of object 0xF382(+module specific offset) 'Active Manufacturer Warning Details' and all entries
 Check:
    (Name)
    BitSize
    DataType
    Rx / Tx mappable
    Default Data
    MinData
    Flags       </Action>
					<PostCondition>Error if
- mandatory object / entry is not defined
- an optional object exists and the entries are invalid
- Object / entry description does not match with the specification</PostCondition>
					<ProposalForSolution>- Define the missing objects
- correct object / entry description</ProposalForSolution>
					<References>
						<Reference Specification="ETG.5003.2011"></Reference>
					</References>
					<Mandatory>true</Mandatory>
				</Description>
				<TestStep Name="InitResult">
					<SetVariable Target="strResult">EmptyString</SetVariable>
				</TestStep>
				<TestStep Name="CheckIfOdAvailable">
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Mailbox</Value1>
							<Value2>false</Value2>
							<SkipCase Id="1">DuT does not support mailbox.</SkipCase>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Mailbox.CoE</Value1>
							<Value2>false</Value2>
							<SkipCase Id="2">DuT does not support CoE.</SkipCase>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Mailbox.CoE.SdoInfo</Value1>
							<Value2>false</Value2>
							<SkipCase Id="3">DuT does not support SDO Info.</SkipCase>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="InitAtLeastOneProfileMatch">
					<SetVariable Target="bAtLeastOneModuleMatch">false</SetVariable>
				</TestStep>
				<TestStep Name="GetCurrentProfileList">
					<SizeOf UInt32Var="u32Tmp">arrOnlineProfiles</SizeOf>
					<Compare>
						<Equal>
							<Value1>u32Tmp</Value1>
							<Value2>0</Value2>
							<CallTestFunction Name="GetCurrentProfileList">
								<Parameter>"online"</Parameter>
								<Parameter>"SafeOP"</Parameter>
								<OutParameter>arrOnlineProfiles</OutParameter>
							</CallTestFunction>
						</Equal>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>u32Tmp</Value1>
							<Value2>0</Value2>
							<WriteLine Id="4" Param0="arrOnlineProfiles" Level="Verbose">Use previously created profile list ({0})</WriteLine>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep>
					<SizeOf UInt32Var="u32Tmp">arrOnlineProfiles</SizeOf>
				</TestStep>
				<TestStep>
					<InitArray TargetArray="arrCurrentProfiles" Length="u32Tmp"></InitArray>
				</TestStep>
				<TestStep>
					<CopyArray>
						<SourceArray>arrOnlineProfiles</SourceArray>
						<DestinationArray>arrCurrentProfiles</DestinationArray>
						<Length>u32Tmp</Length>
					</CopyArray>
				</TestStep>
				<TestStep Name="IsProfileSupported">
					<CallTestFunction Name="DeviceAndModuleProfileDefined">
						<Parameter>arrCurrentProfiles</Parameter>
						<Parameter>5003</Parameter>
						<Parameter>2011</Parameter>
						<OutParameter>bAtLeastOneModuleMatch</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>bAtLeastOneModuleMatch</Value1>
							<Value2>false</Value2>
							<GotoStep>END</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="GetObjectIndexInclOffset">
					<SetVariable Target="u16ObjectIndexInclOffset">#xF382</SetVariable>
					<WriteLine Id="5" Param0="u16ObjectIndexInclOffset" Level="Verbose">ObjectIndex '0x{0:X}' (module independent)</WriteLine>
				</TestStep>
				<TestStep Name="LoadDeviceObjectDictionary">
					<Description Id="6" Level="Verbose">Load 'online' object dictionary for testing.</Description>
					<GetObjectDictionary Target="odDeviceObjectdictionary">
						<DictionaryType>Online</DictionaryType>
					</GetObjectDictionary>
					<RaiseErrorOnFailure Id="7">VerifyObject : failed to load online object dictionary.</RaiseErrorOnFailure>
				</TestStep>
				<TestStep Name="SetObjectRequiredLevel">
					<SetVariable Target="bObjectOrEntryRequiredLevel">1</SetVariable>
					<WriteLine Id="8" Param0="u16ObjectIndexInclOffset" Level="Verbose">0x{0:X4} 'Active Manufacturer Warning Details' may be available</WriteLine>
				</TestStep>
				<TestStep Name="CheckIfObjectExists">
					<GetObjectDescription SourceDictionary="odDeviceObjectdictionary" Index="u16ObjectIndexInclOffset" SubIndex="-1"></GetObjectDescription>
					<GotoOnSuccess>CallCheckObjectDescription</GotoOnSuccess>
				</TestStep>
				<TestStep Name="HandleNotExistingObject">
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>2</Value2>
							<WriteLine Id="9" Param0="u16ObjectIndexInclOffset" Level="Warning">The object 0x{0:X4} 'Active Manufacturer Warning Details' does not exists.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>1</Value2>
							<WriteLine Id="10" Param0="u16ObjectIndexInclOffset" Level="Output">The object 0x{0:X4} 'Active Manufacturer Warning Details' does not exists.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>END</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CallCheckObjectDescription">
					<Description Id="11" Param0="u16ObjectIndexInclOffset" Level="Output">Verify the object description 0x{0:X4} 'Active Manufacturer Warning Details'.</Description>
					<CallTestFunction Name="CheckObjectDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"online"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>"Active Manufacturer Warning Details"</Parameter>
						<Parameter>null</Parameter>
						<Parameter>8</Parameter>
						<Parameter>-1</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<GotoStep>END</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="InitEntryBittOffset">
					<SetVariable Target="i32CurrentBitOffset">0</SetVariable>
				</TestStep>
				<TestStep Name="StartSi0">
					<Description Id="12" Level="Output">Start validate SubIndex0</Description>
					<WriteLine Id="13" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : Subindex '0x{0:X}.0'</WriteLine>
				</TestStep>
				<TestStep Name="CallSi0CheckEntryDescription">
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"online"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>0</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>null</Parameter>
						<Parameter>5</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>null</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>null</Parameter>
						<Parameter>null</Parameter>
						<Parameter>null</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>8</Parameter>
						<Parameter>i32CurrentBitOffset</Parameter>
						<Parameter>true</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="EndSi0">
					<SetVariable Target="i32CurrentBitOffset">16</SetVariable>
				</TestStep>
				<TestStep Name="InitProfileLoopCounter">
					<SetVariable Target="u32ProfileCounter">0</SetVariable>
				</TestStep>
				<TestStep Name="GetProfileArrayLength">
					<SizeOf UInt32Var="u32CurrentProfilesLength">arrCurrentProfiles</SizeOf>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="14" Param0="u32CurrentProfilesLength" Level="Verbose">'{0}' Profile(s) defined online.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>u32CurrentProfilesLength</Value1>
							<Value2>0</Value2>
							<SkipCase Id="15">Skip case | no profile defined.</SkipCase>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="ProfileLoopStart">
					<GetArrayItem SourceArray="arrCurrentProfiles" Target="strTmpString" Index="u32ProfileCounter"></GetArrayItem>
				</TestStep>
				<TestStep Name="CheckProfileInformationString">
					<Compare>
						<Equal>
							<Value1>strTmpString</Value1>
							<Value2>null</Value2>
							<RaiseError Id="16" Param0="u32ProfileCounter">Profile Info element [{0}] is null.</RaiseError>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>strTmpString</Value1>
							<Value2>EmptyString</Value2>
							<RaiseError Id="17" Param0="u32ProfileCounter">Profile Info element [{0}] is an empty string.</RaiseError>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="GetDeviceProfile">
					<CallTestFunction Name="GetDeviceProfile">
						<Parameter>strTmpString</Parameter>
						<OutParameter>uint16CurDeviceProfile</OutParameter>
					</CallTestFunction>
				</TestStep>
				<TestStep Name="GetModuleProfile">
					<CallTestFunction Name="GetModuleProfile">
						<Parameter>strTmpString</Parameter>
						<OutParameter>uint16CurModuleProfile</OutParameter>
					</CallTestFunction>
				</TestStep>
				<TestStep Name="GetSubModuleProfile">
					<CallTestFunction Name="GetSubModuleProfile">
						<Parameter>strTmpString</Parameter>
						<OutParameter>uint16CurSubModuleProfile</OutParameter>
					</CallTestFunction>
				</TestStep>
				<TestStep Name="DumpProfileInfo">
					<Description Id="18" Param0="uint16CurDeviceProfile" Param1="uint16CurModuleProfile" Param2="uint16CurSubModuleProfile" Param3="u32ProfileCounter" Level="Output">Module[{3}] : DeviceProfile '{0}' ; ModuleProfile '{1}' ; SubModuleProfile '{2}'</Description>
					<Compare>
						<Equal>
							<Value1>bIgnoreProfileID</Value1>
							<Value2>true</Value2>
							<GotoStep>IndicateThatAtleastOneModuleMatch</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CompareDeviceProfile">
					<Compare>
						<NotEqual>
							<Value1>uint16CurDeviceProfile</Value1>
							<Value2>5003</Value2>
							<WriteLine Id="19" Param0="uint16CurDeviceProfile" Level="Output">Skip Profile  (Test Device Profile '5003' != Cur Device Profile '{0}')</WriteLine>
						</NotEqual>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>uint16CurDeviceProfile</Value1>
							<Value2>5003</Value2>
							<GotoStep>ProfileLoopEnd</GotoStep>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep Name="CompareModuleProfile">
					<Compare>
						<NotEqual>
							<Value1>uint16CurModuleProfile</Value1>
							<Value2>2011</Value2>
							<WriteLine Id="20" Param0="uint16CurModuleProfile" Level="Output">Skip Profile  (Test Module Profile '2011' != Cur Module Profile '{0}')</WriteLine>
						</NotEqual>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>uint16CurModuleProfile</Value1>
							<Value2>2011</Value2>
							<GotoStep>ProfileLoopEnd</GotoStep>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep Name="CompareSubModuleProfile">
					<Compare>
						<NotEqual>
							<Value1>uint16CurSubModuleProfile</Value1>
							<Value2>0</Value2>
							<WriteLine Id="21" Param0="uint16CurSubModuleProfile" Level="Output">Skip Profile  (Test SubModule Profile '0' != Cur SubModule Profile '{0}')</WriteLine>
						</NotEqual>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>uint16CurSubModuleProfile</Value1>
							<Value2>0</Value2>
							<GotoStep>ProfileLoopEnd</GotoStep>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep Name="IndicateThatAtleastOneModuleMatch">
					<SetVariable Target="bAtLeastOneModuleMatch">true</SetVariable>
				</TestStep>
				<TestStep Name="StartSi1">
					<Description Id="22" Param0="1 + (u32ProfileCounter * 1)" Level="Output">Start validate SubIndex{0}</Description>
					<SetVariable Target="byteSubIndexInclOffset">1 + (u32ProfileCounter * 1)</SetVariable>
					<WriteLine Id="23" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Param2="byteSubIndexInclOffset" Level="Verbose">Module[{1}] : Subindex '0x{0:X}.{2}'</WriteLine>
				</TestStep>
				<TestStep Name="SetSi1RequiredLevel">
					<SetVariable Target="bObjectOrEntryRequiredLevel">1</SetVariable>
					<WriteLine Id="24" Param0="u16ObjectIndexInclOffset" Param1="byteSubIndexInclOffset" Level="Verbose">0x{0:X4}.{1} may be available</WriteLine>
				</TestStep>
				<TestStep Name="CheckIfSi1Exists">
					<GetObjectDescription SourceDictionary="odDeviceObjectdictionary" Index="u16ObjectIndexInclOffset" SubIndex="byteSubIndexInclOffset">
						<Type>u16DataType</Type>
					</GetObjectDescription>
					<GotoOnFailure>HandleNotExistingSi1</GotoOnFailure>
				</TestStep>
				<TestStep>
					<Compare>
						<NotEqual>
							<Value1>u16DataType</Value1>
							<Value2>0</Value2>
							<GotoStep>CallSi1CheckEntryDescription</GotoStep>
						</NotEqual>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="25" Param0="u16ObjectIndexInclOffset" Level="Verbose">The entry 0x{0:X4}.1 is defined as a padding entry.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>EndSi1</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="HandleNotExistingSi1">
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="26" Param0="u16ObjectIndexInclOffset" Param1="byteSubIndexInclOffset" Level="Output">The entry 0x{0:X4}.{1} does not exists.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>EndSi1</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CallSi1CheckEntryDescription">
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"online"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>byteSubIndexInclOffset</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>null</Parameter>
						<Parameter>7</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>null</Parameter>
						<Parameter>T</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>32</Parameter>
						<Parameter>i32CurrentBitOffset</Parameter>
						<Parameter>true</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="EndSi1">
					<SetVariable Target="i32CurrentBitOffset">-1</SetVariable>
				</TestStep>
				<TestStep Name="ProfileLoopEnd">
					<Compare>
						<Equal>
							<Value1>bAtLeastOneModuleMatch</Value1>
							<Value2>false</Value2>
							<GotoStep>HandleAbortTestCaseOnFirstError</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="HandleAbortTestCaseOnFirstError">
					<Compare>
						<Equal>
							<Value1>bAbortTestCaseOnFirstError</Value1>
							<Value2>false</Value2>
							<GotoStep>ProfileLoopIncrement</GotoStep>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>strResult</Value1>
							<Value2>EmptyString</Value2>
							<GotoStep>ProfileLoopIncrement</GotoStep>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="27" Level="Output">Object verification for all following modules abort because an error was already detected for the current module.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>END</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="ProfileLoopIncrement">
					<SetVariable Target="u32ProfileCounter">u32ProfileCounter + 1</SetVariable>
					<Compare>
						<Greater>
							<Value1>u32CurrentProfilesLength</Value1>
							<Value2>u32ProfileCounter</Value2>
							<GotoStep>ProfileLoopStart</GotoStep>
						</Greater>
					</Compare>
				</TestStep>
				<TestStep Name="END">
					<Compare>
						<NotEqual>
							<Value1>bAtLeastOneModuleMatch</Value1>
							<Value2>true</Value2>
							<SkipCase Id="28">SKIP TEST(no module/channel supports the current profile)</SkipCase>
						</NotEqual>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bDEBUG</Value1>
							<Value2>true</Value2>
							<WriteLine Id="29" Param0="strResult" Level="Verbose">DEBUG | Result : '{0}'.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>strResult</Value1>
							<Value2>EmptyString</Value2>
							<ReturnSuccess Id="30">Test succeed</ReturnSuccess>
						</Equal>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>strResult</Value1>
							<Value2>EmptyString</Value2>
							<RaiseError Id="31"></RaiseError>
						</NotEqual>
					</Compare>
				</TestStep>
			</TestCase>
			<TestCase Name="offline | 0xF383 (Active Device Error Details)" CaseId="7">
				<Description>
					<PreCondition>- The device profile is 5003
- The module profile is 2011
- The submodule profile is 0</PreCondition>
					<Action>- Iterate over all offline defined modules/channels and if the PreCondition matches the following operations are done:
- Get the offline description of object 0xF383(+module specific offset) 'Active Device Error Details' and all entries
 Check:
    (Name)
    BitSize
    DataType
    Rx / Tx mappable
    Default Data
    MinData
    Flags       </Action>
					<PostCondition>Error if
- mandatory object / entry is not defined
- an optional object exists and the entries are invalid
- Object / entry description does not match with the specification</PostCondition>
					<ProposalForSolution>- Define the missing objects
- correct object / entry description</ProposalForSolution>
					<References>
						<Reference Specification="ETG.5003.2011"></Reference>
					</References>
					<Mandatory>true</Mandatory>
				</Description>
				<TestStep Name="InitResult">
					<SetVariable Target="strResult">EmptyString</SetVariable>
				</TestStep>
				<TestStep Name="CheckIfOdAvailable">
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Mailbox</Value1>
							<Value2>false</Value2>
							<SkipCase Id="1">DuT does not support mailbox.</SkipCase>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Mailbox.CoE</Value1>
							<Value2>false</Value2>
							<SkipCase Id="2">DuT does not support CoE.</SkipCase>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep>
					<GetObjectDictionary Target="odDeviceObjectdictionary">
						<DictionaryType>Offline</DictionaryType>
					</GetObjectDictionary>
					<SkipOnFailure Id="3">No offline object dictionary defined.</SkipOnFailure>
				</TestStep>
				<TestStep>
					<GetObjectList Count="u32Tmp" Target="odDeviceObjectdictionaryList" SourceDict="odDeviceObjectdictionary"></GetObjectList>
					<Compare>
						<Equal>
							<Value1>u32Tmp</Value1>
							<Value2>0</Value2>
							<SkipCase Id="4">No offline object dictionary defined.</SkipCase>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="InitAtLeastOneProfileMatch">
					<SetVariable Target="bAtLeastOneModuleMatch">false</SetVariable>
				</TestStep>
				<TestStep Name="GetCurrentProfileList">
					<SizeOf UInt32Var="u32Tmp">arrOfflineProfiles</SizeOf>
					<Compare>
						<Equal>
							<Value1>u32Tmp</Value1>
							<Value2>0</Value2>
							<CallTestFunction Name="GetCurrentProfileList">
								<Parameter>"offline"</Parameter>
								<Parameter>"SafeOP"</Parameter>
								<OutParameter>arrOfflineProfiles</OutParameter>
							</CallTestFunction>
						</Equal>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>u32Tmp</Value1>
							<Value2>0</Value2>
							<WriteLine Id="5" Param0="arrOfflineProfiles" Level="Verbose">Use previously created profile list ({0})</WriteLine>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep>
					<SizeOf UInt32Var="u32Tmp">arrOfflineProfiles</SizeOf>
				</TestStep>
				<TestStep>
					<InitArray TargetArray="arrCurrentProfiles" Length="u32Tmp"></InitArray>
				</TestStep>
				<TestStep>
					<CopyArray>
						<SourceArray>arrOfflineProfiles</SourceArray>
						<DestinationArray>arrCurrentProfiles</DestinationArray>
						<Length>u32Tmp</Length>
					</CopyArray>
				</TestStep>
				<TestStep Name="IsProfileSupported">
					<CallTestFunction Name="DeviceAndModuleProfileDefined">
						<Parameter>arrCurrentProfiles</Parameter>
						<Parameter>5003</Parameter>
						<Parameter>2011</Parameter>
						<OutParameter>bAtLeastOneModuleMatch</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>bAtLeastOneModuleMatch</Value1>
							<Value2>false</Value2>
							<GotoStep>END</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="GetObjectIndexInclOffset">
					<SetVariable Target="u16ObjectIndexInclOffset">#xF383</SetVariable>
					<WriteLine Id="6" Param0="u16ObjectIndexInclOffset" Level="Verbose">ObjectIndex '0x{0:X}' (module independent)</WriteLine>
				</TestStep>
				<TestStep Name="LoadDeviceObjectDictionary">
					<Description Id="7" Level="Verbose">Load 'offline' object dictionary for testing.</Description>
					<GetObjectDictionary Target="odDeviceObjectdictionary">
						<DictionaryType>Offline</DictionaryType>
					</GetObjectDictionary>
					<RaiseErrorOnFailure Id="8">VerifyObject : failed to load offline object dictionary.</RaiseErrorOnFailure>
				</TestStep>
				<TestStep Name="CallCheckObjectDescription">
					<Description Id="9" Param0="u16ObjectIndexInclOffset" Level="Output">Verify the object description 0x{0:X4} 'Active Device Error Details'.</Description>
					<CallTestFunction Name="CheckObjectDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"offline"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>"Active Device Error Details"</Parameter>
						<Parameter>null</Parameter>
						<Parameter>8</Parameter>
						<Parameter>-1</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<GotoStep>END</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="InitEntryBittOffset">
					<SetVariable Target="i32CurrentBitOffset">0</SetVariable>
				</TestStep>
				<TestStep Name="StartSi0">
					<Description Id="10" Level="Output">Start validate SubIndex0</Description>
					<WriteLine Id="11" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : Subindex '0x{0:X}.0'</WriteLine>
				</TestStep>
				<TestStep Name="CallSi0CheckEntryDescription">
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"offline"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>0</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>null</Parameter>
						<Parameter>5</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>null</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>null</Parameter>
						<Parameter>null</Parameter>
						<Parameter>null</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>8</Parameter>
						<Parameter>i32CurrentBitOffset</Parameter>
						<Parameter>true</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="EndSi0">
					<SetVariable Target="i32CurrentBitOffset">16</SetVariable>
				</TestStep>
				<TestStep Name="InitProfileLoopCounter">
					<SetVariable Target="u32ProfileCounter">0</SetVariable>
				</TestStep>
				<TestStep Name="GetProfileArrayLength">
					<SizeOf UInt32Var="u32CurrentProfilesLength">arrCurrentProfiles</SizeOf>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="12" Param0="u32CurrentProfilesLength" Level="Verbose">'{0}' Profile(s) defined offline.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>u32CurrentProfilesLength</Value1>
							<Value2>0</Value2>
							<SkipCase Id="13">Skip case | no profile defined.</SkipCase>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="ProfileLoopStart">
					<GetArrayItem SourceArray="arrCurrentProfiles" Target="strTmpString" Index="u32ProfileCounter"></GetArrayItem>
				</TestStep>
				<TestStep Name="CheckProfileInformationString">
					<Compare>
						<Equal>
							<Value1>strTmpString</Value1>
							<Value2>null</Value2>
							<RaiseError Id="14" Param0="u32ProfileCounter">Profile Info element [{0}] is null.</RaiseError>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>strTmpString</Value1>
							<Value2>EmptyString</Value2>
							<RaiseError Id="15" Param0="u32ProfileCounter">Profile Info element [{0}] is an empty string.</RaiseError>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="GetDeviceProfile">
					<CallTestFunction Name="GetDeviceProfile">
						<Parameter>strTmpString</Parameter>
						<OutParameter>uint16CurDeviceProfile</OutParameter>
					</CallTestFunction>
				</TestStep>
				<TestStep Name="GetModuleProfile">
					<CallTestFunction Name="GetModuleProfile">
						<Parameter>strTmpString</Parameter>
						<OutParameter>uint16CurModuleProfile</OutParameter>
					</CallTestFunction>
				</TestStep>
				<TestStep Name="GetSubModuleProfile">
					<CallTestFunction Name="GetSubModuleProfile">
						<Parameter>strTmpString</Parameter>
						<OutParameter>uint16CurSubModuleProfile</OutParameter>
					</CallTestFunction>
				</TestStep>
				<TestStep Name="DumpProfileInfo">
					<Description Id="16" Param0="uint16CurDeviceProfile" Param1="uint16CurModuleProfile" Param2="uint16CurSubModuleProfile" Param3="u32ProfileCounter" Level="Output">Module[{3}] : DeviceProfile '{0}' ; ModuleProfile '{1}' ; SubModuleProfile '{2}'</Description>
					<Compare>
						<Equal>
							<Value1>bIgnoreProfileID</Value1>
							<Value2>true</Value2>
							<GotoStep>IndicateThatAtleastOneModuleMatch</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CompareDeviceProfile">
					<Compare>
						<NotEqual>
							<Value1>uint16CurDeviceProfile</Value1>
							<Value2>5003</Value2>
							<WriteLine Id="17" Param0="uint16CurDeviceProfile" Level="Output">Skip Profile  (Test Device Profile '5003' != Cur Device Profile '{0}')</WriteLine>
						</NotEqual>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>uint16CurDeviceProfile</Value1>
							<Value2>5003</Value2>
							<GotoStep>ProfileLoopEnd</GotoStep>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep Name="CompareModuleProfile">
					<Compare>
						<NotEqual>
							<Value1>uint16CurModuleProfile</Value1>
							<Value2>2011</Value2>
							<WriteLine Id="18" Param0="uint16CurModuleProfile" Level="Output">Skip Profile  (Test Module Profile '2011' != Cur Module Profile '{0}')</WriteLine>
						</NotEqual>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>uint16CurModuleProfile</Value1>
							<Value2>2011</Value2>
							<GotoStep>ProfileLoopEnd</GotoStep>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep Name="CompareSubModuleProfile">
					<Compare>
						<NotEqual>
							<Value1>uint16CurSubModuleProfile</Value1>
							<Value2>0</Value2>
							<WriteLine Id="19" Param0="uint16CurSubModuleProfile" Level="Output">Skip Profile  (Test SubModule Profile '0' != Cur SubModule Profile '{0}')</WriteLine>
						</NotEqual>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>uint16CurSubModuleProfile</Value1>
							<Value2>0</Value2>
							<GotoStep>ProfileLoopEnd</GotoStep>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep Name="IndicateThatAtleastOneModuleMatch">
					<SetVariable Target="bAtLeastOneModuleMatch">true</SetVariable>
				</TestStep>
				<TestStep Name="StartSi1">
					<Description Id="20" Param0="1 + (u32ProfileCounter * 1)" Level="Output">Start validate SubIndex{0}</Description>
					<SetVariable Target="byteSubIndexInclOffset">1 + (u32ProfileCounter * 1)</SetVariable>
					<WriteLine Id="21" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Param2="byteSubIndexInclOffset" Level="Verbose">Module[{1}] : Subindex '0x{0:X}.{2}'</WriteLine>
				</TestStep>
				<TestStep Name="CallSi1CheckEntryDescription">
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"offline"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>byteSubIndexInclOffset</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>null</Parameter>
						<Parameter>7</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>null</Parameter>
						<Parameter>T</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>32</Parameter>
						<Parameter>i32CurrentBitOffset</Parameter>
						<Parameter>true</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="EndSi1">
					<SetVariable Target="i32CurrentBitOffset">i32CurrentBitOffset + 32</SetVariable>
				</TestStep>
				<TestStep Name="ProfileLoopEnd">
					<Compare>
						<Equal>
							<Value1>bAtLeastOneModuleMatch</Value1>
							<Value2>false</Value2>
							<GotoStep>HandleAbortTestCaseOnFirstError</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="HandleAbortTestCaseOnFirstError">
					<Compare>
						<Equal>
							<Value1>bAbortTestCaseOnFirstError</Value1>
							<Value2>false</Value2>
							<GotoStep>ProfileLoopIncrement</GotoStep>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>strResult</Value1>
							<Value2>EmptyString</Value2>
							<GotoStep>ProfileLoopIncrement</GotoStep>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="22" Level="Output">Object verification for all following modules abort because an error was already detected for the current module.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>END</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="ProfileLoopIncrement">
					<SetVariable Target="u32ProfileCounter">u32ProfileCounter + 1</SetVariable>
					<Compare>
						<Greater>
							<Value1>u32CurrentProfilesLength</Value1>
							<Value2>u32ProfileCounter</Value2>
							<GotoStep>ProfileLoopStart</GotoStep>
						</Greater>
					</Compare>
				</TestStep>
				<TestStep Name="END">
					<Compare>
						<NotEqual>
							<Value1>bAtLeastOneModuleMatch</Value1>
							<Value2>true</Value2>
							<SkipCase Id="23">SKIP TEST(no module/channel supports the current profile)</SkipCase>
						</NotEqual>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bDEBUG</Value1>
							<Value2>true</Value2>
							<WriteLine Id="24" Param0="strResult" Level="Verbose">DEBUG | Result : '{0}'.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>strResult</Value1>
							<Value2>EmptyString</Value2>
							<ReturnSuccess Id="25">Test succeed</ReturnSuccess>
						</Equal>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>strResult</Value1>
							<Value2>EmptyString</Value2>
							<RaiseError Id="26"></RaiseError>
						</NotEqual>
					</Compare>
				</TestStep>
			</TestCase>
			<TestCase Name="online | 0xF383 (Active Device Error Details)" CaseId="8">
				<Description>
					<PreCondition>- The device profile is 5003
- The module profile is 2011
- The submodule profile is 0</PreCondition>
					<Action>- Iterate over all online defined modules/channels and if the PreCondition matches the following operations are done:
- Get the online description of object 0xF383(+module specific offset) 'Active Device Error Details' and all entries
 Check:
    (Name)
    BitSize
    DataType
    Rx / Tx mappable
    Default Data
    MinData
    Flags       </Action>
					<PostCondition>Error if
- mandatory object / entry is not defined
- an optional object exists and the entries are invalid
- Object / entry description does not match with the specification</PostCondition>
					<ProposalForSolution>- Define the missing objects
- correct object / entry description</ProposalForSolution>
					<References>
						<Reference Specification="ETG.5003.2011"></Reference>
					</References>
					<Mandatory>true</Mandatory>
				</Description>
				<TestStep Name="InitResult">
					<SetVariable Target="strResult">EmptyString</SetVariable>
				</TestStep>
				<TestStep Name="CheckIfOdAvailable">
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Mailbox</Value1>
							<Value2>false</Value2>
							<SkipCase Id="1">DuT does not support mailbox.</SkipCase>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Mailbox.CoE</Value1>
							<Value2>false</Value2>
							<SkipCase Id="2">DuT does not support CoE.</SkipCase>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Mailbox.CoE.SdoInfo</Value1>
							<Value2>false</Value2>
							<SkipCase Id="3">DuT does not support SDO Info.</SkipCase>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="InitAtLeastOneProfileMatch">
					<SetVariable Target="bAtLeastOneModuleMatch">false</SetVariable>
				</TestStep>
				<TestStep Name="GetCurrentProfileList">
					<SizeOf UInt32Var="u32Tmp">arrOnlineProfiles</SizeOf>
					<Compare>
						<Equal>
							<Value1>u32Tmp</Value1>
							<Value2>0</Value2>
							<CallTestFunction Name="GetCurrentProfileList">
								<Parameter>"online"</Parameter>
								<Parameter>"SafeOP"</Parameter>
								<OutParameter>arrOnlineProfiles</OutParameter>
							</CallTestFunction>
						</Equal>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>u32Tmp</Value1>
							<Value2>0</Value2>
							<WriteLine Id="4" Param0="arrOnlineProfiles" Level="Verbose">Use previously created profile list ({0})</WriteLine>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep>
					<SizeOf UInt32Var="u32Tmp">arrOnlineProfiles</SizeOf>
				</TestStep>
				<TestStep>
					<InitArray TargetArray="arrCurrentProfiles" Length="u32Tmp"></InitArray>
				</TestStep>
				<TestStep>
					<CopyArray>
						<SourceArray>arrOnlineProfiles</SourceArray>
						<DestinationArray>arrCurrentProfiles</DestinationArray>
						<Length>u32Tmp</Length>
					</CopyArray>
				</TestStep>
				<TestStep Name="IsProfileSupported">
					<CallTestFunction Name="DeviceAndModuleProfileDefined">
						<Parameter>arrCurrentProfiles</Parameter>
						<Parameter>5003</Parameter>
						<Parameter>2011</Parameter>
						<OutParameter>bAtLeastOneModuleMatch</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>bAtLeastOneModuleMatch</Value1>
							<Value2>false</Value2>
							<GotoStep>END</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="GetObjectIndexInclOffset">
					<SetVariable Target="u16ObjectIndexInclOffset">#xF383</SetVariable>
					<WriteLine Id="5" Param0="u16ObjectIndexInclOffset" Level="Verbose">ObjectIndex '0x{0:X}' (module independent)</WriteLine>
				</TestStep>
				<TestStep Name="LoadDeviceObjectDictionary">
					<Description Id="6" Level="Verbose">Load 'online' object dictionary for testing.</Description>
					<GetObjectDictionary Target="odDeviceObjectdictionary">
						<DictionaryType>Online</DictionaryType>
					</GetObjectDictionary>
					<RaiseErrorOnFailure Id="7">VerifyObject : failed to load online object dictionary.</RaiseErrorOnFailure>
				</TestStep>
				<TestStep Name="CallCheckObjectDescription">
					<Description Id="8" Param0="u16ObjectIndexInclOffset" Level="Output">Verify the object description 0x{0:X4} 'Active Device Error Details'.</Description>
					<CallTestFunction Name="CheckObjectDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"online"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>"Active Device Error Details"</Parameter>
						<Parameter>null</Parameter>
						<Parameter>8</Parameter>
						<Parameter>-1</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<GotoStep>END</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="InitEntryBittOffset">
					<SetVariable Target="i32CurrentBitOffset">0</SetVariable>
				</TestStep>
				<TestStep Name="StartSi0">
					<Description Id="9" Level="Output">Start validate SubIndex0</Description>
					<WriteLine Id="10" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : Subindex '0x{0:X}.0'</WriteLine>
				</TestStep>
				<TestStep Name="CallSi0CheckEntryDescription">
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"online"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>0</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>null</Parameter>
						<Parameter>5</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>null</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>null</Parameter>
						<Parameter>null</Parameter>
						<Parameter>null</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>8</Parameter>
						<Parameter>i32CurrentBitOffset</Parameter>
						<Parameter>true</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="EndSi0">
					<SetVariable Target="i32CurrentBitOffset">16</SetVariable>
				</TestStep>
				<TestStep Name="InitProfileLoopCounter">
					<SetVariable Target="u32ProfileCounter">0</SetVariable>
				</TestStep>
				<TestStep Name="GetProfileArrayLength">
					<SizeOf UInt32Var="u32CurrentProfilesLength">arrCurrentProfiles</SizeOf>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="11" Param0="u32CurrentProfilesLength" Level="Verbose">'{0}' Profile(s) defined online.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>u32CurrentProfilesLength</Value1>
							<Value2>0</Value2>
							<SkipCase Id="12">Skip case | no profile defined.</SkipCase>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="ProfileLoopStart">
					<GetArrayItem SourceArray="arrCurrentProfiles" Target="strTmpString" Index="u32ProfileCounter"></GetArrayItem>
				</TestStep>
				<TestStep Name="CheckProfileInformationString">
					<Compare>
						<Equal>
							<Value1>strTmpString</Value1>
							<Value2>null</Value2>
							<RaiseError Id="13" Param0="u32ProfileCounter">Profile Info element [{0}] is null.</RaiseError>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>strTmpString</Value1>
							<Value2>EmptyString</Value2>
							<RaiseError Id="14" Param0="u32ProfileCounter">Profile Info element [{0}] is an empty string.</RaiseError>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="GetDeviceProfile">
					<CallTestFunction Name="GetDeviceProfile">
						<Parameter>strTmpString</Parameter>
						<OutParameter>uint16CurDeviceProfile</OutParameter>
					</CallTestFunction>
				</TestStep>
				<TestStep Name="GetModuleProfile">
					<CallTestFunction Name="GetModuleProfile">
						<Parameter>strTmpString</Parameter>
						<OutParameter>uint16CurModuleProfile</OutParameter>
					</CallTestFunction>
				</TestStep>
				<TestStep Name="GetSubModuleProfile">
					<CallTestFunction Name="GetSubModuleProfile">
						<Parameter>strTmpString</Parameter>
						<OutParameter>uint16CurSubModuleProfile</OutParameter>
					</CallTestFunction>
				</TestStep>
				<TestStep Name="DumpProfileInfo">
					<Description Id="15" Param0="uint16CurDeviceProfile" Param1="uint16CurModuleProfile" Param2="uint16CurSubModuleProfile" Param3="u32ProfileCounter" Level="Output">Module[{3}] : DeviceProfile '{0}' ; ModuleProfile '{1}' ; SubModuleProfile '{2}'</Description>
					<Compare>
						<Equal>
							<Value1>bIgnoreProfileID</Value1>
							<Value2>true</Value2>
							<GotoStep>IndicateThatAtleastOneModuleMatch</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CompareDeviceProfile">
					<Compare>
						<NotEqual>
							<Value1>uint16CurDeviceProfile</Value1>
							<Value2>5003</Value2>
							<WriteLine Id="16" Param0="uint16CurDeviceProfile" Level="Output">Skip Profile  (Test Device Profile '5003' != Cur Device Profile '{0}')</WriteLine>
						</NotEqual>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>uint16CurDeviceProfile</Value1>
							<Value2>5003</Value2>
							<GotoStep>ProfileLoopEnd</GotoStep>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep Name="CompareModuleProfile">
					<Compare>
						<NotEqual>
							<Value1>uint16CurModuleProfile</Value1>
							<Value2>2011</Value2>
							<WriteLine Id="17" Param0="uint16CurModuleProfile" Level="Output">Skip Profile  (Test Module Profile '2011' != Cur Module Profile '{0}')</WriteLine>
						</NotEqual>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>uint16CurModuleProfile</Value1>
							<Value2>2011</Value2>
							<GotoStep>ProfileLoopEnd</GotoStep>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep Name="CompareSubModuleProfile">
					<Compare>
						<NotEqual>
							<Value1>uint16CurSubModuleProfile</Value1>
							<Value2>0</Value2>
							<WriteLine Id="18" Param0="uint16CurSubModuleProfile" Level="Output">Skip Profile  (Test SubModule Profile '0' != Cur SubModule Profile '{0}')</WriteLine>
						</NotEqual>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>uint16CurSubModuleProfile</Value1>
							<Value2>0</Value2>
							<GotoStep>ProfileLoopEnd</GotoStep>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep Name="IndicateThatAtleastOneModuleMatch">
					<SetVariable Target="bAtLeastOneModuleMatch">true</SetVariable>
				</TestStep>
				<TestStep Name="StartSi1">
					<Description Id="19" Param0="1 + (u32ProfileCounter * 1)" Level="Output">Start validate SubIndex{0}</Description>
					<SetVariable Target="byteSubIndexInclOffset">1 + (u32ProfileCounter * 1)</SetVariable>
					<WriteLine Id="20" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Param2="byteSubIndexInclOffset" Level="Verbose">Module[{1}] : Subindex '0x{0:X}.{2}'</WriteLine>
				</TestStep>
				<TestStep Name="CallSi1CheckEntryDescription">
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"online"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>byteSubIndexInclOffset</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>null</Parameter>
						<Parameter>7</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>null</Parameter>
						<Parameter>T</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>32</Parameter>
						<Parameter>i32CurrentBitOffset</Parameter>
						<Parameter>true</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="EndSi1">
					<SetVariable Target="i32CurrentBitOffset">i32CurrentBitOffset + 32</SetVariable>
				</TestStep>
				<TestStep Name="ProfileLoopEnd">
					<Compare>
						<Equal>
							<Value1>bAtLeastOneModuleMatch</Value1>
							<Value2>false</Value2>
							<GotoStep>HandleAbortTestCaseOnFirstError</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="HandleAbortTestCaseOnFirstError">
					<Compare>
						<Equal>
							<Value1>bAbortTestCaseOnFirstError</Value1>
							<Value2>false</Value2>
							<GotoStep>ProfileLoopIncrement</GotoStep>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>strResult</Value1>
							<Value2>EmptyString</Value2>
							<GotoStep>ProfileLoopIncrement</GotoStep>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="21" Level="Output">Object verification for all following modules abort because an error was already detected for the current module.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>END</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="ProfileLoopIncrement">
					<SetVariable Target="u32ProfileCounter">u32ProfileCounter + 1</SetVariable>
					<Compare>
						<Greater>
							<Value1>u32CurrentProfilesLength</Value1>
							<Value2>u32ProfileCounter</Value2>
							<GotoStep>ProfileLoopStart</GotoStep>
						</Greater>
					</Compare>
				</TestStep>
				<TestStep Name="END">
					<Compare>
						<NotEqual>
							<Value1>bAtLeastOneModuleMatch</Value1>
							<Value2>true</Value2>
							<SkipCase Id="22">SKIP TEST(no module/channel supports the current profile)</SkipCase>
						</NotEqual>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bDEBUG</Value1>
							<Value2>true</Value2>
							<WriteLine Id="23" Param0="strResult" Level="Verbose">DEBUG | Result : '{0}'.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>strResult</Value1>
							<Value2>EmptyString</Value2>
							<ReturnSuccess Id="24">Test succeed</ReturnSuccess>
						</Equal>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>strResult</Value1>
							<Value2>EmptyString</Value2>
							<RaiseError Id="25"></RaiseError>
						</NotEqual>
					</Compare>
				</TestStep>
			</TestCase>
			<TestCase Name="offline | 0xF384 (Active Manufacturer Error Details)" CaseId="9">
				<Description>
					<PreCondition>- The device profile is 5003
- The module profile is 2011
- The submodule profile is 0</PreCondition>
					<Action>- Iterate over all offline defined modules/channels and if the PreCondition matches the following operations are done:
- Get the offline description of object 0xF384(+module specific offset) 'Active Manufacturer Error Details' and all entries
 Check:
    (Name)
    BitSize
    DataType
    Rx / Tx mappable
    Default Data
    MinData
    Flags       </Action>
					<PostCondition>Error if
- mandatory object / entry is not defined
- an optional object exists and the entries are invalid
- Object / entry description does not match with the specification</PostCondition>
					<ProposalForSolution>- Define the missing objects
- correct object / entry description</ProposalForSolution>
					<References>
						<Reference Specification="ETG.5003.2011"></Reference>
					</References>
					<Mandatory>true</Mandatory>
				</Description>
				<TestStep Name="InitResult">
					<SetVariable Target="strResult">EmptyString</SetVariable>
				</TestStep>
				<TestStep Name="CheckIfOdAvailable">
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Mailbox</Value1>
							<Value2>false</Value2>
							<SkipCase Id="1">DuT does not support mailbox.</SkipCase>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Mailbox.CoE</Value1>
							<Value2>false</Value2>
							<SkipCase Id="2">DuT does not support CoE.</SkipCase>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep>
					<GetObjectDictionary Target="odDeviceObjectdictionary">
						<DictionaryType>Offline</DictionaryType>
					</GetObjectDictionary>
					<SkipOnFailure Id="3">No offline object dictionary defined.</SkipOnFailure>
				</TestStep>
				<TestStep>
					<GetObjectList Count="u32Tmp" Target="odDeviceObjectdictionaryList" SourceDict="odDeviceObjectdictionary"></GetObjectList>
					<Compare>
						<Equal>
							<Value1>u32Tmp</Value1>
							<Value2>0</Value2>
							<SkipCase Id="4">No offline object dictionary defined.</SkipCase>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="InitAtLeastOneProfileMatch">
					<SetVariable Target="bAtLeastOneModuleMatch">false</SetVariable>
				</TestStep>
				<TestStep Name="GetCurrentProfileList">
					<SizeOf UInt32Var="u32Tmp">arrOfflineProfiles</SizeOf>
					<Compare>
						<Equal>
							<Value1>u32Tmp</Value1>
							<Value2>0</Value2>
							<CallTestFunction Name="GetCurrentProfileList">
								<Parameter>"offline"</Parameter>
								<Parameter>"SafeOP"</Parameter>
								<OutParameter>arrOfflineProfiles</OutParameter>
							</CallTestFunction>
						</Equal>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>u32Tmp</Value1>
							<Value2>0</Value2>
							<WriteLine Id="5" Param0="arrOfflineProfiles" Level="Verbose">Use previously created profile list ({0})</WriteLine>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep>
					<SizeOf UInt32Var="u32Tmp">arrOfflineProfiles</SizeOf>
				</TestStep>
				<TestStep>
					<InitArray TargetArray="arrCurrentProfiles" Length="u32Tmp"></InitArray>
				</TestStep>
				<TestStep>
					<CopyArray>
						<SourceArray>arrOfflineProfiles</SourceArray>
						<DestinationArray>arrCurrentProfiles</DestinationArray>
						<Length>u32Tmp</Length>
					</CopyArray>
				</TestStep>
				<TestStep Name="IsProfileSupported">
					<CallTestFunction Name="DeviceAndModuleProfileDefined">
						<Parameter>arrCurrentProfiles</Parameter>
						<Parameter>5003</Parameter>
						<Parameter>2011</Parameter>
						<OutParameter>bAtLeastOneModuleMatch</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>bAtLeastOneModuleMatch</Value1>
							<Value2>false</Value2>
							<GotoStep>END</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="GetObjectIndexInclOffset">
					<SetVariable Target="u16ObjectIndexInclOffset">#xF384</SetVariable>
					<WriteLine Id="6" Param0="u16ObjectIndexInclOffset" Level="Verbose">ObjectIndex '0x{0:X}' (module independent)</WriteLine>
				</TestStep>
				<TestStep Name="LoadDeviceObjectDictionary">
					<Description Id="7" Level="Verbose">Load 'offline' object dictionary for testing.</Description>
					<GetObjectDictionary Target="odDeviceObjectdictionary">
						<DictionaryType>Offline</DictionaryType>
					</GetObjectDictionary>
					<RaiseErrorOnFailure Id="8">VerifyObject : failed to load offline object dictionary.</RaiseErrorOnFailure>
				</TestStep>
				<TestStep Name="SetObjectRequiredLevel">
					<SetVariable Target="bObjectOrEntryRequiredLevel">1</SetVariable>
					<WriteLine Id="9" Param0="u16ObjectIndexInclOffset" Level="Verbose">0x{0:X4} 'Active Manufacturer Error Details' may be available</WriteLine>
				</TestStep>
				<TestStep Name="CheckIfObjectExists">
					<GetObjectDescription SourceDictionary="odDeviceObjectdictionary" Index="u16ObjectIndexInclOffset" SubIndex="-1"></GetObjectDescription>
					<GotoOnSuccess>CallCheckObjectDescription</GotoOnSuccess>
				</TestStep>
				<TestStep Name="HandleNotExistingObject">
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>2</Value2>
							<WriteLine Id="10" Param0="u16ObjectIndexInclOffset" Level="Warning">The object 0x{0:X4} 'Active Manufacturer Error Details' does not exists.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>1</Value2>
							<WriteLine Id="11" Param0="u16ObjectIndexInclOffset" Level="Output">The object 0x{0:X4} 'Active Manufacturer Error Details' does not exists.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>END</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CallCheckObjectDescription">
					<Description Id="12" Param0="u16ObjectIndexInclOffset" Level="Output">Verify the object description 0x{0:X4} 'Active Manufacturer Error Details'.</Description>
					<CallTestFunction Name="CheckObjectDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"offline"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>"Active Manufacturer Error Details"</Parameter>
						<Parameter>null</Parameter>
						<Parameter>8</Parameter>
						<Parameter>-1</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<GotoStep>END</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="InitEntryBittOffset">
					<SetVariable Target="i32CurrentBitOffset">0</SetVariable>
				</TestStep>
				<TestStep Name="StartSi0">
					<Description Id="13" Level="Output">Start validate SubIndex0</Description>
					<WriteLine Id="14" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : Subindex '0x{0:X}.0'</WriteLine>
				</TestStep>
				<TestStep Name="CallSi0CheckEntryDescription">
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"offline"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>0</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>null</Parameter>
						<Parameter>5</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>null</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>null</Parameter>
						<Parameter>null</Parameter>
						<Parameter>null</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>8</Parameter>
						<Parameter>i32CurrentBitOffset</Parameter>
						<Parameter>true</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="EndSi0">
					<SetVariable Target="i32CurrentBitOffset">16</SetVariable>
				</TestStep>
				<TestStep Name="InitProfileLoopCounter">
					<SetVariable Target="u32ProfileCounter">0</SetVariable>
				</TestStep>
				<TestStep Name="GetProfileArrayLength">
					<SizeOf UInt32Var="u32CurrentProfilesLength">arrCurrentProfiles</SizeOf>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="15" Param0="u32CurrentProfilesLength" Level="Verbose">'{0}' Profile(s) defined offline.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>u32CurrentProfilesLength</Value1>
							<Value2>0</Value2>
							<SkipCase Id="16">Skip case | no profile defined.</SkipCase>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="ProfileLoopStart">
					<GetArrayItem SourceArray="arrCurrentProfiles" Target="strTmpString" Index="u32ProfileCounter"></GetArrayItem>
				</TestStep>
				<TestStep Name="CheckProfileInformationString">
					<Compare>
						<Equal>
							<Value1>strTmpString</Value1>
							<Value2>null</Value2>
							<RaiseError Id="17" Param0="u32ProfileCounter">Profile Info element [{0}] is null.</RaiseError>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>strTmpString</Value1>
							<Value2>EmptyString</Value2>
							<RaiseError Id="18" Param0="u32ProfileCounter">Profile Info element [{0}] is an empty string.</RaiseError>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="GetDeviceProfile">
					<CallTestFunction Name="GetDeviceProfile">
						<Parameter>strTmpString</Parameter>
						<OutParameter>uint16CurDeviceProfile</OutParameter>
					</CallTestFunction>
				</TestStep>
				<TestStep Name="GetModuleProfile">
					<CallTestFunction Name="GetModuleProfile">
						<Parameter>strTmpString</Parameter>
						<OutParameter>uint16CurModuleProfile</OutParameter>
					</CallTestFunction>
				</TestStep>
				<TestStep Name="GetSubModuleProfile">
					<CallTestFunction Name="GetSubModuleProfile">
						<Parameter>strTmpString</Parameter>
						<OutParameter>uint16CurSubModuleProfile</OutParameter>
					</CallTestFunction>
				</TestStep>
				<TestStep Name="DumpProfileInfo">
					<Description Id="19" Param0="uint16CurDeviceProfile" Param1="uint16CurModuleProfile" Param2="uint16CurSubModuleProfile" Param3="u32ProfileCounter" Level="Output">Module[{3}] : DeviceProfile '{0}' ; ModuleProfile '{1}' ; SubModuleProfile '{2}'</Description>
					<Compare>
						<Equal>
							<Value1>bIgnoreProfileID</Value1>
							<Value2>true</Value2>
							<GotoStep>IndicateThatAtleastOneModuleMatch</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CompareDeviceProfile">
					<Compare>
						<NotEqual>
							<Value1>uint16CurDeviceProfile</Value1>
							<Value2>5003</Value2>
							<WriteLine Id="20" Param0="uint16CurDeviceProfile" Level="Output">Skip Profile  (Test Device Profile '5003' != Cur Device Profile '{0}')</WriteLine>
						</NotEqual>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>uint16CurDeviceProfile</Value1>
							<Value2>5003</Value2>
							<GotoStep>ProfileLoopEnd</GotoStep>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep Name="CompareModuleProfile">
					<Compare>
						<NotEqual>
							<Value1>uint16CurModuleProfile</Value1>
							<Value2>2011</Value2>
							<WriteLine Id="21" Param0="uint16CurModuleProfile" Level="Output">Skip Profile  (Test Module Profile '2011' != Cur Module Profile '{0}')</WriteLine>
						</NotEqual>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>uint16CurModuleProfile</Value1>
							<Value2>2011</Value2>
							<GotoStep>ProfileLoopEnd</GotoStep>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep Name="CompareSubModuleProfile">
					<Compare>
						<NotEqual>
							<Value1>uint16CurSubModuleProfile</Value1>
							<Value2>0</Value2>
							<WriteLine Id="22" Param0="uint16CurSubModuleProfile" Level="Output">Skip Profile  (Test SubModule Profile '0' != Cur SubModule Profile '{0}')</WriteLine>
						</NotEqual>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>uint16CurSubModuleProfile</Value1>
							<Value2>0</Value2>
							<GotoStep>ProfileLoopEnd</GotoStep>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep Name="IndicateThatAtleastOneModuleMatch">
					<SetVariable Target="bAtLeastOneModuleMatch">true</SetVariable>
				</TestStep>
				<TestStep Name="StartSi1">
					<Description Id="23" Param0="1 + (u32ProfileCounter * 1)" Level="Output">Start validate SubIndex{0}</Description>
					<SetVariable Target="byteSubIndexInclOffset">1 + (u32ProfileCounter * 1)</SetVariable>
					<WriteLine Id="24" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Param2="byteSubIndexInclOffset" Level="Verbose">Module[{1}] : Subindex '0x{0:X}.{2}'</WriteLine>
				</TestStep>
				<TestStep Name="SetSi1RequiredLevel">
					<SetVariable Target="bObjectOrEntryRequiredLevel">1</SetVariable>
					<WriteLine Id="25" Param0="u16ObjectIndexInclOffset" Param1="byteSubIndexInclOffset" Level="Verbose">0x{0:X4}.{1} may be available</WriteLine>
				</TestStep>
				<TestStep Name="CheckIfSi1Exists">
					<GetObjectDescription SourceDictionary="odDeviceObjectdictionary" Index="u16ObjectIndexInclOffset" SubIndex="byteSubIndexInclOffset">
						<Type>u16DataType</Type>
					</GetObjectDescription>
					<GotoOnFailure>HandleNotExistingSi1</GotoOnFailure>
				</TestStep>
				<TestStep>
					<Compare>
						<NotEqual>
							<Value1>u16DataType</Value1>
							<Value2>0</Value2>
							<GotoStep>CallSi1CheckEntryDescription</GotoStep>
						</NotEqual>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="26" Param0="u16ObjectIndexInclOffset" Level="Verbose">The entry 0x{0:X4}.1 is defined as a padding entry.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>EndSi1</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="HandleNotExistingSi1">
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="27" Param0="u16ObjectIndexInclOffset" Param1="byteSubIndexInclOffset" Level="Output">The entry 0x{0:X4}.{1} does not exists.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>EndSi1</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CallSi1CheckEntryDescription">
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"offline"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>byteSubIndexInclOffset</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>null</Parameter>
						<Parameter>7</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>null</Parameter>
						<Parameter>T</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>32</Parameter>
						<Parameter>i32CurrentBitOffset</Parameter>
						<Parameter>true</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="EndSi1">
					<SetVariable Target="i32CurrentBitOffset">-1</SetVariable>
				</TestStep>
				<TestStep Name="ProfileLoopEnd">
					<Compare>
						<Equal>
							<Value1>bAtLeastOneModuleMatch</Value1>
							<Value2>false</Value2>
							<GotoStep>HandleAbortTestCaseOnFirstError</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="HandleAbortTestCaseOnFirstError">
					<Compare>
						<Equal>
							<Value1>bAbortTestCaseOnFirstError</Value1>
							<Value2>false</Value2>
							<GotoStep>ProfileLoopIncrement</GotoStep>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>strResult</Value1>
							<Value2>EmptyString</Value2>
							<GotoStep>ProfileLoopIncrement</GotoStep>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="28" Level="Output">Object verification for all following modules abort because an error was already detected for the current module.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>END</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="ProfileLoopIncrement">
					<SetVariable Target="u32ProfileCounter">u32ProfileCounter + 1</SetVariable>
					<Compare>
						<Greater>
							<Value1>u32CurrentProfilesLength</Value1>
							<Value2>u32ProfileCounter</Value2>
							<GotoStep>ProfileLoopStart</GotoStep>
						</Greater>
					</Compare>
				</TestStep>
				<TestStep Name="END">
					<Compare>
						<NotEqual>
							<Value1>bAtLeastOneModuleMatch</Value1>
							<Value2>true</Value2>
							<SkipCase Id="29">SKIP TEST(no module/channel supports the current profile)</SkipCase>
						</NotEqual>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bDEBUG</Value1>
							<Value2>true</Value2>
							<WriteLine Id="30" Param0="strResult" Level="Verbose">DEBUG | Result : '{0}'.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>strResult</Value1>
							<Value2>EmptyString</Value2>
							<ReturnSuccess Id="31">Test succeed</ReturnSuccess>
						</Equal>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>strResult</Value1>
							<Value2>EmptyString</Value2>
							<RaiseError Id="32"></RaiseError>
						</NotEqual>
					</Compare>
				</TestStep>
			</TestCase>
			<TestCase Name="online | 0xF384 (Active Manufacturer Error Details)" CaseId="10">
				<Description>
					<PreCondition>- The device profile is 5003
- The module profile is 2011
- The submodule profile is 0</PreCondition>
					<Action>- Iterate over all online defined modules/channels and if the PreCondition matches the following operations are done:
- Get the online description of object 0xF384(+module specific offset) 'Active Manufacturer Error Details' and all entries
 Check:
    (Name)
    BitSize
    DataType
    Rx / Tx mappable
    Default Data
    MinData
    Flags       </Action>
					<PostCondition>Error if
- mandatory object / entry is not defined
- an optional object exists and the entries are invalid
- Object / entry description does not match with the specification</PostCondition>
					<ProposalForSolution>- Define the missing objects
- correct object / entry description</ProposalForSolution>
					<References>
						<Reference Specification="ETG.5003.2011"></Reference>
					</References>
					<Mandatory>true</Mandatory>
				</Description>
				<TestStep Name="InitResult">
					<SetVariable Target="strResult">EmptyString</SetVariable>
				</TestStep>
				<TestStep Name="CheckIfOdAvailable">
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Mailbox</Value1>
							<Value2>false</Value2>
							<SkipCase Id="1">DuT does not support mailbox.</SkipCase>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Mailbox.CoE</Value1>
							<Value2>false</Value2>
							<SkipCase Id="2">DuT does not support CoE.</SkipCase>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Mailbox.CoE.SdoInfo</Value1>
							<Value2>false</Value2>
							<SkipCase Id="3">DuT does not support SDO Info.</SkipCase>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="InitAtLeastOneProfileMatch">
					<SetVariable Target="bAtLeastOneModuleMatch">false</SetVariable>
				</TestStep>
				<TestStep Name="GetCurrentProfileList">
					<SizeOf UInt32Var="u32Tmp">arrOnlineProfiles</SizeOf>
					<Compare>
						<Equal>
							<Value1>u32Tmp</Value1>
							<Value2>0</Value2>
							<CallTestFunction Name="GetCurrentProfileList">
								<Parameter>"online"</Parameter>
								<Parameter>"SafeOP"</Parameter>
								<OutParameter>arrOnlineProfiles</OutParameter>
							</CallTestFunction>
						</Equal>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>u32Tmp</Value1>
							<Value2>0</Value2>
							<WriteLine Id="4" Param0="arrOnlineProfiles" Level="Verbose">Use previously created profile list ({0})</WriteLine>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep>
					<SizeOf UInt32Var="u32Tmp">arrOnlineProfiles</SizeOf>
				</TestStep>
				<TestStep>
					<InitArray TargetArray="arrCurrentProfiles" Length="u32Tmp"></InitArray>
				</TestStep>
				<TestStep>
					<CopyArray>
						<SourceArray>arrOnlineProfiles</SourceArray>
						<DestinationArray>arrCurrentProfiles</DestinationArray>
						<Length>u32Tmp</Length>
					</CopyArray>
				</TestStep>
				<TestStep Name="IsProfileSupported">
					<CallTestFunction Name="DeviceAndModuleProfileDefined">
						<Parameter>arrCurrentProfiles</Parameter>
						<Parameter>5003</Parameter>
						<Parameter>2011</Parameter>
						<OutParameter>bAtLeastOneModuleMatch</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>bAtLeastOneModuleMatch</Value1>
							<Value2>false</Value2>
							<GotoStep>END</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="GetObjectIndexInclOffset">
					<SetVariable Target="u16ObjectIndexInclOffset">#xF384</SetVariable>
					<WriteLine Id="5" Param0="u16ObjectIndexInclOffset" Level="Verbose">ObjectIndex '0x{0:X}' (module independent)</WriteLine>
				</TestStep>
				<TestStep Name="LoadDeviceObjectDictionary">
					<Description Id="6" Level="Verbose">Load 'online' object dictionary for testing.</Description>
					<GetObjectDictionary Target="odDeviceObjectdictionary">
						<DictionaryType>Online</DictionaryType>
					</GetObjectDictionary>
					<RaiseErrorOnFailure Id="7">VerifyObject : failed to load online object dictionary.</RaiseErrorOnFailure>
				</TestStep>
				<TestStep Name="SetObjectRequiredLevel">
					<SetVariable Target="bObjectOrEntryRequiredLevel">1</SetVariable>
					<WriteLine Id="8" Param0="u16ObjectIndexInclOffset" Level="Verbose">0x{0:X4} 'Active Manufacturer Error Details' may be available</WriteLine>
				</TestStep>
				<TestStep Name="CheckIfObjectExists">
					<GetObjectDescription SourceDictionary="odDeviceObjectdictionary" Index="u16ObjectIndexInclOffset" SubIndex="-1"></GetObjectDescription>
					<GotoOnSuccess>CallCheckObjectDescription</GotoOnSuccess>
				</TestStep>
				<TestStep Name="HandleNotExistingObject">
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>2</Value2>
							<WriteLine Id="9" Param0="u16ObjectIndexInclOffset" Level="Warning">The object 0x{0:X4} 'Active Manufacturer Error Details' does not exists.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>1</Value2>
							<WriteLine Id="10" Param0="u16ObjectIndexInclOffset" Level="Output">The object 0x{0:X4} 'Active Manufacturer Error Details' does not exists.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>END</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CallCheckObjectDescription">
					<Description Id="11" Param0="u16ObjectIndexInclOffset" Level="Output">Verify the object description 0x{0:X4} 'Active Manufacturer Error Details'.</Description>
					<CallTestFunction Name="CheckObjectDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"online"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>"Active Manufacturer Error Details"</Parameter>
						<Parameter>null</Parameter>
						<Parameter>8</Parameter>
						<Parameter>-1</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<GotoStep>END</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="InitEntryBittOffset">
					<SetVariable Target="i32CurrentBitOffset">0</SetVariable>
				</TestStep>
				<TestStep Name="StartSi0">
					<Description Id="12" Level="Output">Start validate SubIndex0</Description>
					<WriteLine Id="13" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : Subindex '0x{0:X}.0'</WriteLine>
				</TestStep>
				<TestStep Name="CallSi0CheckEntryDescription">
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"online"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>0</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>null</Parameter>
						<Parameter>5</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>null</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>null</Parameter>
						<Parameter>null</Parameter>
						<Parameter>null</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>8</Parameter>
						<Parameter>i32CurrentBitOffset</Parameter>
						<Parameter>true</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="EndSi0">
					<SetVariable Target="i32CurrentBitOffset">16</SetVariable>
				</TestStep>
				<TestStep Name="InitProfileLoopCounter">
					<SetVariable Target="u32ProfileCounter">0</SetVariable>
				</TestStep>
				<TestStep Name="GetProfileArrayLength">
					<SizeOf UInt32Var="u32CurrentProfilesLength">arrCurrentProfiles</SizeOf>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="14" Param0="u32CurrentProfilesLength" Level="Verbose">'{0}' Profile(s) defined online.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>u32CurrentProfilesLength</Value1>
							<Value2>0</Value2>
							<SkipCase Id="15">Skip case | no profile defined.</SkipCase>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="ProfileLoopStart">
					<GetArrayItem SourceArray="arrCurrentProfiles" Target="strTmpString" Index="u32ProfileCounter"></GetArrayItem>
				</TestStep>
				<TestStep Name="CheckProfileInformationString">
					<Compare>
						<Equal>
							<Value1>strTmpString</Value1>
							<Value2>null</Value2>
							<RaiseError Id="16" Param0="u32ProfileCounter">Profile Info element [{0}] is null.</RaiseError>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>strTmpString</Value1>
							<Value2>EmptyString</Value2>
							<RaiseError Id="17" Param0="u32ProfileCounter">Profile Info element [{0}] is an empty string.</RaiseError>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="GetDeviceProfile">
					<CallTestFunction Name="GetDeviceProfile">
						<Parameter>strTmpString</Parameter>
						<OutParameter>uint16CurDeviceProfile</OutParameter>
					</CallTestFunction>
				</TestStep>
				<TestStep Name="GetModuleProfile">
					<CallTestFunction Name="GetModuleProfile">
						<Parameter>strTmpString</Parameter>
						<OutParameter>uint16CurModuleProfile</OutParameter>
					</CallTestFunction>
				</TestStep>
				<TestStep Name="GetSubModuleProfile">
					<CallTestFunction Name="GetSubModuleProfile">
						<Parameter>strTmpString</Parameter>
						<OutParameter>uint16CurSubModuleProfile</OutParameter>
					</CallTestFunction>
				</TestStep>
				<TestStep Name="DumpProfileInfo">
					<Description Id="18" Param0="uint16CurDeviceProfile" Param1="uint16CurModuleProfile" Param2="uint16CurSubModuleProfile" Param3="u32ProfileCounter" Level="Output">Module[{3}] : DeviceProfile '{0}' ; ModuleProfile '{1}' ; SubModuleProfile '{2}'</Description>
					<Compare>
						<Equal>
							<Value1>bIgnoreProfileID</Value1>
							<Value2>true</Value2>
							<GotoStep>IndicateThatAtleastOneModuleMatch</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CompareDeviceProfile">
					<Compare>
						<NotEqual>
							<Value1>uint16CurDeviceProfile</Value1>
							<Value2>5003</Value2>
							<WriteLine Id="19" Param0="uint16CurDeviceProfile" Level="Output">Skip Profile  (Test Device Profile '5003' != Cur Device Profile '{0}')</WriteLine>
						</NotEqual>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>uint16CurDeviceProfile</Value1>
							<Value2>5003</Value2>
							<GotoStep>ProfileLoopEnd</GotoStep>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep Name="CompareModuleProfile">
					<Compare>
						<NotEqual>
							<Value1>uint16CurModuleProfile</Value1>
							<Value2>2011</Value2>
							<WriteLine Id="20" Param0="uint16CurModuleProfile" Level="Output">Skip Profile  (Test Module Profile '2011' != Cur Module Profile '{0}')</WriteLine>
						</NotEqual>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>uint16CurModuleProfile</Value1>
							<Value2>2011</Value2>
							<GotoStep>ProfileLoopEnd</GotoStep>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep Name="CompareSubModuleProfile">
					<Compare>
						<NotEqual>
							<Value1>uint16CurSubModuleProfile</Value1>
							<Value2>0</Value2>
							<WriteLine Id="21" Param0="uint16CurSubModuleProfile" Level="Output">Skip Profile  (Test SubModule Profile '0' != Cur SubModule Profile '{0}')</WriteLine>
						</NotEqual>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>uint16CurSubModuleProfile</Value1>
							<Value2>0</Value2>
							<GotoStep>ProfileLoopEnd</GotoStep>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep Name="IndicateThatAtleastOneModuleMatch">
					<SetVariable Target="bAtLeastOneModuleMatch">true</SetVariable>
				</TestStep>
				<TestStep Name="StartSi1">
					<Description Id="22" Param0="1 + (u32ProfileCounter * 1)" Level="Output">Start validate SubIndex{0}</Description>
					<SetVariable Target="byteSubIndexInclOffset">1 + (u32ProfileCounter * 1)</SetVariable>
					<WriteLine Id="23" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Param2="byteSubIndexInclOffset" Level="Verbose">Module[{1}] : Subindex '0x{0:X}.{2}'</WriteLine>
				</TestStep>
				<TestStep Name="SetSi1RequiredLevel">
					<SetVariable Target="bObjectOrEntryRequiredLevel">1</SetVariable>
					<WriteLine Id="24" Param0="u16ObjectIndexInclOffset" Param1="byteSubIndexInclOffset" Level="Verbose">0x{0:X4}.{1} may be available</WriteLine>
				</TestStep>
				<TestStep Name="CheckIfSi1Exists">
					<GetObjectDescription SourceDictionary="odDeviceObjectdictionary" Index="u16ObjectIndexInclOffset" SubIndex="byteSubIndexInclOffset">
						<Type>u16DataType</Type>
					</GetObjectDescription>
					<GotoOnFailure>HandleNotExistingSi1</GotoOnFailure>
				</TestStep>
				<TestStep>
					<Compare>
						<NotEqual>
							<Value1>u16DataType</Value1>
							<Value2>0</Value2>
							<GotoStep>CallSi1CheckEntryDescription</GotoStep>
						</NotEqual>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="25" Param0="u16ObjectIndexInclOffset" Level="Verbose">The entry 0x{0:X4}.1 is defined as a padding entry.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>EndSi1</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="HandleNotExistingSi1">
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="26" Param0="u16ObjectIndexInclOffset" Param1="byteSubIndexInclOffset" Level="Output">The entry 0x{0:X4}.{1} does not exists.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>EndSi1</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CallSi1CheckEntryDescription">
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"online"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>byteSubIndexInclOffset</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>null</Parameter>
						<Parameter>7</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>null</Parameter>
						<Parameter>T</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>32</Parameter>
						<Parameter>i32CurrentBitOffset</Parameter>
						<Parameter>true</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="EndSi1">
					<SetVariable Target="i32CurrentBitOffset">-1</SetVariable>
				</TestStep>
				<TestStep Name="ProfileLoopEnd">
					<Compare>
						<Equal>
							<Value1>bAtLeastOneModuleMatch</Value1>
							<Value2>false</Value2>
							<GotoStep>HandleAbortTestCaseOnFirstError</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="HandleAbortTestCaseOnFirstError">
					<Compare>
						<Equal>
							<Value1>bAbortTestCaseOnFirstError</Value1>
							<Value2>false</Value2>
							<GotoStep>ProfileLoopIncrement</GotoStep>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>strResult</Value1>
							<Value2>EmptyString</Value2>
							<GotoStep>ProfileLoopIncrement</GotoStep>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="27" Level="Output">Object verification for all following modules abort because an error was already detected for the current module.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>END</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="ProfileLoopIncrement">
					<SetVariable Target="u32ProfileCounter">u32ProfileCounter + 1</SetVariable>
					<Compare>
						<Greater>
							<Value1>u32CurrentProfilesLength</Value1>
							<Value2>u32ProfileCounter</Value2>
							<GotoStep>ProfileLoopStart</GotoStep>
						</Greater>
					</Compare>
				</TestStep>
				<TestStep Name="END">
					<Compare>
						<NotEqual>
							<Value1>bAtLeastOneModuleMatch</Value1>
							<Value2>true</Value2>
							<SkipCase Id="28">SKIP TEST(no module/channel supports the current profile)</SkipCase>
						</NotEqual>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bDEBUG</Value1>
							<Value2>true</Value2>
							<WriteLine Id="29" Param0="strResult" Level="Verbose">DEBUG | Result : '{0}'.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>strResult</Value1>
							<Value2>EmptyString</Value2>
							<ReturnSuccess Id="30">Test succeed</ReturnSuccess>
						</Equal>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>strResult</Value1>
							<Value2>EmptyString</Value2>
							<RaiseError Id="31"></RaiseError>
						</NotEqual>
					</Compare>
				</TestStep>
			</TestCase>
			<TestCase Name="offline | 0xF385 (Active Global Device Warning Details)" CaseId="11">
				<Description>
					<PreCondition>- The device profile is 5003
- The module profile is 2011
- The submodule profile is 0</PreCondition>
					<Action>- Iterate over all offline defined modules/channels and if the PreCondition matches the following operations are done:
- Get the offline description of object 0xF385(+module specific offset) 'Active Global Device Warning Details' and all entries
 Check:
    (Name)
    BitSize
    DataType
    Rx / Tx mappable
    Default Data
    MinData
    Flags       </Action>
					<PostCondition>Error if
- mandatory object / entry is not defined
- an optional object exists and the entries are invalid
- Object / entry description does not match with the specification</PostCondition>
					<ProposalForSolution>- Define the missing objects
- correct object / entry description</ProposalForSolution>
					<References>
						<Reference Specification="ETG.5003.2011"></Reference>
					</References>
					<Mandatory>true</Mandatory>
				</Description>
				<TestStep Name="InitResult">
					<SetVariable Target="strResult">EmptyString</SetVariable>
				</TestStep>
				<TestStep Name="CheckIfOdAvailable">
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Mailbox</Value1>
							<Value2>false</Value2>
							<SkipCase Id="1">DuT does not support mailbox.</SkipCase>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Mailbox.CoE</Value1>
							<Value2>false</Value2>
							<SkipCase Id="2">DuT does not support CoE.</SkipCase>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep>
					<GetObjectDictionary Target="odDeviceObjectdictionary">
						<DictionaryType>Offline</DictionaryType>
					</GetObjectDictionary>
					<SkipOnFailure Id="3">No offline object dictionary defined.</SkipOnFailure>
				</TestStep>
				<TestStep>
					<GetObjectList Count="u32Tmp" Target="odDeviceObjectdictionaryList" SourceDict="odDeviceObjectdictionary"></GetObjectList>
					<Compare>
						<Equal>
							<Value1>u32Tmp</Value1>
							<Value2>0</Value2>
							<SkipCase Id="4">No offline object dictionary defined.</SkipCase>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="InitAtLeastOneProfileMatch">
					<SetVariable Target="bAtLeastOneModuleMatch">false</SetVariable>
				</TestStep>
				<TestStep Name="GetCurrentProfileList">
					<SizeOf UInt32Var="u32Tmp">arrOfflineProfiles</SizeOf>
					<Compare>
						<Equal>
							<Value1>u32Tmp</Value1>
							<Value2>0</Value2>
							<CallTestFunction Name="GetCurrentProfileList">
								<Parameter>"offline"</Parameter>
								<Parameter>"SafeOP"</Parameter>
								<OutParameter>arrOfflineProfiles</OutParameter>
							</CallTestFunction>
						</Equal>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>u32Tmp</Value1>
							<Value2>0</Value2>
							<WriteLine Id="5" Param0="arrOfflineProfiles" Level="Verbose">Use previously created profile list ({0})</WriteLine>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep>
					<SizeOf UInt32Var="u32Tmp">arrOfflineProfiles</SizeOf>
				</TestStep>
				<TestStep>
					<InitArray TargetArray="arrCurrentProfiles" Length="u32Tmp"></InitArray>
				</TestStep>
				<TestStep>
					<CopyArray>
						<SourceArray>arrOfflineProfiles</SourceArray>
						<DestinationArray>arrCurrentProfiles</DestinationArray>
						<Length>u32Tmp</Length>
					</CopyArray>
				</TestStep>
				<TestStep Name="IsProfileSupported">
					<CallTestFunction Name="DeviceAndModuleProfileDefined">
						<Parameter>arrCurrentProfiles</Parameter>
						<Parameter>5003</Parameter>
						<Parameter>2011</Parameter>
						<OutParameter>bAtLeastOneModuleMatch</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>bAtLeastOneModuleMatch</Value1>
							<Value2>false</Value2>
							<GotoStep>END</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="GetObjectIndexInclOffset">
					<SetVariable Target="u16ObjectIndexInclOffset">#xF385</SetVariable>
					<WriteLine Id="6" Param0="u16ObjectIndexInclOffset" Level="Verbose">ObjectIndex '0x{0:X}' (module independent)</WriteLine>
				</TestStep>
				<TestStep Name="LoadDeviceObjectDictionary">
					<Description Id="7" Level="Verbose">Load 'offline' object dictionary for testing.</Description>
					<GetObjectDictionary Target="odDeviceObjectdictionary">
						<DictionaryType>Offline</DictionaryType>
					</GetObjectDictionary>
					<RaiseErrorOnFailure Id="8">VerifyObject : failed to load offline object dictionary.</RaiseErrorOnFailure>
				</TestStep>
				<TestStep Name="SetObjectRequiredLevel">
					<SetVariable Target="bObjectOrEntryRequiredLevel">1</SetVariable>
					<WriteLine Id="9" Param0="u16ObjectIndexInclOffset" Level="Verbose">0x{0:X4} 'Active Global Device Warning Details' may be available</WriteLine>
				</TestStep>
				<TestStep Name="CheckIfObjectExists">
					<GetObjectDescription SourceDictionary="odDeviceObjectdictionary" Index="u16ObjectIndexInclOffset" SubIndex="-1"></GetObjectDescription>
					<GotoOnSuccess>CallCheckObjectDescription</GotoOnSuccess>
				</TestStep>
				<TestStep Name="HandleNotExistingObject">
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>2</Value2>
							<WriteLine Id="10" Param0="u16ObjectIndexInclOffset" Level="Warning">The object 0x{0:X4} 'Active Global Device Warning Details' does not exists.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>1</Value2>
							<WriteLine Id="11" Param0="u16ObjectIndexInclOffset" Level="Output">The object 0x{0:X4} 'Active Global Device Warning Details' does not exists.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>END</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CallCheckObjectDescription">
					<Description Id="12" Param0="u16ObjectIndexInclOffset" Level="Output">Verify the object description 0x{0:X4} 'Active Global Device Warning Details'.</Description>
					<CallTestFunction Name="CheckObjectDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"offline"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>"Active Global Device Warning Details"</Parameter>
						<Parameter>null</Parameter>
						<Parameter>9</Parameter>
						<Parameter>-1</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<GotoStep>END</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="InitEntryBittOffset">
					<SetVariable Target="i32CurrentBitOffset">0</SetVariable>
				</TestStep>
				<TestStep Name="StartSi0">
					<Description Id="13" Level="Output">Start validate SubIndex0</Description>
					<WriteLine Id="14" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : Subindex '0x{0:X}.0'</WriteLine>
				</TestStep>
				<TestStep Name="CallSi0CheckEntryDescription">
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"offline"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>0</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>null</Parameter>
						<Parameter>5</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>null</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>null</Parameter>
						<Parameter>null</Parameter>
						<Parameter>null</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>8</Parameter>
						<Parameter>i32CurrentBitOffset</Parameter>
						<Parameter>true</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="EndSi0">
					<SetVariable Target="i32CurrentBitOffset">16</SetVariable>
				</TestStep>
				<TestStep Name="StartSi1">
					<Description Id="15" Level="Output">Start validate SubIndex1</Description>
					<WriteLine Id="16" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : Subindex '0x{0:X}.1'</WriteLine>
				</TestStep>
				<TestStep Name="SetSi1RequiredLevel">
					<SetVariable Target="bObjectOrEntryRequiredLevel">1</SetVariable>
					<WriteLine Id="17" Param0="u16ObjectIndexInclOffset" Level="Verbose">0x{0:X4}.1 may be available</WriteLine>
				</TestStep>
				<TestStep Name="CheckIfSi1Exists">
					<GetObjectDescription SourceDictionary="odDeviceObjectdictionary" Index="u16ObjectIndexInclOffset" SubIndex="1">
						<Type>u16DataType</Type>
					</GetObjectDescription>
					<GotoOnFailure>HandleNotExistingSi1</GotoOnFailure>
				</TestStep>
				<TestStep>
					<Compare>
						<NotEqual>
							<Value1>u16DataType</Value1>
							<Value2>0</Value2>
							<GotoStep>CallSi1CheckEntryDescription</GotoStep>
						</NotEqual>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="18" Param0="u16ObjectIndexInclOffset" Level="Verbose">The entry 0x{0:X4}.1 is defined as a padding entry.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>EndSi1</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="HandleNotExistingSi1">
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="19" Param0="u16ObjectIndexInclOffset" Level="Output">The entry 0x{0:X4}.1 does not exists.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>EndSi1</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CallSi1CheckEntryDescription">
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"offline"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>1</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>null</Parameter>
						<Parameter>7</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>null</Parameter>
						<Parameter>T</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>32</Parameter>
						<Parameter>i32CurrentBitOffset</Parameter>
						<Parameter>true</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="EndSi1">
					<SetVariable Target="i32CurrentBitOffset">-1</SetVariable>
				</TestStep>
				<TestStep Name="CheckReservedEntryRange_2_to_255">
					<Description Id="20" Level="Output">Start check reserved entry range 2 to 255</Description>
					<CallTestFunction Name="CheckReservedEntryRange">
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>2</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>odDeviceObjectdictionary</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="END">
					<Compare>
						<NotEqual>
							<Value1>bAtLeastOneModuleMatch</Value1>
							<Value2>true</Value2>
							<SkipCase Id="21">SKIP TEST(no module/channel supports the current profile)</SkipCase>
						</NotEqual>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bDEBUG</Value1>
							<Value2>true</Value2>
							<WriteLine Id="22" Param0="strResult" Level="Verbose">DEBUG | Result : '{0}'.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>strResult</Value1>
							<Value2>EmptyString</Value2>
							<ReturnSuccess Id="23">Test succeed</ReturnSuccess>
						</Equal>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>strResult</Value1>
							<Value2>EmptyString</Value2>
							<RaiseError Id="24"></RaiseError>
						</NotEqual>
					</Compare>
				</TestStep>
			</TestCase>
			<TestCase Name="online | 0xF385 (Active Global Device Warning Details)" CaseId="12">
				<Description>
					<PreCondition>- The device profile is 5003
- The module profile is 2011
- The submodule profile is 0</PreCondition>
					<Action>- Iterate over all online defined modules/channels and if the PreCondition matches the following operations are done:
- Get the online description of object 0xF385(+module specific offset) 'Active Global Device Warning Details' and all entries
 Check:
    (Name)
    BitSize
    DataType
    Rx / Tx mappable
    Default Data
    MinData
    Flags       </Action>
					<PostCondition>Error if
- mandatory object / entry is not defined
- an optional object exists and the entries are invalid
- Object / entry description does not match with the specification</PostCondition>
					<ProposalForSolution>- Define the missing objects
- correct object / entry description</ProposalForSolution>
					<References>
						<Reference Specification="ETG.5003.2011"></Reference>
					</References>
					<Mandatory>true</Mandatory>
				</Description>
				<TestStep Name="InitResult">
					<SetVariable Target="strResult">EmptyString</SetVariable>
				</TestStep>
				<TestStep Name="CheckIfOdAvailable">
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Mailbox</Value1>
							<Value2>false</Value2>
							<SkipCase Id="1">DuT does not support mailbox.</SkipCase>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Mailbox.CoE</Value1>
							<Value2>false</Value2>
							<SkipCase Id="2">DuT does not support CoE.</SkipCase>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Mailbox.CoE.SdoInfo</Value1>
							<Value2>false</Value2>
							<SkipCase Id="3">DuT does not support SDO Info.</SkipCase>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="InitAtLeastOneProfileMatch">
					<SetVariable Target="bAtLeastOneModuleMatch">false</SetVariable>
				</TestStep>
				<TestStep Name="GetCurrentProfileList">
					<SizeOf UInt32Var="u32Tmp">arrOnlineProfiles</SizeOf>
					<Compare>
						<Equal>
							<Value1>u32Tmp</Value1>
							<Value2>0</Value2>
							<CallTestFunction Name="GetCurrentProfileList">
								<Parameter>"online"</Parameter>
								<Parameter>"SafeOP"</Parameter>
								<OutParameter>arrOnlineProfiles</OutParameter>
							</CallTestFunction>
						</Equal>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>u32Tmp</Value1>
							<Value2>0</Value2>
							<WriteLine Id="4" Param0="arrOnlineProfiles" Level="Verbose">Use previously created profile list ({0})</WriteLine>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep>
					<SizeOf UInt32Var="u32Tmp">arrOnlineProfiles</SizeOf>
				</TestStep>
				<TestStep>
					<InitArray TargetArray="arrCurrentProfiles" Length="u32Tmp"></InitArray>
				</TestStep>
				<TestStep>
					<CopyArray>
						<SourceArray>arrOnlineProfiles</SourceArray>
						<DestinationArray>arrCurrentProfiles</DestinationArray>
						<Length>u32Tmp</Length>
					</CopyArray>
				</TestStep>
				<TestStep Name="IsProfileSupported">
					<CallTestFunction Name="DeviceAndModuleProfileDefined">
						<Parameter>arrCurrentProfiles</Parameter>
						<Parameter>5003</Parameter>
						<Parameter>2011</Parameter>
						<OutParameter>bAtLeastOneModuleMatch</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>bAtLeastOneModuleMatch</Value1>
							<Value2>false</Value2>
							<GotoStep>END</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="GetObjectIndexInclOffset">
					<SetVariable Target="u16ObjectIndexInclOffset">#xF385</SetVariable>
					<WriteLine Id="5" Param0="u16ObjectIndexInclOffset" Level="Verbose">ObjectIndex '0x{0:X}' (module independent)</WriteLine>
				</TestStep>
				<TestStep Name="LoadDeviceObjectDictionary">
					<Description Id="6" Level="Verbose">Load 'online' object dictionary for testing.</Description>
					<GetObjectDictionary Target="odDeviceObjectdictionary">
						<DictionaryType>Online</DictionaryType>
					</GetObjectDictionary>
					<RaiseErrorOnFailure Id="7">VerifyObject : failed to load online object dictionary.</RaiseErrorOnFailure>
				</TestStep>
				<TestStep Name="SetObjectRequiredLevel">
					<SetVariable Target="bObjectOrEntryRequiredLevel">1</SetVariable>
					<WriteLine Id="8" Param0="u16ObjectIndexInclOffset" Level="Verbose">0x{0:X4} 'Active Global Device Warning Details' may be available</WriteLine>
				</TestStep>
				<TestStep Name="CheckIfObjectExists">
					<GetObjectDescription SourceDictionary="odDeviceObjectdictionary" Index="u16ObjectIndexInclOffset" SubIndex="-1"></GetObjectDescription>
					<GotoOnSuccess>CallCheckObjectDescription</GotoOnSuccess>
				</TestStep>
				<TestStep Name="HandleNotExistingObject">
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>2</Value2>
							<WriteLine Id="9" Param0="u16ObjectIndexInclOffset" Level="Warning">The object 0x{0:X4} 'Active Global Device Warning Details' does not exists.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>1</Value2>
							<WriteLine Id="10" Param0="u16ObjectIndexInclOffset" Level="Output">The object 0x{0:X4} 'Active Global Device Warning Details' does not exists.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>END</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CallCheckObjectDescription">
					<Description Id="11" Param0="u16ObjectIndexInclOffset" Level="Output">Verify the object description 0x{0:X4} 'Active Global Device Warning Details'.</Description>
					<CallTestFunction Name="CheckObjectDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"online"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>"Active Global Device Warning Details"</Parameter>
						<Parameter>null</Parameter>
						<Parameter>9</Parameter>
						<Parameter>-1</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<GotoStep>END</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="InitEntryBittOffset">
					<SetVariable Target="i32CurrentBitOffset">0</SetVariable>
				</TestStep>
				<TestStep Name="StartSi0">
					<Description Id="12" Level="Output">Start validate SubIndex0</Description>
					<WriteLine Id="13" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : Subindex '0x{0:X}.0'</WriteLine>
				</TestStep>
				<TestStep Name="CallSi0CheckEntryDescription">
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"online"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>0</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>null</Parameter>
						<Parameter>5</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>null</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>null</Parameter>
						<Parameter>null</Parameter>
						<Parameter>null</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>8</Parameter>
						<Parameter>i32CurrentBitOffset</Parameter>
						<Parameter>true</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="EndSi0">
					<SetVariable Target="i32CurrentBitOffset">16</SetVariable>
				</TestStep>
				<TestStep Name="StartSi1">
					<Description Id="14" Level="Output">Start validate SubIndex1</Description>
					<WriteLine Id="15" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : Subindex '0x{0:X}.1'</WriteLine>
				</TestStep>
				<TestStep Name="SetSi1RequiredLevel">
					<SetVariable Target="bObjectOrEntryRequiredLevel">1</SetVariable>
					<WriteLine Id="16" Param0="u16ObjectIndexInclOffset" Level="Verbose">0x{0:X4}.1 may be available</WriteLine>
				</TestStep>
				<TestStep Name="CheckIfSi1Exists">
					<GetObjectDescription SourceDictionary="odDeviceObjectdictionary" Index="u16ObjectIndexInclOffset" SubIndex="1">
						<Type>u16DataType</Type>
					</GetObjectDescription>
					<GotoOnFailure>HandleNotExistingSi1</GotoOnFailure>
				</TestStep>
				<TestStep>
					<Compare>
						<NotEqual>
							<Value1>u16DataType</Value1>
							<Value2>0</Value2>
							<GotoStep>CallSi1CheckEntryDescription</GotoStep>
						</NotEqual>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="17" Param0="u16ObjectIndexInclOffset" Level="Verbose">The entry 0x{0:X4}.1 is defined as a padding entry.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>EndSi1</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="HandleNotExistingSi1">
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="18" Param0="u16ObjectIndexInclOffset" Level="Output">The entry 0x{0:X4}.1 does not exists.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>EndSi1</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CallSi1CheckEntryDescription">
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"online"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>1</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>null</Parameter>
						<Parameter>7</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>null</Parameter>
						<Parameter>T</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>32</Parameter>
						<Parameter>i32CurrentBitOffset</Parameter>
						<Parameter>true</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="EndSi1">
					<SetVariable Target="i32CurrentBitOffset">-1</SetVariable>
				</TestStep>
				<TestStep Name="CheckReservedEntryRange_2_to_255">
					<Description Id="19" Level="Output">Start check reserved entry range 2 to 255</Description>
					<CallTestFunction Name="CheckReservedEntryRange">
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>2</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>odDeviceObjectdictionary</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="END">
					<Compare>
						<NotEqual>
							<Value1>bAtLeastOneModuleMatch</Value1>
							<Value2>true</Value2>
							<SkipCase Id="20">SKIP TEST(no module/channel supports the current profile)</SkipCase>
						</NotEqual>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bDEBUG</Value1>
							<Value2>true</Value2>
							<WriteLine Id="21" Param0="strResult" Level="Verbose">DEBUG | Result : '{0}'.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>strResult</Value1>
							<Value2>EmptyString</Value2>
							<ReturnSuccess Id="22">Test succeed</ReturnSuccess>
						</Equal>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>strResult</Value1>
							<Value2>EmptyString</Value2>
							<RaiseError Id="23"></RaiseError>
						</NotEqual>
					</Compare>
				</TestStep>
			</TestCase>
			<TestCase Name="offline | 0xF386 (Active Global Manufacturer Warning Details)" CaseId="13">
				<Description>
					<PreCondition>- The device profile is 5003
- The module profile is 2011
- The submodule profile is 0</PreCondition>
					<Action>- Iterate over all offline defined modules/channels and if the PreCondition matches the following operations are done:
- Get the offline description of object 0xF386(+module specific offset) 'Active Global Manufacturer Warning Details' and all entries
 Check:
    (Name)
    BitSize
    DataType
    Rx / Tx mappable
    Default Data
    MinData
    Flags       </Action>
					<PostCondition>Error if
- mandatory object / entry is not defined
- an optional object exists and the entries are invalid
- Object / entry description does not match with the specification</PostCondition>
					<ProposalForSolution>- Define the missing objects
- correct object / entry description</ProposalForSolution>
					<References>
						<Reference Specification="ETG.5003.2011"></Reference>
					</References>
					<Mandatory>true</Mandatory>
				</Description>
				<TestStep Name="InitResult">
					<SetVariable Target="strResult">EmptyString</SetVariable>
				</TestStep>
				<TestStep Name="CheckIfOdAvailable">
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Mailbox</Value1>
							<Value2>false</Value2>
							<SkipCase Id="1">DuT does not support mailbox.</SkipCase>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Mailbox.CoE</Value1>
							<Value2>false</Value2>
							<SkipCase Id="2">DuT does not support CoE.</SkipCase>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep>
					<GetObjectDictionary Target="odDeviceObjectdictionary">
						<DictionaryType>Offline</DictionaryType>
					</GetObjectDictionary>
					<SkipOnFailure Id="3">No offline object dictionary defined.</SkipOnFailure>
				</TestStep>
				<TestStep>
					<GetObjectList Count="u32Tmp" Target="odDeviceObjectdictionaryList" SourceDict="odDeviceObjectdictionary"></GetObjectList>
					<Compare>
						<Equal>
							<Value1>u32Tmp</Value1>
							<Value2>0</Value2>
							<SkipCase Id="4">No offline object dictionary defined.</SkipCase>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="InitAtLeastOneProfileMatch">
					<SetVariable Target="bAtLeastOneModuleMatch">false</SetVariable>
				</TestStep>
				<TestStep Name="GetCurrentProfileList">
					<SizeOf UInt32Var="u32Tmp">arrOfflineProfiles</SizeOf>
					<Compare>
						<Equal>
							<Value1>u32Tmp</Value1>
							<Value2>0</Value2>
							<CallTestFunction Name="GetCurrentProfileList">
								<Parameter>"offline"</Parameter>
								<Parameter>"SafeOP"</Parameter>
								<OutParameter>arrOfflineProfiles</OutParameter>
							</CallTestFunction>
						</Equal>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>u32Tmp</Value1>
							<Value2>0</Value2>
							<WriteLine Id="5" Param0="arrOfflineProfiles" Level="Verbose">Use previously created profile list ({0})</WriteLine>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep>
					<SizeOf UInt32Var="u32Tmp">arrOfflineProfiles</SizeOf>
				</TestStep>
				<TestStep>
					<InitArray TargetArray="arrCurrentProfiles" Length="u32Tmp"></InitArray>
				</TestStep>
				<TestStep>
					<CopyArray>
						<SourceArray>arrOfflineProfiles</SourceArray>
						<DestinationArray>arrCurrentProfiles</DestinationArray>
						<Length>u32Tmp</Length>
					</CopyArray>
				</TestStep>
				<TestStep Name="IsProfileSupported">
					<CallTestFunction Name="DeviceAndModuleProfileDefined">
						<Parameter>arrCurrentProfiles</Parameter>
						<Parameter>5003</Parameter>
						<Parameter>2011</Parameter>
						<OutParameter>bAtLeastOneModuleMatch</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>bAtLeastOneModuleMatch</Value1>
							<Value2>false</Value2>
							<GotoStep>END</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="GetObjectIndexInclOffset">
					<SetVariable Target="u16ObjectIndexInclOffset">#xF386</SetVariable>
					<WriteLine Id="6" Param0="u16ObjectIndexInclOffset" Level="Verbose">ObjectIndex '0x{0:X}' (module independent)</WriteLine>
				</TestStep>
				<TestStep Name="LoadDeviceObjectDictionary">
					<Description Id="7" Level="Verbose">Load 'offline' object dictionary for testing.</Description>
					<GetObjectDictionary Target="odDeviceObjectdictionary">
						<DictionaryType>Offline</DictionaryType>
					</GetObjectDictionary>
					<RaiseErrorOnFailure Id="8">VerifyObject : failed to load offline object dictionary.</RaiseErrorOnFailure>
				</TestStep>
				<TestStep Name="SetObjectRequiredLevel">
					<SetVariable Target="bObjectOrEntryRequiredLevel">1</SetVariable>
					<WriteLine Id="9" Param0="u16ObjectIndexInclOffset" Level="Verbose">0x{0:X4} 'Active Global Manufacturer Warning Details' may be available</WriteLine>
				</TestStep>
				<TestStep Name="CheckIfObjectExists">
					<GetObjectDescription SourceDictionary="odDeviceObjectdictionary" Index="u16ObjectIndexInclOffset" SubIndex="-1"></GetObjectDescription>
					<GotoOnSuccess>CallCheckObjectDescription</GotoOnSuccess>
				</TestStep>
				<TestStep Name="HandleNotExistingObject">
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>2</Value2>
							<WriteLine Id="10" Param0="u16ObjectIndexInclOffset" Level="Warning">The object 0x{0:X4} 'Active Global Manufacturer Warning Details' does not exists.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>1</Value2>
							<WriteLine Id="11" Param0="u16ObjectIndexInclOffset" Level="Output">The object 0x{0:X4} 'Active Global Manufacturer Warning Details' does not exists.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>END</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CallCheckObjectDescription">
					<Description Id="12" Param0="u16ObjectIndexInclOffset" Level="Output">Verify the object description 0x{0:X4} 'Active Global Manufacturer Warning Details'.</Description>
					<CallTestFunction Name="CheckObjectDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"offline"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>"Active Global Manufacturer Warning Details"</Parameter>
						<Parameter>null</Parameter>
						<Parameter>9</Parameter>
						<Parameter>-1</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<GotoStep>END</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="InitEntryBittOffset">
					<SetVariable Target="i32CurrentBitOffset">0</SetVariable>
				</TestStep>
				<TestStep Name="StartSi0">
					<Description Id="13" Level="Output">Start validate SubIndex0</Description>
					<WriteLine Id="14" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : Subindex '0x{0:X}.0'</WriteLine>
				</TestStep>
				<TestStep Name="CallSi0CheckEntryDescription">
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"offline"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>0</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>null</Parameter>
						<Parameter>5</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>null</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>null</Parameter>
						<Parameter>null</Parameter>
						<Parameter>null</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>8</Parameter>
						<Parameter>i32CurrentBitOffset</Parameter>
						<Parameter>true</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="EndSi0">
					<SetVariable Target="i32CurrentBitOffset">16</SetVariable>
				</TestStep>
				<TestStep Name="StartSi1">
					<Description Id="15" Level="Output">Start validate SubIndex1</Description>
					<WriteLine Id="16" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : Subindex '0x{0:X}.1'</WriteLine>
				</TestStep>
				<TestStep Name="SetSi1RequiredLevel">
					<SetVariable Target="bObjectOrEntryRequiredLevel">1</SetVariable>
					<WriteLine Id="17" Param0="u16ObjectIndexInclOffset" Level="Verbose">0x{0:X4}.1 may be available</WriteLine>
				</TestStep>
				<TestStep Name="CheckIfSi1Exists">
					<GetObjectDescription SourceDictionary="odDeviceObjectdictionary" Index="u16ObjectIndexInclOffset" SubIndex="1">
						<Type>u16DataType</Type>
					</GetObjectDescription>
					<GotoOnFailure>HandleNotExistingSi1</GotoOnFailure>
				</TestStep>
				<TestStep>
					<Compare>
						<NotEqual>
							<Value1>u16DataType</Value1>
							<Value2>0</Value2>
							<GotoStep>CallSi1CheckEntryDescription</GotoStep>
						</NotEqual>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="18" Param0="u16ObjectIndexInclOffset" Level="Verbose">The entry 0x{0:X4}.1 is defined as a padding entry.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>EndSi1</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="HandleNotExistingSi1">
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="19" Param0="u16ObjectIndexInclOffset" Level="Output">The entry 0x{0:X4}.1 does not exists.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>EndSi1</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CallSi1CheckEntryDescription">
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"offline"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>1</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>null</Parameter>
						<Parameter>7</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>null</Parameter>
						<Parameter>T</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>32</Parameter>
						<Parameter>i32CurrentBitOffset</Parameter>
						<Parameter>true</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="EndSi1">
					<SetVariable Target="i32CurrentBitOffset">-1</SetVariable>
				</TestStep>
				<TestStep Name="CheckReservedEntryRange_2_to_255">
					<Description Id="20" Level="Output">Start check reserved entry range 2 to 255</Description>
					<CallTestFunction Name="CheckReservedEntryRange">
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>2</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>odDeviceObjectdictionary</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="END">
					<Compare>
						<NotEqual>
							<Value1>bAtLeastOneModuleMatch</Value1>
							<Value2>true</Value2>
							<SkipCase Id="21">SKIP TEST(no module/channel supports the current profile)</SkipCase>
						</NotEqual>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bDEBUG</Value1>
							<Value2>true</Value2>
							<WriteLine Id="22" Param0="strResult" Level="Verbose">DEBUG | Result : '{0}'.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>strResult</Value1>
							<Value2>EmptyString</Value2>
							<ReturnSuccess Id="23">Test succeed</ReturnSuccess>
						</Equal>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>strResult</Value1>
							<Value2>EmptyString</Value2>
							<RaiseError Id="24"></RaiseError>
						</NotEqual>
					</Compare>
				</TestStep>
			</TestCase>
			<TestCase Name="online | 0xF386 (Active Global Manufacturer Warning Details)" CaseId="14">
				<Description>
					<PreCondition>- The device profile is 5003
- The module profile is 2011
- The submodule profile is 0</PreCondition>
					<Action>- Iterate over all online defined modules/channels and if the PreCondition matches the following operations are done:
- Get the online description of object 0xF386(+module specific offset) 'Active Global Manufacturer Warning Details' and all entries
 Check:
    (Name)
    BitSize
    DataType
    Rx / Tx mappable
    Default Data
    MinData
    Flags       </Action>
					<PostCondition>Error if
- mandatory object / entry is not defined
- an optional object exists and the entries are invalid
- Object / entry description does not match with the specification</PostCondition>
					<ProposalForSolution>- Define the missing objects
- correct object / entry description</ProposalForSolution>
					<References>
						<Reference Specification="ETG.5003.2011"></Reference>
					</References>
					<Mandatory>true</Mandatory>
				</Description>
				<TestStep Name="InitResult">
					<SetVariable Target="strResult">EmptyString</SetVariable>
				</TestStep>
				<TestStep Name="CheckIfOdAvailable">
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Mailbox</Value1>
							<Value2>false</Value2>
							<SkipCase Id="1">DuT does not support mailbox.</SkipCase>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Mailbox.CoE</Value1>
							<Value2>false</Value2>
							<SkipCase Id="2">DuT does not support CoE.</SkipCase>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Mailbox.CoE.SdoInfo</Value1>
							<Value2>false</Value2>
							<SkipCase Id="3">DuT does not support SDO Info.</SkipCase>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="InitAtLeastOneProfileMatch">
					<SetVariable Target="bAtLeastOneModuleMatch">false</SetVariable>
				</TestStep>
				<TestStep Name="GetCurrentProfileList">
					<SizeOf UInt32Var="u32Tmp">arrOnlineProfiles</SizeOf>
					<Compare>
						<Equal>
							<Value1>u32Tmp</Value1>
							<Value2>0</Value2>
							<CallTestFunction Name="GetCurrentProfileList">
								<Parameter>"online"</Parameter>
								<Parameter>"SafeOP"</Parameter>
								<OutParameter>arrOnlineProfiles</OutParameter>
							</CallTestFunction>
						</Equal>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>u32Tmp</Value1>
							<Value2>0</Value2>
							<WriteLine Id="4" Param0="arrOnlineProfiles" Level="Verbose">Use previously created profile list ({0})</WriteLine>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep>
					<SizeOf UInt32Var="u32Tmp">arrOnlineProfiles</SizeOf>
				</TestStep>
				<TestStep>
					<InitArray TargetArray="arrCurrentProfiles" Length="u32Tmp"></InitArray>
				</TestStep>
				<TestStep>
					<CopyArray>
						<SourceArray>arrOnlineProfiles</SourceArray>
						<DestinationArray>arrCurrentProfiles</DestinationArray>
						<Length>u32Tmp</Length>
					</CopyArray>
				</TestStep>
				<TestStep Name="IsProfileSupported">
					<CallTestFunction Name="DeviceAndModuleProfileDefined">
						<Parameter>arrCurrentProfiles</Parameter>
						<Parameter>5003</Parameter>
						<Parameter>2011</Parameter>
						<OutParameter>bAtLeastOneModuleMatch</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>bAtLeastOneModuleMatch</Value1>
							<Value2>false</Value2>
							<GotoStep>END</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="GetObjectIndexInclOffset">
					<SetVariable Target="u16ObjectIndexInclOffset">#xF386</SetVariable>
					<WriteLine Id="5" Param0="u16ObjectIndexInclOffset" Level="Verbose">ObjectIndex '0x{0:X}' (module independent)</WriteLine>
				</TestStep>
				<TestStep Name="LoadDeviceObjectDictionary">
					<Description Id="6" Level="Verbose">Load 'online' object dictionary for testing.</Description>
					<GetObjectDictionary Target="odDeviceObjectdictionary">
						<DictionaryType>Online</DictionaryType>
					</GetObjectDictionary>
					<RaiseErrorOnFailure Id="7">VerifyObject : failed to load online object dictionary.</RaiseErrorOnFailure>
				</TestStep>
				<TestStep Name="SetObjectRequiredLevel">
					<SetVariable Target="bObjectOrEntryRequiredLevel">1</SetVariable>
					<WriteLine Id="8" Param0="u16ObjectIndexInclOffset" Level="Verbose">0x{0:X4} 'Active Global Manufacturer Warning Details' may be available</WriteLine>
				</TestStep>
				<TestStep Name="CheckIfObjectExists">
					<GetObjectDescription SourceDictionary="odDeviceObjectdictionary" Index="u16ObjectIndexInclOffset" SubIndex="-1"></GetObjectDescription>
					<GotoOnSuccess>CallCheckObjectDescription</GotoOnSuccess>
				</TestStep>
				<TestStep Name="HandleNotExistingObject">
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>2</Value2>
							<WriteLine Id="9" Param0="u16ObjectIndexInclOffset" Level="Warning">The object 0x{0:X4} 'Active Global Manufacturer Warning Details' does not exists.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>1</Value2>
							<WriteLine Id="10" Param0="u16ObjectIndexInclOffset" Level="Output">The object 0x{0:X4} 'Active Global Manufacturer Warning Details' does not exists.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>END</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CallCheckObjectDescription">
					<Description Id="11" Param0="u16ObjectIndexInclOffset" Level="Output">Verify the object description 0x{0:X4} 'Active Global Manufacturer Warning Details'.</Description>
					<CallTestFunction Name="CheckObjectDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"online"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>"Active Global Manufacturer Warning Details"</Parameter>
						<Parameter>null</Parameter>
						<Parameter>9</Parameter>
						<Parameter>-1</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<GotoStep>END</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="InitEntryBittOffset">
					<SetVariable Target="i32CurrentBitOffset">0</SetVariable>
				</TestStep>
				<TestStep Name="StartSi0">
					<Description Id="12" Level="Output">Start validate SubIndex0</Description>
					<WriteLine Id="13" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : Subindex '0x{0:X}.0'</WriteLine>
				</TestStep>
				<TestStep Name="CallSi0CheckEntryDescription">
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"online"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>0</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>null</Parameter>
						<Parameter>5</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>null</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>null</Parameter>
						<Parameter>null</Parameter>
						<Parameter>null</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>8</Parameter>
						<Parameter>i32CurrentBitOffset</Parameter>
						<Parameter>true</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="EndSi0">
					<SetVariable Target="i32CurrentBitOffset">16</SetVariable>
				</TestStep>
				<TestStep Name="StartSi1">
					<Description Id="14" Level="Output">Start validate SubIndex1</Description>
					<WriteLine Id="15" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : Subindex '0x{0:X}.1'</WriteLine>
				</TestStep>
				<TestStep Name="SetSi1RequiredLevel">
					<SetVariable Target="bObjectOrEntryRequiredLevel">1</SetVariable>
					<WriteLine Id="16" Param0="u16ObjectIndexInclOffset" Level="Verbose">0x{0:X4}.1 may be available</WriteLine>
				</TestStep>
				<TestStep Name="CheckIfSi1Exists">
					<GetObjectDescription SourceDictionary="odDeviceObjectdictionary" Index="u16ObjectIndexInclOffset" SubIndex="1">
						<Type>u16DataType</Type>
					</GetObjectDescription>
					<GotoOnFailure>HandleNotExistingSi1</GotoOnFailure>
				</TestStep>
				<TestStep>
					<Compare>
						<NotEqual>
							<Value1>u16DataType</Value1>
							<Value2>0</Value2>
							<GotoStep>CallSi1CheckEntryDescription</GotoStep>
						</NotEqual>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="17" Param0="u16ObjectIndexInclOffset" Level="Verbose">The entry 0x{0:X4}.1 is defined as a padding entry.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>EndSi1</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="HandleNotExistingSi1">
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="18" Param0="u16ObjectIndexInclOffset" Level="Output">The entry 0x{0:X4}.1 does not exists.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>EndSi1</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CallSi1CheckEntryDescription">
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"online"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>1</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>null</Parameter>
						<Parameter>7</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>null</Parameter>
						<Parameter>T</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>32</Parameter>
						<Parameter>i32CurrentBitOffset</Parameter>
						<Parameter>true</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="EndSi1">
					<SetVariable Target="i32CurrentBitOffset">-1</SetVariable>
				</TestStep>
				<TestStep Name="CheckReservedEntryRange_2_to_255">
					<Description Id="19" Level="Output">Start check reserved entry range 2 to 255</Description>
					<CallTestFunction Name="CheckReservedEntryRange">
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>2</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>odDeviceObjectdictionary</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="END">
					<Compare>
						<NotEqual>
							<Value1>bAtLeastOneModuleMatch</Value1>
							<Value2>true</Value2>
							<SkipCase Id="20">SKIP TEST(no module/channel supports the current profile)</SkipCase>
						</NotEqual>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bDEBUG</Value1>
							<Value2>true</Value2>
							<WriteLine Id="21" Param0="strResult" Level="Verbose">DEBUG | Result : '{0}'.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>strResult</Value1>
							<Value2>EmptyString</Value2>
							<ReturnSuccess Id="22">Test succeed</ReturnSuccess>
						</Equal>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>strResult</Value1>
							<Value2>EmptyString</Value2>
							<RaiseError Id="23"></RaiseError>
						</NotEqual>
					</Compare>
				</TestStep>
			</TestCase>
			<TestCase Name="offline | 0xF387 (Active Global Device Error Details)" CaseId="15">
				<Description>
					<PreCondition>- The device profile is 5003
- The module profile is 2011
- The submodule profile is 0</PreCondition>
					<Action>- Iterate over all offline defined modules/channels and if the PreCondition matches the following operations are done:
- Get the offline description of object 0xF387(+module specific offset) 'Active Global Device Error Details' and all entries
 Check:
    (Name)
    BitSize
    DataType
    Rx / Tx mappable
    Default Data
    MinData
    Flags       </Action>
					<PostCondition>Error if
- mandatory object / entry is not defined
- an optional object exists and the entries are invalid
- Object / entry description does not match with the specification</PostCondition>
					<ProposalForSolution>- Define the missing objects
- correct object / entry description</ProposalForSolution>
					<References>
						<Reference Specification="ETG.5003.2011"></Reference>
					</References>
					<Mandatory>true</Mandatory>
				</Description>
				<TestStep Name="InitResult">
					<SetVariable Target="strResult">EmptyString</SetVariable>
				</TestStep>
				<TestStep Name="CheckIfOdAvailable">
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Mailbox</Value1>
							<Value2>false</Value2>
							<SkipCase Id="1">DuT does not support mailbox.</SkipCase>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Mailbox.CoE</Value1>
							<Value2>false</Value2>
							<SkipCase Id="2">DuT does not support CoE.</SkipCase>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep>
					<GetObjectDictionary Target="odDeviceObjectdictionary">
						<DictionaryType>Offline</DictionaryType>
					</GetObjectDictionary>
					<SkipOnFailure Id="3">No offline object dictionary defined.</SkipOnFailure>
				</TestStep>
				<TestStep>
					<GetObjectList Count="u32Tmp" Target="odDeviceObjectdictionaryList" SourceDict="odDeviceObjectdictionary"></GetObjectList>
					<Compare>
						<Equal>
							<Value1>u32Tmp</Value1>
							<Value2>0</Value2>
							<SkipCase Id="4">No offline object dictionary defined.</SkipCase>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="InitAtLeastOneProfileMatch">
					<SetVariable Target="bAtLeastOneModuleMatch">false</SetVariable>
				</TestStep>
				<TestStep Name="GetCurrentProfileList">
					<SizeOf UInt32Var="u32Tmp">arrOfflineProfiles</SizeOf>
					<Compare>
						<Equal>
							<Value1>u32Tmp</Value1>
							<Value2>0</Value2>
							<CallTestFunction Name="GetCurrentProfileList">
								<Parameter>"offline"</Parameter>
								<Parameter>"SafeOP"</Parameter>
								<OutParameter>arrOfflineProfiles</OutParameter>
							</CallTestFunction>
						</Equal>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>u32Tmp</Value1>
							<Value2>0</Value2>
							<WriteLine Id="5" Param0="arrOfflineProfiles" Level="Verbose">Use previously created profile list ({0})</WriteLine>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep>
					<SizeOf UInt32Var="u32Tmp">arrOfflineProfiles</SizeOf>
				</TestStep>
				<TestStep>
					<InitArray TargetArray="arrCurrentProfiles" Length="u32Tmp"></InitArray>
				</TestStep>
				<TestStep>
					<CopyArray>
						<SourceArray>arrOfflineProfiles</SourceArray>
						<DestinationArray>arrCurrentProfiles</DestinationArray>
						<Length>u32Tmp</Length>
					</CopyArray>
				</TestStep>
				<TestStep Name="IsProfileSupported">
					<CallTestFunction Name="DeviceAndModuleProfileDefined">
						<Parameter>arrCurrentProfiles</Parameter>
						<Parameter>5003</Parameter>
						<Parameter>2011</Parameter>
						<OutParameter>bAtLeastOneModuleMatch</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>bAtLeastOneModuleMatch</Value1>
							<Value2>false</Value2>
							<GotoStep>END</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="GetObjectIndexInclOffset">
					<SetVariable Target="u16ObjectIndexInclOffset">#xF387</SetVariable>
					<WriteLine Id="6" Param0="u16ObjectIndexInclOffset" Level="Verbose">ObjectIndex '0x{0:X}' (module independent)</WriteLine>
				</TestStep>
				<TestStep Name="LoadDeviceObjectDictionary">
					<Description Id="7" Level="Verbose">Load 'offline' object dictionary for testing.</Description>
					<GetObjectDictionary Target="odDeviceObjectdictionary">
						<DictionaryType>Offline</DictionaryType>
					</GetObjectDictionary>
					<RaiseErrorOnFailure Id="8">VerifyObject : failed to load offline object dictionary.</RaiseErrorOnFailure>
				</TestStep>
				<TestStep Name="SetObjectRequiredLevel">
					<SetVariable Target="bObjectOrEntryRequiredLevel">1</SetVariable>
					<WriteLine Id="9" Param0="u16ObjectIndexInclOffset" Level="Verbose">0x{0:X4} 'Active Global Device Error Details' may be available</WriteLine>
				</TestStep>
				<TestStep Name="CheckIfObjectExists">
					<GetObjectDescription SourceDictionary="odDeviceObjectdictionary" Index="u16ObjectIndexInclOffset" SubIndex="-1"></GetObjectDescription>
					<GotoOnSuccess>CallCheckObjectDescription</GotoOnSuccess>
				</TestStep>
				<TestStep Name="HandleNotExistingObject">
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>2</Value2>
							<WriteLine Id="10" Param0="u16ObjectIndexInclOffset" Level="Warning">The object 0x{0:X4} 'Active Global Device Error Details' does not exists.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>1</Value2>
							<WriteLine Id="11" Param0="u16ObjectIndexInclOffset" Level="Output">The object 0x{0:X4} 'Active Global Device Error Details' does not exists.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>END</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CallCheckObjectDescription">
					<Description Id="12" Param0="u16ObjectIndexInclOffset" Level="Output">Verify the object description 0x{0:X4} 'Active Global Device Error Details'.</Description>
					<CallTestFunction Name="CheckObjectDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"offline"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>"Active Global Device Error Details"</Parameter>
						<Parameter>null</Parameter>
						<Parameter>9</Parameter>
						<Parameter>-1</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<GotoStep>END</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="InitEntryBittOffset">
					<SetVariable Target="i32CurrentBitOffset">0</SetVariable>
				</TestStep>
				<TestStep Name="StartSi0">
					<Description Id="13" Level="Output">Start validate SubIndex0</Description>
					<WriteLine Id="14" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : Subindex '0x{0:X}.0'</WriteLine>
				</TestStep>
				<TestStep Name="CallSi0CheckEntryDescription">
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"offline"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>0</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>null</Parameter>
						<Parameter>5</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>null</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>null</Parameter>
						<Parameter>null</Parameter>
						<Parameter>null</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>8</Parameter>
						<Parameter>i32CurrentBitOffset</Parameter>
						<Parameter>true</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="EndSi0">
					<SetVariable Target="i32CurrentBitOffset">16</SetVariable>
				</TestStep>
				<TestStep Name="StartSi1">
					<Description Id="15" Level="Output">Start validate SubIndex1</Description>
					<WriteLine Id="16" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : Subindex '0x{0:X}.1'</WriteLine>
				</TestStep>
				<TestStep Name="SetSi1RequiredLevel">
					<SetVariable Target="bObjectOrEntryRequiredLevel">1</SetVariable>
					<WriteLine Id="17" Param0="u16ObjectIndexInclOffset" Level="Verbose">0x{0:X4}.1 may be available</WriteLine>
				</TestStep>
				<TestStep Name="CheckIfSi1Exists">
					<GetObjectDescription SourceDictionary="odDeviceObjectdictionary" Index="u16ObjectIndexInclOffset" SubIndex="1">
						<Type>u16DataType</Type>
					</GetObjectDescription>
					<GotoOnFailure>HandleNotExistingSi1</GotoOnFailure>
				</TestStep>
				<TestStep>
					<Compare>
						<NotEqual>
							<Value1>u16DataType</Value1>
							<Value2>0</Value2>
							<GotoStep>CallSi1CheckEntryDescription</GotoStep>
						</NotEqual>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="18" Param0="u16ObjectIndexInclOffset" Level="Verbose">The entry 0x{0:X4}.1 is defined as a padding entry.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>EndSi1</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="HandleNotExistingSi1">
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="19" Param0="u16ObjectIndexInclOffset" Level="Output">The entry 0x{0:X4}.1 does not exists.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>EndSi1</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CallSi1CheckEntryDescription">
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"offline"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>1</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>null</Parameter>
						<Parameter>7</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>null</Parameter>
						<Parameter>T</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>32</Parameter>
						<Parameter>i32CurrentBitOffset</Parameter>
						<Parameter>true</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="EndSi1">
					<SetVariable Target="i32CurrentBitOffset">-1</SetVariable>
				</TestStep>
				<TestStep Name="CheckReservedEntryRange_2_to_255">
					<Description Id="20" Level="Output">Start check reserved entry range 2 to 255</Description>
					<CallTestFunction Name="CheckReservedEntryRange">
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>2</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>odDeviceObjectdictionary</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="END">
					<Compare>
						<NotEqual>
							<Value1>bAtLeastOneModuleMatch</Value1>
							<Value2>true</Value2>
							<SkipCase Id="21">SKIP TEST(no module/channel supports the current profile)</SkipCase>
						</NotEqual>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bDEBUG</Value1>
							<Value2>true</Value2>
							<WriteLine Id="22" Param0="strResult" Level="Verbose">DEBUG | Result : '{0}'.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>strResult</Value1>
							<Value2>EmptyString</Value2>
							<ReturnSuccess Id="23">Test succeed</ReturnSuccess>
						</Equal>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>strResult</Value1>
							<Value2>EmptyString</Value2>
							<RaiseError Id="24"></RaiseError>
						</NotEqual>
					</Compare>
				</TestStep>
			</TestCase>
			<TestCase Name="online | 0xF387 (Active Global Device Error Details)" CaseId="16">
				<Description>
					<PreCondition>- The device profile is 5003
- The module profile is 2011
- The submodule profile is 0</PreCondition>
					<Action>- Iterate over all online defined modules/channels and if the PreCondition matches the following operations are done:
- Get the online description of object 0xF387(+module specific offset) 'Active Global Device Error Details' and all entries
 Check:
    (Name)
    BitSize
    DataType
    Rx / Tx mappable
    Default Data
    MinData
    Flags       </Action>
					<PostCondition>Error if
- mandatory object / entry is not defined
- an optional object exists and the entries are invalid
- Object / entry description does not match with the specification</PostCondition>
					<ProposalForSolution>- Define the missing objects
- correct object / entry description</ProposalForSolution>
					<References>
						<Reference Specification="ETG.5003.2011"></Reference>
					</References>
					<Mandatory>true</Mandatory>
				</Description>
				<TestStep Name="InitResult">
					<SetVariable Target="strResult">EmptyString</SetVariable>
				</TestStep>
				<TestStep Name="CheckIfOdAvailable">
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Mailbox</Value1>
							<Value2>false</Value2>
							<SkipCase Id="1">DuT does not support mailbox.</SkipCase>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Mailbox.CoE</Value1>
							<Value2>false</Value2>
							<SkipCase Id="2">DuT does not support CoE.</SkipCase>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Mailbox.CoE.SdoInfo</Value1>
							<Value2>false</Value2>
							<SkipCase Id="3">DuT does not support SDO Info.</SkipCase>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="InitAtLeastOneProfileMatch">
					<SetVariable Target="bAtLeastOneModuleMatch">false</SetVariable>
				</TestStep>
				<TestStep Name="GetCurrentProfileList">
					<SizeOf UInt32Var="u32Tmp">arrOnlineProfiles</SizeOf>
					<Compare>
						<Equal>
							<Value1>u32Tmp</Value1>
							<Value2>0</Value2>
							<CallTestFunction Name="GetCurrentProfileList">
								<Parameter>"online"</Parameter>
								<Parameter>"SafeOP"</Parameter>
								<OutParameter>arrOnlineProfiles</OutParameter>
							</CallTestFunction>
						</Equal>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>u32Tmp</Value1>
							<Value2>0</Value2>
							<WriteLine Id="4" Param0="arrOnlineProfiles" Level="Verbose">Use previously created profile list ({0})</WriteLine>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep>
					<SizeOf UInt32Var="u32Tmp">arrOnlineProfiles</SizeOf>
				</TestStep>
				<TestStep>
					<InitArray TargetArray="arrCurrentProfiles" Length="u32Tmp"></InitArray>
				</TestStep>
				<TestStep>
					<CopyArray>
						<SourceArray>arrOnlineProfiles</SourceArray>
						<DestinationArray>arrCurrentProfiles</DestinationArray>
						<Length>u32Tmp</Length>
					</CopyArray>
				</TestStep>
				<TestStep Name="IsProfileSupported">
					<CallTestFunction Name="DeviceAndModuleProfileDefined">
						<Parameter>arrCurrentProfiles</Parameter>
						<Parameter>5003</Parameter>
						<Parameter>2011</Parameter>
						<OutParameter>bAtLeastOneModuleMatch</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>bAtLeastOneModuleMatch</Value1>
							<Value2>false</Value2>
							<GotoStep>END</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="GetObjectIndexInclOffset">
					<SetVariable Target="u16ObjectIndexInclOffset">#xF387</SetVariable>
					<WriteLine Id="5" Param0="u16ObjectIndexInclOffset" Level="Verbose">ObjectIndex '0x{0:X}' (module independent)</WriteLine>
				</TestStep>
				<TestStep Name="LoadDeviceObjectDictionary">
					<Description Id="6" Level="Verbose">Load 'online' object dictionary for testing.</Description>
					<GetObjectDictionary Target="odDeviceObjectdictionary">
						<DictionaryType>Online</DictionaryType>
					</GetObjectDictionary>
					<RaiseErrorOnFailure Id="7">VerifyObject : failed to load online object dictionary.</RaiseErrorOnFailure>
				</TestStep>
				<TestStep Name="SetObjectRequiredLevel">
					<SetVariable Target="bObjectOrEntryRequiredLevel">1</SetVariable>
					<WriteLine Id="8" Param0="u16ObjectIndexInclOffset" Level="Verbose">0x{0:X4} 'Active Global Device Error Details' may be available</WriteLine>
				</TestStep>
				<TestStep Name="CheckIfObjectExists">
					<GetObjectDescription SourceDictionary="odDeviceObjectdictionary" Index="u16ObjectIndexInclOffset" SubIndex="-1"></GetObjectDescription>
					<GotoOnSuccess>CallCheckObjectDescription</GotoOnSuccess>
				</TestStep>
				<TestStep Name="HandleNotExistingObject">
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>2</Value2>
							<WriteLine Id="9" Param0="u16ObjectIndexInclOffset" Level="Warning">The object 0x{0:X4} 'Active Global Device Error Details' does not exists.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>1</Value2>
							<WriteLine Id="10" Param0="u16ObjectIndexInclOffset" Level="Output">The object 0x{0:X4} 'Active Global Device Error Details' does not exists.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>END</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CallCheckObjectDescription">
					<Description Id="11" Param0="u16ObjectIndexInclOffset" Level="Output">Verify the object description 0x{0:X4} 'Active Global Device Error Details'.</Description>
					<CallTestFunction Name="CheckObjectDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"online"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>"Active Global Device Error Details"</Parameter>
						<Parameter>null</Parameter>
						<Parameter>9</Parameter>
						<Parameter>-1</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<GotoStep>END</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="InitEntryBittOffset">
					<SetVariable Target="i32CurrentBitOffset">0</SetVariable>
				</TestStep>
				<TestStep Name="StartSi0">
					<Description Id="12" Level="Output">Start validate SubIndex0</Description>
					<WriteLine Id="13" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : Subindex '0x{0:X}.0'</WriteLine>
				</TestStep>
				<TestStep Name="CallSi0CheckEntryDescription">
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"online"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>0</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>null</Parameter>
						<Parameter>5</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>null</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>null</Parameter>
						<Parameter>null</Parameter>
						<Parameter>null</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>8</Parameter>
						<Parameter>i32CurrentBitOffset</Parameter>
						<Parameter>true</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="EndSi0">
					<SetVariable Target="i32CurrentBitOffset">16</SetVariable>
				</TestStep>
				<TestStep Name="StartSi1">
					<Description Id="14" Level="Output">Start validate SubIndex1</Description>
					<WriteLine Id="15" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : Subindex '0x{0:X}.1'</WriteLine>
				</TestStep>
				<TestStep Name="SetSi1RequiredLevel">
					<SetVariable Target="bObjectOrEntryRequiredLevel">1</SetVariable>
					<WriteLine Id="16" Param0="u16ObjectIndexInclOffset" Level="Verbose">0x{0:X4}.1 may be available</WriteLine>
				</TestStep>
				<TestStep Name="CheckIfSi1Exists">
					<GetObjectDescription SourceDictionary="odDeviceObjectdictionary" Index="u16ObjectIndexInclOffset" SubIndex="1">
						<Type>u16DataType</Type>
					</GetObjectDescription>
					<GotoOnFailure>HandleNotExistingSi1</GotoOnFailure>
				</TestStep>
				<TestStep>
					<Compare>
						<NotEqual>
							<Value1>u16DataType</Value1>
							<Value2>0</Value2>
							<GotoStep>CallSi1CheckEntryDescription</GotoStep>
						</NotEqual>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="17" Param0="u16ObjectIndexInclOffset" Level="Verbose">The entry 0x{0:X4}.1 is defined as a padding entry.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>EndSi1</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="HandleNotExistingSi1">
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="18" Param0="u16ObjectIndexInclOffset" Level="Output">The entry 0x{0:X4}.1 does not exists.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>EndSi1</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CallSi1CheckEntryDescription">
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"online"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>1</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>null</Parameter>
						<Parameter>7</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>null</Parameter>
						<Parameter>T</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>32</Parameter>
						<Parameter>i32CurrentBitOffset</Parameter>
						<Parameter>true</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="EndSi1">
					<SetVariable Target="i32CurrentBitOffset">-1</SetVariable>
				</TestStep>
				<TestStep Name="CheckReservedEntryRange_2_to_255">
					<Description Id="19" Level="Output">Start check reserved entry range 2 to 255</Description>
					<CallTestFunction Name="CheckReservedEntryRange">
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>2</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>odDeviceObjectdictionary</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="END">
					<Compare>
						<NotEqual>
							<Value1>bAtLeastOneModuleMatch</Value1>
							<Value2>true</Value2>
							<SkipCase Id="20">SKIP TEST(no module/channel supports the current profile)</SkipCase>
						</NotEqual>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bDEBUG</Value1>
							<Value2>true</Value2>
							<WriteLine Id="21" Param0="strResult" Level="Verbose">DEBUG | Result : '{0}'.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>strResult</Value1>
							<Value2>EmptyString</Value2>
							<ReturnSuccess Id="22">Test succeed</ReturnSuccess>
						</Equal>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>strResult</Value1>
							<Value2>EmptyString</Value2>
							<RaiseError Id="23"></RaiseError>
						</NotEqual>
					</Compare>
				</TestStep>
			</TestCase>
			<TestCase Name="offline | 0xF388 (Active Global Manufacturer Error Details)" CaseId="17">
				<Description>
					<PreCondition>- The device profile is 5003
- The module profile is 2011
- The submodule profile is 0</PreCondition>
					<Action>- Iterate over all offline defined modules/channels and if the PreCondition matches the following operations are done:
- Get the offline description of object 0xF388(+module specific offset) 'Active Global Manufacturer Error Details' and all entries
 Check:
    (Name)
    BitSize
    DataType
    Rx / Tx mappable
    Default Data
    MinData
    Flags       </Action>
					<PostCondition>Error if
- mandatory object / entry is not defined
- an optional object exists and the entries are invalid
- Object / entry description does not match with the specification</PostCondition>
					<ProposalForSolution>- Define the missing objects
- correct object / entry description</ProposalForSolution>
					<References>
						<Reference Specification="ETG.5003.2011"></Reference>
					</References>
					<Mandatory>true</Mandatory>
				</Description>
				<TestStep Name="InitResult">
					<SetVariable Target="strResult">EmptyString</SetVariable>
				</TestStep>
				<TestStep Name="CheckIfOdAvailable">
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Mailbox</Value1>
							<Value2>false</Value2>
							<SkipCase Id="1">DuT does not support mailbox.</SkipCase>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Mailbox.CoE</Value1>
							<Value2>false</Value2>
							<SkipCase Id="2">DuT does not support CoE.</SkipCase>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep>
					<GetObjectDictionary Target="odDeviceObjectdictionary">
						<DictionaryType>Offline</DictionaryType>
					</GetObjectDictionary>
					<SkipOnFailure Id="3">No offline object dictionary defined.</SkipOnFailure>
				</TestStep>
				<TestStep>
					<GetObjectList Count="u32Tmp" Target="odDeviceObjectdictionaryList" SourceDict="odDeviceObjectdictionary"></GetObjectList>
					<Compare>
						<Equal>
							<Value1>u32Tmp</Value1>
							<Value2>0</Value2>
							<SkipCase Id="4">No offline object dictionary defined.</SkipCase>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="InitAtLeastOneProfileMatch">
					<SetVariable Target="bAtLeastOneModuleMatch">false</SetVariable>
				</TestStep>
				<TestStep Name="GetCurrentProfileList">
					<SizeOf UInt32Var="u32Tmp">arrOfflineProfiles</SizeOf>
					<Compare>
						<Equal>
							<Value1>u32Tmp</Value1>
							<Value2>0</Value2>
							<CallTestFunction Name="GetCurrentProfileList">
								<Parameter>"offline"</Parameter>
								<Parameter>"SafeOP"</Parameter>
								<OutParameter>arrOfflineProfiles</OutParameter>
							</CallTestFunction>
						</Equal>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>u32Tmp</Value1>
							<Value2>0</Value2>
							<WriteLine Id="5" Param0="arrOfflineProfiles" Level="Verbose">Use previously created profile list ({0})</WriteLine>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep>
					<SizeOf UInt32Var="u32Tmp">arrOfflineProfiles</SizeOf>
				</TestStep>
				<TestStep>
					<InitArray TargetArray="arrCurrentProfiles" Length="u32Tmp"></InitArray>
				</TestStep>
				<TestStep>
					<CopyArray>
						<SourceArray>arrOfflineProfiles</SourceArray>
						<DestinationArray>arrCurrentProfiles</DestinationArray>
						<Length>u32Tmp</Length>
					</CopyArray>
				</TestStep>
				<TestStep Name="IsProfileSupported">
					<CallTestFunction Name="DeviceAndModuleProfileDefined">
						<Parameter>arrCurrentProfiles</Parameter>
						<Parameter>5003</Parameter>
						<Parameter>2011</Parameter>
						<OutParameter>bAtLeastOneModuleMatch</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>bAtLeastOneModuleMatch</Value1>
							<Value2>false</Value2>
							<GotoStep>END</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="GetObjectIndexInclOffset">
					<SetVariable Target="u16ObjectIndexInclOffset">#xF388</SetVariable>
					<WriteLine Id="6" Param0="u16ObjectIndexInclOffset" Level="Verbose">ObjectIndex '0x{0:X}' (module independent)</WriteLine>
				</TestStep>
				<TestStep Name="LoadDeviceObjectDictionary">
					<Description Id="7" Level="Verbose">Load 'offline' object dictionary for testing.</Description>
					<GetObjectDictionary Target="odDeviceObjectdictionary">
						<DictionaryType>Offline</DictionaryType>
					</GetObjectDictionary>
					<RaiseErrorOnFailure Id="8">VerifyObject : failed to load offline object dictionary.</RaiseErrorOnFailure>
				</TestStep>
				<TestStep Name="SetObjectRequiredLevel">
					<SetVariable Target="bObjectOrEntryRequiredLevel">1</SetVariable>
					<WriteLine Id="9" Param0="u16ObjectIndexInclOffset" Level="Verbose">0x{0:X4} 'Active Global Manufacturer Error Details' may be available</WriteLine>
				</TestStep>
				<TestStep Name="CheckIfObjectExists">
					<GetObjectDescription SourceDictionary="odDeviceObjectdictionary" Index="u16ObjectIndexInclOffset" SubIndex="-1"></GetObjectDescription>
					<GotoOnSuccess>CallCheckObjectDescription</GotoOnSuccess>
				</TestStep>
				<TestStep Name="HandleNotExistingObject">
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>2</Value2>
							<WriteLine Id="10" Param0="u16ObjectIndexInclOffset" Level="Warning">The object 0x{0:X4} 'Active Global Manufacturer Error Details' does not exists.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>1</Value2>
							<WriteLine Id="11" Param0="u16ObjectIndexInclOffset" Level="Output">The object 0x{0:X4} 'Active Global Manufacturer Error Details' does not exists.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>END</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CallCheckObjectDescription">
					<Description Id="12" Param0="u16ObjectIndexInclOffset" Level="Output">Verify the object description 0x{0:X4} 'Active Global Manufacturer Error Details'.</Description>
					<CallTestFunction Name="CheckObjectDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"offline"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>"Active Global Manufacturer Error Details"</Parameter>
						<Parameter>null</Parameter>
						<Parameter>9</Parameter>
						<Parameter>-1</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<GotoStep>END</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="InitEntryBittOffset">
					<SetVariable Target="i32CurrentBitOffset">0</SetVariable>
				</TestStep>
				<TestStep Name="StartSi0">
					<Description Id="13" Level="Output">Start validate SubIndex0</Description>
					<WriteLine Id="14" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : Subindex '0x{0:X}.0'</WriteLine>
				</TestStep>
				<TestStep Name="CallSi0CheckEntryDescription">
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"offline"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>0</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>null</Parameter>
						<Parameter>5</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>null</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>null</Parameter>
						<Parameter>null</Parameter>
						<Parameter>null</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>8</Parameter>
						<Parameter>i32CurrentBitOffset</Parameter>
						<Parameter>true</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="EndSi0">
					<SetVariable Target="i32CurrentBitOffset">16</SetVariable>
				</TestStep>
				<TestStep Name="StartSi1">
					<Description Id="15" Level="Output">Start validate SubIndex1</Description>
					<WriteLine Id="16" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : Subindex '0x{0:X}.1'</WriteLine>
				</TestStep>
				<TestStep Name="SetSi1RequiredLevel">
					<SetVariable Target="bObjectOrEntryRequiredLevel">1</SetVariable>
					<WriteLine Id="17" Param0="u16ObjectIndexInclOffset" Level="Verbose">0x{0:X4}.1 may be available</WriteLine>
				</TestStep>
				<TestStep Name="CheckIfSi1Exists">
					<GetObjectDescription SourceDictionary="odDeviceObjectdictionary" Index="u16ObjectIndexInclOffset" SubIndex="1">
						<Type>u16DataType</Type>
					</GetObjectDescription>
					<GotoOnFailure>HandleNotExistingSi1</GotoOnFailure>
				</TestStep>
				<TestStep>
					<Compare>
						<NotEqual>
							<Value1>u16DataType</Value1>
							<Value2>0</Value2>
							<GotoStep>CallSi1CheckEntryDescription</GotoStep>
						</NotEqual>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="18" Param0="u16ObjectIndexInclOffset" Level="Verbose">The entry 0x{0:X4}.1 is defined as a padding entry.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>EndSi1</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="HandleNotExistingSi1">
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="19" Param0="u16ObjectIndexInclOffset" Level="Output">The entry 0x{0:X4}.1 does not exists.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>EndSi1</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CallSi1CheckEntryDescription">
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"offline"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>1</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>null</Parameter>
						<Parameter>7</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>null</Parameter>
						<Parameter>T</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>32</Parameter>
						<Parameter>i32CurrentBitOffset</Parameter>
						<Parameter>true</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="EndSi1">
					<SetVariable Target="i32CurrentBitOffset">-1</SetVariable>
				</TestStep>
				<TestStep Name="CheckReservedEntryRange_2_to_255">
					<Description Id="20" Level="Output">Start check reserved entry range 2 to 255</Description>
					<CallTestFunction Name="CheckReservedEntryRange">
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>2</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>odDeviceObjectdictionary</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="END">
					<Compare>
						<NotEqual>
							<Value1>bAtLeastOneModuleMatch</Value1>
							<Value2>true</Value2>
							<SkipCase Id="21">SKIP TEST(no module/channel supports the current profile)</SkipCase>
						</NotEqual>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bDEBUG</Value1>
							<Value2>true</Value2>
							<WriteLine Id="22" Param0="strResult" Level="Verbose">DEBUG | Result : '{0}'.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>strResult</Value1>
							<Value2>EmptyString</Value2>
							<ReturnSuccess Id="23">Test succeed</ReturnSuccess>
						</Equal>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>strResult</Value1>
							<Value2>EmptyString</Value2>
							<RaiseError Id="24"></RaiseError>
						</NotEqual>
					</Compare>
				</TestStep>
			</TestCase>
			<TestCase Name="online | 0xF388 (Active Global Manufacturer Error Details)" CaseId="18">
				<Description>
					<PreCondition>- The device profile is 5003
- The module profile is 2011
- The submodule profile is 0</PreCondition>
					<Action>- Iterate over all online defined modules/channels and if the PreCondition matches the following operations are done:
- Get the online description of object 0xF388(+module specific offset) 'Active Global Manufacturer Error Details' and all entries
 Check:
    (Name)
    BitSize
    DataType
    Rx / Tx mappable
    Default Data
    MinData
    Flags       </Action>
					<PostCondition>Error if
- mandatory object / entry is not defined
- an optional object exists and the entries are invalid
- Object / entry description does not match with the specification</PostCondition>
					<ProposalForSolution>- Define the missing objects
- correct object / entry description</ProposalForSolution>
					<References>
						<Reference Specification="ETG.5003.2011"></Reference>
					</References>
					<Mandatory>true</Mandatory>
				</Description>
				<TestStep Name="InitResult">
					<SetVariable Target="strResult">EmptyString</SetVariable>
				</TestStep>
				<TestStep Name="CheckIfOdAvailable">
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Mailbox</Value1>
							<Value2>false</Value2>
							<SkipCase Id="1">DuT does not support mailbox.</SkipCase>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Mailbox.CoE</Value1>
							<Value2>false</Value2>
							<SkipCase Id="2">DuT does not support CoE.</SkipCase>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Mailbox.CoE.SdoInfo</Value1>
							<Value2>false</Value2>
							<SkipCase Id="3">DuT does not support SDO Info.</SkipCase>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="InitAtLeastOneProfileMatch">
					<SetVariable Target="bAtLeastOneModuleMatch">false</SetVariable>
				</TestStep>
				<TestStep Name="GetCurrentProfileList">
					<SizeOf UInt32Var="u32Tmp">arrOnlineProfiles</SizeOf>
					<Compare>
						<Equal>
							<Value1>u32Tmp</Value1>
							<Value2>0</Value2>
							<CallTestFunction Name="GetCurrentProfileList">
								<Parameter>"online"</Parameter>
								<Parameter>"SafeOP"</Parameter>
								<OutParameter>arrOnlineProfiles</OutParameter>
							</CallTestFunction>
						</Equal>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>u32Tmp</Value1>
							<Value2>0</Value2>
							<WriteLine Id="4" Param0="arrOnlineProfiles" Level="Verbose">Use previously created profile list ({0})</WriteLine>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep>
					<SizeOf UInt32Var="u32Tmp">arrOnlineProfiles</SizeOf>
				</TestStep>
				<TestStep>
					<InitArray TargetArray="arrCurrentProfiles" Length="u32Tmp"></InitArray>
				</TestStep>
				<TestStep>
					<CopyArray>
						<SourceArray>arrOnlineProfiles</SourceArray>
						<DestinationArray>arrCurrentProfiles</DestinationArray>
						<Length>u32Tmp</Length>
					</CopyArray>
				</TestStep>
				<TestStep Name="IsProfileSupported">
					<CallTestFunction Name="DeviceAndModuleProfileDefined">
						<Parameter>arrCurrentProfiles</Parameter>
						<Parameter>5003</Parameter>
						<Parameter>2011</Parameter>
						<OutParameter>bAtLeastOneModuleMatch</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>bAtLeastOneModuleMatch</Value1>
							<Value2>false</Value2>
							<GotoStep>END</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="GetObjectIndexInclOffset">
					<SetVariable Target="u16ObjectIndexInclOffset">#xF388</SetVariable>
					<WriteLine Id="5" Param0="u16ObjectIndexInclOffset" Level="Verbose">ObjectIndex '0x{0:X}' (module independent)</WriteLine>
				</TestStep>
				<TestStep Name="LoadDeviceObjectDictionary">
					<Description Id="6" Level="Verbose">Load 'online' object dictionary for testing.</Description>
					<GetObjectDictionary Target="odDeviceObjectdictionary">
						<DictionaryType>Online</DictionaryType>
					</GetObjectDictionary>
					<RaiseErrorOnFailure Id="7">VerifyObject : failed to load online object dictionary.</RaiseErrorOnFailure>
				</TestStep>
				<TestStep Name="SetObjectRequiredLevel">
					<SetVariable Target="bObjectOrEntryRequiredLevel">1</SetVariable>
					<WriteLine Id="8" Param0="u16ObjectIndexInclOffset" Level="Verbose">0x{0:X4} 'Active Global Manufacturer Error Details' may be available</WriteLine>
				</TestStep>
				<TestStep Name="CheckIfObjectExists">
					<GetObjectDescription SourceDictionary="odDeviceObjectdictionary" Index="u16ObjectIndexInclOffset" SubIndex="-1"></GetObjectDescription>
					<GotoOnSuccess>CallCheckObjectDescription</GotoOnSuccess>
				</TestStep>
				<TestStep Name="HandleNotExistingObject">
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>2</Value2>
							<WriteLine Id="9" Param0="u16ObjectIndexInclOffset" Level="Warning">The object 0x{0:X4} 'Active Global Manufacturer Error Details' does not exists.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>1</Value2>
							<WriteLine Id="10" Param0="u16ObjectIndexInclOffset" Level="Output">The object 0x{0:X4} 'Active Global Manufacturer Error Details' does not exists.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>END</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CallCheckObjectDescription">
					<Description Id="11" Param0="u16ObjectIndexInclOffset" Level="Output">Verify the object description 0x{0:X4} 'Active Global Manufacturer Error Details'.</Description>
					<CallTestFunction Name="CheckObjectDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"online"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>"Active Global Manufacturer Error Details"</Parameter>
						<Parameter>null</Parameter>
						<Parameter>9</Parameter>
						<Parameter>-1</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<GotoStep>END</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="InitEntryBittOffset">
					<SetVariable Target="i32CurrentBitOffset">0</SetVariable>
				</TestStep>
				<TestStep Name="StartSi0">
					<Description Id="12" Level="Output">Start validate SubIndex0</Description>
					<WriteLine Id="13" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : Subindex '0x{0:X}.0'</WriteLine>
				</TestStep>
				<TestStep Name="CallSi0CheckEntryDescription">
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"online"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>0</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>null</Parameter>
						<Parameter>5</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>null</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>null</Parameter>
						<Parameter>null</Parameter>
						<Parameter>null</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>8</Parameter>
						<Parameter>i32CurrentBitOffset</Parameter>
						<Parameter>true</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="EndSi0">
					<SetVariable Target="i32CurrentBitOffset">16</SetVariable>
				</TestStep>
				<TestStep Name="StartSi1">
					<Description Id="14" Level="Output">Start validate SubIndex1</Description>
					<WriteLine Id="15" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : Subindex '0x{0:X}.1'</WriteLine>
				</TestStep>
				<TestStep Name="SetSi1RequiredLevel">
					<SetVariable Target="bObjectOrEntryRequiredLevel">1</SetVariable>
					<WriteLine Id="16" Param0="u16ObjectIndexInclOffset" Level="Verbose">0x{0:X4}.1 may be available</WriteLine>
				</TestStep>
				<TestStep Name="CheckIfSi1Exists">
					<GetObjectDescription SourceDictionary="odDeviceObjectdictionary" Index="u16ObjectIndexInclOffset" SubIndex="1">
						<Type>u16DataType</Type>
					</GetObjectDescription>
					<GotoOnFailure>HandleNotExistingSi1</GotoOnFailure>
				</TestStep>
				<TestStep>
					<Compare>
						<NotEqual>
							<Value1>u16DataType</Value1>
							<Value2>0</Value2>
							<GotoStep>CallSi1CheckEntryDescription</GotoStep>
						</NotEqual>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="17" Param0="u16ObjectIndexInclOffset" Level="Verbose">The entry 0x{0:X4}.1 is defined as a padding entry.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>EndSi1</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="HandleNotExistingSi1">
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="18" Param0="u16ObjectIndexInclOffset" Level="Output">The entry 0x{0:X4}.1 does not exists.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>EndSi1</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CallSi1CheckEntryDescription">
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"online"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>1</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>null</Parameter>
						<Parameter>7</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>null</Parameter>
						<Parameter>T</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>32</Parameter>
						<Parameter>i32CurrentBitOffset</Parameter>
						<Parameter>true</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="EndSi1">
					<SetVariable Target="i32CurrentBitOffset">-1</SetVariable>
				</TestStep>
				<TestStep Name="CheckReservedEntryRange_2_to_255">
					<Description Id="19" Level="Output">Start check reserved entry range 2 to 255</Description>
					<CallTestFunction Name="CheckReservedEntryRange">
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>2</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>odDeviceObjectdictionary</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="END">
					<Compare>
						<NotEqual>
							<Value1>bAtLeastOneModuleMatch</Value1>
							<Value2>true</Value2>
							<SkipCase Id="20">SKIP TEST(no module/channel supports the current profile)</SkipCase>
						</NotEqual>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bDEBUG</Value1>
							<Value2>true</Value2>
							<WriteLine Id="21" Param0="strResult" Level="Verbose">DEBUG | Result : '{0}'.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>strResult</Value1>
							<Value2>EmptyString</Value2>
							<ReturnSuccess Id="22">Test succeed</ReturnSuccess>
						</Equal>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>strResult</Value1>
							<Value2>EmptyString</Value2>
							<RaiseError Id="23"></RaiseError>
						</NotEqual>
					</Compare>
				</TestStep>
			</TestCase>
			<TestCase Name="offline | 0xF390 (Latched Exception Status)" CaseId="19">
				<Description>
					<PreCondition>- The device profile is 5003
- The module profile is 2011
- The submodule profile is 0</PreCondition>
					<Action>- Iterate over all offline defined modules/channels and if the PreCondition matches the following operations are done:
- Get the offline description of object 0xF390(+module specific offset) 'Latched Exception Status' and all entries
 Check:
    (Name)
    BitSize
    DataType
    Rx / Tx mappable
    Default Data
    MinData
    Flags       </Action>
					<PostCondition>Error if
- mandatory object / entry is not defined
- an optional object exists and the entries are invalid
- Object / entry description does not match with the specification</PostCondition>
					<ProposalForSolution>- Define the missing objects
- correct object / entry description</ProposalForSolution>
					<References>
						<Reference Specification="ETG.5003.2011"></Reference>
					</References>
					<Mandatory>true</Mandatory>
				</Description>
				<TestStep Name="InitResult">
					<SetVariable Target="strResult">EmptyString</SetVariable>
				</TestStep>
				<TestStep Name="CheckIfOdAvailable">
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Mailbox</Value1>
							<Value2>false</Value2>
							<SkipCase Id="1">DuT does not support mailbox.</SkipCase>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Mailbox.CoE</Value1>
							<Value2>false</Value2>
							<SkipCase Id="2">DuT does not support CoE.</SkipCase>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep>
					<GetObjectDictionary Target="odDeviceObjectdictionary">
						<DictionaryType>Offline</DictionaryType>
					</GetObjectDictionary>
					<SkipOnFailure Id="3">No offline object dictionary defined.</SkipOnFailure>
				</TestStep>
				<TestStep>
					<GetObjectList Count="u32Tmp" Target="odDeviceObjectdictionaryList" SourceDict="odDeviceObjectdictionary"></GetObjectList>
					<Compare>
						<Equal>
							<Value1>u32Tmp</Value1>
							<Value2>0</Value2>
							<SkipCase Id="4">No offline object dictionary defined.</SkipCase>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="InitAtLeastOneProfileMatch">
					<SetVariable Target="bAtLeastOneModuleMatch">false</SetVariable>
				</TestStep>
				<TestStep Name="GetCurrentProfileList">
					<SizeOf UInt32Var="u32Tmp">arrOfflineProfiles</SizeOf>
					<Compare>
						<Equal>
							<Value1>u32Tmp</Value1>
							<Value2>0</Value2>
							<CallTestFunction Name="GetCurrentProfileList">
								<Parameter>"offline"</Parameter>
								<Parameter>"SafeOP"</Parameter>
								<OutParameter>arrOfflineProfiles</OutParameter>
							</CallTestFunction>
						</Equal>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>u32Tmp</Value1>
							<Value2>0</Value2>
							<WriteLine Id="5" Param0="arrOfflineProfiles" Level="Verbose">Use previously created profile list ({0})</WriteLine>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep>
					<SizeOf UInt32Var="u32Tmp">arrOfflineProfiles</SizeOf>
				</TestStep>
				<TestStep>
					<InitArray TargetArray="arrCurrentProfiles" Length="u32Tmp"></InitArray>
				</TestStep>
				<TestStep>
					<CopyArray>
						<SourceArray>arrOfflineProfiles</SourceArray>
						<DestinationArray>arrCurrentProfiles</DestinationArray>
						<Length>u32Tmp</Length>
					</CopyArray>
				</TestStep>
				<TestStep Name="IsProfileSupported">
					<CallTestFunction Name="DeviceAndModuleProfileDefined">
						<Parameter>arrCurrentProfiles</Parameter>
						<Parameter>5003</Parameter>
						<Parameter>2011</Parameter>
						<OutParameter>bAtLeastOneModuleMatch</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>bAtLeastOneModuleMatch</Value1>
							<Value2>false</Value2>
							<GotoStep>END</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="GetObjectIndexInclOffset">
					<SetVariable Target="u16ObjectIndexInclOffset">#xF390</SetVariable>
					<WriteLine Id="6" Param0="u16ObjectIndexInclOffset" Level="Verbose">ObjectIndex '0x{0:X}' (module independent)</WriteLine>
				</TestStep>
				<TestStep Name="LoadDeviceObjectDictionary">
					<Description Id="7" Level="Verbose">Load 'offline' object dictionary for testing.</Description>
					<GetObjectDictionary Target="odDeviceObjectdictionary">
						<DictionaryType>Offline</DictionaryType>
					</GetObjectDictionary>
					<RaiseErrorOnFailure Id="8">VerifyObject : failed to load offline object dictionary.</RaiseErrorOnFailure>
				</TestStep>
				<TestStep Name="CallCheckObjectDescription">
					<Description Id="9" Param0="u16ObjectIndexInclOffset" Level="Output">Verify the object description 0x{0:X4} 'Latched Exception Status'.</Description>
					<CallTestFunction Name="CheckObjectDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"offline"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>"Latched Exception Status"</Parameter>
						<Parameter>null</Parameter>
						<Parameter>7</Parameter>
						<Parameter>-1</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<GotoStep>END</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CallSi0CheckEntryDescription">
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"offline"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>0</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>null</Parameter>
						<Parameter>5</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>null</Parameter>
						<Parameter>T</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>8</Parameter>
						<Parameter>i32CurrentBitOffset</Parameter>
						<Parameter>true</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="END">
					<Compare>
						<NotEqual>
							<Value1>bAtLeastOneModuleMatch</Value1>
							<Value2>true</Value2>
							<SkipCase Id="10">SKIP TEST(no module/channel supports the current profile)</SkipCase>
						</NotEqual>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bDEBUG</Value1>
							<Value2>true</Value2>
							<WriteLine Id="11" Param0="strResult" Level="Verbose">DEBUG | Result : '{0}'.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>strResult</Value1>
							<Value2>EmptyString</Value2>
							<ReturnSuccess Id="12">Test succeed</ReturnSuccess>
						</Equal>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>strResult</Value1>
							<Value2>EmptyString</Value2>
							<RaiseError Id="13"></RaiseError>
						</NotEqual>
					</Compare>
				</TestStep>
			</TestCase>
			<TestCase Name="online | 0xF390 (Latched Exception Status)" CaseId="20">
				<Description>
					<PreCondition>- The device profile is 5003
- The module profile is 2011
- The submodule profile is 0</PreCondition>
					<Action>- Iterate over all online defined modules/channels and if the PreCondition matches the following operations are done:
- Get the online description of object 0xF390(+module specific offset) 'Latched Exception Status' and all entries
 Check:
    (Name)
    BitSize
    DataType
    Rx / Tx mappable
    Default Data
    MinData
    Flags       </Action>
					<PostCondition>Error if
- mandatory object / entry is not defined
- an optional object exists and the entries are invalid
- Object / entry description does not match with the specification</PostCondition>
					<ProposalForSolution>- Define the missing objects
- correct object / entry description</ProposalForSolution>
					<References>
						<Reference Specification="ETG.5003.2011"></Reference>
					</References>
					<Mandatory>true</Mandatory>
				</Description>
				<TestStep Name="InitResult">
					<SetVariable Target="strResult">EmptyString</SetVariable>
				</TestStep>
				<TestStep Name="CheckIfOdAvailable">
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Mailbox</Value1>
							<Value2>false</Value2>
							<SkipCase Id="1">DuT does not support mailbox.</SkipCase>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Mailbox.CoE</Value1>
							<Value2>false</Value2>
							<SkipCase Id="2">DuT does not support CoE.</SkipCase>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Mailbox.CoE.SdoInfo</Value1>
							<Value2>false</Value2>
							<SkipCase Id="3">DuT does not support SDO Info.</SkipCase>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="InitAtLeastOneProfileMatch">
					<SetVariable Target="bAtLeastOneModuleMatch">false</SetVariable>
				</TestStep>
				<TestStep Name="GetCurrentProfileList">
					<SizeOf UInt32Var="u32Tmp">arrOnlineProfiles</SizeOf>
					<Compare>
						<Equal>
							<Value1>u32Tmp</Value1>
							<Value2>0</Value2>
							<CallTestFunction Name="GetCurrentProfileList">
								<Parameter>"online"</Parameter>
								<Parameter>"SafeOP"</Parameter>
								<OutParameter>arrOnlineProfiles</OutParameter>
							</CallTestFunction>
						</Equal>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>u32Tmp</Value1>
							<Value2>0</Value2>
							<WriteLine Id="4" Param0="arrOnlineProfiles" Level="Verbose">Use previously created profile list ({0})</WriteLine>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep>
					<SizeOf UInt32Var="u32Tmp">arrOnlineProfiles</SizeOf>
				</TestStep>
				<TestStep>
					<InitArray TargetArray="arrCurrentProfiles" Length="u32Tmp"></InitArray>
				</TestStep>
				<TestStep>
					<CopyArray>
						<SourceArray>arrOnlineProfiles</SourceArray>
						<DestinationArray>arrCurrentProfiles</DestinationArray>
						<Length>u32Tmp</Length>
					</CopyArray>
				</TestStep>
				<TestStep Name="IsProfileSupported">
					<CallTestFunction Name="DeviceAndModuleProfileDefined">
						<Parameter>arrCurrentProfiles</Parameter>
						<Parameter>5003</Parameter>
						<Parameter>2011</Parameter>
						<OutParameter>bAtLeastOneModuleMatch</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>bAtLeastOneModuleMatch</Value1>
							<Value2>false</Value2>
							<GotoStep>END</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="GetObjectIndexInclOffset">
					<SetVariable Target="u16ObjectIndexInclOffset">#xF390</SetVariable>
					<WriteLine Id="5" Param0="u16ObjectIndexInclOffset" Level="Verbose">ObjectIndex '0x{0:X}' (module independent)</WriteLine>
				</TestStep>
				<TestStep Name="LoadDeviceObjectDictionary">
					<Description Id="6" Level="Verbose">Load 'online' object dictionary for testing.</Description>
					<GetObjectDictionary Target="odDeviceObjectdictionary">
						<DictionaryType>Online</DictionaryType>
					</GetObjectDictionary>
					<RaiseErrorOnFailure Id="7">VerifyObject : failed to load online object dictionary.</RaiseErrorOnFailure>
				</TestStep>
				<TestStep Name="CallCheckObjectDescription">
					<Description Id="8" Param0="u16ObjectIndexInclOffset" Level="Output">Verify the object description 0x{0:X4} 'Latched Exception Status'.</Description>
					<CallTestFunction Name="CheckObjectDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"online"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>"Latched Exception Status"</Parameter>
						<Parameter>null</Parameter>
						<Parameter>7</Parameter>
						<Parameter>-1</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<GotoStep>END</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CallSi0CheckEntryDescription">
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"online"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>0</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>null</Parameter>
						<Parameter>5</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>null</Parameter>
						<Parameter>T</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>8</Parameter>
						<Parameter>i32CurrentBitOffset</Parameter>
						<Parameter>true</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="END">
					<Compare>
						<NotEqual>
							<Value1>bAtLeastOneModuleMatch</Value1>
							<Value2>true</Value2>
							<SkipCase Id="9">SKIP TEST(no module/channel supports the current profile)</SkipCase>
						</NotEqual>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bDEBUG</Value1>
							<Value2>true</Value2>
							<WriteLine Id="10" Param0="strResult" Level="Verbose">DEBUG | Result : '{0}'.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>strResult</Value1>
							<Value2>EmptyString</Value2>
							<ReturnSuccess Id="11">Test succeed</ReturnSuccess>
						</Equal>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>strResult</Value1>
							<Value2>EmptyString</Value2>
							<RaiseError Id="12"></RaiseError>
						</NotEqual>
					</Compare>
				</TestStep>
			</TestCase>
			<TestCase Name="offline | 0xF391 (Latched Device Warning Details)" CaseId="21">
				<Description>
					<PreCondition>- The device profile is 5003
- The module profile is 2011
- The submodule profile is 0</PreCondition>
					<Action>- Iterate over all offline defined modules/channels and if the PreCondition matches the following operations are done:
- Get the offline description of object 0xF391(+module specific offset) 'Latched Device Warning Details' and all entries
 Check:
    (Name)
    BitSize
    DataType
    Rx / Tx mappable
    Default Data
    MinData
    Flags       </Action>
					<PostCondition>Error if
- mandatory object / entry is not defined
- an optional object exists and the entries are invalid
- Object / entry description does not match with the specification</PostCondition>
					<ProposalForSolution>- Define the missing objects
- correct object / entry description</ProposalForSolution>
					<References>
						<Reference Specification="ETG.5003.2011"></Reference>
					</References>
					<Mandatory>true</Mandatory>
				</Description>
				<TestStep Name="InitResult">
					<SetVariable Target="strResult">EmptyString</SetVariable>
				</TestStep>
				<TestStep Name="CheckIfOdAvailable">
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Mailbox</Value1>
							<Value2>false</Value2>
							<SkipCase Id="1">DuT does not support mailbox.</SkipCase>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Mailbox.CoE</Value1>
							<Value2>false</Value2>
							<SkipCase Id="2">DuT does not support CoE.</SkipCase>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep>
					<GetObjectDictionary Target="odDeviceObjectdictionary">
						<DictionaryType>Offline</DictionaryType>
					</GetObjectDictionary>
					<SkipOnFailure Id="3">No offline object dictionary defined.</SkipOnFailure>
				</TestStep>
				<TestStep>
					<GetObjectList Count="u32Tmp" Target="odDeviceObjectdictionaryList" SourceDict="odDeviceObjectdictionary"></GetObjectList>
					<Compare>
						<Equal>
							<Value1>u32Tmp</Value1>
							<Value2>0</Value2>
							<SkipCase Id="4">No offline object dictionary defined.</SkipCase>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="InitAtLeastOneProfileMatch">
					<SetVariable Target="bAtLeastOneModuleMatch">false</SetVariable>
				</TestStep>
				<TestStep Name="GetCurrentProfileList">
					<SizeOf UInt32Var="u32Tmp">arrOfflineProfiles</SizeOf>
					<Compare>
						<Equal>
							<Value1>u32Tmp</Value1>
							<Value2>0</Value2>
							<CallTestFunction Name="GetCurrentProfileList">
								<Parameter>"offline"</Parameter>
								<Parameter>"SafeOP"</Parameter>
								<OutParameter>arrOfflineProfiles</OutParameter>
							</CallTestFunction>
						</Equal>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>u32Tmp</Value1>
							<Value2>0</Value2>
							<WriteLine Id="5" Param0="arrOfflineProfiles" Level="Verbose">Use previously created profile list ({0})</WriteLine>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep>
					<SizeOf UInt32Var="u32Tmp">arrOfflineProfiles</SizeOf>
				</TestStep>
				<TestStep>
					<InitArray TargetArray="arrCurrentProfiles" Length="u32Tmp"></InitArray>
				</TestStep>
				<TestStep>
					<CopyArray>
						<SourceArray>arrOfflineProfiles</SourceArray>
						<DestinationArray>arrCurrentProfiles</DestinationArray>
						<Length>u32Tmp</Length>
					</CopyArray>
				</TestStep>
				<TestStep Name="IsProfileSupported">
					<CallTestFunction Name="DeviceAndModuleProfileDefined">
						<Parameter>arrCurrentProfiles</Parameter>
						<Parameter>5003</Parameter>
						<Parameter>2011</Parameter>
						<OutParameter>bAtLeastOneModuleMatch</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>bAtLeastOneModuleMatch</Value1>
							<Value2>false</Value2>
							<GotoStep>END</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="GetObjectIndexInclOffset">
					<SetVariable Target="u16ObjectIndexInclOffset">#xF391</SetVariable>
					<WriteLine Id="6" Param0="u16ObjectIndexInclOffset" Level="Verbose">ObjectIndex '0x{0:X}' (module independent)</WriteLine>
				</TestStep>
				<TestStep Name="LoadDeviceObjectDictionary">
					<Description Id="7" Level="Verbose">Load 'offline' object dictionary for testing.</Description>
					<GetObjectDictionary Target="odDeviceObjectdictionary">
						<DictionaryType>Offline</DictionaryType>
					</GetObjectDictionary>
					<RaiseErrorOnFailure Id="8">VerifyObject : failed to load offline object dictionary.</RaiseErrorOnFailure>
				</TestStep>
				<TestStep Name="CallCheckObjectDescription">
					<Description Id="9" Param0="u16ObjectIndexInclOffset" Level="Output">Verify the object description 0x{0:X4} 'Latched Device Warning Details'.</Description>
					<CallTestFunction Name="CheckObjectDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"offline"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>"Latched Device Warning Details"</Parameter>
						<Parameter>null</Parameter>
						<Parameter>8</Parameter>
						<Parameter>-1</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<GotoStep>END</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="InitEntryBittOffset">
					<SetVariable Target="i32CurrentBitOffset">0</SetVariable>
				</TestStep>
				<TestStep Name="StartSi0">
					<Description Id="10" Level="Output">Start validate SubIndex0</Description>
					<WriteLine Id="11" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : Subindex '0x{0:X}.0'</WriteLine>
				</TestStep>
				<TestStep Name="CallSi0CheckEntryDescription">
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"offline"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>0</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>null</Parameter>
						<Parameter>5</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>null</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>null</Parameter>
						<Parameter>null</Parameter>
						<Parameter>null</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>8</Parameter>
						<Parameter>i32CurrentBitOffset</Parameter>
						<Parameter>true</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="EndSi0">
					<SetVariable Target="i32CurrentBitOffset">16</SetVariable>
				</TestStep>
				<TestStep Name="InitProfileLoopCounter">
					<SetVariable Target="u32ProfileCounter">0</SetVariable>
				</TestStep>
				<TestStep Name="GetProfileArrayLength">
					<SizeOf UInt32Var="u32CurrentProfilesLength">arrCurrentProfiles</SizeOf>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="12" Param0="u32CurrentProfilesLength" Level="Verbose">'{0}' Profile(s) defined offline.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>u32CurrentProfilesLength</Value1>
							<Value2>0</Value2>
							<SkipCase Id="13">Skip case | no profile defined.</SkipCase>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="ProfileLoopStart">
					<GetArrayItem SourceArray="arrCurrentProfiles" Target="strTmpString" Index="u32ProfileCounter"></GetArrayItem>
				</TestStep>
				<TestStep Name="CheckProfileInformationString">
					<Compare>
						<Equal>
							<Value1>strTmpString</Value1>
							<Value2>null</Value2>
							<RaiseError Id="14" Param0="u32ProfileCounter">Profile Info element [{0}] is null.</RaiseError>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>strTmpString</Value1>
							<Value2>EmptyString</Value2>
							<RaiseError Id="15" Param0="u32ProfileCounter">Profile Info element [{0}] is an empty string.</RaiseError>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="GetDeviceProfile">
					<CallTestFunction Name="GetDeviceProfile">
						<Parameter>strTmpString</Parameter>
						<OutParameter>uint16CurDeviceProfile</OutParameter>
					</CallTestFunction>
				</TestStep>
				<TestStep Name="GetModuleProfile">
					<CallTestFunction Name="GetModuleProfile">
						<Parameter>strTmpString</Parameter>
						<OutParameter>uint16CurModuleProfile</OutParameter>
					</CallTestFunction>
				</TestStep>
				<TestStep Name="GetSubModuleProfile">
					<CallTestFunction Name="GetSubModuleProfile">
						<Parameter>strTmpString</Parameter>
						<OutParameter>uint16CurSubModuleProfile</OutParameter>
					</CallTestFunction>
				</TestStep>
				<TestStep Name="DumpProfileInfo">
					<Description Id="16" Param0="uint16CurDeviceProfile" Param1="uint16CurModuleProfile" Param2="uint16CurSubModuleProfile" Param3="u32ProfileCounter" Level="Output">Module[{3}] : DeviceProfile '{0}' ; ModuleProfile '{1}' ; SubModuleProfile '{2}'</Description>
					<Compare>
						<Equal>
							<Value1>bIgnoreProfileID</Value1>
							<Value2>true</Value2>
							<GotoStep>IndicateThatAtleastOneModuleMatch</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CompareDeviceProfile">
					<Compare>
						<NotEqual>
							<Value1>uint16CurDeviceProfile</Value1>
							<Value2>5003</Value2>
							<WriteLine Id="17" Param0="uint16CurDeviceProfile" Level="Output">Skip Profile  (Test Device Profile '5003' != Cur Device Profile '{0}')</WriteLine>
						</NotEqual>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>uint16CurDeviceProfile</Value1>
							<Value2>5003</Value2>
							<GotoStep>ProfileLoopEnd</GotoStep>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep Name="CompareModuleProfile">
					<Compare>
						<NotEqual>
							<Value1>uint16CurModuleProfile</Value1>
							<Value2>2011</Value2>
							<WriteLine Id="18" Param0="uint16CurModuleProfile" Level="Output">Skip Profile  (Test Module Profile '2011' != Cur Module Profile '{0}')</WriteLine>
						</NotEqual>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>uint16CurModuleProfile</Value1>
							<Value2>2011</Value2>
							<GotoStep>ProfileLoopEnd</GotoStep>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep Name="CompareSubModuleProfile">
					<Compare>
						<NotEqual>
							<Value1>uint16CurSubModuleProfile</Value1>
							<Value2>0</Value2>
							<WriteLine Id="19" Param0="uint16CurSubModuleProfile" Level="Output">Skip Profile  (Test SubModule Profile '0' != Cur SubModule Profile '{0}')</WriteLine>
						</NotEqual>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>uint16CurSubModuleProfile</Value1>
							<Value2>0</Value2>
							<GotoStep>ProfileLoopEnd</GotoStep>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep Name="IndicateThatAtleastOneModuleMatch">
					<SetVariable Target="bAtLeastOneModuleMatch">true</SetVariable>
				</TestStep>
				<TestStep Name="StartSi1">
					<Description Id="20" Param0="1 + (u32ProfileCounter * 1)" Level="Output">Start validate SubIndex{0}</Description>
					<SetVariable Target="byteSubIndexInclOffset">1 + (u32ProfileCounter * 1)</SetVariable>
					<WriteLine Id="21" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Param2="byteSubIndexInclOffset" Level="Verbose">Module[{1}] : Subindex '0x{0:X}.{2}'</WriteLine>
				</TestStep>
				<TestStep Name="CallSi1CheckEntryDescription">
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"offline"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>byteSubIndexInclOffset</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>null</Parameter>
						<Parameter>7</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>null</Parameter>
						<Parameter>T</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>32</Parameter>
						<Parameter>i32CurrentBitOffset</Parameter>
						<Parameter>true</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="EndSi1">
					<SetVariable Target="i32CurrentBitOffset">i32CurrentBitOffset + 32</SetVariable>
				</TestStep>
				<TestStep Name="ProfileLoopEnd">
					<Compare>
						<Equal>
							<Value1>bAtLeastOneModuleMatch</Value1>
							<Value2>false</Value2>
							<GotoStep>HandleAbortTestCaseOnFirstError</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="HandleAbortTestCaseOnFirstError">
					<Compare>
						<Equal>
							<Value1>bAbortTestCaseOnFirstError</Value1>
							<Value2>false</Value2>
							<GotoStep>ProfileLoopIncrement</GotoStep>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>strResult</Value1>
							<Value2>EmptyString</Value2>
							<GotoStep>ProfileLoopIncrement</GotoStep>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="22" Level="Output">Object verification for all following modules abort because an error was already detected for the current module.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>END</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="ProfileLoopIncrement">
					<SetVariable Target="u32ProfileCounter">u32ProfileCounter + 1</SetVariable>
					<Compare>
						<Greater>
							<Value1>u32CurrentProfilesLength</Value1>
							<Value2>u32ProfileCounter</Value2>
							<GotoStep>ProfileLoopStart</GotoStep>
						</Greater>
					</Compare>
				</TestStep>
				<TestStep Name="END">
					<Compare>
						<NotEqual>
							<Value1>bAtLeastOneModuleMatch</Value1>
							<Value2>true</Value2>
							<SkipCase Id="23">SKIP TEST(no module/channel supports the current profile)</SkipCase>
						</NotEqual>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bDEBUG</Value1>
							<Value2>true</Value2>
							<WriteLine Id="24" Param0="strResult" Level="Verbose">DEBUG | Result : '{0}'.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>strResult</Value1>
							<Value2>EmptyString</Value2>
							<ReturnSuccess Id="25">Test succeed</ReturnSuccess>
						</Equal>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>strResult</Value1>
							<Value2>EmptyString</Value2>
							<RaiseError Id="26"></RaiseError>
						</NotEqual>
					</Compare>
				</TestStep>
			</TestCase>
			<TestCase Name="online | 0xF391 (Latched Device Warning Details)" CaseId="22">
				<Description>
					<PreCondition>- The device profile is 5003
- The module profile is 2011
- The submodule profile is 0</PreCondition>
					<Action>- Iterate over all online defined modules/channels and if the PreCondition matches the following operations are done:
- Get the online description of object 0xF391(+module specific offset) 'Latched Device Warning Details' and all entries
 Check:
    (Name)
    BitSize
    DataType
    Rx / Tx mappable
    Default Data
    MinData
    Flags       </Action>
					<PostCondition>Error if
- mandatory object / entry is not defined
- an optional object exists and the entries are invalid
- Object / entry description does not match with the specification</PostCondition>
					<ProposalForSolution>- Define the missing objects
- correct object / entry description</ProposalForSolution>
					<References>
						<Reference Specification="ETG.5003.2011"></Reference>
					</References>
					<Mandatory>true</Mandatory>
				</Description>
				<TestStep Name="InitResult">
					<SetVariable Target="strResult">EmptyString</SetVariable>
				</TestStep>
				<TestStep Name="CheckIfOdAvailable">
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Mailbox</Value1>
							<Value2>false</Value2>
							<SkipCase Id="1">DuT does not support mailbox.</SkipCase>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Mailbox.CoE</Value1>
							<Value2>false</Value2>
							<SkipCase Id="2">DuT does not support CoE.</SkipCase>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Mailbox.CoE.SdoInfo</Value1>
							<Value2>false</Value2>
							<SkipCase Id="3">DuT does not support SDO Info.</SkipCase>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="InitAtLeastOneProfileMatch">
					<SetVariable Target="bAtLeastOneModuleMatch">false</SetVariable>
				</TestStep>
				<TestStep Name="GetCurrentProfileList">
					<SizeOf UInt32Var="u32Tmp">arrOnlineProfiles</SizeOf>
					<Compare>
						<Equal>
							<Value1>u32Tmp</Value1>
							<Value2>0</Value2>
							<CallTestFunction Name="GetCurrentProfileList">
								<Parameter>"online"</Parameter>
								<Parameter>"SafeOP"</Parameter>
								<OutParameter>arrOnlineProfiles</OutParameter>
							</CallTestFunction>
						</Equal>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>u32Tmp</Value1>
							<Value2>0</Value2>
							<WriteLine Id="4" Param0="arrOnlineProfiles" Level="Verbose">Use previously created profile list ({0})</WriteLine>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep>
					<SizeOf UInt32Var="u32Tmp">arrOnlineProfiles</SizeOf>
				</TestStep>
				<TestStep>
					<InitArray TargetArray="arrCurrentProfiles" Length="u32Tmp"></InitArray>
				</TestStep>
				<TestStep>
					<CopyArray>
						<SourceArray>arrOnlineProfiles</SourceArray>
						<DestinationArray>arrCurrentProfiles</DestinationArray>
						<Length>u32Tmp</Length>
					</CopyArray>
				</TestStep>
				<TestStep Name="IsProfileSupported">
					<CallTestFunction Name="DeviceAndModuleProfileDefined">
						<Parameter>arrCurrentProfiles</Parameter>
						<Parameter>5003</Parameter>
						<Parameter>2011</Parameter>
						<OutParameter>bAtLeastOneModuleMatch</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>bAtLeastOneModuleMatch</Value1>
							<Value2>false</Value2>
							<GotoStep>END</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="GetObjectIndexInclOffset">
					<SetVariable Target="u16ObjectIndexInclOffset">#xF391</SetVariable>
					<WriteLine Id="5" Param0="u16ObjectIndexInclOffset" Level="Verbose">ObjectIndex '0x{0:X}' (module independent)</WriteLine>
				</TestStep>
				<TestStep Name="LoadDeviceObjectDictionary">
					<Description Id="6" Level="Verbose">Load 'online' object dictionary for testing.</Description>
					<GetObjectDictionary Target="odDeviceObjectdictionary">
						<DictionaryType>Online</DictionaryType>
					</GetObjectDictionary>
					<RaiseErrorOnFailure Id="7">VerifyObject : failed to load online object dictionary.</RaiseErrorOnFailure>
				</TestStep>
				<TestStep Name="CallCheckObjectDescription">
					<Description Id="8" Param0="u16ObjectIndexInclOffset" Level="Output">Verify the object description 0x{0:X4} 'Latched Device Warning Details'.</Description>
					<CallTestFunction Name="CheckObjectDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"online"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>"Latched Device Warning Details"</Parameter>
						<Parameter>null</Parameter>
						<Parameter>8</Parameter>
						<Parameter>-1</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<GotoStep>END</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="InitEntryBittOffset">
					<SetVariable Target="i32CurrentBitOffset">0</SetVariable>
				</TestStep>
				<TestStep Name="StartSi0">
					<Description Id="9" Level="Output">Start validate SubIndex0</Description>
					<WriteLine Id="10" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : Subindex '0x{0:X}.0'</WriteLine>
				</TestStep>
				<TestStep Name="CallSi0CheckEntryDescription">
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"online"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>0</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>null</Parameter>
						<Parameter>5</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>null</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>null</Parameter>
						<Parameter>null</Parameter>
						<Parameter>null</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>8</Parameter>
						<Parameter>i32CurrentBitOffset</Parameter>
						<Parameter>true</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="EndSi0">
					<SetVariable Target="i32CurrentBitOffset">16</SetVariable>
				</TestStep>
				<TestStep Name="InitProfileLoopCounter">
					<SetVariable Target="u32ProfileCounter">0</SetVariable>
				</TestStep>
				<TestStep Name="GetProfileArrayLength">
					<SizeOf UInt32Var="u32CurrentProfilesLength">arrCurrentProfiles</SizeOf>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="11" Param0="u32CurrentProfilesLength" Level="Verbose">'{0}' Profile(s) defined online.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>u32CurrentProfilesLength</Value1>
							<Value2>0</Value2>
							<SkipCase Id="12">Skip case | no profile defined.</SkipCase>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="ProfileLoopStart">
					<GetArrayItem SourceArray="arrCurrentProfiles" Target="strTmpString" Index="u32ProfileCounter"></GetArrayItem>
				</TestStep>
				<TestStep Name="CheckProfileInformationString">
					<Compare>
						<Equal>
							<Value1>strTmpString</Value1>
							<Value2>null</Value2>
							<RaiseError Id="13" Param0="u32ProfileCounter">Profile Info element [{0}] is null.</RaiseError>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>strTmpString</Value1>
							<Value2>EmptyString</Value2>
							<RaiseError Id="14" Param0="u32ProfileCounter">Profile Info element [{0}] is an empty string.</RaiseError>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="GetDeviceProfile">
					<CallTestFunction Name="GetDeviceProfile">
						<Parameter>strTmpString</Parameter>
						<OutParameter>uint16CurDeviceProfile</OutParameter>
					</CallTestFunction>
				</TestStep>
				<TestStep Name="GetModuleProfile">
					<CallTestFunction Name="GetModuleProfile">
						<Parameter>strTmpString</Parameter>
						<OutParameter>uint16CurModuleProfile</OutParameter>
					</CallTestFunction>
				</TestStep>
				<TestStep Name="GetSubModuleProfile">
					<CallTestFunction Name="GetSubModuleProfile">
						<Parameter>strTmpString</Parameter>
						<OutParameter>uint16CurSubModuleProfile</OutParameter>
					</CallTestFunction>
				</TestStep>
				<TestStep Name="DumpProfileInfo">
					<Description Id="15" Param0="uint16CurDeviceProfile" Param1="uint16CurModuleProfile" Param2="uint16CurSubModuleProfile" Param3="u32ProfileCounter" Level="Output">Module[{3}] : DeviceProfile '{0}' ; ModuleProfile '{1}' ; SubModuleProfile '{2}'</Description>
					<Compare>
						<Equal>
							<Value1>bIgnoreProfileID</Value1>
							<Value2>true</Value2>
							<GotoStep>IndicateThatAtleastOneModuleMatch</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CompareDeviceProfile">
					<Compare>
						<NotEqual>
							<Value1>uint16CurDeviceProfile</Value1>
							<Value2>5003</Value2>
							<WriteLine Id="16" Param0="uint16CurDeviceProfile" Level="Output">Skip Profile  (Test Device Profile '5003' != Cur Device Profile '{0}')</WriteLine>
						</NotEqual>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>uint16CurDeviceProfile</Value1>
							<Value2>5003</Value2>
							<GotoStep>ProfileLoopEnd</GotoStep>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep Name="CompareModuleProfile">
					<Compare>
						<NotEqual>
							<Value1>uint16CurModuleProfile</Value1>
							<Value2>2011</Value2>
							<WriteLine Id="17" Param0="uint16CurModuleProfile" Level="Output">Skip Profile  (Test Module Profile '2011' != Cur Module Profile '{0}')</WriteLine>
						</NotEqual>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>uint16CurModuleProfile</Value1>
							<Value2>2011</Value2>
							<GotoStep>ProfileLoopEnd</GotoStep>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep Name="CompareSubModuleProfile">
					<Compare>
						<NotEqual>
							<Value1>uint16CurSubModuleProfile</Value1>
							<Value2>0</Value2>
							<WriteLine Id="18" Param0="uint16CurSubModuleProfile" Level="Output">Skip Profile  (Test SubModule Profile '0' != Cur SubModule Profile '{0}')</WriteLine>
						</NotEqual>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>uint16CurSubModuleProfile</Value1>
							<Value2>0</Value2>
							<GotoStep>ProfileLoopEnd</GotoStep>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep Name="IndicateThatAtleastOneModuleMatch">
					<SetVariable Target="bAtLeastOneModuleMatch">true</SetVariable>
				</TestStep>
				<TestStep Name="StartSi1">
					<Description Id="19" Param0="1 + (u32ProfileCounter * 1)" Level="Output">Start validate SubIndex{0}</Description>
					<SetVariable Target="byteSubIndexInclOffset">1 + (u32ProfileCounter * 1)</SetVariable>
					<WriteLine Id="20" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Param2="byteSubIndexInclOffset" Level="Verbose">Module[{1}] : Subindex '0x{0:X}.{2}'</WriteLine>
				</TestStep>
				<TestStep Name="CallSi1CheckEntryDescription">
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"online"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>byteSubIndexInclOffset</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>null</Parameter>
						<Parameter>7</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>null</Parameter>
						<Parameter>T</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>32</Parameter>
						<Parameter>i32CurrentBitOffset</Parameter>
						<Parameter>true</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="EndSi1">
					<SetVariable Target="i32CurrentBitOffset">i32CurrentBitOffset + 32</SetVariable>
				</TestStep>
				<TestStep Name="ProfileLoopEnd">
					<Compare>
						<Equal>
							<Value1>bAtLeastOneModuleMatch</Value1>
							<Value2>false</Value2>
							<GotoStep>HandleAbortTestCaseOnFirstError</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="HandleAbortTestCaseOnFirstError">
					<Compare>
						<Equal>
							<Value1>bAbortTestCaseOnFirstError</Value1>
							<Value2>false</Value2>
							<GotoStep>ProfileLoopIncrement</GotoStep>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>strResult</Value1>
							<Value2>EmptyString</Value2>
							<GotoStep>ProfileLoopIncrement</GotoStep>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="21" Level="Output">Object verification for all following modules abort because an error was already detected for the current module.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>END</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="ProfileLoopIncrement">
					<SetVariable Target="u32ProfileCounter">u32ProfileCounter + 1</SetVariable>
					<Compare>
						<Greater>
							<Value1>u32CurrentProfilesLength</Value1>
							<Value2>u32ProfileCounter</Value2>
							<GotoStep>ProfileLoopStart</GotoStep>
						</Greater>
					</Compare>
				</TestStep>
				<TestStep Name="END">
					<Compare>
						<NotEqual>
							<Value1>bAtLeastOneModuleMatch</Value1>
							<Value2>true</Value2>
							<SkipCase Id="22">SKIP TEST(no module/channel supports the current profile)</SkipCase>
						</NotEqual>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bDEBUG</Value1>
							<Value2>true</Value2>
							<WriteLine Id="23" Param0="strResult" Level="Verbose">DEBUG | Result : '{0}'.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>strResult</Value1>
							<Value2>EmptyString</Value2>
							<ReturnSuccess Id="24">Test succeed</ReturnSuccess>
						</Equal>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>strResult</Value1>
							<Value2>EmptyString</Value2>
							<RaiseError Id="25"></RaiseError>
						</NotEqual>
					</Compare>
				</TestStep>
			</TestCase>
			<TestCase Name="offline | 0xF392 (Latched Manufacturer Warning Details)" CaseId="23">
				<Description>
					<PreCondition>- The device profile is 5003
- The module profile is 2011
- The submodule profile is 0</PreCondition>
					<Action>- Iterate over all offline defined modules/channels and if the PreCondition matches the following operations are done:
- Get the offline description of object 0xF392(+module specific offset) 'Latched Manufacturer Warning Details' and all entries
 Check:
    (Name)
    BitSize
    DataType
    Rx / Tx mappable
    Default Data
    MinData
    Flags       </Action>
					<PostCondition>Error if
- mandatory object / entry is not defined
- an optional object exists and the entries are invalid
- Object / entry description does not match with the specification</PostCondition>
					<ProposalForSolution>- Define the missing objects
- correct object / entry description</ProposalForSolution>
					<References>
						<Reference Specification="ETG.5003.2011"></Reference>
					</References>
					<Mandatory>true</Mandatory>
				</Description>
				<TestStep Name="InitResult">
					<SetVariable Target="strResult">EmptyString</SetVariable>
				</TestStep>
				<TestStep Name="CheckIfOdAvailable">
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Mailbox</Value1>
							<Value2>false</Value2>
							<SkipCase Id="1">DuT does not support mailbox.</SkipCase>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Mailbox.CoE</Value1>
							<Value2>false</Value2>
							<SkipCase Id="2">DuT does not support CoE.</SkipCase>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep>
					<GetObjectDictionary Target="odDeviceObjectdictionary">
						<DictionaryType>Offline</DictionaryType>
					</GetObjectDictionary>
					<SkipOnFailure Id="3">No offline object dictionary defined.</SkipOnFailure>
				</TestStep>
				<TestStep>
					<GetObjectList Count="u32Tmp" Target="odDeviceObjectdictionaryList" SourceDict="odDeviceObjectdictionary"></GetObjectList>
					<Compare>
						<Equal>
							<Value1>u32Tmp</Value1>
							<Value2>0</Value2>
							<SkipCase Id="4">No offline object dictionary defined.</SkipCase>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="InitAtLeastOneProfileMatch">
					<SetVariable Target="bAtLeastOneModuleMatch">false</SetVariable>
				</TestStep>
				<TestStep Name="GetCurrentProfileList">
					<SizeOf UInt32Var="u32Tmp">arrOfflineProfiles</SizeOf>
					<Compare>
						<Equal>
							<Value1>u32Tmp</Value1>
							<Value2>0</Value2>
							<CallTestFunction Name="GetCurrentProfileList">
								<Parameter>"offline"</Parameter>
								<Parameter>"SafeOP"</Parameter>
								<OutParameter>arrOfflineProfiles</OutParameter>
							</CallTestFunction>
						</Equal>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>u32Tmp</Value1>
							<Value2>0</Value2>
							<WriteLine Id="5" Param0="arrOfflineProfiles" Level="Verbose">Use previously created profile list ({0})</WriteLine>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep>
					<SizeOf UInt32Var="u32Tmp">arrOfflineProfiles</SizeOf>
				</TestStep>
				<TestStep>
					<InitArray TargetArray="arrCurrentProfiles" Length="u32Tmp"></InitArray>
				</TestStep>
				<TestStep>
					<CopyArray>
						<SourceArray>arrOfflineProfiles</SourceArray>
						<DestinationArray>arrCurrentProfiles</DestinationArray>
						<Length>u32Tmp</Length>
					</CopyArray>
				</TestStep>
				<TestStep Name="IsProfileSupported">
					<CallTestFunction Name="DeviceAndModuleProfileDefined">
						<Parameter>arrCurrentProfiles</Parameter>
						<Parameter>5003</Parameter>
						<Parameter>2011</Parameter>
						<OutParameter>bAtLeastOneModuleMatch</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>bAtLeastOneModuleMatch</Value1>
							<Value2>false</Value2>
							<GotoStep>END</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="GetObjectIndexInclOffset">
					<SetVariable Target="u16ObjectIndexInclOffset">#xF392</SetVariable>
					<WriteLine Id="6" Param0="u16ObjectIndexInclOffset" Level="Verbose">ObjectIndex '0x{0:X}' (module independent)</WriteLine>
				</TestStep>
				<TestStep Name="LoadDeviceObjectDictionary">
					<Description Id="7" Level="Verbose">Load 'offline' object dictionary for testing.</Description>
					<GetObjectDictionary Target="odDeviceObjectdictionary">
						<DictionaryType>Offline</DictionaryType>
					</GetObjectDictionary>
					<RaiseErrorOnFailure Id="8">VerifyObject : failed to load offline object dictionary.</RaiseErrorOnFailure>
				</TestStep>
				<TestStep Name="SetObjectRequiredLevel">
					<SetVariable Target="bObjectOrEntryRequiredLevel">1</SetVariable>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<CallTestFunction Name="IsEntryDefined">
								<Parameter>#xF382</Parameter>
								<Parameter>0</Parameter>
								<Parameter>offline</Parameter>
								<OutParameter>bConditionTrue</OutParameter>
							</CallTestFunction>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bConditionTrue</Value1>
							<Value2>true</Value2>
							<SetVariable Target="bObjectOrEntryRequiredLevel">3</SetVariable>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>3</Value2>
							<WriteLine Id="9" Param0="u16ObjectIndexInclOffset" Param1="#xF382" Level="Verbose">0x{0:X4} 'Latched Manufacturer Warning Details' shall be available (the entry 0x{1:X4}.0 is available (offline)</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>1</Value2>
							<WriteLine Id="10" Param0="u16ObjectIndexInclOffset" Param1="#xF382" Level="Verbose">0x{0:X4} 'Latched Manufacturer Warning Details' may be available (the entry 0x{1:X4}.0 is not available (offline)</WriteLine>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CheckIfObjectExists">
					<GetObjectDescription SourceDictionary="odDeviceObjectdictionary" Index="u16ObjectIndexInclOffset" SubIndex="-1"></GetObjectDescription>
					<GotoOnSuccess>CallCheckObjectDescription</GotoOnSuccess>
				</TestStep>
				<TestStep Name="HandleNotExistingObject">
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>3</Value2>
							<SetVariable Target="strResult" Param0="u16ObjectIndexInclOffset">The object 0x{0:X4} 'Latched Manufacturer Warning Details' does not exists.</SetVariable>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>3</Value2>
							<WriteLine Id="11" Param0="u16ObjectIndexInclOffset" Level="Error">The object 0x{0:X4} 'Latched Manufacturer Warning Details' does not exists.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>2</Value2>
							<WriteLine Id="12" Param0="u16ObjectIndexInclOffset" Level="Warning">The object 0x{0:X4} 'Latched Manufacturer Warning Details' does not exists.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>1</Value2>
							<WriteLine Id="13" Param0="u16ObjectIndexInclOffset" Level="Output">The object 0x{0:X4} 'Latched Manufacturer Warning Details' does not exists.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>END</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CallCheckObjectDescription">
					<Description Id="14" Param0="u16ObjectIndexInclOffset" Level="Output">Verify the object description 0x{0:X4} 'Latched Manufacturer Warning Details'.</Description>
					<CallTestFunction Name="CheckObjectDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"offline"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>"Latched Manufacturer Warning Details"</Parameter>
						<Parameter>null</Parameter>
						<Parameter>8</Parameter>
						<Parameter>-1</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<GotoStep>END</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="InitEntryBittOffset">
					<SetVariable Target="i32CurrentBitOffset">0</SetVariable>
				</TestStep>
				<TestStep Name="StartSi0">
					<Description Id="15" Level="Output">Start validate SubIndex0</Description>
					<WriteLine Id="16" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : Subindex '0x{0:X}.0'</WriteLine>
				</TestStep>
				<TestStep Name="CallSi0CheckEntryDescription">
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"offline"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>0</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>null</Parameter>
						<Parameter>5</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>null</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>null</Parameter>
						<Parameter>null</Parameter>
						<Parameter>null</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>8</Parameter>
						<Parameter>i32CurrentBitOffset</Parameter>
						<Parameter>true</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="EndSi0">
					<SetVariable Target="i32CurrentBitOffset">16</SetVariable>
				</TestStep>
				<TestStep Name="InitProfileLoopCounter">
					<SetVariable Target="u32ProfileCounter">0</SetVariable>
				</TestStep>
				<TestStep Name="GetProfileArrayLength">
					<SizeOf UInt32Var="u32CurrentProfilesLength">arrCurrentProfiles</SizeOf>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="17" Param0="u32CurrentProfilesLength" Level="Verbose">'{0}' Profile(s) defined offline.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>u32CurrentProfilesLength</Value1>
							<Value2>0</Value2>
							<SkipCase Id="18">Skip case | no profile defined.</SkipCase>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="ProfileLoopStart">
					<GetArrayItem SourceArray="arrCurrentProfiles" Target="strTmpString" Index="u32ProfileCounter"></GetArrayItem>
				</TestStep>
				<TestStep Name="CheckProfileInformationString">
					<Compare>
						<Equal>
							<Value1>strTmpString</Value1>
							<Value2>null</Value2>
							<RaiseError Id="19" Param0="u32ProfileCounter">Profile Info element [{0}] is null.</RaiseError>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>strTmpString</Value1>
							<Value2>EmptyString</Value2>
							<RaiseError Id="20" Param0="u32ProfileCounter">Profile Info element [{0}] is an empty string.</RaiseError>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="GetDeviceProfile">
					<CallTestFunction Name="GetDeviceProfile">
						<Parameter>strTmpString</Parameter>
						<OutParameter>uint16CurDeviceProfile</OutParameter>
					</CallTestFunction>
				</TestStep>
				<TestStep Name="GetModuleProfile">
					<CallTestFunction Name="GetModuleProfile">
						<Parameter>strTmpString</Parameter>
						<OutParameter>uint16CurModuleProfile</OutParameter>
					</CallTestFunction>
				</TestStep>
				<TestStep Name="GetSubModuleProfile">
					<CallTestFunction Name="GetSubModuleProfile">
						<Parameter>strTmpString</Parameter>
						<OutParameter>uint16CurSubModuleProfile</OutParameter>
					</CallTestFunction>
				</TestStep>
				<TestStep Name="DumpProfileInfo">
					<Description Id="21" Param0="uint16CurDeviceProfile" Param1="uint16CurModuleProfile" Param2="uint16CurSubModuleProfile" Param3="u32ProfileCounter" Level="Output">Module[{3}] : DeviceProfile '{0}' ; ModuleProfile '{1}' ; SubModuleProfile '{2}'</Description>
					<Compare>
						<Equal>
							<Value1>bIgnoreProfileID</Value1>
							<Value2>true</Value2>
							<GotoStep>IndicateThatAtleastOneModuleMatch</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CompareDeviceProfile">
					<Compare>
						<NotEqual>
							<Value1>uint16CurDeviceProfile</Value1>
							<Value2>5003</Value2>
							<WriteLine Id="22" Param0="uint16CurDeviceProfile" Level="Output">Skip Profile  (Test Device Profile '5003' != Cur Device Profile '{0}')</WriteLine>
						</NotEqual>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>uint16CurDeviceProfile</Value1>
							<Value2>5003</Value2>
							<GotoStep>ProfileLoopEnd</GotoStep>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep Name="CompareModuleProfile">
					<Compare>
						<NotEqual>
							<Value1>uint16CurModuleProfile</Value1>
							<Value2>2011</Value2>
							<WriteLine Id="23" Param0="uint16CurModuleProfile" Level="Output">Skip Profile  (Test Module Profile '2011' != Cur Module Profile '{0}')</WriteLine>
						</NotEqual>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>uint16CurModuleProfile</Value1>
							<Value2>2011</Value2>
							<GotoStep>ProfileLoopEnd</GotoStep>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep Name="CompareSubModuleProfile">
					<Compare>
						<NotEqual>
							<Value1>uint16CurSubModuleProfile</Value1>
							<Value2>0</Value2>
							<WriteLine Id="24" Param0="uint16CurSubModuleProfile" Level="Output">Skip Profile  (Test SubModule Profile '0' != Cur SubModule Profile '{0}')</WriteLine>
						</NotEqual>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>uint16CurSubModuleProfile</Value1>
							<Value2>0</Value2>
							<GotoStep>ProfileLoopEnd</GotoStep>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep Name="IndicateThatAtleastOneModuleMatch">
					<SetVariable Target="bAtLeastOneModuleMatch">true</SetVariable>
				</TestStep>
				<TestStep Name="StartSi1">
					<Description Id="25" Param0="1 + (u32ProfileCounter * 1)" Level="Output">Start validate SubIndex{0}</Description>
					<SetVariable Target="byteSubIndexInclOffset">1 + (u32ProfileCounter * 1)</SetVariable>
					<WriteLine Id="26" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Param2="byteSubIndexInclOffset" Level="Verbose">Module[{1}] : Subindex '0x{0:X}.{2}'</WriteLine>
				</TestStep>
				<TestStep Name="SetSi1RequiredLevel">
					<SetVariable Target="bObjectOrEntryRequiredLevel">1</SetVariable>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<CallTestFunction Name="IsEntryDefined">
								<Parameter>#xF382</Parameter>
								<Parameter>0</Parameter>
								<Parameter>offline</Parameter>
								<OutParameter>bConditionTrue</OutParameter>
							</CallTestFunction>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bConditionTrue</Value1>
							<Value2>true</Value2>
							<SetVariable Target="bObjectOrEntryRequiredLevel">3</SetVariable>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>3</Value2>
							<WriteLine Id="27" Param0="u16ObjectIndexInclOffset" Param1="byteSubIndexInclOffset" Param2="#xF382" Level="Verbose">0x{0:X4}.{1} shall be available (the entry 0x{2:X4}.0 is available (offline)</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>1</Value2>
							<WriteLine Id="28" Param0="u16ObjectIndexInclOffset" Param1="byteSubIndexInclOffset" Param2="#xF382" Level="Verbose">0x{0:X4}.{1} may be available (the entry 0x{2:X4}.0 is not available (offline)</WriteLine>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CheckIfSi1Exists">
					<GetObjectDescription SourceDictionary="odDeviceObjectdictionary" Index="u16ObjectIndexInclOffset" SubIndex="byteSubIndexInclOffset">
						<Type>u16DataType</Type>
					</GetObjectDescription>
					<GotoOnFailure>HandleNotExistingSi1</GotoOnFailure>
				</TestStep>
				<TestStep>
					<Compare>
						<NotEqual>
							<Value1>u16DataType</Value1>
							<Value2>0</Value2>
							<GotoStep>CallSi1CheckEntryDescription</GotoStep>
						</NotEqual>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>1</Value2>
							<WriteLine Id="29" Param0="u16ObjectIndexInclOffset" Level="Verbose">The entry 0x{0:X4}.1 is defined as a padding entry.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>3</Value2>
							<WriteLine Id="30" Param0="u16ObjectIndexInclOffset" Level="Error">The entry 0x{0:X4}.1 shall not defined as a padding entry.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>3</Value2>
							<SetVariable Target="strResult" Param0="u16ObjectIndexInclOffset">The entry 0x{0:X4}.1 shall not defined as a padding entry.</SetVariable>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>EndSi1</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="HandleNotExistingSi1">
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>3</Value2>
							<SetVariable Target="strResult" Param0="u16ObjectIndexInclOffset" Param1="byteSubIndexInclOffset">The entry 0x{0:X4}.{1} does not exists.</SetVariable>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>3</Value2>
							<WriteLine Id="31" Param0="u16ObjectIndexInclOffset" Param1="byteSubIndexInclOffset" Level="Error">The entry 0x{0:X4}.{1} does not exists.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>3</Value2>
							<GotoStep>EndSi1</GotoStep>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="32" Param0="u16ObjectIndexInclOffset" Param1="byteSubIndexInclOffset" Level="Output">The entry 0x{0:X4}.{1} does not exists.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>EndSi1</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CallSi1CheckEntryDescription">
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"offline"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>byteSubIndexInclOffset</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>null</Parameter>
						<Parameter>7</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>null</Parameter>
						<Parameter>T</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>32</Parameter>
						<Parameter>i32CurrentBitOffset</Parameter>
						<Parameter>true</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="EndSi1">
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>3</Value2>
							<SetVariable Target="i32CurrentBitOffset">i32CurrentBitOffset + 32</SetVariable>
						</Equal>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>3</Value2>
							<SetVariable Target="i32CurrentBitOffset">-1</SetVariable>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep Name="ProfileLoopEnd">
					<Compare>
						<Equal>
							<Value1>bAtLeastOneModuleMatch</Value1>
							<Value2>false</Value2>
							<GotoStep>HandleAbortTestCaseOnFirstError</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="HandleAbortTestCaseOnFirstError">
					<Compare>
						<Equal>
							<Value1>bAbortTestCaseOnFirstError</Value1>
							<Value2>false</Value2>
							<GotoStep>ProfileLoopIncrement</GotoStep>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>strResult</Value1>
							<Value2>EmptyString</Value2>
							<GotoStep>ProfileLoopIncrement</GotoStep>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="33" Level="Output">Object verification for all following modules abort because an error was already detected for the current module.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>END</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="ProfileLoopIncrement">
					<SetVariable Target="u32ProfileCounter">u32ProfileCounter + 1</SetVariable>
					<Compare>
						<Greater>
							<Value1>u32CurrentProfilesLength</Value1>
							<Value2>u32ProfileCounter</Value2>
							<GotoStep>ProfileLoopStart</GotoStep>
						</Greater>
					</Compare>
				</TestStep>
				<TestStep Name="END">
					<Compare>
						<NotEqual>
							<Value1>bAtLeastOneModuleMatch</Value1>
							<Value2>true</Value2>
							<SkipCase Id="34">SKIP TEST(no module/channel supports the current profile)</SkipCase>
						</NotEqual>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bDEBUG</Value1>
							<Value2>true</Value2>
							<WriteLine Id="35" Param0="strResult" Level="Verbose">DEBUG | Result : '{0}'.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>strResult</Value1>
							<Value2>EmptyString</Value2>
							<ReturnSuccess Id="36">Test succeed</ReturnSuccess>
						</Equal>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>strResult</Value1>
							<Value2>EmptyString</Value2>
							<RaiseError Id="37"></RaiseError>
						</NotEqual>
					</Compare>
				</TestStep>
			</TestCase>
			<TestCase Name="online | 0xF392 (Latched Manufacturer Warning Details)" CaseId="24">
				<Description>
					<PreCondition>- The device profile is 5003
- The module profile is 2011
- The submodule profile is 0</PreCondition>
					<Action>- Iterate over all online defined modules/channels and if the PreCondition matches the following operations are done:
- Get the online description of object 0xF392(+module specific offset) 'Latched Manufacturer Warning Details' and all entries
 Check:
    (Name)
    BitSize
    DataType
    Rx / Tx mappable
    Default Data
    MinData
    Flags       </Action>
					<PostCondition>Error if
- mandatory object / entry is not defined
- an optional object exists and the entries are invalid
- Object / entry description does not match with the specification</PostCondition>
					<ProposalForSolution>- Define the missing objects
- correct object / entry description</ProposalForSolution>
					<References>
						<Reference Specification="ETG.5003.2011"></Reference>
					</References>
					<Mandatory>true</Mandatory>
				</Description>
				<TestStep Name="InitResult">
					<SetVariable Target="strResult">EmptyString</SetVariable>
				</TestStep>
				<TestStep Name="CheckIfOdAvailable">
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Mailbox</Value1>
							<Value2>false</Value2>
							<SkipCase Id="1">DuT does not support mailbox.</SkipCase>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Mailbox.CoE</Value1>
							<Value2>false</Value2>
							<SkipCase Id="2">DuT does not support CoE.</SkipCase>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Mailbox.CoE.SdoInfo</Value1>
							<Value2>false</Value2>
							<SkipCase Id="3">DuT does not support SDO Info.</SkipCase>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="InitAtLeastOneProfileMatch">
					<SetVariable Target="bAtLeastOneModuleMatch">false</SetVariable>
				</TestStep>
				<TestStep Name="GetCurrentProfileList">
					<SizeOf UInt32Var="u32Tmp">arrOnlineProfiles</SizeOf>
					<Compare>
						<Equal>
							<Value1>u32Tmp</Value1>
							<Value2>0</Value2>
							<CallTestFunction Name="GetCurrentProfileList">
								<Parameter>"online"</Parameter>
								<Parameter>"SafeOP"</Parameter>
								<OutParameter>arrOnlineProfiles</OutParameter>
							</CallTestFunction>
						</Equal>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>u32Tmp</Value1>
							<Value2>0</Value2>
							<WriteLine Id="4" Param0="arrOnlineProfiles" Level="Verbose">Use previously created profile list ({0})</WriteLine>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep>
					<SizeOf UInt32Var="u32Tmp">arrOnlineProfiles</SizeOf>
				</TestStep>
				<TestStep>
					<InitArray TargetArray="arrCurrentProfiles" Length="u32Tmp"></InitArray>
				</TestStep>
				<TestStep>
					<CopyArray>
						<SourceArray>arrOnlineProfiles</SourceArray>
						<DestinationArray>arrCurrentProfiles</DestinationArray>
						<Length>u32Tmp</Length>
					</CopyArray>
				</TestStep>
				<TestStep Name="IsProfileSupported">
					<CallTestFunction Name="DeviceAndModuleProfileDefined">
						<Parameter>arrCurrentProfiles</Parameter>
						<Parameter>5003</Parameter>
						<Parameter>2011</Parameter>
						<OutParameter>bAtLeastOneModuleMatch</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>bAtLeastOneModuleMatch</Value1>
							<Value2>false</Value2>
							<GotoStep>END</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="GetObjectIndexInclOffset">
					<SetVariable Target="u16ObjectIndexInclOffset">#xF392</SetVariable>
					<WriteLine Id="5" Param0="u16ObjectIndexInclOffset" Level="Verbose">ObjectIndex '0x{0:X}' (module independent)</WriteLine>
				</TestStep>
				<TestStep Name="LoadDeviceObjectDictionary">
					<Description Id="6" Level="Verbose">Load 'online' object dictionary for testing.</Description>
					<GetObjectDictionary Target="odDeviceObjectdictionary">
						<DictionaryType>Online</DictionaryType>
					</GetObjectDictionary>
					<RaiseErrorOnFailure Id="7">VerifyObject : failed to load online object dictionary.</RaiseErrorOnFailure>
				</TestStep>
				<TestStep Name="SetObjectRequiredLevel">
					<SetVariable Target="bObjectOrEntryRequiredLevel">1</SetVariable>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<CallTestFunction Name="IsEntryDefined">
								<Parameter>#xF382</Parameter>
								<Parameter>0</Parameter>
								<Parameter>online</Parameter>
								<OutParameter>bConditionTrue</OutParameter>
							</CallTestFunction>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bConditionTrue</Value1>
							<Value2>true</Value2>
							<SetVariable Target="bObjectOrEntryRequiredLevel">3</SetVariable>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>3</Value2>
							<WriteLine Id="8" Param0="u16ObjectIndexInclOffset" Param1="#xF382" Level="Verbose">0x{0:X4} 'Latched Manufacturer Warning Details' shall be available (the entry 0x{1:X4}.0 is available (online)</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>1</Value2>
							<WriteLine Id="9" Param0="u16ObjectIndexInclOffset" Param1="#xF382" Level="Verbose">0x{0:X4} 'Latched Manufacturer Warning Details' may be available (the entry 0x{1:X4}.0 is not available (online)</WriteLine>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CheckIfObjectExists">
					<GetObjectDescription SourceDictionary="odDeviceObjectdictionary" Index="u16ObjectIndexInclOffset" SubIndex="-1"></GetObjectDescription>
					<GotoOnSuccess>CallCheckObjectDescription</GotoOnSuccess>
				</TestStep>
				<TestStep Name="HandleNotExistingObject">
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>3</Value2>
							<SetVariable Target="strResult" Param0="u16ObjectIndexInclOffset">The object 0x{0:X4} 'Latched Manufacturer Warning Details' does not exists.</SetVariable>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>3</Value2>
							<WriteLine Id="10" Param0="u16ObjectIndexInclOffset" Level="Error">The object 0x{0:X4} 'Latched Manufacturer Warning Details' does not exists.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>2</Value2>
							<WriteLine Id="11" Param0="u16ObjectIndexInclOffset" Level="Warning">The object 0x{0:X4} 'Latched Manufacturer Warning Details' does not exists.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>1</Value2>
							<WriteLine Id="12" Param0="u16ObjectIndexInclOffset" Level="Output">The object 0x{0:X4} 'Latched Manufacturer Warning Details' does not exists.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>END</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CallCheckObjectDescription">
					<Description Id="13" Param0="u16ObjectIndexInclOffset" Level="Output">Verify the object description 0x{0:X4} 'Latched Manufacturer Warning Details'.</Description>
					<CallTestFunction Name="CheckObjectDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"online"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>"Latched Manufacturer Warning Details"</Parameter>
						<Parameter>null</Parameter>
						<Parameter>8</Parameter>
						<Parameter>-1</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<GotoStep>END</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="InitEntryBittOffset">
					<SetVariable Target="i32CurrentBitOffset">0</SetVariable>
				</TestStep>
				<TestStep Name="StartSi0">
					<Description Id="14" Level="Output">Start validate SubIndex0</Description>
					<WriteLine Id="15" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : Subindex '0x{0:X}.0'</WriteLine>
				</TestStep>
				<TestStep Name="CallSi0CheckEntryDescription">
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"online"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>0</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>null</Parameter>
						<Parameter>5</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>null</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>null</Parameter>
						<Parameter>null</Parameter>
						<Parameter>null</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>8</Parameter>
						<Parameter>i32CurrentBitOffset</Parameter>
						<Parameter>true</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="EndSi0">
					<SetVariable Target="i32CurrentBitOffset">16</SetVariable>
				</TestStep>
				<TestStep Name="InitProfileLoopCounter">
					<SetVariable Target="u32ProfileCounter">0</SetVariable>
				</TestStep>
				<TestStep Name="GetProfileArrayLength">
					<SizeOf UInt32Var="u32CurrentProfilesLength">arrCurrentProfiles</SizeOf>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="16" Param0="u32CurrentProfilesLength" Level="Verbose">'{0}' Profile(s) defined online.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>u32CurrentProfilesLength</Value1>
							<Value2>0</Value2>
							<SkipCase Id="17">Skip case | no profile defined.</SkipCase>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="ProfileLoopStart">
					<GetArrayItem SourceArray="arrCurrentProfiles" Target="strTmpString" Index="u32ProfileCounter"></GetArrayItem>
				</TestStep>
				<TestStep Name="CheckProfileInformationString">
					<Compare>
						<Equal>
							<Value1>strTmpString</Value1>
							<Value2>null</Value2>
							<RaiseError Id="18" Param0="u32ProfileCounter">Profile Info element [{0}] is null.</RaiseError>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>strTmpString</Value1>
							<Value2>EmptyString</Value2>
							<RaiseError Id="19" Param0="u32ProfileCounter">Profile Info element [{0}] is an empty string.</RaiseError>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="GetDeviceProfile">
					<CallTestFunction Name="GetDeviceProfile">
						<Parameter>strTmpString</Parameter>
						<OutParameter>uint16CurDeviceProfile</OutParameter>
					</CallTestFunction>
				</TestStep>
				<TestStep Name="GetModuleProfile">
					<CallTestFunction Name="GetModuleProfile">
						<Parameter>strTmpString</Parameter>
						<OutParameter>uint16CurModuleProfile</OutParameter>
					</CallTestFunction>
				</TestStep>
				<TestStep Name="GetSubModuleProfile">
					<CallTestFunction Name="GetSubModuleProfile">
						<Parameter>strTmpString</Parameter>
						<OutParameter>uint16CurSubModuleProfile</OutParameter>
					</CallTestFunction>
				</TestStep>
				<TestStep Name="DumpProfileInfo">
					<Description Id="20" Param0="uint16CurDeviceProfile" Param1="uint16CurModuleProfile" Param2="uint16CurSubModuleProfile" Param3="u32ProfileCounter" Level="Output">Module[{3}] : DeviceProfile '{0}' ; ModuleProfile '{1}' ; SubModuleProfile '{2}'</Description>
					<Compare>
						<Equal>
							<Value1>bIgnoreProfileID</Value1>
							<Value2>true</Value2>
							<GotoStep>IndicateThatAtleastOneModuleMatch</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CompareDeviceProfile">
					<Compare>
						<NotEqual>
							<Value1>uint16CurDeviceProfile</Value1>
							<Value2>5003</Value2>
							<WriteLine Id="21" Param0="uint16CurDeviceProfile" Level="Output">Skip Profile  (Test Device Profile '5003' != Cur Device Profile '{0}')</WriteLine>
						</NotEqual>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>uint16CurDeviceProfile</Value1>
							<Value2>5003</Value2>
							<GotoStep>ProfileLoopEnd</GotoStep>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep Name="CompareModuleProfile">
					<Compare>
						<NotEqual>
							<Value1>uint16CurModuleProfile</Value1>
							<Value2>2011</Value2>
							<WriteLine Id="22" Param0="uint16CurModuleProfile" Level="Output">Skip Profile  (Test Module Profile '2011' != Cur Module Profile '{0}')</WriteLine>
						</NotEqual>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>uint16CurModuleProfile</Value1>
							<Value2>2011</Value2>
							<GotoStep>ProfileLoopEnd</GotoStep>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep Name="CompareSubModuleProfile">
					<Compare>
						<NotEqual>
							<Value1>uint16CurSubModuleProfile</Value1>
							<Value2>0</Value2>
							<WriteLine Id="23" Param0="uint16CurSubModuleProfile" Level="Output">Skip Profile  (Test SubModule Profile '0' != Cur SubModule Profile '{0}')</WriteLine>
						</NotEqual>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>uint16CurSubModuleProfile</Value1>
							<Value2>0</Value2>
							<GotoStep>ProfileLoopEnd</GotoStep>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep Name="IndicateThatAtleastOneModuleMatch">
					<SetVariable Target="bAtLeastOneModuleMatch">true</SetVariable>
				</TestStep>
				<TestStep Name="StartSi1">
					<Description Id="24" Param0="1 + (u32ProfileCounter * 1)" Level="Output">Start validate SubIndex{0}</Description>
					<SetVariable Target="byteSubIndexInclOffset">1 + (u32ProfileCounter * 1)</SetVariable>
					<WriteLine Id="25" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Param2="byteSubIndexInclOffset" Level="Verbose">Module[{1}] : Subindex '0x{0:X}.{2}'</WriteLine>
				</TestStep>
				<TestStep Name="SetSi1RequiredLevel">
					<SetVariable Target="bObjectOrEntryRequiredLevel">1</SetVariable>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<CallTestFunction Name="IsEntryDefined">
								<Parameter>#xF382</Parameter>
								<Parameter>0</Parameter>
								<Parameter>online</Parameter>
								<OutParameter>bConditionTrue</OutParameter>
							</CallTestFunction>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bConditionTrue</Value1>
							<Value2>true</Value2>
							<SetVariable Target="bObjectOrEntryRequiredLevel">3</SetVariable>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>3</Value2>
							<WriteLine Id="26" Param0="u16ObjectIndexInclOffset" Param1="byteSubIndexInclOffset" Param2="#xF382" Level="Verbose">0x{0:X4}.{1} shall be available (the entry 0x{2:X4}.0 is available (online)</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>1</Value2>
							<WriteLine Id="27" Param0="u16ObjectIndexInclOffset" Param1="byteSubIndexInclOffset" Param2="#xF382" Level="Verbose">0x{0:X4}.{1} may be available (the entry 0x{2:X4}.0 is not available (online)</WriteLine>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CheckIfSi1Exists">
					<GetObjectDescription SourceDictionary="odDeviceObjectdictionary" Index="u16ObjectIndexInclOffset" SubIndex="byteSubIndexInclOffset">
						<Type>u16DataType</Type>
					</GetObjectDescription>
					<GotoOnFailure>HandleNotExistingSi1</GotoOnFailure>
				</TestStep>
				<TestStep>
					<Compare>
						<NotEqual>
							<Value1>u16DataType</Value1>
							<Value2>0</Value2>
							<GotoStep>CallSi1CheckEntryDescription</GotoStep>
						</NotEqual>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>1</Value2>
							<WriteLine Id="28" Param0="u16ObjectIndexInclOffset" Level="Verbose">The entry 0x{0:X4}.1 is defined as a padding entry.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>3</Value2>
							<WriteLine Id="29" Param0="u16ObjectIndexInclOffset" Level="Error">The entry 0x{0:X4}.1 shall not defined as a padding entry.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>3</Value2>
							<SetVariable Target="strResult" Param0="u16ObjectIndexInclOffset">The entry 0x{0:X4}.1 shall not defined as a padding entry.</SetVariable>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>EndSi1</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="HandleNotExistingSi1">
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>3</Value2>
							<SetVariable Target="strResult" Param0="u16ObjectIndexInclOffset" Param1="byteSubIndexInclOffset">The entry 0x{0:X4}.{1} does not exists.</SetVariable>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>3</Value2>
							<WriteLine Id="30" Param0="u16ObjectIndexInclOffset" Param1="byteSubIndexInclOffset" Level="Error">The entry 0x{0:X4}.{1} does not exists.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>3</Value2>
							<GotoStep>EndSi1</GotoStep>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="31" Param0="u16ObjectIndexInclOffset" Param1="byteSubIndexInclOffset" Level="Output">The entry 0x{0:X4}.{1} does not exists.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>EndSi1</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CallSi1CheckEntryDescription">
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"online"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>byteSubIndexInclOffset</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>null</Parameter>
						<Parameter>7</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>null</Parameter>
						<Parameter>T</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>32</Parameter>
						<Parameter>i32CurrentBitOffset</Parameter>
						<Parameter>true</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="EndSi1">
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>3</Value2>
							<SetVariable Target="i32CurrentBitOffset">i32CurrentBitOffset + 32</SetVariable>
						</Equal>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>3</Value2>
							<SetVariable Target="i32CurrentBitOffset">-1</SetVariable>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep Name="ProfileLoopEnd">
					<Compare>
						<Equal>
							<Value1>bAtLeastOneModuleMatch</Value1>
							<Value2>false</Value2>
							<GotoStep>HandleAbortTestCaseOnFirstError</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="HandleAbortTestCaseOnFirstError">
					<Compare>
						<Equal>
							<Value1>bAbortTestCaseOnFirstError</Value1>
							<Value2>false</Value2>
							<GotoStep>ProfileLoopIncrement</GotoStep>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>strResult</Value1>
							<Value2>EmptyString</Value2>
							<GotoStep>ProfileLoopIncrement</GotoStep>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="32" Level="Output">Object verification for all following modules abort because an error was already detected for the current module.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>END</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="ProfileLoopIncrement">
					<SetVariable Target="u32ProfileCounter">u32ProfileCounter + 1</SetVariable>
					<Compare>
						<Greater>
							<Value1>u32CurrentProfilesLength</Value1>
							<Value2>u32ProfileCounter</Value2>
							<GotoStep>ProfileLoopStart</GotoStep>
						</Greater>
					</Compare>
				</TestStep>
				<TestStep Name="END">
					<Compare>
						<NotEqual>
							<Value1>bAtLeastOneModuleMatch</Value1>
							<Value2>true</Value2>
							<SkipCase Id="33">SKIP TEST(no module/channel supports the current profile)</SkipCase>
						</NotEqual>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bDEBUG</Value1>
							<Value2>true</Value2>
							<WriteLine Id="34" Param0="strResult" Level="Verbose">DEBUG | Result : '{0}'.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>strResult</Value1>
							<Value2>EmptyString</Value2>
							<ReturnSuccess Id="35">Test succeed</ReturnSuccess>
						</Equal>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>strResult</Value1>
							<Value2>EmptyString</Value2>
							<RaiseError Id="36"></RaiseError>
						</NotEqual>
					</Compare>
				</TestStep>
			</TestCase>
			<TestCase Name="offline | 0xF393 (Latched Device Error Details)" CaseId="25">
				<Description>
					<PreCondition>- The device profile is 5003
- The module profile is 2011
- The submodule profile is 0</PreCondition>
					<Action>- Iterate over all offline defined modules/channels and if the PreCondition matches the following operations are done:
- Get the offline description of object 0xF393(+module specific offset) 'Latched Device Error Details' and all entries
 Check:
    (Name)
    BitSize
    DataType
    Rx / Tx mappable
    Default Data
    MinData
    Flags       </Action>
					<PostCondition>Error if
- mandatory object / entry is not defined
- an optional object exists and the entries are invalid
- Object / entry description does not match with the specification</PostCondition>
					<ProposalForSolution>- Define the missing objects
- correct object / entry description</ProposalForSolution>
					<References>
						<Reference Specification="ETG.5003.2011"></Reference>
					</References>
					<Mandatory>true</Mandatory>
				</Description>
				<TestStep Name="InitResult">
					<SetVariable Target="strResult">EmptyString</SetVariable>
				</TestStep>
				<TestStep Name="CheckIfOdAvailable">
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Mailbox</Value1>
							<Value2>false</Value2>
							<SkipCase Id="1">DuT does not support mailbox.</SkipCase>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Mailbox.CoE</Value1>
							<Value2>false</Value2>
							<SkipCase Id="2">DuT does not support CoE.</SkipCase>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep>
					<GetObjectDictionary Target="odDeviceObjectdictionary">
						<DictionaryType>Offline</DictionaryType>
					</GetObjectDictionary>
					<SkipOnFailure Id="3">No offline object dictionary defined.</SkipOnFailure>
				</TestStep>
				<TestStep>
					<GetObjectList Count="u32Tmp" Target="odDeviceObjectdictionaryList" SourceDict="odDeviceObjectdictionary"></GetObjectList>
					<Compare>
						<Equal>
							<Value1>u32Tmp</Value1>
							<Value2>0</Value2>
							<SkipCase Id="4">No offline object dictionary defined.</SkipCase>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="InitAtLeastOneProfileMatch">
					<SetVariable Target="bAtLeastOneModuleMatch">false</SetVariable>
				</TestStep>
				<TestStep Name="GetCurrentProfileList">
					<SizeOf UInt32Var="u32Tmp">arrOfflineProfiles</SizeOf>
					<Compare>
						<Equal>
							<Value1>u32Tmp</Value1>
							<Value2>0</Value2>
							<CallTestFunction Name="GetCurrentProfileList">
								<Parameter>"offline"</Parameter>
								<Parameter>"SafeOP"</Parameter>
								<OutParameter>arrOfflineProfiles</OutParameter>
							</CallTestFunction>
						</Equal>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>u32Tmp</Value1>
							<Value2>0</Value2>
							<WriteLine Id="5" Param0="arrOfflineProfiles" Level="Verbose">Use previously created profile list ({0})</WriteLine>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep>
					<SizeOf UInt32Var="u32Tmp">arrOfflineProfiles</SizeOf>
				</TestStep>
				<TestStep>
					<InitArray TargetArray="arrCurrentProfiles" Length="u32Tmp"></InitArray>
				</TestStep>
				<TestStep>
					<CopyArray>
						<SourceArray>arrOfflineProfiles</SourceArray>
						<DestinationArray>arrCurrentProfiles</DestinationArray>
						<Length>u32Tmp</Length>
					</CopyArray>
				</TestStep>
				<TestStep Name="IsProfileSupported">
					<CallTestFunction Name="DeviceAndModuleProfileDefined">
						<Parameter>arrCurrentProfiles</Parameter>
						<Parameter>5003</Parameter>
						<Parameter>2011</Parameter>
						<OutParameter>bAtLeastOneModuleMatch</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>bAtLeastOneModuleMatch</Value1>
							<Value2>false</Value2>
							<GotoStep>END</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="GetObjectIndexInclOffset">
					<SetVariable Target="u16ObjectIndexInclOffset">#xF393</SetVariable>
					<WriteLine Id="6" Param0="u16ObjectIndexInclOffset" Level="Verbose">ObjectIndex '0x{0:X}' (module independent)</WriteLine>
				</TestStep>
				<TestStep Name="LoadDeviceObjectDictionary">
					<Description Id="7" Level="Verbose">Load 'offline' object dictionary for testing.</Description>
					<GetObjectDictionary Target="odDeviceObjectdictionary">
						<DictionaryType>Offline</DictionaryType>
					</GetObjectDictionary>
					<RaiseErrorOnFailure Id="8">VerifyObject : failed to load offline object dictionary.</RaiseErrorOnFailure>
				</TestStep>
				<TestStep Name="CallCheckObjectDescription">
					<Description Id="9" Param0="u16ObjectIndexInclOffset" Level="Output">Verify the object description 0x{0:X4} 'Latched Device Error Details'.</Description>
					<CallTestFunction Name="CheckObjectDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"offline"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>"Latched Device Error Details"</Parameter>
						<Parameter>null</Parameter>
						<Parameter>8</Parameter>
						<Parameter>-1</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<GotoStep>END</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="InitEntryBittOffset">
					<SetVariable Target="i32CurrentBitOffset">0</SetVariable>
				</TestStep>
				<TestStep Name="StartSi0">
					<Description Id="10" Level="Output">Start validate SubIndex0</Description>
					<WriteLine Id="11" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : Subindex '0x{0:X}.0'</WriteLine>
				</TestStep>
				<TestStep Name="CallSi0CheckEntryDescription">
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"offline"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>0</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>null</Parameter>
						<Parameter>5</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>null</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>null</Parameter>
						<Parameter>null</Parameter>
						<Parameter>null</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>8</Parameter>
						<Parameter>i32CurrentBitOffset</Parameter>
						<Parameter>true</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="EndSi0">
					<SetVariable Target="i32CurrentBitOffset">16</SetVariable>
				</TestStep>
				<TestStep Name="InitProfileLoopCounter">
					<SetVariable Target="u32ProfileCounter">0</SetVariable>
				</TestStep>
				<TestStep Name="GetProfileArrayLength">
					<SizeOf UInt32Var="u32CurrentProfilesLength">arrCurrentProfiles</SizeOf>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="12" Param0="u32CurrentProfilesLength" Level="Verbose">'{0}' Profile(s) defined offline.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>u32CurrentProfilesLength</Value1>
							<Value2>0</Value2>
							<SkipCase Id="13">Skip case | no profile defined.</SkipCase>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="ProfileLoopStart">
					<GetArrayItem SourceArray="arrCurrentProfiles" Target="strTmpString" Index="u32ProfileCounter"></GetArrayItem>
				</TestStep>
				<TestStep Name="CheckProfileInformationString">
					<Compare>
						<Equal>
							<Value1>strTmpString</Value1>
							<Value2>null</Value2>
							<RaiseError Id="14" Param0="u32ProfileCounter">Profile Info element [{0}] is null.</RaiseError>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>strTmpString</Value1>
							<Value2>EmptyString</Value2>
							<RaiseError Id="15" Param0="u32ProfileCounter">Profile Info element [{0}] is an empty string.</RaiseError>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="GetDeviceProfile">
					<CallTestFunction Name="GetDeviceProfile">
						<Parameter>strTmpString</Parameter>
						<OutParameter>uint16CurDeviceProfile</OutParameter>
					</CallTestFunction>
				</TestStep>
				<TestStep Name="GetModuleProfile">
					<CallTestFunction Name="GetModuleProfile">
						<Parameter>strTmpString</Parameter>
						<OutParameter>uint16CurModuleProfile</OutParameter>
					</CallTestFunction>
				</TestStep>
				<TestStep Name="GetSubModuleProfile">
					<CallTestFunction Name="GetSubModuleProfile">
						<Parameter>strTmpString</Parameter>
						<OutParameter>uint16CurSubModuleProfile</OutParameter>
					</CallTestFunction>
				</TestStep>
				<TestStep Name="DumpProfileInfo">
					<Description Id="16" Param0="uint16CurDeviceProfile" Param1="uint16CurModuleProfile" Param2="uint16CurSubModuleProfile" Param3="u32ProfileCounter" Level="Output">Module[{3}] : DeviceProfile '{0}' ; ModuleProfile '{1}' ; SubModuleProfile '{2}'</Description>
					<Compare>
						<Equal>
							<Value1>bIgnoreProfileID</Value1>
							<Value2>true</Value2>
							<GotoStep>IndicateThatAtleastOneModuleMatch</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CompareDeviceProfile">
					<Compare>
						<NotEqual>
							<Value1>uint16CurDeviceProfile</Value1>
							<Value2>5003</Value2>
							<WriteLine Id="17" Param0="uint16CurDeviceProfile" Level="Output">Skip Profile  (Test Device Profile '5003' != Cur Device Profile '{0}')</WriteLine>
						</NotEqual>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>uint16CurDeviceProfile</Value1>
							<Value2>5003</Value2>
							<GotoStep>ProfileLoopEnd</GotoStep>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep Name="CompareModuleProfile">
					<Compare>
						<NotEqual>
							<Value1>uint16CurModuleProfile</Value1>
							<Value2>2011</Value2>
							<WriteLine Id="18" Param0="uint16CurModuleProfile" Level="Output">Skip Profile  (Test Module Profile '2011' != Cur Module Profile '{0}')</WriteLine>
						</NotEqual>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>uint16CurModuleProfile</Value1>
							<Value2>2011</Value2>
							<GotoStep>ProfileLoopEnd</GotoStep>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep Name="CompareSubModuleProfile">
					<Compare>
						<NotEqual>
							<Value1>uint16CurSubModuleProfile</Value1>
							<Value2>0</Value2>
							<WriteLine Id="19" Param0="uint16CurSubModuleProfile" Level="Output">Skip Profile  (Test SubModule Profile '0' != Cur SubModule Profile '{0}')</WriteLine>
						</NotEqual>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>uint16CurSubModuleProfile</Value1>
							<Value2>0</Value2>
							<GotoStep>ProfileLoopEnd</GotoStep>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep Name="IndicateThatAtleastOneModuleMatch">
					<SetVariable Target="bAtLeastOneModuleMatch">true</SetVariable>
				</TestStep>
				<TestStep Name="StartSi1">
					<Description Id="20" Param0="1 + (u32ProfileCounter * 1)" Level="Output">Start validate SubIndex{0}</Description>
					<SetVariable Target="byteSubIndexInclOffset">1 + (u32ProfileCounter * 1)</SetVariable>
					<WriteLine Id="21" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Param2="byteSubIndexInclOffset" Level="Verbose">Module[{1}] : Subindex '0x{0:X}.{2}'</WriteLine>
				</TestStep>
				<TestStep Name="CallSi1CheckEntryDescription">
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"offline"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>byteSubIndexInclOffset</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>null</Parameter>
						<Parameter>7</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>null</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>32</Parameter>
						<Parameter>i32CurrentBitOffset</Parameter>
						<Parameter>true</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="EndSi1">
					<SetVariable Target="i32CurrentBitOffset">i32CurrentBitOffset + 32</SetVariable>
				</TestStep>
				<TestStep Name="ProfileLoopEnd">
					<Compare>
						<Equal>
							<Value1>bAtLeastOneModuleMatch</Value1>
							<Value2>false</Value2>
							<GotoStep>HandleAbortTestCaseOnFirstError</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="HandleAbortTestCaseOnFirstError">
					<Compare>
						<Equal>
							<Value1>bAbortTestCaseOnFirstError</Value1>
							<Value2>false</Value2>
							<GotoStep>ProfileLoopIncrement</GotoStep>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>strResult</Value1>
							<Value2>EmptyString</Value2>
							<GotoStep>ProfileLoopIncrement</GotoStep>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="22" Level="Output">Object verification for all following modules abort because an error was already detected for the current module.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>END</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="ProfileLoopIncrement">
					<SetVariable Target="u32ProfileCounter">u32ProfileCounter + 1</SetVariable>
					<Compare>
						<Greater>
							<Value1>u32CurrentProfilesLength</Value1>
							<Value2>u32ProfileCounter</Value2>
							<GotoStep>ProfileLoopStart</GotoStep>
						</Greater>
					</Compare>
				</TestStep>
				<TestStep Name="END">
					<Compare>
						<NotEqual>
							<Value1>bAtLeastOneModuleMatch</Value1>
							<Value2>true</Value2>
							<SkipCase Id="23">SKIP TEST(no module/channel supports the current profile)</SkipCase>
						</NotEqual>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bDEBUG</Value1>
							<Value2>true</Value2>
							<WriteLine Id="24" Param0="strResult" Level="Verbose">DEBUG | Result : '{0}'.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>strResult</Value1>
							<Value2>EmptyString</Value2>
							<ReturnSuccess Id="25">Test succeed</ReturnSuccess>
						</Equal>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>strResult</Value1>
							<Value2>EmptyString</Value2>
							<RaiseError Id="26"></RaiseError>
						</NotEqual>
					</Compare>
				</TestStep>
			</TestCase>
			<TestCase Name="online | 0xF393 (Latched Device Error Details)" CaseId="26">
				<Description>
					<PreCondition>- The device profile is 5003
- The module profile is 2011
- The submodule profile is 0</PreCondition>
					<Action>- Iterate over all online defined modules/channels and if the PreCondition matches the following operations are done:
- Get the online description of object 0xF393(+module specific offset) 'Latched Device Error Details' and all entries
 Check:
    (Name)
    BitSize
    DataType
    Rx / Tx mappable
    Default Data
    MinData
    Flags       </Action>
					<PostCondition>Error if
- mandatory object / entry is not defined
- an optional object exists and the entries are invalid
- Object / entry description does not match with the specification</PostCondition>
					<ProposalForSolution>- Define the missing objects
- correct object / entry description</ProposalForSolution>
					<References>
						<Reference Specification="ETG.5003.2011"></Reference>
					</References>
					<Mandatory>true</Mandatory>
				</Description>
				<TestStep Name="InitResult">
					<SetVariable Target="strResult">EmptyString</SetVariable>
				</TestStep>
				<TestStep Name="CheckIfOdAvailable">
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Mailbox</Value1>
							<Value2>false</Value2>
							<SkipCase Id="1">DuT does not support mailbox.</SkipCase>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Mailbox.CoE</Value1>
							<Value2>false</Value2>
							<SkipCase Id="2">DuT does not support CoE.</SkipCase>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Mailbox.CoE.SdoInfo</Value1>
							<Value2>false</Value2>
							<SkipCase Id="3">DuT does not support SDO Info.</SkipCase>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="InitAtLeastOneProfileMatch">
					<SetVariable Target="bAtLeastOneModuleMatch">false</SetVariable>
				</TestStep>
				<TestStep Name="GetCurrentProfileList">
					<SizeOf UInt32Var="u32Tmp">arrOnlineProfiles</SizeOf>
					<Compare>
						<Equal>
							<Value1>u32Tmp</Value1>
							<Value2>0</Value2>
							<CallTestFunction Name="GetCurrentProfileList">
								<Parameter>"online"</Parameter>
								<Parameter>"SafeOP"</Parameter>
								<OutParameter>arrOnlineProfiles</OutParameter>
							</CallTestFunction>
						</Equal>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>u32Tmp</Value1>
							<Value2>0</Value2>
							<WriteLine Id="4" Param0="arrOnlineProfiles" Level="Verbose">Use previously created profile list ({0})</WriteLine>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep>
					<SizeOf UInt32Var="u32Tmp">arrOnlineProfiles</SizeOf>
				</TestStep>
				<TestStep>
					<InitArray TargetArray="arrCurrentProfiles" Length="u32Tmp"></InitArray>
				</TestStep>
				<TestStep>
					<CopyArray>
						<SourceArray>arrOnlineProfiles</SourceArray>
						<DestinationArray>arrCurrentProfiles</DestinationArray>
						<Length>u32Tmp</Length>
					</CopyArray>
				</TestStep>
				<TestStep Name="IsProfileSupported">
					<CallTestFunction Name="DeviceAndModuleProfileDefined">
						<Parameter>arrCurrentProfiles</Parameter>
						<Parameter>5003</Parameter>
						<Parameter>2011</Parameter>
						<OutParameter>bAtLeastOneModuleMatch</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>bAtLeastOneModuleMatch</Value1>
							<Value2>false</Value2>
							<GotoStep>END</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="GetObjectIndexInclOffset">
					<SetVariable Target="u16ObjectIndexInclOffset">#xF393</SetVariable>
					<WriteLine Id="5" Param0="u16ObjectIndexInclOffset" Level="Verbose">ObjectIndex '0x{0:X}' (module independent)</WriteLine>
				</TestStep>
				<TestStep Name="LoadDeviceObjectDictionary">
					<Description Id="6" Level="Verbose">Load 'online' object dictionary for testing.</Description>
					<GetObjectDictionary Target="odDeviceObjectdictionary">
						<DictionaryType>Online</DictionaryType>
					</GetObjectDictionary>
					<RaiseErrorOnFailure Id="7">VerifyObject : failed to load online object dictionary.</RaiseErrorOnFailure>
				</TestStep>
				<TestStep Name="CallCheckObjectDescription">
					<Description Id="8" Param0="u16ObjectIndexInclOffset" Level="Output">Verify the object description 0x{0:X4} 'Latched Device Error Details'.</Description>
					<CallTestFunction Name="CheckObjectDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"online"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>"Latched Device Error Details"</Parameter>
						<Parameter>null</Parameter>
						<Parameter>8</Parameter>
						<Parameter>-1</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<GotoStep>END</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="InitEntryBittOffset">
					<SetVariable Target="i32CurrentBitOffset">0</SetVariable>
				</TestStep>
				<TestStep Name="StartSi0">
					<Description Id="9" Level="Output">Start validate SubIndex0</Description>
					<WriteLine Id="10" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : Subindex '0x{0:X}.0'</WriteLine>
				</TestStep>
				<TestStep Name="CallSi0CheckEntryDescription">
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"online"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>0</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>null</Parameter>
						<Parameter>5</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>null</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>null</Parameter>
						<Parameter>null</Parameter>
						<Parameter>null</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>8</Parameter>
						<Parameter>i32CurrentBitOffset</Parameter>
						<Parameter>true</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="EndSi0">
					<SetVariable Target="i32CurrentBitOffset">16</SetVariable>
				</TestStep>
				<TestStep Name="InitProfileLoopCounter">
					<SetVariable Target="u32ProfileCounter">0</SetVariable>
				</TestStep>
				<TestStep Name="GetProfileArrayLength">
					<SizeOf UInt32Var="u32CurrentProfilesLength">arrCurrentProfiles</SizeOf>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="11" Param0="u32CurrentProfilesLength" Level="Verbose">'{0}' Profile(s) defined online.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>u32CurrentProfilesLength</Value1>
							<Value2>0</Value2>
							<SkipCase Id="12">Skip case | no profile defined.</SkipCase>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="ProfileLoopStart">
					<GetArrayItem SourceArray="arrCurrentProfiles" Target="strTmpString" Index="u32ProfileCounter"></GetArrayItem>
				</TestStep>
				<TestStep Name="CheckProfileInformationString">
					<Compare>
						<Equal>
							<Value1>strTmpString</Value1>
							<Value2>null</Value2>
							<RaiseError Id="13" Param0="u32ProfileCounter">Profile Info element [{0}] is null.</RaiseError>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>strTmpString</Value1>
							<Value2>EmptyString</Value2>
							<RaiseError Id="14" Param0="u32ProfileCounter">Profile Info element [{0}] is an empty string.</RaiseError>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="GetDeviceProfile">
					<CallTestFunction Name="GetDeviceProfile">
						<Parameter>strTmpString</Parameter>
						<OutParameter>uint16CurDeviceProfile</OutParameter>
					</CallTestFunction>
				</TestStep>
				<TestStep Name="GetModuleProfile">
					<CallTestFunction Name="GetModuleProfile">
						<Parameter>strTmpString</Parameter>
						<OutParameter>uint16CurModuleProfile</OutParameter>
					</CallTestFunction>
				</TestStep>
				<TestStep Name="GetSubModuleProfile">
					<CallTestFunction Name="GetSubModuleProfile">
						<Parameter>strTmpString</Parameter>
						<OutParameter>uint16CurSubModuleProfile</OutParameter>
					</CallTestFunction>
				</TestStep>
				<TestStep Name="DumpProfileInfo">
					<Description Id="15" Param0="uint16CurDeviceProfile" Param1="uint16CurModuleProfile" Param2="uint16CurSubModuleProfile" Param3="u32ProfileCounter" Level="Output">Module[{3}] : DeviceProfile '{0}' ; ModuleProfile '{1}' ; SubModuleProfile '{2}'</Description>
					<Compare>
						<Equal>
							<Value1>bIgnoreProfileID</Value1>
							<Value2>true</Value2>
							<GotoStep>IndicateThatAtleastOneModuleMatch</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CompareDeviceProfile">
					<Compare>
						<NotEqual>
							<Value1>uint16CurDeviceProfile</Value1>
							<Value2>5003</Value2>
							<WriteLine Id="16" Param0="uint16CurDeviceProfile" Level="Output">Skip Profile  (Test Device Profile '5003' != Cur Device Profile '{0}')</WriteLine>
						</NotEqual>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>uint16CurDeviceProfile</Value1>
							<Value2>5003</Value2>
							<GotoStep>ProfileLoopEnd</GotoStep>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep Name="CompareModuleProfile">
					<Compare>
						<NotEqual>
							<Value1>uint16CurModuleProfile</Value1>
							<Value2>2011</Value2>
							<WriteLine Id="17" Param0="uint16CurModuleProfile" Level="Output">Skip Profile  (Test Module Profile '2011' != Cur Module Profile '{0}')</WriteLine>
						</NotEqual>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>uint16CurModuleProfile</Value1>
							<Value2>2011</Value2>
							<GotoStep>ProfileLoopEnd</GotoStep>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep Name="CompareSubModuleProfile">
					<Compare>
						<NotEqual>
							<Value1>uint16CurSubModuleProfile</Value1>
							<Value2>0</Value2>
							<WriteLine Id="18" Param0="uint16CurSubModuleProfile" Level="Output">Skip Profile  (Test SubModule Profile '0' != Cur SubModule Profile '{0}')</WriteLine>
						</NotEqual>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>uint16CurSubModuleProfile</Value1>
							<Value2>0</Value2>
							<GotoStep>ProfileLoopEnd</GotoStep>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep Name="IndicateThatAtleastOneModuleMatch">
					<SetVariable Target="bAtLeastOneModuleMatch">true</SetVariable>
				</TestStep>
				<TestStep Name="StartSi1">
					<Description Id="19" Param0="1 + (u32ProfileCounter * 1)" Level="Output">Start validate SubIndex{0}</Description>
					<SetVariable Target="byteSubIndexInclOffset">1 + (u32ProfileCounter * 1)</SetVariable>
					<WriteLine Id="20" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Param2="byteSubIndexInclOffset" Level="Verbose">Module[{1}] : Subindex '0x{0:X}.{2}'</WriteLine>
				</TestStep>
				<TestStep Name="CallSi1CheckEntryDescription">
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"online"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>byteSubIndexInclOffset</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>null</Parameter>
						<Parameter>7</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>null</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>32</Parameter>
						<Parameter>i32CurrentBitOffset</Parameter>
						<Parameter>true</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="EndSi1">
					<SetVariable Target="i32CurrentBitOffset">i32CurrentBitOffset + 32</SetVariable>
				</TestStep>
				<TestStep Name="ProfileLoopEnd">
					<Compare>
						<Equal>
							<Value1>bAtLeastOneModuleMatch</Value1>
							<Value2>false</Value2>
							<GotoStep>HandleAbortTestCaseOnFirstError</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="HandleAbortTestCaseOnFirstError">
					<Compare>
						<Equal>
							<Value1>bAbortTestCaseOnFirstError</Value1>
							<Value2>false</Value2>
							<GotoStep>ProfileLoopIncrement</GotoStep>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>strResult</Value1>
							<Value2>EmptyString</Value2>
							<GotoStep>ProfileLoopIncrement</GotoStep>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="21" Level="Output">Object verification for all following modules abort because an error was already detected for the current module.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>END</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="ProfileLoopIncrement">
					<SetVariable Target="u32ProfileCounter">u32ProfileCounter + 1</SetVariable>
					<Compare>
						<Greater>
							<Value1>u32CurrentProfilesLength</Value1>
							<Value2>u32ProfileCounter</Value2>
							<GotoStep>ProfileLoopStart</GotoStep>
						</Greater>
					</Compare>
				</TestStep>
				<TestStep Name="END">
					<Compare>
						<NotEqual>
							<Value1>bAtLeastOneModuleMatch</Value1>
							<Value2>true</Value2>
							<SkipCase Id="22">SKIP TEST(no module/channel supports the current profile)</SkipCase>
						</NotEqual>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bDEBUG</Value1>
							<Value2>true</Value2>
							<WriteLine Id="23" Param0="strResult" Level="Verbose">DEBUG | Result : '{0}'.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>strResult</Value1>
							<Value2>EmptyString</Value2>
							<ReturnSuccess Id="24">Test succeed</ReturnSuccess>
						</Equal>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>strResult</Value1>
							<Value2>EmptyString</Value2>
							<RaiseError Id="25"></RaiseError>
						</NotEqual>
					</Compare>
				</TestStep>
			</TestCase>
			<TestCase Name="offline | 0xF394 (Latched Manufacturer Error Details)" CaseId="27">
				<Description>
					<PreCondition>- The device profile is 5003
- The module profile is 2011
- The submodule profile is 0</PreCondition>
					<Action>- Iterate over all offline defined modules/channels and if the PreCondition matches the following operations are done:
- Get the offline description of object 0xF394(+module specific offset) 'Latched Manufacturer Error Details' and all entries
 Check:
    (Name)
    BitSize
    DataType
    Rx / Tx mappable
    Default Data
    MinData
    Flags       </Action>
					<PostCondition>Error if
- mandatory object / entry is not defined
- an optional object exists and the entries are invalid
- Object / entry description does not match with the specification</PostCondition>
					<ProposalForSolution>- Define the missing objects
- correct object / entry description</ProposalForSolution>
					<References>
						<Reference Specification="ETG.5003.2011"></Reference>
					</References>
					<Mandatory>true</Mandatory>
				</Description>
				<TestStep Name="InitResult">
					<SetVariable Target="strResult">EmptyString</SetVariable>
				</TestStep>
				<TestStep Name="CheckIfOdAvailable">
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Mailbox</Value1>
							<Value2>false</Value2>
							<SkipCase Id="1">DuT does not support mailbox.</SkipCase>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Mailbox.CoE</Value1>
							<Value2>false</Value2>
							<SkipCase Id="2">DuT does not support CoE.</SkipCase>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep>
					<GetObjectDictionary Target="odDeviceObjectdictionary">
						<DictionaryType>Offline</DictionaryType>
					</GetObjectDictionary>
					<SkipOnFailure Id="3">No offline object dictionary defined.</SkipOnFailure>
				</TestStep>
				<TestStep>
					<GetObjectList Count="u32Tmp" Target="odDeviceObjectdictionaryList" SourceDict="odDeviceObjectdictionary"></GetObjectList>
					<Compare>
						<Equal>
							<Value1>u32Tmp</Value1>
							<Value2>0</Value2>
							<SkipCase Id="4">No offline object dictionary defined.</SkipCase>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="InitAtLeastOneProfileMatch">
					<SetVariable Target="bAtLeastOneModuleMatch">false</SetVariable>
				</TestStep>
				<TestStep Name="GetCurrentProfileList">
					<SizeOf UInt32Var="u32Tmp">arrOfflineProfiles</SizeOf>
					<Compare>
						<Equal>
							<Value1>u32Tmp</Value1>
							<Value2>0</Value2>
							<CallTestFunction Name="GetCurrentProfileList">
								<Parameter>"offline"</Parameter>
								<Parameter>"SafeOP"</Parameter>
								<OutParameter>arrOfflineProfiles</OutParameter>
							</CallTestFunction>
						</Equal>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>u32Tmp</Value1>
							<Value2>0</Value2>
							<WriteLine Id="5" Param0="arrOfflineProfiles" Level="Verbose">Use previously created profile list ({0})</WriteLine>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep>
					<SizeOf UInt32Var="u32Tmp">arrOfflineProfiles</SizeOf>
				</TestStep>
				<TestStep>
					<InitArray TargetArray="arrCurrentProfiles" Length="u32Tmp"></InitArray>
				</TestStep>
				<TestStep>
					<CopyArray>
						<SourceArray>arrOfflineProfiles</SourceArray>
						<DestinationArray>arrCurrentProfiles</DestinationArray>
						<Length>u32Tmp</Length>
					</CopyArray>
				</TestStep>
				<TestStep Name="IsProfileSupported">
					<CallTestFunction Name="DeviceAndModuleProfileDefined">
						<Parameter>arrCurrentProfiles</Parameter>
						<Parameter>5003</Parameter>
						<Parameter>2011</Parameter>
						<OutParameter>bAtLeastOneModuleMatch</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>bAtLeastOneModuleMatch</Value1>
							<Value2>false</Value2>
							<GotoStep>END</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="GetObjectIndexInclOffset">
					<SetVariable Target="u16ObjectIndexInclOffset">#xF394</SetVariable>
					<WriteLine Id="6" Param0="u16ObjectIndexInclOffset" Level="Verbose">ObjectIndex '0x{0:X}' (module independent)</WriteLine>
				</TestStep>
				<TestStep Name="LoadDeviceObjectDictionary">
					<Description Id="7" Level="Verbose">Load 'offline' object dictionary for testing.</Description>
					<GetObjectDictionary Target="odDeviceObjectdictionary">
						<DictionaryType>Offline</DictionaryType>
					</GetObjectDictionary>
					<RaiseErrorOnFailure Id="8">VerifyObject : failed to load offline object dictionary.</RaiseErrorOnFailure>
				</TestStep>
				<TestStep Name="SetObjectRequiredLevel">
					<SetVariable Target="bObjectOrEntryRequiredLevel">1</SetVariable>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<CallTestFunction Name="IsEntryDefined">
								<Parameter>#xF384</Parameter>
								<Parameter>0</Parameter>
								<Parameter>offline</Parameter>
								<OutParameter>bConditionTrue</OutParameter>
							</CallTestFunction>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bConditionTrue</Value1>
							<Value2>true</Value2>
							<SetVariable Target="bObjectOrEntryRequiredLevel">3</SetVariable>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>3</Value2>
							<WriteLine Id="9" Param0="u16ObjectIndexInclOffset" Param1="#xF384" Level="Verbose">0x{0:X4} 'Latched Manufacturer Error Details' shall be available (the entry 0x{1:X4}.0 is available (offline)</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>1</Value2>
							<WriteLine Id="10" Param0="u16ObjectIndexInclOffset" Param1="#xF384" Level="Verbose">0x{0:X4} 'Latched Manufacturer Error Details' may be available (the entry 0x{1:X4}.0 is not available (offline)</WriteLine>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CheckIfObjectExists">
					<GetObjectDescription SourceDictionary="odDeviceObjectdictionary" Index="u16ObjectIndexInclOffset" SubIndex="-1"></GetObjectDescription>
					<GotoOnSuccess>CallCheckObjectDescription</GotoOnSuccess>
				</TestStep>
				<TestStep Name="HandleNotExistingObject">
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>3</Value2>
							<SetVariable Target="strResult" Param0="u16ObjectIndexInclOffset">The object 0x{0:X4} 'Latched Manufacturer Error Details' does not exists.</SetVariable>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>3</Value2>
							<WriteLine Id="11" Param0="u16ObjectIndexInclOffset" Level="Error">The object 0x{0:X4} 'Latched Manufacturer Error Details' does not exists.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>2</Value2>
							<WriteLine Id="12" Param0="u16ObjectIndexInclOffset" Level="Warning">The object 0x{0:X4} 'Latched Manufacturer Error Details' does not exists.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>1</Value2>
							<WriteLine Id="13" Param0="u16ObjectIndexInclOffset" Level="Output">The object 0x{0:X4} 'Latched Manufacturer Error Details' does not exists.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>END</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CallCheckObjectDescription">
					<Description Id="14" Param0="u16ObjectIndexInclOffset" Level="Output">Verify the object description 0x{0:X4} 'Latched Manufacturer Error Details'.</Description>
					<CallTestFunction Name="CheckObjectDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"offline"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>"Latched Manufacturer Error Details"</Parameter>
						<Parameter>null</Parameter>
						<Parameter>8</Parameter>
						<Parameter>-1</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<GotoStep>END</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="InitEntryBittOffset">
					<SetVariable Target="i32CurrentBitOffset">0</SetVariable>
				</TestStep>
				<TestStep Name="StartSi0">
					<Description Id="15" Level="Output">Start validate SubIndex0</Description>
					<WriteLine Id="16" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : Subindex '0x{0:X}.0'</WriteLine>
				</TestStep>
				<TestStep Name="CallSi0CheckEntryDescription">
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"offline"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>0</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>null</Parameter>
						<Parameter>5</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>null</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>null</Parameter>
						<Parameter>null</Parameter>
						<Parameter>null</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>8</Parameter>
						<Parameter>i32CurrentBitOffset</Parameter>
						<Parameter>true</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="EndSi0">
					<SetVariable Target="i32CurrentBitOffset">16</SetVariable>
				</TestStep>
				<TestStep Name="InitProfileLoopCounter">
					<SetVariable Target="u32ProfileCounter">0</SetVariable>
				</TestStep>
				<TestStep Name="GetProfileArrayLength">
					<SizeOf UInt32Var="u32CurrentProfilesLength">arrCurrentProfiles</SizeOf>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="17" Param0="u32CurrentProfilesLength" Level="Verbose">'{0}' Profile(s) defined offline.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>u32CurrentProfilesLength</Value1>
							<Value2>0</Value2>
							<SkipCase Id="18">Skip case | no profile defined.</SkipCase>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="ProfileLoopStart">
					<GetArrayItem SourceArray="arrCurrentProfiles" Target="strTmpString" Index="u32ProfileCounter"></GetArrayItem>
				</TestStep>
				<TestStep Name="CheckProfileInformationString">
					<Compare>
						<Equal>
							<Value1>strTmpString</Value1>
							<Value2>null</Value2>
							<RaiseError Id="19" Param0="u32ProfileCounter">Profile Info element [{0}] is null.</RaiseError>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>strTmpString</Value1>
							<Value2>EmptyString</Value2>
							<RaiseError Id="20" Param0="u32ProfileCounter">Profile Info element [{0}] is an empty string.</RaiseError>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="GetDeviceProfile">
					<CallTestFunction Name="GetDeviceProfile">
						<Parameter>strTmpString</Parameter>
						<OutParameter>uint16CurDeviceProfile</OutParameter>
					</CallTestFunction>
				</TestStep>
				<TestStep Name="GetModuleProfile">
					<CallTestFunction Name="GetModuleProfile">
						<Parameter>strTmpString</Parameter>
						<OutParameter>uint16CurModuleProfile</OutParameter>
					</CallTestFunction>
				</TestStep>
				<TestStep Name="GetSubModuleProfile">
					<CallTestFunction Name="GetSubModuleProfile">
						<Parameter>strTmpString</Parameter>
						<OutParameter>uint16CurSubModuleProfile</OutParameter>
					</CallTestFunction>
				</TestStep>
				<TestStep Name="DumpProfileInfo">
					<Description Id="21" Param0="uint16CurDeviceProfile" Param1="uint16CurModuleProfile" Param2="uint16CurSubModuleProfile" Param3="u32ProfileCounter" Level="Output">Module[{3}] : DeviceProfile '{0}' ; ModuleProfile '{1}' ; SubModuleProfile '{2}'</Description>
					<Compare>
						<Equal>
							<Value1>bIgnoreProfileID</Value1>
							<Value2>true</Value2>
							<GotoStep>IndicateThatAtleastOneModuleMatch</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CompareDeviceProfile">
					<Compare>
						<NotEqual>
							<Value1>uint16CurDeviceProfile</Value1>
							<Value2>5003</Value2>
							<WriteLine Id="22" Param0="uint16CurDeviceProfile" Level="Output">Skip Profile  (Test Device Profile '5003' != Cur Device Profile '{0}')</WriteLine>
						</NotEqual>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>uint16CurDeviceProfile</Value1>
							<Value2>5003</Value2>
							<GotoStep>ProfileLoopEnd</GotoStep>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep Name="CompareModuleProfile">
					<Compare>
						<NotEqual>
							<Value1>uint16CurModuleProfile</Value1>
							<Value2>2011</Value2>
							<WriteLine Id="23" Param0="uint16CurModuleProfile" Level="Output">Skip Profile  (Test Module Profile '2011' != Cur Module Profile '{0}')</WriteLine>
						</NotEqual>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>uint16CurModuleProfile</Value1>
							<Value2>2011</Value2>
							<GotoStep>ProfileLoopEnd</GotoStep>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep Name="CompareSubModuleProfile">
					<Compare>
						<NotEqual>
							<Value1>uint16CurSubModuleProfile</Value1>
							<Value2>0</Value2>
							<WriteLine Id="24" Param0="uint16CurSubModuleProfile" Level="Output">Skip Profile  (Test SubModule Profile '0' != Cur SubModule Profile '{0}')</WriteLine>
						</NotEqual>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>uint16CurSubModuleProfile</Value1>
							<Value2>0</Value2>
							<GotoStep>ProfileLoopEnd</GotoStep>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep Name="IndicateThatAtleastOneModuleMatch">
					<SetVariable Target="bAtLeastOneModuleMatch">true</SetVariable>
				</TestStep>
				<TestStep Name="StartSi1">
					<Description Id="25" Param0="1 + (u32ProfileCounter * 1)" Level="Output">Start validate SubIndex{0}</Description>
					<SetVariable Target="byteSubIndexInclOffset">1 + (u32ProfileCounter * 1)</SetVariable>
					<WriteLine Id="26" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Param2="byteSubIndexInclOffset" Level="Verbose">Module[{1}] : Subindex '0x{0:X}.{2}'</WriteLine>
				</TestStep>
				<TestStep Name="SetSi1RequiredLevel">
					<SetVariable Target="bObjectOrEntryRequiredLevel">1</SetVariable>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<CallTestFunction Name="IsEntryDefined">
								<Parameter>#xF384</Parameter>
								<Parameter>0</Parameter>
								<Parameter>offline</Parameter>
								<OutParameter>bConditionTrue</OutParameter>
							</CallTestFunction>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bConditionTrue</Value1>
							<Value2>true</Value2>
							<SetVariable Target="bObjectOrEntryRequiredLevel">3</SetVariable>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>3</Value2>
							<WriteLine Id="27" Param0="u16ObjectIndexInclOffset" Param1="byteSubIndexInclOffset" Param2="#xF384" Level="Verbose">0x{0:X4}.{1} shall be available (the entry 0x{2:X4}.0 is available (offline)</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>1</Value2>
							<WriteLine Id="28" Param0="u16ObjectIndexInclOffset" Param1="byteSubIndexInclOffset" Param2="#xF384" Level="Verbose">0x{0:X4}.{1} may be available (the entry 0x{2:X4}.0 is not available (offline)</WriteLine>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CheckIfSi1Exists">
					<GetObjectDescription SourceDictionary="odDeviceObjectdictionary" Index="u16ObjectIndexInclOffset" SubIndex="byteSubIndexInclOffset">
						<Type>u16DataType</Type>
					</GetObjectDescription>
					<GotoOnFailure>HandleNotExistingSi1</GotoOnFailure>
				</TestStep>
				<TestStep>
					<Compare>
						<NotEqual>
							<Value1>u16DataType</Value1>
							<Value2>0</Value2>
							<GotoStep>CallSi1CheckEntryDescription</GotoStep>
						</NotEqual>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>1</Value2>
							<WriteLine Id="29" Param0="u16ObjectIndexInclOffset" Level="Verbose">The entry 0x{0:X4}.1 is defined as a padding entry.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>3</Value2>
							<WriteLine Id="30" Param0="u16ObjectIndexInclOffset" Level="Error">The entry 0x{0:X4}.1 shall not defined as a padding entry.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>3</Value2>
							<SetVariable Target="strResult" Param0="u16ObjectIndexInclOffset">The entry 0x{0:X4}.1 shall not defined as a padding entry.</SetVariable>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>EndSi1</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="HandleNotExistingSi1">
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>3</Value2>
							<SetVariable Target="strResult" Param0="u16ObjectIndexInclOffset" Param1="byteSubIndexInclOffset">The entry 0x{0:X4}.{1} does not exists.</SetVariable>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>3</Value2>
							<WriteLine Id="31" Param0="u16ObjectIndexInclOffset" Param1="byteSubIndexInclOffset" Level="Error">The entry 0x{0:X4}.{1} does not exists.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>3</Value2>
							<GotoStep>EndSi1</GotoStep>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="32" Param0="u16ObjectIndexInclOffset" Param1="byteSubIndexInclOffset" Level="Output">The entry 0x{0:X4}.{1} does not exists.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>EndSi1</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CallSi1CheckEntryDescription">
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"offline"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>byteSubIndexInclOffset</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>null</Parameter>
						<Parameter>7</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>null</Parameter>
						<Parameter>T</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>32</Parameter>
						<Parameter>i32CurrentBitOffset</Parameter>
						<Parameter>true</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="EndSi1">
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>3</Value2>
							<SetVariable Target="i32CurrentBitOffset">i32CurrentBitOffset + 32</SetVariable>
						</Equal>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>3</Value2>
							<SetVariable Target="i32CurrentBitOffset">-1</SetVariable>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep Name="ProfileLoopEnd">
					<Compare>
						<Equal>
							<Value1>bAtLeastOneModuleMatch</Value1>
							<Value2>false</Value2>
							<GotoStep>HandleAbortTestCaseOnFirstError</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="HandleAbortTestCaseOnFirstError">
					<Compare>
						<Equal>
							<Value1>bAbortTestCaseOnFirstError</Value1>
							<Value2>false</Value2>
							<GotoStep>ProfileLoopIncrement</GotoStep>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>strResult</Value1>
							<Value2>EmptyString</Value2>
							<GotoStep>ProfileLoopIncrement</GotoStep>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="33" Level="Output">Object verification for all following modules abort because an error was already detected for the current module.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>END</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="ProfileLoopIncrement">
					<SetVariable Target="u32ProfileCounter">u32ProfileCounter + 1</SetVariable>
					<Compare>
						<Greater>
							<Value1>u32CurrentProfilesLength</Value1>
							<Value2>u32ProfileCounter</Value2>
							<GotoStep>ProfileLoopStart</GotoStep>
						</Greater>
					</Compare>
				</TestStep>
				<TestStep Name="END">
					<Compare>
						<NotEqual>
							<Value1>bAtLeastOneModuleMatch</Value1>
							<Value2>true</Value2>
							<SkipCase Id="34">SKIP TEST(no module/channel supports the current profile)</SkipCase>
						</NotEqual>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bDEBUG</Value1>
							<Value2>true</Value2>
							<WriteLine Id="35" Param0="strResult" Level="Verbose">DEBUG | Result : '{0}'.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>strResult</Value1>
							<Value2>EmptyString</Value2>
							<ReturnSuccess Id="36">Test succeed</ReturnSuccess>
						</Equal>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>strResult</Value1>
							<Value2>EmptyString</Value2>
							<RaiseError Id="37"></RaiseError>
						</NotEqual>
					</Compare>
				</TestStep>
			</TestCase>
			<TestCase Name="online | 0xF394 (Latched Manufacturer Error Details)" CaseId="28">
				<Description>
					<PreCondition>- The device profile is 5003
- The module profile is 2011
- The submodule profile is 0</PreCondition>
					<Action>- Iterate over all online defined modules/channels and if the PreCondition matches the following operations are done:
- Get the online description of object 0xF394(+module specific offset) 'Latched Manufacturer Error Details' and all entries
 Check:
    (Name)
    BitSize
    DataType
    Rx / Tx mappable
    Default Data
    MinData
    Flags       </Action>
					<PostCondition>Error if
- mandatory object / entry is not defined
- an optional object exists and the entries are invalid
- Object / entry description does not match with the specification</PostCondition>
					<ProposalForSolution>- Define the missing objects
- correct object / entry description</ProposalForSolution>
					<References>
						<Reference Specification="ETG.5003.2011"></Reference>
					</References>
					<Mandatory>true</Mandatory>
				</Description>
				<TestStep Name="InitResult">
					<SetVariable Target="strResult">EmptyString</SetVariable>
				</TestStep>
				<TestStep Name="CheckIfOdAvailable">
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Mailbox</Value1>
							<Value2>false</Value2>
							<SkipCase Id="1">DuT does not support mailbox.</SkipCase>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Mailbox.CoE</Value1>
							<Value2>false</Value2>
							<SkipCase Id="2">DuT does not support CoE.</SkipCase>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Mailbox.CoE.SdoInfo</Value1>
							<Value2>false</Value2>
							<SkipCase Id="3">DuT does not support SDO Info.</SkipCase>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="InitAtLeastOneProfileMatch">
					<SetVariable Target="bAtLeastOneModuleMatch">false</SetVariable>
				</TestStep>
				<TestStep Name="GetCurrentProfileList">
					<SizeOf UInt32Var="u32Tmp">arrOnlineProfiles</SizeOf>
					<Compare>
						<Equal>
							<Value1>u32Tmp</Value1>
							<Value2>0</Value2>
							<CallTestFunction Name="GetCurrentProfileList">
								<Parameter>"online"</Parameter>
								<Parameter>"SafeOP"</Parameter>
								<OutParameter>arrOnlineProfiles</OutParameter>
							</CallTestFunction>
						</Equal>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>u32Tmp</Value1>
							<Value2>0</Value2>
							<WriteLine Id="4" Param0="arrOnlineProfiles" Level="Verbose">Use previously created profile list ({0})</WriteLine>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep>
					<SizeOf UInt32Var="u32Tmp">arrOnlineProfiles</SizeOf>
				</TestStep>
				<TestStep>
					<InitArray TargetArray="arrCurrentProfiles" Length="u32Tmp"></InitArray>
				</TestStep>
				<TestStep>
					<CopyArray>
						<SourceArray>arrOnlineProfiles</SourceArray>
						<DestinationArray>arrCurrentProfiles</DestinationArray>
						<Length>u32Tmp</Length>
					</CopyArray>
				</TestStep>
				<TestStep Name="IsProfileSupported">
					<CallTestFunction Name="DeviceAndModuleProfileDefined">
						<Parameter>arrCurrentProfiles</Parameter>
						<Parameter>5003</Parameter>
						<Parameter>2011</Parameter>
						<OutParameter>bAtLeastOneModuleMatch</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>bAtLeastOneModuleMatch</Value1>
							<Value2>false</Value2>
							<GotoStep>END</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="GetObjectIndexInclOffset">
					<SetVariable Target="u16ObjectIndexInclOffset">#xF394</SetVariable>
					<WriteLine Id="5" Param0="u16ObjectIndexInclOffset" Level="Verbose">ObjectIndex '0x{0:X}' (module independent)</WriteLine>
				</TestStep>
				<TestStep Name="LoadDeviceObjectDictionary">
					<Description Id="6" Level="Verbose">Load 'online' object dictionary for testing.</Description>
					<GetObjectDictionary Target="odDeviceObjectdictionary">
						<DictionaryType>Online</DictionaryType>
					</GetObjectDictionary>
					<RaiseErrorOnFailure Id="7">VerifyObject : failed to load online object dictionary.</RaiseErrorOnFailure>
				</TestStep>
				<TestStep Name="SetObjectRequiredLevel">
					<SetVariable Target="bObjectOrEntryRequiredLevel">1</SetVariable>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<CallTestFunction Name="IsEntryDefined">
								<Parameter>#xF384</Parameter>
								<Parameter>0</Parameter>
								<Parameter>online</Parameter>
								<OutParameter>bConditionTrue</OutParameter>
							</CallTestFunction>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bConditionTrue</Value1>
							<Value2>true</Value2>
							<SetVariable Target="bObjectOrEntryRequiredLevel">3</SetVariable>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>3</Value2>
							<WriteLine Id="8" Param0="u16ObjectIndexInclOffset" Param1="#xF384" Level="Verbose">0x{0:X4} 'Latched Manufacturer Error Details' shall be available (the entry 0x{1:X4}.0 is available (online)</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>1</Value2>
							<WriteLine Id="9" Param0="u16ObjectIndexInclOffset" Param1="#xF384" Level="Verbose">0x{0:X4} 'Latched Manufacturer Error Details' may be available (the entry 0x{1:X4}.0 is not available (online)</WriteLine>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CheckIfObjectExists">
					<GetObjectDescription SourceDictionary="odDeviceObjectdictionary" Index="u16ObjectIndexInclOffset" SubIndex="-1"></GetObjectDescription>
					<GotoOnSuccess>CallCheckObjectDescription</GotoOnSuccess>
				</TestStep>
				<TestStep Name="HandleNotExistingObject">
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>3</Value2>
							<SetVariable Target="strResult" Param0="u16ObjectIndexInclOffset">The object 0x{0:X4} 'Latched Manufacturer Error Details' does not exists.</SetVariable>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>3</Value2>
							<WriteLine Id="10" Param0="u16ObjectIndexInclOffset" Level="Error">The object 0x{0:X4} 'Latched Manufacturer Error Details' does not exists.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>2</Value2>
							<WriteLine Id="11" Param0="u16ObjectIndexInclOffset" Level="Warning">The object 0x{0:X4} 'Latched Manufacturer Error Details' does not exists.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>1</Value2>
							<WriteLine Id="12" Param0="u16ObjectIndexInclOffset" Level="Output">The object 0x{0:X4} 'Latched Manufacturer Error Details' does not exists.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>END</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CallCheckObjectDescription">
					<Description Id="13" Param0="u16ObjectIndexInclOffset" Level="Output">Verify the object description 0x{0:X4} 'Latched Manufacturer Error Details'.</Description>
					<CallTestFunction Name="CheckObjectDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"online"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>"Latched Manufacturer Error Details"</Parameter>
						<Parameter>null</Parameter>
						<Parameter>8</Parameter>
						<Parameter>-1</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<GotoStep>END</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="InitEntryBittOffset">
					<SetVariable Target="i32CurrentBitOffset">0</SetVariable>
				</TestStep>
				<TestStep Name="StartSi0">
					<Description Id="14" Level="Output">Start validate SubIndex0</Description>
					<WriteLine Id="15" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : Subindex '0x{0:X}.0'</WriteLine>
				</TestStep>
				<TestStep Name="CallSi0CheckEntryDescription">
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"online"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>0</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>null</Parameter>
						<Parameter>5</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>null</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>null</Parameter>
						<Parameter>null</Parameter>
						<Parameter>null</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>8</Parameter>
						<Parameter>i32CurrentBitOffset</Parameter>
						<Parameter>true</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="EndSi0">
					<SetVariable Target="i32CurrentBitOffset">16</SetVariable>
				</TestStep>
				<TestStep Name="InitProfileLoopCounter">
					<SetVariable Target="u32ProfileCounter">0</SetVariable>
				</TestStep>
				<TestStep Name="GetProfileArrayLength">
					<SizeOf UInt32Var="u32CurrentProfilesLength">arrCurrentProfiles</SizeOf>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="16" Param0="u32CurrentProfilesLength" Level="Verbose">'{0}' Profile(s) defined online.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>u32CurrentProfilesLength</Value1>
							<Value2>0</Value2>
							<SkipCase Id="17">Skip case | no profile defined.</SkipCase>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="ProfileLoopStart">
					<GetArrayItem SourceArray="arrCurrentProfiles" Target="strTmpString" Index="u32ProfileCounter"></GetArrayItem>
				</TestStep>
				<TestStep Name="CheckProfileInformationString">
					<Compare>
						<Equal>
							<Value1>strTmpString</Value1>
							<Value2>null</Value2>
							<RaiseError Id="18" Param0="u32ProfileCounter">Profile Info element [{0}] is null.</RaiseError>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>strTmpString</Value1>
							<Value2>EmptyString</Value2>
							<RaiseError Id="19" Param0="u32ProfileCounter">Profile Info element [{0}] is an empty string.</RaiseError>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="GetDeviceProfile">
					<CallTestFunction Name="GetDeviceProfile">
						<Parameter>strTmpString</Parameter>
						<OutParameter>uint16CurDeviceProfile</OutParameter>
					</CallTestFunction>
				</TestStep>
				<TestStep Name="GetModuleProfile">
					<CallTestFunction Name="GetModuleProfile">
						<Parameter>strTmpString</Parameter>
						<OutParameter>uint16CurModuleProfile</OutParameter>
					</CallTestFunction>
				</TestStep>
				<TestStep Name="GetSubModuleProfile">
					<CallTestFunction Name="GetSubModuleProfile">
						<Parameter>strTmpString</Parameter>
						<OutParameter>uint16CurSubModuleProfile</OutParameter>
					</CallTestFunction>
				</TestStep>
				<TestStep Name="DumpProfileInfo">
					<Description Id="20" Param0="uint16CurDeviceProfile" Param1="uint16CurModuleProfile" Param2="uint16CurSubModuleProfile" Param3="u32ProfileCounter" Level="Output">Module[{3}] : DeviceProfile '{0}' ; ModuleProfile '{1}' ; SubModuleProfile '{2}'</Description>
					<Compare>
						<Equal>
							<Value1>bIgnoreProfileID</Value1>
							<Value2>true</Value2>
							<GotoStep>IndicateThatAtleastOneModuleMatch</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CompareDeviceProfile">
					<Compare>
						<NotEqual>
							<Value1>uint16CurDeviceProfile</Value1>
							<Value2>5003</Value2>
							<WriteLine Id="21" Param0="uint16CurDeviceProfile" Level="Output">Skip Profile  (Test Device Profile '5003' != Cur Device Profile '{0}')</WriteLine>
						</NotEqual>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>uint16CurDeviceProfile</Value1>
							<Value2>5003</Value2>
							<GotoStep>ProfileLoopEnd</GotoStep>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep Name="CompareModuleProfile">
					<Compare>
						<NotEqual>
							<Value1>uint16CurModuleProfile</Value1>
							<Value2>2011</Value2>
							<WriteLine Id="22" Param0="uint16CurModuleProfile" Level="Output">Skip Profile  (Test Module Profile '2011' != Cur Module Profile '{0}')</WriteLine>
						</NotEqual>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>uint16CurModuleProfile</Value1>
							<Value2>2011</Value2>
							<GotoStep>ProfileLoopEnd</GotoStep>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep Name="CompareSubModuleProfile">
					<Compare>
						<NotEqual>
							<Value1>uint16CurSubModuleProfile</Value1>
							<Value2>0</Value2>
							<WriteLine Id="23" Param0="uint16CurSubModuleProfile" Level="Output">Skip Profile  (Test SubModule Profile '0' != Cur SubModule Profile '{0}')</WriteLine>
						</NotEqual>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>uint16CurSubModuleProfile</Value1>
							<Value2>0</Value2>
							<GotoStep>ProfileLoopEnd</GotoStep>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep Name="IndicateThatAtleastOneModuleMatch">
					<SetVariable Target="bAtLeastOneModuleMatch">true</SetVariable>
				</TestStep>
				<TestStep Name="StartSi1">
					<Description Id="24" Param0="1 + (u32ProfileCounter * 1)" Level="Output">Start validate SubIndex{0}</Description>
					<SetVariable Target="byteSubIndexInclOffset">1 + (u32ProfileCounter * 1)</SetVariable>
					<WriteLine Id="25" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Param2="byteSubIndexInclOffset" Level="Verbose">Module[{1}] : Subindex '0x{0:X}.{2}'</WriteLine>
				</TestStep>
				<TestStep Name="SetSi1RequiredLevel">
					<SetVariable Target="bObjectOrEntryRequiredLevel">1</SetVariable>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<CallTestFunction Name="IsEntryDefined">
								<Parameter>#xF384</Parameter>
								<Parameter>0</Parameter>
								<Parameter>online</Parameter>
								<OutParameter>bConditionTrue</OutParameter>
							</CallTestFunction>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bConditionTrue</Value1>
							<Value2>true</Value2>
							<SetVariable Target="bObjectOrEntryRequiredLevel">3</SetVariable>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>3</Value2>
							<WriteLine Id="26" Param0="u16ObjectIndexInclOffset" Param1="byteSubIndexInclOffset" Param2="#xF384" Level="Verbose">0x{0:X4}.{1} shall be available (the entry 0x{2:X4}.0 is available (online)</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>1</Value2>
							<WriteLine Id="27" Param0="u16ObjectIndexInclOffset" Param1="byteSubIndexInclOffset" Param2="#xF384" Level="Verbose">0x{0:X4}.{1} may be available (the entry 0x{2:X4}.0 is not available (online)</WriteLine>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CheckIfSi1Exists">
					<GetObjectDescription SourceDictionary="odDeviceObjectdictionary" Index="u16ObjectIndexInclOffset" SubIndex="byteSubIndexInclOffset">
						<Type>u16DataType</Type>
					</GetObjectDescription>
					<GotoOnFailure>HandleNotExistingSi1</GotoOnFailure>
				</TestStep>
				<TestStep>
					<Compare>
						<NotEqual>
							<Value1>u16DataType</Value1>
							<Value2>0</Value2>
							<GotoStep>CallSi1CheckEntryDescription</GotoStep>
						</NotEqual>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>1</Value2>
							<WriteLine Id="28" Param0="u16ObjectIndexInclOffset" Level="Verbose">The entry 0x{0:X4}.1 is defined as a padding entry.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>3</Value2>
							<WriteLine Id="29" Param0="u16ObjectIndexInclOffset" Level="Error">The entry 0x{0:X4}.1 shall not defined as a padding entry.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>3</Value2>
							<SetVariable Target="strResult" Param0="u16ObjectIndexInclOffset">The entry 0x{0:X4}.1 shall not defined as a padding entry.</SetVariable>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>EndSi1</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="HandleNotExistingSi1">
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>3</Value2>
							<SetVariable Target="strResult" Param0="u16ObjectIndexInclOffset" Param1="byteSubIndexInclOffset">The entry 0x{0:X4}.{1} does not exists.</SetVariable>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>3</Value2>
							<WriteLine Id="30" Param0="u16ObjectIndexInclOffset" Param1="byteSubIndexInclOffset" Level="Error">The entry 0x{0:X4}.{1} does not exists.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>3</Value2>
							<GotoStep>EndSi1</GotoStep>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="31" Param0="u16ObjectIndexInclOffset" Param1="byteSubIndexInclOffset" Level="Output">The entry 0x{0:X4}.{1} does not exists.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>EndSi1</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CallSi1CheckEntryDescription">
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"online"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>byteSubIndexInclOffset</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>null</Parameter>
						<Parameter>7</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>null</Parameter>
						<Parameter>T</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>32</Parameter>
						<Parameter>i32CurrentBitOffset</Parameter>
						<Parameter>true</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="EndSi1">
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>3</Value2>
							<SetVariable Target="i32CurrentBitOffset">i32CurrentBitOffset + 32</SetVariable>
						</Equal>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>3</Value2>
							<SetVariable Target="i32CurrentBitOffset">-1</SetVariable>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep Name="ProfileLoopEnd">
					<Compare>
						<Equal>
							<Value1>bAtLeastOneModuleMatch</Value1>
							<Value2>false</Value2>
							<GotoStep>HandleAbortTestCaseOnFirstError</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="HandleAbortTestCaseOnFirstError">
					<Compare>
						<Equal>
							<Value1>bAbortTestCaseOnFirstError</Value1>
							<Value2>false</Value2>
							<GotoStep>ProfileLoopIncrement</GotoStep>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>strResult</Value1>
							<Value2>EmptyString</Value2>
							<GotoStep>ProfileLoopIncrement</GotoStep>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="32" Level="Output">Object verification for all following modules abort because an error was already detected for the current module.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>END</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="ProfileLoopIncrement">
					<SetVariable Target="u32ProfileCounter">u32ProfileCounter + 1</SetVariable>
					<Compare>
						<Greater>
							<Value1>u32CurrentProfilesLength</Value1>
							<Value2>u32ProfileCounter</Value2>
							<GotoStep>ProfileLoopStart</GotoStep>
						</Greater>
					</Compare>
				</TestStep>
				<TestStep Name="END">
					<Compare>
						<NotEqual>
							<Value1>bAtLeastOneModuleMatch</Value1>
							<Value2>true</Value2>
							<SkipCase Id="33">SKIP TEST(no module/channel supports the current profile)</SkipCase>
						</NotEqual>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bDEBUG</Value1>
							<Value2>true</Value2>
							<WriteLine Id="34" Param0="strResult" Level="Verbose">DEBUG | Result : '{0}'.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>strResult</Value1>
							<Value2>EmptyString</Value2>
							<ReturnSuccess Id="35">Test succeed</ReturnSuccess>
						</Equal>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>strResult</Value1>
							<Value2>EmptyString</Value2>
							<RaiseError Id="36"></RaiseError>
						</NotEqual>
					</Compare>
				</TestStep>
			</TestCase>
			<TestCase Name="offline | 0xF395 (Latched Global Device Warning Details)" CaseId="29">
				<Description>
					<PreCondition>- The device profile is 5003
- The module profile is 2011
- The submodule profile is 0</PreCondition>
					<Action>- Iterate over all offline defined modules/channels and if the PreCondition matches the following operations are done:
- Get the offline description of object 0xF395(+module specific offset) 'Latched Global Device Warning Details' and all entries
 Check:
    (Name)
    BitSize
    DataType
    Rx / Tx mappable
    Default Data
    MinData
    Flags       </Action>
					<PostCondition>Error if
- mandatory object / entry is not defined
- an optional object exists and the entries are invalid
- Object / entry description does not match with the specification</PostCondition>
					<ProposalForSolution>- Define the missing objects
- correct object / entry description</ProposalForSolution>
					<References>
						<Reference Specification="ETG.5003.2011"></Reference>
					</References>
					<Mandatory>true</Mandatory>
				</Description>
				<TestStep Name="InitResult">
					<SetVariable Target="strResult">EmptyString</SetVariable>
				</TestStep>
				<TestStep Name="CheckIfOdAvailable">
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Mailbox</Value1>
							<Value2>false</Value2>
							<SkipCase Id="1">DuT does not support mailbox.</SkipCase>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Mailbox.CoE</Value1>
							<Value2>false</Value2>
							<SkipCase Id="2">DuT does not support CoE.</SkipCase>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep>
					<GetObjectDictionary Target="odDeviceObjectdictionary">
						<DictionaryType>Offline</DictionaryType>
					</GetObjectDictionary>
					<SkipOnFailure Id="3">No offline object dictionary defined.</SkipOnFailure>
				</TestStep>
				<TestStep>
					<GetObjectList Count="u32Tmp" Target="odDeviceObjectdictionaryList" SourceDict="odDeviceObjectdictionary"></GetObjectList>
					<Compare>
						<Equal>
							<Value1>u32Tmp</Value1>
							<Value2>0</Value2>
							<SkipCase Id="4">No offline object dictionary defined.</SkipCase>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="InitAtLeastOneProfileMatch">
					<SetVariable Target="bAtLeastOneModuleMatch">false</SetVariable>
				</TestStep>
				<TestStep Name="GetCurrentProfileList">
					<SizeOf UInt32Var="u32Tmp">arrOfflineProfiles</SizeOf>
					<Compare>
						<Equal>
							<Value1>u32Tmp</Value1>
							<Value2>0</Value2>
							<CallTestFunction Name="GetCurrentProfileList">
								<Parameter>"offline"</Parameter>
								<Parameter>"SafeOP"</Parameter>
								<OutParameter>arrOfflineProfiles</OutParameter>
							</CallTestFunction>
						</Equal>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>u32Tmp</Value1>
							<Value2>0</Value2>
							<WriteLine Id="5" Param0="arrOfflineProfiles" Level="Verbose">Use previously created profile list ({0})</WriteLine>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep>
					<SizeOf UInt32Var="u32Tmp">arrOfflineProfiles</SizeOf>
				</TestStep>
				<TestStep>
					<InitArray TargetArray="arrCurrentProfiles" Length="u32Tmp"></InitArray>
				</TestStep>
				<TestStep>
					<CopyArray>
						<SourceArray>arrOfflineProfiles</SourceArray>
						<DestinationArray>arrCurrentProfiles</DestinationArray>
						<Length>u32Tmp</Length>
					</CopyArray>
				</TestStep>
				<TestStep Name="IsProfileSupported">
					<CallTestFunction Name="DeviceAndModuleProfileDefined">
						<Parameter>arrCurrentProfiles</Parameter>
						<Parameter>5003</Parameter>
						<Parameter>2011</Parameter>
						<OutParameter>bAtLeastOneModuleMatch</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>bAtLeastOneModuleMatch</Value1>
							<Value2>false</Value2>
							<GotoStep>END</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="GetObjectIndexInclOffset">
					<SetVariable Target="u16ObjectIndexInclOffset">#xF395</SetVariable>
					<WriteLine Id="6" Param0="u16ObjectIndexInclOffset" Level="Verbose">ObjectIndex '0x{0:X}' (module independent)</WriteLine>
				</TestStep>
				<TestStep Name="LoadDeviceObjectDictionary">
					<Description Id="7" Level="Verbose">Load 'offline' object dictionary for testing.</Description>
					<GetObjectDictionary Target="odDeviceObjectdictionary">
						<DictionaryType>Offline</DictionaryType>
					</GetObjectDictionary>
					<RaiseErrorOnFailure Id="8">VerifyObject : failed to load offline object dictionary.</RaiseErrorOnFailure>
				</TestStep>
				<TestStep Name="SetObjectRequiredLevel">
					<SetVariable Target="bObjectOrEntryRequiredLevel">1</SetVariable>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<CallTestFunction Name="IsEntryDefined">
								<Parameter>#xF385</Parameter>
								<Parameter>0</Parameter>
								<Parameter>offline</Parameter>
								<OutParameter>bConditionTrue</OutParameter>
							</CallTestFunction>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bConditionTrue</Value1>
							<Value2>true</Value2>
							<SetVariable Target="bObjectOrEntryRequiredLevel">3</SetVariable>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>3</Value2>
							<WriteLine Id="9" Param0="u16ObjectIndexInclOffset" Param1="#xF385" Level="Verbose">0x{0:X4} 'Latched Global Device Warning Details' shall be available (the entry 0x{1:X4}.0 is available (offline)</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>1</Value2>
							<WriteLine Id="10" Param0="u16ObjectIndexInclOffset" Param1="#xF385" Level="Verbose">0x{0:X4} 'Latched Global Device Warning Details' may be available (the entry 0x{1:X4}.0 is not available (offline)</WriteLine>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CheckIfObjectExists">
					<GetObjectDescription SourceDictionary="odDeviceObjectdictionary" Index="u16ObjectIndexInclOffset" SubIndex="-1"></GetObjectDescription>
					<GotoOnSuccess>CallCheckObjectDescription</GotoOnSuccess>
				</TestStep>
				<TestStep Name="HandleNotExistingObject">
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>3</Value2>
							<SetVariable Target="strResult" Param0="u16ObjectIndexInclOffset">The object 0x{0:X4} 'Latched Global Device Warning Details' does not exists.</SetVariable>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>3</Value2>
							<WriteLine Id="11" Param0="u16ObjectIndexInclOffset" Level="Error">The object 0x{0:X4} 'Latched Global Device Warning Details' does not exists.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>2</Value2>
							<WriteLine Id="12" Param0="u16ObjectIndexInclOffset" Level="Warning">The object 0x{0:X4} 'Latched Global Device Warning Details' does not exists.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>1</Value2>
							<WriteLine Id="13" Param0="u16ObjectIndexInclOffset" Level="Output">The object 0x{0:X4} 'Latched Global Device Warning Details' does not exists.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>END</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CallCheckObjectDescription">
					<Description Id="14" Param0="u16ObjectIndexInclOffset" Level="Output">Verify the object description 0x{0:X4} 'Latched Global Device Warning Details'.</Description>
					<CallTestFunction Name="CheckObjectDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"offline"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>"Latched Global Device Warning Details"</Parameter>
						<Parameter>null</Parameter>
						<Parameter>9</Parameter>
						<Parameter>-1</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<GotoStep>END</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="InitEntryBittOffset">
					<SetVariable Target="i32CurrentBitOffset">0</SetVariable>
				</TestStep>
				<TestStep Name="StartSi0">
					<Description Id="15" Level="Output">Start validate SubIndex0</Description>
					<WriteLine Id="16" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : Subindex '0x{0:X}.0'</WriteLine>
				</TestStep>
				<TestStep Name="CallSi0CheckEntryDescription">
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"offline"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>0</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>null</Parameter>
						<Parameter>5</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>null</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>null</Parameter>
						<Parameter>null</Parameter>
						<Parameter>null</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>8</Parameter>
						<Parameter>i32CurrentBitOffset</Parameter>
						<Parameter>true</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="EndSi0">
					<SetVariable Target="i32CurrentBitOffset">16</SetVariable>
				</TestStep>
				<TestStep Name="StartSi1">
					<Description Id="17" Level="Output">Start validate SubIndex1</Description>
					<WriteLine Id="18" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : Subindex '0x{0:X}.1'</WriteLine>
				</TestStep>
				<TestStep Name="SetSi1RequiredLevel">
					<SetVariable Target="bObjectOrEntryRequiredLevel">1</SetVariable>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<CallTestFunction Name="IsEntryDefined">
								<Parameter>#xF385</Parameter>
								<Parameter>0</Parameter>
								<Parameter>offline</Parameter>
								<OutParameter>bConditionTrue</OutParameter>
							</CallTestFunction>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bConditionTrue</Value1>
							<Value2>true</Value2>
							<SetVariable Target="bObjectOrEntryRequiredLevel">3</SetVariable>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>3</Value2>
							<WriteLine Id="19" Param0="u16ObjectIndexInclOffset" Param1="#xF385" Level="Verbose">0x{0:X4}.1 'Latched Global Device Warning Details' shall be available (the entry 0x{1:X4}.0 is available (offline)</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>1</Value2>
							<WriteLine Id="20" Param0="u16ObjectIndexInclOffset" Param1="#xF385" Level="Verbose">0x{0:X4}.1 'Latched Global Device Warning Details' may be available (the entry 0x{1:X4}.0 is not available (offline)</WriteLine>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CheckIfSi1Exists">
					<GetObjectDescription SourceDictionary="odDeviceObjectdictionary" Index="u16ObjectIndexInclOffset" SubIndex="1">
						<Type>u16DataType</Type>
					</GetObjectDescription>
					<GotoOnFailure>HandleNotExistingSi1</GotoOnFailure>
				</TestStep>
				<TestStep>
					<Compare>
						<NotEqual>
							<Value1>u16DataType</Value1>
							<Value2>0</Value2>
							<GotoStep>CallSi1CheckEntryDescription</GotoStep>
						</NotEqual>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>1</Value2>
							<WriteLine Id="21" Param0="u16ObjectIndexInclOffset" Level="Verbose">The entry 0x{0:X4}.1 is defined as a padding entry.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>3</Value2>
							<WriteLine Id="22" Param0="u16ObjectIndexInclOffset" Level="Error">The entry 0x{0:X4}.1 shall not defined as a padding entry.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>3</Value2>
							<SetVariable Target="strResult" Param0="u16ObjectIndexInclOffset">The entry 0x{0:X4}.1 shall not defined as a padding entry.</SetVariable>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>EndSi1</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="HandleNotExistingSi1">
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>3</Value2>
							<SetVariable Target="strResult" Param0="u16ObjectIndexInclOffset">The entry 0x{0:X4}.1 does not exists.</SetVariable>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>3</Value2>
							<WriteLine Id="23" Param0="u16ObjectIndexInclOffset" Level="Error">The entry 0x{0:X4}.1 does not exists.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>3</Value2>
							<GotoStep>EndSi1</GotoStep>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="24" Param0="u16ObjectIndexInclOffset" Level="Output">The entry 0x{0:X4}.1 does not exists.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>EndSi1</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CallSi1CheckEntryDescription">
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"offline"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>1</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>"Latched Global Device Warning Details"</Parameter>
						<Parameter>7</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>null</Parameter>
						<Parameter>T</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>32</Parameter>
						<Parameter>i32CurrentBitOffset</Parameter>
						<Parameter>true</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="EndSi1">
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>3</Value2>
							<SetVariable Target="i32CurrentBitOffset">i32CurrentBitOffset + 32</SetVariable>
						</Equal>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>3</Value2>
							<SetVariable Target="i32CurrentBitOffset">-1</SetVariable>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep Name="CheckReservedEntryRange_2_to_255">
					<Description Id="25" Level="Output">Start check reserved entry range 2 to 255</Description>
					<CallTestFunction Name="CheckReservedEntryRange">
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>2</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>odDeviceObjectdictionary</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="END">
					<Compare>
						<NotEqual>
							<Value1>bAtLeastOneModuleMatch</Value1>
							<Value2>true</Value2>
							<SkipCase Id="26">SKIP TEST(no module/channel supports the current profile)</SkipCase>
						</NotEqual>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bDEBUG</Value1>
							<Value2>true</Value2>
							<WriteLine Id="27" Param0="strResult" Level="Verbose">DEBUG | Result : '{0}'.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>strResult</Value1>
							<Value2>EmptyString</Value2>
							<ReturnSuccess Id="28">Test succeed</ReturnSuccess>
						</Equal>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>strResult</Value1>
							<Value2>EmptyString</Value2>
							<RaiseError Id="29"></RaiseError>
						</NotEqual>
					</Compare>
				</TestStep>
			</TestCase>
			<TestCase Name="online | 0xF395 (Latched Global Device Warning Details)" CaseId="30">
				<Description>
					<PreCondition>- The device profile is 5003
- The module profile is 2011
- The submodule profile is 0</PreCondition>
					<Action>- Iterate over all online defined modules/channels and if the PreCondition matches the following operations are done:
- Get the online description of object 0xF395(+module specific offset) 'Latched Global Device Warning Details' and all entries
 Check:
    (Name)
    BitSize
    DataType
    Rx / Tx mappable
    Default Data
    MinData
    Flags       </Action>
					<PostCondition>Error if
- mandatory object / entry is not defined
- an optional object exists and the entries are invalid
- Object / entry description does not match with the specification</PostCondition>
					<ProposalForSolution>- Define the missing objects
- correct object / entry description</ProposalForSolution>
					<References>
						<Reference Specification="ETG.5003.2011"></Reference>
					</References>
					<Mandatory>true</Mandatory>
				</Description>
				<TestStep Name="InitResult">
					<SetVariable Target="strResult">EmptyString</SetVariable>
				</TestStep>
				<TestStep Name="CheckIfOdAvailable">
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Mailbox</Value1>
							<Value2>false</Value2>
							<SkipCase Id="1">DuT does not support mailbox.</SkipCase>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Mailbox.CoE</Value1>
							<Value2>false</Value2>
							<SkipCase Id="2">DuT does not support CoE.</SkipCase>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Mailbox.CoE.SdoInfo</Value1>
							<Value2>false</Value2>
							<SkipCase Id="3">DuT does not support SDO Info.</SkipCase>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="InitAtLeastOneProfileMatch">
					<SetVariable Target="bAtLeastOneModuleMatch">false</SetVariable>
				</TestStep>
				<TestStep Name="GetCurrentProfileList">
					<SizeOf UInt32Var="u32Tmp">arrOnlineProfiles</SizeOf>
					<Compare>
						<Equal>
							<Value1>u32Tmp</Value1>
							<Value2>0</Value2>
							<CallTestFunction Name="GetCurrentProfileList">
								<Parameter>"online"</Parameter>
								<Parameter>"SafeOP"</Parameter>
								<OutParameter>arrOnlineProfiles</OutParameter>
							</CallTestFunction>
						</Equal>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>u32Tmp</Value1>
							<Value2>0</Value2>
							<WriteLine Id="4" Param0="arrOnlineProfiles" Level="Verbose">Use previously created profile list ({0})</WriteLine>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep>
					<SizeOf UInt32Var="u32Tmp">arrOnlineProfiles</SizeOf>
				</TestStep>
				<TestStep>
					<InitArray TargetArray="arrCurrentProfiles" Length="u32Tmp"></InitArray>
				</TestStep>
				<TestStep>
					<CopyArray>
						<SourceArray>arrOnlineProfiles</SourceArray>
						<DestinationArray>arrCurrentProfiles</DestinationArray>
						<Length>u32Tmp</Length>
					</CopyArray>
				</TestStep>
				<TestStep Name="IsProfileSupported">
					<CallTestFunction Name="DeviceAndModuleProfileDefined">
						<Parameter>arrCurrentProfiles</Parameter>
						<Parameter>5003</Parameter>
						<Parameter>2011</Parameter>
						<OutParameter>bAtLeastOneModuleMatch</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>bAtLeastOneModuleMatch</Value1>
							<Value2>false</Value2>
							<GotoStep>END</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="GetObjectIndexInclOffset">
					<SetVariable Target="u16ObjectIndexInclOffset">#xF395</SetVariable>
					<WriteLine Id="5" Param0="u16ObjectIndexInclOffset" Level="Verbose">ObjectIndex '0x{0:X}' (module independent)</WriteLine>
				</TestStep>
				<TestStep Name="LoadDeviceObjectDictionary">
					<Description Id="6" Level="Verbose">Load 'online' object dictionary for testing.</Description>
					<GetObjectDictionary Target="odDeviceObjectdictionary">
						<DictionaryType>Online</DictionaryType>
					</GetObjectDictionary>
					<RaiseErrorOnFailure Id="7">VerifyObject : failed to load online object dictionary.</RaiseErrorOnFailure>
				</TestStep>
				<TestStep Name="SetObjectRequiredLevel">
					<SetVariable Target="bObjectOrEntryRequiredLevel">1</SetVariable>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<CallTestFunction Name="IsEntryDefined">
								<Parameter>#xF385</Parameter>
								<Parameter>0</Parameter>
								<Parameter>online</Parameter>
								<OutParameter>bConditionTrue</OutParameter>
							</CallTestFunction>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bConditionTrue</Value1>
							<Value2>true</Value2>
							<SetVariable Target="bObjectOrEntryRequiredLevel">3</SetVariable>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>3</Value2>
							<WriteLine Id="8" Param0="u16ObjectIndexInclOffset" Param1="#xF385" Level="Verbose">0x{0:X4} 'Latched Global Device Warning Details' shall be available (the entry 0x{1:X4}.0 is available (online)</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>1</Value2>
							<WriteLine Id="9" Param0="u16ObjectIndexInclOffset" Param1="#xF385" Level="Verbose">0x{0:X4} 'Latched Global Device Warning Details' may be available (the entry 0x{1:X4}.0 is not available (online)</WriteLine>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CheckIfObjectExists">
					<GetObjectDescription SourceDictionary="odDeviceObjectdictionary" Index="u16ObjectIndexInclOffset" SubIndex="-1"></GetObjectDescription>
					<GotoOnSuccess>CallCheckObjectDescription</GotoOnSuccess>
				</TestStep>
				<TestStep Name="HandleNotExistingObject">
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>3</Value2>
							<SetVariable Target="strResult" Param0="u16ObjectIndexInclOffset">The object 0x{0:X4} 'Latched Global Device Warning Details' does not exists.</SetVariable>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>3</Value2>
							<WriteLine Id="10" Param0="u16ObjectIndexInclOffset" Level="Error">The object 0x{0:X4} 'Latched Global Device Warning Details' does not exists.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>2</Value2>
							<WriteLine Id="11" Param0="u16ObjectIndexInclOffset" Level="Warning">The object 0x{0:X4} 'Latched Global Device Warning Details' does not exists.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>1</Value2>
							<WriteLine Id="12" Param0="u16ObjectIndexInclOffset" Level="Output">The object 0x{0:X4} 'Latched Global Device Warning Details' does not exists.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>END</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CallCheckObjectDescription">
					<Description Id="13" Param0="u16ObjectIndexInclOffset" Level="Output">Verify the object description 0x{0:X4} 'Latched Global Device Warning Details'.</Description>
					<CallTestFunction Name="CheckObjectDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"online"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>"Latched Global Device Warning Details"</Parameter>
						<Parameter>null</Parameter>
						<Parameter>9</Parameter>
						<Parameter>-1</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<GotoStep>END</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="InitEntryBittOffset">
					<SetVariable Target="i32CurrentBitOffset">0</SetVariable>
				</TestStep>
				<TestStep Name="StartSi0">
					<Description Id="14" Level="Output">Start validate SubIndex0</Description>
					<WriteLine Id="15" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : Subindex '0x{0:X}.0'</WriteLine>
				</TestStep>
				<TestStep Name="CallSi0CheckEntryDescription">
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"online"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>0</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>null</Parameter>
						<Parameter>5</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>null</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>null</Parameter>
						<Parameter>null</Parameter>
						<Parameter>null</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>8</Parameter>
						<Parameter>i32CurrentBitOffset</Parameter>
						<Parameter>true</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="EndSi0">
					<SetVariable Target="i32CurrentBitOffset">16</SetVariable>
				</TestStep>
				<TestStep Name="StartSi1">
					<Description Id="16" Level="Output">Start validate SubIndex1</Description>
					<WriteLine Id="17" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : Subindex '0x{0:X}.1'</WriteLine>
				</TestStep>
				<TestStep Name="SetSi1RequiredLevel">
					<SetVariable Target="bObjectOrEntryRequiredLevel">1</SetVariable>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<CallTestFunction Name="IsEntryDefined">
								<Parameter>#xF385</Parameter>
								<Parameter>0</Parameter>
								<Parameter>online</Parameter>
								<OutParameter>bConditionTrue</OutParameter>
							</CallTestFunction>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bConditionTrue</Value1>
							<Value2>true</Value2>
							<SetVariable Target="bObjectOrEntryRequiredLevel">3</SetVariable>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>3</Value2>
							<WriteLine Id="18" Param0="u16ObjectIndexInclOffset" Param1="#xF385" Level="Verbose">0x{0:X4}.1 'Latched Global Device Warning Details' shall be available (the entry 0x{1:X4}.0 is available (online)</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>1</Value2>
							<WriteLine Id="19" Param0="u16ObjectIndexInclOffset" Param1="#xF385" Level="Verbose">0x{0:X4}.1 'Latched Global Device Warning Details' may be available (the entry 0x{1:X4}.0 is not available (online)</WriteLine>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CheckIfSi1Exists">
					<GetObjectDescription SourceDictionary="odDeviceObjectdictionary" Index="u16ObjectIndexInclOffset" SubIndex="1">
						<Type>u16DataType</Type>
					</GetObjectDescription>
					<GotoOnFailure>HandleNotExistingSi1</GotoOnFailure>
				</TestStep>
				<TestStep>
					<Compare>
						<NotEqual>
							<Value1>u16DataType</Value1>
							<Value2>0</Value2>
							<GotoStep>CallSi1CheckEntryDescription</GotoStep>
						</NotEqual>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>1</Value2>
							<WriteLine Id="20" Param0="u16ObjectIndexInclOffset" Level="Verbose">The entry 0x{0:X4}.1 is defined as a padding entry.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>3</Value2>
							<WriteLine Id="21" Param0="u16ObjectIndexInclOffset" Level="Error">The entry 0x{0:X4}.1 shall not defined as a padding entry.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>3</Value2>
							<SetVariable Target="strResult" Param0="u16ObjectIndexInclOffset">The entry 0x{0:X4}.1 shall not defined as a padding entry.</SetVariable>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>EndSi1</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="HandleNotExistingSi1">
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>3</Value2>
							<SetVariable Target="strResult" Param0="u16ObjectIndexInclOffset">The entry 0x{0:X4}.1 does not exists.</SetVariable>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>3</Value2>
							<WriteLine Id="22" Param0="u16ObjectIndexInclOffset" Level="Error">The entry 0x{0:X4}.1 does not exists.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>3</Value2>
							<GotoStep>EndSi1</GotoStep>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="23" Param0="u16ObjectIndexInclOffset" Level="Output">The entry 0x{0:X4}.1 does not exists.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>EndSi1</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CallSi1CheckEntryDescription">
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"online"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>1</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>"Latched Global Device Warning Details"</Parameter>
						<Parameter>7</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>null</Parameter>
						<Parameter>T</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>32</Parameter>
						<Parameter>i32CurrentBitOffset</Parameter>
						<Parameter>true</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="EndSi1">
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>3</Value2>
							<SetVariable Target="i32CurrentBitOffset">i32CurrentBitOffset + 32</SetVariable>
						</Equal>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>3</Value2>
							<SetVariable Target="i32CurrentBitOffset">-1</SetVariable>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep Name="CheckReservedEntryRange_2_to_255">
					<Description Id="24" Level="Output">Start check reserved entry range 2 to 255</Description>
					<CallTestFunction Name="CheckReservedEntryRange">
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>2</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>odDeviceObjectdictionary</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="END">
					<Compare>
						<NotEqual>
							<Value1>bAtLeastOneModuleMatch</Value1>
							<Value2>true</Value2>
							<SkipCase Id="25">SKIP TEST(no module/channel supports the current profile)</SkipCase>
						</NotEqual>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bDEBUG</Value1>
							<Value2>true</Value2>
							<WriteLine Id="26" Param0="strResult" Level="Verbose">DEBUG | Result : '{0}'.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>strResult</Value1>
							<Value2>EmptyString</Value2>
							<ReturnSuccess Id="27">Test succeed</ReturnSuccess>
						</Equal>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>strResult</Value1>
							<Value2>EmptyString</Value2>
							<RaiseError Id="28"></RaiseError>
						</NotEqual>
					</Compare>
				</TestStep>
			</TestCase>
			<TestCase Name="offline | 0xF396 (Latched Global Manufacturer Warning Details)" CaseId="31">
				<Description>
					<PreCondition>- The device profile is 5003
- The module profile is 2011
- The submodule profile is 0</PreCondition>
					<Action>- Iterate over all offline defined modules/channels and if the PreCondition matches the following operations are done:
- Get the offline description of object 0xF396(+module specific offset) 'Latched Global Manufacturer Warning Details' and all entries
 Check:
    (Name)
    BitSize
    DataType
    Rx / Tx mappable
    Default Data
    MinData
    Flags       </Action>
					<PostCondition>Error if
- mandatory object / entry is not defined
- an optional object exists and the entries are invalid
- Object / entry description does not match with the specification</PostCondition>
					<ProposalForSolution>- Define the missing objects
- correct object / entry description</ProposalForSolution>
					<References>
						<Reference Specification="ETG.5003.2011"></Reference>
					</References>
					<Mandatory>true</Mandatory>
				</Description>
				<TestStep Name="InitResult">
					<SetVariable Target="strResult">EmptyString</SetVariable>
				</TestStep>
				<TestStep Name="CheckIfOdAvailable">
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Mailbox</Value1>
							<Value2>false</Value2>
							<SkipCase Id="1">DuT does not support mailbox.</SkipCase>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Mailbox.CoE</Value1>
							<Value2>false</Value2>
							<SkipCase Id="2">DuT does not support CoE.</SkipCase>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep>
					<GetObjectDictionary Target="odDeviceObjectdictionary">
						<DictionaryType>Offline</DictionaryType>
					</GetObjectDictionary>
					<SkipOnFailure Id="3">No offline object dictionary defined.</SkipOnFailure>
				</TestStep>
				<TestStep>
					<GetObjectList Count="u32Tmp" Target="odDeviceObjectdictionaryList" SourceDict="odDeviceObjectdictionary"></GetObjectList>
					<Compare>
						<Equal>
							<Value1>u32Tmp</Value1>
							<Value2>0</Value2>
							<SkipCase Id="4">No offline object dictionary defined.</SkipCase>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="InitAtLeastOneProfileMatch">
					<SetVariable Target="bAtLeastOneModuleMatch">false</SetVariable>
				</TestStep>
				<TestStep Name="GetCurrentProfileList">
					<SizeOf UInt32Var="u32Tmp">arrOfflineProfiles</SizeOf>
					<Compare>
						<Equal>
							<Value1>u32Tmp</Value1>
							<Value2>0</Value2>
							<CallTestFunction Name="GetCurrentProfileList">
								<Parameter>"offline"</Parameter>
								<Parameter>"SafeOP"</Parameter>
								<OutParameter>arrOfflineProfiles</OutParameter>
							</CallTestFunction>
						</Equal>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>u32Tmp</Value1>
							<Value2>0</Value2>
							<WriteLine Id="5" Param0="arrOfflineProfiles" Level="Verbose">Use previously created profile list ({0})</WriteLine>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep>
					<SizeOf UInt32Var="u32Tmp">arrOfflineProfiles</SizeOf>
				</TestStep>
				<TestStep>
					<InitArray TargetArray="arrCurrentProfiles" Length="u32Tmp"></InitArray>
				</TestStep>
				<TestStep>
					<CopyArray>
						<SourceArray>arrOfflineProfiles</SourceArray>
						<DestinationArray>arrCurrentProfiles</DestinationArray>
						<Length>u32Tmp</Length>
					</CopyArray>
				</TestStep>
				<TestStep Name="IsProfileSupported">
					<CallTestFunction Name="DeviceAndModuleProfileDefined">
						<Parameter>arrCurrentProfiles</Parameter>
						<Parameter>5003</Parameter>
						<Parameter>2011</Parameter>
						<OutParameter>bAtLeastOneModuleMatch</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>bAtLeastOneModuleMatch</Value1>
							<Value2>false</Value2>
							<GotoStep>END</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="GetObjectIndexInclOffset">
					<SetVariable Target="u16ObjectIndexInclOffset">#xF396</SetVariable>
					<WriteLine Id="6" Param0="u16ObjectIndexInclOffset" Level="Verbose">ObjectIndex '0x{0:X}' (module independent)</WriteLine>
				</TestStep>
				<TestStep Name="LoadDeviceObjectDictionary">
					<Description Id="7" Level="Verbose">Load 'offline' object dictionary for testing.</Description>
					<GetObjectDictionary Target="odDeviceObjectdictionary">
						<DictionaryType>Offline</DictionaryType>
					</GetObjectDictionary>
					<RaiseErrorOnFailure Id="8">VerifyObject : failed to load offline object dictionary.</RaiseErrorOnFailure>
				</TestStep>
				<TestStep Name="SetObjectRequiredLevel">
					<SetVariable Target="bObjectOrEntryRequiredLevel">1</SetVariable>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<CallTestFunction Name="IsEntryDefined">
								<Parameter>#xF386</Parameter>
								<Parameter>0</Parameter>
								<Parameter>offline</Parameter>
								<OutParameter>bConditionTrue</OutParameter>
							</CallTestFunction>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bConditionTrue</Value1>
							<Value2>true</Value2>
							<SetVariable Target="bObjectOrEntryRequiredLevel">3</SetVariable>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>3</Value2>
							<WriteLine Id="9" Param0="u16ObjectIndexInclOffset" Param1="#xF386" Level="Verbose">0x{0:X4} 'Latched Global Manufacturer Warning Details' shall be available (the entry 0x{1:X4}.0 is available (offline)</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>1</Value2>
							<WriteLine Id="10" Param0="u16ObjectIndexInclOffset" Param1="#xF386" Level="Verbose">0x{0:X4} 'Latched Global Manufacturer Warning Details' may be available (the entry 0x{1:X4}.0 is not available (offline)</WriteLine>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CheckIfObjectExists">
					<GetObjectDescription SourceDictionary="odDeviceObjectdictionary" Index="u16ObjectIndexInclOffset" SubIndex="-1"></GetObjectDescription>
					<GotoOnSuccess>CallCheckObjectDescription</GotoOnSuccess>
				</TestStep>
				<TestStep Name="HandleNotExistingObject">
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>3</Value2>
							<SetVariable Target="strResult" Param0="u16ObjectIndexInclOffset">The object 0x{0:X4} 'Latched Global Manufacturer Warning Details' does not exists.</SetVariable>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>3</Value2>
							<WriteLine Id="11" Param0="u16ObjectIndexInclOffset" Level="Error">The object 0x{0:X4} 'Latched Global Manufacturer Warning Details' does not exists.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>2</Value2>
							<WriteLine Id="12" Param0="u16ObjectIndexInclOffset" Level="Warning">The object 0x{0:X4} 'Latched Global Manufacturer Warning Details' does not exists.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>1</Value2>
							<WriteLine Id="13" Param0="u16ObjectIndexInclOffset" Level="Output">The object 0x{0:X4} 'Latched Global Manufacturer Warning Details' does not exists.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>END</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CallCheckObjectDescription">
					<Description Id="14" Param0="u16ObjectIndexInclOffset" Level="Output">Verify the object description 0x{0:X4} 'Latched Global Manufacturer Warning Details'.</Description>
					<CallTestFunction Name="CheckObjectDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"offline"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>"Latched Global Manufacturer Warning Details"</Parameter>
						<Parameter>null</Parameter>
						<Parameter>9</Parameter>
						<Parameter>-1</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<GotoStep>END</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="InitEntryBittOffset">
					<SetVariable Target="i32CurrentBitOffset">0</SetVariable>
				</TestStep>
				<TestStep Name="StartSi0">
					<Description Id="15" Level="Output">Start validate SubIndex0</Description>
					<WriteLine Id="16" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : Subindex '0x{0:X}.0'</WriteLine>
				</TestStep>
				<TestStep Name="CallSi0CheckEntryDescription">
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"offline"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>0</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>null</Parameter>
						<Parameter>5</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>null</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>null</Parameter>
						<Parameter>null</Parameter>
						<Parameter>null</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>8</Parameter>
						<Parameter>i32CurrentBitOffset</Parameter>
						<Parameter>true</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="EndSi0">
					<SetVariable Target="i32CurrentBitOffset">16</SetVariable>
				</TestStep>
				<TestStep Name="StartSi1">
					<Description Id="17" Level="Output">Start validate SubIndex1</Description>
					<WriteLine Id="18" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : Subindex '0x{0:X}.1'</WriteLine>
				</TestStep>
				<TestStep Name="SetSi1RequiredLevel">
					<SetVariable Target="bObjectOrEntryRequiredLevel">1</SetVariable>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<CallTestFunction Name="IsEntryDefined">
								<Parameter>#xF386</Parameter>
								<Parameter>0</Parameter>
								<Parameter>offline</Parameter>
								<OutParameter>bConditionTrue</OutParameter>
							</CallTestFunction>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bConditionTrue</Value1>
							<Value2>true</Value2>
							<SetVariable Target="bObjectOrEntryRequiredLevel">3</SetVariable>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>3</Value2>
							<WriteLine Id="19" Param0="u16ObjectIndexInclOffset" Param1="#xF386" Level="Verbose">0x{0:X4}.1 'Latched Global Manufacturer Warning Details' shall be available (the entry 0x{1:X4}.0 is available (offline)</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>1</Value2>
							<WriteLine Id="20" Param0="u16ObjectIndexInclOffset" Param1="#xF386" Level="Verbose">0x{0:X4}.1 'Latched Global Manufacturer Warning Details' may be available (the entry 0x{1:X4}.0 is not available (offline)</WriteLine>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CheckIfSi1Exists">
					<GetObjectDescription SourceDictionary="odDeviceObjectdictionary" Index="u16ObjectIndexInclOffset" SubIndex="1">
						<Type>u16DataType</Type>
					</GetObjectDescription>
					<GotoOnFailure>HandleNotExistingSi1</GotoOnFailure>
				</TestStep>
				<TestStep>
					<Compare>
						<NotEqual>
							<Value1>u16DataType</Value1>
							<Value2>0</Value2>
							<GotoStep>CallSi1CheckEntryDescription</GotoStep>
						</NotEqual>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>1</Value2>
							<WriteLine Id="21" Param0="u16ObjectIndexInclOffset" Level="Verbose">The entry 0x{0:X4}.1 is defined as a padding entry.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>3</Value2>
							<WriteLine Id="22" Param0="u16ObjectIndexInclOffset" Level="Error">The entry 0x{0:X4}.1 shall not defined as a padding entry.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>3</Value2>
							<SetVariable Target="strResult" Param0="u16ObjectIndexInclOffset">The entry 0x{0:X4}.1 shall not defined as a padding entry.</SetVariable>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>EndSi1</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="HandleNotExistingSi1">
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>3</Value2>
							<SetVariable Target="strResult" Param0="u16ObjectIndexInclOffset">The entry 0x{0:X4}.1 does not exists.</SetVariable>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>3</Value2>
							<WriteLine Id="23" Param0="u16ObjectIndexInclOffset" Level="Error">The entry 0x{0:X4}.1 does not exists.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>3</Value2>
							<GotoStep>EndSi1</GotoStep>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="24" Param0="u16ObjectIndexInclOffset" Level="Output">The entry 0x{0:X4}.1 does not exists.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>EndSi1</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CallSi1CheckEntryDescription">
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"offline"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>1</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>"Latched Global Manufacturer Warning Details"</Parameter>
						<Parameter>7</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>null</Parameter>
						<Parameter>T</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>32</Parameter>
						<Parameter>i32CurrentBitOffset</Parameter>
						<Parameter>true</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="EndSi1">
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>3</Value2>
							<SetVariable Target="i32CurrentBitOffset">i32CurrentBitOffset + 32</SetVariable>
						</Equal>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>3</Value2>
							<SetVariable Target="i32CurrentBitOffset">-1</SetVariable>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep Name="CheckReservedEntryRange_2_to_255">
					<Description Id="25" Level="Output">Start check reserved entry range 2 to 255</Description>
					<CallTestFunction Name="CheckReservedEntryRange">
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>2</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>odDeviceObjectdictionary</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="END">
					<Compare>
						<NotEqual>
							<Value1>bAtLeastOneModuleMatch</Value1>
							<Value2>true</Value2>
							<SkipCase Id="26">SKIP TEST(no module/channel supports the current profile)</SkipCase>
						</NotEqual>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bDEBUG</Value1>
							<Value2>true</Value2>
							<WriteLine Id="27" Param0="strResult" Level="Verbose">DEBUG | Result : '{0}'.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>strResult</Value1>
							<Value2>EmptyString</Value2>
							<ReturnSuccess Id="28">Test succeed</ReturnSuccess>
						</Equal>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>strResult</Value1>
							<Value2>EmptyString</Value2>
							<RaiseError Id="29"></RaiseError>
						</NotEqual>
					</Compare>
				</TestStep>
			</TestCase>
			<TestCase Name="online | 0xF396 (Latched Global Manufacturer Warning Details)" CaseId="32">
				<Description>
					<PreCondition>- The device profile is 5003
- The module profile is 2011
- The submodule profile is 0</PreCondition>
					<Action>- Iterate over all online defined modules/channels and if the PreCondition matches the following operations are done:
- Get the online description of object 0xF396(+module specific offset) 'Latched Global Manufacturer Warning Details' and all entries
 Check:
    (Name)
    BitSize
    DataType
    Rx / Tx mappable
    Default Data
    MinData
    Flags       </Action>
					<PostCondition>Error if
- mandatory object / entry is not defined
- an optional object exists and the entries are invalid
- Object / entry description does not match with the specification</PostCondition>
					<ProposalForSolution>- Define the missing objects
- correct object / entry description</ProposalForSolution>
					<References>
						<Reference Specification="ETG.5003.2011"></Reference>
					</References>
					<Mandatory>true</Mandatory>
				</Description>
				<TestStep Name="InitResult">
					<SetVariable Target="strResult">EmptyString</SetVariable>
				</TestStep>
				<TestStep Name="CheckIfOdAvailable">
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Mailbox</Value1>
							<Value2>false</Value2>
							<SkipCase Id="1">DuT does not support mailbox.</SkipCase>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Mailbox.CoE</Value1>
							<Value2>false</Value2>
							<SkipCase Id="2">DuT does not support CoE.</SkipCase>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Mailbox.CoE.SdoInfo</Value1>
							<Value2>false</Value2>
							<SkipCase Id="3">DuT does not support SDO Info.</SkipCase>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="InitAtLeastOneProfileMatch">
					<SetVariable Target="bAtLeastOneModuleMatch">false</SetVariable>
				</TestStep>
				<TestStep Name="GetCurrentProfileList">
					<SizeOf UInt32Var="u32Tmp">arrOnlineProfiles</SizeOf>
					<Compare>
						<Equal>
							<Value1>u32Tmp</Value1>
							<Value2>0</Value2>
							<CallTestFunction Name="GetCurrentProfileList">
								<Parameter>"online"</Parameter>
								<Parameter>"SafeOP"</Parameter>
								<OutParameter>arrOnlineProfiles</OutParameter>
							</CallTestFunction>
						</Equal>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>u32Tmp</Value1>
							<Value2>0</Value2>
							<WriteLine Id="4" Param0="arrOnlineProfiles" Level="Verbose">Use previously created profile list ({0})</WriteLine>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep>
					<SizeOf UInt32Var="u32Tmp">arrOnlineProfiles</SizeOf>
				</TestStep>
				<TestStep>
					<InitArray TargetArray="arrCurrentProfiles" Length="u32Tmp"></InitArray>
				</TestStep>
				<TestStep>
					<CopyArray>
						<SourceArray>arrOnlineProfiles</SourceArray>
						<DestinationArray>arrCurrentProfiles</DestinationArray>
						<Length>u32Tmp</Length>
					</CopyArray>
				</TestStep>
				<TestStep Name="IsProfileSupported">
					<CallTestFunction Name="DeviceAndModuleProfileDefined">
						<Parameter>arrCurrentProfiles</Parameter>
						<Parameter>5003</Parameter>
						<Parameter>2011</Parameter>
						<OutParameter>bAtLeastOneModuleMatch</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>bAtLeastOneModuleMatch</Value1>
							<Value2>false</Value2>
							<GotoStep>END</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="GetObjectIndexInclOffset">
					<SetVariable Target="u16ObjectIndexInclOffset">#xF396</SetVariable>
					<WriteLine Id="5" Param0="u16ObjectIndexInclOffset" Level="Verbose">ObjectIndex '0x{0:X}' (module independent)</WriteLine>
				</TestStep>
				<TestStep Name="LoadDeviceObjectDictionary">
					<Description Id="6" Level="Verbose">Load 'online' object dictionary for testing.</Description>
					<GetObjectDictionary Target="odDeviceObjectdictionary">
						<DictionaryType>Online</DictionaryType>
					</GetObjectDictionary>
					<RaiseErrorOnFailure Id="7">VerifyObject : failed to load online object dictionary.</RaiseErrorOnFailure>
				</TestStep>
				<TestStep Name="SetObjectRequiredLevel">
					<SetVariable Target="bObjectOrEntryRequiredLevel">1</SetVariable>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<CallTestFunction Name="IsEntryDefined">
								<Parameter>#xF386</Parameter>
								<Parameter>0</Parameter>
								<Parameter>online</Parameter>
								<OutParameter>bConditionTrue</OutParameter>
							</CallTestFunction>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bConditionTrue</Value1>
							<Value2>true</Value2>
							<SetVariable Target="bObjectOrEntryRequiredLevel">3</SetVariable>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>3</Value2>
							<WriteLine Id="8" Param0="u16ObjectIndexInclOffset" Param1="#xF386" Level="Verbose">0x{0:X4} 'Latched Global Manufacturer Warning Details' shall be available (the entry 0x{1:X4}.0 is available (online)</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>1</Value2>
							<WriteLine Id="9" Param0="u16ObjectIndexInclOffset" Param1="#xF386" Level="Verbose">0x{0:X4} 'Latched Global Manufacturer Warning Details' may be available (the entry 0x{1:X4}.0 is not available (online)</WriteLine>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CheckIfObjectExists">
					<GetObjectDescription SourceDictionary="odDeviceObjectdictionary" Index="u16ObjectIndexInclOffset" SubIndex="-1"></GetObjectDescription>
					<GotoOnSuccess>CallCheckObjectDescription</GotoOnSuccess>
				</TestStep>
				<TestStep Name="HandleNotExistingObject">
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>3</Value2>
							<SetVariable Target="strResult" Param0="u16ObjectIndexInclOffset">The object 0x{0:X4} 'Latched Global Manufacturer Warning Details' does not exists.</SetVariable>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>3</Value2>
							<WriteLine Id="10" Param0="u16ObjectIndexInclOffset" Level="Error">The object 0x{0:X4} 'Latched Global Manufacturer Warning Details' does not exists.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>2</Value2>
							<WriteLine Id="11" Param0="u16ObjectIndexInclOffset" Level="Warning">The object 0x{0:X4} 'Latched Global Manufacturer Warning Details' does not exists.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>1</Value2>
							<WriteLine Id="12" Param0="u16ObjectIndexInclOffset" Level="Output">The object 0x{0:X4} 'Latched Global Manufacturer Warning Details' does not exists.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>END</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CallCheckObjectDescription">
					<Description Id="13" Param0="u16ObjectIndexInclOffset" Level="Output">Verify the object description 0x{0:X4} 'Latched Global Manufacturer Warning Details'.</Description>
					<CallTestFunction Name="CheckObjectDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"online"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>"Latched Global Manufacturer Warning Details"</Parameter>
						<Parameter>null</Parameter>
						<Parameter>9</Parameter>
						<Parameter>-1</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<GotoStep>END</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="InitEntryBittOffset">
					<SetVariable Target="i32CurrentBitOffset">0</SetVariable>
				</TestStep>
				<TestStep Name="StartSi0">
					<Description Id="14" Level="Output">Start validate SubIndex0</Description>
					<WriteLine Id="15" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : Subindex '0x{0:X}.0'</WriteLine>
				</TestStep>
				<TestStep Name="CallSi0CheckEntryDescription">
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"online"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>0</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>null</Parameter>
						<Parameter>5</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>null</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>null</Parameter>
						<Parameter>null</Parameter>
						<Parameter>null</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>8</Parameter>
						<Parameter>i32CurrentBitOffset</Parameter>
						<Parameter>true</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="EndSi0">
					<SetVariable Target="i32CurrentBitOffset">16</SetVariable>
				</TestStep>
				<TestStep Name="StartSi1">
					<Description Id="16" Level="Output">Start validate SubIndex1</Description>
					<WriteLine Id="17" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : Subindex '0x{0:X}.1'</WriteLine>
				</TestStep>
				<TestStep Name="SetSi1RequiredLevel">
					<SetVariable Target="bObjectOrEntryRequiredLevel">1</SetVariable>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<CallTestFunction Name="IsEntryDefined">
								<Parameter>#xF386</Parameter>
								<Parameter>0</Parameter>
								<Parameter>online</Parameter>
								<OutParameter>bConditionTrue</OutParameter>
							</CallTestFunction>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bConditionTrue</Value1>
							<Value2>true</Value2>
							<SetVariable Target="bObjectOrEntryRequiredLevel">3</SetVariable>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>3</Value2>
							<WriteLine Id="18" Param0="u16ObjectIndexInclOffset" Param1="#xF386" Level="Verbose">0x{0:X4}.1 'Latched Global Manufacturer Warning Details' shall be available (the entry 0x{1:X4}.0 is available (online)</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>1</Value2>
							<WriteLine Id="19" Param0="u16ObjectIndexInclOffset" Param1="#xF386" Level="Verbose">0x{0:X4}.1 'Latched Global Manufacturer Warning Details' may be available (the entry 0x{1:X4}.0 is not available (online)</WriteLine>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CheckIfSi1Exists">
					<GetObjectDescription SourceDictionary="odDeviceObjectdictionary" Index="u16ObjectIndexInclOffset" SubIndex="1">
						<Type>u16DataType</Type>
					</GetObjectDescription>
					<GotoOnFailure>HandleNotExistingSi1</GotoOnFailure>
				</TestStep>
				<TestStep>
					<Compare>
						<NotEqual>
							<Value1>u16DataType</Value1>
							<Value2>0</Value2>
							<GotoStep>CallSi1CheckEntryDescription</GotoStep>
						</NotEqual>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>1</Value2>
							<WriteLine Id="20" Param0="u16ObjectIndexInclOffset" Level="Verbose">The entry 0x{0:X4}.1 is defined as a padding entry.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>3</Value2>
							<WriteLine Id="21" Param0="u16ObjectIndexInclOffset" Level="Error">The entry 0x{0:X4}.1 shall not defined as a padding entry.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>3</Value2>
							<SetVariable Target="strResult" Param0="u16ObjectIndexInclOffset">The entry 0x{0:X4}.1 shall not defined as a padding entry.</SetVariable>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>EndSi1</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="HandleNotExistingSi1">
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>3</Value2>
							<SetVariable Target="strResult" Param0="u16ObjectIndexInclOffset">The entry 0x{0:X4}.1 does not exists.</SetVariable>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>3</Value2>
							<WriteLine Id="22" Param0="u16ObjectIndexInclOffset" Level="Error">The entry 0x{0:X4}.1 does not exists.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>3</Value2>
							<GotoStep>EndSi1</GotoStep>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="23" Param0="u16ObjectIndexInclOffset" Level="Output">The entry 0x{0:X4}.1 does not exists.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>EndSi1</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CallSi1CheckEntryDescription">
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"online"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>1</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>"Latched Global Manufacturer Warning Details"</Parameter>
						<Parameter>7</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>null</Parameter>
						<Parameter>T</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>32</Parameter>
						<Parameter>i32CurrentBitOffset</Parameter>
						<Parameter>true</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="EndSi1">
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>3</Value2>
							<SetVariable Target="i32CurrentBitOffset">i32CurrentBitOffset + 32</SetVariable>
						</Equal>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>3</Value2>
							<SetVariable Target="i32CurrentBitOffset">-1</SetVariable>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep Name="CheckReservedEntryRange_2_to_255">
					<Description Id="24" Level="Output">Start check reserved entry range 2 to 255</Description>
					<CallTestFunction Name="CheckReservedEntryRange">
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>2</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>odDeviceObjectdictionary</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="END">
					<Compare>
						<NotEqual>
							<Value1>bAtLeastOneModuleMatch</Value1>
							<Value2>true</Value2>
							<SkipCase Id="25">SKIP TEST(no module/channel supports the current profile)</SkipCase>
						</NotEqual>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bDEBUG</Value1>
							<Value2>true</Value2>
							<WriteLine Id="26" Param0="strResult" Level="Verbose">DEBUG | Result : '{0}'.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>strResult</Value1>
							<Value2>EmptyString</Value2>
							<ReturnSuccess Id="27">Test succeed</ReturnSuccess>
						</Equal>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>strResult</Value1>
							<Value2>EmptyString</Value2>
							<RaiseError Id="28"></RaiseError>
						</NotEqual>
					</Compare>
				</TestStep>
			</TestCase>
			<TestCase Name="offline | 0xF397 (Latched Global Device Error Details)" CaseId="33">
				<Description>
					<PreCondition>- The device profile is 5003
- The module profile is 2011
- The submodule profile is 0</PreCondition>
					<Action>- Iterate over all offline defined modules/channels and if the PreCondition matches the following operations are done:
- Get the offline description of object 0xF397(+module specific offset) 'Latched Global Device Error Details' and all entries
 Check:
    (Name)
    BitSize
    DataType
    Rx / Tx mappable
    Default Data
    MinData
    Flags       </Action>
					<PostCondition>Error if
- mandatory object / entry is not defined
- an optional object exists and the entries are invalid
- Object / entry description does not match with the specification</PostCondition>
					<ProposalForSolution>- Define the missing objects
- correct object / entry description</ProposalForSolution>
					<References>
						<Reference Specification="ETG.5003.2011"></Reference>
					</References>
					<Mandatory>true</Mandatory>
				</Description>
				<TestStep Name="InitResult">
					<SetVariable Target="strResult">EmptyString</SetVariable>
				</TestStep>
				<TestStep Name="CheckIfOdAvailable">
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Mailbox</Value1>
							<Value2>false</Value2>
							<SkipCase Id="1">DuT does not support mailbox.</SkipCase>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Mailbox.CoE</Value1>
							<Value2>false</Value2>
							<SkipCase Id="2">DuT does not support CoE.</SkipCase>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep>
					<GetObjectDictionary Target="odDeviceObjectdictionary">
						<DictionaryType>Offline</DictionaryType>
					</GetObjectDictionary>
					<SkipOnFailure Id="3">No offline object dictionary defined.</SkipOnFailure>
				</TestStep>
				<TestStep>
					<GetObjectList Count="u32Tmp" Target="odDeviceObjectdictionaryList" SourceDict="odDeviceObjectdictionary"></GetObjectList>
					<Compare>
						<Equal>
							<Value1>u32Tmp</Value1>
							<Value2>0</Value2>
							<SkipCase Id="4">No offline object dictionary defined.</SkipCase>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="InitAtLeastOneProfileMatch">
					<SetVariable Target="bAtLeastOneModuleMatch">false</SetVariable>
				</TestStep>
				<TestStep Name="GetCurrentProfileList">
					<SizeOf UInt32Var="u32Tmp">arrOfflineProfiles</SizeOf>
					<Compare>
						<Equal>
							<Value1>u32Tmp</Value1>
							<Value2>0</Value2>
							<CallTestFunction Name="GetCurrentProfileList">
								<Parameter>"offline"</Parameter>
								<Parameter>"SafeOP"</Parameter>
								<OutParameter>arrOfflineProfiles</OutParameter>
							</CallTestFunction>
						</Equal>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>u32Tmp</Value1>
							<Value2>0</Value2>
							<WriteLine Id="5" Param0="arrOfflineProfiles" Level="Verbose">Use previously created profile list ({0})</WriteLine>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep>
					<SizeOf UInt32Var="u32Tmp">arrOfflineProfiles</SizeOf>
				</TestStep>
				<TestStep>
					<InitArray TargetArray="arrCurrentProfiles" Length="u32Tmp"></InitArray>
				</TestStep>
				<TestStep>
					<CopyArray>
						<SourceArray>arrOfflineProfiles</SourceArray>
						<DestinationArray>arrCurrentProfiles</DestinationArray>
						<Length>u32Tmp</Length>
					</CopyArray>
				</TestStep>
				<TestStep Name="IsProfileSupported">
					<CallTestFunction Name="DeviceAndModuleProfileDefined">
						<Parameter>arrCurrentProfiles</Parameter>
						<Parameter>5003</Parameter>
						<Parameter>2011</Parameter>
						<OutParameter>bAtLeastOneModuleMatch</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>bAtLeastOneModuleMatch</Value1>
							<Value2>false</Value2>
							<GotoStep>END</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="GetObjectIndexInclOffset">
					<SetVariable Target="u16ObjectIndexInclOffset">#xF397</SetVariable>
					<WriteLine Id="6" Param0="u16ObjectIndexInclOffset" Level="Verbose">ObjectIndex '0x{0:X}' (module independent)</WriteLine>
				</TestStep>
				<TestStep Name="LoadDeviceObjectDictionary">
					<Description Id="7" Level="Verbose">Load 'offline' object dictionary for testing.</Description>
					<GetObjectDictionary Target="odDeviceObjectdictionary">
						<DictionaryType>Offline</DictionaryType>
					</GetObjectDictionary>
					<RaiseErrorOnFailure Id="8">VerifyObject : failed to load offline object dictionary.</RaiseErrorOnFailure>
				</TestStep>
				<TestStep Name="SetObjectRequiredLevel">
					<SetVariable Target="bObjectOrEntryRequiredLevel">1</SetVariable>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<CallTestFunction Name="IsEntryDefined">
								<Parameter>#xF387</Parameter>
								<Parameter>0</Parameter>
								<Parameter>offline</Parameter>
								<OutParameter>bConditionTrue</OutParameter>
							</CallTestFunction>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bConditionTrue</Value1>
							<Value2>true</Value2>
							<SetVariable Target="bObjectOrEntryRequiredLevel">3</SetVariable>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>3</Value2>
							<WriteLine Id="9" Param0="u16ObjectIndexInclOffset" Param1="#xF387" Level="Verbose">0x{0:X4} 'Latched Global Device Error Details' shall be available (the entry 0x{1:X4}.0 is available (offline)</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>1</Value2>
							<WriteLine Id="10" Param0="u16ObjectIndexInclOffset" Param1="#xF387" Level="Verbose">0x{0:X4} 'Latched Global Device Error Details' may be available (the entry 0x{1:X4}.0 is not available (offline)</WriteLine>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CheckIfObjectExists">
					<GetObjectDescription SourceDictionary="odDeviceObjectdictionary" Index="u16ObjectIndexInclOffset" SubIndex="-1"></GetObjectDescription>
					<GotoOnSuccess>CallCheckObjectDescription</GotoOnSuccess>
				</TestStep>
				<TestStep Name="HandleNotExistingObject">
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>3</Value2>
							<SetVariable Target="strResult" Param0="u16ObjectIndexInclOffset">The object 0x{0:X4} 'Latched Global Device Error Details' does not exists.</SetVariable>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>3</Value2>
							<WriteLine Id="11" Param0="u16ObjectIndexInclOffset" Level="Error">The object 0x{0:X4} 'Latched Global Device Error Details' does not exists.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>2</Value2>
							<WriteLine Id="12" Param0="u16ObjectIndexInclOffset" Level="Warning">The object 0x{0:X4} 'Latched Global Device Error Details' does not exists.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>1</Value2>
							<WriteLine Id="13" Param0="u16ObjectIndexInclOffset" Level="Output">The object 0x{0:X4} 'Latched Global Device Error Details' does not exists.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>END</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CallCheckObjectDescription">
					<Description Id="14" Param0="u16ObjectIndexInclOffset" Level="Output">Verify the object description 0x{0:X4} 'Latched Global Device Error Details'.</Description>
					<CallTestFunction Name="CheckObjectDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"offline"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>"Latched Global Device Error Details"</Parameter>
						<Parameter>null</Parameter>
						<Parameter>9</Parameter>
						<Parameter>-1</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<GotoStep>END</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="InitEntryBittOffset">
					<SetVariable Target="i32CurrentBitOffset">0</SetVariable>
				</TestStep>
				<TestStep Name="StartSi0">
					<Description Id="15" Level="Output">Start validate SubIndex0</Description>
					<WriteLine Id="16" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : Subindex '0x{0:X}.0'</WriteLine>
				</TestStep>
				<TestStep Name="CallSi0CheckEntryDescription">
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"offline"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>0</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>null</Parameter>
						<Parameter>5</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>null</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>null</Parameter>
						<Parameter>null</Parameter>
						<Parameter>null</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>8</Parameter>
						<Parameter>i32CurrentBitOffset</Parameter>
						<Parameter>true</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="EndSi0">
					<SetVariable Target="i32CurrentBitOffset">16</SetVariable>
				</TestStep>
				<TestStep Name="StartSi1">
					<Description Id="17" Level="Output">Start validate SubIndex1</Description>
					<WriteLine Id="18" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : Subindex '0x{0:X}.1'</WriteLine>
				</TestStep>
				<TestStep Name="SetSi1RequiredLevel">
					<SetVariable Target="bObjectOrEntryRequiredLevel">1</SetVariable>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<CallTestFunction Name="IsEntryDefined">
								<Parameter>#xF387</Parameter>
								<Parameter>0</Parameter>
								<Parameter>offline</Parameter>
								<OutParameter>bConditionTrue</OutParameter>
							</CallTestFunction>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bConditionTrue</Value1>
							<Value2>true</Value2>
							<SetVariable Target="bObjectOrEntryRequiredLevel">3</SetVariable>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>3</Value2>
							<WriteLine Id="19" Param0="u16ObjectIndexInclOffset" Param1="#xF387" Level="Verbose">0x{0:X4}.1 'Latched Global Device Error Details' shall be available (the entry 0x{1:X4}.0 is available (offline)</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>1</Value2>
							<WriteLine Id="20" Param0="u16ObjectIndexInclOffset" Param1="#xF387" Level="Verbose">0x{0:X4}.1 'Latched Global Device Error Details' may be available (the entry 0x{1:X4}.0 is not available (offline)</WriteLine>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CheckIfSi1Exists">
					<GetObjectDescription SourceDictionary="odDeviceObjectdictionary" Index="u16ObjectIndexInclOffset" SubIndex="1">
						<Type>u16DataType</Type>
					</GetObjectDescription>
					<GotoOnFailure>HandleNotExistingSi1</GotoOnFailure>
				</TestStep>
				<TestStep>
					<Compare>
						<NotEqual>
							<Value1>u16DataType</Value1>
							<Value2>0</Value2>
							<GotoStep>CallSi1CheckEntryDescription</GotoStep>
						</NotEqual>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>1</Value2>
							<WriteLine Id="21" Param0="u16ObjectIndexInclOffset" Level="Verbose">The entry 0x{0:X4}.1 is defined as a padding entry.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>3</Value2>
							<WriteLine Id="22" Param0="u16ObjectIndexInclOffset" Level="Error">The entry 0x{0:X4}.1 shall not defined as a padding entry.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>3</Value2>
							<SetVariable Target="strResult" Param0="u16ObjectIndexInclOffset">The entry 0x{0:X4}.1 shall not defined as a padding entry.</SetVariable>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>EndSi1</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="HandleNotExistingSi1">
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>3</Value2>
							<SetVariable Target="strResult" Param0="u16ObjectIndexInclOffset">The entry 0x{0:X4}.1 does not exists.</SetVariable>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>3</Value2>
							<WriteLine Id="23" Param0="u16ObjectIndexInclOffset" Level="Error">The entry 0x{0:X4}.1 does not exists.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>3</Value2>
							<GotoStep>EndSi1</GotoStep>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="24" Param0="u16ObjectIndexInclOffset" Level="Output">The entry 0x{0:X4}.1 does not exists.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>EndSi1</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CallSi1CheckEntryDescription">
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"offline"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>1</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>"Latched Global Device Error Details"</Parameter>
						<Parameter>7</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>null</Parameter>
						<Parameter>T</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>32</Parameter>
						<Parameter>i32CurrentBitOffset</Parameter>
						<Parameter>true</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="EndSi1">
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>3</Value2>
							<SetVariable Target="i32CurrentBitOffset">i32CurrentBitOffset + 32</SetVariable>
						</Equal>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>3</Value2>
							<SetVariable Target="i32CurrentBitOffset">-1</SetVariable>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep Name="CheckReservedEntryRange_2_to_255">
					<Description Id="25" Level="Output">Start check reserved entry range 2 to 255</Description>
					<CallTestFunction Name="CheckReservedEntryRange">
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>2</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>odDeviceObjectdictionary</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="END">
					<Compare>
						<NotEqual>
							<Value1>bAtLeastOneModuleMatch</Value1>
							<Value2>true</Value2>
							<SkipCase Id="26">SKIP TEST(no module/channel supports the current profile)</SkipCase>
						</NotEqual>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bDEBUG</Value1>
							<Value2>true</Value2>
							<WriteLine Id="27" Param0="strResult" Level="Verbose">DEBUG | Result : '{0}'.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>strResult</Value1>
							<Value2>EmptyString</Value2>
							<ReturnSuccess Id="28">Test succeed</ReturnSuccess>
						</Equal>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>strResult</Value1>
							<Value2>EmptyString</Value2>
							<RaiseError Id="29"></RaiseError>
						</NotEqual>
					</Compare>
				</TestStep>
			</TestCase>
			<TestCase Name="online | 0xF397 (Latched Global Device Error Details)" CaseId="34">
				<Description>
					<PreCondition>- The device profile is 5003
- The module profile is 2011
- The submodule profile is 0</PreCondition>
					<Action>- Iterate over all online defined modules/channels and if the PreCondition matches the following operations are done:
- Get the online description of object 0xF397(+module specific offset) 'Latched Global Device Error Details' and all entries
 Check:
    (Name)
    BitSize
    DataType
    Rx / Tx mappable
    Default Data
    MinData
    Flags       </Action>
					<PostCondition>Error if
- mandatory object / entry is not defined
- an optional object exists and the entries are invalid
- Object / entry description does not match with the specification</PostCondition>
					<ProposalForSolution>- Define the missing objects
- correct object / entry description</ProposalForSolution>
					<References>
						<Reference Specification="ETG.5003.2011"></Reference>
					</References>
					<Mandatory>true</Mandatory>
				</Description>
				<TestStep Name="InitResult">
					<SetVariable Target="strResult">EmptyString</SetVariable>
				</TestStep>
				<TestStep Name="CheckIfOdAvailable">
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Mailbox</Value1>
							<Value2>false</Value2>
							<SkipCase Id="1">DuT does not support mailbox.</SkipCase>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Mailbox.CoE</Value1>
							<Value2>false</Value2>
							<SkipCase Id="2">DuT does not support CoE.</SkipCase>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Mailbox.CoE.SdoInfo</Value1>
							<Value2>false</Value2>
							<SkipCase Id="3">DuT does not support SDO Info.</SkipCase>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="InitAtLeastOneProfileMatch">
					<SetVariable Target="bAtLeastOneModuleMatch">false</SetVariable>
				</TestStep>
				<TestStep Name="GetCurrentProfileList">
					<SizeOf UInt32Var="u32Tmp">arrOnlineProfiles</SizeOf>
					<Compare>
						<Equal>
							<Value1>u32Tmp</Value1>
							<Value2>0</Value2>
							<CallTestFunction Name="GetCurrentProfileList">
								<Parameter>"online"</Parameter>
								<Parameter>"SafeOP"</Parameter>
								<OutParameter>arrOnlineProfiles</OutParameter>
							</CallTestFunction>
						</Equal>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>u32Tmp</Value1>
							<Value2>0</Value2>
							<WriteLine Id="4" Param0="arrOnlineProfiles" Level="Verbose">Use previously created profile list ({0})</WriteLine>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep>
					<SizeOf UInt32Var="u32Tmp">arrOnlineProfiles</SizeOf>
				</TestStep>
				<TestStep>
					<InitArray TargetArray="arrCurrentProfiles" Length="u32Tmp"></InitArray>
				</TestStep>
				<TestStep>
					<CopyArray>
						<SourceArray>arrOnlineProfiles</SourceArray>
						<DestinationArray>arrCurrentProfiles</DestinationArray>
						<Length>u32Tmp</Length>
					</CopyArray>
				</TestStep>
				<TestStep Name="IsProfileSupported">
					<CallTestFunction Name="DeviceAndModuleProfileDefined">
						<Parameter>arrCurrentProfiles</Parameter>
						<Parameter>5003</Parameter>
						<Parameter>2011</Parameter>
						<OutParameter>bAtLeastOneModuleMatch</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>bAtLeastOneModuleMatch</Value1>
							<Value2>false</Value2>
							<GotoStep>END</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="GetObjectIndexInclOffset">
					<SetVariable Target="u16ObjectIndexInclOffset">#xF397</SetVariable>
					<WriteLine Id="5" Param0="u16ObjectIndexInclOffset" Level="Verbose">ObjectIndex '0x{0:X}' (module independent)</WriteLine>
				</TestStep>
				<TestStep Name="LoadDeviceObjectDictionary">
					<Description Id="6" Level="Verbose">Load 'online' object dictionary for testing.</Description>
					<GetObjectDictionary Target="odDeviceObjectdictionary">
						<DictionaryType>Online</DictionaryType>
					</GetObjectDictionary>
					<RaiseErrorOnFailure Id="7">VerifyObject : failed to load online object dictionary.</RaiseErrorOnFailure>
				</TestStep>
				<TestStep Name="SetObjectRequiredLevel">
					<SetVariable Target="bObjectOrEntryRequiredLevel">1</SetVariable>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<CallTestFunction Name="IsEntryDefined">
								<Parameter>#xF387</Parameter>
								<Parameter>0</Parameter>
								<Parameter>online</Parameter>
								<OutParameter>bConditionTrue</OutParameter>
							</CallTestFunction>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bConditionTrue</Value1>
							<Value2>true</Value2>
							<SetVariable Target="bObjectOrEntryRequiredLevel">3</SetVariable>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>3</Value2>
							<WriteLine Id="8" Param0="u16ObjectIndexInclOffset" Param1="#xF387" Level="Verbose">0x{0:X4} 'Latched Global Device Error Details' shall be available (the entry 0x{1:X4}.0 is available (online)</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>1</Value2>
							<WriteLine Id="9" Param0="u16ObjectIndexInclOffset" Param1="#xF387" Level="Verbose">0x{0:X4} 'Latched Global Device Error Details' may be available (the entry 0x{1:X4}.0 is not available (online)</WriteLine>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CheckIfObjectExists">
					<GetObjectDescription SourceDictionary="odDeviceObjectdictionary" Index="u16ObjectIndexInclOffset" SubIndex="-1"></GetObjectDescription>
					<GotoOnSuccess>CallCheckObjectDescription</GotoOnSuccess>
				</TestStep>
				<TestStep Name="HandleNotExistingObject">
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>3</Value2>
							<SetVariable Target="strResult" Param0="u16ObjectIndexInclOffset">The object 0x{0:X4} 'Latched Global Device Error Details' does not exists.</SetVariable>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>3</Value2>
							<WriteLine Id="10" Param0="u16ObjectIndexInclOffset" Level="Error">The object 0x{0:X4} 'Latched Global Device Error Details' does not exists.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>2</Value2>
							<WriteLine Id="11" Param0="u16ObjectIndexInclOffset" Level="Warning">The object 0x{0:X4} 'Latched Global Device Error Details' does not exists.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>1</Value2>
							<WriteLine Id="12" Param0="u16ObjectIndexInclOffset" Level="Output">The object 0x{0:X4} 'Latched Global Device Error Details' does not exists.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>END</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CallCheckObjectDescription">
					<Description Id="13" Param0="u16ObjectIndexInclOffset" Level="Output">Verify the object description 0x{0:X4} 'Latched Global Device Error Details'.</Description>
					<CallTestFunction Name="CheckObjectDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"online"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>"Latched Global Device Error Details"</Parameter>
						<Parameter>null</Parameter>
						<Parameter>9</Parameter>
						<Parameter>-1</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<GotoStep>END</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="InitEntryBittOffset">
					<SetVariable Target="i32CurrentBitOffset">0</SetVariable>
				</TestStep>
				<TestStep Name="StartSi0">
					<Description Id="14" Level="Output">Start validate SubIndex0</Description>
					<WriteLine Id="15" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : Subindex '0x{0:X}.0'</WriteLine>
				</TestStep>
				<TestStep Name="CallSi0CheckEntryDescription">
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"online"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>0</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>null</Parameter>
						<Parameter>5</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>null</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>null</Parameter>
						<Parameter>null</Parameter>
						<Parameter>null</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>8</Parameter>
						<Parameter>i32CurrentBitOffset</Parameter>
						<Parameter>true</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="EndSi0">
					<SetVariable Target="i32CurrentBitOffset">16</SetVariable>
				</TestStep>
				<TestStep Name="StartSi1">
					<Description Id="16" Level="Output">Start validate SubIndex1</Description>
					<WriteLine Id="17" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : Subindex '0x{0:X}.1'</WriteLine>
				</TestStep>
				<TestStep Name="SetSi1RequiredLevel">
					<SetVariable Target="bObjectOrEntryRequiredLevel">1</SetVariable>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<CallTestFunction Name="IsEntryDefined">
								<Parameter>#xF387</Parameter>
								<Parameter>0</Parameter>
								<Parameter>online</Parameter>
								<OutParameter>bConditionTrue</OutParameter>
							</CallTestFunction>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bConditionTrue</Value1>
							<Value2>true</Value2>
							<SetVariable Target="bObjectOrEntryRequiredLevel">3</SetVariable>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>3</Value2>
							<WriteLine Id="18" Param0="u16ObjectIndexInclOffset" Param1="#xF387" Level="Verbose">0x{0:X4}.1 'Latched Global Device Error Details' shall be available (the entry 0x{1:X4}.0 is available (online)</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>1</Value2>
							<WriteLine Id="19" Param0="u16ObjectIndexInclOffset" Param1="#xF387" Level="Verbose">0x{0:X4}.1 'Latched Global Device Error Details' may be available (the entry 0x{1:X4}.0 is not available (online)</WriteLine>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CheckIfSi1Exists">
					<GetObjectDescription SourceDictionary="odDeviceObjectdictionary" Index="u16ObjectIndexInclOffset" SubIndex="1">
						<Type>u16DataType</Type>
					</GetObjectDescription>
					<GotoOnFailure>HandleNotExistingSi1</GotoOnFailure>
				</TestStep>
				<TestStep>
					<Compare>
						<NotEqual>
							<Value1>u16DataType</Value1>
							<Value2>0</Value2>
							<GotoStep>CallSi1CheckEntryDescription</GotoStep>
						</NotEqual>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>1</Value2>
							<WriteLine Id="20" Param0="u16ObjectIndexInclOffset" Level="Verbose">The entry 0x{0:X4}.1 is defined as a padding entry.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>3</Value2>
							<WriteLine Id="21" Param0="u16ObjectIndexInclOffset" Level="Error">The entry 0x{0:X4}.1 shall not defined as a padding entry.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>3</Value2>
							<SetVariable Target="strResult" Param0="u16ObjectIndexInclOffset">The entry 0x{0:X4}.1 shall not defined as a padding entry.</SetVariable>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>EndSi1</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="HandleNotExistingSi1">
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>3</Value2>
							<SetVariable Target="strResult" Param0="u16ObjectIndexInclOffset">The entry 0x{0:X4}.1 does not exists.</SetVariable>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>3</Value2>
							<WriteLine Id="22" Param0="u16ObjectIndexInclOffset" Level="Error">The entry 0x{0:X4}.1 does not exists.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>3</Value2>
							<GotoStep>EndSi1</GotoStep>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="23" Param0="u16ObjectIndexInclOffset" Level="Output">The entry 0x{0:X4}.1 does not exists.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>EndSi1</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CallSi1CheckEntryDescription">
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"online"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>1</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>"Latched Global Device Error Details"</Parameter>
						<Parameter>7</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>null</Parameter>
						<Parameter>T</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>32</Parameter>
						<Parameter>i32CurrentBitOffset</Parameter>
						<Parameter>true</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="EndSi1">
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>3</Value2>
							<SetVariable Target="i32CurrentBitOffset">i32CurrentBitOffset + 32</SetVariable>
						</Equal>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>3</Value2>
							<SetVariable Target="i32CurrentBitOffset">-1</SetVariable>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep Name="CheckReservedEntryRange_2_to_255">
					<Description Id="24" Level="Output">Start check reserved entry range 2 to 255</Description>
					<CallTestFunction Name="CheckReservedEntryRange">
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>2</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>odDeviceObjectdictionary</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="END">
					<Compare>
						<NotEqual>
							<Value1>bAtLeastOneModuleMatch</Value1>
							<Value2>true</Value2>
							<SkipCase Id="25">SKIP TEST(no module/channel supports the current profile)</SkipCase>
						</NotEqual>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bDEBUG</Value1>
							<Value2>true</Value2>
							<WriteLine Id="26" Param0="strResult" Level="Verbose">DEBUG | Result : '{0}'.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>strResult</Value1>
							<Value2>EmptyString</Value2>
							<ReturnSuccess Id="27">Test succeed</ReturnSuccess>
						</Equal>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>strResult</Value1>
							<Value2>EmptyString</Value2>
							<RaiseError Id="28"></RaiseError>
						</NotEqual>
					</Compare>
				</TestStep>
			</TestCase>
			<TestCase Name="offline | 0xF398 (Latched Global Manufacturer Error Details)" CaseId="35">
				<Description>
					<PreCondition>- The device profile is 5003
- The module profile is 2011
- The submodule profile is 0</PreCondition>
					<Action>- Iterate over all offline defined modules/channels and if the PreCondition matches the following operations are done:
- Get the offline description of object 0xF398(+module specific offset) 'Latched Global Manufacturer Error Details' and all entries
 Check:
    (Name)
    BitSize
    DataType
    Rx / Tx mappable
    Default Data
    MinData
    Flags       </Action>
					<PostCondition>Error if
- mandatory object / entry is not defined
- an optional object exists and the entries are invalid
- Object / entry description does not match with the specification</PostCondition>
					<ProposalForSolution>- Define the missing objects
- correct object / entry description</ProposalForSolution>
					<References>
						<Reference Specification="ETG.5003.2011"></Reference>
					</References>
					<Mandatory>true</Mandatory>
				</Description>
				<TestStep Name="InitResult">
					<SetVariable Target="strResult">EmptyString</SetVariable>
				</TestStep>
				<TestStep Name="CheckIfOdAvailable">
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Mailbox</Value1>
							<Value2>false</Value2>
							<SkipCase Id="1">DuT does not support mailbox.</SkipCase>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Mailbox.CoE</Value1>
							<Value2>false</Value2>
							<SkipCase Id="2">DuT does not support CoE.</SkipCase>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep>
					<GetObjectDictionary Target="odDeviceObjectdictionary">
						<DictionaryType>Offline</DictionaryType>
					</GetObjectDictionary>
					<SkipOnFailure Id="3">No offline object dictionary defined.</SkipOnFailure>
				</TestStep>
				<TestStep>
					<GetObjectList Count="u32Tmp" Target="odDeviceObjectdictionaryList" SourceDict="odDeviceObjectdictionary"></GetObjectList>
					<Compare>
						<Equal>
							<Value1>u32Tmp</Value1>
							<Value2>0</Value2>
							<SkipCase Id="4">No offline object dictionary defined.</SkipCase>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="InitAtLeastOneProfileMatch">
					<SetVariable Target="bAtLeastOneModuleMatch">false</SetVariable>
				</TestStep>
				<TestStep Name="GetCurrentProfileList">
					<SizeOf UInt32Var="u32Tmp">arrOfflineProfiles</SizeOf>
					<Compare>
						<Equal>
							<Value1>u32Tmp</Value1>
							<Value2>0</Value2>
							<CallTestFunction Name="GetCurrentProfileList">
								<Parameter>"offline"</Parameter>
								<Parameter>"SafeOP"</Parameter>
								<OutParameter>arrOfflineProfiles</OutParameter>
							</CallTestFunction>
						</Equal>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>u32Tmp</Value1>
							<Value2>0</Value2>
							<WriteLine Id="5" Param0="arrOfflineProfiles" Level="Verbose">Use previously created profile list ({0})</WriteLine>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep>
					<SizeOf UInt32Var="u32Tmp">arrOfflineProfiles</SizeOf>
				</TestStep>
				<TestStep>
					<InitArray TargetArray="arrCurrentProfiles" Length="u32Tmp"></InitArray>
				</TestStep>
				<TestStep>
					<CopyArray>
						<SourceArray>arrOfflineProfiles</SourceArray>
						<DestinationArray>arrCurrentProfiles</DestinationArray>
						<Length>u32Tmp</Length>
					</CopyArray>
				</TestStep>
				<TestStep Name="IsProfileSupported">
					<CallTestFunction Name="DeviceAndModuleProfileDefined">
						<Parameter>arrCurrentProfiles</Parameter>
						<Parameter>5003</Parameter>
						<Parameter>2011</Parameter>
						<OutParameter>bAtLeastOneModuleMatch</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>bAtLeastOneModuleMatch</Value1>
							<Value2>false</Value2>
							<GotoStep>END</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="GetObjectIndexInclOffset">
					<SetVariable Target="u16ObjectIndexInclOffset">#xF398</SetVariable>
					<WriteLine Id="6" Param0="u16ObjectIndexInclOffset" Level="Verbose">ObjectIndex '0x{0:X}' (module independent)</WriteLine>
				</TestStep>
				<TestStep Name="LoadDeviceObjectDictionary">
					<Description Id="7" Level="Verbose">Load 'offline' object dictionary for testing.</Description>
					<GetObjectDictionary Target="odDeviceObjectdictionary">
						<DictionaryType>Offline</DictionaryType>
					</GetObjectDictionary>
					<RaiseErrorOnFailure Id="8">VerifyObject : failed to load offline object dictionary.</RaiseErrorOnFailure>
				</TestStep>
				<TestStep Name="SetObjectRequiredLevel">
					<SetVariable Target="bObjectOrEntryRequiredLevel">1</SetVariable>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<CallTestFunction Name="IsEntryDefined">
								<Parameter>#xF388</Parameter>
								<Parameter>0</Parameter>
								<Parameter>offline</Parameter>
								<OutParameter>bConditionTrue</OutParameter>
							</CallTestFunction>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bConditionTrue</Value1>
							<Value2>true</Value2>
							<SetVariable Target="bObjectOrEntryRequiredLevel">3</SetVariable>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>3</Value2>
							<WriteLine Id="9" Param0="u16ObjectIndexInclOffset" Param1="#xF388" Level="Verbose">0x{0:X4} 'Latched Global Manufacturer Error Details' shall be available (the entry 0x{1:X4}.0 is available (offline)</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>1</Value2>
							<WriteLine Id="10" Param0="u16ObjectIndexInclOffset" Param1="#xF388" Level="Verbose">0x{0:X4} 'Latched Global Manufacturer Error Details' may be available (the entry 0x{1:X4}.0 is not available (offline)</WriteLine>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CheckIfObjectExists">
					<GetObjectDescription SourceDictionary="odDeviceObjectdictionary" Index="u16ObjectIndexInclOffset" SubIndex="-1"></GetObjectDescription>
					<GotoOnSuccess>CallCheckObjectDescription</GotoOnSuccess>
				</TestStep>
				<TestStep Name="HandleNotExistingObject">
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>3</Value2>
							<SetVariable Target="strResult" Param0="u16ObjectIndexInclOffset">The object 0x{0:X4} 'Latched Global Manufacturer Error Details' does not exists.</SetVariable>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>3</Value2>
							<WriteLine Id="11" Param0="u16ObjectIndexInclOffset" Level="Error">The object 0x{0:X4} 'Latched Global Manufacturer Error Details' does not exists.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>2</Value2>
							<WriteLine Id="12" Param0="u16ObjectIndexInclOffset" Level="Warning">The object 0x{0:X4} 'Latched Global Manufacturer Error Details' does not exists.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>1</Value2>
							<WriteLine Id="13" Param0="u16ObjectIndexInclOffset" Level="Output">The object 0x{0:X4} 'Latched Global Manufacturer Error Details' does not exists.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>END</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CallCheckObjectDescription">
					<Description Id="14" Param0="u16ObjectIndexInclOffset" Level="Output">Verify the object description 0x{0:X4} 'Latched Global Manufacturer Error Details'.</Description>
					<CallTestFunction Name="CheckObjectDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"offline"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>"Latched Global Manufacturer Error Details"</Parameter>
						<Parameter>null</Parameter>
						<Parameter>9</Parameter>
						<Parameter>-1</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<GotoStep>END</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="InitEntryBittOffset">
					<SetVariable Target="i32CurrentBitOffset">0</SetVariable>
				</TestStep>
				<TestStep Name="StartSi0">
					<Description Id="15" Level="Output">Start validate SubIndex0</Description>
					<WriteLine Id="16" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : Subindex '0x{0:X}.0'</WriteLine>
				</TestStep>
				<TestStep Name="CallSi0CheckEntryDescription">
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"offline"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>0</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>null</Parameter>
						<Parameter>5</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>null</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>null</Parameter>
						<Parameter>null</Parameter>
						<Parameter>null</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>8</Parameter>
						<Parameter>i32CurrentBitOffset</Parameter>
						<Parameter>true</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="EndSi0">
					<SetVariable Target="i32CurrentBitOffset">16</SetVariable>
				</TestStep>
				<TestStep Name="StartSi1">
					<Description Id="17" Level="Output">Start validate SubIndex1</Description>
					<WriteLine Id="18" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : Subindex '0x{0:X}.1'</WriteLine>
				</TestStep>
				<TestStep Name="SetSi1RequiredLevel">
					<SetVariable Target="bObjectOrEntryRequiredLevel">1</SetVariable>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<CallTestFunction Name="IsEntryDefined">
								<Parameter>#xF388</Parameter>
								<Parameter>0</Parameter>
								<Parameter>offline</Parameter>
								<OutParameter>bConditionTrue</OutParameter>
							</CallTestFunction>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bConditionTrue</Value1>
							<Value2>true</Value2>
							<SetVariable Target="bObjectOrEntryRequiredLevel">3</SetVariable>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>3</Value2>
							<WriteLine Id="19" Param0="u16ObjectIndexInclOffset" Param1="#xF388" Level="Verbose">0x{0:X4}.1 'Latched Global Manufacturer Error Details' shall be available (the entry 0x{1:X4}.0 is available (offline)</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>1</Value2>
							<WriteLine Id="20" Param0="u16ObjectIndexInclOffset" Param1="#xF388" Level="Verbose">0x{0:X4}.1 'Latched Global Manufacturer Error Details' may be available (the entry 0x{1:X4}.0 is not available (offline)</WriteLine>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CheckIfSi1Exists">
					<GetObjectDescription SourceDictionary="odDeviceObjectdictionary" Index="u16ObjectIndexInclOffset" SubIndex="1">
						<Type>u16DataType</Type>
					</GetObjectDescription>
					<GotoOnFailure>HandleNotExistingSi1</GotoOnFailure>
				</TestStep>
				<TestStep>
					<Compare>
						<NotEqual>
							<Value1>u16DataType</Value1>
							<Value2>0</Value2>
							<GotoStep>CallSi1CheckEntryDescription</GotoStep>
						</NotEqual>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>1</Value2>
							<WriteLine Id="21" Param0="u16ObjectIndexInclOffset" Level="Verbose">The entry 0x{0:X4}.1 is defined as a padding entry.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>3</Value2>
							<WriteLine Id="22" Param0="u16ObjectIndexInclOffset" Level="Error">The entry 0x{0:X4}.1 shall not defined as a padding entry.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>3</Value2>
							<SetVariable Target="strResult" Param0="u16ObjectIndexInclOffset">The entry 0x{0:X4}.1 shall not defined as a padding entry.</SetVariable>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>EndSi1</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="HandleNotExistingSi1">
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>3</Value2>
							<SetVariable Target="strResult" Param0="u16ObjectIndexInclOffset">The entry 0x{0:X4}.1 does not exists.</SetVariable>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>3</Value2>
							<WriteLine Id="23" Param0="u16ObjectIndexInclOffset" Level="Error">The entry 0x{0:X4}.1 does not exists.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>3</Value2>
							<GotoStep>EndSi1</GotoStep>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="24" Param0="u16ObjectIndexInclOffset" Level="Output">The entry 0x{0:X4}.1 does not exists.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>EndSi1</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CallSi1CheckEntryDescription">
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"offline"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>1</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>"Latched Global Manufacturer Error Details"</Parameter>
						<Parameter>7</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>null</Parameter>
						<Parameter>T</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>32</Parameter>
						<Parameter>i32CurrentBitOffset</Parameter>
						<Parameter>true</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="EndSi1">
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>3</Value2>
							<SetVariable Target="i32CurrentBitOffset">i32CurrentBitOffset + 32</SetVariable>
						</Equal>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>3</Value2>
							<SetVariable Target="i32CurrentBitOffset">-1</SetVariable>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep Name="CheckReservedEntryRange_2_to_255">
					<Description Id="25" Level="Output">Start check reserved entry range 2 to 255</Description>
					<CallTestFunction Name="CheckReservedEntryRange">
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>2</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>odDeviceObjectdictionary</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="END">
					<Compare>
						<NotEqual>
							<Value1>bAtLeastOneModuleMatch</Value1>
							<Value2>true</Value2>
							<SkipCase Id="26">SKIP TEST(no module/channel supports the current profile)</SkipCase>
						</NotEqual>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bDEBUG</Value1>
							<Value2>true</Value2>
							<WriteLine Id="27" Param0="strResult" Level="Verbose">DEBUG | Result : '{0}'.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>strResult</Value1>
							<Value2>EmptyString</Value2>
							<ReturnSuccess Id="28">Test succeed</ReturnSuccess>
						</Equal>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>strResult</Value1>
							<Value2>EmptyString</Value2>
							<RaiseError Id="29"></RaiseError>
						</NotEqual>
					</Compare>
				</TestStep>
			</TestCase>
			<TestCase Name="online | 0xF398 (Latched Global Manufacturer Error Details)" CaseId="36">
				<Description>
					<PreCondition>- The device profile is 5003
- The module profile is 2011
- The submodule profile is 0</PreCondition>
					<Action>- Iterate over all online defined modules/channels and if the PreCondition matches the following operations are done:
- Get the online description of object 0xF398(+module specific offset) 'Latched Global Manufacturer Error Details' and all entries
 Check:
    (Name)
    BitSize
    DataType
    Rx / Tx mappable
    Default Data
    MinData
    Flags       </Action>
					<PostCondition>Error if
- mandatory object / entry is not defined
- an optional object exists and the entries are invalid
- Object / entry description does not match with the specification</PostCondition>
					<ProposalForSolution>- Define the missing objects
- correct object / entry description</ProposalForSolution>
					<References>
						<Reference Specification="ETG.5003.2011"></Reference>
					</References>
					<Mandatory>true</Mandatory>
				</Description>
				<TestStep Name="InitResult">
					<SetVariable Target="strResult">EmptyString</SetVariable>
				</TestStep>
				<TestStep Name="CheckIfOdAvailable">
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Mailbox</Value1>
							<Value2>false</Value2>
							<SkipCase Id="1">DuT does not support mailbox.</SkipCase>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Mailbox.CoE</Value1>
							<Value2>false</Value2>
							<SkipCase Id="2">DuT does not support CoE.</SkipCase>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Mailbox.CoE.SdoInfo</Value1>
							<Value2>false</Value2>
							<SkipCase Id="3">DuT does not support SDO Info.</SkipCase>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="InitAtLeastOneProfileMatch">
					<SetVariable Target="bAtLeastOneModuleMatch">false</SetVariable>
				</TestStep>
				<TestStep Name="GetCurrentProfileList">
					<SizeOf UInt32Var="u32Tmp">arrOnlineProfiles</SizeOf>
					<Compare>
						<Equal>
							<Value1>u32Tmp</Value1>
							<Value2>0</Value2>
							<CallTestFunction Name="GetCurrentProfileList">
								<Parameter>"online"</Parameter>
								<Parameter>"SafeOP"</Parameter>
								<OutParameter>arrOnlineProfiles</OutParameter>
							</CallTestFunction>
						</Equal>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>u32Tmp</Value1>
							<Value2>0</Value2>
							<WriteLine Id="4" Param0="arrOnlineProfiles" Level="Verbose">Use previously created profile list ({0})</WriteLine>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep>
					<SizeOf UInt32Var="u32Tmp">arrOnlineProfiles</SizeOf>
				</TestStep>
				<TestStep>
					<InitArray TargetArray="arrCurrentProfiles" Length="u32Tmp"></InitArray>
				</TestStep>
				<TestStep>
					<CopyArray>
						<SourceArray>arrOnlineProfiles</SourceArray>
						<DestinationArray>arrCurrentProfiles</DestinationArray>
						<Length>u32Tmp</Length>
					</CopyArray>
				</TestStep>
				<TestStep Name="IsProfileSupported">
					<CallTestFunction Name="DeviceAndModuleProfileDefined">
						<Parameter>arrCurrentProfiles</Parameter>
						<Parameter>5003</Parameter>
						<Parameter>2011</Parameter>
						<OutParameter>bAtLeastOneModuleMatch</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>bAtLeastOneModuleMatch</Value1>
							<Value2>false</Value2>
							<GotoStep>END</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="GetObjectIndexInclOffset">
					<SetVariable Target="u16ObjectIndexInclOffset">#xF398</SetVariable>
					<WriteLine Id="5" Param0="u16ObjectIndexInclOffset" Level="Verbose">ObjectIndex '0x{0:X}' (module independent)</WriteLine>
				</TestStep>
				<TestStep Name="LoadDeviceObjectDictionary">
					<Description Id="6" Level="Verbose">Load 'online' object dictionary for testing.</Description>
					<GetObjectDictionary Target="odDeviceObjectdictionary">
						<DictionaryType>Online</DictionaryType>
					</GetObjectDictionary>
					<RaiseErrorOnFailure Id="7">VerifyObject : failed to load online object dictionary.</RaiseErrorOnFailure>
				</TestStep>
				<TestStep Name="SetObjectRequiredLevel">
					<SetVariable Target="bObjectOrEntryRequiredLevel">1</SetVariable>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<CallTestFunction Name="IsEntryDefined">
								<Parameter>#xF388</Parameter>
								<Parameter>0</Parameter>
								<Parameter>online</Parameter>
								<OutParameter>bConditionTrue</OutParameter>
							</CallTestFunction>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bConditionTrue</Value1>
							<Value2>true</Value2>
							<SetVariable Target="bObjectOrEntryRequiredLevel">3</SetVariable>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>3</Value2>
							<WriteLine Id="8" Param0="u16ObjectIndexInclOffset" Param1="#xF388" Level="Verbose">0x{0:X4} 'Latched Global Manufacturer Error Details' shall be available (the entry 0x{1:X4}.0 is available (online)</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>1</Value2>
							<WriteLine Id="9" Param0="u16ObjectIndexInclOffset" Param1="#xF388" Level="Verbose">0x{0:X4} 'Latched Global Manufacturer Error Details' may be available (the entry 0x{1:X4}.0 is not available (online)</WriteLine>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CheckIfObjectExists">
					<GetObjectDescription SourceDictionary="odDeviceObjectdictionary" Index="u16ObjectIndexInclOffset" SubIndex="-1"></GetObjectDescription>
					<GotoOnSuccess>CallCheckObjectDescription</GotoOnSuccess>
				</TestStep>
				<TestStep Name="HandleNotExistingObject">
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>3</Value2>
							<SetVariable Target="strResult" Param0="u16ObjectIndexInclOffset">The object 0x{0:X4} 'Latched Global Manufacturer Error Details' does not exists.</SetVariable>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>3</Value2>
							<WriteLine Id="10" Param0="u16ObjectIndexInclOffset" Level="Error">The object 0x{0:X4} 'Latched Global Manufacturer Error Details' does not exists.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>2</Value2>
							<WriteLine Id="11" Param0="u16ObjectIndexInclOffset" Level="Warning">The object 0x{0:X4} 'Latched Global Manufacturer Error Details' does not exists.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>1</Value2>
							<WriteLine Id="12" Param0="u16ObjectIndexInclOffset" Level="Output">The object 0x{0:X4} 'Latched Global Manufacturer Error Details' does not exists.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>END</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CallCheckObjectDescription">
					<Description Id="13" Param0="u16ObjectIndexInclOffset" Level="Output">Verify the object description 0x{0:X4} 'Latched Global Manufacturer Error Details'.</Description>
					<CallTestFunction Name="CheckObjectDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"online"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>"Latched Global Manufacturer Error Details"</Parameter>
						<Parameter>null</Parameter>
						<Parameter>9</Parameter>
						<Parameter>-1</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<GotoStep>END</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="InitEntryBittOffset">
					<SetVariable Target="i32CurrentBitOffset">0</SetVariable>
				</TestStep>
				<TestStep Name="StartSi0">
					<Description Id="14" Level="Output">Start validate SubIndex0</Description>
					<WriteLine Id="15" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : Subindex '0x{0:X}.0'</WriteLine>
				</TestStep>
				<TestStep Name="CallSi0CheckEntryDescription">
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"online"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>0</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>null</Parameter>
						<Parameter>5</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>null</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>null</Parameter>
						<Parameter>null</Parameter>
						<Parameter>null</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>8</Parameter>
						<Parameter>i32CurrentBitOffset</Parameter>
						<Parameter>true</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="EndSi0">
					<SetVariable Target="i32CurrentBitOffset">16</SetVariable>
				</TestStep>
				<TestStep Name="StartSi1">
					<Description Id="16" Level="Output">Start validate SubIndex1</Description>
					<WriteLine Id="17" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : Subindex '0x{0:X}.1'</WriteLine>
				</TestStep>
				<TestStep Name="SetSi1RequiredLevel">
					<SetVariable Target="bObjectOrEntryRequiredLevel">1</SetVariable>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<CallTestFunction Name="IsEntryDefined">
								<Parameter>#xF388</Parameter>
								<Parameter>0</Parameter>
								<Parameter>online</Parameter>
								<OutParameter>bConditionTrue</OutParameter>
							</CallTestFunction>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bConditionTrue</Value1>
							<Value2>true</Value2>
							<SetVariable Target="bObjectOrEntryRequiredLevel">3</SetVariable>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>3</Value2>
							<WriteLine Id="18" Param0="u16ObjectIndexInclOffset" Param1="#xF388" Level="Verbose">0x{0:X4}.1 'Latched Global Manufacturer Error Details' shall be available (the entry 0x{1:X4}.0 is available (online)</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>1</Value2>
							<WriteLine Id="19" Param0="u16ObjectIndexInclOffset" Param1="#xF388" Level="Verbose">0x{0:X4}.1 'Latched Global Manufacturer Error Details' may be available (the entry 0x{1:X4}.0 is not available (online)</WriteLine>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CheckIfSi1Exists">
					<GetObjectDescription SourceDictionary="odDeviceObjectdictionary" Index="u16ObjectIndexInclOffset" SubIndex="1">
						<Type>u16DataType</Type>
					</GetObjectDescription>
					<GotoOnFailure>HandleNotExistingSi1</GotoOnFailure>
				</TestStep>
				<TestStep>
					<Compare>
						<NotEqual>
							<Value1>u16DataType</Value1>
							<Value2>0</Value2>
							<GotoStep>CallSi1CheckEntryDescription</GotoStep>
						</NotEqual>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>1</Value2>
							<WriteLine Id="20" Param0="u16ObjectIndexInclOffset" Level="Verbose">The entry 0x{0:X4}.1 is defined as a padding entry.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>3</Value2>
							<WriteLine Id="21" Param0="u16ObjectIndexInclOffset" Level="Error">The entry 0x{0:X4}.1 shall not defined as a padding entry.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>3</Value2>
							<SetVariable Target="strResult" Param0="u16ObjectIndexInclOffset">The entry 0x{0:X4}.1 shall not defined as a padding entry.</SetVariable>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>EndSi1</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="HandleNotExistingSi1">
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>3</Value2>
							<SetVariable Target="strResult" Param0="u16ObjectIndexInclOffset">The entry 0x{0:X4}.1 does not exists.</SetVariable>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>3</Value2>
							<WriteLine Id="22" Param0="u16ObjectIndexInclOffset" Level="Error">The entry 0x{0:X4}.1 does not exists.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>3</Value2>
							<GotoStep>EndSi1</GotoStep>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="23" Param0="u16ObjectIndexInclOffset" Level="Output">The entry 0x{0:X4}.1 does not exists.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>EndSi1</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CallSi1CheckEntryDescription">
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"online"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>1</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>"Latched Global Manufacturer Error Details"</Parameter>
						<Parameter>7</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>null</Parameter>
						<Parameter>T</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>32</Parameter>
						<Parameter>i32CurrentBitOffset</Parameter>
						<Parameter>true</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="EndSi1">
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>3</Value2>
							<SetVariable Target="i32CurrentBitOffset">i32CurrentBitOffset + 32</SetVariable>
						</Equal>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>3</Value2>
							<SetVariable Target="i32CurrentBitOffset">-1</SetVariable>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep Name="CheckReservedEntryRange_2_to_255">
					<Description Id="24" Level="Output">Start check reserved entry range 2 to 255</Description>
					<CallTestFunction Name="CheckReservedEntryRange">
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>2</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>odDeviceObjectdictionary</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="END">
					<Compare>
						<NotEqual>
							<Value1>bAtLeastOneModuleMatch</Value1>
							<Value2>true</Value2>
							<SkipCase Id="25">SKIP TEST(no module/channel supports the current profile)</SkipCase>
						</NotEqual>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bDEBUG</Value1>
							<Value2>true</Value2>
							<WriteLine Id="26" Param0="strResult" Level="Verbose">DEBUG | Result : '{0}'.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>strResult</Value1>
							<Value2>EmptyString</Value2>
							<ReturnSuccess Id="27">Test succeed</ReturnSuccess>
						</Equal>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>strResult</Value1>
							<Value2>EmptyString</Value2>
							<RaiseError Id="28"></RaiseError>
						</NotEqual>
					</Compare>
				</TestStep>
			</TestCase>
			<TestCase Name="offline | 0xF3A1 (Device Warning Mask)" CaseId="37">
				<Description>
					<PreCondition>- The device profile is 5003
- The module profile is 2011
- The submodule profile is 0</PreCondition>
					<Action>- Iterate over all offline defined modules/channels and if the PreCondition matches the following operations are done:
- Get the offline description of object 0xF3A1(+module specific offset) 'Device Warning Mask' and all entries
 Check:
    (Name)
    BitSize
    DataType
    Rx / Tx mappable
    Default Data
    MinData
    Flags       </Action>
					<PostCondition>Error if
- mandatory object / entry is not defined
- an optional object exists and the entries are invalid
- Object / entry description does not match with the specification</PostCondition>
					<ProposalForSolution>- Define the missing objects
- correct object / entry description</ProposalForSolution>
					<References>
						<Reference Specification="ETG.5003.2011"></Reference>
					</References>
					<Mandatory>true</Mandatory>
				</Description>
				<TestStep Name="InitResult">
					<SetVariable Target="strResult">EmptyString</SetVariable>
				</TestStep>
				<TestStep Name="CheckIfOdAvailable">
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Mailbox</Value1>
							<Value2>false</Value2>
							<SkipCase Id="1">DuT does not support mailbox.</SkipCase>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Mailbox.CoE</Value1>
							<Value2>false</Value2>
							<SkipCase Id="2">DuT does not support CoE.</SkipCase>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep>
					<GetObjectDictionary Target="odDeviceObjectdictionary">
						<DictionaryType>Offline</DictionaryType>
					</GetObjectDictionary>
					<SkipOnFailure Id="3">No offline object dictionary defined.</SkipOnFailure>
				</TestStep>
				<TestStep>
					<GetObjectList Count="u32Tmp" Target="odDeviceObjectdictionaryList" SourceDict="odDeviceObjectdictionary"></GetObjectList>
					<Compare>
						<Equal>
							<Value1>u32Tmp</Value1>
							<Value2>0</Value2>
							<SkipCase Id="4">No offline object dictionary defined.</SkipCase>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="InitAtLeastOneProfileMatch">
					<SetVariable Target="bAtLeastOneModuleMatch">false</SetVariable>
				</TestStep>
				<TestStep Name="GetCurrentProfileList">
					<SizeOf UInt32Var="u32Tmp">arrOfflineProfiles</SizeOf>
					<Compare>
						<Equal>
							<Value1>u32Tmp</Value1>
							<Value2>0</Value2>
							<CallTestFunction Name="GetCurrentProfileList">
								<Parameter>"offline"</Parameter>
								<Parameter>"SafeOP"</Parameter>
								<OutParameter>arrOfflineProfiles</OutParameter>
							</CallTestFunction>
						</Equal>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>u32Tmp</Value1>
							<Value2>0</Value2>
							<WriteLine Id="5" Param0="arrOfflineProfiles" Level="Verbose">Use previously created profile list ({0})</WriteLine>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep>
					<SizeOf UInt32Var="u32Tmp">arrOfflineProfiles</SizeOf>
				</TestStep>
				<TestStep>
					<InitArray TargetArray="arrCurrentProfiles" Length="u32Tmp"></InitArray>
				</TestStep>
				<TestStep>
					<CopyArray>
						<SourceArray>arrOfflineProfiles</SourceArray>
						<DestinationArray>arrCurrentProfiles</DestinationArray>
						<Length>u32Tmp</Length>
					</CopyArray>
				</TestStep>
				<TestStep Name="IsProfileSupported">
					<CallTestFunction Name="DeviceAndModuleProfileDefined">
						<Parameter>arrCurrentProfiles</Parameter>
						<Parameter>5003</Parameter>
						<Parameter>2011</Parameter>
						<OutParameter>bAtLeastOneModuleMatch</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>bAtLeastOneModuleMatch</Value1>
							<Value2>false</Value2>
							<GotoStep>END</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="GetObjectIndexInclOffset">
					<SetVariable Target="u16ObjectIndexInclOffset">#xF3A1</SetVariable>
					<WriteLine Id="6" Param0="u16ObjectIndexInclOffset" Level="Verbose">ObjectIndex '0x{0:X}' (module independent)</WriteLine>
				</TestStep>
				<TestStep Name="LoadDeviceObjectDictionary">
					<Description Id="7" Level="Verbose">Load 'offline' object dictionary for testing.</Description>
					<GetObjectDictionary Target="odDeviceObjectdictionary">
						<DictionaryType>Offline</DictionaryType>
					</GetObjectDictionary>
					<RaiseErrorOnFailure Id="8">VerifyObject : failed to load offline object dictionary.</RaiseErrorOnFailure>
				</TestStep>
				<TestStep Name="CallCheckObjectDescription">
					<Description Id="9" Param0="u16ObjectIndexInclOffset" Level="Output">Verify the object description 0x{0:X4} 'Device Warning Mask'.</Description>
					<CallTestFunction Name="CheckObjectDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"offline"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>"Device Warning Mask"</Parameter>
						<Parameter>null</Parameter>
						<Parameter>8</Parameter>
						<Parameter>-1</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<GotoStep>END</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="InitEntryBittOffset">
					<SetVariable Target="i32CurrentBitOffset">0</SetVariable>
				</TestStep>
				<TestStep Name="StartSi0">
					<Description Id="10" Level="Output">Start validate SubIndex0</Description>
					<WriteLine Id="11" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : Subindex '0x{0:X}.0'</WriteLine>
				</TestStep>
				<TestStep Name="CallSi0CheckEntryDescription">
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"offline"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>0</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>null</Parameter>
						<Parameter>5</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>null</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>null</Parameter>
						<Parameter>null</Parameter>
						<Parameter>null</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>8</Parameter>
						<Parameter>i32CurrentBitOffset</Parameter>
						<Parameter>true</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="EndSi0">
					<SetVariable Target="i32CurrentBitOffset">16</SetVariable>
				</TestStep>
				<TestStep Name="InitProfileLoopCounter">
					<SetVariable Target="u32ProfileCounter">0</SetVariable>
				</TestStep>
				<TestStep Name="GetProfileArrayLength">
					<SizeOf UInt32Var="u32CurrentProfilesLength">arrCurrentProfiles</SizeOf>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="12" Param0="u32CurrentProfilesLength" Level="Verbose">'{0}' Profile(s) defined offline.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>u32CurrentProfilesLength</Value1>
							<Value2>0</Value2>
							<SkipCase Id="13">Skip case | no profile defined.</SkipCase>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="ProfileLoopStart">
					<GetArrayItem SourceArray="arrCurrentProfiles" Target="strTmpString" Index="u32ProfileCounter"></GetArrayItem>
				</TestStep>
				<TestStep Name="CheckProfileInformationString">
					<Compare>
						<Equal>
							<Value1>strTmpString</Value1>
							<Value2>null</Value2>
							<RaiseError Id="14" Param0="u32ProfileCounter">Profile Info element [{0}] is null.</RaiseError>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>strTmpString</Value1>
							<Value2>EmptyString</Value2>
							<RaiseError Id="15" Param0="u32ProfileCounter">Profile Info element [{0}] is an empty string.</RaiseError>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="GetDeviceProfile">
					<CallTestFunction Name="GetDeviceProfile">
						<Parameter>strTmpString</Parameter>
						<OutParameter>uint16CurDeviceProfile</OutParameter>
					</CallTestFunction>
				</TestStep>
				<TestStep Name="GetModuleProfile">
					<CallTestFunction Name="GetModuleProfile">
						<Parameter>strTmpString</Parameter>
						<OutParameter>uint16CurModuleProfile</OutParameter>
					</CallTestFunction>
				</TestStep>
				<TestStep Name="GetSubModuleProfile">
					<CallTestFunction Name="GetSubModuleProfile">
						<Parameter>strTmpString</Parameter>
						<OutParameter>uint16CurSubModuleProfile</OutParameter>
					</CallTestFunction>
				</TestStep>
				<TestStep Name="DumpProfileInfo">
					<Description Id="16" Param0="uint16CurDeviceProfile" Param1="uint16CurModuleProfile" Param2="uint16CurSubModuleProfile" Param3="u32ProfileCounter" Level="Output">Module[{3}] : DeviceProfile '{0}' ; ModuleProfile '{1}' ; SubModuleProfile '{2}'</Description>
					<Compare>
						<Equal>
							<Value1>bIgnoreProfileID</Value1>
							<Value2>true</Value2>
							<GotoStep>IndicateThatAtleastOneModuleMatch</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CompareDeviceProfile">
					<Compare>
						<NotEqual>
							<Value1>uint16CurDeviceProfile</Value1>
							<Value2>5003</Value2>
							<WriteLine Id="17" Param0="uint16CurDeviceProfile" Level="Output">Skip Profile  (Test Device Profile '5003' != Cur Device Profile '{0}')</WriteLine>
						</NotEqual>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>uint16CurDeviceProfile</Value1>
							<Value2>5003</Value2>
							<GotoStep>ProfileLoopEnd</GotoStep>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep Name="CompareModuleProfile">
					<Compare>
						<NotEqual>
							<Value1>uint16CurModuleProfile</Value1>
							<Value2>2011</Value2>
							<WriteLine Id="18" Param0="uint16CurModuleProfile" Level="Output">Skip Profile  (Test Module Profile '2011' != Cur Module Profile '{0}')</WriteLine>
						</NotEqual>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>uint16CurModuleProfile</Value1>
							<Value2>2011</Value2>
							<GotoStep>ProfileLoopEnd</GotoStep>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep Name="CompareSubModuleProfile">
					<Compare>
						<NotEqual>
							<Value1>uint16CurSubModuleProfile</Value1>
							<Value2>0</Value2>
							<WriteLine Id="19" Param0="uint16CurSubModuleProfile" Level="Output">Skip Profile  (Test SubModule Profile '0' != Cur SubModule Profile '{0}')</WriteLine>
						</NotEqual>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>uint16CurSubModuleProfile</Value1>
							<Value2>0</Value2>
							<GotoStep>ProfileLoopEnd</GotoStep>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep Name="IndicateThatAtleastOneModuleMatch">
					<SetVariable Target="bAtLeastOneModuleMatch">true</SetVariable>
				</TestStep>
				<TestStep Name="StartSi1">
					<Description Id="20" Param0="1 + (u32ProfileCounter * 1)" Level="Output">Start validate SubIndex{0}</Description>
					<SetVariable Target="byteSubIndexInclOffset">1 + (u32ProfileCounter * 1)</SetVariable>
					<WriteLine Id="21" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Param2="byteSubIndexInclOffset" Level="Verbose">Module[{1}] : Subindex '0x{0:X}.{2}'</WriteLine>
				</TestStep>
				<TestStep Name="CallSi1CheckEntryDescription">
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"offline"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>byteSubIndexInclOffset</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>null</Parameter>
						<Parameter>7</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>null</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>32</Parameter>
						<Parameter>i32CurrentBitOffset</Parameter>
						<Parameter>true</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="EndSi1">
					<SetVariable Target="i32CurrentBitOffset">i32CurrentBitOffset + 32</SetVariable>
				</TestStep>
				<TestStep Name="ProfileLoopEnd">
					<Compare>
						<Equal>
							<Value1>bAtLeastOneModuleMatch</Value1>
							<Value2>false</Value2>
							<GotoStep>HandleAbortTestCaseOnFirstError</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="HandleAbortTestCaseOnFirstError">
					<Compare>
						<Equal>
							<Value1>bAbortTestCaseOnFirstError</Value1>
							<Value2>false</Value2>
							<GotoStep>ProfileLoopIncrement</GotoStep>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>strResult</Value1>
							<Value2>EmptyString</Value2>
							<GotoStep>ProfileLoopIncrement</GotoStep>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="22" Level="Output">Object verification for all following modules abort because an error was already detected for the current module.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>END</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="ProfileLoopIncrement">
					<SetVariable Target="u32ProfileCounter">u32ProfileCounter + 1</SetVariable>
					<Compare>
						<Greater>
							<Value1>u32CurrentProfilesLength</Value1>
							<Value2>u32ProfileCounter</Value2>
							<GotoStep>ProfileLoopStart</GotoStep>
						</Greater>
					</Compare>
				</TestStep>
				<TestStep Name="END">
					<Compare>
						<NotEqual>
							<Value1>bAtLeastOneModuleMatch</Value1>
							<Value2>true</Value2>
							<SkipCase Id="23">SKIP TEST(no module/channel supports the current profile)</SkipCase>
						</NotEqual>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bDEBUG</Value1>
							<Value2>true</Value2>
							<WriteLine Id="24" Param0="strResult" Level="Verbose">DEBUG | Result : '{0}'.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>strResult</Value1>
							<Value2>EmptyString</Value2>
							<ReturnSuccess Id="25">Test succeed</ReturnSuccess>
						</Equal>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>strResult</Value1>
							<Value2>EmptyString</Value2>
							<RaiseError Id="26"></RaiseError>
						</NotEqual>
					</Compare>
				</TestStep>
			</TestCase>
			<TestCase Name="online | 0xF3A1 (Device Warning Mask)" CaseId="38">
				<Description>
					<PreCondition>- The device profile is 5003
- The module profile is 2011
- The submodule profile is 0</PreCondition>
					<Action>- Iterate over all online defined modules/channels and if the PreCondition matches the following operations are done:
- Get the online description of object 0xF3A1(+module specific offset) 'Device Warning Mask' and all entries
 Check:
    (Name)
    BitSize
    DataType
    Rx / Tx mappable
    Default Data
    MinData
    Flags       </Action>
					<PostCondition>Error if
- mandatory object / entry is not defined
- an optional object exists and the entries are invalid
- Object / entry description does not match with the specification</PostCondition>
					<ProposalForSolution>- Define the missing objects
- correct object / entry description</ProposalForSolution>
					<References>
						<Reference Specification="ETG.5003.2011"></Reference>
					</References>
					<Mandatory>true</Mandatory>
				</Description>
				<TestStep Name="InitResult">
					<SetVariable Target="strResult">EmptyString</SetVariable>
				</TestStep>
				<TestStep Name="CheckIfOdAvailable">
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Mailbox</Value1>
							<Value2>false</Value2>
							<SkipCase Id="1">DuT does not support mailbox.</SkipCase>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Mailbox.CoE</Value1>
							<Value2>false</Value2>
							<SkipCase Id="2">DuT does not support CoE.</SkipCase>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Mailbox.CoE.SdoInfo</Value1>
							<Value2>false</Value2>
							<SkipCase Id="3">DuT does not support SDO Info.</SkipCase>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="InitAtLeastOneProfileMatch">
					<SetVariable Target="bAtLeastOneModuleMatch">false</SetVariable>
				</TestStep>
				<TestStep Name="GetCurrentProfileList">
					<SizeOf UInt32Var="u32Tmp">arrOnlineProfiles</SizeOf>
					<Compare>
						<Equal>
							<Value1>u32Tmp</Value1>
							<Value2>0</Value2>
							<CallTestFunction Name="GetCurrentProfileList">
								<Parameter>"online"</Parameter>
								<Parameter>"SafeOP"</Parameter>
								<OutParameter>arrOnlineProfiles</OutParameter>
							</CallTestFunction>
						</Equal>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>u32Tmp</Value1>
							<Value2>0</Value2>
							<WriteLine Id="4" Param0="arrOnlineProfiles" Level="Verbose">Use previously created profile list ({0})</WriteLine>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep>
					<SizeOf UInt32Var="u32Tmp">arrOnlineProfiles</SizeOf>
				</TestStep>
				<TestStep>
					<InitArray TargetArray="arrCurrentProfiles" Length="u32Tmp"></InitArray>
				</TestStep>
				<TestStep>
					<CopyArray>
						<SourceArray>arrOnlineProfiles</SourceArray>
						<DestinationArray>arrCurrentProfiles</DestinationArray>
						<Length>u32Tmp</Length>
					</CopyArray>
				</TestStep>
				<TestStep Name="IsProfileSupported">
					<CallTestFunction Name="DeviceAndModuleProfileDefined">
						<Parameter>arrCurrentProfiles</Parameter>
						<Parameter>5003</Parameter>
						<Parameter>2011</Parameter>
						<OutParameter>bAtLeastOneModuleMatch</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>bAtLeastOneModuleMatch</Value1>
							<Value2>false</Value2>
							<GotoStep>END</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="GetObjectIndexInclOffset">
					<SetVariable Target="u16ObjectIndexInclOffset">#xF3A1</SetVariable>
					<WriteLine Id="5" Param0="u16ObjectIndexInclOffset" Level="Verbose">ObjectIndex '0x{0:X}' (module independent)</WriteLine>
				</TestStep>
				<TestStep Name="LoadDeviceObjectDictionary">
					<Description Id="6" Level="Verbose">Load 'online' object dictionary for testing.</Description>
					<GetObjectDictionary Target="odDeviceObjectdictionary">
						<DictionaryType>Online</DictionaryType>
					</GetObjectDictionary>
					<RaiseErrorOnFailure Id="7">VerifyObject : failed to load online object dictionary.</RaiseErrorOnFailure>
				</TestStep>
				<TestStep Name="CallCheckObjectDescription">
					<Description Id="8" Param0="u16ObjectIndexInclOffset" Level="Output">Verify the object description 0x{0:X4} 'Device Warning Mask'.</Description>
					<CallTestFunction Name="CheckObjectDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"online"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>"Device Warning Mask"</Parameter>
						<Parameter>null</Parameter>
						<Parameter>8</Parameter>
						<Parameter>-1</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<GotoStep>END</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="InitEntryBittOffset">
					<SetVariable Target="i32CurrentBitOffset">0</SetVariable>
				</TestStep>
				<TestStep Name="StartSi0">
					<Description Id="9" Level="Output">Start validate SubIndex0</Description>
					<WriteLine Id="10" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : Subindex '0x{0:X}.0'</WriteLine>
				</TestStep>
				<TestStep Name="CallSi0CheckEntryDescription">
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"online"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>0</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>null</Parameter>
						<Parameter>5</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>null</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>null</Parameter>
						<Parameter>null</Parameter>
						<Parameter>null</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>8</Parameter>
						<Parameter>i32CurrentBitOffset</Parameter>
						<Parameter>true</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="EndSi0">
					<SetVariable Target="i32CurrentBitOffset">16</SetVariable>
				</TestStep>
				<TestStep Name="InitProfileLoopCounter">
					<SetVariable Target="u32ProfileCounter">0</SetVariable>
				</TestStep>
				<TestStep Name="GetProfileArrayLength">
					<SizeOf UInt32Var="u32CurrentProfilesLength">arrCurrentProfiles</SizeOf>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="11" Param0="u32CurrentProfilesLength" Level="Verbose">'{0}' Profile(s) defined online.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>u32CurrentProfilesLength</Value1>
							<Value2>0</Value2>
							<SkipCase Id="12">Skip case | no profile defined.</SkipCase>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="ProfileLoopStart">
					<GetArrayItem SourceArray="arrCurrentProfiles" Target="strTmpString" Index="u32ProfileCounter"></GetArrayItem>
				</TestStep>
				<TestStep Name="CheckProfileInformationString">
					<Compare>
						<Equal>
							<Value1>strTmpString</Value1>
							<Value2>null</Value2>
							<RaiseError Id="13" Param0="u32ProfileCounter">Profile Info element [{0}] is null.</RaiseError>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>strTmpString</Value1>
							<Value2>EmptyString</Value2>
							<RaiseError Id="14" Param0="u32ProfileCounter">Profile Info element [{0}] is an empty string.</RaiseError>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="GetDeviceProfile">
					<CallTestFunction Name="GetDeviceProfile">
						<Parameter>strTmpString</Parameter>
						<OutParameter>uint16CurDeviceProfile</OutParameter>
					</CallTestFunction>
				</TestStep>
				<TestStep Name="GetModuleProfile">
					<CallTestFunction Name="GetModuleProfile">
						<Parameter>strTmpString</Parameter>
						<OutParameter>uint16CurModuleProfile</OutParameter>
					</CallTestFunction>
				</TestStep>
				<TestStep Name="GetSubModuleProfile">
					<CallTestFunction Name="GetSubModuleProfile">
						<Parameter>strTmpString</Parameter>
						<OutParameter>uint16CurSubModuleProfile</OutParameter>
					</CallTestFunction>
				</TestStep>
				<TestStep Name="DumpProfileInfo">
					<Description Id="15" Param0="uint16CurDeviceProfile" Param1="uint16CurModuleProfile" Param2="uint16CurSubModuleProfile" Param3="u32ProfileCounter" Level="Output">Module[{3}] : DeviceProfile '{0}' ; ModuleProfile '{1}' ; SubModuleProfile '{2}'</Description>
					<Compare>
						<Equal>
							<Value1>bIgnoreProfileID</Value1>
							<Value2>true</Value2>
							<GotoStep>IndicateThatAtleastOneModuleMatch</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CompareDeviceProfile">
					<Compare>
						<NotEqual>
							<Value1>uint16CurDeviceProfile</Value1>
							<Value2>5003</Value2>
							<WriteLine Id="16" Param0="uint16CurDeviceProfile" Level="Output">Skip Profile  (Test Device Profile '5003' != Cur Device Profile '{0}')</WriteLine>
						</NotEqual>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>uint16CurDeviceProfile</Value1>
							<Value2>5003</Value2>
							<GotoStep>ProfileLoopEnd</GotoStep>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep Name="CompareModuleProfile">
					<Compare>
						<NotEqual>
							<Value1>uint16CurModuleProfile</Value1>
							<Value2>2011</Value2>
							<WriteLine Id="17" Param0="uint16CurModuleProfile" Level="Output">Skip Profile  (Test Module Profile '2011' != Cur Module Profile '{0}')</WriteLine>
						</NotEqual>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>uint16CurModuleProfile</Value1>
							<Value2>2011</Value2>
							<GotoStep>ProfileLoopEnd</GotoStep>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep Name="CompareSubModuleProfile">
					<Compare>
						<NotEqual>
							<Value1>uint16CurSubModuleProfile</Value1>
							<Value2>0</Value2>
							<WriteLine Id="18" Param0="uint16CurSubModuleProfile" Level="Output">Skip Profile  (Test SubModule Profile '0' != Cur SubModule Profile '{0}')</WriteLine>
						</NotEqual>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>uint16CurSubModuleProfile</Value1>
							<Value2>0</Value2>
							<GotoStep>ProfileLoopEnd</GotoStep>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep Name="IndicateThatAtleastOneModuleMatch">
					<SetVariable Target="bAtLeastOneModuleMatch">true</SetVariable>
				</TestStep>
				<TestStep Name="StartSi1">
					<Description Id="19" Param0="1 + (u32ProfileCounter * 1)" Level="Output">Start validate SubIndex{0}</Description>
					<SetVariable Target="byteSubIndexInclOffset">1 + (u32ProfileCounter * 1)</SetVariable>
					<WriteLine Id="20" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Param2="byteSubIndexInclOffset" Level="Verbose">Module[{1}] : Subindex '0x{0:X}.{2}'</WriteLine>
				</TestStep>
				<TestStep Name="CallSi1CheckEntryDescription">
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"online"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>byteSubIndexInclOffset</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>null</Parameter>
						<Parameter>7</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>null</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>32</Parameter>
						<Parameter>i32CurrentBitOffset</Parameter>
						<Parameter>true</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="EndSi1">
					<SetVariable Target="i32CurrentBitOffset">i32CurrentBitOffset + 32</SetVariable>
				</TestStep>
				<TestStep Name="ProfileLoopEnd">
					<Compare>
						<Equal>
							<Value1>bAtLeastOneModuleMatch</Value1>
							<Value2>false</Value2>
							<GotoStep>HandleAbortTestCaseOnFirstError</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="HandleAbortTestCaseOnFirstError">
					<Compare>
						<Equal>
							<Value1>bAbortTestCaseOnFirstError</Value1>
							<Value2>false</Value2>
							<GotoStep>ProfileLoopIncrement</GotoStep>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>strResult</Value1>
							<Value2>EmptyString</Value2>
							<GotoStep>ProfileLoopIncrement</GotoStep>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="21" Level="Output">Object verification for all following modules abort because an error was already detected for the current module.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>END</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="ProfileLoopIncrement">
					<SetVariable Target="u32ProfileCounter">u32ProfileCounter + 1</SetVariable>
					<Compare>
						<Greater>
							<Value1>u32CurrentProfilesLength</Value1>
							<Value2>u32ProfileCounter</Value2>
							<GotoStep>ProfileLoopStart</GotoStep>
						</Greater>
					</Compare>
				</TestStep>
				<TestStep Name="END">
					<Compare>
						<NotEqual>
							<Value1>bAtLeastOneModuleMatch</Value1>
							<Value2>true</Value2>
							<SkipCase Id="22">SKIP TEST(no module/channel supports the current profile)</SkipCase>
						</NotEqual>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bDEBUG</Value1>
							<Value2>true</Value2>
							<WriteLine Id="23" Param0="strResult" Level="Verbose">DEBUG | Result : '{0}'.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>strResult</Value1>
							<Value2>EmptyString</Value2>
							<ReturnSuccess Id="24">Test succeed</ReturnSuccess>
						</Equal>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>strResult</Value1>
							<Value2>EmptyString</Value2>
							<RaiseError Id="25"></RaiseError>
						</NotEqual>
					</Compare>
				</TestStep>
			</TestCase>
			<TestCase Name="offline | 0xF3A2 (Manufacturer Warning Mask)" CaseId="39">
				<Description>
					<PreCondition>- The device profile is 5003
- The module profile is 2011
- The submodule profile is 0</PreCondition>
					<Action>- Iterate over all offline defined modules/channels and if the PreCondition matches the following operations are done:
- Get the offline description of object 0xF3A2(+module specific offset) 'Manufacturer Warning Mask' and all entries
 Check:
    (Name)
    BitSize
    DataType
    Rx / Tx mappable
    Default Data
    MinData
    Flags       </Action>
					<PostCondition>Error if
- mandatory object / entry is not defined
- an optional object exists and the entries are invalid
- Object / entry description does not match with the specification</PostCondition>
					<ProposalForSolution>- Define the missing objects
- correct object / entry description</ProposalForSolution>
					<References>
						<Reference Specification="ETG.5003.2011"></Reference>
					</References>
					<Mandatory>true</Mandatory>
				</Description>
				<TestStep Name="InitResult">
					<SetVariable Target="strResult">EmptyString</SetVariable>
				</TestStep>
				<TestStep Name="CheckIfOdAvailable">
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Mailbox</Value1>
							<Value2>false</Value2>
							<SkipCase Id="1">DuT does not support mailbox.</SkipCase>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Mailbox.CoE</Value1>
							<Value2>false</Value2>
							<SkipCase Id="2">DuT does not support CoE.</SkipCase>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep>
					<GetObjectDictionary Target="odDeviceObjectdictionary">
						<DictionaryType>Offline</DictionaryType>
					</GetObjectDictionary>
					<SkipOnFailure Id="3">No offline object dictionary defined.</SkipOnFailure>
				</TestStep>
				<TestStep>
					<GetObjectList Count="u32Tmp" Target="odDeviceObjectdictionaryList" SourceDict="odDeviceObjectdictionary"></GetObjectList>
					<Compare>
						<Equal>
							<Value1>u32Tmp</Value1>
							<Value2>0</Value2>
							<SkipCase Id="4">No offline object dictionary defined.</SkipCase>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="InitAtLeastOneProfileMatch">
					<SetVariable Target="bAtLeastOneModuleMatch">false</SetVariable>
				</TestStep>
				<TestStep Name="GetCurrentProfileList">
					<SizeOf UInt32Var="u32Tmp">arrOfflineProfiles</SizeOf>
					<Compare>
						<Equal>
							<Value1>u32Tmp</Value1>
							<Value2>0</Value2>
							<CallTestFunction Name="GetCurrentProfileList">
								<Parameter>"offline"</Parameter>
								<Parameter>"SafeOP"</Parameter>
								<OutParameter>arrOfflineProfiles</OutParameter>
							</CallTestFunction>
						</Equal>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>u32Tmp</Value1>
							<Value2>0</Value2>
							<WriteLine Id="5" Param0="arrOfflineProfiles" Level="Verbose">Use previously created profile list ({0})</WriteLine>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep>
					<SizeOf UInt32Var="u32Tmp">arrOfflineProfiles</SizeOf>
				</TestStep>
				<TestStep>
					<InitArray TargetArray="arrCurrentProfiles" Length="u32Tmp"></InitArray>
				</TestStep>
				<TestStep>
					<CopyArray>
						<SourceArray>arrOfflineProfiles</SourceArray>
						<DestinationArray>arrCurrentProfiles</DestinationArray>
						<Length>u32Tmp</Length>
					</CopyArray>
				</TestStep>
				<TestStep Name="IsProfileSupported">
					<CallTestFunction Name="DeviceAndModuleProfileDefined">
						<Parameter>arrCurrentProfiles</Parameter>
						<Parameter>5003</Parameter>
						<Parameter>2011</Parameter>
						<OutParameter>bAtLeastOneModuleMatch</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>bAtLeastOneModuleMatch</Value1>
							<Value2>false</Value2>
							<GotoStep>END</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="GetObjectIndexInclOffset">
					<SetVariable Target="u16ObjectIndexInclOffset">#xF3A2</SetVariable>
					<WriteLine Id="6" Param0="u16ObjectIndexInclOffset" Level="Verbose">ObjectIndex '0x{0:X}' (module independent)</WriteLine>
				</TestStep>
				<TestStep Name="LoadDeviceObjectDictionary">
					<Description Id="7" Level="Verbose">Load 'offline' object dictionary for testing.</Description>
					<GetObjectDictionary Target="odDeviceObjectdictionary">
						<DictionaryType>Offline</DictionaryType>
					</GetObjectDictionary>
					<RaiseErrorOnFailure Id="8">VerifyObject : failed to load offline object dictionary.</RaiseErrorOnFailure>
				</TestStep>
				<TestStep Name="SetObjectRequiredLevel">
					<SetVariable Target="bObjectOrEntryRequiredLevel">1</SetVariable>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<CallTestFunction Name="IsEntryDefined">
								<Parameter>#xF382</Parameter>
								<Parameter>0</Parameter>
								<Parameter>offline</Parameter>
								<OutParameter>bConditionTrue</OutParameter>
							</CallTestFunction>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bConditionTrue</Value1>
							<Value2>true</Value2>
							<SetVariable Target="bObjectOrEntryRequiredLevel">3</SetVariable>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>3</Value2>
							<WriteLine Id="9" Param0="u16ObjectIndexInclOffset" Param1="#xF382" Level="Verbose">0x{0:X4} 'Manufacturer Warning Mask' shall be available (the entry 0x{1:X4}.0 is available (offline)</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>1</Value2>
							<WriteLine Id="10" Param0="u16ObjectIndexInclOffset" Param1="#xF382" Level="Verbose">0x{0:X4} 'Manufacturer Warning Mask' may be available (the entry 0x{1:X4}.0 is not available (offline)</WriteLine>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CheckIfObjectExists">
					<GetObjectDescription SourceDictionary="odDeviceObjectdictionary" Index="u16ObjectIndexInclOffset" SubIndex="-1"></GetObjectDescription>
					<GotoOnSuccess>CallCheckObjectDescription</GotoOnSuccess>
				</TestStep>
				<TestStep Name="HandleNotExistingObject">
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>3</Value2>
							<SetVariable Target="strResult" Param0="u16ObjectIndexInclOffset">The object 0x{0:X4} 'Manufacturer Warning Mask' does not exists.</SetVariable>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>3</Value2>
							<WriteLine Id="11" Param0="u16ObjectIndexInclOffset" Level="Error">The object 0x{0:X4} 'Manufacturer Warning Mask' does not exists.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>2</Value2>
							<WriteLine Id="12" Param0="u16ObjectIndexInclOffset" Level="Warning">The object 0x{0:X4} 'Manufacturer Warning Mask' does not exists.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>1</Value2>
							<WriteLine Id="13" Param0="u16ObjectIndexInclOffset" Level="Output">The object 0x{0:X4} 'Manufacturer Warning Mask' does not exists.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>END</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CallCheckObjectDescription">
					<Description Id="14" Param0="u16ObjectIndexInclOffset" Level="Output">Verify the object description 0x{0:X4} 'Manufacturer Warning Mask'.</Description>
					<CallTestFunction Name="CheckObjectDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"offline"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>"Manufacturer Warning Mask"</Parameter>
						<Parameter>null</Parameter>
						<Parameter>8</Parameter>
						<Parameter>-1</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<GotoStep>END</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="InitEntryBittOffset">
					<SetVariable Target="i32CurrentBitOffset">0</SetVariable>
				</TestStep>
				<TestStep Name="StartSi0">
					<Description Id="15" Level="Output">Start validate SubIndex0</Description>
					<WriteLine Id="16" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : Subindex '0x{0:X}.0'</WriteLine>
				</TestStep>
				<TestStep Name="CallSi0CheckEntryDescription">
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"offline"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>0</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>null</Parameter>
						<Parameter>5</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>null</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>null</Parameter>
						<Parameter>null</Parameter>
						<Parameter>null</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>8</Parameter>
						<Parameter>i32CurrentBitOffset</Parameter>
						<Parameter>true</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="EndSi0">
					<SetVariable Target="i32CurrentBitOffset">16</SetVariable>
				</TestStep>
				<TestStep Name="InitProfileLoopCounter">
					<SetVariable Target="u32ProfileCounter">0</SetVariable>
				</TestStep>
				<TestStep Name="GetProfileArrayLength">
					<SizeOf UInt32Var="u32CurrentProfilesLength">arrCurrentProfiles</SizeOf>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="17" Param0="u32CurrentProfilesLength" Level="Verbose">'{0}' Profile(s) defined offline.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>u32CurrentProfilesLength</Value1>
							<Value2>0</Value2>
							<SkipCase Id="18">Skip case | no profile defined.</SkipCase>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="ProfileLoopStart">
					<GetArrayItem SourceArray="arrCurrentProfiles" Target="strTmpString" Index="u32ProfileCounter"></GetArrayItem>
				</TestStep>
				<TestStep Name="CheckProfileInformationString">
					<Compare>
						<Equal>
							<Value1>strTmpString</Value1>
							<Value2>null</Value2>
							<RaiseError Id="19" Param0="u32ProfileCounter">Profile Info element [{0}] is null.</RaiseError>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>strTmpString</Value1>
							<Value2>EmptyString</Value2>
							<RaiseError Id="20" Param0="u32ProfileCounter">Profile Info element [{0}] is an empty string.</RaiseError>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="GetDeviceProfile">
					<CallTestFunction Name="GetDeviceProfile">
						<Parameter>strTmpString</Parameter>
						<OutParameter>uint16CurDeviceProfile</OutParameter>
					</CallTestFunction>
				</TestStep>
				<TestStep Name="GetModuleProfile">
					<CallTestFunction Name="GetModuleProfile">
						<Parameter>strTmpString</Parameter>
						<OutParameter>uint16CurModuleProfile</OutParameter>
					</CallTestFunction>
				</TestStep>
				<TestStep Name="GetSubModuleProfile">
					<CallTestFunction Name="GetSubModuleProfile">
						<Parameter>strTmpString</Parameter>
						<OutParameter>uint16CurSubModuleProfile</OutParameter>
					</CallTestFunction>
				</TestStep>
				<TestStep Name="DumpProfileInfo">
					<Description Id="21" Param0="uint16CurDeviceProfile" Param1="uint16CurModuleProfile" Param2="uint16CurSubModuleProfile" Param3="u32ProfileCounter" Level="Output">Module[{3}] : DeviceProfile '{0}' ; ModuleProfile '{1}' ; SubModuleProfile '{2}'</Description>
					<Compare>
						<Equal>
							<Value1>bIgnoreProfileID</Value1>
							<Value2>true</Value2>
							<GotoStep>IndicateThatAtleastOneModuleMatch</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CompareDeviceProfile">
					<Compare>
						<NotEqual>
							<Value1>uint16CurDeviceProfile</Value1>
							<Value2>5003</Value2>
							<WriteLine Id="22" Param0="uint16CurDeviceProfile" Level="Output">Skip Profile  (Test Device Profile '5003' != Cur Device Profile '{0}')</WriteLine>
						</NotEqual>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>uint16CurDeviceProfile</Value1>
							<Value2>5003</Value2>
							<GotoStep>ProfileLoopEnd</GotoStep>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep Name="CompareModuleProfile">
					<Compare>
						<NotEqual>
							<Value1>uint16CurModuleProfile</Value1>
							<Value2>2011</Value2>
							<WriteLine Id="23" Param0="uint16CurModuleProfile" Level="Output">Skip Profile  (Test Module Profile '2011' != Cur Module Profile '{0}')</WriteLine>
						</NotEqual>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>uint16CurModuleProfile</Value1>
							<Value2>2011</Value2>
							<GotoStep>ProfileLoopEnd</GotoStep>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep Name="CompareSubModuleProfile">
					<Compare>
						<NotEqual>
							<Value1>uint16CurSubModuleProfile</Value1>
							<Value2>0</Value2>
							<WriteLine Id="24" Param0="uint16CurSubModuleProfile" Level="Output">Skip Profile  (Test SubModule Profile '0' != Cur SubModule Profile '{0}')</WriteLine>
						</NotEqual>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>uint16CurSubModuleProfile</Value1>
							<Value2>0</Value2>
							<GotoStep>ProfileLoopEnd</GotoStep>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep Name="IndicateThatAtleastOneModuleMatch">
					<SetVariable Target="bAtLeastOneModuleMatch">true</SetVariable>
				</TestStep>
				<TestStep Name="StartSi1">
					<Description Id="25" Param0="1 + (u32ProfileCounter * 1)" Level="Output">Start validate SubIndex{0}</Description>
					<SetVariable Target="byteSubIndexInclOffset">1 + (u32ProfileCounter * 1)</SetVariable>
					<WriteLine Id="26" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Param2="byteSubIndexInclOffset" Level="Verbose">Module[{1}] : Subindex '0x{0:X}.{2}'</WriteLine>
				</TestStep>
				<TestStep Name="SetSi1RequiredLevel">
					<SetVariable Target="bObjectOrEntryRequiredLevel">1</SetVariable>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<CallTestFunction Name="IsEntryDefined">
								<Parameter>#xF382</Parameter>
								<Parameter>0</Parameter>
								<Parameter>offline</Parameter>
								<OutParameter>bConditionTrue</OutParameter>
							</CallTestFunction>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bConditionTrue</Value1>
							<Value2>true</Value2>
							<SetVariable Target="bObjectOrEntryRequiredLevel">3</SetVariable>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>3</Value2>
							<WriteLine Id="27" Param0="u16ObjectIndexInclOffset" Param1="byteSubIndexInclOffset" Param2="#xF382" Level="Verbose">0x{0:X4}.{1} shall be available (the entry 0x{2:X4}.0 is available (offline)</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>1</Value2>
							<WriteLine Id="28" Param0="u16ObjectIndexInclOffset" Param1="byteSubIndexInclOffset" Param2="#xF382" Level="Verbose">0x{0:X4}.{1} may be available (the entry 0x{2:X4}.0 is not available (offline)</WriteLine>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CheckIfSi1Exists">
					<GetObjectDescription SourceDictionary="odDeviceObjectdictionary" Index="u16ObjectIndexInclOffset" SubIndex="byteSubIndexInclOffset">
						<Type>u16DataType</Type>
					</GetObjectDescription>
					<GotoOnFailure>HandleNotExistingSi1</GotoOnFailure>
				</TestStep>
				<TestStep>
					<Compare>
						<NotEqual>
							<Value1>u16DataType</Value1>
							<Value2>0</Value2>
							<GotoStep>CallSi1CheckEntryDescription</GotoStep>
						</NotEqual>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>1</Value2>
							<WriteLine Id="29" Param0="u16ObjectIndexInclOffset" Level="Verbose">The entry 0x{0:X4}.1 is defined as a padding entry.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>3</Value2>
							<WriteLine Id="30" Param0="u16ObjectIndexInclOffset" Level="Error">The entry 0x{0:X4}.1 shall not defined as a padding entry.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>3</Value2>
							<SetVariable Target="strResult" Param0="u16ObjectIndexInclOffset">The entry 0x{0:X4}.1 shall not defined as a padding entry.</SetVariable>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>EndSi1</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="HandleNotExistingSi1">
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>3</Value2>
							<SetVariable Target="strResult" Param0="u16ObjectIndexInclOffset" Param1="byteSubIndexInclOffset">The entry 0x{0:X4}.{1} does not exists.</SetVariable>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>3</Value2>
							<WriteLine Id="31" Param0="u16ObjectIndexInclOffset" Param1="byteSubIndexInclOffset" Level="Error">The entry 0x{0:X4}.{1} does not exists.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>3</Value2>
							<GotoStep>EndSi1</GotoStep>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="32" Param0="u16ObjectIndexInclOffset" Param1="byteSubIndexInclOffset" Level="Output">The entry 0x{0:X4}.{1} does not exists.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>EndSi1</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CallSi1CheckEntryDescription">
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"offline"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>byteSubIndexInclOffset</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>null</Parameter>
						<Parameter>7</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>null</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>32</Parameter>
						<Parameter>i32CurrentBitOffset</Parameter>
						<Parameter>true</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="EndSi1">
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>3</Value2>
							<SetVariable Target="i32CurrentBitOffset">i32CurrentBitOffset + 32</SetVariable>
						</Equal>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>3</Value2>
							<SetVariable Target="i32CurrentBitOffset">-1</SetVariable>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep Name="ProfileLoopEnd">
					<Compare>
						<Equal>
							<Value1>bAtLeastOneModuleMatch</Value1>
							<Value2>false</Value2>
							<GotoStep>HandleAbortTestCaseOnFirstError</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="HandleAbortTestCaseOnFirstError">
					<Compare>
						<Equal>
							<Value1>bAbortTestCaseOnFirstError</Value1>
							<Value2>false</Value2>
							<GotoStep>ProfileLoopIncrement</GotoStep>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>strResult</Value1>
							<Value2>EmptyString</Value2>
							<GotoStep>ProfileLoopIncrement</GotoStep>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="33" Level="Output">Object verification for all following modules abort because an error was already detected for the current module.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>END</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="ProfileLoopIncrement">
					<SetVariable Target="u32ProfileCounter">u32ProfileCounter + 1</SetVariable>
					<Compare>
						<Greater>
							<Value1>u32CurrentProfilesLength</Value1>
							<Value2>u32ProfileCounter</Value2>
							<GotoStep>ProfileLoopStart</GotoStep>
						</Greater>
					</Compare>
				</TestStep>
				<TestStep Name="END">
					<Compare>
						<NotEqual>
							<Value1>bAtLeastOneModuleMatch</Value1>
							<Value2>true</Value2>
							<SkipCase Id="34">SKIP TEST(no module/channel supports the current profile)</SkipCase>
						</NotEqual>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bDEBUG</Value1>
							<Value2>true</Value2>
							<WriteLine Id="35" Param0="strResult" Level="Verbose">DEBUG | Result : '{0}'.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>strResult</Value1>
							<Value2>EmptyString</Value2>
							<ReturnSuccess Id="36">Test succeed</ReturnSuccess>
						</Equal>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>strResult</Value1>
							<Value2>EmptyString</Value2>
							<RaiseError Id="37"></RaiseError>
						</NotEqual>
					</Compare>
				</TestStep>
			</TestCase>
			<TestCase Name="online | 0xF3A2 (Manufacturer Warning Mask)" CaseId="40">
				<Description>
					<PreCondition>- The device profile is 5003
- The module profile is 2011
- The submodule profile is 0</PreCondition>
					<Action>- Iterate over all online defined modules/channels and if the PreCondition matches the following operations are done:
- Get the online description of object 0xF3A2(+module specific offset) 'Manufacturer Warning Mask' and all entries
 Check:
    (Name)
    BitSize
    DataType
    Rx / Tx mappable
    Default Data
    MinData
    Flags       </Action>
					<PostCondition>Error if
- mandatory object / entry is not defined
- an optional object exists and the entries are invalid
- Object / entry description does not match with the specification</PostCondition>
					<ProposalForSolution>- Define the missing objects
- correct object / entry description</ProposalForSolution>
					<References>
						<Reference Specification="ETG.5003.2011"></Reference>
					</References>
					<Mandatory>true</Mandatory>
				</Description>
				<TestStep Name="InitResult">
					<SetVariable Target="strResult">EmptyString</SetVariable>
				</TestStep>
				<TestStep Name="CheckIfOdAvailable">
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Mailbox</Value1>
							<Value2>false</Value2>
							<SkipCase Id="1">DuT does not support mailbox.</SkipCase>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Mailbox.CoE</Value1>
							<Value2>false</Value2>
							<SkipCase Id="2">DuT does not support CoE.</SkipCase>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Mailbox.CoE.SdoInfo</Value1>
							<Value2>false</Value2>
							<SkipCase Id="3">DuT does not support SDO Info.</SkipCase>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="InitAtLeastOneProfileMatch">
					<SetVariable Target="bAtLeastOneModuleMatch">false</SetVariable>
				</TestStep>
				<TestStep Name="GetCurrentProfileList">
					<SizeOf UInt32Var="u32Tmp">arrOnlineProfiles</SizeOf>
					<Compare>
						<Equal>
							<Value1>u32Tmp</Value1>
							<Value2>0</Value2>
							<CallTestFunction Name="GetCurrentProfileList">
								<Parameter>"online"</Parameter>
								<Parameter>"SafeOP"</Parameter>
								<OutParameter>arrOnlineProfiles</OutParameter>
							</CallTestFunction>
						</Equal>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>u32Tmp</Value1>
							<Value2>0</Value2>
							<WriteLine Id="4" Param0="arrOnlineProfiles" Level="Verbose">Use previously created profile list ({0})</WriteLine>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep>
					<SizeOf UInt32Var="u32Tmp">arrOnlineProfiles</SizeOf>
				</TestStep>
				<TestStep>
					<InitArray TargetArray="arrCurrentProfiles" Length="u32Tmp"></InitArray>
				</TestStep>
				<TestStep>
					<CopyArray>
						<SourceArray>arrOnlineProfiles</SourceArray>
						<DestinationArray>arrCurrentProfiles</DestinationArray>
						<Length>u32Tmp</Length>
					</CopyArray>
				</TestStep>
				<TestStep Name="IsProfileSupported">
					<CallTestFunction Name="DeviceAndModuleProfileDefined">
						<Parameter>arrCurrentProfiles</Parameter>
						<Parameter>5003</Parameter>
						<Parameter>2011</Parameter>
						<OutParameter>bAtLeastOneModuleMatch</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>bAtLeastOneModuleMatch</Value1>
							<Value2>false</Value2>
							<GotoStep>END</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="GetObjectIndexInclOffset">
					<SetVariable Target="u16ObjectIndexInclOffset">#xF3A2</SetVariable>
					<WriteLine Id="5" Param0="u16ObjectIndexInclOffset" Level="Verbose">ObjectIndex '0x{0:X}' (module independent)</WriteLine>
				</TestStep>
				<TestStep Name="LoadDeviceObjectDictionary">
					<Description Id="6" Level="Verbose">Load 'online' object dictionary for testing.</Description>
					<GetObjectDictionary Target="odDeviceObjectdictionary">
						<DictionaryType>Online</DictionaryType>
					</GetObjectDictionary>
					<RaiseErrorOnFailure Id="7">VerifyObject : failed to load online object dictionary.</RaiseErrorOnFailure>
				</TestStep>
				<TestStep Name="SetObjectRequiredLevel">
					<SetVariable Target="bObjectOrEntryRequiredLevel">1</SetVariable>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<CallTestFunction Name="IsEntryDefined">
								<Parameter>#xF382</Parameter>
								<Parameter>0</Parameter>
								<Parameter>online</Parameter>
								<OutParameter>bConditionTrue</OutParameter>
							</CallTestFunction>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bConditionTrue</Value1>
							<Value2>true</Value2>
							<SetVariable Target="bObjectOrEntryRequiredLevel">3</SetVariable>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>3</Value2>
							<WriteLine Id="8" Param0="u16ObjectIndexInclOffset" Param1="#xF382" Level="Verbose">0x{0:X4} 'Manufacturer Warning Mask' shall be available (the entry 0x{1:X4}.0 is available (online)</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>1</Value2>
							<WriteLine Id="9" Param0="u16ObjectIndexInclOffset" Param1="#xF382" Level="Verbose">0x{0:X4} 'Manufacturer Warning Mask' may be available (the entry 0x{1:X4}.0 is not available (online)</WriteLine>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CheckIfObjectExists">
					<GetObjectDescription SourceDictionary="odDeviceObjectdictionary" Index="u16ObjectIndexInclOffset" SubIndex="-1"></GetObjectDescription>
					<GotoOnSuccess>CallCheckObjectDescription</GotoOnSuccess>
				</TestStep>
				<TestStep Name="HandleNotExistingObject">
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>3</Value2>
							<SetVariable Target="strResult" Param0="u16ObjectIndexInclOffset">The object 0x{0:X4} 'Manufacturer Warning Mask' does not exists.</SetVariable>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>3</Value2>
							<WriteLine Id="10" Param0="u16ObjectIndexInclOffset" Level="Error">The object 0x{0:X4} 'Manufacturer Warning Mask' does not exists.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>2</Value2>
							<WriteLine Id="11" Param0="u16ObjectIndexInclOffset" Level="Warning">The object 0x{0:X4} 'Manufacturer Warning Mask' does not exists.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>1</Value2>
							<WriteLine Id="12" Param0="u16ObjectIndexInclOffset" Level="Output">The object 0x{0:X4} 'Manufacturer Warning Mask' does not exists.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>END</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CallCheckObjectDescription">
					<Description Id="13" Param0="u16ObjectIndexInclOffset" Level="Output">Verify the object description 0x{0:X4} 'Manufacturer Warning Mask'.</Description>
					<CallTestFunction Name="CheckObjectDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"online"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>"Manufacturer Warning Mask"</Parameter>
						<Parameter>null</Parameter>
						<Parameter>8</Parameter>
						<Parameter>-1</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<GotoStep>END</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="InitEntryBittOffset">
					<SetVariable Target="i32CurrentBitOffset">0</SetVariable>
				</TestStep>
				<TestStep Name="StartSi0">
					<Description Id="14" Level="Output">Start validate SubIndex0</Description>
					<WriteLine Id="15" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : Subindex '0x{0:X}.0'</WriteLine>
				</TestStep>
				<TestStep Name="CallSi0CheckEntryDescription">
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"online"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>0</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>null</Parameter>
						<Parameter>5</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>null</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>null</Parameter>
						<Parameter>null</Parameter>
						<Parameter>null</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>8</Parameter>
						<Parameter>i32CurrentBitOffset</Parameter>
						<Parameter>true</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="EndSi0">
					<SetVariable Target="i32CurrentBitOffset">16</SetVariable>
				</TestStep>
				<TestStep Name="InitProfileLoopCounter">
					<SetVariable Target="u32ProfileCounter">0</SetVariable>
				</TestStep>
				<TestStep Name="GetProfileArrayLength">
					<SizeOf UInt32Var="u32CurrentProfilesLength">arrCurrentProfiles</SizeOf>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="16" Param0="u32CurrentProfilesLength" Level="Verbose">'{0}' Profile(s) defined online.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>u32CurrentProfilesLength</Value1>
							<Value2>0</Value2>
							<SkipCase Id="17">Skip case | no profile defined.</SkipCase>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="ProfileLoopStart">
					<GetArrayItem SourceArray="arrCurrentProfiles" Target="strTmpString" Index="u32ProfileCounter"></GetArrayItem>
				</TestStep>
				<TestStep Name="CheckProfileInformationString">
					<Compare>
						<Equal>
							<Value1>strTmpString</Value1>
							<Value2>null</Value2>
							<RaiseError Id="18" Param0="u32ProfileCounter">Profile Info element [{0}] is null.</RaiseError>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>strTmpString</Value1>
							<Value2>EmptyString</Value2>
							<RaiseError Id="19" Param0="u32ProfileCounter">Profile Info element [{0}] is an empty string.</RaiseError>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="GetDeviceProfile">
					<CallTestFunction Name="GetDeviceProfile">
						<Parameter>strTmpString</Parameter>
						<OutParameter>uint16CurDeviceProfile</OutParameter>
					</CallTestFunction>
				</TestStep>
				<TestStep Name="GetModuleProfile">
					<CallTestFunction Name="GetModuleProfile">
						<Parameter>strTmpString</Parameter>
						<OutParameter>uint16CurModuleProfile</OutParameter>
					</CallTestFunction>
				</TestStep>
				<TestStep Name="GetSubModuleProfile">
					<CallTestFunction Name="GetSubModuleProfile">
						<Parameter>strTmpString</Parameter>
						<OutParameter>uint16CurSubModuleProfile</OutParameter>
					</CallTestFunction>
				</TestStep>
				<TestStep Name="DumpProfileInfo">
					<Description Id="20" Param0="uint16CurDeviceProfile" Param1="uint16CurModuleProfile" Param2="uint16CurSubModuleProfile" Param3="u32ProfileCounter" Level="Output">Module[{3}] : DeviceProfile '{0}' ; ModuleProfile '{1}' ; SubModuleProfile '{2}'</Description>
					<Compare>
						<Equal>
							<Value1>bIgnoreProfileID</Value1>
							<Value2>true</Value2>
							<GotoStep>IndicateThatAtleastOneModuleMatch</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CompareDeviceProfile">
					<Compare>
						<NotEqual>
							<Value1>uint16CurDeviceProfile</Value1>
							<Value2>5003</Value2>
							<WriteLine Id="21" Param0="uint16CurDeviceProfile" Level="Output">Skip Profile  (Test Device Profile '5003' != Cur Device Profile '{0}')</WriteLine>
						</NotEqual>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>uint16CurDeviceProfile</Value1>
							<Value2>5003</Value2>
							<GotoStep>ProfileLoopEnd</GotoStep>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep Name="CompareModuleProfile">
					<Compare>
						<NotEqual>
							<Value1>uint16CurModuleProfile</Value1>
							<Value2>2011</Value2>
							<WriteLine Id="22" Param0="uint16CurModuleProfile" Level="Output">Skip Profile  (Test Module Profile '2011' != Cur Module Profile '{0}')</WriteLine>
						</NotEqual>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>uint16CurModuleProfile</Value1>
							<Value2>2011</Value2>
							<GotoStep>ProfileLoopEnd</GotoStep>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep Name="CompareSubModuleProfile">
					<Compare>
						<NotEqual>
							<Value1>uint16CurSubModuleProfile</Value1>
							<Value2>0</Value2>
							<WriteLine Id="23" Param0="uint16CurSubModuleProfile" Level="Output">Skip Profile  (Test SubModule Profile '0' != Cur SubModule Profile '{0}')</WriteLine>
						</NotEqual>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>uint16CurSubModuleProfile</Value1>
							<Value2>0</Value2>
							<GotoStep>ProfileLoopEnd</GotoStep>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep Name="IndicateThatAtleastOneModuleMatch">
					<SetVariable Target="bAtLeastOneModuleMatch">true</SetVariable>
				</TestStep>
				<TestStep Name="StartSi1">
					<Description Id="24" Param0="1 + (u32ProfileCounter * 1)" Level="Output">Start validate SubIndex{0}</Description>
					<SetVariable Target="byteSubIndexInclOffset">1 + (u32ProfileCounter * 1)</SetVariable>
					<WriteLine Id="25" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Param2="byteSubIndexInclOffset" Level="Verbose">Module[{1}] : Subindex '0x{0:X}.{2}'</WriteLine>
				</TestStep>
				<TestStep Name="SetSi1RequiredLevel">
					<SetVariable Target="bObjectOrEntryRequiredLevel">1</SetVariable>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<CallTestFunction Name="IsEntryDefined">
								<Parameter>#xF382</Parameter>
								<Parameter>0</Parameter>
								<Parameter>online</Parameter>
								<OutParameter>bConditionTrue</OutParameter>
							</CallTestFunction>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bConditionTrue</Value1>
							<Value2>true</Value2>
							<SetVariable Target="bObjectOrEntryRequiredLevel">3</SetVariable>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>3</Value2>
							<WriteLine Id="26" Param0="u16ObjectIndexInclOffset" Param1="byteSubIndexInclOffset" Param2="#xF382" Level="Verbose">0x{0:X4}.{1} shall be available (the entry 0x{2:X4}.0 is available (online)</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>1</Value2>
							<WriteLine Id="27" Param0="u16ObjectIndexInclOffset" Param1="byteSubIndexInclOffset" Param2="#xF382" Level="Verbose">0x{0:X4}.{1} may be available (the entry 0x{2:X4}.0 is not available (online)</WriteLine>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CheckIfSi1Exists">
					<GetObjectDescription SourceDictionary="odDeviceObjectdictionary" Index="u16ObjectIndexInclOffset" SubIndex="byteSubIndexInclOffset">
						<Type>u16DataType</Type>
					</GetObjectDescription>
					<GotoOnFailure>HandleNotExistingSi1</GotoOnFailure>
				</TestStep>
				<TestStep>
					<Compare>
						<NotEqual>
							<Value1>u16DataType</Value1>
							<Value2>0</Value2>
							<GotoStep>CallSi1CheckEntryDescription</GotoStep>
						</NotEqual>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>1</Value2>
							<WriteLine Id="28" Param0="u16ObjectIndexInclOffset" Level="Verbose">The entry 0x{0:X4}.1 is defined as a padding entry.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>3</Value2>
							<WriteLine Id="29" Param0="u16ObjectIndexInclOffset" Level="Error">The entry 0x{0:X4}.1 shall not defined as a padding entry.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>3</Value2>
							<SetVariable Target="strResult" Param0="u16ObjectIndexInclOffset">The entry 0x{0:X4}.1 shall not defined as a padding entry.</SetVariable>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>EndSi1</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="HandleNotExistingSi1">
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>3</Value2>
							<SetVariable Target="strResult" Param0="u16ObjectIndexInclOffset" Param1="byteSubIndexInclOffset">The entry 0x{0:X4}.{1} does not exists.</SetVariable>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>3</Value2>
							<WriteLine Id="30" Param0="u16ObjectIndexInclOffset" Param1="byteSubIndexInclOffset" Level="Error">The entry 0x{0:X4}.{1} does not exists.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>3</Value2>
							<GotoStep>EndSi1</GotoStep>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="31" Param0="u16ObjectIndexInclOffset" Param1="byteSubIndexInclOffset" Level="Output">The entry 0x{0:X4}.{1} does not exists.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>EndSi1</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CallSi1CheckEntryDescription">
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"online"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>byteSubIndexInclOffset</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>null</Parameter>
						<Parameter>7</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>null</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>32</Parameter>
						<Parameter>i32CurrentBitOffset</Parameter>
						<Parameter>true</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="EndSi1">
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>3</Value2>
							<SetVariable Target="i32CurrentBitOffset">i32CurrentBitOffset + 32</SetVariable>
						</Equal>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>3</Value2>
							<SetVariable Target="i32CurrentBitOffset">-1</SetVariable>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep Name="ProfileLoopEnd">
					<Compare>
						<Equal>
							<Value1>bAtLeastOneModuleMatch</Value1>
							<Value2>false</Value2>
							<GotoStep>HandleAbortTestCaseOnFirstError</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="HandleAbortTestCaseOnFirstError">
					<Compare>
						<Equal>
							<Value1>bAbortTestCaseOnFirstError</Value1>
							<Value2>false</Value2>
							<GotoStep>ProfileLoopIncrement</GotoStep>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>strResult</Value1>
							<Value2>EmptyString</Value2>
							<GotoStep>ProfileLoopIncrement</GotoStep>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="32" Level="Output">Object verification for all following modules abort because an error was already detected for the current module.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>END</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="ProfileLoopIncrement">
					<SetVariable Target="u32ProfileCounter">u32ProfileCounter + 1</SetVariable>
					<Compare>
						<Greater>
							<Value1>u32CurrentProfilesLength</Value1>
							<Value2>u32ProfileCounter</Value2>
							<GotoStep>ProfileLoopStart</GotoStep>
						</Greater>
					</Compare>
				</TestStep>
				<TestStep Name="END">
					<Compare>
						<NotEqual>
							<Value1>bAtLeastOneModuleMatch</Value1>
							<Value2>true</Value2>
							<SkipCase Id="33">SKIP TEST(no module/channel supports the current profile)</SkipCase>
						</NotEqual>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bDEBUG</Value1>
							<Value2>true</Value2>
							<WriteLine Id="34" Param0="strResult" Level="Verbose">DEBUG | Result : '{0}'.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>strResult</Value1>
							<Value2>EmptyString</Value2>
							<ReturnSuccess Id="35">Test succeed</ReturnSuccess>
						</Equal>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>strResult</Value1>
							<Value2>EmptyString</Value2>
							<RaiseError Id="36"></RaiseError>
						</NotEqual>
					</Compare>
				</TestStep>
			</TestCase>
			<TestCase Name="offline | 0xF3A3 (Device Error Mask)" CaseId="41">
				<Description>
					<PreCondition>- The device profile is 5003
- The module profile is 2011
- The submodule profile is 0</PreCondition>
					<Action>- Iterate over all offline defined modules/channels and if the PreCondition matches the following operations are done:
- Get the offline description of object 0xF3A3(+module specific offset) 'Device Error Mask' and all entries
 Check:
    (Name)
    BitSize
    DataType
    Rx / Tx mappable
    Default Data
    MinData
    Flags       </Action>
					<PostCondition>Error if
- mandatory object / entry is not defined
- an optional object exists and the entries are invalid
- Object / entry description does not match with the specification</PostCondition>
					<ProposalForSolution>- Define the missing objects
- correct object / entry description</ProposalForSolution>
					<References>
						<Reference Specification="ETG.5003.2011"></Reference>
					</References>
					<Mandatory>true</Mandatory>
				</Description>
				<TestStep Name="InitResult">
					<SetVariable Target="strResult">EmptyString</SetVariable>
				</TestStep>
				<TestStep Name="CheckIfOdAvailable">
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Mailbox</Value1>
							<Value2>false</Value2>
							<SkipCase Id="1">DuT does not support mailbox.</SkipCase>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Mailbox.CoE</Value1>
							<Value2>false</Value2>
							<SkipCase Id="2">DuT does not support CoE.</SkipCase>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep>
					<GetObjectDictionary Target="odDeviceObjectdictionary">
						<DictionaryType>Offline</DictionaryType>
					</GetObjectDictionary>
					<SkipOnFailure Id="3">No offline object dictionary defined.</SkipOnFailure>
				</TestStep>
				<TestStep>
					<GetObjectList Count="u32Tmp" Target="odDeviceObjectdictionaryList" SourceDict="odDeviceObjectdictionary"></GetObjectList>
					<Compare>
						<Equal>
							<Value1>u32Tmp</Value1>
							<Value2>0</Value2>
							<SkipCase Id="4">No offline object dictionary defined.</SkipCase>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="InitAtLeastOneProfileMatch">
					<SetVariable Target="bAtLeastOneModuleMatch">false</SetVariable>
				</TestStep>
				<TestStep Name="GetCurrentProfileList">
					<SizeOf UInt32Var="u32Tmp">arrOfflineProfiles</SizeOf>
					<Compare>
						<Equal>
							<Value1>u32Tmp</Value1>
							<Value2>0</Value2>
							<CallTestFunction Name="GetCurrentProfileList">
								<Parameter>"offline"</Parameter>
								<Parameter>"SafeOP"</Parameter>
								<OutParameter>arrOfflineProfiles</OutParameter>
							</CallTestFunction>
						</Equal>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>u32Tmp</Value1>
							<Value2>0</Value2>
							<WriteLine Id="5" Param0="arrOfflineProfiles" Level="Verbose">Use previously created profile list ({0})</WriteLine>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep>
					<SizeOf UInt32Var="u32Tmp">arrOfflineProfiles</SizeOf>
				</TestStep>
				<TestStep>
					<InitArray TargetArray="arrCurrentProfiles" Length="u32Tmp"></InitArray>
				</TestStep>
				<TestStep>
					<CopyArray>
						<SourceArray>arrOfflineProfiles</SourceArray>
						<DestinationArray>arrCurrentProfiles</DestinationArray>
						<Length>u32Tmp</Length>
					</CopyArray>
				</TestStep>
				<TestStep Name="IsProfileSupported">
					<CallTestFunction Name="DeviceAndModuleProfileDefined">
						<Parameter>arrCurrentProfiles</Parameter>
						<Parameter>5003</Parameter>
						<Parameter>2011</Parameter>
						<OutParameter>bAtLeastOneModuleMatch</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>bAtLeastOneModuleMatch</Value1>
							<Value2>false</Value2>
							<GotoStep>END</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="GetObjectIndexInclOffset">
					<SetVariable Target="u16ObjectIndexInclOffset">#xF3A3</SetVariable>
					<WriteLine Id="6" Param0="u16ObjectIndexInclOffset" Level="Verbose">ObjectIndex '0x{0:X}' (module independent)</WriteLine>
				</TestStep>
				<TestStep Name="LoadDeviceObjectDictionary">
					<Description Id="7" Level="Verbose">Load 'offline' object dictionary for testing.</Description>
					<GetObjectDictionary Target="odDeviceObjectdictionary">
						<DictionaryType>Offline</DictionaryType>
					</GetObjectDictionary>
					<RaiseErrorOnFailure Id="8">VerifyObject : failed to load offline object dictionary.</RaiseErrorOnFailure>
				</TestStep>
				<TestStep Name="CallCheckObjectDescription">
					<Description Id="9" Param0="u16ObjectIndexInclOffset" Level="Output">Verify the object description 0x{0:X4} 'Device Error Mask'.</Description>
					<CallTestFunction Name="CheckObjectDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"offline"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>"Device Error Mask"</Parameter>
						<Parameter>null</Parameter>
						<Parameter>8</Parameter>
						<Parameter>-1</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<GotoStep>END</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="InitEntryBittOffset">
					<SetVariable Target="i32CurrentBitOffset">0</SetVariable>
				</TestStep>
				<TestStep Name="StartSi0">
					<Description Id="10" Level="Output">Start validate SubIndex0</Description>
					<WriteLine Id="11" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : Subindex '0x{0:X}.0'</WriteLine>
				</TestStep>
				<TestStep Name="CallSi0CheckEntryDescription">
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"offline"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>0</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>null</Parameter>
						<Parameter>5</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>null</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>null</Parameter>
						<Parameter>null</Parameter>
						<Parameter>null</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>8</Parameter>
						<Parameter>i32CurrentBitOffset</Parameter>
						<Parameter>true</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="EndSi0">
					<SetVariable Target="i32CurrentBitOffset">16</SetVariable>
				</TestStep>
				<TestStep Name="InitProfileLoopCounter">
					<SetVariable Target="u32ProfileCounter">0</SetVariable>
				</TestStep>
				<TestStep Name="GetProfileArrayLength">
					<SizeOf UInt32Var="u32CurrentProfilesLength">arrCurrentProfiles</SizeOf>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="12" Param0="u32CurrentProfilesLength" Level="Verbose">'{0}' Profile(s) defined offline.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>u32CurrentProfilesLength</Value1>
							<Value2>0</Value2>
							<SkipCase Id="13">Skip case | no profile defined.</SkipCase>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="ProfileLoopStart">
					<GetArrayItem SourceArray="arrCurrentProfiles" Target="strTmpString" Index="u32ProfileCounter"></GetArrayItem>
				</TestStep>
				<TestStep Name="CheckProfileInformationString">
					<Compare>
						<Equal>
							<Value1>strTmpString</Value1>
							<Value2>null</Value2>
							<RaiseError Id="14" Param0="u32ProfileCounter">Profile Info element [{0}] is null.</RaiseError>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>strTmpString</Value1>
							<Value2>EmptyString</Value2>
							<RaiseError Id="15" Param0="u32ProfileCounter">Profile Info element [{0}] is an empty string.</RaiseError>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="GetDeviceProfile">
					<CallTestFunction Name="GetDeviceProfile">
						<Parameter>strTmpString</Parameter>
						<OutParameter>uint16CurDeviceProfile</OutParameter>
					</CallTestFunction>
				</TestStep>
				<TestStep Name="GetModuleProfile">
					<CallTestFunction Name="GetModuleProfile">
						<Parameter>strTmpString</Parameter>
						<OutParameter>uint16CurModuleProfile</OutParameter>
					</CallTestFunction>
				</TestStep>
				<TestStep Name="GetSubModuleProfile">
					<CallTestFunction Name="GetSubModuleProfile">
						<Parameter>strTmpString</Parameter>
						<OutParameter>uint16CurSubModuleProfile</OutParameter>
					</CallTestFunction>
				</TestStep>
				<TestStep Name="DumpProfileInfo">
					<Description Id="16" Param0="uint16CurDeviceProfile" Param1="uint16CurModuleProfile" Param2="uint16CurSubModuleProfile" Param3="u32ProfileCounter" Level="Output">Module[{3}] : DeviceProfile '{0}' ; ModuleProfile '{1}' ; SubModuleProfile '{2}'</Description>
					<Compare>
						<Equal>
							<Value1>bIgnoreProfileID</Value1>
							<Value2>true</Value2>
							<GotoStep>IndicateThatAtleastOneModuleMatch</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CompareDeviceProfile">
					<Compare>
						<NotEqual>
							<Value1>uint16CurDeviceProfile</Value1>
							<Value2>5003</Value2>
							<WriteLine Id="17" Param0="uint16CurDeviceProfile" Level="Output">Skip Profile  (Test Device Profile '5003' != Cur Device Profile '{0}')</WriteLine>
						</NotEqual>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>uint16CurDeviceProfile</Value1>
							<Value2>5003</Value2>
							<GotoStep>ProfileLoopEnd</GotoStep>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep Name="CompareModuleProfile">
					<Compare>
						<NotEqual>
							<Value1>uint16CurModuleProfile</Value1>
							<Value2>2011</Value2>
							<WriteLine Id="18" Param0="uint16CurModuleProfile" Level="Output">Skip Profile  (Test Module Profile '2011' != Cur Module Profile '{0}')</WriteLine>
						</NotEqual>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>uint16CurModuleProfile</Value1>
							<Value2>2011</Value2>
							<GotoStep>ProfileLoopEnd</GotoStep>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep Name="CompareSubModuleProfile">
					<Compare>
						<NotEqual>
							<Value1>uint16CurSubModuleProfile</Value1>
							<Value2>0</Value2>
							<WriteLine Id="19" Param0="uint16CurSubModuleProfile" Level="Output">Skip Profile  (Test SubModule Profile '0' != Cur SubModule Profile '{0}')</WriteLine>
						</NotEqual>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>uint16CurSubModuleProfile</Value1>
							<Value2>0</Value2>
							<GotoStep>ProfileLoopEnd</GotoStep>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep Name="IndicateThatAtleastOneModuleMatch">
					<SetVariable Target="bAtLeastOneModuleMatch">true</SetVariable>
				</TestStep>
				<TestStep Name="StartSi1">
					<Description Id="20" Param0="1 + (u32ProfileCounter * 1)" Level="Output">Start validate SubIndex{0}</Description>
					<SetVariable Target="byteSubIndexInclOffset">1 + (u32ProfileCounter * 1)</SetVariable>
					<WriteLine Id="21" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Param2="byteSubIndexInclOffset" Level="Verbose">Module[{1}] : Subindex '0x{0:X}.{2}'</WriteLine>
				</TestStep>
				<TestStep Name="CallSi1CheckEntryDescription">
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"offline"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>byteSubIndexInclOffset</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>null</Parameter>
						<Parameter>7</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>null</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>32</Parameter>
						<Parameter>i32CurrentBitOffset</Parameter>
						<Parameter>true</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="EndSi1">
					<SetVariable Target="i32CurrentBitOffset">i32CurrentBitOffset + 32</SetVariable>
				</TestStep>
				<TestStep Name="ProfileLoopEnd">
					<Compare>
						<Equal>
							<Value1>bAtLeastOneModuleMatch</Value1>
							<Value2>false</Value2>
							<GotoStep>HandleAbortTestCaseOnFirstError</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="HandleAbortTestCaseOnFirstError">
					<Compare>
						<Equal>
							<Value1>bAbortTestCaseOnFirstError</Value1>
							<Value2>false</Value2>
							<GotoStep>ProfileLoopIncrement</GotoStep>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>strResult</Value1>
							<Value2>EmptyString</Value2>
							<GotoStep>ProfileLoopIncrement</GotoStep>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="22" Level="Output">Object verification for all following modules abort because an error was already detected for the current module.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>END</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="ProfileLoopIncrement">
					<SetVariable Target="u32ProfileCounter">u32ProfileCounter + 1</SetVariable>
					<Compare>
						<Greater>
							<Value1>u32CurrentProfilesLength</Value1>
							<Value2>u32ProfileCounter</Value2>
							<GotoStep>ProfileLoopStart</GotoStep>
						</Greater>
					</Compare>
				</TestStep>
				<TestStep Name="END">
					<Compare>
						<NotEqual>
							<Value1>bAtLeastOneModuleMatch</Value1>
							<Value2>true</Value2>
							<SkipCase Id="23">SKIP TEST(no module/channel supports the current profile)</SkipCase>
						</NotEqual>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bDEBUG</Value1>
							<Value2>true</Value2>
							<WriteLine Id="24" Param0="strResult" Level="Verbose">DEBUG | Result : '{0}'.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>strResult</Value1>
							<Value2>EmptyString</Value2>
							<ReturnSuccess Id="25">Test succeed</ReturnSuccess>
						</Equal>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>strResult</Value1>
							<Value2>EmptyString</Value2>
							<RaiseError Id="26"></RaiseError>
						</NotEqual>
					</Compare>
				</TestStep>
			</TestCase>
			<TestCase Name="online | 0xF3A3 (Device Error Mask)" CaseId="42">
				<Description>
					<PreCondition>- The device profile is 5003
- The module profile is 2011
- The submodule profile is 0</PreCondition>
					<Action>- Iterate over all online defined modules/channels and if the PreCondition matches the following operations are done:
- Get the online description of object 0xF3A3(+module specific offset) 'Device Error Mask' and all entries
 Check:
    (Name)
    BitSize
    DataType
    Rx / Tx mappable
    Default Data
    MinData
    Flags       </Action>
					<PostCondition>Error if
- mandatory object / entry is not defined
- an optional object exists and the entries are invalid
- Object / entry description does not match with the specification</PostCondition>
					<ProposalForSolution>- Define the missing objects
- correct object / entry description</ProposalForSolution>
					<References>
						<Reference Specification="ETG.5003.2011"></Reference>
					</References>
					<Mandatory>true</Mandatory>
				</Description>
				<TestStep Name="InitResult">
					<SetVariable Target="strResult">EmptyString</SetVariable>
				</TestStep>
				<TestStep Name="CheckIfOdAvailable">
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Mailbox</Value1>
							<Value2>false</Value2>
							<SkipCase Id="1">DuT does not support mailbox.</SkipCase>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Mailbox.CoE</Value1>
							<Value2>false</Value2>
							<SkipCase Id="2">DuT does not support CoE.</SkipCase>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Mailbox.CoE.SdoInfo</Value1>
							<Value2>false</Value2>
							<SkipCase Id="3">DuT does not support SDO Info.</SkipCase>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="InitAtLeastOneProfileMatch">
					<SetVariable Target="bAtLeastOneModuleMatch">false</SetVariable>
				</TestStep>
				<TestStep Name="GetCurrentProfileList">
					<SizeOf UInt32Var="u32Tmp">arrOnlineProfiles</SizeOf>
					<Compare>
						<Equal>
							<Value1>u32Tmp</Value1>
							<Value2>0</Value2>
							<CallTestFunction Name="GetCurrentProfileList">
								<Parameter>"online"</Parameter>
								<Parameter>"SafeOP"</Parameter>
								<OutParameter>arrOnlineProfiles</OutParameter>
							</CallTestFunction>
						</Equal>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>u32Tmp</Value1>
							<Value2>0</Value2>
							<WriteLine Id="4" Param0="arrOnlineProfiles" Level="Verbose">Use previously created profile list ({0})</WriteLine>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep>
					<SizeOf UInt32Var="u32Tmp">arrOnlineProfiles</SizeOf>
				</TestStep>
				<TestStep>
					<InitArray TargetArray="arrCurrentProfiles" Length="u32Tmp"></InitArray>
				</TestStep>
				<TestStep>
					<CopyArray>
						<SourceArray>arrOnlineProfiles</SourceArray>
						<DestinationArray>arrCurrentProfiles</DestinationArray>
						<Length>u32Tmp</Length>
					</CopyArray>
				</TestStep>
				<TestStep Name="IsProfileSupported">
					<CallTestFunction Name="DeviceAndModuleProfileDefined">
						<Parameter>arrCurrentProfiles</Parameter>
						<Parameter>5003</Parameter>
						<Parameter>2011</Parameter>
						<OutParameter>bAtLeastOneModuleMatch</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>bAtLeastOneModuleMatch</Value1>
							<Value2>false</Value2>
							<GotoStep>END</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="GetObjectIndexInclOffset">
					<SetVariable Target="u16ObjectIndexInclOffset">#xF3A3</SetVariable>
					<WriteLine Id="5" Param0="u16ObjectIndexInclOffset" Level="Verbose">ObjectIndex '0x{0:X}' (module independent)</WriteLine>
				</TestStep>
				<TestStep Name="LoadDeviceObjectDictionary">
					<Description Id="6" Level="Verbose">Load 'online' object dictionary for testing.</Description>
					<GetObjectDictionary Target="odDeviceObjectdictionary">
						<DictionaryType>Online</DictionaryType>
					</GetObjectDictionary>
					<RaiseErrorOnFailure Id="7">VerifyObject : failed to load online object dictionary.</RaiseErrorOnFailure>
				</TestStep>
				<TestStep Name="CallCheckObjectDescription">
					<Description Id="8" Param0="u16ObjectIndexInclOffset" Level="Output">Verify the object description 0x{0:X4} 'Device Error Mask'.</Description>
					<CallTestFunction Name="CheckObjectDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"online"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>"Device Error Mask"</Parameter>
						<Parameter>null</Parameter>
						<Parameter>8</Parameter>
						<Parameter>-1</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<GotoStep>END</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="InitEntryBittOffset">
					<SetVariable Target="i32CurrentBitOffset">0</SetVariable>
				</TestStep>
				<TestStep Name="StartSi0">
					<Description Id="9" Level="Output">Start validate SubIndex0</Description>
					<WriteLine Id="10" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : Subindex '0x{0:X}.0'</WriteLine>
				</TestStep>
				<TestStep Name="CallSi0CheckEntryDescription">
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"online"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>0</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>null</Parameter>
						<Parameter>5</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>null</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>null</Parameter>
						<Parameter>null</Parameter>
						<Parameter>null</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>8</Parameter>
						<Parameter>i32CurrentBitOffset</Parameter>
						<Parameter>true</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="EndSi0">
					<SetVariable Target="i32CurrentBitOffset">16</SetVariable>
				</TestStep>
				<TestStep Name="InitProfileLoopCounter">
					<SetVariable Target="u32ProfileCounter">0</SetVariable>
				</TestStep>
				<TestStep Name="GetProfileArrayLength">
					<SizeOf UInt32Var="u32CurrentProfilesLength">arrCurrentProfiles</SizeOf>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="11" Param0="u32CurrentProfilesLength" Level="Verbose">'{0}' Profile(s) defined online.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>u32CurrentProfilesLength</Value1>
							<Value2>0</Value2>
							<SkipCase Id="12">Skip case | no profile defined.</SkipCase>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="ProfileLoopStart">
					<GetArrayItem SourceArray="arrCurrentProfiles" Target="strTmpString" Index="u32ProfileCounter"></GetArrayItem>
				</TestStep>
				<TestStep Name="CheckProfileInformationString">
					<Compare>
						<Equal>
							<Value1>strTmpString</Value1>
							<Value2>null</Value2>
							<RaiseError Id="13" Param0="u32ProfileCounter">Profile Info element [{0}] is null.</RaiseError>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>strTmpString</Value1>
							<Value2>EmptyString</Value2>
							<RaiseError Id="14" Param0="u32ProfileCounter">Profile Info element [{0}] is an empty string.</RaiseError>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="GetDeviceProfile">
					<CallTestFunction Name="GetDeviceProfile">
						<Parameter>strTmpString</Parameter>
						<OutParameter>uint16CurDeviceProfile</OutParameter>
					</CallTestFunction>
				</TestStep>
				<TestStep Name="GetModuleProfile">
					<CallTestFunction Name="GetModuleProfile">
						<Parameter>strTmpString</Parameter>
						<OutParameter>uint16CurModuleProfile</OutParameter>
					</CallTestFunction>
				</TestStep>
				<TestStep Name="GetSubModuleProfile">
					<CallTestFunction Name="GetSubModuleProfile">
						<Parameter>strTmpString</Parameter>
						<OutParameter>uint16CurSubModuleProfile</OutParameter>
					</CallTestFunction>
				</TestStep>
				<TestStep Name="DumpProfileInfo">
					<Description Id="15" Param0="uint16CurDeviceProfile" Param1="uint16CurModuleProfile" Param2="uint16CurSubModuleProfile" Param3="u32ProfileCounter" Level="Output">Module[{3}] : DeviceProfile '{0}' ; ModuleProfile '{1}' ; SubModuleProfile '{2}'</Description>
					<Compare>
						<Equal>
							<Value1>bIgnoreProfileID</Value1>
							<Value2>true</Value2>
							<GotoStep>IndicateThatAtleastOneModuleMatch</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CompareDeviceProfile">
					<Compare>
						<NotEqual>
							<Value1>uint16CurDeviceProfile</Value1>
							<Value2>5003</Value2>
							<WriteLine Id="16" Param0="uint16CurDeviceProfile" Level="Output">Skip Profile  (Test Device Profile '5003' != Cur Device Profile '{0}')</WriteLine>
						</NotEqual>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>uint16CurDeviceProfile</Value1>
							<Value2>5003</Value2>
							<GotoStep>ProfileLoopEnd</GotoStep>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep Name="CompareModuleProfile">
					<Compare>
						<NotEqual>
							<Value1>uint16CurModuleProfile</Value1>
							<Value2>2011</Value2>
							<WriteLine Id="17" Param0="uint16CurModuleProfile" Level="Output">Skip Profile  (Test Module Profile '2011' != Cur Module Profile '{0}')</WriteLine>
						</NotEqual>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>uint16CurModuleProfile</Value1>
							<Value2>2011</Value2>
							<GotoStep>ProfileLoopEnd</GotoStep>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep Name="CompareSubModuleProfile">
					<Compare>
						<NotEqual>
							<Value1>uint16CurSubModuleProfile</Value1>
							<Value2>0</Value2>
							<WriteLine Id="18" Param0="uint16CurSubModuleProfile" Level="Output">Skip Profile  (Test SubModule Profile '0' != Cur SubModule Profile '{0}')</WriteLine>
						</NotEqual>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>uint16CurSubModuleProfile</Value1>
							<Value2>0</Value2>
							<GotoStep>ProfileLoopEnd</GotoStep>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep Name="IndicateThatAtleastOneModuleMatch">
					<SetVariable Target="bAtLeastOneModuleMatch">true</SetVariable>
				</TestStep>
				<TestStep Name="StartSi1">
					<Description Id="19" Param0="1 + (u32ProfileCounter * 1)" Level="Output">Start validate SubIndex{0}</Description>
					<SetVariable Target="byteSubIndexInclOffset">1 + (u32ProfileCounter * 1)</SetVariable>
					<WriteLine Id="20" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Param2="byteSubIndexInclOffset" Level="Verbose">Module[{1}] : Subindex '0x{0:X}.{2}'</WriteLine>
				</TestStep>
				<TestStep Name="CallSi1CheckEntryDescription">
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"online"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>byteSubIndexInclOffset</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>null</Parameter>
						<Parameter>7</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>null</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>32</Parameter>
						<Parameter>i32CurrentBitOffset</Parameter>
						<Parameter>true</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="EndSi1">
					<SetVariable Target="i32CurrentBitOffset">i32CurrentBitOffset + 32</SetVariable>
				</TestStep>
				<TestStep Name="ProfileLoopEnd">
					<Compare>
						<Equal>
							<Value1>bAtLeastOneModuleMatch</Value1>
							<Value2>false</Value2>
							<GotoStep>HandleAbortTestCaseOnFirstError</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="HandleAbortTestCaseOnFirstError">
					<Compare>
						<Equal>
							<Value1>bAbortTestCaseOnFirstError</Value1>
							<Value2>false</Value2>
							<GotoStep>ProfileLoopIncrement</GotoStep>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>strResult</Value1>
							<Value2>EmptyString</Value2>
							<GotoStep>ProfileLoopIncrement</GotoStep>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="21" Level="Output">Object verification for all following modules abort because an error was already detected for the current module.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>END</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="ProfileLoopIncrement">
					<SetVariable Target="u32ProfileCounter">u32ProfileCounter + 1</SetVariable>
					<Compare>
						<Greater>
							<Value1>u32CurrentProfilesLength</Value1>
							<Value2>u32ProfileCounter</Value2>
							<GotoStep>ProfileLoopStart</GotoStep>
						</Greater>
					</Compare>
				</TestStep>
				<TestStep Name="END">
					<Compare>
						<NotEqual>
							<Value1>bAtLeastOneModuleMatch</Value1>
							<Value2>true</Value2>
							<SkipCase Id="22">SKIP TEST(no module/channel supports the current profile)</SkipCase>
						</NotEqual>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bDEBUG</Value1>
							<Value2>true</Value2>
							<WriteLine Id="23" Param0="strResult" Level="Verbose">DEBUG | Result : '{0}'.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>strResult</Value1>
							<Value2>EmptyString</Value2>
							<ReturnSuccess Id="24">Test succeed</ReturnSuccess>
						</Equal>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>strResult</Value1>
							<Value2>EmptyString</Value2>
							<RaiseError Id="25"></RaiseError>
						</NotEqual>
					</Compare>
				</TestStep>
			</TestCase>
			<TestCase Name="offline | 0xF3A4 (Manufacturer Error Mask)" CaseId="43">
				<Description>
					<PreCondition>- The device profile is 5003
- The module profile is 2011
- The submodule profile is 0</PreCondition>
					<Action>- Iterate over all offline defined modules/channels and if the PreCondition matches the following operations are done:
- Get the offline description of object 0xF3A4(+module specific offset) 'Manufacturer Error Mask' and all entries
 Check:
    (Name)
    BitSize
    DataType
    Rx / Tx mappable
    Default Data
    MinData
    Flags       </Action>
					<PostCondition>Error if
- mandatory object / entry is not defined
- an optional object exists and the entries are invalid
- Object / entry description does not match with the specification</PostCondition>
					<ProposalForSolution>- Define the missing objects
- correct object / entry description</ProposalForSolution>
					<References>
						<Reference Specification="ETG.5003.2011"></Reference>
					</References>
					<Mandatory>true</Mandatory>
				</Description>
				<TestStep Name="InitResult">
					<SetVariable Target="strResult">EmptyString</SetVariable>
				</TestStep>
				<TestStep Name="CheckIfOdAvailable">
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Mailbox</Value1>
							<Value2>false</Value2>
							<SkipCase Id="1">DuT does not support mailbox.</SkipCase>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Mailbox.CoE</Value1>
							<Value2>false</Value2>
							<SkipCase Id="2">DuT does not support CoE.</SkipCase>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep>
					<GetObjectDictionary Target="odDeviceObjectdictionary">
						<DictionaryType>Offline</DictionaryType>
					</GetObjectDictionary>
					<SkipOnFailure Id="3">No offline object dictionary defined.</SkipOnFailure>
				</TestStep>
				<TestStep>
					<GetObjectList Count="u32Tmp" Target="odDeviceObjectdictionaryList" SourceDict="odDeviceObjectdictionary"></GetObjectList>
					<Compare>
						<Equal>
							<Value1>u32Tmp</Value1>
							<Value2>0</Value2>
							<SkipCase Id="4">No offline object dictionary defined.</SkipCase>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="InitAtLeastOneProfileMatch">
					<SetVariable Target="bAtLeastOneModuleMatch">false</SetVariable>
				</TestStep>
				<TestStep Name="GetCurrentProfileList">
					<SizeOf UInt32Var="u32Tmp">arrOfflineProfiles</SizeOf>
					<Compare>
						<Equal>
							<Value1>u32Tmp</Value1>
							<Value2>0</Value2>
							<CallTestFunction Name="GetCurrentProfileList">
								<Parameter>"offline"</Parameter>
								<Parameter>"SafeOP"</Parameter>
								<OutParameter>arrOfflineProfiles</OutParameter>
							</CallTestFunction>
						</Equal>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>u32Tmp</Value1>
							<Value2>0</Value2>
							<WriteLine Id="5" Param0="arrOfflineProfiles" Level="Verbose">Use previously created profile list ({0})</WriteLine>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep>
					<SizeOf UInt32Var="u32Tmp">arrOfflineProfiles</SizeOf>
				</TestStep>
				<TestStep>
					<InitArray TargetArray="arrCurrentProfiles" Length="u32Tmp"></InitArray>
				</TestStep>
				<TestStep>
					<CopyArray>
						<SourceArray>arrOfflineProfiles</SourceArray>
						<DestinationArray>arrCurrentProfiles</DestinationArray>
						<Length>u32Tmp</Length>
					</CopyArray>
				</TestStep>
				<TestStep Name="IsProfileSupported">
					<CallTestFunction Name="DeviceAndModuleProfileDefined">
						<Parameter>arrCurrentProfiles</Parameter>
						<Parameter>5003</Parameter>
						<Parameter>2011</Parameter>
						<OutParameter>bAtLeastOneModuleMatch</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>bAtLeastOneModuleMatch</Value1>
							<Value2>false</Value2>
							<GotoStep>END</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="GetObjectIndexInclOffset">
					<SetVariable Target="u16ObjectIndexInclOffset">#xF3A4</SetVariable>
					<WriteLine Id="6" Param0="u16ObjectIndexInclOffset" Level="Verbose">ObjectIndex '0x{0:X}' (module independent)</WriteLine>
				</TestStep>
				<TestStep Name="LoadDeviceObjectDictionary">
					<Description Id="7" Level="Verbose">Load 'offline' object dictionary for testing.</Description>
					<GetObjectDictionary Target="odDeviceObjectdictionary">
						<DictionaryType>Offline</DictionaryType>
					</GetObjectDictionary>
					<RaiseErrorOnFailure Id="8">VerifyObject : failed to load offline object dictionary.</RaiseErrorOnFailure>
				</TestStep>
				<TestStep Name="SetObjectRequiredLevel">
					<SetVariable Target="bObjectOrEntryRequiredLevel">1</SetVariable>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<CallTestFunction Name="IsEntryDefined">
								<Parameter>#xF384</Parameter>
								<Parameter>0</Parameter>
								<Parameter>offline</Parameter>
								<OutParameter>bConditionTrue</OutParameter>
							</CallTestFunction>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bConditionTrue</Value1>
							<Value2>true</Value2>
							<SetVariable Target="bObjectOrEntryRequiredLevel">3</SetVariable>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>3</Value2>
							<WriteLine Id="9" Param0="u16ObjectIndexInclOffset" Param1="#xF384" Level="Verbose">0x{0:X4} 'Manufacturer Error Mask' shall be available (the entry 0x{1:X4}.0 is available (offline)</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>1</Value2>
							<WriteLine Id="10" Param0="u16ObjectIndexInclOffset" Param1="#xF384" Level="Verbose">0x{0:X4} 'Manufacturer Error Mask' may be available (the entry 0x{1:X4}.0 is not available (offline)</WriteLine>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CheckIfObjectExists">
					<GetObjectDescription SourceDictionary="odDeviceObjectdictionary" Index="u16ObjectIndexInclOffset" SubIndex="-1"></GetObjectDescription>
					<GotoOnSuccess>CallCheckObjectDescription</GotoOnSuccess>
				</TestStep>
				<TestStep Name="HandleNotExistingObject">
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>3</Value2>
							<SetVariable Target="strResult" Param0="u16ObjectIndexInclOffset">The object 0x{0:X4} 'Manufacturer Error Mask' does not exists.</SetVariable>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>3</Value2>
							<WriteLine Id="11" Param0="u16ObjectIndexInclOffset" Level="Error">The object 0x{0:X4} 'Manufacturer Error Mask' does not exists.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>2</Value2>
							<WriteLine Id="12" Param0="u16ObjectIndexInclOffset" Level="Warning">The object 0x{0:X4} 'Manufacturer Error Mask' does not exists.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>1</Value2>
							<WriteLine Id="13" Param0="u16ObjectIndexInclOffset" Level="Output">The object 0x{0:X4} 'Manufacturer Error Mask' does not exists.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>END</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CallCheckObjectDescription">
					<Description Id="14" Param0="u16ObjectIndexInclOffset" Level="Output">Verify the object description 0x{0:X4} 'Manufacturer Error Mask'.</Description>
					<CallTestFunction Name="CheckObjectDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"offline"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>"Manufacturer Error Mask"</Parameter>
						<Parameter>null</Parameter>
						<Parameter>8</Parameter>
						<Parameter>-1</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<GotoStep>END</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="InitEntryBittOffset">
					<SetVariable Target="i32CurrentBitOffset">0</SetVariable>
				</TestStep>
				<TestStep Name="StartSi0">
					<Description Id="15" Level="Output">Start validate SubIndex0</Description>
					<WriteLine Id="16" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : Subindex '0x{0:X}.0'</WriteLine>
				</TestStep>
				<TestStep Name="CallSi0CheckEntryDescription">
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"offline"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>0</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>null</Parameter>
						<Parameter>5</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>null</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>null</Parameter>
						<Parameter>null</Parameter>
						<Parameter>null</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>8</Parameter>
						<Parameter>i32CurrentBitOffset</Parameter>
						<Parameter>true</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="EndSi0">
					<SetVariable Target="i32CurrentBitOffset">16</SetVariable>
				</TestStep>
				<TestStep Name="InitProfileLoopCounter">
					<SetVariable Target="u32ProfileCounter">0</SetVariable>
				</TestStep>
				<TestStep Name="GetProfileArrayLength">
					<SizeOf UInt32Var="u32CurrentProfilesLength">arrCurrentProfiles</SizeOf>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="17" Param0="u32CurrentProfilesLength" Level="Verbose">'{0}' Profile(s) defined offline.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>u32CurrentProfilesLength</Value1>
							<Value2>0</Value2>
							<SkipCase Id="18">Skip case | no profile defined.</SkipCase>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="ProfileLoopStart">
					<GetArrayItem SourceArray="arrCurrentProfiles" Target="strTmpString" Index="u32ProfileCounter"></GetArrayItem>
				</TestStep>
				<TestStep Name="CheckProfileInformationString">
					<Compare>
						<Equal>
							<Value1>strTmpString</Value1>
							<Value2>null</Value2>
							<RaiseError Id="19" Param0="u32ProfileCounter">Profile Info element [{0}] is null.</RaiseError>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>strTmpString</Value1>
							<Value2>EmptyString</Value2>
							<RaiseError Id="20" Param0="u32ProfileCounter">Profile Info element [{0}] is an empty string.</RaiseError>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="GetDeviceProfile">
					<CallTestFunction Name="GetDeviceProfile">
						<Parameter>strTmpString</Parameter>
						<OutParameter>uint16CurDeviceProfile</OutParameter>
					</CallTestFunction>
				</TestStep>
				<TestStep Name="GetModuleProfile">
					<CallTestFunction Name="GetModuleProfile">
						<Parameter>strTmpString</Parameter>
						<OutParameter>uint16CurModuleProfile</OutParameter>
					</CallTestFunction>
				</TestStep>
				<TestStep Name="GetSubModuleProfile">
					<CallTestFunction Name="GetSubModuleProfile">
						<Parameter>strTmpString</Parameter>
						<OutParameter>uint16CurSubModuleProfile</OutParameter>
					</CallTestFunction>
				</TestStep>
				<TestStep Name="DumpProfileInfo">
					<Description Id="21" Param0="uint16CurDeviceProfile" Param1="uint16CurModuleProfile" Param2="uint16CurSubModuleProfile" Param3="u32ProfileCounter" Level="Output">Module[{3}] : DeviceProfile '{0}' ; ModuleProfile '{1}' ; SubModuleProfile '{2}'</Description>
					<Compare>
						<Equal>
							<Value1>bIgnoreProfileID</Value1>
							<Value2>true</Value2>
							<GotoStep>IndicateThatAtleastOneModuleMatch</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CompareDeviceProfile">
					<Compare>
						<NotEqual>
							<Value1>uint16CurDeviceProfile</Value1>
							<Value2>5003</Value2>
							<WriteLine Id="22" Param0="uint16CurDeviceProfile" Level="Output">Skip Profile  (Test Device Profile '5003' != Cur Device Profile '{0}')</WriteLine>
						</NotEqual>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>uint16CurDeviceProfile</Value1>
							<Value2>5003</Value2>
							<GotoStep>ProfileLoopEnd</GotoStep>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep Name="CompareModuleProfile">
					<Compare>
						<NotEqual>
							<Value1>uint16CurModuleProfile</Value1>
							<Value2>2011</Value2>
							<WriteLine Id="23" Param0="uint16CurModuleProfile" Level="Output">Skip Profile  (Test Module Profile '2011' != Cur Module Profile '{0}')</WriteLine>
						</NotEqual>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>uint16CurModuleProfile</Value1>
							<Value2>2011</Value2>
							<GotoStep>ProfileLoopEnd</GotoStep>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep Name="CompareSubModuleProfile">
					<Compare>
						<NotEqual>
							<Value1>uint16CurSubModuleProfile</Value1>
							<Value2>0</Value2>
							<WriteLine Id="24" Param0="uint16CurSubModuleProfile" Level="Output">Skip Profile  (Test SubModule Profile '0' != Cur SubModule Profile '{0}')</WriteLine>
						</NotEqual>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>uint16CurSubModuleProfile</Value1>
							<Value2>0</Value2>
							<GotoStep>ProfileLoopEnd</GotoStep>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep Name="IndicateThatAtleastOneModuleMatch">
					<SetVariable Target="bAtLeastOneModuleMatch">true</SetVariable>
				</TestStep>
				<TestStep Name="StartSi1">
					<Description Id="25" Param0="1 + (u32ProfileCounter * 1)" Level="Output">Start validate SubIndex{0}</Description>
					<SetVariable Target="byteSubIndexInclOffset">1 + (u32ProfileCounter * 1)</SetVariable>
					<WriteLine Id="26" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Param2="byteSubIndexInclOffset" Level="Verbose">Module[{1}] : Subindex '0x{0:X}.{2}'</WriteLine>
				</TestStep>
				<TestStep Name="SetSi1RequiredLevel">
					<SetVariable Target="bObjectOrEntryRequiredLevel">1</SetVariable>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<CallTestFunction Name="IsEntryDefined">
								<Parameter>#xF384</Parameter>
								<Parameter>0</Parameter>
								<Parameter>offline</Parameter>
								<OutParameter>bConditionTrue</OutParameter>
							</CallTestFunction>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bConditionTrue</Value1>
							<Value2>true</Value2>
							<SetVariable Target="bObjectOrEntryRequiredLevel">3</SetVariable>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>3</Value2>
							<WriteLine Id="27" Param0="u16ObjectIndexInclOffset" Param1="byteSubIndexInclOffset" Param2="#xF384" Level="Verbose">0x{0:X4}.{1} shall be available (the entry 0x{2:X4}.0 is available (offline)</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>1</Value2>
							<WriteLine Id="28" Param0="u16ObjectIndexInclOffset" Param1="byteSubIndexInclOffset" Param2="#xF384" Level="Verbose">0x{0:X4}.{1} may be available (the entry 0x{2:X4}.0 is not available (offline)</WriteLine>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CheckIfSi1Exists">
					<GetObjectDescription SourceDictionary="odDeviceObjectdictionary" Index="u16ObjectIndexInclOffset" SubIndex="byteSubIndexInclOffset">
						<Type>u16DataType</Type>
					</GetObjectDescription>
					<GotoOnFailure>HandleNotExistingSi1</GotoOnFailure>
				</TestStep>
				<TestStep>
					<Compare>
						<NotEqual>
							<Value1>u16DataType</Value1>
							<Value2>0</Value2>
							<GotoStep>CallSi1CheckEntryDescription</GotoStep>
						</NotEqual>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>1</Value2>
							<WriteLine Id="29" Param0="u16ObjectIndexInclOffset" Level="Verbose">The entry 0x{0:X4}.1 is defined as a padding entry.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>3</Value2>
							<WriteLine Id="30" Param0="u16ObjectIndexInclOffset" Level="Error">The entry 0x{0:X4}.1 shall not defined as a padding entry.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>3</Value2>
							<SetVariable Target="strResult" Param0="u16ObjectIndexInclOffset">The entry 0x{0:X4}.1 shall not defined as a padding entry.</SetVariable>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>EndSi1</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="HandleNotExistingSi1">
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>3</Value2>
							<SetVariable Target="strResult" Param0="u16ObjectIndexInclOffset" Param1="byteSubIndexInclOffset">The entry 0x{0:X4}.{1} does not exists.</SetVariable>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>3</Value2>
							<WriteLine Id="31" Param0="u16ObjectIndexInclOffset" Param1="byteSubIndexInclOffset" Level="Error">The entry 0x{0:X4}.{1} does not exists.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>3</Value2>
							<GotoStep>EndSi1</GotoStep>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="32" Param0="u16ObjectIndexInclOffset" Param1="byteSubIndexInclOffset" Level="Output">The entry 0x{0:X4}.{1} does not exists.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>EndSi1</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CallSi1CheckEntryDescription">
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"offline"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>byteSubIndexInclOffset</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>null</Parameter>
						<Parameter>7</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>null</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>32</Parameter>
						<Parameter>i32CurrentBitOffset</Parameter>
						<Parameter>true</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="EndSi1">
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>3</Value2>
							<SetVariable Target="i32CurrentBitOffset">i32CurrentBitOffset + 32</SetVariable>
						</Equal>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>3</Value2>
							<SetVariable Target="i32CurrentBitOffset">-1</SetVariable>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep Name="ProfileLoopEnd">
					<Compare>
						<Equal>
							<Value1>bAtLeastOneModuleMatch</Value1>
							<Value2>false</Value2>
							<GotoStep>HandleAbortTestCaseOnFirstError</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="HandleAbortTestCaseOnFirstError">
					<Compare>
						<Equal>
							<Value1>bAbortTestCaseOnFirstError</Value1>
							<Value2>false</Value2>
							<GotoStep>ProfileLoopIncrement</GotoStep>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>strResult</Value1>
							<Value2>EmptyString</Value2>
							<GotoStep>ProfileLoopIncrement</GotoStep>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="33" Level="Output">Object verification for all following modules abort because an error was already detected for the current module.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>END</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="ProfileLoopIncrement">
					<SetVariable Target="u32ProfileCounter">u32ProfileCounter + 1</SetVariable>
					<Compare>
						<Greater>
							<Value1>u32CurrentProfilesLength</Value1>
							<Value2>u32ProfileCounter</Value2>
							<GotoStep>ProfileLoopStart</GotoStep>
						</Greater>
					</Compare>
				</TestStep>
				<TestStep Name="END">
					<Compare>
						<NotEqual>
							<Value1>bAtLeastOneModuleMatch</Value1>
							<Value2>true</Value2>
							<SkipCase Id="34">SKIP TEST(no module/channel supports the current profile)</SkipCase>
						</NotEqual>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bDEBUG</Value1>
							<Value2>true</Value2>
							<WriteLine Id="35" Param0="strResult" Level="Verbose">DEBUG | Result : '{0}'.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>strResult</Value1>
							<Value2>EmptyString</Value2>
							<ReturnSuccess Id="36">Test succeed</ReturnSuccess>
						</Equal>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>strResult</Value1>
							<Value2>EmptyString</Value2>
							<RaiseError Id="37"></RaiseError>
						</NotEqual>
					</Compare>
				</TestStep>
			</TestCase>
			<TestCase Name="online | 0xF3A4 (Manufacturer Error Mask)" CaseId="44">
				<Description>
					<PreCondition>- The device profile is 5003
- The module profile is 2011
- The submodule profile is 0</PreCondition>
					<Action>- Iterate over all online defined modules/channels and if the PreCondition matches the following operations are done:
- Get the online description of object 0xF3A4(+module specific offset) 'Manufacturer Error Mask' and all entries
 Check:
    (Name)
    BitSize
    DataType
    Rx / Tx mappable
    Default Data
    MinData
    Flags       </Action>
					<PostCondition>Error if
- mandatory object / entry is not defined
- an optional object exists and the entries are invalid
- Object / entry description does not match with the specification</PostCondition>
					<ProposalForSolution>- Define the missing objects
- correct object / entry description</ProposalForSolution>
					<References>
						<Reference Specification="ETG.5003.2011"></Reference>
					</References>
					<Mandatory>true</Mandatory>
				</Description>
				<TestStep Name="InitResult">
					<SetVariable Target="strResult">EmptyString</SetVariable>
				</TestStep>
				<TestStep Name="CheckIfOdAvailable">
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Mailbox</Value1>
							<Value2>false</Value2>
							<SkipCase Id="1">DuT does not support mailbox.</SkipCase>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Mailbox.CoE</Value1>
							<Value2>false</Value2>
							<SkipCase Id="2">DuT does not support CoE.</SkipCase>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Mailbox.CoE.SdoInfo</Value1>
							<Value2>false</Value2>
							<SkipCase Id="3">DuT does not support SDO Info.</SkipCase>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="InitAtLeastOneProfileMatch">
					<SetVariable Target="bAtLeastOneModuleMatch">false</SetVariable>
				</TestStep>
				<TestStep Name="GetCurrentProfileList">
					<SizeOf UInt32Var="u32Tmp">arrOnlineProfiles</SizeOf>
					<Compare>
						<Equal>
							<Value1>u32Tmp</Value1>
							<Value2>0</Value2>
							<CallTestFunction Name="GetCurrentProfileList">
								<Parameter>"online"</Parameter>
								<Parameter>"SafeOP"</Parameter>
								<OutParameter>arrOnlineProfiles</OutParameter>
							</CallTestFunction>
						</Equal>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>u32Tmp</Value1>
							<Value2>0</Value2>
							<WriteLine Id="4" Param0="arrOnlineProfiles" Level="Verbose">Use previously created profile list ({0})</WriteLine>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep>
					<SizeOf UInt32Var="u32Tmp">arrOnlineProfiles</SizeOf>
				</TestStep>
				<TestStep>
					<InitArray TargetArray="arrCurrentProfiles" Length="u32Tmp"></InitArray>
				</TestStep>
				<TestStep>
					<CopyArray>
						<SourceArray>arrOnlineProfiles</SourceArray>
						<DestinationArray>arrCurrentProfiles</DestinationArray>
						<Length>u32Tmp</Length>
					</CopyArray>
				</TestStep>
				<TestStep Name="IsProfileSupported">
					<CallTestFunction Name="DeviceAndModuleProfileDefined">
						<Parameter>arrCurrentProfiles</Parameter>
						<Parameter>5003</Parameter>
						<Parameter>2011</Parameter>
						<OutParameter>bAtLeastOneModuleMatch</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>bAtLeastOneModuleMatch</Value1>
							<Value2>false</Value2>
							<GotoStep>END</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="GetObjectIndexInclOffset">
					<SetVariable Target="u16ObjectIndexInclOffset">#xF3A4</SetVariable>
					<WriteLine Id="5" Param0="u16ObjectIndexInclOffset" Level="Verbose">ObjectIndex '0x{0:X}' (module independent)</WriteLine>
				</TestStep>
				<TestStep Name="LoadDeviceObjectDictionary">
					<Description Id="6" Level="Verbose">Load 'online' object dictionary for testing.</Description>
					<GetObjectDictionary Target="odDeviceObjectdictionary">
						<DictionaryType>Online</DictionaryType>
					</GetObjectDictionary>
					<RaiseErrorOnFailure Id="7">VerifyObject : failed to load online object dictionary.</RaiseErrorOnFailure>
				</TestStep>
				<TestStep Name="SetObjectRequiredLevel">
					<SetVariable Target="bObjectOrEntryRequiredLevel">1</SetVariable>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<CallTestFunction Name="IsEntryDefined">
								<Parameter>#xF384</Parameter>
								<Parameter>0</Parameter>
								<Parameter>online</Parameter>
								<OutParameter>bConditionTrue</OutParameter>
							</CallTestFunction>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bConditionTrue</Value1>
							<Value2>true</Value2>
							<SetVariable Target="bObjectOrEntryRequiredLevel">3</SetVariable>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>3</Value2>
							<WriteLine Id="8" Param0="u16ObjectIndexInclOffset" Param1="#xF384" Level="Verbose">0x{0:X4} 'Manufacturer Error Mask' shall be available (the entry 0x{1:X4}.0 is available (online)</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>1</Value2>
							<WriteLine Id="9" Param0="u16ObjectIndexInclOffset" Param1="#xF384" Level="Verbose">0x{0:X4} 'Manufacturer Error Mask' may be available (the entry 0x{1:X4}.0 is not available (online)</WriteLine>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CheckIfObjectExists">
					<GetObjectDescription SourceDictionary="odDeviceObjectdictionary" Index="u16ObjectIndexInclOffset" SubIndex="-1"></GetObjectDescription>
					<GotoOnSuccess>CallCheckObjectDescription</GotoOnSuccess>
				</TestStep>
				<TestStep Name="HandleNotExistingObject">
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>3</Value2>
							<SetVariable Target="strResult" Param0="u16ObjectIndexInclOffset">The object 0x{0:X4} 'Manufacturer Error Mask' does not exists.</SetVariable>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>3</Value2>
							<WriteLine Id="10" Param0="u16ObjectIndexInclOffset" Level="Error">The object 0x{0:X4} 'Manufacturer Error Mask' does not exists.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>2</Value2>
							<WriteLine Id="11" Param0="u16ObjectIndexInclOffset" Level="Warning">The object 0x{0:X4} 'Manufacturer Error Mask' does not exists.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>1</Value2>
							<WriteLine Id="12" Param0="u16ObjectIndexInclOffset" Level="Output">The object 0x{0:X4} 'Manufacturer Error Mask' does not exists.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>END</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CallCheckObjectDescription">
					<Description Id="13" Param0="u16ObjectIndexInclOffset" Level="Output">Verify the object description 0x{0:X4} 'Manufacturer Error Mask'.</Description>
					<CallTestFunction Name="CheckObjectDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"online"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>"Manufacturer Error Mask"</Parameter>
						<Parameter>null</Parameter>
						<Parameter>8</Parameter>
						<Parameter>-1</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<GotoStep>END</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="InitEntryBittOffset">
					<SetVariable Target="i32CurrentBitOffset">0</SetVariable>
				</TestStep>
				<TestStep Name="StartSi0">
					<Description Id="14" Level="Output">Start validate SubIndex0</Description>
					<WriteLine Id="15" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : Subindex '0x{0:X}.0'</WriteLine>
				</TestStep>
				<TestStep Name="CallSi0CheckEntryDescription">
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"online"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>0</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>null</Parameter>
						<Parameter>5</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>null</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>null</Parameter>
						<Parameter>null</Parameter>
						<Parameter>null</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>8</Parameter>
						<Parameter>i32CurrentBitOffset</Parameter>
						<Parameter>true</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="EndSi0">
					<SetVariable Target="i32CurrentBitOffset">16</SetVariable>
				</TestStep>
				<TestStep Name="InitProfileLoopCounter">
					<SetVariable Target="u32ProfileCounter">0</SetVariable>
				</TestStep>
				<TestStep Name="GetProfileArrayLength">
					<SizeOf UInt32Var="u32CurrentProfilesLength">arrCurrentProfiles</SizeOf>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="16" Param0="u32CurrentProfilesLength" Level="Verbose">'{0}' Profile(s) defined online.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>u32CurrentProfilesLength</Value1>
							<Value2>0</Value2>
							<SkipCase Id="17">Skip case | no profile defined.</SkipCase>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="ProfileLoopStart">
					<GetArrayItem SourceArray="arrCurrentProfiles" Target="strTmpString" Index="u32ProfileCounter"></GetArrayItem>
				</TestStep>
				<TestStep Name="CheckProfileInformationString">
					<Compare>
						<Equal>
							<Value1>strTmpString</Value1>
							<Value2>null</Value2>
							<RaiseError Id="18" Param0="u32ProfileCounter">Profile Info element [{0}] is null.</RaiseError>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>strTmpString</Value1>
							<Value2>EmptyString</Value2>
							<RaiseError Id="19" Param0="u32ProfileCounter">Profile Info element [{0}] is an empty string.</RaiseError>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="GetDeviceProfile">
					<CallTestFunction Name="GetDeviceProfile">
						<Parameter>strTmpString</Parameter>
						<OutParameter>uint16CurDeviceProfile</OutParameter>
					</CallTestFunction>
				</TestStep>
				<TestStep Name="GetModuleProfile">
					<CallTestFunction Name="GetModuleProfile">
						<Parameter>strTmpString</Parameter>
						<OutParameter>uint16CurModuleProfile</OutParameter>
					</CallTestFunction>
				</TestStep>
				<TestStep Name="GetSubModuleProfile">
					<CallTestFunction Name="GetSubModuleProfile">
						<Parameter>strTmpString</Parameter>
						<OutParameter>uint16CurSubModuleProfile</OutParameter>
					</CallTestFunction>
				</TestStep>
				<TestStep Name="DumpProfileInfo">
					<Description Id="20" Param0="uint16CurDeviceProfile" Param1="uint16CurModuleProfile" Param2="uint16CurSubModuleProfile" Param3="u32ProfileCounter" Level="Output">Module[{3}] : DeviceProfile '{0}' ; ModuleProfile '{1}' ; SubModuleProfile '{2}'</Description>
					<Compare>
						<Equal>
							<Value1>bIgnoreProfileID</Value1>
							<Value2>true</Value2>
							<GotoStep>IndicateThatAtleastOneModuleMatch</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CompareDeviceProfile">
					<Compare>
						<NotEqual>
							<Value1>uint16CurDeviceProfile</Value1>
							<Value2>5003</Value2>
							<WriteLine Id="21" Param0="uint16CurDeviceProfile" Level="Output">Skip Profile  (Test Device Profile '5003' != Cur Device Profile '{0}')</WriteLine>
						</NotEqual>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>uint16CurDeviceProfile</Value1>
							<Value2>5003</Value2>
							<GotoStep>ProfileLoopEnd</GotoStep>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep Name="CompareModuleProfile">
					<Compare>
						<NotEqual>
							<Value1>uint16CurModuleProfile</Value1>
							<Value2>2011</Value2>
							<WriteLine Id="22" Param0="uint16CurModuleProfile" Level="Output">Skip Profile  (Test Module Profile '2011' != Cur Module Profile '{0}')</WriteLine>
						</NotEqual>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>uint16CurModuleProfile</Value1>
							<Value2>2011</Value2>
							<GotoStep>ProfileLoopEnd</GotoStep>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep Name="CompareSubModuleProfile">
					<Compare>
						<NotEqual>
							<Value1>uint16CurSubModuleProfile</Value1>
							<Value2>0</Value2>
							<WriteLine Id="23" Param0="uint16CurSubModuleProfile" Level="Output">Skip Profile  (Test SubModule Profile '0' != Cur SubModule Profile '{0}')</WriteLine>
						</NotEqual>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>uint16CurSubModuleProfile</Value1>
							<Value2>0</Value2>
							<GotoStep>ProfileLoopEnd</GotoStep>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep Name="IndicateThatAtleastOneModuleMatch">
					<SetVariable Target="bAtLeastOneModuleMatch">true</SetVariable>
				</TestStep>
				<TestStep Name="StartSi1">
					<Description Id="24" Param0="1 + (u32ProfileCounter * 1)" Level="Output">Start validate SubIndex{0}</Description>
					<SetVariable Target="byteSubIndexInclOffset">1 + (u32ProfileCounter * 1)</SetVariable>
					<WriteLine Id="25" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Param2="byteSubIndexInclOffset" Level="Verbose">Module[{1}] : Subindex '0x{0:X}.{2}'</WriteLine>
				</TestStep>
				<TestStep Name="SetSi1RequiredLevel">
					<SetVariable Target="bObjectOrEntryRequiredLevel">1</SetVariable>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<CallTestFunction Name="IsEntryDefined">
								<Parameter>#xF384</Parameter>
								<Parameter>0</Parameter>
								<Parameter>online</Parameter>
								<OutParameter>bConditionTrue</OutParameter>
							</CallTestFunction>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bConditionTrue</Value1>
							<Value2>true</Value2>
							<SetVariable Target="bObjectOrEntryRequiredLevel">3</SetVariable>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>3</Value2>
							<WriteLine Id="26" Param0="u16ObjectIndexInclOffset" Param1="byteSubIndexInclOffset" Param2="#xF384" Level="Verbose">0x{0:X4}.{1} shall be available (the entry 0x{2:X4}.0 is available (online)</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>1</Value2>
							<WriteLine Id="27" Param0="u16ObjectIndexInclOffset" Param1="byteSubIndexInclOffset" Param2="#xF384" Level="Verbose">0x{0:X4}.{1} may be available (the entry 0x{2:X4}.0 is not available (online)</WriteLine>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CheckIfSi1Exists">
					<GetObjectDescription SourceDictionary="odDeviceObjectdictionary" Index="u16ObjectIndexInclOffset" SubIndex="byteSubIndexInclOffset">
						<Type>u16DataType</Type>
					</GetObjectDescription>
					<GotoOnFailure>HandleNotExistingSi1</GotoOnFailure>
				</TestStep>
				<TestStep>
					<Compare>
						<NotEqual>
							<Value1>u16DataType</Value1>
							<Value2>0</Value2>
							<GotoStep>CallSi1CheckEntryDescription</GotoStep>
						</NotEqual>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>1</Value2>
							<WriteLine Id="28" Param0="u16ObjectIndexInclOffset" Level="Verbose">The entry 0x{0:X4}.1 is defined as a padding entry.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>3</Value2>
							<WriteLine Id="29" Param0="u16ObjectIndexInclOffset" Level="Error">The entry 0x{0:X4}.1 shall not defined as a padding entry.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>3</Value2>
							<SetVariable Target="strResult" Param0="u16ObjectIndexInclOffset">The entry 0x{0:X4}.1 shall not defined as a padding entry.</SetVariable>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>EndSi1</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="HandleNotExistingSi1">
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>3</Value2>
							<SetVariable Target="strResult" Param0="u16ObjectIndexInclOffset" Param1="byteSubIndexInclOffset">The entry 0x{0:X4}.{1} does not exists.</SetVariable>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>3</Value2>
							<WriteLine Id="30" Param0="u16ObjectIndexInclOffset" Param1="byteSubIndexInclOffset" Level="Error">The entry 0x{0:X4}.{1} does not exists.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>3</Value2>
							<GotoStep>EndSi1</GotoStep>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="31" Param0="u16ObjectIndexInclOffset" Param1="byteSubIndexInclOffset" Level="Output">The entry 0x{0:X4}.{1} does not exists.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>EndSi1</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CallSi1CheckEntryDescription">
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"online"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>byteSubIndexInclOffset</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>null</Parameter>
						<Parameter>7</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>null</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>32</Parameter>
						<Parameter>i32CurrentBitOffset</Parameter>
						<Parameter>true</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="EndSi1">
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>3</Value2>
							<SetVariable Target="i32CurrentBitOffset">i32CurrentBitOffset + 32</SetVariable>
						</Equal>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>3</Value2>
							<SetVariable Target="i32CurrentBitOffset">-1</SetVariable>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep Name="ProfileLoopEnd">
					<Compare>
						<Equal>
							<Value1>bAtLeastOneModuleMatch</Value1>
							<Value2>false</Value2>
							<GotoStep>HandleAbortTestCaseOnFirstError</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="HandleAbortTestCaseOnFirstError">
					<Compare>
						<Equal>
							<Value1>bAbortTestCaseOnFirstError</Value1>
							<Value2>false</Value2>
							<GotoStep>ProfileLoopIncrement</GotoStep>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>strResult</Value1>
							<Value2>EmptyString</Value2>
							<GotoStep>ProfileLoopIncrement</GotoStep>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="32" Level="Output">Object verification for all following modules abort because an error was already detected for the current module.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>END</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="ProfileLoopIncrement">
					<SetVariable Target="u32ProfileCounter">u32ProfileCounter + 1</SetVariable>
					<Compare>
						<Greater>
							<Value1>u32CurrentProfilesLength</Value1>
							<Value2>u32ProfileCounter</Value2>
							<GotoStep>ProfileLoopStart</GotoStep>
						</Greater>
					</Compare>
				</TestStep>
				<TestStep Name="END">
					<Compare>
						<NotEqual>
							<Value1>bAtLeastOneModuleMatch</Value1>
							<Value2>true</Value2>
							<SkipCase Id="33">SKIP TEST(no module/channel supports the current profile)</SkipCase>
						</NotEqual>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bDEBUG</Value1>
							<Value2>true</Value2>
							<WriteLine Id="34" Param0="strResult" Level="Verbose">DEBUG | Result : '{0}'.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>strResult</Value1>
							<Value2>EmptyString</Value2>
							<ReturnSuccess Id="35">Test succeed</ReturnSuccess>
						</Equal>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>strResult</Value1>
							<Value2>EmptyString</Value2>
							<RaiseError Id="36"></RaiseError>
						</NotEqual>
					</Compare>
				</TestStep>
			</TestCase>
			<TestCase Name="offline | 0xF3A5 (Global Device Warning Mask)" CaseId="45">
				<Description>
					<PreCondition>- The device profile is 5003
- The module profile is 2011
- The submodule profile is 0</PreCondition>
					<Action>- Iterate over all offline defined modules/channels and if the PreCondition matches the following operations are done:
- Get the offline description of object 0xF3A5(+module specific offset) 'Global Device Warning Mask' and all entries
 Check:
    (Name)
    BitSize
    DataType
    Rx / Tx mappable
    Default Data
    MinData
    Flags       </Action>
					<PostCondition>Error if
- mandatory object / entry is not defined
- an optional object exists and the entries are invalid
- Object / entry description does not match with the specification</PostCondition>
					<ProposalForSolution>- Define the missing objects
- correct object / entry description</ProposalForSolution>
					<References>
						<Reference Specification="ETG.5003.2011"></Reference>
					</References>
					<Mandatory>true</Mandatory>
				</Description>
				<TestStep Name="InitResult">
					<SetVariable Target="strResult">EmptyString</SetVariable>
				</TestStep>
				<TestStep Name="CheckIfOdAvailable">
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Mailbox</Value1>
							<Value2>false</Value2>
							<SkipCase Id="1">DuT does not support mailbox.</SkipCase>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Mailbox.CoE</Value1>
							<Value2>false</Value2>
							<SkipCase Id="2">DuT does not support CoE.</SkipCase>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep>
					<GetObjectDictionary Target="odDeviceObjectdictionary">
						<DictionaryType>Offline</DictionaryType>
					</GetObjectDictionary>
					<SkipOnFailure Id="3">No offline object dictionary defined.</SkipOnFailure>
				</TestStep>
				<TestStep>
					<GetObjectList Count="u32Tmp" Target="odDeviceObjectdictionaryList" SourceDict="odDeviceObjectdictionary"></GetObjectList>
					<Compare>
						<Equal>
							<Value1>u32Tmp</Value1>
							<Value2>0</Value2>
							<SkipCase Id="4">No offline object dictionary defined.</SkipCase>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="InitAtLeastOneProfileMatch">
					<SetVariable Target="bAtLeastOneModuleMatch">false</SetVariable>
				</TestStep>
				<TestStep Name="GetCurrentProfileList">
					<SizeOf UInt32Var="u32Tmp">arrOfflineProfiles</SizeOf>
					<Compare>
						<Equal>
							<Value1>u32Tmp</Value1>
							<Value2>0</Value2>
							<CallTestFunction Name="GetCurrentProfileList">
								<Parameter>"offline"</Parameter>
								<Parameter>"SafeOP"</Parameter>
								<OutParameter>arrOfflineProfiles</OutParameter>
							</CallTestFunction>
						</Equal>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>u32Tmp</Value1>
							<Value2>0</Value2>
							<WriteLine Id="5" Param0="arrOfflineProfiles" Level="Verbose">Use previously created profile list ({0})</WriteLine>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep>
					<SizeOf UInt32Var="u32Tmp">arrOfflineProfiles</SizeOf>
				</TestStep>
				<TestStep>
					<InitArray TargetArray="arrCurrentProfiles" Length="u32Tmp"></InitArray>
				</TestStep>
				<TestStep>
					<CopyArray>
						<SourceArray>arrOfflineProfiles</SourceArray>
						<DestinationArray>arrCurrentProfiles</DestinationArray>
						<Length>u32Tmp</Length>
					</CopyArray>
				</TestStep>
				<TestStep Name="IsProfileSupported">
					<CallTestFunction Name="DeviceAndModuleProfileDefined">
						<Parameter>arrCurrentProfiles</Parameter>
						<Parameter>5003</Parameter>
						<Parameter>2011</Parameter>
						<OutParameter>bAtLeastOneModuleMatch</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>bAtLeastOneModuleMatch</Value1>
							<Value2>false</Value2>
							<GotoStep>END</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="GetObjectIndexInclOffset">
					<SetVariable Target="u16ObjectIndexInclOffset">#xF3A5</SetVariable>
					<WriteLine Id="6" Param0="u16ObjectIndexInclOffset" Level="Verbose">ObjectIndex '0x{0:X}' (module independent)</WriteLine>
				</TestStep>
				<TestStep Name="LoadDeviceObjectDictionary">
					<Description Id="7" Level="Verbose">Load 'offline' object dictionary for testing.</Description>
					<GetObjectDictionary Target="odDeviceObjectdictionary">
						<DictionaryType>Offline</DictionaryType>
					</GetObjectDictionary>
					<RaiseErrorOnFailure Id="8">VerifyObject : failed to load offline object dictionary.</RaiseErrorOnFailure>
				</TestStep>
				<TestStep Name="SetObjectRequiredLevel">
					<SetVariable Target="bObjectOrEntryRequiredLevel">1</SetVariable>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<CallTestFunction Name="IsEntryDefined">
								<Parameter>#xF385</Parameter>
								<Parameter>0</Parameter>
								<Parameter>offline</Parameter>
								<OutParameter>bConditionTrue</OutParameter>
							</CallTestFunction>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bConditionTrue</Value1>
							<Value2>true</Value2>
							<SetVariable Target="bObjectOrEntryRequiredLevel">3</SetVariable>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>3</Value2>
							<WriteLine Id="9" Param0="u16ObjectIndexInclOffset" Param1="#xF385" Level="Verbose">0x{0:X4} 'Global Device Warning Mask' shall be available (the entry 0x{1:X4}.0 is available (offline)</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>1</Value2>
							<WriteLine Id="10" Param0="u16ObjectIndexInclOffset" Param1="#xF385" Level="Verbose">0x{0:X4} 'Global Device Warning Mask' may be available (the entry 0x{1:X4}.0 is not available (offline)</WriteLine>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CheckIfObjectExists">
					<GetObjectDescription SourceDictionary="odDeviceObjectdictionary" Index="u16ObjectIndexInclOffset" SubIndex="-1"></GetObjectDescription>
					<GotoOnSuccess>CallCheckObjectDescription</GotoOnSuccess>
				</TestStep>
				<TestStep Name="HandleNotExistingObject">
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>3</Value2>
							<SetVariable Target="strResult" Param0="u16ObjectIndexInclOffset">The object 0x{0:X4} 'Global Device Warning Mask' does not exists.</SetVariable>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>3</Value2>
							<WriteLine Id="11" Param0="u16ObjectIndexInclOffset" Level="Error">The object 0x{0:X4} 'Global Device Warning Mask' does not exists.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>2</Value2>
							<WriteLine Id="12" Param0="u16ObjectIndexInclOffset" Level="Warning">The object 0x{0:X4} 'Global Device Warning Mask' does not exists.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>1</Value2>
							<WriteLine Id="13" Param0="u16ObjectIndexInclOffset" Level="Output">The object 0x{0:X4} 'Global Device Warning Mask' does not exists.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>END</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CallCheckObjectDescription">
					<Description Id="14" Param0="u16ObjectIndexInclOffset" Level="Output">Verify the object description 0x{0:X4} 'Global Device Warning Mask'.</Description>
					<CallTestFunction Name="CheckObjectDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"offline"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>"Global Device Warning Mask"</Parameter>
						<Parameter>null</Parameter>
						<Parameter>9</Parameter>
						<Parameter>-1</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<GotoStep>END</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="InitEntryBittOffset">
					<SetVariable Target="i32CurrentBitOffset">0</SetVariable>
				</TestStep>
				<TestStep Name="StartSi0">
					<Description Id="15" Level="Output">Start validate SubIndex0</Description>
					<WriteLine Id="16" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : Subindex '0x{0:X}.0'</WriteLine>
				</TestStep>
				<TestStep Name="CallSi0CheckEntryDescription">
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"offline"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>0</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>null</Parameter>
						<Parameter>5</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>null</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>null</Parameter>
						<Parameter>null</Parameter>
						<Parameter>null</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>8</Parameter>
						<Parameter>i32CurrentBitOffset</Parameter>
						<Parameter>true</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="EndSi0">
					<SetVariable Target="i32CurrentBitOffset">16</SetVariable>
				</TestStep>
				<TestStep Name="StartSi1">
					<Description Id="17" Level="Output">Start validate SubIndex1</Description>
					<WriteLine Id="18" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : Subindex '0x{0:X}.1'</WriteLine>
				</TestStep>
				<TestStep Name="SetSi1RequiredLevel">
					<SetVariable Target="bObjectOrEntryRequiredLevel">1</SetVariable>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<CallTestFunction Name="IsEntryDefined">
								<Parameter>#xF385</Parameter>
								<Parameter>0</Parameter>
								<Parameter>offline</Parameter>
								<OutParameter>bConditionTrue</OutParameter>
							</CallTestFunction>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bConditionTrue</Value1>
							<Value2>true</Value2>
							<SetVariable Target="bObjectOrEntryRequiredLevel">3</SetVariable>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>3</Value2>
							<WriteLine Id="19" Param0="u16ObjectIndexInclOffset" Param1="#xF385" Level="Verbose">0x{0:X4}.1 'Global Device Warning Mask' shall be available (the entry 0x{1:X4}.0 is available (offline)</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>1</Value2>
							<WriteLine Id="20" Param0="u16ObjectIndexInclOffset" Param1="#xF385" Level="Verbose">0x{0:X4}.1 'Global Device Warning Mask' may be available (the entry 0x{1:X4}.0 is not available (offline)</WriteLine>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CheckIfSi1Exists">
					<GetObjectDescription SourceDictionary="odDeviceObjectdictionary" Index="u16ObjectIndexInclOffset" SubIndex="1">
						<Type>u16DataType</Type>
					</GetObjectDescription>
					<GotoOnFailure>HandleNotExistingSi1</GotoOnFailure>
				</TestStep>
				<TestStep>
					<Compare>
						<NotEqual>
							<Value1>u16DataType</Value1>
							<Value2>0</Value2>
							<GotoStep>CallSi1CheckEntryDescription</GotoStep>
						</NotEqual>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>1</Value2>
							<WriteLine Id="21" Param0="u16ObjectIndexInclOffset" Level="Verbose">The entry 0x{0:X4}.1 is defined as a padding entry.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>3</Value2>
							<WriteLine Id="22" Param0="u16ObjectIndexInclOffset" Level="Error">The entry 0x{0:X4}.1 shall not defined as a padding entry.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>3</Value2>
							<SetVariable Target="strResult" Param0="u16ObjectIndexInclOffset">The entry 0x{0:X4}.1 shall not defined as a padding entry.</SetVariable>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>EndSi1</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="HandleNotExistingSi1">
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>3</Value2>
							<SetVariable Target="strResult" Param0="u16ObjectIndexInclOffset">The entry 0x{0:X4}.1 does not exists.</SetVariable>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>3</Value2>
							<WriteLine Id="23" Param0="u16ObjectIndexInclOffset" Level="Error">The entry 0x{0:X4}.1 does not exists.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>3</Value2>
							<GotoStep>EndSi1</GotoStep>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="24" Param0="u16ObjectIndexInclOffset" Level="Output">The entry 0x{0:X4}.1 does not exists.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>EndSi1</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CallSi1CheckEntryDescription">
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"offline"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>1</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>"Global Device Warning Mask"</Parameter>
						<Parameter>7</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>null</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>32</Parameter>
						<Parameter>i32CurrentBitOffset</Parameter>
						<Parameter>true</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="EndSi1">
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>3</Value2>
							<SetVariable Target="i32CurrentBitOffset">i32CurrentBitOffset + 32</SetVariable>
						</Equal>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>3</Value2>
							<SetVariable Target="i32CurrentBitOffset">-1</SetVariable>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep Name="CheckReservedEntryRange_2_to_255">
					<Description Id="25" Level="Output">Start check reserved entry range 2 to 255</Description>
					<CallTestFunction Name="CheckReservedEntryRange">
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>2</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>odDeviceObjectdictionary</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="END">
					<Compare>
						<NotEqual>
							<Value1>bAtLeastOneModuleMatch</Value1>
							<Value2>true</Value2>
							<SkipCase Id="26">SKIP TEST(no module/channel supports the current profile)</SkipCase>
						</NotEqual>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bDEBUG</Value1>
							<Value2>true</Value2>
							<WriteLine Id="27" Param0="strResult" Level="Verbose">DEBUG | Result : '{0}'.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>strResult</Value1>
							<Value2>EmptyString</Value2>
							<ReturnSuccess Id="28">Test succeed</ReturnSuccess>
						</Equal>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>strResult</Value1>
							<Value2>EmptyString</Value2>
							<RaiseError Id="29"></RaiseError>
						</NotEqual>
					</Compare>
				</TestStep>
			</TestCase>
			<TestCase Name="online | 0xF3A5 (Global Device Warning Mask)" CaseId="46">
				<Description>
					<PreCondition>- The device profile is 5003
- The module profile is 2011
- The submodule profile is 0</PreCondition>
					<Action>- Iterate over all online defined modules/channels and if the PreCondition matches the following operations are done:
- Get the online description of object 0xF3A5(+module specific offset) 'Global Device Warning Mask' and all entries
 Check:
    (Name)
    BitSize
    DataType
    Rx / Tx mappable
    Default Data
    MinData
    Flags       </Action>
					<PostCondition>Error if
- mandatory object / entry is not defined
- an optional object exists and the entries are invalid
- Object / entry description does not match with the specification</PostCondition>
					<ProposalForSolution>- Define the missing objects
- correct object / entry description</ProposalForSolution>
					<References>
						<Reference Specification="ETG.5003.2011"></Reference>
					</References>
					<Mandatory>true</Mandatory>
				</Description>
				<TestStep Name="InitResult">
					<SetVariable Target="strResult">EmptyString</SetVariable>
				</TestStep>
				<TestStep Name="CheckIfOdAvailable">
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Mailbox</Value1>
							<Value2>false</Value2>
							<SkipCase Id="1">DuT does not support mailbox.</SkipCase>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Mailbox.CoE</Value1>
							<Value2>false</Value2>
							<SkipCase Id="2">DuT does not support CoE.</SkipCase>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Mailbox.CoE.SdoInfo</Value1>
							<Value2>false</Value2>
							<SkipCase Id="3">DuT does not support SDO Info.</SkipCase>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="InitAtLeastOneProfileMatch">
					<SetVariable Target="bAtLeastOneModuleMatch">false</SetVariable>
				</TestStep>
				<TestStep Name="GetCurrentProfileList">
					<SizeOf UInt32Var="u32Tmp">arrOnlineProfiles</SizeOf>
					<Compare>
						<Equal>
							<Value1>u32Tmp</Value1>
							<Value2>0</Value2>
							<CallTestFunction Name="GetCurrentProfileList">
								<Parameter>"online"</Parameter>
								<Parameter>"SafeOP"</Parameter>
								<OutParameter>arrOnlineProfiles</OutParameter>
							</CallTestFunction>
						</Equal>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>u32Tmp</Value1>
							<Value2>0</Value2>
							<WriteLine Id="4" Param0="arrOnlineProfiles" Level="Verbose">Use previously created profile list ({0})</WriteLine>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep>
					<SizeOf UInt32Var="u32Tmp">arrOnlineProfiles</SizeOf>
				</TestStep>
				<TestStep>
					<InitArray TargetArray="arrCurrentProfiles" Length="u32Tmp"></InitArray>
				</TestStep>
				<TestStep>
					<CopyArray>
						<SourceArray>arrOnlineProfiles</SourceArray>
						<DestinationArray>arrCurrentProfiles</DestinationArray>
						<Length>u32Tmp</Length>
					</CopyArray>
				</TestStep>
				<TestStep Name="IsProfileSupported">
					<CallTestFunction Name="DeviceAndModuleProfileDefined">
						<Parameter>arrCurrentProfiles</Parameter>
						<Parameter>5003</Parameter>
						<Parameter>2011</Parameter>
						<OutParameter>bAtLeastOneModuleMatch</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>bAtLeastOneModuleMatch</Value1>
							<Value2>false</Value2>
							<GotoStep>END</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="GetObjectIndexInclOffset">
					<SetVariable Target="u16ObjectIndexInclOffset">#xF3A5</SetVariable>
					<WriteLine Id="5" Param0="u16ObjectIndexInclOffset" Level="Verbose">ObjectIndex '0x{0:X}' (module independent)</WriteLine>
				</TestStep>
				<TestStep Name="LoadDeviceObjectDictionary">
					<Description Id="6" Level="Verbose">Load 'online' object dictionary for testing.</Description>
					<GetObjectDictionary Target="odDeviceObjectdictionary">
						<DictionaryType>Online</DictionaryType>
					</GetObjectDictionary>
					<RaiseErrorOnFailure Id="7">VerifyObject : failed to load online object dictionary.</RaiseErrorOnFailure>
				</TestStep>
				<TestStep Name="SetObjectRequiredLevel">
					<SetVariable Target="bObjectOrEntryRequiredLevel">1</SetVariable>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<CallTestFunction Name="IsEntryDefined">
								<Parameter>#xF385</Parameter>
								<Parameter>0</Parameter>
								<Parameter>online</Parameter>
								<OutParameter>bConditionTrue</OutParameter>
							</CallTestFunction>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bConditionTrue</Value1>
							<Value2>true</Value2>
							<SetVariable Target="bObjectOrEntryRequiredLevel">3</SetVariable>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>3</Value2>
							<WriteLine Id="8" Param0="u16ObjectIndexInclOffset" Param1="#xF385" Level="Verbose">0x{0:X4} 'Global Device Warning Mask' shall be available (the entry 0x{1:X4}.0 is available (online)</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>1</Value2>
							<WriteLine Id="9" Param0="u16ObjectIndexInclOffset" Param1="#xF385" Level="Verbose">0x{0:X4} 'Global Device Warning Mask' may be available (the entry 0x{1:X4}.0 is not available (online)</WriteLine>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CheckIfObjectExists">
					<GetObjectDescription SourceDictionary="odDeviceObjectdictionary" Index="u16ObjectIndexInclOffset" SubIndex="-1"></GetObjectDescription>
					<GotoOnSuccess>CallCheckObjectDescription</GotoOnSuccess>
				</TestStep>
				<TestStep Name="HandleNotExistingObject">
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>3</Value2>
							<SetVariable Target="strResult" Param0="u16ObjectIndexInclOffset">The object 0x{0:X4} 'Global Device Warning Mask' does not exists.</SetVariable>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>3</Value2>
							<WriteLine Id="10" Param0="u16ObjectIndexInclOffset" Level="Error">The object 0x{0:X4} 'Global Device Warning Mask' does not exists.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>2</Value2>
							<WriteLine Id="11" Param0="u16ObjectIndexInclOffset" Level="Warning">The object 0x{0:X4} 'Global Device Warning Mask' does not exists.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>1</Value2>
							<WriteLine Id="12" Param0="u16ObjectIndexInclOffset" Level="Output">The object 0x{0:X4} 'Global Device Warning Mask' does not exists.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>END</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CallCheckObjectDescription">
					<Description Id="13" Param0="u16ObjectIndexInclOffset" Level="Output">Verify the object description 0x{0:X4} 'Global Device Warning Mask'.</Description>
					<CallTestFunction Name="CheckObjectDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"online"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>"Global Device Warning Mask"</Parameter>
						<Parameter>null</Parameter>
						<Parameter>9</Parameter>
						<Parameter>-1</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<GotoStep>END</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="InitEntryBittOffset">
					<SetVariable Target="i32CurrentBitOffset">0</SetVariable>
				</TestStep>
				<TestStep Name="StartSi0">
					<Description Id="14" Level="Output">Start validate SubIndex0</Description>
					<WriteLine Id="15" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : Subindex '0x{0:X}.0'</WriteLine>
				</TestStep>
				<TestStep Name="CallSi0CheckEntryDescription">
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"online"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>0</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>null</Parameter>
						<Parameter>5</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>null</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>null</Parameter>
						<Parameter>null</Parameter>
						<Parameter>null</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>8</Parameter>
						<Parameter>i32CurrentBitOffset</Parameter>
						<Parameter>true</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="EndSi0">
					<SetVariable Target="i32CurrentBitOffset">16</SetVariable>
				</TestStep>
				<TestStep Name="StartSi1">
					<Description Id="16" Level="Output">Start validate SubIndex1</Description>
					<WriteLine Id="17" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : Subindex '0x{0:X}.1'</WriteLine>
				</TestStep>
				<TestStep Name="SetSi1RequiredLevel">
					<SetVariable Target="bObjectOrEntryRequiredLevel">1</SetVariable>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<CallTestFunction Name="IsEntryDefined">
								<Parameter>#xF385</Parameter>
								<Parameter>0</Parameter>
								<Parameter>online</Parameter>
								<OutParameter>bConditionTrue</OutParameter>
							</CallTestFunction>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bConditionTrue</Value1>
							<Value2>true</Value2>
							<SetVariable Target="bObjectOrEntryRequiredLevel">3</SetVariable>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>3</Value2>
							<WriteLine Id="18" Param0="u16ObjectIndexInclOffset" Param1="#xF385" Level="Verbose">0x{0:X4}.1 'Global Device Warning Mask' shall be available (the entry 0x{1:X4}.0 is available (online)</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>1</Value2>
							<WriteLine Id="19" Param0="u16ObjectIndexInclOffset" Param1="#xF385" Level="Verbose">0x{0:X4}.1 'Global Device Warning Mask' may be available (the entry 0x{1:X4}.0 is not available (online)</WriteLine>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CheckIfSi1Exists">
					<GetObjectDescription SourceDictionary="odDeviceObjectdictionary" Index="u16ObjectIndexInclOffset" SubIndex="1">
						<Type>u16DataType</Type>
					</GetObjectDescription>
					<GotoOnFailure>HandleNotExistingSi1</GotoOnFailure>
				</TestStep>
				<TestStep>
					<Compare>
						<NotEqual>
							<Value1>u16DataType</Value1>
							<Value2>0</Value2>
							<GotoStep>CallSi1CheckEntryDescription</GotoStep>
						</NotEqual>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>1</Value2>
							<WriteLine Id="20" Param0="u16ObjectIndexInclOffset" Level="Verbose">The entry 0x{0:X4}.1 is defined as a padding entry.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>3</Value2>
							<WriteLine Id="21" Param0="u16ObjectIndexInclOffset" Level="Error">The entry 0x{0:X4}.1 shall not defined as a padding entry.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>3</Value2>
							<SetVariable Target="strResult" Param0="u16ObjectIndexInclOffset">The entry 0x{0:X4}.1 shall not defined as a padding entry.</SetVariable>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>EndSi1</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="HandleNotExistingSi1">
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>3</Value2>
							<SetVariable Target="strResult" Param0="u16ObjectIndexInclOffset">The entry 0x{0:X4}.1 does not exists.</SetVariable>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>3</Value2>
							<WriteLine Id="22" Param0="u16ObjectIndexInclOffset" Level="Error">The entry 0x{0:X4}.1 does not exists.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>3</Value2>
							<GotoStep>EndSi1</GotoStep>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="23" Param0="u16ObjectIndexInclOffset" Level="Output">The entry 0x{0:X4}.1 does not exists.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>EndSi1</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CallSi1CheckEntryDescription">
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"online"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>1</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>"Global Device Warning Mask"</Parameter>
						<Parameter>7</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>null</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>32</Parameter>
						<Parameter>i32CurrentBitOffset</Parameter>
						<Parameter>true</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="EndSi1">
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>3</Value2>
							<SetVariable Target="i32CurrentBitOffset">i32CurrentBitOffset + 32</SetVariable>
						</Equal>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>3</Value2>
							<SetVariable Target="i32CurrentBitOffset">-1</SetVariable>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep Name="CheckReservedEntryRange_2_to_255">
					<Description Id="24" Level="Output">Start check reserved entry range 2 to 255</Description>
					<CallTestFunction Name="CheckReservedEntryRange">
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>2</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>odDeviceObjectdictionary</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="END">
					<Compare>
						<NotEqual>
							<Value1>bAtLeastOneModuleMatch</Value1>
							<Value2>true</Value2>
							<SkipCase Id="25">SKIP TEST(no module/channel supports the current profile)</SkipCase>
						</NotEqual>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bDEBUG</Value1>
							<Value2>true</Value2>
							<WriteLine Id="26" Param0="strResult" Level="Verbose">DEBUG | Result : '{0}'.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>strResult</Value1>
							<Value2>EmptyString</Value2>
							<ReturnSuccess Id="27">Test succeed</ReturnSuccess>
						</Equal>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>strResult</Value1>
							<Value2>EmptyString</Value2>
							<RaiseError Id="28"></RaiseError>
						</NotEqual>
					</Compare>
				</TestStep>
			</TestCase>
			<TestCase Name="offline | 0xF3A6 (Global Manufacturer Warning Mask)" CaseId="47">
				<Description>
					<PreCondition>- The device profile is 5003
- The module profile is 2011
- The submodule profile is 0</PreCondition>
					<Action>- Iterate over all offline defined modules/channels and if the PreCondition matches the following operations are done:
- Get the offline description of object 0xF3A6(+module specific offset) 'Global Manufacturer Warning Mask' and all entries
 Check:
    (Name)
    BitSize
    DataType
    Rx / Tx mappable
    Default Data
    MinData
    Flags       </Action>
					<PostCondition>Error if
- mandatory object / entry is not defined
- an optional object exists and the entries are invalid
- Object / entry description does not match with the specification</PostCondition>
					<ProposalForSolution>- Define the missing objects
- correct object / entry description</ProposalForSolution>
					<References>
						<Reference Specification="ETG.5003.2011"></Reference>
					</References>
					<Mandatory>true</Mandatory>
				</Description>
				<TestStep Name="InitResult">
					<SetVariable Target="strResult">EmptyString</SetVariable>
				</TestStep>
				<TestStep Name="CheckIfOdAvailable">
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Mailbox</Value1>
							<Value2>false</Value2>
							<SkipCase Id="1">DuT does not support mailbox.</SkipCase>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Mailbox.CoE</Value1>
							<Value2>false</Value2>
							<SkipCase Id="2">DuT does not support CoE.</SkipCase>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep>
					<GetObjectDictionary Target="odDeviceObjectdictionary">
						<DictionaryType>Offline</DictionaryType>
					</GetObjectDictionary>
					<SkipOnFailure Id="3">No offline object dictionary defined.</SkipOnFailure>
				</TestStep>
				<TestStep>
					<GetObjectList Count="u32Tmp" Target="odDeviceObjectdictionaryList" SourceDict="odDeviceObjectdictionary"></GetObjectList>
					<Compare>
						<Equal>
							<Value1>u32Tmp</Value1>
							<Value2>0</Value2>
							<SkipCase Id="4">No offline object dictionary defined.</SkipCase>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="InitAtLeastOneProfileMatch">
					<SetVariable Target="bAtLeastOneModuleMatch">false</SetVariable>
				</TestStep>
				<TestStep Name="GetCurrentProfileList">
					<SizeOf UInt32Var="u32Tmp">arrOfflineProfiles</SizeOf>
					<Compare>
						<Equal>
							<Value1>u32Tmp</Value1>
							<Value2>0</Value2>
							<CallTestFunction Name="GetCurrentProfileList">
								<Parameter>"offline"</Parameter>
								<Parameter>"SafeOP"</Parameter>
								<OutParameter>arrOfflineProfiles</OutParameter>
							</CallTestFunction>
						</Equal>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>u32Tmp</Value1>
							<Value2>0</Value2>
							<WriteLine Id="5" Param0="arrOfflineProfiles" Level="Verbose">Use previously created profile list ({0})</WriteLine>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep>
					<SizeOf UInt32Var="u32Tmp">arrOfflineProfiles</SizeOf>
				</TestStep>
				<TestStep>
					<InitArray TargetArray="arrCurrentProfiles" Length="u32Tmp"></InitArray>
				</TestStep>
				<TestStep>
					<CopyArray>
						<SourceArray>arrOfflineProfiles</SourceArray>
						<DestinationArray>arrCurrentProfiles</DestinationArray>
						<Length>u32Tmp</Length>
					</CopyArray>
				</TestStep>
				<TestStep Name="IsProfileSupported">
					<CallTestFunction Name="DeviceAndModuleProfileDefined">
						<Parameter>arrCurrentProfiles</Parameter>
						<Parameter>5003</Parameter>
						<Parameter>2011</Parameter>
						<OutParameter>bAtLeastOneModuleMatch</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>bAtLeastOneModuleMatch</Value1>
							<Value2>false</Value2>
							<GotoStep>END</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="GetObjectIndexInclOffset">
					<SetVariable Target="u16ObjectIndexInclOffset">#xF3A6</SetVariable>
					<WriteLine Id="6" Param0="u16ObjectIndexInclOffset" Level="Verbose">ObjectIndex '0x{0:X}' (module independent)</WriteLine>
				</TestStep>
				<TestStep Name="LoadDeviceObjectDictionary">
					<Description Id="7" Level="Verbose">Load 'offline' object dictionary for testing.</Description>
					<GetObjectDictionary Target="odDeviceObjectdictionary">
						<DictionaryType>Offline</DictionaryType>
					</GetObjectDictionary>
					<RaiseErrorOnFailure Id="8">VerifyObject : failed to load offline object dictionary.</RaiseErrorOnFailure>
				</TestStep>
				<TestStep Name="SetObjectRequiredLevel">
					<SetVariable Target="bObjectOrEntryRequiredLevel">1</SetVariable>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<CallTestFunction Name="IsEntryDefined">
								<Parameter>#xF386</Parameter>
								<Parameter>0</Parameter>
								<Parameter>offline</Parameter>
								<OutParameter>bConditionTrue</OutParameter>
							</CallTestFunction>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bConditionTrue</Value1>
							<Value2>true</Value2>
							<SetVariable Target="bObjectOrEntryRequiredLevel">3</SetVariable>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>3</Value2>
							<WriteLine Id="9" Param0="u16ObjectIndexInclOffset" Param1="#xF386" Level="Verbose">0x{0:X4} 'Global Manufacturer Warning Mask' shall be available (the entry 0x{1:X4}.0 is available (offline)</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>1</Value2>
							<WriteLine Id="10" Param0="u16ObjectIndexInclOffset" Param1="#xF386" Level="Verbose">0x{0:X4} 'Global Manufacturer Warning Mask' may be available (the entry 0x{1:X4}.0 is not available (offline)</WriteLine>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CheckIfObjectExists">
					<GetObjectDescription SourceDictionary="odDeviceObjectdictionary" Index="u16ObjectIndexInclOffset" SubIndex="-1"></GetObjectDescription>
					<GotoOnSuccess>CallCheckObjectDescription</GotoOnSuccess>
				</TestStep>
				<TestStep Name="HandleNotExistingObject">
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>3</Value2>
							<SetVariable Target="strResult" Param0="u16ObjectIndexInclOffset">The object 0x{0:X4} 'Global Manufacturer Warning Mask' does not exists.</SetVariable>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>3</Value2>
							<WriteLine Id="11" Param0="u16ObjectIndexInclOffset" Level="Error">The object 0x{0:X4} 'Global Manufacturer Warning Mask' does not exists.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>2</Value2>
							<WriteLine Id="12" Param0="u16ObjectIndexInclOffset" Level="Warning">The object 0x{0:X4} 'Global Manufacturer Warning Mask' does not exists.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>1</Value2>
							<WriteLine Id="13" Param0="u16ObjectIndexInclOffset" Level="Output">The object 0x{0:X4} 'Global Manufacturer Warning Mask' does not exists.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>END</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CallCheckObjectDescription">
					<Description Id="14" Param0="u16ObjectIndexInclOffset" Level="Output">Verify the object description 0x{0:X4} 'Global Manufacturer Warning Mask'.</Description>
					<CallTestFunction Name="CheckObjectDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"offline"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>"Global Manufacturer Warning Mask"</Parameter>
						<Parameter>null</Parameter>
						<Parameter>9</Parameter>
						<Parameter>-1</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<GotoStep>END</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="InitEntryBittOffset">
					<SetVariable Target="i32CurrentBitOffset">0</SetVariable>
				</TestStep>
				<TestStep Name="StartSi0">
					<Description Id="15" Level="Output">Start validate SubIndex0</Description>
					<WriteLine Id="16" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : Subindex '0x{0:X}.0'</WriteLine>
				</TestStep>
				<TestStep Name="CallSi0CheckEntryDescription">
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"offline"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>0</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>null</Parameter>
						<Parameter>5</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>null</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>null</Parameter>
						<Parameter>null</Parameter>
						<Parameter>null</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>8</Parameter>
						<Parameter>i32CurrentBitOffset</Parameter>
						<Parameter>true</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="EndSi0">
					<SetVariable Target="i32CurrentBitOffset">16</SetVariable>
				</TestStep>
				<TestStep Name="StartSi1">
					<Description Id="17" Level="Output">Start validate SubIndex1</Description>
					<WriteLine Id="18" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : Subindex '0x{0:X}.1'</WriteLine>
				</TestStep>
				<TestStep Name="SetSi1RequiredLevel">
					<SetVariable Target="bObjectOrEntryRequiredLevel">1</SetVariable>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<CallTestFunction Name="IsEntryDefined">
								<Parameter>#xF386</Parameter>
								<Parameter>0</Parameter>
								<Parameter>offline</Parameter>
								<OutParameter>bConditionTrue</OutParameter>
							</CallTestFunction>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bConditionTrue</Value1>
							<Value2>true</Value2>
							<SetVariable Target="bObjectOrEntryRequiredLevel">3</SetVariable>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>3</Value2>
							<WriteLine Id="19" Param0="u16ObjectIndexInclOffset" Param1="#xF386" Level="Verbose">0x{0:X4}.1 'Global Manufacturer Warning Mask' shall be available (the entry 0x{1:X4}.0 is available (offline)</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>1</Value2>
							<WriteLine Id="20" Param0="u16ObjectIndexInclOffset" Param1="#xF386" Level="Verbose">0x{0:X4}.1 'Global Manufacturer Warning Mask' may be available (the entry 0x{1:X4}.0 is not available (offline)</WriteLine>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CheckIfSi1Exists">
					<GetObjectDescription SourceDictionary="odDeviceObjectdictionary" Index="u16ObjectIndexInclOffset" SubIndex="1">
						<Type>u16DataType</Type>
					</GetObjectDescription>
					<GotoOnFailure>HandleNotExistingSi1</GotoOnFailure>
				</TestStep>
				<TestStep>
					<Compare>
						<NotEqual>
							<Value1>u16DataType</Value1>
							<Value2>0</Value2>
							<GotoStep>CallSi1CheckEntryDescription</GotoStep>
						</NotEqual>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>1</Value2>
							<WriteLine Id="21" Param0="u16ObjectIndexInclOffset" Level="Verbose">The entry 0x{0:X4}.1 is defined as a padding entry.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>3</Value2>
							<WriteLine Id="22" Param0="u16ObjectIndexInclOffset" Level="Error">The entry 0x{0:X4}.1 shall not defined as a padding entry.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>3</Value2>
							<SetVariable Target="strResult" Param0="u16ObjectIndexInclOffset">The entry 0x{0:X4}.1 shall not defined as a padding entry.</SetVariable>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>EndSi1</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="HandleNotExistingSi1">
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>3</Value2>
							<SetVariable Target="strResult" Param0="u16ObjectIndexInclOffset">The entry 0x{0:X4}.1 does not exists.</SetVariable>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>3</Value2>
							<WriteLine Id="23" Param0="u16ObjectIndexInclOffset" Level="Error">The entry 0x{0:X4}.1 does not exists.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>3</Value2>
							<GotoStep>EndSi1</GotoStep>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="24" Param0="u16ObjectIndexInclOffset" Level="Output">The entry 0x{0:X4}.1 does not exists.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>EndSi1</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CallSi1CheckEntryDescription">
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"offline"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>1</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>"Global Manufacturer Warning Mask"</Parameter>
						<Parameter>7</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>null</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>32</Parameter>
						<Parameter>i32CurrentBitOffset</Parameter>
						<Parameter>true</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="EndSi1">
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>3</Value2>
							<SetVariable Target="i32CurrentBitOffset">i32CurrentBitOffset + 32</SetVariable>
						</Equal>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>3</Value2>
							<SetVariable Target="i32CurrentBitOffset">-1</SetVariable>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep Name="CheckReservedEntryRange_2_to_255">
					<Description Id="25" Level="Output">Start check reserved entry range 2 to 255</Description>
					<CallTestFunction Name="CheckReservedEntryRange">
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>2</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>odDeviceObjectdictionary</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="END">
					<Compare>
						<NotEqual>
							<Value1>bAtLeastOneModuleMatch</Value1>
							<Value2>true</Value2>
							<SkipCase Id="26">SKIP TEST(no module/channel supports the current profile)</SkipCase>
						</NotEqual>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bDEBUG</Value1>
							<Value2>true</Value2>
							<WriteLine Id="27" Param0="strResult" Level="Verbose">DEBUG | Result : '{0}'.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>strResult</Value1>
							<Value2>EmptyString</Value2>
							<ReturnSuccess Id="28">Test succeed</ReturnSuccess>
						</Equal>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>strResult</Value1>
							<Value2>EmptyString</Value2>
							<RaiseError Id="29"></RaiseError>
						</NotEqual>
					</Compare>
				</TestStep>
			</TestCase>
			<TestCase Name="online | 0xF3A6 (Global Manufacturer Warning Mask)" CaseId="48">
				<Description>
					<PreCondition>- The device profile is 5003
- The module profile is 2011
- The submodule profile is 0</PreCondition>
					<Action>- Iterate over all online defined modules/channels and if the PreCondition matches the following operations are done:
- Get the online description of object 0xF3A6(+module specific offset) 'Global Manufacturer Warning Mask' and all entries
 Check:
    (Name)
    BitSize
    DataType
    Rx / Tx mappable
    Default Data
    MinData
    Flags       </Action>
					<PostCondition>Error if
- mandatory object / entry is not defined
- an optional object exists and the entries are invalid
- Object / entry description does not match with the specification</PostCondition>
					<ProposalForSolution>- Define the missing objects
- correct object / entry description</ProposalForSolution>
					<References>
						<Reference Specification="ETG.5003.2011"></Reference>
					</References>
					<Mandatory>true</Mandatory>
				</Description>
				<TestStep Name="InitResult">
					<SetVariable Target="strResult">EmptyString</SetVariable>
				</TestStep>
				<TestStep Name="CheckIfOdAvailable">
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Mailbox</Value1>
							<Value2>false</Value2>
							<SkipCase Id="1">DuT does not support mailbox.</SkipCase>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Mailbox.CoE</Value1>
							<Value2>false</Value2>
							<SkipCase Id="2">DuT does not support CoE.</SkipCase>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Mailbox.CoE.SdoInfo</Value1>
							<Value2>false</Value2>
							<SkipCase Id="3">DuT does not support SDO Info.</SkipCase>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="InitAtLeastOneProfileMatch">
					<SetVariable Target="bAtLeastOneModuleMatch">false</SetVariable>
				</TestStep>
				<TestStep Name="GetCurrentProfileList">
					<SizeOf UInt32Var="u32Tmp">arrOnlineProfiles</SizeOf>
					<Compare>
						<Equal>
							<Value1>u32Tmp</Value1>
							<Value2>0</Value2>
							<CallTestFunction Name="GetCurrentProfileList">
								<Parameter>"online"</Parameter>
								<Parameter>"SafeOP"</Parameter>
								<OutParameter>arrOnlineProfiles</OutParameter>
							</CallTestFunction>
						</Equal>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>u32Tmp</Value1>
							<Value2>0</Value2>
							<WriteLine Id="4" Param0="arrOnlineProfiles" Level="Verbose">Use previously created profile list ({0})</WriteLine>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep>
					<SizeOf UInt32Var="u32Tmp">arrOnlineProfiles</SizeOf>
				</TestStep>
				<TestStep>
					<InitArray TargetArray="arrCurrentProfiles" Length="u32Tmp"></InitArray>
				</TestStep>
				<TestStep>
					<CopyArray>
						<SourceArray>arrOnlineProfiles</SourceArray>
						<DestinationArray>arrCurrentProfiles</DestinationArray>
						<Length>u32Tmp</Length>
					</CopyArray>
				</TestStep>
				<TestStep Name="IsProfileSupported">
					<CallTestFunction Name="DeviceAndModuleProfileDefined">
						<Parameter>arrCurrentProfiles</Parameter>
						<Parameter>5003</Parameter>
						<Parameter>2011</Parameter>
						<OutParameter>bAtLeastOneModuleMatch</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>bAtLeastOneModuleMatch</Value1>
							<Value2>false</Value2>
							<GotoStep>END</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="GetObjectIndexInclOffset">
					<SetVariable Target="u16ObjectIndexInclOffset">#xF3A6</SetVariable>
					<WriteLine Id="5" Param0="u16ObjectIndexInclOffset" Level="Verbose">ObjectIndex '0x{0:X}' (module independent)</WriteLine>
				</TestStep>
				<TestStep Name="LoadDeviceObjectDictionary">
					<Description Id="6" Level="Verbose">Load 'online' object dictionary for testing.</Description>
					<GetObjectDictionary Target="odDeviceObjectdictionary">
						<DictionaryType>Online</DictionaryType>
					</GetObjectDictionary>
					<RaiseErrorOnFailure Id="7">VerifyObject : failed to load online object dictionary.</RaiseErrorOnFailure>
				</TestStep>
				<TestStep Name="SetObjectRequiredLevel">
					<SetVariable Target="bObjectOrEntryRequiredLevel">1</SetVariable>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<CallTestFunction Name="IsEntryDefined">
								<Parameter>#xF386</Parameter>
								<Parameter>0</Parameter>
								<Parameter>online</Parameter>
								<OutParameter>bConditionTrue</OutParameter>
							</CallTestFunction>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bConditionTrue</Value1>
							<Value2>true</Value2>
							<SetVariable Target="bObjectOrEntryRequiredLevel">3</SetVariable>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>3</Value2>
							<WriteLine Id="8" Param0="u16ObjectIndexInclOffset" Param1="#xF386" Level="Verbose">0x{0:X4} 'Global Manufacturer Warning Mask' shall be available (the entry 0x{1:X4}.0 is available (online)</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>1</Value2>
							<WriteLine Id="9" Param0="u16ObjectIndexInclOffset" Param1="#xF386" Level="Verbose">0x{0:X4} 'Global Manufacturer Warning Mask' may be available (the entry 0x{1:X4}.0 is not available (online)</WriteLine>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CheckIfObjectExists">
					<GetObjectDescription SourceDictionary="odDeviceObjectdictionary" Index="u16ObjectIndexInclOffset" SubIndex="-1"></GetObjectDescription>
					<GotoOnSuccess>CallCheckObjectDescription</GotoOnSuccess>
				</TestStep>
				<TestStep Name="HandleNotExistingObject">
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>3</Value2>
							<SetVariable Target="strResult" Param0="u16ObjectIndexInclOffset">The object 0x{0:X4} 'Global Manufacturer Warning Mask' does not exists.</SetVariable>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>3</Value2>
							<WriteLine Id="10" Param0="u16ObjectIndexInclOffset" Level="Error">The object 0x{0:X4} 'Global Manufacturer Warning Mask' does not exists.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>2</Value2>
							<WriteLine Id="11" Param0="u16ObjectIndexInclOffset" Level="Warning">The object 0x{0:X4} 'Global Manufacturer Warning Mask' does not exists.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>1</Value2>
							<WriteLine Id="12" Param0="u16ObjectIndexInclOffset" Level="Output">The object 0x{0:X4} 'Global Manufacturer Warning Mask' does not exists.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>END</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CallCheckObjectDescription">
					<Description Id="13" Param0="u16ObjectIndexInclOffset" Level="Output">Verify the object description 0x{0:X4} 'Global Manufacturer Warning Mask'.</Description>
					<CallTestFunction Name="CheckObjectDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"online"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>"Global Manufacturer Warning Mask"</Parameter>
						<Parameter>null</Parameter>
						<Parameter>9</Parameter>
						<Parameter>-1</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<GotoStep>END</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="InitEntryBittOffset">
					<SetVariable Target="i32CurrentBitOffset">0</SetVariable>
				</TestStep>
				<TestStep Name="StartSi0">
					<Description Id="14" Level="Output">Start validate SubIndex0</Description>
					<WriteLine Id="15" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : Subindex '0x{0:X}.0'</WriteLine>
				</TestStep>
				<TestStep Name="CallSi0CheckEntryDescription">
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"online"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>0</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>null</Parameter>
						<Parameter>5</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>null</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>null</Parameter>
						<Parameter>null</Parameter>
						<Parameter>null</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>8</Parameter>
						<Parameter>i32CurrentBitOffset</Parameter>
						<Parameter>true</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="EndSi0">
					<SetVariable Target="i32CurrentBitOffset">16</SetVariable>
				</TestStep>
				<TestStep Name="StartSi1">
					<Description Id="16" Level="Output">Start validate SubIndex1</Description>
					<WriteLine Id="17" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : Subindex '0x{0:X}.1'</WriteLine>
				</TestStep>
				<TestStep Name="SetSi1RequiredLevel">
					<SetVariable Target="bObjectOrEntryRequiredLevel">1</SetVariable>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<CallTestFunction Name="IsEntryDefined">
								<Parameter>#xF386</Parameter>
								<Parameter>0</Parameter>
								<Parameter>online</Parameter>
								<OutParameter>bConditionTrue</OutParameter>
							</CallTestFunction>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bConditionTrue</Value1>
							<Value2>true</Value2>
							<SetVariable Target="bObjectOrEntryRequiredLevel">3</SetVariable>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>3</Value2>
							<WriteLine Id="18" Param0="u16ObjectIndexInclOffset" Param1="#xF386" Level="Verbose">0x{0:X4}.1 'Global Manufacturer Warning Mask' shall be available (the entry 0x{1:X4}.0 is available (online)</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>1</Value2>
							<WriteLine Id="19" Param0="u16ObjectIndexInclOffset" Param1="#xF386" Level="Verbose">0x{0:X4}.1 'Global Manufacturer Warning Mask' may be available (the entry 0x{1:X4}.0 is not available (online)</WriteLine>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CheckIfSi1Exists">
					<GetObjectDescription SourceDictionary="odDeviceObjectdictionary" Index="u16ObjectIndexInclOffset" SubIndex="1">
						<Type>u16DataType</Type>
					</GetObjectDescription>
					<GotoOnFailure>HandleNotExistingSi1</GotoOnFailure>
				</TestStep>
				<TestStep>
					<Compare>
						<NotEqual>
							<Value1>u16DataType</Value1>
							<Value2>0</Value2>
							<GotoStep>CallSi1CheckEntryDescription</GotoStep>
						</NotEqual>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>1</Value2>
							<WriteLine Id="20" Param0="u16ObjectIndexInclOffset" Level="Verbose">The entry 0x{0:X4}.1 is defined as a padding entry.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>3</Value2>
							<WriteLine Id="21" Param0="u16ObjectIndexInclOffset" Level="Error">The entry 0x{0:X4}.1 shall not defined as a padding entry.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>3</Value2>
							<SetVariable Target="strResult" Param0="u16ObjectIndexInclOffset">The entry 0x{0:X4}.1 shall not defined as a padding entry.</SetVariable>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>EndSi1</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="HandleNotExistingSi1">
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>3</Value2>
							<SetVariable Target="strResult" Param0="u16ObjectIndexInclOffset">The entry 0x{0:X4}.1 does not exists.</SetVariable>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>3</Value2>
							<WriteLine Id="22" Param0="u16ObjectIndexInclOffset" Level="Error">The entry 0x{0:X4}.1 does not exists.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>3</Value2>
							<GotoStep>EndSi1</GotoStep>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="23" Param0="u16ObjectIndexInclOffset" Level="Output">The entry 0x{0:X4}.1 does not exists.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>EndSi1</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CallSi1CheckEntryDescription">
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"online"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>1</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>"Global Manufacturer Warning Mask"</Parameter>
						<Parameter>7</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>null</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>32</Parameter>
						<Parameter>i32CurrentBitOffset</Parameter>
						<Parameter>true</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="EndSi1">
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>3</Value2>
							<SetVariable Target="i32CurrentBitOffset">i32CurrentBitOffset + 32</SetVariable>
						</Equal>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>3</Value2>
							<SetVariable Target="i32CurrentBitOffset">-1</SetVariable>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep Name="CheckReservedEntryRange_2_to_255">
					<Description Id="24" Level="Output">Start check reserved entry range 2 to 255</Description>
					<CallTestFunction Name="CheckReservedEntryRange">
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>2</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>odDeviceObjectdictionary</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="END">
					<Compare>
						<NotEqual>
							<Value1>bAtLeastOneModuleMatch</Value1>
							<Value2>true</Value2>
							<SkipCase Id="25">SKIP TEST(no module/channel supports the current profile)</SkipCase>
						</NotEqual>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bDEBUG</Value1>
							<Value2>true</Value2>
							<WriteLine Id="26" Param0="strResult" Level="Verbose">DEBUG | Result : '{0}'.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>strResult</Value1>
							<Value2>EmptyString</Value2>
							<ReturnSuccess Id="27">Test succeed</ReturnSuccess>
						</Equal>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>strResult</Value1>
							<Value2>EmptyString</Value2>
							<RaiseError Id="28"></RaiseError>
						</NotEqual>
					</Compare>
				</TestStep>
			</TestCase>
			<TestCase Name="offline | 0xF3A7 (Global Device Error Mask)" CaseId="49">
				<Description>
					<PreCondition>- The device profile is 5003
- The module profile is 2011
- The submodule profile is 0</PreCondition>
					<Action>- Iterate over all offline defined modules/channels and if the PreCondition matches the following operations are done:
- Get the offline description of object 0xF3A7(+module specific offset) 'Global Device Error Mask' and all entries
 Check:
    (Name)
    BitSize
    DataType
    Rx / Tx mappable
    Default Data
    MinData
    Flags       </Action>
					<PostCondition>Error if
- mandatory object / entry is not defined
- an optional object exists and the entries are invalid
- Object / entry description does not match with the specification</PostCondition>
					<ProposalForSolution>- Define the missing objects
- correct object / entry description</ProposalForSolution>
					<References>
						<Reference Specification="ETG.5003.2011"></Reference>
					</References>
					<Mandatory>true</Mandatory>
				</Description>
				<TestStep Name="InitResult">
					<SetVariable Target="strResult">EmptyString</SetVariable>
				</TestStep>
				<TestStep Name="CheckIfOdAvailable">
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Mailbox</Value1>
							<Value2>false</Value2>
							<SkipCase Id="1">DuT does not support mailbox.</SkipCase>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Mailbox.CoE</Value1>
							<Value2>false</Value2>
							<SkipCase Id="2">DuT does not support CoE.</SkipCase>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep>
					<GetObjectDictionary Target="odDeviceObjectdictionary">
						<DictionaryType>Offline</DictionaryType>
					</GetObjectDictionary>
					<SkipOnFailure Id="3">No offline object dictionary defined.</SkipOnFailure>
				</TestStep>
				<TestStep>
					<GetObjectList Count="u32Tmp" Target="odDeviceObjectdictionaryList" SourceDict="odDeviceObjectdictionary"></GetObjectList>
					<Compare>
						<Equal>
							<Value1>u32Tmp</Value1>
							<Value2>0</Value2>
							<SkipCase Id="4">No offline object dictionary defined.</SkipCase>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="InitAtLeastOneProfileMatch">
					<SetVariable Target="bAtLeastOneModuleMatch">false</SetVariable>
				</TestStep>
				<TestStep Name="GetCurrentProfileList">
					<SizeOf UInt32Var="u32Tmp">arrOfflineProfiles</SizeOf>
					<Compare>
						<Equal>
							<Value1>u32Tmp</Value1>
							<Value2>0</Value2>
							<CallTestFunction Name="GetCurrentProfileList">
								<Parameter>"offline"</Parameter>
								<Parameter>"SafeOP"</Parameter>
								<OutParameter>arrOfflineProfiles</OutParameter>
							</CallTestFunction>
						</Equal>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>u32Tmp</Value1>
							<Value2>0</Value2>
							<WriteLine Id="5" Param0="arrOfflineProfiles" Level="Verbose">Use previously created profile list ({0})</WriteLine>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep>
					<SizeOf UInt32Var="u32Tmp">arrOfflineProfiles</SizeOf>
				</TestStep>
				<TestStep>
					<InitArray TargetArray="arrCurrentProfiles" Length="u32Tmp"></InitArray>
				</TestStep>
				<TestStep>
					<CopyArray>
						<SourceArray>arrOfflineProfiles</SourceArray>
						<DestinationArray>arrCurrentProfiles</DestinationArray>
						<Length>u32Tmp</Length>
					</CopyArray>
				</TestStep>
				<TestStep Name="IsProfileSupported">
					<CallTestFunction Name="DeviceAndModuleProfileDefined">
						<Parameter>arrCurrentProfiles</Parameter>
						<Parameter>5003</Parameter>
						<Parameter>2011</Parameter>
						<OutParameter>bAtLeastOneModuleMatch</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>bAtLeastOneModuleMatch</Value1>
							<Value2>false</Value2>
							<GotoStep>END</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="GetObjectIndexInclOffset">
					<SetVariable Target="u16ObjectIndexInclOffset">#xF3A7</SetVariable>
					<WriteLine Id="6" Param0="u16ObjectIndexInclOffset" Level="Verbose">ObjectIndex '0x{0:X}' (module independent)</WriteLine>
				</TestStep>
				<TestStep Name="LoadDeviceObjectDictionary">
					<Description Id="7" Level="Verbose">Load 'offline' object dictionary for testing.</Description>
					<GetObjectDictionary Target="odDeviceObjectdictionary">
						<DictionaryType>Offline</DictionaryType>
					</GetObjectDictionary>
					<RaiseErrorOnFailure Id="8">VerifyObject : failed to load offline object dictionary.</RaiseErrorOnFailure>
				</TestStep>
				<TestStep Name="SetObjectRequiredLevel">
					<SetVariable Target="bObjectOrEntryRequiredLevel">1</SetVariable>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<CallTestFunction Name="IsEntryDefined">
								<Parameter>#xF387</Parameter>
								<Parameter>0</Parameter>
								<Parameter>offline</Parameter>
								<OutParameter>bConditionTrue</OutParameter>
							</CallTestFunction>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bConditionTrue</Value1>
							<Value2>true</Value2>
							<SetVariable Target="bObjectOrEntryRequiredLevel">3</SetVariable>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>3</Value2>
							<WriteLine Id="9" Param0="u16ObjectIndexInclOffset" Param1="#xF387" Level="Verbose">0x{0:X4} 'Global Device Error Mask' shall be available (the entry 0x{1:X4}.0 is available (offline)</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>1</Value2>
							<WriteLine Id="10" Param0="u16ObjectIndexInclOffset" Param1="#xF387" Level="Verbose">0x{0:X4} 'Global Device Error Mask' may be available (the entry 0x{1:X4}.0 is not available (offline)</WriteLine>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CheckIfObjectExists">
					<GetObjectDescription SourceDictionary="odDeviceObjectdictionary" Index="u16ObjectIndexInclOffset" SubIndex="-1"></GetObjectDescription>
					<GotoOnSuccess>CallCheckObjectDescription</GotoOnSuccess>
				</TestStep>
				<TestStep Name="HandleNotExistingObject">
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>3</Value2>
							<SetVariable Target="strResult" Param0="u16ObjectIndexInclOffset">The object 0x{0:X4} 'Global Device Error Mask' does not exists.</SetVariable>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>3</Value2>
							<WriteLine Id="11" Param0="u16ObjectIndexInclOffset" Level="Error">The object 0x{0:X4} 'Global Device Error Mask' does not exists.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>2</Value2>
							<WriteLine Id="12" Param0="u16ObjectIndexInclOffset" Level="Warning">The object 0x{0:X4} 'Global Device Error Mask' does not exists.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>1</Value2>
							<WriteLine Id="13" Param0="u16ObjectIndexInclOffset" Level="Output">The object 0x{0:X4} 'Global Device Error Mask' does not exists.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>END</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CallCheckObjectDescription">
					<Description Id="14" Param0="u16ObjectIndexInclOffset" Level="Output">Verify the object description 0x{0:X4} 'Global Device Error Mask'.</Description>
					<CallTestFunction Name="CheckObjectDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"offline"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>"Global Device Error Mask"</Parameter>
						<Parameter>null</Parameter>
						<Parameter>9</Parameter>
						<Parameter>-1</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<GotoStep>END</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="InitEntryBittOffset">
					<SetVariable Target="i32CurrentBitOffset">0</SetVariable>
				</TestStep>
				<TestStep Name="StartSi0">
					<Description Id="15" Level="Output">Start validate SubIndex0</Description>
					<WriteLine Id="16" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : Subindex '0x{0:X}.0'</WriteLine>
				</TestStep>
				<TestStep Name="CallSi0CheckEntryDescription">
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"offline"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>0</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>null</Parameter>
						<Parameter>5</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>null</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>null</Parameter>
						<Parameter>null</Parameter>
						<Parameter>null</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>8</Parameter>
						<Parameter>i32CurrentBitOffset</Parameter>
						<Parameter>true</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="EndSi0">
					<SetVariable Target="i32CurrentBitOffset">16</SetVariable>
				</TestStep>
				<TestStep Name="StartSi1">
					<Description Id="17" Level="Output">Start validate SubIndex1</Description>
					<WriteLine Id="18" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : Subindex '0x{0:X}.1'</WriteLine>
				</TestStep>
				<TestStep Name="SetSi1RequiredLevel">
					<SetVariable Target="bObjectOrEntryRequiredLevel">1</SetVariable>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<CallTestFunction Name="IsEntryDefined">
								<Parameter>#xF387</Parameter>
								<Parameter>0</Parameter>
								<Parameter>offline</Parameter>
								<OutParameter>bConditionTrue</OutParameter>
							</CallTestFunction>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bConditionTrue</Value1>
							<Value2>true</Value2>
							<SetVariable Target="bObjectOrEntryRequiredLevel">3</SetVariable>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>3</Value2>
							<WriteLine Id="19" Param0="u16ObjectIndexInclOffset" Param1="#xF387" Level="Verbose">0x{0:X4}.1 'Global Device Error Mask' shall be available (the entry 0x{1:X4}.0 is available (offline)</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>1</Value2>
							<WriteLine Id="20" Param0="u16ObjectIndexInclOffset" Param1="#xF387" Level="Verbose">0x{0:X4}.1 'Global Device Error Mask' may be available (the entry 0x{1:X4}.0 is not available (offline)</WriteLine>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CheckIfSi1Exists">
					<GetObjectDescription SourceDictionary="odDeviceObjectdictionary" Index="u16ObjectIndexInclOffset" SubIndex="1">
						<Type>u16DataType</Type>
					</GetObjectDescription>
					<GotoOnFailure>HandleNotExistingSi1</GotoOnFailure>
				</TestStep>
				<TestStep>
					<Compare>
						<NotEqual>
							<Value1>u16DataType</Value1>
							<Value2>0</Value2>
							<GotoStep>CallSi1CheckEntryDescription</GotoStep>
						</NotEqual>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>1</Value2>
							<WriteLine Id="21" Param0="u16ObjectIndexInclOffset" Level="Verbose">The entry 0x{0:X4}.1 is defined as a padding entry.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>3</Value2>
							<WriteLine Id="22" Param0="u16ObjectIndexInclOffset" Level="Error">The entry 0x{0:X4}.1 shall not defined as a padding entry.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>3</Value2>
							<SetVariable Target="strResult" Param0="u16ObjectIndexInclOffset">The entry 0x{0:X4}.1 shall not defined as a padding entry.</SetVariable>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>EndSi1</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="HandleNotExistingSi1">
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>3</Value2>
							<SetVariable Target="strResult" Param0="u16ObjectIndexInclOffset">The entry 0x{0:X4}.1 does not exists.</SetVariable>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>3</Value2>
							<WriteLine Id="23" Param0="u16ObjectIndexInclOffset" Level="Error">The entry 0x{0:X4}.1 does not exists.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>3</Value2>
							<GotoStep>EndSi1</GotoStep>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="24" Param0="u16ObjectIndexInclOffset" Level="Output">The entry 0x{0:X4}.1 does not exists.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>EndSi1</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CallSi1CheckEntryDescription">
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"offline"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>1</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>"Global Device Error Mask"</Parameter>
						<Parameter>7</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>null</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>32</Parameter>
						<Parameter>i32CurrentBitOffset</Parameter>
						<Parameter>true</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="EndSi1">
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>3</Value2>
							<SetVariable Target="i32CurrentBitOffset">i32CurrentBitOffset + 32</SetVariable>
						</Equal>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>3</Value2>
							<SetVariable Target="i32CurrentBitOffset">-1</SetVariable>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep Name="CheckReservedEntryRange_2_to_255">
					<Description Id="25" Level="Output">Start check reserved entry range 2 to 255</Description>
					<CallTestFunction Name="CheckReservedEntryRange">
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>2</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>odDeviceObjectdictionary</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="END">
					<Compare>
						<NotEqual>
							<Value1>bAtLeastOneModuleMatch</Value1>
							<Value2>true</Value2>
							<SkipCase Id="26">SKIP TEST(no module/channel supports the current profile)</SkipCase>
						</NotEqual>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bDEBUG</Value1>
							<Value2>true</Value2>
							<WriteLine Id="27" Param0="strResult" Level="Verbose">DEBUG | Result : '{0}'.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>strResult</Value1>
							<Value2>EmptyString</Value2>
							<ReturnSuccess Id="28">Test succeed</ReturnSuccess>
						</Equal>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>strResult</Value1>
							<Value2>EmptyString</Value2>
							<RaiseError Id="29"></RaiseError>
						</NotEqual>
					</Compare>
				</TestStep>
			</TestCase>
			<TestCase Name="online | 0xF3A7 (Global Device Error Mask)" CaseId="50">
				<Description>
					<PreCondition>- The device profile is 5003
- The module profile is 2011
- The submodule profile is 0</PreCondition>
					<Action>- Iterate over all online defined modules/channels and if the PreCondition matches the following operations are done:
- Get the online description of object 0xF3A7(+module specific offset) 'Global Device Error Mask' and all entries
 Check:
    (Name)
    BitSize
    DataType
    Rx / Tx mappable
    Default Data
    MinData
    Flags       </Action>
					<PostCondition>Error if
- mandatory object / entry is not defined
- an optional object exists and the entries are invalid
- Object / entry description does not match with the specification</PostCondition>
					<ProposalForSolution>- Define the missing objects
- correct object / entry description</ProposalForSolution>
					<References>
						<Reference Specification="ETG.5003.2011"></Reference>
					</References>
					<Mandatory>true</Mandatory>
				</Description>
				<TestStep Name="InitResult">
					<SetVariable Target="strResult">EmptyString</SetVariable>
				</TestStep>
				<TestStep Name="CheckIfOdAvailable">
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Mailbox</Value1>
							<Value2>false</Value2>
							<SkipCase Id="1">DuT does not support mailbox.</SkipCase>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Mailbox.CoE</Value1>
							<Value2>false</Value2>
							<SkipCase Id="2">DuT does not support CoE.</SkipCase>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Mailbox.CoE.SdoInfo</Value1>
							<Value2>false</Value2>
							<SkipCase Id="3">DuT does not support SDO Info.</SkipCase>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="InitAtLeastOneProfileMatch">
					<SetVariable Target="bAtLeastOneModuleMatch">false</SetVariable>
				</TestStep>
				<TestStep Name="GetCurrentProfileList">
					<SizeOf UInt32Var="u32Tmp">arrOnlineProfiles</SizeOf>
					<Compare>
						<Equal>
							<Value1>u32Tmp</Value1>
							<Value2>0</Value2>
							<CallTestFunction Name="GetCurrentProfileList">
								<Parameter>"online"</Parameter>
								<Parameter>"SafeOP"</Parameter>
								<OutParameter>arrOnlineProfiles</OutParameter>
							</CallTestFunction>
						</Equal>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>u32Tmp</Value1>
							<Value2>0</Value2>
							<WriteLine Id="4" Param0="arrOnlineProfiles" Level="Verbose">Use previously created profile list ({0})</WriteLine>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep>
					<SizeOf UInt32Var="u32Tmp">arrOnlineProfiles</SizeOf>
				</TestStep>
				<TestStep>
					<InitArray TargetArray="arrCurrentProfiles" Length="u32Tmp"></InitArray>
				</TestStep>
				<TestStep>
					<CopyArray>
						<SourceArray>arrOnlineProfiles</SourceArray>
						<DestinationArray>arrCurrentProfiles</DestinationArray>
						<Length>u32Tmp</Length>
					</CopyArray>
				</TestStep>
				<TestStep Name="IsProfileSupported">
					<CallTestFunction Name="DeviceAndModuleProfileDefined">
						<Parameter>arrCurrentProfiles</Parameter>
						<Parameter>5003</Parameter>
						<Parameter>2011</Parameter>
						<OutParameter>bAtLeastOneModuleMatch</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>bAtLeastOneModuleMatch</Value1>
							<Value2>false</Value2>
							<GotoStep>END</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="GetObjectIndexInclOffset">
					<SetVariable Target="u16ObjectIndexInclOffset">#xF3A7</SetVariable>
					<WriteLine Id="5" Param0="u16ObjectIndexInclOffset" Level="Verbose">ObjectIndex '0x{0:X}' (module independent)</WriteLine>
				</TestStep>
				<TestStep Name="LoadDeviceObjectDictionary">
					<Description Id="6" Level="Verbose">Load 'online' object dictionary for testing.</Description>
					<GetObjectDictionary Target="odDeviceObjectdictionary">
						<DictionaryType>Online</DictionaryType>
					</GetObjectDictionary>
					<RaiseErrorOnFailure Id="7">VerifyObject : failed to load online object dictionary.</RaiseErrorOnFailure>
				</TestStep>
				<TestStep Name="SetObjectRequiredLevel">
					<SetVariable Target="bObjectOrEntryRequiredLevel">1</SetVariable>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<CallTestFunction Name="IsEntryDefined">
								<Parameter>#xF387</Parameter>
								<Parameter>0</Parameter>
								<Parameter>online</Parameter>
								<OutParameter>bConditionTrue</OutParameter>
							</CallTestFunction>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bConditionTrue</Value1>
							<Value2>true</Value2>
							<SetVariable Target="bObjectOrEntryRequiredLevel">3</SetVariable>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>3</Value2>
							<WriteLine Id="8" Param0="u16ObjectIndexInclOffset" Param1="#xF387" Level="Verbose">0x{0:X4} 'Global Device Error Mask' shall be available (the entry 0x{1:X4}.0 is available (online)</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>1</Value2>
							<WriteLine Id="9" Param0="u16ObjectIndexInclOffset" Param1="#xF387" Level="Verbose">0x{0:X4} 'Global Device Error Mask' may be available (the entry 0x{1:X4}.0 is not available (online)</WriteLine>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CheckIfObjectExists">
					<GetObjectDescription SourceDictionary="odDeviceObjectdictionary" Index="u16ObjectIndexInclOffset" SubIndex="-1"></GetObjectDescription>
					<GotoOnSuccess>CallCheckObjectDescription</GotoOnSuccess>
				</TestStep>
				<TestStep Name="HandleNotExistingObject">
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>3</Value2>
							<SetVariable Target="strResult" Param0="u16ObjectIndexInclOffset">The object 0x{0:X4} 'Global Device Error Mask' does not exists.</SetVariable>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>3</Value2>
							<WriteLine Id="10" Param0="u16ObjectIndexInclOffset" Level="Error">The object 0x{0:X4} 'Global Device Error Mask' does not exists.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>2</Value2>
							<WriteLine Id="11" Param0="u16ObjectIndexInclOffset" Level="Warning">The object 0x{0:X4} 'Global Device Error Mask' does not exists.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>1</Value2>
							<WriteLine Id="12" Param0="u16ObjectIndexInclOffset" Level="Output">The object 0x{0:X4} 'Global Device Error Mask' does not exists.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>END</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CallCheckObjectDescription">
					<Description Id="13" Param0="u16ObjectIndexInclOffset" Level="Output">Verify the object description 0x{0:X4} 'Global Device Error Mask'.</Description>
					<CallTestFunction Name="CheckObjectDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"online"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>"Global Device Error Mask"</Parameter>
						<Parameter>null</Parameter>
						<Parameter>9</Parameter>
						<Parameter>-1</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<GotoStep>END</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="InitEntryBittOffset">
					<SetVariable Target="i32CurrentBitOffset">0</SetVariable>
				</TestStep>
				<TestStep Name="StartSi0">
					<Description Id="14" Level="Output">Start validate SubIndex0</Description>
					<WriteLine Id="15" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : Subindex '0x{0:X}.0'</WriteLine>
				</TestStep>
				<TestStep Name="CallSi0CheckEntryDescription">
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"online"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>0</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>null</Parameter>
						<Parameter>5</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>null</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>null</Parameter>
						<Parameter>null</Parameter>
						<Parameter>null</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>8</Parameter>
						<Parameter>i32CurrentBitOffset</Parameter>
						<Parameter>true</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="EndSi0">
					<SetVariable Target="i32CurrentBitOffset">16</SetVariable>
				</TestStep>
				<TestStep Name="StartSi1">
					<Description Id="16" Level="Output">Start validate SubIndex1</Description>
					<WriteLine Id="17" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : Subindex '0x{0:X}.1'</WriteLine>
				</TestStep>
				<TestStep Name="SetSi1RequiredLevel">
					<SetVariable Target="bObjectOrEntryRequiredLevel">1</SetVariable>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<CallTestFunction Name="IsEntryDefined">
								<Parameter>#xF387</Parameter>
								<Parameter>0</Parameter>
								<Parameter>online</Parameter>
								<OutParameter>bConditionTrue</OutParameter>
							</CallTestFunction>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bConditionTrue</Value1>
							<Value2>true</Value2>
							<SetVariable Target="bObjectOrEntryRequiredLevel">3</SetVariable>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>3</Value2>
							<WriteLine Id="18" Param0="u16ObjectIndexInclOffset" Param1="#xF387" Level="Verbose">0x{0:X4}.1 'Global Device Error Mask' shall be available (the entry 0x{1:X4}.0 is available (online)</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>1</Value2>
							<WriteLine Id="19" Param0="u16ObjectIndexInclOffset" Param1="#xF387" Level="Verbose">0x{0:X4}.1 'Global Device Error Mask' may be available (the entry 0x{1:X4}.0 is not available (online)</WriteLine>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CheckIfSi1Exists">
					<GetObjectDescription SourceDictionary="odDeviceObjectdictionary" Index="u16ObjectIndexInclOffset" SubIndex="1">
						<Type>u16DataType</Type>
					</GetObjectDescription>
					<GotoOnFailure>HandleNotExistingSi1</GotoOnFailure>
				</TestStep>
				<TestStep>
					<Compare>
						<NotEqual>
							<Value1>u16DataType</Value1>
							<Value2>0</Value2>
							<GotoStep>CallSi1CheckEntryDescription</GotoStep>
						</NotEqual>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>1</Value2>
							<WriteLine Id="20" Param0="u16ObjectIndexInclOffset" Level="Verbose">The entry 0x{0:X4}.1 is defined as a padding entry.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>3</Value2>
							<WriteLine Id="21" Param0="u16ObjectIndexInclOffset" Level="Error">The entry 0x{0:X4}.1 shall not defined as a padding entry.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>3</Value2>
							<SetVariable Target="strResult" Param0="u16ObjectIndexInclOffset">The entry 0x{0:X4}.1 shall not defined as a padding entry.</SetVariable>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>EndSi1</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="HandleNotExistingSi1">
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>3</Value2>
							<SetVariable Target="strResult" Param0="u16ObjectIndexInclOffset">The entry 0x{0:X4}.1 does not exists.</SetVariable>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>3</Value2>
							<WriteLine Id="22" Param0="u16ObjectIndexInclOffset" Level="Error">The entry 0x{0:X4}.1 does not exists.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>3</Value2>
							<GotoStep>EndSi1</GotoStep>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="23" Param0="u16ObjectIndexInclOffset" Level="Output">The entry 0x{0:X4}.1 does not exists.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>EndSi1</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CallSi1CheckEntryDescription">
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"online"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>1</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>"Global Device Error Mask"</Parameter>
						<Parameter>7</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>null</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>32</Parameter>
						<Parameter>i32CurrentBitOffset</Parameter>
						<Parameter>true</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="EndSi1">
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>3</Value2>
							<SetVariable Target="i32CurrentBitOffset">i32CurrentBitOffset + 32</SetVariable>
						</Equal>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>3</Value2>
							<SetVariable Target="i32CurrentBitOffset">-1</SetVariable>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep Name="CheckReservedEntryRange_2_to_255">
					<Description Id="24" Level="Output">Start check reserved entry range 2 to 255</Description>
					<CallTestFunction Name="CheckReservedEntryRange">
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>2</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>odDeviceObjectdictionary</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="END">
					<Compare>
						<NotEqual>
							<Value1>bAtLeastOneModuleMatch</Value1>
							<Value2>true</Value2>
							<SkipCase Id="25">SKIP TEST(no module/channel supports the current profile)</SkipCase>
						</NotEqual>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bDEBUG</Value1>
							<Value2>true</Value2>
							<WriteLine Id="26" Param0="strResult" Level="Verbose">DEBUG | Result : '{0}'.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>strResult</Value1>
							<Value2>EmptyString</Value2>
							<ReturnSuccess Id="27">Test succeed</ReturnSuccess>
						</Equal>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>strResult</Value1>
							<Value2>EmptyString</Value2>
							<RaiseError Id="28"></RaiseError>
						</NotEqual>
					</Compare>
				</TestStep>
			</TestCase>
			<TestCase Name="offline | 0xF3A8 (Global Manufacturer Error Mask)" CaseId="51">
				<Description>
					<PreCondition>- The device profile is 5003
- The module profile is 2011
- The submodule profile is 0</PreCondition>
					<Action>- Iterate over all offline defined modules/channels and if the PreCondition matches the following operations are done:
- Get the offline description of object 0xF3A8(+module specific offset) 'Global Manufacturer Error Mask' and all entries
 Check:
    (Name)
    BitSize
    DataType
    Rx / Tx mappable
    Default Data
    MinData
    Flags       </Action>
					<PostCondition>Error if
- mandatory object / entry is not defined
- an optional object exists and the entries are invalid
- Object / entry description does not match with the specification</PostCondition>
					<ProposalForSolution>- Define the missing objects
- correct object / entry description</ProposalForSolution>
					<References>
						<Reference Specification="ETG.5003.2011"></Reference>
					</References>
					<Mandatory>true</Mandatory>
				</Description>
				<TestStep Name="InitResult">
					<SetVariable Target="strResult">EmptyString</SetVariable>
				</TestStep>
				<TestStep Name="CheckIfOdAvailable">
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Mailbox</Value1>
							<Value2>false</Value2>
							<SkipCase Id="1">DuT does not support mailbox.</SkipCase>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Mailbox.CoE</Value1>
							<Value2>false</Value2>
							<SkipCase Id="2">DuT does not support CoE.</SkipCase>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep>
					<GetObjectDictionary Target="odDeviceObjectdictionary">
						<DictionaryType>Offline</DictionaryType>
					</GetObjectDictionary>
					<SkipOnFailure Id="3">No offline object dictionary defined.</SkipOnFailure>
				</TestStep>
				<TestStep>
					<GetObjectList Count="u32Tmp" Target="odDeviceObjectdictionaryList" SourceDict="odDeviceObjectdictionary"></GetObjectList>
					<Compare>
						<Equal>
							<Value1>u32Tmp</Value1>
							<Value2>0</Value2>
							<SkipCase Id="4">No offline object dictionary defined.</SkipCase>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="InitAtLeastOneProfileMatch">
					<SetVariable Target="bAtLeastOneModuleMatch">false</SetVariable>
				</TestStep>
				<TestStep Name="GetCurrentProfileList">
					<SizeOf UInt32Var="u32Tmp">arrOfflineProfiles</SizeOf>
					<Compare>
						<Equal>
							<Value1>u32Tmp</Value1>
							<Value2>0</Value2>
							<CallTestFunction Name="GetCurrentProfileList">
								<Parameter>"offline"</Parameter>
								<Parameter>"SafeOP"</Parameter>
								<OutParameter>arrOfflineProfiles</OutParameter>
							</CallTestFunction>
						</Equal>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>u32Tmp</Value1>
							<Value2>0</Value2>
							<WriteLine Id="5" Param0="arrOfflineProfiles" Level="Verbose">Use previously created profile list ({0})</WriteLine>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep>
					<SizeOf UInt32Var="u32Tmp">arrOfflineProfiles</SizeOf>
				</TestStep>
				<TestStep>
					<InitArray TargetArray="arrCurrentProfiles" Length="u32Tmp"></InitArray>
				</TestStep>
				<TestStep>
					<CopyArray>
						<SourceArray>arrOfflineProfiles</SourceArray>
						<DestinationArray>arrCurrentProfiles</DestinationArray>
						<Length>u32Tmp</Length>
					</CopyArray>
				</TestStep>
				<TestStep Name="IsProfileSupported">
					<CallTestFunction Name="DeviceAndModuleProfileDefined">
						<Parameter>arrCurrentProfiles</Parameter>
						<Parameter>5003</Parameter>
						<Parameter>2011</Parameter>
						<OutParameter>bAtLeastOneModuleMatch</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>bAtLeastOneModuleMatch</Value1>
							<Value2>false</Value2>
							<GotoStep>END</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="GetObjectIndexInclOffset">
					<SetVariable Target="u16ObjectIndexInclOffset">#xF3A8</SetVariable>
					<WriteLine Id="6" Param0="u16ObjectIndexInclOffset" Level="Verbose">ObjectIndex '0x{0:X}' (module independent)</WriteLine>
				</TestStep>
				<TestStep Name="LoadDeviceObjectDictionary">
					<Description Id="7" Level="Verbose">Load 'offline' object dictionary for testing.</Description>
					<GetObjectDictionary Target="odDeviceObjectdictionary">
						<DictionaryType>Offline</DictionaryType>
					</GetObjectDictionary>
					<RaiseErrorOnFailure Id="8">VerifyObject : failed to load offline object dictionary.</RaiseErrorOnFailure>
				</TestStep>
				<TestStep Name="SetObjectRequiredLevel">
					<SetVariable Target="bObjectOrEntryRequiredLevel">1</SetVariable>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<CallTestFunction Name="IsEntryDefined">
								<Parameter>#xF388</Parameter>
								<Parameter>0</Parameter>
								<Parameter>offline</Parameter>
								<OutParameter>bConditionTrue</OutParameter>
							</CallTestFunction>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bConditionTrue</Value1>
							<Value2>true</Value2>
							<SetVariable Target="bObjectOrEntryRequiredLevel">3</SetVariable>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>3</Value2>
							<WriteLine Id="9" Param0="u16ObjectIndexInclOffset" Param1="#xF388" Level="Verbose">0x{0:X4} 'Global Manufacturer Error Mask' shall be available (the entry 0x{1:X4}.0 is available (offline)</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>1</Value2>
							<WriteLine Id="10" Param0="u16ObjectIndexInclOffset" Param1="#xF388" Level="Verbose">0x{0:X4} 'Global Manufacturer Error Mask' may be available (the entry 0x{1:X4}.0 is not available (offline)</WriteLine>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CheckIfObjectExists">
					<GetObjectDescription SourceDictionary="odDeviceObjectdictionary" Index="u16ObjectIndexInclOffset" SubIndex="-1"></GetObjectDescription>
					<GotoOnSuccess>CallCheckObjectDescription</GotoOnSuccess>
				</TestStep>
				<TestStep Name="HandleNotExistingObject">
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>3</Value2>
							<SetVariable Target="strResult" Param0="u16ObjectIndexInclOffset">The object 0x{0:X4} 'Global Manufacturer Error Mask' does not exists.</SetVariable>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>3</Value2>
							<WriteLine Id="11" Param0="u16ObjectIndexInclOffset" Level="Error">The object 0x{0:X4} 'Global Manufacturer Error Mask' does not exists.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>2</Value2>
							<WriteLine Id="12" Param0="u16ObjectIndexInclOffset" Level="Warning">The object 0x{0:X4} 'Global Manufacturer Error Mask' does not exists.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>1</Value2>
							<WriteLine Id="13" Param0="u16ObjectIndexInclOffset" Level="Output">The object 0x{0:X4} 'Global Manufacturer Error Mask' does not exists.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>END</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CallCheckObjectDescription">
					<Description Id="14" Param0="u16ObjectIndexInclOffset" Level="Output">Verify the object description 0x{0:X4} 'Global Manufacturer Error Mask'.</Description>
					<CallTestFunction Name="CheckObjectDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"offline"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>"Global Manufacturer Error Mask"</Parameter>
						<Parameter>null</Parameter>
						<Parameter>9</Parameter>
						<Parameter>-1</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<GotoStep>END</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="InitEntryBittOffset">
					<SetVariable Target="i32CurrentBitOffset">0</SetVariable>
				</TestStep>
				<TestStep Name="StartSi0">
					<Description Id="15" Level="Output">Start validate SubIndex0</Description>
					<WriteLine Id="16" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : Subindex '0x{0:X}.0'</WriteLine>
				</TestStep>
				<TestStep Name="CallSi0CheckEntryDescription">
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"offline"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>0</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>null</Parameter>
						<Parameter>5</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>null</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>null</Parameter>
						<Parameter>null</Parameter>
						<Parameter>null</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>8</Parameter>
						<Parameter>i32CurrentBitOffset</Parameter>
						<Parameter>true</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="EndSi0">
					<SetVariable Target="i32CurrentBitOffset">16</SetVariable>
				</TestStep>
				<TestStep Name="StartSi1">
					<Description Id="17" Level="Output">Start validate SubIndex1</Description>
					<WriteLine Id="18" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : Subindex '0x{0:X}.1'</WriteLine>
				</TestStep>
				<TestStep Name="SetSi1RequiredLevel">
					<SetVariable Target="bObjectOrEntryRequiredLevel">1</SetVariable>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<CallTestFunction Name="IsEntryDefined">
								<Parameter>#xF388</Parameter>
								<Parameter>0</Parameter>
								<Parameter>offline</Parameter>
								<OutParameter>bConditionTrue</OutParameter>
							</CallTestFunction>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bConditionTrue</Value1>
							<Value2>true</Value2>
							<SetVariable Target="bObjectOrEntryRequiredLevel">3</SetVariable>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>3</Value2>
							<WriteLine Id="19" Param0="u16ObjectIndexInclOffset" Param1="#xF388" Level="Verbose">0x{0:X4}.1 'Global Manufacturer Error Mask' shall be available (the entry 0x{1:X4}.0 is available (offline)</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>1</Value2>
							<WriteLine Id="20" Param0="u16ObjectIndexInclOffset" Param1="#xF388" Level="Verbose">0x{0:X4}.1 'Global Manufacturer Error Mask' may be available (the entry 0x{1:X4}.0 is not available (offline)</WriteLine>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CheckIfSi1Exists">
					<GetObjectDescription SourceDictionary="odDeviceObjectdictionary" Index="u16ObjectIndexInclOffset" SubIndex="1">
						<Type>u16DataType</Type>
					</GetObjectDescription>
					<GotoOnFailure>HandleNotExistingSi1</GotoOnFailure>
				</TestStep>
				<TestStep>
					<Compare>
						<NotEqual>
							<Value1>u16DataType</Value1>
							<Value2>0</Value2>
							<GotoStep>CallSi1CheckEntryDescription</GotoStep>
						</NotEqual>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>1</Value2>
							<WriteLine Id="21" Param0="u16ObjectIndexInclOffset" Level="Verbose">The entry 0x{0:X4}.1 is defined as a padding entry.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>3</Value2>
							<WriteLine Id="22" Param0="u16ObjectIndexInclOffset" Level="Error">The entry 0x{0:X4}.1 shall not defined as a padding entry.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>3</Value2>
							<SetVariable Target="strResult" Param0="u16ObjectIndexInclOffset">The entry 0x{0:X4}.1 shall not defined as a padding entry.</SetVariable>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>EndSi1</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="HandleNotExistingSi1">
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>3</Value2>
							<SetVariable Target="strResult" Param0="u16ObjectIndexInclOffset">The entry 0x{0:X4}.1 does not exists.</SetVariable>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>3</Value2>
							<WriteLine Id="23" Param0="u16ObjectIndexInclOffset" Level="Error">The entry 0x{0:X4}.1 does not exists.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>3</Value2>
							<GotoStep>EndSi1</GotoStep>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="24" Param0="u16ObjectIndexInclOffset" Level="Output">The entry 0x{0:X4}.1 does not exists.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>EndSi1</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CallSi1CheckEntryDescription">
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"offline"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>1</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>"Global Manufacturer Error Mask"</Parameter>
						<Parameter>7</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>null</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>32</Parameter>
						<Parameter>i32CurrentBitOffset</Parameter>
						<Parameter>true</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="EndSi1">
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>3</Value2>
							<SetVariable Target="i32CurrentBitOffset">i32CurrentBitOffset + 32</SetVariable>
						</Equal>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>3</Value2>
							<SetVariable Target="i32CurrentBitOffset">-1</SetVariable>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep Name="CheckReservedEntryRange_2_to_255">
					<Description Id="25" Level="Output">Start check reserved entry range 2 to 255</Description>
					<CallTestFunction Name="CheckReservedEntryRange">
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>2</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>odDeviceObjectdictionary</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="END">
					<Compare>
						<NotEqual>
							<Value1>bAtLeastOneModuleMatch</Value1>
							<Value2>true</Value2>
							<SkipCase Id="26">SKIP TEST(no module/channel supports the current profile)</SkipCase>
						</NotEqual>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bDEBUG</Value1>
							<Value2>true</Value2>
							<WriteLine Id="27" Param0="strResult" Level="Verbose">DEBUG | Result : '{0}'.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>strResult</Value1>
							<Value2>EmptyString</Value2>
							<ReturnSuccess Id="28">Test succeed</ReturnSuccess>
						</Equal>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>strResult</Value1>
							<Value2>EmptyString</Value2>
							<RaiseError Id="29"></RaiseError>
						</NotEqual>
					</Compare>
				</TestStep>
			</TestCase>
			<TestCase Name="online | 0xF3A8 (Global Manufacturer Error Mask)" CaseId="52">
				<Description>
					<PreCondition>- The device profile is 5003
- The module profile is 2011
- The submodule profile is 0</PreCondition>
					<Action>- Iterate over all online defined modules/channels and if the PreCondition matches the following operations are done:
- Get the online description of object 0xF3A8(+module specific offset) 'Global Manufacturer Error Mask' and all entries
 Check:
    (Name)
    BitSize
    DataType
    Rx / Tx mappable
    Default Data
    MinData
    Flags       </Action>
					<PostCondition>Error if
- mandatory object / entry is not defined
- an optional object exists and the entries are invalid
- Object / entry description does not match with the specification</PostCondition>
					<ProposalForSolution>- Define the missing objects
- correct object / entry description</ProposalForSolution>
					<References>
						<Reference Specification="ETG.5003.2011"></Reference>
					</References>
					<Mandatory>true</Mandatory>
				</Description>
				<TestStep Name="InitResult">
					<SetVariable Target="strResult">EmptyString</SetVariable>
				</TestStep>
				<TestStep Name="CheckIfOdAvailable">
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Mailbox</Value1>
							<Value2>false</Value2>
							<SkipCase Id="1">DuT does not support mailbox.</SkipCase>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Mailbox.CoE</Value1>
							<Value2>false</Value2>
							<SkipCase Id="2">DuT does not support CoE.</SkipCase>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Mailbox.CoE.SdoInfo</Value1>
							<Value2>false</Value2>
							<SkipCase Id="3">DuT does not support SDO Info.</SkipCase>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="InitAtLeastOneProfileMatch">
					<SetVariable Target="bAtLeastOneModuleMatch">false</SetVariable>
				</TestStep>
				<TestStep Name="GetCurrentProfileList">
					<SizeOf UInt32Var="u32Tmp">arrOnlineProfiles</SizeOf>
					<Compare>
						<Equal>
							<Value1>u32Tmp</Value1>
							<Value2>0</Value2>
							<CallTestFunction Name="GetCurrentProfileList">
								<Parameter>"online"</Parameter>
								<Parameter>"SafeOP"</Parameter>
								<OutParameter>arrOnlineProfiles</OutParameter>
							</CallTestFunction>
						</Equal>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>u32Tmp</Value1>
							<Value2>0</Value2>
							<WriteLine Id="4" Param0="arrOnlineProfiles" Level="Verbose">Use previously created profile list ({0})</WriteLine>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep>
					<SizeOf UInt32Var="u32Tmp">arrOnlineProfiles</SizeOf>
				</TestStep>
				<TestStep>
					<InitArray TargetArray="arrCurrentProfiles" Length="u32Tmp"></InitArray>
				</TestStep>
				<TestStep>
					<CopyArray>
						<SourceArray>arrOnlineProfiles</SourceArray>
						<DestinationArray>arrCurrentProfiles</DestinationArray>
						<Length>u32Tmp</Length>
					</CopyArray>
				</TestStep>
				<TestStep Name="IsProfileSupported">
					<CallTestFunction Name="DeviceAndModuleProfileDefined">
						<Parameter>arrCurrentProfiles</Parameter>
						<Parameter>5003</Parameter>
						<Parameter>2011</Parameter>
						<OutParameter>bAtLeastOneModuleMatch</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>bAtLeastOneModuleMatch</Value1>
							<Value2>false</Value2>
							<GotoStep>END</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="GetObjectIndexInclOffset">
					<SetVariable Target="u16ObjectIndexInclOffset">#xF3A8</SetVariable>
					<WriteLine Id="5" Param0="u16ObjectIndexInclOffset" Level="Verbose">ObjectIndex '0x{0:X}' (module independent)</WriteLine>
				</TestStep>
				<TestStep Name="LoadDeviceObjectDictionary">
					<Description Id="6" Level="Verbose">Load 'online' object dictionary for testing.</Description>
					<GetObjectDictionary Target="odDeviceObjectdictionary">
						<DictionaryType>Online</DictionaryType>
					</GetObjectDictionary>
					<RaiseErrorOnFailure Id="7">VerifyObject : failed to load online object dictionary.</RaiseErrorOnFailure>
				</TestStep>
				<TestStep Name="SetObjectRequiredLevel">
					<SetVariable Target="bObjectOrEntryRequiredLevel">1</SetVariable>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<CallTestFunction Name="IsEntryDefined">
								<Parameter>#xF388</Parameter>
								<Parameter>0</Parameter>
								<Parameter>online</Parameter>
								<OutParameter>bConditionTrue</OutParameter>
							</CallTestFunction>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bConditionTrue</Value1>
							<Value2>true</Value2>
							<SetVariable Target="bObjectOrEntryRequiredLevel">3</SetVariable>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>3</Value2>
							<WriteLine Id="8" Param0="u16ObjectIndexInclOffset" Param1="#xF388" Level="Verbose">0x{0:X4} 'Global Manufacturer Error Mask' shall be available (the entry 0x{1:X4}.0 is available (online)</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>1</Value2>
							<WriteLine Id="9" Param0="u16ObjectIndexInclOffset" Param1="#xF388" Level="Verbose">0x{0:X4} 'Global Manufacturer Error Mask' may be available (the entry 0x{1:X4}.0 is not available (online)</WriteLine>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CheckIfObjectExists">
					<GetObjectDescription SourceDictionary="odDeviceObjectdictionary" Index="u16ObjectIndexInclOffset" SubIndex="-1"></GetObjectDescription>
					<GotoOnSuccess>CallCheckObjectDescription</GotoOnSuccess>
				</TestStep>
				<TestStep Name="HandleNotExistingObject">
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>3</Value2>
							<SetVariable Target="strResult" Param0="u16ObjectIndexInclOffset">The object 0x{0:X4} 'Global Manufacturer Error Mask' does not exists.</SetVariable>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>3</Value2>
							<WriteLine Id="10" Param0="u16ObjectIndexInclOffset" Level="Error">The object 0x{0:X4} 'Global Manufacturer Error Mask' does not exists.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>2</Value2>
							<WriteLine Id="11" Param0="u16ObjectIndexInclOffset" Level="Warning">The object 0x{0:X4} 'Global Manufacturer Error Mask' does not exists.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>1</Value2>
							<WriteLine Id="12" Param0="u16ObjectIndexInclOffset" Level="Output">The object 0x{0:X4} 'Global Manufacturer Error Mask' does not exists.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>END</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CallCheckObjectDescription">
					<Description Id="13" Param0="u16ObjectIndexInclOffset" Level="Output">Verify the object description 0x{0:X4} 'Global Manufacturer Error Mask'.</Description>
					<CallTestFunction Name="CheckObjectDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"online"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>"Global Manufacturer Error Mask"</Parameter>
						<Parameter>null</Parameter>
						<Parameter>9</Parameter>
						<Parameter>-1</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<GotoStep>END</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="InitEntryBittOffset">
					<SetVariable Target="i32CurrentBitOffset">0</SetVariable>
				</TestStep>
				<TestStep Name="StartSi0">
					<Description Id="14" Level="Output">Start validate SubIndex0</Description>
					<WriteLine Id="15" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : Subindex '0x{0:X}.0'</WriteLine>
				</TestStep>
				<TestStep Name="CallSi0CheckEntryDescription">
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"online"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>0</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>null</Parameter>
						<Parameter>5</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>null</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>null</Parameter>
						<Parameter>null</Parameter>
						<Parameter>null</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>8</Parameter>
						<Parameter>i32CurrentBitOffset</Parameter>
						<Parameter>true</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="EndSi0">
					<SetVariable Target="i32CurrentBitOffset">16</SetVariable>
				</TestStep>
				<TestStep Name="StartSi1">
					<Description Id="16" Level="Output">Start validate SubIndex1</Description>
					<WriteLine Id="17" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : Subindex '0x{0:X}.1'</WriteLine>
				</TestStep>
				<TestStep Name="SetSi1RequiredLevel">
					<SetVariable Target="bObjectOrEntryRequiredLevel">1</SetVariable>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<CallTestFunction Name="IsEntryDefined">
								<Parameter>#xF388</Parameter>
								<Parameter>0</Parameter>
								<Parameter>online</Parameter>
								<OutParameter>bConditionTrue</OutParameter>
							</CallTestFunction>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bConditionTrue</Value1>
							<Value2>true</Value2>
							<SetVariable Target="bObjectOrEntryRequiredLevel">3</SetVariable>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>3</Value2>
							<WriteLine Id="18" Param0="u16ObjectIndexInclOffset" Param1="#xF388" Level="Verbose">0x{0:X4}.1 'Global Manufacturer Error Mask' shall be available (the entry 0x{1:X4}.0 is available (online)</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>1</Value2>
							<WriteLine Id="19" Param0="u16ObjectIndexInclOffset" Param1="#xF388" Level="Verbose">0x{0:X4}.1 'Global Manufacturer Error Mask' may be available (the entry 0x{1:X4}.0 is not available (online)</WriteLine>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CheckIfSi1Exists">
					<GetObjectDescription SourceDictionary="odDeviceObjectdictionary" Index="u16ObjectIndexInclOffset" SubIndex="1">
						<Type>u16DataType</Type>
					</GetObjectDescription>
					<GotoOnFailure>HandleNotExistingSi1</GotoOnFailure>
				</TestStep>
				<TestStep>
					<Compare>
						<NotEqual>
							<Value1>u16DataType</Value1>
							<Value2>0</Value2>
							<GotoStep>CallSi1CheckEntryDescription</GotoStep>
						</NotEqual>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>1</Value2>
							<WriteLine Id="20" Param0="u16ObjectIndexInclOffset" Level="Verbose">The entry 0x{0:X4}.1 is defined as a padding entry.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>3</Value2>
							<WriteLine Id="21" Param0="u16ObjectIndexInclOffset" Level="Error">The entry 0x{0:X4}.1 shall not defined as a padding entry.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>3</Value2>
							<SetVariable Target="strResult" Param0="u16ObjectIndexInclOffset">The entry 0x{0:X4}.1 shall not defined as a padding entry.</SetVariable>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>EndSi1</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="HandleNotExistingSi1">
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>3</Value2>
							<SetVariable Target="strResult" Param0="u16ObjectIndexInclOffset">The entry 0x{0:X4}.1 does not exists.</SetVariable>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>3</Value2>
							<WriteLine Id="22" Param0="u16ObjectIndexInclOffset" Level="Error">The entry 0x{0:X4}.1 does not exists.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>3</Value2>
							<GotoStep>EndSi1</GotoStep>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="23" Param0="u16ObjectIndexInclOffset" Level="Output">The entry 0x{0:X4}.1 does not exists.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>EndSi1</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CallSi1CheckEntryDescription">
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"online"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>1</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>"Global Manufacturer Error Mask"</Parameter>
						<Parameter>7</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>null</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>32</Parameter>
						<Parameter>i32CurrentBitOffset</Parameter>
						<Parameter>true</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="EndSi1">
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>3</Value2>
							<SetVariable Target="i32CurrentBitOffset">i32CurrentBitOffset + 32</SetVariable>
						</Equal>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>3</Value2>
							<SetVariable Target="i32CurrentBitOffset">-1</SetVariable>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep Name="CheckReservedEntryRange_2_to_255">
					<Description Id="24" Level="Output">Start check reserved entry range 2 to 255</Description>
					<CallTestFunction Name="CheckReservedEntryRange">
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>2</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>odDeviceObjectdictionary</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="END">
					<Compare>
						<NotEqual>
							<Value1>bAtLeastOneModuleMatch</Value1>
							<Value2>true</Value2>
							<SkipCase Id="25">SKIP TEST(no module/channel supports the current profile)</SkipCase>
						</NotEqual>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bDEBUG</Value1>
							<Value2>true</Value2>
							<WriteLine Id="26" Param0="strResult" Level="Verbose">DEBUG | Result : '{0}'.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>strResult</Value1>
							<Value2>EmptyString</Value2>
							<ReturnSuccess Id="27">Test succeed</ReturnSuccess>
						</Equal>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>strResult</Value1>
							<Value2>EmptyString</Value2>
							<RaiseError Id="28"></RaiseError>
						</NotEqual>
					</Compare>
				</TestStep>
			</TestCase>
		</TestGroup>
		<TestGroup Name="Verify objects 0xF6F0 - 0xF6FF (CDP Device Specific Inputs)" GroupId="8">
			<TestCase Name="offline | 0xF6F0 (Input Latch Local Timestamp)" CaseId="1">
				<Description>
					<PreCondition>- The device profile is 5003
- The module profile is 2011
- The submodule profile is 0</PreCondition>
					<Action>- Iterate over all offline defined modules/channels and if the PreCondition matches the following operations are done:
- Get the offline description of object 0xF6F0(+module specific offset) 'Input Latch Local Timestamp' and all entries
 Check:
    (Name)
    BitSize
    DataType
    Rx / Tx mappable
    Default Data
    MinData
    Flags       </Action>
					<PostCondition>Error if
- mandatory object / entry is not defined
- an optional object exists and the entries are invalid
- Object / entry description does not match with the specification</PostCondition>
					<ProposalForSolution>- Define the missing objects
- correct object / entry description</ProposalForSolution>
					<References>
						<Reference Specification="ETG.5003.2011"></Reference>
					</References>
					<Mandatory>true</Mandatory>
				</Description>
				<TestStep Name="InitResult">
					<SetVariable Target="strResult">EmptyString</SetVariable>
				</TestStep>
				<TestStep Name="CheckIfOdAvailable">
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Mailbox</Value1>
							<Value2>false</Value2>
							<SkipCase Id="1">DuT does not support mailbox.</SkipCase>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Mailbox.CoE</Value1>
							<Value2>false</Value2>
							<SkipCase Id="2">DuT does not support CoE.</SkipCase>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep>
					<GetObjectDictionary Target="odDeviceObjectdictionary">
						<DictionaryType>Offline</DictionaryType>
					</GetObjectDictionary>
					<SkipOnFailure Id="3">No offline object dictionary defined.</SkipOnFailure>
				</TestStep>
				<TestStep>
					<GetObjectList Count="u32Tmp" Target="odDeviceObjectdictionaryList" SourceDict="odDeviceObjectdictionary"></GetObjectList>
					<Compare>
						<Equal>
							<Value1>u32Tmp</Value1>
							<Value2>0</Value2>
							<SkipCase Id="4">No offline object dictionary defined.</SkipCase>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="InitAtLeastOneProfileMatch">
					<SetVariable Target="bAtLeastOneModuleMatch">false</SetVariable>
				</TestStep>
				<TestStep Name="GetCurrentProfileList">
					<SizeOf UInt32Var="u32Tmp">arrOfflineProfiles</SizeOf>
					<Compare>
						<Equal>
							<Value1>u32Tmp</Value1>
							<Value2>0</Value2>
							<CallTestFunction Name="GetCurrentProfileList">
								<Parameter>"offline"</Parameter>
								<Parameter>"SafeOP"</Parameter>
								<OutParameter>arrOfflineProfiles</OutParameter>
							</CallTestFunction>
						</Equal>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>u32Tmp</Value1>
							<Value2>0</Value2>
							<WriteLine Id="5" Param0="arrOfflineProfiles" Level="Verbose">Use previously created profile list ({0})</WriteLine>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep>
					<SizeOf UInt32Var="u32Tmp">arrOfflineProfiles</SizeOf>
				</TestStep>
				<TestStep>
					<InitArray TargetArray="arrCurrentProfiles" Length="u32Tmp"></InitArray>
				</TestStep>
				<TestStep>
					<CopyArray>
						<SourceArray>arrOfflineProfiles</SourceArray>
						<DestinationArray>arrCurrentProfiles</DestinationArray>
						<Length>u32Tmp</Length>
					</CopyArray>
				</TestStep>
				<TestStep Name="IsProfileSupported">
					<CallTestFunction Name="DeviceAndModuleProfileDefined">
						<Parameter>arrCurrentProfiles</Parameter>
						<Parameter>5003</Parameter>
						<Parameter>2011</Parameter>
						<OutParameter>bAtLeastOneModuleMatch</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>bAtLeastOneModuleMatch</Value1>
							<Value2>false</Value2>
							<GotoStep>END</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="GetObjectIndexInclOffset">
					<SetVariable Target="u16ObjectIndexInclOffset">#xF6F0</SetVariable>
					<WriteLine Id="6" Param0="u16ObjectIndexInclOffset" Level="Verbose">ObjectIndex '0x{0:X}' (module independent)</WriteLine>
				</TestStep>
				<TestStep Name="LoadDeviceObjectDictionary">
					<Description Id="7" Level="Verbose">Load 'offline' object dictionary for testing.</Description>
					<GetObjectDictionary Target="odDeviceObjectdictionary">
						<DictionaryType>Offline</DictionaryType>
					</GetObjectDictionary>
					<RaiseErrorOnFailure Id="8">VerifyObject : failed to load offline object dictionary.</RaiseErrorOnFailure>
				</TestStep>
				<TestStep Name="CallCheckObjectDescription">
					<Description Id="9" Param0="u16ObjectIndexInclOffset" Level="Output">Verify the object description 0x{0:X4} 'Input Latch Local Timestamp'.</Description>
					<CallTestFunction Name="CheckObjectDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"offline"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>"Input Latch Local Timestamp"</Parameter>
						<Parameter>null</Parameter>
						<Parameter>8</Parameter>
						<Parameter>-1</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<GotoStep>END</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="InitEntryBittOffset">
					<SetVariable Target="i32CurrentBitOffset">0</SetVariable>
				</TestStep>
				<TestStep Name="StartSi0">
					<Description Id="10" Level="Output">Start validate SubIndex0</Description>
					<WriteLine Id="11" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : Subindex '0x{0:X}.0'</WriteLine>
				</TestStep>
				<TestStep Name="CallSi0CheckEntryDescription">
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"offline"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>0</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>null</Parameter>
						<Parameter>5</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>null</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>null</Parameter>
						<Parameter>null</Parameter>
						<Parameter>null</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>8</Parameter>
						<Parameter>i32CurrentBitOffset</Parameter>
						<Parameter>true</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="EndSi0">
					<SetVariable Target="i32CurrentBitOffset">16</SetVariable>
				</TestStep>
				<TestStep Name="InitProfileLoopCounter">
					<SetVariable Target="u32ProfileCounter">0</SetVariable>
				</TestStep>
				<TestStep Name="GetProfileArrayLength">
					<SizeOf UInt32Var="u32CurrentProfilesLength">arrCurrentProfiles</SizeOf>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="12" Param0="u32CurrentProfilesLength" Level="Verbose">'{0}' Profile(s) defined offline.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>u32CurrentProfilesLength</Value1>
							<Value2>0</Value2>
							<SkipCase Id="13">Skip case | no profile defined.</SkipCase>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="ProfileLoopStart">
					<GetArrayItem SourceArray="arrCurrentProfiles" Target="strTmpString" Index="u32ProfileCounter"></GetArrayItem>
				</TestStep>
				<TestStep Name="CheckProfileInformationString">
					<Compare>
						<Equal>
							<Value1>strTmpString</Value1>
							<Value2>null</Value2>
							<RaiseError Id="14" Param0="u32ProfileCounter">Profile Info element [{0}] is null.</RaiseError>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>strTmpString</Value1>
							<Value2>EmptyString</Value2>
							<RaiseError Id="15" Param0="u32ProfileCounter">Profile Info element [{0}] is an empty string.</RaiseError>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="GetDeviceProfile">
					<CallTestFunction Name="GetDeviceProfile">
						<Parameter>strTmpString</Parameter>
						<OutParameter>uint16CurDeviceProfile</OutParameter>
					</CallTestFunction>
				</TestStep>
				<TestStep Name="GetModuleProfile">
					<CallTestFunction Name="GetModuleProfile">
						<Parameter>strTmpString</Parameter>
						<OutParameter>uint16CurModuleProfile</OutParameter>
					</CallTestFunction>
				</TestStep>
				<TestStep Name="GetSubModuleProfile">
					<CallTestFunction Name="GetSubModuleProfile">
						<Parameter>strTmpString</Parameter>
						<OutParameter>uint16CurSubModuleProfile</OutParameter>
					</CallTestFunction>
				</TestStep>
				<TestStep Name="DumpProfileInfo">
					<Description Id="16" Param0="uint16CurDeviceProfile" Param1="uint16CurModuleProfile" Param2="uint16CurSubModuleProfile" Param3="u32ProfileCounter" Level="Output">Module[{3}] : DeviceProfile '{0}' ; ModuleProfile '{1}' ; SubModuleProfile '{2}'</Description>
					<Compare>
						<Equal>
							<Value1>bIgnoreProfileID</Value1>
							<Value2>true</Value2>
							<GotoStep>IndicateThatAtleastOneModuleMatch</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CompareDeviceProfile">
					<Compare>
						<NotEqual>
							<Value1>uint16CurDeviceProfile</Value1>
							<Value2>5003</Value2>
							<WriteLine Id="17" Param0="uint16CurDeviceProfile" Level="Output">Skip Profile  (Test Device Profile '5003' != Cur Device Profile '{0}')</WriteLine>
						</NotEqual>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>uint16CurDeviceProfile</Value1>
							<Value2>5003</Value2>
							<GotoStep>ProfileLoopEnd</GotoStep>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep Name="CompareModuleProfile">
					<Compare>
						<NotEqual>
							<Value1>uint16CurModuleProfile</Value1>
							<Value2>2011</Value2>
							<WriteLine Id="18" Param0="uint16CurModuleProfile" Level="Output">Skip Profile  (Test Module Profile '2011' != Cur Module Profile '{0}')</WriteLine>
						</NotEqual>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>uint16CurModuleProfile</Value1>
							<Value2>2011</Value2>
							<GotoStep>ProfileLoopEnd</GotoStep>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep Name="CompareSubModuleProfile">
					<Compare>
						<NotEqual>
							<Value1>uint16CurSubModuleProfile</Value1>
							<Value2>0</Value2>
							<WriteLine Id="19" Param0="uint16CurSubModuleProfile" Level="Output">Skip Profile  (Test SubModule Profile '0' != Cur SubModule Profile '{0}')</WriteLine>
						</NotEqual>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>uint16CurSubModuleProfile</Value1>
							<Value2>0</Value2>
							<GotoStep>ProfileLoopEnd</GotoStep>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep Name="IndicateThatAtleastOneModuleMatch">
					<SetVariable Target="bAtLeastOneModuleMatch">true</SetVariable>
				</TestStep>
				<TestStep Name="StartSi1">
					<Description Id="20" Param0="1 + (u32ProfileCounter * 1)" Level="Output">Start validate SubIndex{0}</Description>
					<SetVariable Target="byteSubIndexInclOffset">1 + (u32ProfileCounter * 1)</SetVariable>
					<WriteLine Id="21" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Param2="byteSubIndexInclOffset" Level="Verbose">Module[{1}] : Subindex '0x{0:X}.{2}'</WriteLine>
				</TestStep>
				<TestStep Name="CallSi1CheckEntryDescription">
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"offline"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>byteSubIndexInclOffset</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>null</Parameter>
						<Parameter>7</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>null</Parameter>
						<Parameter>T</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>32</Parameter>
						<Parameter>i32CurrentBitOffset</Parameter>
						<Parameter>true</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="EndSi1">
					<SetVariable Target="i32CurrentBitOffset">i32CurrentBitOffset + 32</SetVariable>
				</TestStep>
				<TestStep Name="ProfileLoopEnd">
					<Compare>
						<Equal>
							<Value1>bAtLeastOneModuleMatch</Value1>
							<Value2>false</Value2>
							<GotoStep>HandleAbortTestCaseOnFirstError</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="HandleAbortTestCaseOnFirstError">
					<Compare>
						<Equal>
							<Value1>bAbortTestCaseOnFirstError</Value1>
							<Value2>false</Value2>
							<GotoStep>ProfileLoopIncrement</GotoStep>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>strResult</Value1>
							<Value2>EmptyString</Value2>
							<GotoStep>ProfileLoopIncrement</GotoStep>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="22" Level="Output">Object verification for all following modules abort because an error was already detected for the current module.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>END</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="ProfileLoopIncrement">
					<SetVariable Target="u32ProfileCounter">u32ProfileCounter + 1</SetVariable>
					<Compare>
						<Greater>
							<Value1>u32CurrentProfilesLength</Value1>
							<Value2>u32ProfileCounter</Value2>
							<GotoStep>ProfileLoopStart</GotoStep>
						</Greater>
					</Compare>
				</TestStep>
				<TestStep Name="END">
					<Compare>
						<NotEqual>
							<Value1>bAtLeastOneModuleMatch</Value1>
							<Value2>true</Value2>
							<SkipCase Id="23">SKIP TEST(no module/channel supports the current profile)</SkipCase>
						</NotEqual>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bDEBUG</Value1>
							<Value2>true</Value2>
							<WriteLine Id="24" Param0="strResult" Level="Verbose">DEBUG | Result : '{0}'.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>strResult</Value1>
							<Value2>EmptyString</Value2>
							<ReturnSuccess Id="25">Test succeed</ReturnSuccess>
						</Equal>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>strResult</Value1>
							<Value2>EmptyString</Value2>
							<RaiseError Id="26"></RaiseError>
						</NotEqual>
					</Compare>
				</TestStep>
			</TestCase>
			<TestCase Name="online | 0xF6F0 (Input Latch Local Timestamp)" CaseId="2">
				<Description>
					<PreCondition>- The device profile is 5003
- The module profile is 2011
- The submodule profile is 0</PreCondition>
					<Action>- Iterate over all online defined modules/channels and if the PreCondition matches the following operations are done:
- Get the online description of object 0xF6F0(+module specific offset) 'Input Latch Local Timestamp' and all entries
 Check:
    (Name)
    BitSize
    DataType
    Rx / Tx mappable
    Default Data
    MinData
    Flags       </Action>
					<PostCondition>Error if
- mandatory object / entry is not defined
- an optional object exists and the entries are invalid
- Object / entry description does not match with the specification</PostCondition>
					<ProposalForSolution>- Define the missing objects
- correct object / entry description</ProposalForSolution>
					<References>
						<Reference Specification="ETG.5003.2011"></Reference>
					</References>
					<Mandatory>true</Mandatory>
				</Description>
				<TestStep Name="InitResult">
					<SetVariable Target="strResult">EmptyString</SetVariable>
				</TestStep>
				<TestStep Name="CheckIfOdAvailable">
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Mailbox</Value1>
							<Value2>false</Value2>
							<SkipCase Id="1">DuT does not support mailbox.</SkipCase>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Mailbox.CoE</Value1>
							<Value2>false</Value2>
							<SkipCase Id="2">DuT does not support CoE.</SkipCase>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Mailbox.CoE.SdoInfo</Value1>
							<Value2>false</Value2>
							<SkipCase Id="3">DuT does not support SDO Info.</SkipCase>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="InitAtLeastOneProfileMatch">
					<SetVariable Target="bAtLeastOneModuleMatch">false</SetVariable>
				</TestStep>
				<TestStep Name="GetCurrentProfileList">
					<SizeOf UInt32Var="u32Tmp">arrOnlineProfiles</SizeOf>
					<Compare>
						<Equal>
							<Value1>u32Tmp</Value1>
							<Value2>0</Value2>
							<CallTestFunction Name="GetCurrentProfileList">
								<Parameter>"online"</Parameter>
								<Parameter>"SafeOP"</Parameter>
								<OutParameter>arrOnlineProfiles</OutParameter>
							</CallTestFunction>
						</Equal>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>u32Tmp</Value1>
							<Value2>0</Value2>
							<WriteLine Id="4" Param0="arrOnlineProfiles" Level="Verbose">Use previously created profile list ({0})</WriteLine>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep>
					<SizeOf UInt32Var="u32Tmp">arrOnlineProfiles</SizeOf>
				</TestStep>
				<TestStep>
					<InitArray TargetArray="arrCurrentProfiles" Length="u32Tmp"></InitArray>
				</TestStep>
				<TestStep>
					<CopyArray>
						<SourceArray>arrOnlineProfiles</SourceArray>
						<DestinationArray>arrCurrentProfiles</DestinationArray>
						<Length>u32Tmp</Length>
					</CopyArray>
				</TestStep>
				<TestStep Name="IsProfileSupported">
					<CallTestFunction Name="DeviceAndModuleProfileDefined">
						<Parameter>arrCurrentProfiles</Parameter>
						<Parameter>5003</Parameter>
						<Parameter>2011</Parameter>
						<OutParameter>bAtLeastOneModuleMatch</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>bAtLeastOneModuleMatch</Value1>
							<Value2>false</Value2>
							<GotoStep>END</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="GetObjectIndexInclOffset">
					<SetVariable Target="u16ObjectIndexInclOffset">#xF6F0</SetVariable>
					<WriteLine Id="5" Param0="u16ObjectIndexInclOffset" Level="Verbose">ObjectIndex '0x{0:X}' (module independent)</WriteLine>
				</TestStep>
				<TestStep Name="LoadDeviceObjectDictionary">
					<Description Id="6" Level="Verbose">Load 'online' object dictionary for testing.</Description>
					<GetObjectDictionary Target="odDeviceObjectdictionary">
						<DictionaryType>Online</DictionaryType>
					</GetObjectDictionary>
					<RaiseErrorOnFailure Id="7">VerifyObject : failed to load online object dictionary.</RaiseErrorOnFailure>
				</TestStep>
				<TestStep Name="CallCheckObjectDescription">
					<Description Id="8" Param0="u16ObjectIndexInclOffset" Level="Output">Verify the object description 0x{0:X4} 'Input Latch Local Timestamp'.</Description>
					<CallTestFunction Name="CheckObjectDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"online"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>"Input Latch Local Timestamp"</Parameter>
						<Parameter>null</Parameter>
						<Parameter>8</Parameter>
						<Parameter>-1</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<GotoStep>END</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="InitEntryBittOffset">
					<SetVariable Target="i32CurrentBitOffset">0</SetVariable>
				</TestStep>
				<TestStep Name="StartSi0">
					<Description Id="9" Level="Output">Start validate SubIndex0</Description>
					<WriteLine Id="10" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : Subindex '0x{0:X}.0'</WriteLine>
				</TestStep>
				<TestStep Name="CallSi0CheckEntryDescription">
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"online"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>0</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>null</Parameter>
						<Parameter>5</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>null</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>null</Parameter>
						<Parameter>null</Parameter>
						<Parameter>null</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>8</Parameter>
						<Parameter>i32CurrentBitOffset</Parameter>
						<Parameter>true</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="EndSi0">
					<SetVariable Target="i32CurrentBitOffset">16</SetVariable>
				</TestStep>
				<TestStep Name="InitProfileLoopCounter">
					<SetVariable Target="u32ProfileCounter">0</SetVariable>
				</TestStep>
				<TestStep Name="GetProfileArrayLength">
					<SizeOf UInt32Var="u32CurrentProfilesLength">arrCurrentProfiles</SizeOf>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="11" Param0="u32CurrentProfilesLength" Level="Verbose">'{0}' Profile(s) defined online.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>u32CurrentProfilesLength</Value1>
							<Value2>0</Value2>
							<SkipCase Id="12">Skip case | no profile defined.</SkipCase>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="ProfileLoopStart">
					<GetArrayItem SourceArray="arrCurrentProfiles" Target="strTmpString" Index="u32ProfileCounter"></GetArrayItem>
				</TestStep>
				<TestStep Name="CheckProfileInformationString">
					<Compare>
						<Equal>
							<Value1>strTmpString</Value1>
							<Value2>null</Value2>
							<RaiseError Id="13" Param0="u32ProfileCounter">Profile Info element [{0}] is null.</RaiseError>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>strTmpString</Value1>
							<Value2>EmptyString</Value2>
							<RaiseError Id="14" Param0="u32ProfileCounter">Profile Info element [{0}] is an empty string.</RaiseError>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="GetDeviceProfile">
					<CallTestFunction Name="GetDeviceProfile">
						<Parameter>strTmpString</Parameter>
						<OutParameter>uint16CurDeviceProfile</OutParameter>
					</CallTestFunction>
				</TestStep>
				<TestStep Name="GetModuleProfile">
					<CallTestFunction Name="GetModuleProfile">
						<Parameter>strTmpString</Parameter>
						<OutParameter>uint16CurModuleProfile</OutParameter>
					</CallTestFunction>
				</TestStep>
				<TestStep Name="GetSubModuleProfile">
					<CallTestFunction Name="GetSubModuleProfile">
						<Parameter>strTmpString</Parameter>
						<OutParameter>uint16CurSubModuleProfile</OutParameter>
					</CallTestFunction>
				</TestStep>
				<TestStep Name="DumpProfileInfo">
					<Description Id="15" Param0="uint16CurDeviceProfile" Param1="uint16CurModuleProfile" Param2="uint16CurSubModuleProfile" Param3="u32ProfileCounter" Level="Output">Module[{3}] : DeviceProfile '{0}' ; ModuleProfile '{1}' ; SubModuleProfile '{2}'</Description>
					<Compare>
						<Equal>
							<Value1>bIgnoreProfileID</Value1>
							<Value2>true</Value2>
							<GotoStep>IndicateThatAtleastOneModuleMatch</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CompareDeviceProfile">
					<Compare>
						<NotEqual>
							<Value1>uint16CurDeviceProfile</Value1>
							<Value2>5003</Value2>
							<WriteLine Id="16" Param0="uint16CurDeviceProfile" Level="Output">Skip Profile  (Test Device Profile '5003' != Cur Device Profile '{0}')</WriteLine>
						</NotEqual>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>uint16CurDeviceProfile</Value1>
							<Value2>5003</Value2>
							<GotoStep>ProfileLoopEnd</GotoStep>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep Name="CompareModuleProfile">
					<Compare>
						<NotEqual>
							<Value1>uint16CurModuleProfile</Value1>
							<Value2>2011</Value2>
							<WriteLine Id="17" Param0="uint16CurModuleProfile" Level="Output">Skip Profile  (Test Module Profile '2011' != Cur Module Profile '{0}')</WriteLine>
						</NotEqual>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>uint16CurModuleProfile</Value1>
							<Value2>2011</Value2>
							<GotoStep>ProfileLoopEnd</GotoStep>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep Name="CompareSubModuleProfile">
					<Compare>
						<NotEqual>
							<Value1>uint16CurSubModuleProfile</Value1>
							<Value2>0</Value2>
							<WriteLine Id="18" Param0="uint16CurSubModuleProfile" Level="Output">Skip Profile  (Test SubModule Profile '0' != Cur SubModule Profile '{0}')</WriteLine>
						</NotEqual>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>uint16CurSubModuleProfile</Value1>
							<Value2>0</Value2>
							<GotoStep>ProfileLoopEnd</GotoStep>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep Name="IndicateThatAtleastOneModuleMatch">
					<SetVariable Target="bAtLeastOneModuleMatch">true</SetVariable>
				</TestStep>
				<TestStep Name="StartSi1">
					<Description Id="19" Param0="1 + (u32ProfileCounter * 1)" Level="Output">Start validate SubIndex{0}</Description>
					<SetVariable Target="byteSubIndexInclOffset">1 + (u32ProfileCounter * 1)</SetVariable>
					<WriteLine Id="20" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Param2="byteSubIndexInclOffset" Level="Verbose">Module[{1}] : Subindex '0x{0:X}.{2}'</WriteLine>
				</TestStep>
				<TestStep Name="CallSi1CheckEntryDescription">
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"online"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>byteSubIndexInclOffset</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>null</Parameter>
						<Parameter>7</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>null</Parameter>
						<Parameter>T</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>32</Parameter>
						<Parameter>i32CurrentBitOffset</Parameter>
						<Parameter>true</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="EndSi1">
					<SetVariable Target="i32CurrentBitOffset">i32CurrentBitOffset + 32</SetVariable>
				</TestStep>
				<TestStep Name="ProfileLoopEnd">
					<Compare>
						<Equal>
							<Value1>bAtLeastOneModuleMatch</Value1>
							<Value2>false</Value2>
							<GotoStep>HandleAbortTestCaseOnFirstError</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="HandleAbortTestCaseOnFirstError">
					<Compare>
						<Equal>
							<Value1>bAbortTestCaseOnFirstError</Value1>
							<Value2>false</Value2>
							<GotoStep>ProfileLoopIncrement</GotoStep>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>strResult</Value1>
							<Value2>EmptyString</Value2>
							<GotoStep>ProfileLoopIncrement</GotoStep>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="21" Level="Output">Object verification for all following modules abort because an error was already detected for the current module.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>END</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="ProfileLoopIncrement">
					<SetVariable Target="u32ProfileCounter">u32ProfileCounter + 1</SetVariable>
					<Compare>
						<Greater>
							<Value1>u32CurrentProfilesLength</Value1>
							<Value2>u32ProfileCounter</Value2>
							<GotoStep>ProfileLoopStart</GotoStep>
						</Greater>
					</Compare>
				</TestStep>
				<TestStep Name="END">
					<Compare>
						<NotEqual>
							<Value1>bAtLeastOneModuleMatch</Value1>
							<Value2>true</Value2>
							<SkipCase Id="22">SKIP TEST(no module/channel supports the current profile)</SkipCase>
						</NotEqual>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bDEBUG</Value1>
							<Value2>true</Value2>
							<WriteLine Id="23" Param0="strResult" Level="Verbose">DEBUG | Result : '{0}'.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>strResult</Value1>
							<Value2>EmptyString</Value2>
							<ReturnSuccess Id="24">Test succeed</ReturnSuccess>
						</Equal>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>strResult</Value1>
							<Value2>EmptyString</Value2>
							<RaiseError Id="25"></RaiseError>
						</NotEqual>
					</Compare>
				</TestStep>
			</TestCase>
			<TestCase Name="offline | 0xF6F1 (Input Latch ESC Timestamp (32-bit))" CaseId="3">
				<Description>
					<PreCondition>- The device profile is 5003
- The module profile is 2011
- The submodule profile is 0</PreCondition>
					<Action>- Iterate over all offline defined modules/channels and if the PreCondition matches the following operations are done:
- Get the offline description of object 0xF6F1(+module specific offset) 'Input Latch ESC Timestamp (32-bit)' and all entries
 Check:
    (Name)
    BitSize
    DataType
    Rx / Tx mappable
    Default Data
    MinData
    Flags       </Action>
					<PostCondition>Error if
- mandatory object / entry is not defined
- an optional object exists and the entries are invalid
- Object / entry description does not match with the specification</PostCondition>
					<ProposalForSolution>- Define the missing objects
- correct object / entry description</ProposalForSolution>
					<References>
						<Reference Specification="ETG.5003.2011"></Reference>
					</References>
					<Mandatory>true</Mandatory>
				</Description>
				<TestStep Name="InitResult">
					<SetVariable Target="strResult">EmptyString</SetVariable>
				</TestStep>
				<TestStep Name="CheckIfOdAvailable">
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Mailbox</Value1>
							<Value2>false</Value2>
							<SkipCase Id="1">DuT does not support mailbox.</SkipCase>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Mailbox.CoE</Value1>
							<Value2>false</Value2>
							<SkipCase Id="2">DuT does not support CoE.</SkipCase>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep>
					<GetObjectDictionary Target="odDeviceObjectdictionary">
						<DictionaryType>Offline</DictionaryType>
					</GetObjectDictionary>
					<SkipOnFailure Id="3">No offline object dictionary defined.</SkipOnFailure>
				</TestStep>
				<TestStep>
					<GetObjectList Count="u32Tmp" Target="odDeviceObjectdictionaryList" SourceDict="odDeviceObjectdictionary"></GetObjectList>
					<Compare>
						<Equal>
							<Value1>u32Tmp</Value1>
							<Value2>0</Value2>
							<SkipCase Id="4">No offline object dictionary defined.</SkipCase>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="InitAtLeastOneProfileMatch">
					<SetVariable Target="bAtLeastOneModuleMatch">false</SetVariable>
				</TestStep>
				<TestStep Name="GetCurrentProfileList">
					<SizeOf UInt32Var="u32Tmp">arrOfflineProfiles</SizeOf>
					<Compare>
						<Equal>
							<Value1>u32Tmp</Value1>
							<Value2>0</Value2>
							<CallTestFunction Name="GetCurrentProfileList">
								<Parameter>"offline"</Parameter>
								<Parameter>"SafeOP"</Parameter>
								<OutParameter>arrOfflineProfiles</OutParameter>
							</CallTestFunction>
						</Equal>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>u32Tmp</Value1>
							<Value2>0</Value2>
							<WriteLine Id="5" Param0="arrOfflineProfiles" Level="Verbose">Use previously created profile list ({0})</WriteLine>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep>
					<SizeOf UInt32Var="u32Tmp">arrOfflineProfiles</SizeOf>
				</TestStep>
				<TestStep>
					<InitArray TargetArray="arrCurrentProfiles" Length="u32Tmp"></InitArray>
				</TestStep>
				<TestStep>
					<CopyArray>
						<SourceArray>arrOfflineProfiles</SourceArray>
						<DestinationArray>arrCurrentProfiles</DestinationArray>
						<Length>u32Tmp</Length>
					</CopyArray>
				</TestStep>
				<TestStep Name="IsProfileSupported">
					<CallTestFunction Name="DeviceAndModuleProfileDefined">
						<Parameter>arrCurrentProfiles</Parameter>
						<Parameter>5003</Parameter>
						<Parameter>2011</Parameter>
						<OutParameter>bAtLeastOneModuleMatch</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>bAtLeastOneModuleMatch</Value1>
							<Value2>false</Value2>
							<GotoStep>END</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="GetObjectIndexInclOffset">
					<SetVariable Target="u16ObjectIndexInclOffset">#xF6F1</SetVariable>
					<WriteLine Id="6" Param0="u16ObjectIndexInclOffset" Level="Verbose">ObjectIndex '0x{0:X}' (module independent)</WriteLine>
				</TestStep>
				<TestStep Name="LoadDeviceObjectDictionary">
					<Description Id="7" Level="Verbose">Load 'offline' object dictionary for testing.</Description>
					<GetObjectDictionary Target="odDeviceObjectdictionary">
						<DictionaryType>Offline</DictionaryType>
					</GetObjectDictionary>
					<RaiseErrorOnFailure Id="8">VerifyObject : failed to load offline object dictionary.</RaiseErrorOnFailure>
				</TestStep>
				<TestStep Name="SetObjectRequiredLevel">
					<SetVariable Target="bObjectOrEntryRequiredLevel">1</SetVariable>
					<WriteLine Id="9" Param0="u16ObjectIndexInclOffset" Level="Verbose">0x{0:X4} 'Input Latch ESC Timestamp (32-bit)' may be available</WriteLine>
				</TestStep>
				<TestStep Name="CheckIfObjectExists">
					<GetObjectDescription SourceDictionary="odDeviceObjectdictionary" Index="u16ObjectIndexInclOffset" SubIndex="-1"></GetObjectDescription>
					<GotoOnSuccess>CallCheckObjectDescription</GotoOnSuccess>
				</TestStep>
				<TestStep Name="HandleNotExistingObject">
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>3</Value2>
							<SetVariable Target="strResult" Param0="u16ObjectIndexInclOffset">The object 0x{0:X4} 'Input Latch ESC Timestamp (32-bit)' does not exists.</SetVariable>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>3</Value2>
							<WriteLine Id="10" Param0="u16ObjectIndexInclOffset" Level="Error">The object 0x{0:X4} 'Input Latch ESC Timestamp (32-bit)' does not exists.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>2</Value2>
							<WriteLine Id="11" Param0="u16ObjectIndexInclOffset" Level="Warning">The object 0x{0:X4} 'Input Latch ESC Timestamp (32-bit)' does not exists.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>1</Value2>
							<WriteLine Id="12" Param0="u16ObjectIndexInclOffset" Level="Output">The object 0x{0:X4} 'Input Latch ESC Timestamp (32-bit)' does not exists.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>END</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CallCheckObjectDescription">
					<Description Id="13" Param0="u16ObjectIndexInclOffset" Level="Output">Verify the object description 0x{0:X4} 'Input Latch ESC Timestamp (32-bit)'.</Description>
					<CallTestFunction Name="CheckObjectDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"offline"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>"Input Latch ESC Timestamp (32-bit)"</Parameter>
						<Parameter>null</Parameter>
						<Parameter>8</Parameter>
						<Parameter>-1</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<GotoStep>END</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="InitEntryBittOffset">
					<SetVariable Target="i32CurrentBitOffset">0</SetVariable>
				</TestStep>
				<TestStep Name="StartSi0">
					<Description Id="14" Level="Output">Start validate SubIndex0</Description>
					<WriteLine Id="15" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : Subindex '0x{0:X}.0'</WriteLine>
				</TestStep>
				<TestStep Name="CallSi0CheckEntryDescription">
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"offline"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>0</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>null</Parameter>
						<Parameter>5</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>null</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>null</Parameter>
						<Parameter>null</Parameter>
						<Parameter>null</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>8</Parameter>
						<Parameter>i32CurrentBitOffset</Parameter>
						<Parameter>true</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="EndSi0">
					<SetVariable Target="i32CurrentBitOffset">16</SetVariable>
				</TestStep>
				<TestStep Name="InitProfileLoopCounter">
					<SetVariable Target="u32ProfileCounter">0</SetVariable>
				</TestStep>
				<TestStep Name="GetProfileArrayLength">
					<SizeOf UInt32Var="u32CurrentProfilesLength">arrCurrentProfiles</SizeOf>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="16" Param0="u32CurrentProfilesLength" Level="Verbose">'{0}' Profile(s) defined offline.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>u32CurrentProfilesLength</Value1>
							<Value2>0</Value2>
							<SkipCase Id="17">Skip case | no profile defined.</SkipCase>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="ProfileLoopStart">
					<GetArrayItem SourceArray="arrCurrentProfiles" Target="strTmpString" Index="u32ProfileCounter"></GetArrayItem>
				</TestStep>
				<TestStep Name="CheckProfileInformationString">
					<Compare>
						<Equal>
							<Value1>strTmpString</Value1>
							<Value2>null</Value2>
							<RaiseError Id="18" Param0="u32ProfileCounter">Profile Info element [{0}] is null.</RaiseError>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>strTmpString</Value1>
							<Value2>EmptyString</Value2>
							<RaiseError Id="19" Param0="u32ProfileCounter">Profile Info element [{0}] is an empty string.</RaiseError>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="GetDeviceProfile">
					<CallTestFunction Name="GetDeviceProfile">
						<Parameter>strTmpString</Parameter>
						<OutParameter>uint16CurDeviceProfile</OutParameter>
					</CallTestFunction>
				</TestStep>
				<TestStep Name="GetModuleProfile">
					<CallTestFunction Name="GetModuleProfile">
						<Parameter>strTmpString</Parameter>
						<OutParameter>uint16CurModuleProfile</OutParameter>
					</CallTestFunction>
				</TestStep>
				<TestStep Name="GetSubModuleProfile">
					<CallTestFunction Name="GetSubModuleProfile">
						<Parameter>strTmpString</Parameter>
						<OutParameter>uint16CurSubModuleProfile</OutParameter>
					</CallTestFunction>
				</TestStep>
				<TestStep Name="DumpProfileInfo">
					<Description Id="20" Param0="uint16CurDeviceProfile" Param1="uint16CurModuleProfile" Param2="uint16CurSubModuleProfile" Param3="u32ProfileCounter" Level="Output">Module[{3}] : DeviceProfile '{0}' ; ModuleProfile '{1}' ; SubModuleProfile '{2}'</Description>
					<Compare>
						<Equal>
							<Value1>bIgnoreProfileID</Value1>
							<Value2>true</Value2>
							<GotoStep>IndicateThatAtleastOneModuleMatch</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CompareDeviceProfile">
					<Compare>
						<NotEqual>
							<Value1>uint16CurDeviceProfile</Value1>
							<Value2>5003</Value2>
							<WriteLine Id="21" Param0="uint16CurDeviceProfile" Level="Output">Skip Profile  (Test Device Profile '5003' != Cur Device Profile '{0}')</WriteLine>
						</NotEqual>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>uint16CurDeviceProfile</Value1>
							<Value2>5003</Value2>
							<GotoStep>ProfileLoopEnd</GotoStep>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep Name="CompareModuleProfile">
					<Compare>
						<NotEqual>
							<Value1>uint16CurModuleProfile</Value1>
							<Value2>2011</Value2>
							<WriteLine Id="22" Param0="uint16CurModuleProfile" Level="Output">Skip Profile  (Test Module Profile '2011' != Cur Module Profile '{0}')</WriteLine>
						</NotEqual>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>uint16CurModuleProfile</Value1>
							<Value2>2011</Value2>
							<GotoStep>ProfileLoopEnd</GotoStep>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep Name="CompareSubModuleProfile">
					<Compare>
						<NotEqual>
							<Value1>uint16CurSubModuleProfile</Value1>
							<Value2>0</Value2>
							<WriteLine Id="23" Param0="uint16CurSubModuleProfile" Level="Output">Skip Profile  (Test SubModule Profile '0' != Cur SubModule Profile '{0}')</WriteLine>
						</NotEqual>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>uint16CurSubModuleProfile</Value1>
							<Value2>0</Value2>
							<GotoStep>ProfileLoopEnd</GotoStep>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep Name="IndicateThatAtleastOneModuleMatch">
					<SetVariable Target="bAtLeastOneModuleMatch">true</SetVariable>
				</TestStep>
				<TestStep Name="StartSi1">
					<Description Id="24" Param0="1 + (u32ProfileCounter * 1)" Level="Output">Start validate SubIndex{0}</Description>
					<SetVariable Target="byteSubIndexInclOffset">1 + (u32ProfileCounter * 1)</SetVariable>
					<WriteLine Id="25" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Param2="byteSubIndexInclOffset" Level="Verbose">Module[{1}] : Subindex '0x{0:X}.{2}'</WriteLine>
				</TestStep>
				<TestStep Name="SetSi1RequiredLevel">
					<SetVariable Target="bObjectOrEntryRequiredLevel">1</SetVariable>
					<WriteLine Id="26" Param0="u16ObjectIndexInclOffset" Param1="byteSubIndexInclOffset" Level="Verbose">0x{0:X4}.{1} may be available</WriteLine>
				</TestStep>
				<TestStep Name="CheckIfSi1Exists">
					<GetObjectDescription SourceDictionary="odDeviceObjectdictionary" Index="u16ObjectIndexInclOffset" SubIndex="byteSubIndexInclOffset">
						<Type>u16DataType</Type>
					</GetObjectDescription>
					<GotoOnFailure>HandleNotExistingSi1</GotoOnFailure>
				</TestStep>
				<TestStep>
					<Compare>
						<NotEqual>
							<Value1>u16DataType</Value1>
							<Value2>0</Value2>
							<GotoStep>CallSi1CheckEntryDescription</GotoStep>
						</NotEqual>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>1</Value2>
							<WriteLine Id="27" Param0="u16ObjectIndexInclOffset" Level="Verbose">The entry 0x{0:X4}.1 is defined as a padding entry.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>EndSi1</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="HandleNotExistingSi1">
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="28" Param0="u16ObjectIndexInclOffset" Param1="byteSubIndexInclOffset" Level="Output">The entry 0x{0:X4}.{1} does not exists.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>EndSi1</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CallSi1CheckEntryDescription">
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"offline"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>byteSubIndexInclOffset</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>null</Parameter>
						<Parameter>7</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>null</Parameter>
						<Parameter>T</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>32</Parameter>
						<Parameter>i32CurrentBitOffset</Parameter>
						<Parameter>true</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="EndSi1">
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>3</Value2>
							<SetVariable Target="i32CurrentBitOffset">i32CurrentBitOffset + 32</SetVariable>
						</Equal>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>3</Value2>
							<SetVariable Target="i32CurrentBitOffset">-1</SetVariable>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep Name="ProfileLoopEnd">
					<Compare>
						<Equal>
							<Value1>bAtLeastOneModuleMatch</Value1>
							<Value2>false</Value2>
							<GotoStep>HandleAbortTestCaseOnFirstError</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="HandleAbortTestCaseOnFirstError">
					<Compare>
						<Equal>
							<Value1>bAbortTestCaseOnFirstError</Value1>
							<Value2>false</Value2>
							<GotoStep>ProfileLoopIncrement</GotoStep>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>strResult</Value1>
							<Value2>EmptyString</Value2>
							<GotoStep>ProfileLoopIncrement</GotoStep>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="29" Level="Output">Object verification for all following modules abort because an error was already detected for the current module.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>END</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="ProfileLoopIncrement">
					<SetVariable Target="u32ProfileCounter">u32ProfileCounter + 1</SetVariable>
					<Compare>
						<Greater>
							<Value1>u32CurrentProfilesLength</Value1>
							<Value2>u32ProfileCounter</Value2>
							<GotoStep>ProfileLoopStart</GotoStep>
						</Greater>
					</Compare>
				</TestStep>
				<TestStep Name="END">
					<Compare>
						<NotEqual>
							<Value1>bAtLeastOneModuleMatch</Value1>
							<Value2>true</Value2>
							<SkipCase Id="30">SKIP TEST(no module/channel supports the current profile)</SkipCase>
						</NotEqual>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bDEBUG</Value1>
							<Value2>true</Value2>
							<WriteLine Id="31" Param0="strResult" Level="Verbose">DEBUG | Result : '{0}'.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>strResult</Value1>
							<Value2>EmptyString</Value2>
							<ReturnSuccess Id="32">Test succeed</ReturnSuccess>
						</Equal>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>strResult</Value1>
							<Value2>EmptyString</Value2>
							<RaiseError Id="33"></RaiseError>
						</NotEqual>
					</Compare>
				</TestStep>
			</TestCase>
			<TestCase Name="online | 0xF6F1 (Input Latch ESC Timestamp (32-bit))" CaseId="4">
				<Description>
					<PreCondition>- The device profile is 5003
- The module profile is 2011
- The submodule profile is 0</PreCondition>
					<Action>- Iterate over all online defined modules/channels and if the PreCondition matches the following operations are done:
- Get the online description of object 0xF6F1(+module specific offset) 'Input Latch ESC Timestamp (32-bit)' and all entries
 Check:
    (Name)
    BitSize
    DataType
    Rx / Tx mappable
    Default Data
    MinData
    Flags       </Action>
					<PostCondition>Error if
- mandatory object / entry is not defined
- an optional object exists and the entries are invalid
- Object / entry description does not match with the specification</PostCondition>
					<ProposalForSolution>- Define the missing objects
- correct object / entry description</ProposalForSolution>
					<References>
						<Reference Specification="ETG.5003.2011"></Reference>
					</References>
					<Mandatory>true</Mandatory>
				</Description>
				<TestStep Name="InitResult">
					<SetVariable Target="strResult">EmptyString</SetVariable>
				</TestStep>
				<TestStep Name="CheckIfOdAvailable">
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Mailbox</Value1>
							<Value2>false</Value2>
							<SkipCase Id="1">DuT does not support mailbox.</SkipCase>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Mailbox.CoE</Value1>
							<Value2>false</Value2>
							<SkipCase Id="2">DuT does not support CoE.</SkipCase>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Mailbox.CoE.SdoInfo</Value1>
							<Value2>false</Value2>
							<SkipCase Id="3">DuT does not support SDO Info.</SkipCase>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="InitAtLeastOneProfileMatch">
					<SetVariable Target="bAtLeastOneModuleMatch">false</SetVariable>
				</TestStep>
				<TestStep Name="GetCurrentProfileList">
					<SizeOf UInt32Var="u32Tmp">arrOnlineProfiles</SizeOf>
					<Compare>
						<Equal>
							<Value1>u32Tmp</Value1>
							<Value2>0</Value2>
							<CallTestFunction Name="GetCurrentProfileList">
								<Parameter>"online"</Parameter>
								<Parameter>"SafeOP"</Parameter>
								<OutParameter>arrOnlineProfiles</OutParameter>
							</CallTestFunction>
						</Equal>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>u32Tmp</Value1>
							<Value2>0</Value2>
							<WriteLine Id="4" Param0="arrOnlineProfiles" Level="Verbose">Use previously created profile list ({0})</WriteLine>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep>
					<SizeOf UInt32Var="u32Tmp">arrOnlineProfiles</SizeOf>
				</TestStep>
				<TestStep>
					<InitArray TargetArray="arrCurrentProfiles" Length="u32Tmp"></InitArray>
				</TestStep>
				<TestStep>
					<CopyArray>
						<SourceArray>arrOnlineProfiles</SourceArray>
						<DestinationArray>arrCurrentProfiles</DestinationArray>
						<Length>u32Tmp</Length>
					</CopyArray>
				</TestStep>
				<TestStep Name="IsProfileSupported">
					<CallTestFunction Name="DeviceAndModuleProfileDefined">
						<Parameter>arrCurrentProfiles</Parameter>
						<Parameter>5003</Parameter>
						<Parameter>2011</Parameter>
						<OutParameter>bAtLeastOneModuleMatch</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>bAtLeastOneModuleMatch</Value1>
							<Value2>false</Value2>
							<GotoStep>END</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="GetObjectIndexInclOffset">
					<SetVariable Target="u16ObjectIndexInclOffset">#xF6F1</SetVariable>
					<WriteLine Id="5" Param0="u16ObjectIndexInclOffset" Level="Verbose">ObjectIndex '0x{0:X}' (module independent)</WriteLine>
				</TestStep>
				<TestStep Name="LoadDeviceObjectDictionary">
					<Description Id="6" Level="Verbose">Load 'online' object dictionary for testing.</Description>
					<GetObjectDictionary Target="odDeviceObjectdictionary">
						<DictionaryType>Online</DictionaryType>
					</GetObjectDictionary>
					<RaiseErrorOnFailure Id="7">VerifyObject : failed to load online object dictionary.</RaiseErrorOnFailure>
				</TestStep>
				<TestStep Name="SetObjectRequiredLevel">
					<SetVariable Target="bObjectOrEntryRequiredLevel">1</SetVariable>
					<WriteLine Id="8" Param0="u16ObjectIndexInclOffset" Level="Verbose">0x{0:X4} 'Input Latch ESC Timestamp (32-bit)' may be available</WriteLine>
				</TestStep>
				<TestStep Name="CheckIfObjectExists">
					<GetObjectDescription SourceDictionary="odDeviceObjectdictionary" Index="u16ObjectIndexInclOffset" SubIndex="-1"></GetObjectDescription>
					<GotoOnSuccess>CallCheckObjectDescription</GotoOnSuccess>
				</TestStep>
				<TestStep Name="HandleNotExistingObject">
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>3</Value2>
							<SetVariable Target="strResult" Param0="u16ObjectIndexInclOffset">The object 0x{0:X4} 'Input Latch ESC Timestamp (32-bit)' does not exists.</SetVariable>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>3</Value2>
							<WriteLine Id="9" Param0="u16ObjectIndexInclOffset" Level="Error">The object 0x{0:X4} 'Input Latch ESC Timestamp (32-bit)' does not exists.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>2</Value2>
							<WriteLine Id="10" Param0="u16ObjectIndexInclOffset" Level="Warning">The object 0x{0:X4} 'Input Latch ESC Timestamp (32-bit)' does not exists.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>1</Value2>
							<WriteLine Id="11" Param0="u16ObjectIndexInclOffset" Level="Output">The object 0x{0:X4} 'Input Latch ESC Timestamp (32-bit)' does not exists.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>END</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CallCheckObjectDescription">
					<Description Id="12" Param0="u16ObjectIndexInclOffset" Level="Output">Verify the object description 0x{0:X4} 'Input Latch ESC Timestamp (32-bit)'.</Description>
					<CallTestFunction Name="CheckObjectDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"online"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>"Input Latch ESC Timestamp (32-bit)"</Parameter>
						<Parameter>null</Parameter>
						<Parameter>8</Parameter>
						<Parameter>-1</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<GotoStep>END</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="InitEntryBittOffset">
					<SetVariable Target="i32CurrentBitOffset">0</SetVariable>
				</TestStep>
				<TestStep Name="StartSi0">
					<Description Id="13" Level="Output">Start validate SubIndex0</Description>
					<WriteLine Id="14" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : Subindex '0x{0:X}.0'</WriteLine>
				</TestStep>
				<TestStep Name="CallSi0CheckEntryDescription">
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"online"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>0</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>null</Parameter>
						<Parameter>5</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>null</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>null</Parameter>
						<Parameter>null</Parameter>
						<Parameter>null</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>8</Parameter>
						<Parameter>i32CurrentBitOffset</Parameter>
						<Parameter>true</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="EndSi0">
					<SetVariable Target="i32CurrentBitOffset">16</SetVariable>
				</TestStep>
				<TestStep Name="InitProfileLoopCounter">
					<SetVariable Target="u32ProfileCounter">0</SetVariable>
				</TestStep>
				<TestStep Name="GetProfileArrayLength">
					<SizeOf UInt32Var="u32CurrentProfilesLength">arrCurrentProfiles</SizeOf>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="15" Param0="u32CurrentProfilesLength" Level="Verbose">'{0}' Profile(s) defined online.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>u32CurrentProfilesLength</Value1>
							<Value2>0</Value2>
							<SkipCase Id="16">Skip case | no profile defined.</SkipCase>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="ProfileLoopStart">
					<GetArrayItem SourceArray="arrCurrentProfiles" Target="strTmpString" Index="u32ProfileCounter"></GetArrayItem>
				</TestStep>
				<TestStep Name="CheckProfileInformationString">
					<Compare>
						<Equal>
							<Value1>strTmpString</Value1>
							<Value2>null</Value2>
							<RaiseError Id="17" Param0="u32ProfileCounter">Profile Info element [{0}] is null.</RaiseError>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>strTmpString</Value1>
							<Value2>EmptyString</Value2>
							<RaiseError Id="18" Param0="u32ProfileCounter">Profile Info element [{0}] is an empty string.</RaiseError>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="GetDeviceProfile">
					<CallTestFunction Name="GetDeviceProfile">
						<Parameter>strTmpString</Parameter>
						<OutParameter>uint16CurDeviceProfile</OutParameter>
					</CallTestFunction>
				</TestStep>
				<TestStep Name="GetModuleProfile">
					<CallTestFunction Name="GetModuleProfile">
						<Parameter>strTmpString</Parameter>
						<OutParameter>uint16CurModuleProfile</OutParameter>
					</CallTestFunction>
				</TestStep>
				<TestStep Name="GetSubModuleProfile">
					<CallTestFunction Name="GetSubModuleProfile">
						<Parameter>strTmpString</Parameter>
						<OutParameter>uint16CurSubModuleProfile</OutParameter>
					</CallTestFunction>
				</TestStep>
				<TestStep Name="DumpProfileInfo">
					<Description Id="19" Param0="uint16CurDeviceProfile" Param1="uint16CurModuleProfile" Param2="uint16CurSubModuleProfile" Param3="u32ProfileCounter" Level="Output">Module[{3}] : DeviceProfile '{0}' ; ModuleProfile '{1}' ; SubModuleProfile '{2}'</Description>
					<Compare>
						<Equal>
							<Value1>bIgnoreProfileID</Value1>
							<Value2>true</Value2>
							<GotoStep>IndicateThatAtleastOneModuleMatch</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CompareDeviceProfile">
					<Compare>
						<NotEqual>
							<Value1>uint16CurDeviceProfile</Value1>
							<Value2>5003</Value2>
							<WriteLine Id="20" Param0="uint16CurDeviceProfile" Level="Output">Skip Profile  (Test Device Profile '5003' != Cur Device Profile '{0}')</WriteLine>
						</NotEqual>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>uint16CurDeviceProfile</Value1>
							<Value2>5003</Value2>
							<GotoStep>ProfileLoopEnd</GotoStep>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep Name="CompareModuleProfile">
					<Compare>
						<NotEqual>
							<Value1>uint16CurModuleProfile</Value1>
							<Value2>2011</Value2>
							<WriteLine Id="21" Param0="uint16CurModuleProfile" Level="Output">Skip Profile  (Test Module Profile '2011' != Cur Module Profile '{0}')</WriteLine>
						</NotEqual>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>uint16CurModuleProfile</Value1>
							<Value2>2011</Value2>
							<GotoStep>ProfileLoopEnd</GotoStep>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep Name="CompareSubModuleProfile">
					<Compare>
						<NotEqual>
							<Value1>uint16CurSubModuleProfile</Value1>
							<Value2>0</Value2>
							<WriteLine Id="22" Param0="uint16CurSubModuleProfile" Level="Output">Skip Profile  (Test SubModule Profile '0' != Cur SubModule Profile '{0}')</WriteLine>
						</NotEqual>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>uint16CurSubModuleProfile</Value1>
							<Value2>0</Value2>
							<GotoStep>ProfileLoopEnd</GotoStep>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep Name="IndicateThatAtleastOneModuleMatch">
					<SetVariable Target="bAtLeastOneModuleMatch">true</SetVariable>
				</TestStep>
				<TestStep Name="StartSi1">
					<Description Id="23" Param0="1 + (u32ProfileCounter * 1)" Level="Output">Start validate SubIndex{0}</Description>
					<SetVariable Target="byteSubIndexInclOffset">1 + (u32ProfileCounter * 1)</SetVariable>
					<WriteLine Id="24" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Param2="byteSubIndexInclOffset" Level="Verbose">Module[{1}] : Subindex '0x{0:X}.{2}'</WriteLine>
				</TestStep>
				<TestStep Name="SetSi1RequiredLevel">
					<SetVariable Target="bObjectOrEntryRequiredLevel">1</SetVariable>
					<WriteLine Id="25" Param0="u16ObjectIndexInclOffset" Param1="byteSubIndexInclOffset" Level="Verbose">0x{0:X4}.{1} may be available</WriteLine>
				</TestStep>
				<TestStep Name="CheckIfSi1Exists">
					<GetObjectDescription SourceDictionary="odDeviceObjectdictionary" Index="u16ObjectIndexInclOffset" SubIndex="byteSubIndexInclOffset">
						<Type>u16DataType</Type>
					</GetObjectDescription>
					<GotoOnFailure>HandleNotExistingSi1</GotoOnFailure>
				</TestStep>
				<TestStep>
					<Compare>
						<NotEqual>
							<Value1>u16DataType</Value1>
							<Value2>0</Value2>
							<GotoStep>CallSi1CheckEntryDescription</GotoStep>
						</NotEqual>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>1</Value2>
							<WriteLine Id="26" Param0="u16ObjectIndexInclOffset" Level="Verbose">The entry 0x{0:X4}.1 is defined as a padding entry.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>EndSi1</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="HandleNotExistingSi1">
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="27" Param0="u16ObjectIndexInclOffset" Param1="byteSubIndexInclOffset" Level="Output">The entry 0x{0:X4}.{1} does not exists.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>EndSi1</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CallSi1CheckEntryDescription">
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"online"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>byteSubIndexInclOffset</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>null</Parameter>
						<Parameter>7</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>null</Parameter>
						<Parameter>T</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>32</Parameter>
						<Parameter>i32CurrentBitOffset</Parameter>
						<Parameter>true</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="EndSi1">
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>3</Value2>
							<SetVariable Target="i32CurrentBitOffset">i32CurrentBitOffset + 32</SetVariable>
						</Equal>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>3</Value2>
							<SetVariable Target="i32CurrentBitOffset">-1</SetVariable>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep Name="ProfileLoopEnd">
					<Compare>
						<Equal>
							<Value1>bAtLeastOneModuleMatch</Value1>
							<Value2>false</Value2>
							<GotoStep>HandleAbortTestCaseOnFirstError</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="HandleAbortTestCaseOnFirstError">
					<Compare>
						<Equal>
							<Value1>bAbortTestCaseOnFirstError</Value1>
							<Value2>false</Value2>
							<GotoStep>ProfileLoopIncrement</GotoStep>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>strResult</Value1>
							<Value2>EmptyString</Value2>
							<GotoStep>ProfileLoopIncrement</GotoStep>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="28" Level="Output">Object verification for all following modules abort because an error was already detected for the current module.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>END</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="ProfileLoopIncrement">
					<SetVariable Target="u32ProfileCounter">u32ProfileCounter + 1</SetVariable>
					<Compare>
						<Greater>
							<Value1>u32CurrentProfilesLength</Value1>
							<Value2>u32ProfileCounter</Value2>
							<GotoStep>ProfileLoopStart</GotoStep>
						</Greater>
					</Compare>
				</TestStep>
				<TestStep Name="END">
					<Compare>
						<NotEqual>
							<Value1>bAtLeastOneModuleMatch</Value1>
							<Value2>true</Value2>
							<SkipCase Id="29">SKIP TEST(no module/channel supports the current profile)</SkipCase>
						</NotEqual>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bDEBUG</Value1>
							<Value2>true</Value2>
							<WriteLine Id="30" Param0="strResult" Level="Verbose">DEBUG | Result : '{0}'.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>strResult</Value1>
							<Value2>EmptyString</Value2>
							<ReturnSuccess Id="31">Test succeed</ReturnSuccess>
						</Equal>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>strResult</Value1>
							<Value2>EmptyString</Value2>
							<RaiseError Id="32"></RaiseError>
						</NotEqual>
					</Compare>
				</TestStep>
			</TestCase>
			<TestCase Name="offline | 0xF6F2 (Input Latch ESC Timestamp (64-bit))" CaseId="5">
				<Description>
					<PreCondition>- The device profile is 5003
- The module profile is 2011
- The submodule profile is 0</PreCondition>
					<Action>- Iterate over all offline defined modules/channels and if the PreCondition matches the following operations are done:
- Get the offline description of object 0xF6F2(+module specific offset) 'Input Latch ESC Timestamp (64-bit)' and all entries
 Check:
    (Name)
    BitSize
    DataType
    Rx / Tx mappable
    Default Data
    MinData
    Flags       </Action>
					<PostCondition>Error if
- mandatory object / entry is not defined
- an optional object exists and the entries are invalid
- Object / entry description does not match with the specification</PostCondition>
					<ProposalForSolution>- Define the missing objects
- correct object / entry description</ProposalForSolution>
					<References>
						<Reference Specification="ETG.5003.2011"></Reference>
					</References>
					<Mandatory>true</Mandatory>
				</Description>
				<TestStep Name="InitResult">
					<SetVariable Target="strResult">EmptyString</SetVariable>
				</TestStep>
				<TestStep Name="CheckIfOdAvailable">
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Mailbox</Value1>
							<Value2>false</Value2>
							<SkipCase Id="1">DuT does not support mailbox.</SkipCase>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Mailbox.CoE</Value1>
							<Value2>false</Value2>
							<SkipCase Id="2">DuT does not support CoE.</SkipCase>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep>
					<GetObjectDictionary Target="odDeviceObjectdictionary">
						<DictionaryType>Offline</DictionaryType>
					</GetObjectDictionary>
					<SkipOnFailure Id="3">No offline object dictionary defined.</SkipOnFailure>
				</TestStep>
				<TestStep>
					<GetObjectList Count="u32Tmp" Target="odDeviceObjectdictionaryList" SourceDict="odDeviceObjectdictionary"></GetObjectList>
					<Compare>
						<Equal>
							<Value1>u32Tmp</Value1>
							<Value2>0</Value2>
							<SkipCase Id="4">No offline object dictionary defined.</SkipCase>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="InitAtLeastOneProfileMatch">
					<SetVariable Target="bAtLeastOneModuleMatch">false</SetVariable>
				</TestStep>
				<TestStep Name="GetCurrentProfileList">
					<SizeOf UInt32Var="u32Tmp">arrOfflineProfiles</SizeOf>
					<Compare>
						<Equal>
							<Value1>u32Tmp</Value1>
							<Value2>0</Value2>
							<CallTestFunction Name="GetCurrentProfileList">
								<Parameter>"offline"</Parameter>
								<Parameter>"SafeOP"</Parameter>
								<OutParameter>arrOfflineProfiles</OutParameter>
							</CallTestFunction>
						</Equal>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>u32Tmp</Value1>
							<Value2>0</Value2>
							<WriteLine Id="5" Param0="arrOfflineProfiles" Level="Verbose">Use previously created profile list ({0})</WriteLine>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep>
					<SizeOf UInt32Var="u32Tmp">arrOfflineProfiles</SizeOf>
				</TestStep>
				<TestStep>
					<InitArray TargetArray="arrCurrentProfiles" Length="u32Tmp"></InitArray>
				</TestStep>
				<TestStep>
					<CopyArray>
						<SourceArray>arrOfflineProfiles</SourceArray>
						<DestinationArray>arrCurrentProfiles</DestinationArray>
						<Length>u32Tmp</Length>
					</CopyArray>
				</TestStep>
				<TestStep Name="IsProfileSupported">
					<CallTestFunction Name="DeviceAndModuleProfileDefined">
						<Parameter>arrCurrentProfiles</Parameter>
						<Parameter>5003</Parameter>
						<Parameter>2011</Parameter>
						<OutParameter>bAtLeastOneModuleMatch</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>bAtLeastOneModuleMatch</Value1>
							<Value2>false</Value2>
							<GotoStep>END</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="GetObjectIndexInclOffset">
					<SetVariable Target="u16ObjectIndexInclOffset">#xF6F2</SetVariable>
					<WriteLine Id="6" Param0="u16ObjectIndexInclOffset" Level="Verbose">ObjectIndex '0x{0:X}' (module independent)</WriteLine>
				</TestStep>
				<TestStep Name="LoadDeviceObjectDictionary">
					<Description Id="7" Level="Verbose">Load 'offline' object dictionary for testing.</Description>
					<GetObjectDictionary Target="odDeviceObjectdictionary">
						<DictionaryType>Offline</DictionaryType>
					</GetObjectDictionary>
					<RaiseErrorOnFailure Id="8">VerifyObject : failed to load offline object dictionary.</RaiseErrorOnFailure>
				</TestStep>
				<TestStep Name="SetObjectRequiredLevel">
					<SetVariable Target="bObjectOrEntryRequiredLevel">1</SetVariable>
					<WriteLine Id="9" Param0="u16ObjectIndexInclOffset" Level="Verbose">0x{0:X4} 'Input Latch ESC Timestamp (64-bit)' may be available</WriteLine>
				</TestStep>
				<TestStep Name="CheckIfObjectExists">
					<GetObjectDescription SourceDictionary="odDeviceObjectdictionary" Index="u16ObjectIndexInclOffset" SubIndex="-1"></GetObjectDescription>
					<GotoOnSuccess>CallCheckObjectDescription</GotoOnSuccess>
				</TestStep>
				<TestStep Name="HandleNotExistingObject">
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>3</Value2>
							<SetVariable Target="strResult" Param0="u16ObjectIndexInclOffset">The object 0x{0:X4} 'Input Latch ESC Timestamp (64-bit)' does not exists.</SetVariable>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>3</Value2>
							<WriteLine Id="10" Param0="u16ObjectIndexInclOffset" Level="Error">The object 0x{0:X4} 'Input Latch ESC Timestamp (64-bit)' does not exists.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>2</Value2>
							<WriteLine Id="11" Param0="u16ObjectIndexInclOffset" Level="Warning">The object 0x{0:X4} 'Input Latch ESC Timestamp (64-bit)' does not exists.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>1</Value2>
							<WriteLine Id="12" Param0="u16ObjectIndexInclOffset" Level="Output">The object 0x{0:X4} 'Input Latch ESC Timestamp (64-bit)' does not exists.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>END</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CallCheckObjectDescription">
					<Description Id="13" Param0="u16ObjectIndexInclOffset" Level="Output">Verify the object description 0x{0:X4} 'Input Latch ESC Timestamp (64-bit)'.</Description>
					<CallTestFunction Name="CheckObjectDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"offline"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>"Input Latch ESC Timestamp (64-bit)"</Parameter>
						<Parameter>null</Parameter>
						<Parameter>8</Parameter>
						<Parameter>-1</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<GotoStep>END</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="InitEntryBittOffset">
					<SetVariable Target="i32CurrentBitOffset">0</SetVariable>
				</TestStep>
				<TestStep Name="StartSi0">
					<Description Id="14" Level="Output">Start validate SubIndex0</Description>
					<WriteLine Id="15" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : Subindex '0x{0:X}.0'</WriteLine>
				</TestStep>
				<TestStep Name="CallSi0CheckEntryDescription">
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"offline"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>0</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>null</Parameter>
						<Parameter>5</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>null</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>null</Parameter>
						<Parameter>null</Parameter>
						<Parameter>null</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>8</Parameter>
						<Parameter>i32CurrentBitOffset</Parameter>
						<Parameter>true</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="EndSi0">
					<SetVariable Target="i32CurrentBitOffset">16</SetVariable>
				</TestStep>
				<TestStep Name="InitProfileLoopCounter">
					<SetVariable Target="u32ProfileCounter">0</SetVariable>
				</TestStep>
				<TestStep Name="GetProfileArrayLength">
					<SizeOf UInt32Var="u32CurrentProfilesLength">arrCurrentProfiles</SizeOf>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="16" Param0="u32CurrentProfilesLength" Level="Verbose">'{0}' Profile(s) defined offline.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>u32CurrentProfilesLength</Value1>
							<Value2>0</Value2>
							<SkipCase Id="17">Skip case | no profile defined.</SkipCase>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="ProfileLoopStart">
					<GetArrayItem SourceArray="arrCurrentProfiles" Target="strTmpString" Index="u32ProfileCounter"></GetArrayItem>
				</TestStep>
				<TestStep Name="CheckProfileInformationString">
					<Compare>
						<Equal>
							<Value1>strTmpString</Value1>
							<Value2>null</Value2>
							<RaiseError Id="18" Param0="u32ProfileCounter">Profile Info element [{0}] is null.</RaiseError>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>strTmpString</Value1>
							<Value2>EmptyString</Value2>
							<RaiseError Id="19" Param0="u32ProfileCounter">Profile Info element [{0}] is an empty string.</RaiseError>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="GetDeviceProfile">
					<CallTestFunction Name="GetDeviceProfile">
						<Parameter>strTmpString</Parameter>
						<OutParameter>uint16CurDeviceProfile</OutParameter>
					</CallTestFunction>
				</TestStep>
				<TestStep Name="GetModuleProfile">
					<CallTestFunction Name="GetModuleProfile">
						<Parameter>strTmpString</Parameter>
						<OutParameter>uint16CurModuleProfile</OutParameter>
					</CallTestFunction>
				</TestStep>
				<TestStep Name="GetSubModuleProfile">
					<CallTestFunction Name="GetSubModuleProfile">
						<Parameter>strTmpString</Parameter>
						<OutParameter>uint16CurSubModuleProfile</OutParameter>
					</CallTestFunction>
				</TestStep>
				<TestStep Name="DumpProfileInfo">
					<Description Id="20" Param0="uint16CurDeviceProfile" Param1="uint16CurModuleProfile" Param2="uint16CurSubModuleProfile" Param3="u32ProfileCounter" Level="Output">Module[{3}] : DeviceProfile '{0}' ; ModuleProfile '{1}' ; SubModuleProfile '{2}'</Description>
					<Compare>
						<Equal>
							<Value1>bIgnoreProfileID</Value1>
							<Value2>true</Value2>
							<GotoStep>IndicateThatAtleastOneModuleMatch</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CompareDeviceProfile">
					<Compare>
						<NotEqual>
							<Value1>uint16CurDeviceProfile</Value1>
							<Value2>5003</Value2>
							<WriteLine Id="21" Param0="uint16CurDeviceProfile" Level="Output">Skip Profile  (Test Device Profile '5003' != Cur Device Profile '{0}')</WriteLine>
						</NotEqual>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>uint16CurDeviceProfile</Value1>
							<Value2>5003</Value2>
							<GotoStep>ProfileLoopEnd</GotoStep>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep Name="CompareModuleProfile">
					<Compare>
						<NotEqual>
							<Value1>uint16CurModuleProfile</Value1>
							<Value2>2011</Value2>
							<WriteLine Id="22" Param0="uint16CurModuleProfile" Level="Output">Skip Profile  (Test Module Profile '2011' != Cur Module Profile '{0}')</WriteLine>
						</NotEqual>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>uint16CurModuleProfile</Value1>
							<Value2>2011</Value2>
							<GotoStep>ProfileLoopEnd</GotoStep>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep Name="CompareSubModuleProfile">
					<Compare>
						<NotEqual>
							<Value1>uint16CurSubModuleProfile</Value1>
							<Value2>0</Value2>
							<WriteLine Id="23" Param0="uint16CurSubModuleProfile" Level="Output">Skip Profile  (Test SubModule Profile '0' != Cur SubModule Profile '{0}')</WriteLine>
						</NotEqual>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>uint16CurSubModuleProfile</Value1>
							<Value2>0</Value2>
							<GotoStep>ProfileLoopEnd</GotoStep>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep Name="IndicateThatAtleastOneModuleMatch">
					<SetVariable Target="bAtLeastOneModuleMatch">true</SetVariable>
				</TestStep>
				<TestStep Name="StartSi1">
					<Description Id="24" Param0="1 + (u32ProfileCounter * 1)" Level="Output">Start validate SubIndex{0}</Description>
					<SetVariable Target="byteSubIndexInclOffset">1 + (u32ProfileCounter * 1)</SetVariable>
					<WriteLine Id="25" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Param2="byteSubIndexInclOffset" Level="Verbose">Module[{1}] : Subindex '0x{0:X}.{2}'</WriteLine>
				</TestStep>
				<TestStep Name="SetSi1RequiredLevel">
					<SetVariable Target="bObjectOrEntryRequiredLevel">1</SetVariable>
					<WriteLine Id="26" Param0="u16ObjectIndexInclOffset" Param1="byteSubIndexInclOffset" Level="Verbose">0x{0:X4}.{1} may be available</WriteLine>
				</TestStep>
				<TestStep Name="CheckIfSi1Exists">
					<GetObjectDescription SourceDictionary="odDeviceObjectdictionary" Index="u16ObjectIndexInclOffset" SubIndex="byteSubIndexInclOffset">
						<Type>u16DataType</Type>
					</GetObjectDescription>
					<GotoOnFailure>HandleNotExistingSi1</GotoOnFailure>
				</TestStep>
				<TestStep>
					<Compare>
						<NotEqual>
							<Value1>u16DataType</Value1>
							<Value2>0</Value2>
							<GotoStep>CallSi1CheckEntryDescription</GotoStep>
						</NotEqual>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>1</Value2>
							<WriteLine Id="27" Param0="u16ObjectIndexInclOffset" Level="Verbose">The entry 0x{0:X4}.1 is defined as a padding entry.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>EndSi1</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="HandleNotExistingSi1">
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="28" Param0="u16ObjectIndexInclOffset" Param1="byteSubIndexInclOffset" Level="Output">The entry 0x{0:X4}.{1} does not exists.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>EndSi1</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CallSi1CheckEntryDescription">
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"offline"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>byteSubIndexInclOffset</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>null</Parameter>
						<Parameter>27</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>null</Parameter>
						<Parameter>T</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>64</Parameter>
						<Parameter>i32CurrentBitOffset</Parameter>
						<Parameter>true</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="EndSi1">
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>3</Value2>
							<SetVariable Target="i32CurrentBitOffset">i32CurrentBitOffset + 64</SetVariable>
						</Equal>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>3</Value2>
							<SetVariable Target="i32CurrentBitOffset">-1</SetVariable>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep Name="ProfileLoopEnd">
					<Compare>
						<Equal>
							<Value1>bAtLeastOneModuleMatch</Value1>
							<Value2>false</Value2>
							<GotoStep>HandleAbortTestCaseOnFirstError</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="HandleAbortTestCaseOnFirstError">
					<Compare>
						<Equal>
							<Value1>bAbortTestCaseOnFirstError</Value1>
							<Value2>false</Value2>
							<GotoStep>ProfileLoopIncrement</GotoStep>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>strResult</Value1>
							<Value2>EmptyString</Value2>
							<GotoStep>ProfileLoopIncrement</GotoStep>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="29" Level="Output">Object verification for all following modules abort because an error was already detected for the current module.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>END</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="ProfileLoopIncrement">
					<SetVariable Target="u32ProfileCounter">u32ProfileCounter + 1</SetVariable>
					<Compare>
						<Greater>
							<Value1>u32CurrentProfilesLength</Value1>
							<Value2>u32ProfileCounter</Value2>
							<GotoStep>ProfileLoopStart</GotoStep>
						</Greater>
					</Compare>
				</TestStep>
				<TestStep Name="END">
					<Compare>
						<NotEqual>
							<Value1>bAtLeastOneModuleMatch</Value1>
							<Value2>true</Value2>
							<SkipCase Id="30">SKIP TEST(no module/channel supports the current profile)</SkipCase>
						</NotEqual>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bDEBUG</Value1>
							<Value2>true</Value2>
							<WriteLine Id="31" Param0="strResult" Level="Verbose">DEBUG | Result : '{0}'.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>strResult</Value1>
							<Value2>EmptyString</Value2>
							<ReturnSuccess Id="32">Test succeed</ReturnSuccess>
						</Equal>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>strResult</Value1>
							<Value2>EmptyString</Value2>
							<RaiseError Id="33"></RaiseError>
						</NotEqual>
					</Compare>
				</TestStep>
			</TestCase>
			<TestCase Name="online | 0xF6F2 (Input Latch ESC Timestamp (64-bit))" CaseId="6">
				<Description>
					<PreCondition>- The device profile is 5003
- The module profile is 2011
- The submodule profile is 0</PreCondition>
					<Action>- Iterate over all online defined modules/channels and if the PreCondition matches the following operations are done:
- Get the online description of object 0xF6F2(+module specific offset) 'Input Latch ESC Timestamp (64-bit)' and all entries
 Check:
    (Name)
    BitSize
    DataType
    Rx / Tx mappable
    Default Data
    MinData
    Flags       </Action>
					<PostCondition>Error if
- mandatory object / entry is not defined
- an optional object exists and the entries are invalid
- Object / entry description does not match with the specification</PostCondition>
					<ProposalForSolution>- Define the missing objects
- correct object / entry description</ProposalForSolution>
					<References>
						<Reference Specification="ETG.5003.2011"></Reference>
					</References>
					<Mandatory>true</Mandatory>
				</Description>
				<TestStep Name="InitResult">
					<SetVariable Target="strResult">EmptyString</SetVariable>
				</TestStep>
				<TestStep Name="CheckIfOdAvailable">
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Mailbox</Value1>
							<Value2>false</Value2>
							<SkipCase Id="1">DuT does not support mailbox.</SkipCase>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Mailbox.CoE</Value1>
							<Value2>false</Value2>
							<SkipCase Id="2">DuT does not support CoE.</SkipCase>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Mailbox.CoE.SdoInfo</Value1>
							<Value2>false</Value2>
							<SkipCase Id="3">DuT does not support SDO Info.</SkipCase>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="InitAtLeastOneProfileMatch">
					<SetVariable Target="bAtLeastOneModuleMatch">false</SetVariable>
				</TestStep>
				<TestStep Name="GetCurrentProfileList">
					<SizeOf UInt32Var="u32Tmp">arrOnlineProfiles</SizeOf>
					<Compare>
						<Equal>
							<Value1>u32Tmp</Value1>
							<Value2>0</Value2>
							<CallTestFunction Name="GetCurrentProfileList">
								<Parameter>"online"</Parameter>
								<Parameter>"SafeOP"</Parameter>
								<OutParameter>arrOnlineProfiles</OutParameter>
							</CallTestFunction>
						</Equal>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>u32Tmp</Value1>
							<Value2>0</Value2>
							<WriteLine Id="4" Param0="arrOnlineProfiles" Level="Verbose">Use previously created profile list ({0})</WriteLine>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep>
					<SizeOf UInt32Var="u32Tmp">arrOnlineProfiles</SizeOf>
				</TestStep>
				<TestStep>
					<InitArray TargetArray="arrCurrentProfiles" Length="u32Tmp"></InitArray>
				</TestStep>
				<TestStep>
					<CopyArray>
						<SourceArray>arrOnlineProfiles</SourceArray>
						<DestinationArray>arrCurrentProfiles</DestinationArray>
						<Length>u32Tmp</Length>
					</CopyArray>
				</TestStep>
				<TestStep Name="IsProfileSupported">
					<CallTestFunction Name="DeviceAndModuleProfileDefined">
						<Parameter>arrCurrentProfiles</Parameter>
						<Parameter>5003</Parameter>
						<Parameter>2011</Parameter>
						<OutParameter>bAtLeastOneModuleMatch</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>bAtLeastOneModuleMatch</Value1>
							<Value2>false</Value2>
							<GotoStep>END</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="GetObjectIndexInclOffset">
					<SetVariable Target="u16ObjectIndexInclOffset">#xF6F2</SetVariable>
					<WriteLine Id="5" Param0="u16ObjectIndexInclOffset" Level="Verbose">ObjectIndex '0x{0:X}' (module independent)</WriteLine>
				</TestStep>
				<TestStep Name="LoadDeviceObjectDictionary">
					<Description Id="6" Level="Verbose">Load 'online' object dictionary for testing.</Description>
					<GetObjectDictionary Target="odDeviceObjectdictionary">
						<DictionaryType>Online</DictionaryType>
					</GetObjectDictionary>
					<RaiseErrorOnFailure Id="7">VerifyObject : failed to load online object dictionary.</RaiseErrorOnFailure>
				</TestStep>
				<TestStep Name="SetObjectRequiredLevel">
					<SetVariable Target="bObjectOrEntryRequiredLevel">1</SetVariable>
					<WriteLine Id="8" Param0="u16ObjectIndexInclOffset" Level="Verbose">0x{0:X4} 'Input Latch ESC Timestamp (64-bit)' may be available</WriteLine>
				</TestStep>
				<TestStep Name="CheckIfObjectExists">
					<GetObjectDescription SourceDictionary="odDeviceObjectdictionary" Index="u16ObjectIndexInclOffset" SubIndex="-1"></GetObjectDescription>
					<GotoOnSuccess>CallCheckObjectDescription</GotoOnSuccess>
				</TestStep>
				<TestStep Name="HandleNotExistingObject">
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>3</Value2>
							<SetVariable Target="strResult" Param0="u16ObjectIndexInclOffset">The object 0x{0:X4} 'Input Latch ESC Timestamp (64-bit)' does not exists.</SetVariable>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>3</Value2>
							<WriteLine Id="9" Param0="u16ObjectIndexInclOffset" Level="Error">The object 0x{0:X4} 'Input Latch ESC Timestamp (64-bit)' does not exists.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>2</Value2>
							<WriteLine Id="10" Param0="u16ObjectIndexInclOffset" Level="Warning">The object 0x{0:X4} 'Input Latch ESC Timestamp (64-bit)' does not exists.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>1</Value2>
							<WriteLine Id="11" Param0="u16ObjectIndexInclOffset" Level="Output">The object 0x{0:X4} 'Input Latch ESC Timestamp (64-bit)' does not exists.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>END</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CallCheckObjectDescription">
					<Description Id="12" Param0="u16ObjectIndexInclOffset" Level="Output">Verify the object description 0x{0:X4} 'Input Latch ESC Timestamp (64-bit)'.</Description>
					<CallTestFunction Name="CheckObjectDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"online"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>"Input Latch ESC Timestamp (64-bit)"</Parameter>
						<Parameter>null</Parameter>
						<Parameter>8</Parameter>
						<Parameter>-1</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<GotoStep>END</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="InitEntryBittOffset">
					<SetVariable Target="i32CurrentBitOffset">0</SetVariable>
				</TestStep>
				<TestStep Name="StartSi0">
					<Description Id="13" Level="Output">Start validate SubIndex0</Description>
					<WriteLine Id="14" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : Subindex '0x{0:X}.0'</WriteLine>
				</TestStep>
				<TestStep Name="CallSi0CheckEntryDescription">
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"online"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>0</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>null</Parameter>
						<Parameter>5</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>null</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>null</Parameter>
						<Parameter>null</Parameter>
						<Parameter>null</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>8</Parameter>
						<Parameter>i32CurrentBitOffset</Parameter>
						<Parameter>true</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="EndSi0">
					<SetVariable Target="i32CurrentBitOffset">16</SetVariable>
				</TestStep>
				<TestStep Name="InitProfileLoopCounter">
					<SetVariable Target="u32ProfileCounter">0</SetVariable>
				</TestStep>
				<TestStep Name="GetProfileArrayLength">
					<SizeOf UInt32Var="u32CurrentProfilesLength">arrCurrentProfiles</SizeOf>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="15" Param0="u32CurrentProfilesLength" Level="Verbose">'{0}' Profile(s) defined online.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>u32CurrentProfilesLength</Value1>
							<Value2>0</Value2>
							<SkipCase Id="16">Skip case | no profile defined.</SkipCase>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="ProfileLoopStart">
					<GetArrayItem SourceArray="arrCurrentProfiles" Target="strTmpString" Index="u32ProfileCounter"></GetArrayItem>
				</TestStep>
				<TestStep Name="CheckProfileInformationString">
					<Compare>
						<Equal>
							<Value1>strTmpString</Value1>
							<Value2>null</Value2>
							<RaiseError Id="17" Param0="u32ProfileCounter">Profile Info element [{0}] is null.</RaiseError>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>strTmpString</Value1>
							<Value2>EmptyString</Value2>
							<RaiseError Id="18" Param0="u32ProfileCounter">Profile Info element [{0}] is an empty string.</RaiseError>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="GetDeviceProfile">
					<CallTestFunction Name="GetDeviceProfile">
						<Parameter>strTmpString</Parameter>
						<OutParameter>uint16CurDeviceProfile</OutParameter>
					</CallTestFunction>
				</TestStep>
				<TestStep Name="GetModuleProfile">
					<CallTestFunction Name="GetModuleProfile">
						<Parameter>strTmpString</Parameter>
						<OutParameter>uint16CurModuleProfile</OutParameter>
					</CallTestFunction>
				</TestStep>
				<TestStep Name="GetSubModuleProfile">
					<CallTestFunction Name="GetSubModuleProfile">
						<Parameter>strTmpString</Parameter>
						<OutParameter>uint16CurSubModuleProfile</OutParameter>
					</CallTestFunction>
				</TestStep>
				<TestStep Name="DumpProfileInfo">
					<Description Id="19" Param0="uint16CurDeviceProfile" Param1="uint16CurModuleProfile" Param2="uint16CurSubModuleProfile" Param3="u32ProfileCounter" Level="Output">Module[{3}] : DeviceProfile '{0}' ; ModuleProfile '{1}' ; SubModuleProfile '{2}'</Description>
					<Compare>
						<Equal>
							<Value1>bIgnoreProfileID</Value1>
							<Value2>true</Value2>
							<GotoStep>IndicateThatAtleastOneModuleMatch</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CompareDeviceProfile">
					<Compare>
						<NotEqual>
							<Value1>uint16CurDeviceProfile</Value1>
							<Value2>5003</Value2>
							<WriteLine Id="20" Param0="uint16CurDeviceProfile" Level="Output">Skip Profile  (Test Device Profile '5003' != Cur Device Profile '{0}')</WriteLine>
						</NotEqual>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>uint16CurDeviceProfile</Value1>
							<Value2>5003</Value2>
							<GotoStep>ProfileLoopEnd</GotoStep>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep Name="CompareModuleProfile">
					<Compare>
						<NotEqual>
							<Value1>uint16CurModuleProfile</Value1>
							<Value2>2011</Value2>
							<WriteLine Id="21" Param0="uint16CurModuleProfile" Level="Output">Skip Profile  (Test Module Profile '2011' != Cur Module Profile '{0}')</WriteLine>
						</NotEqual>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>uint16CurModuleProfile</Value1>
							<Value2>2011</Value2>
							<GotoStep>ProfileLoopEnd</GotoStep>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep Name="CompareSubModuleProfile">
					<Compare>
						<NotEqual>
							<Value1>uint16CurSubModuleProfile</Value1>
							<Value2>0</Value2>
							<WriteLine Id="22" Param0="uint16CurSubModuleProfile" Level="Output">Skip Profile  (Test SubModule Profile '0' != Cur SubModule Profile '{0}')</WriteLine>
						</NotEqual>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>uint16CurSubModuleProfile</Value1>
							<Value2>0</Value2>
							<GotoStep>ProfileLoopEnd</GotoStep>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep Name="IndicateThatAtleastOneModuleMatch">
					<SetVariable Target="bAtLeastOneModuleMatch">true</SetVariable>
				</TestStep>
				<TestStep Name="StartSi1">
					<Description Id="23" Param0="1 + (u32ProfileCounter * 1)" Level="Output">Start validate SubIndex{0}</Description>
					<SetVariable Target="byteSubIndexInclOffset">1 + (u32ProfileCounter * 1)</SetVariable>
					<WriteLine Id="24" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Param2="byteSubIndexInclOffset" Level="Verbose">Module[{1}] : Subindex '0x{0:X}.{2}'</WriteLine>
				</TestStep>
				<TestStep Name="SetSi1RequiredLevel">
					<SetVariable Target="bObjectOrEntryRequiredLevel">1</SetVariable>
					<WriteLine Id="25" Param0="u16ObjectIndexInclOffset" Param1="byteSubIndexInclOffset" Level="Verbose">0x{0:X4}.{1} may be available</WriteLine>
				</TestStep>
				<TestStep Name="CheckIfSi1Exists">
					<GetObjectDescription SourceDictionary="odDeviceObjectdictionary" Index="u16ObjectIndexInclOffset" SubIndex="byteSubIndexInclOffset">
						<Type>u16DataType</Type>
					</GetObjectDescription>
					<GotoOnFailure>HandleNotExistingSi1</GotoOnFailure>
				</TestStep>
				<TestStep>
					<Compare>
						<NotEqual>
							<Value1>u16DataType</Value1>
							<Value2>0</Value2>
							<GotoStep>CallSi1CheckEntryDescription</GotoStep>
						</NotEqual>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>1</Value2>
							<WriteLine Id="26" Param0="u16ObjectIndexInclOffset" Level="Verbose">The entry 0x{0:X4}.1 is defined as a padding entry.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>EndSi1</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="HandleNotExistingSi1">
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="27" Param0="u16ObjectIndexInclOffset" Param1="byteSubIndexInclOffset" Level="Output">The entry 0x{0:X4}.{1} does not exists.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>EndSi1</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CallSi1CheckEntryDescription">
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"online"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>byteSubIndexInclOffset</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>null</Parameter>
						<Parameter>27</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>null</Parameter>
						<Parameter>T</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>64</Parameter>
						<Parameter>i32CurrentBitOffset</Parameter>
						<Parameter>true</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="EndSi1">
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>3</Value2>
							<SetVariable Target="i32CurrentBitOffset">i32CurrentBitOffset + 64</SetVariable>
						</Equal>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>3</Value2>
							<SetVariable Target="i32CurrentBitOffset">-1</SetVariable>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep Name="ProfileLoopEnd">
					<Compare>
						<Equal>
							<Value1>bAtLeastOneModuleMatch</Value1>
							<Value2>false</Value2>
							<GotoStep>HandleAbortTestCaseOnFirstError</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="HandleAbortTestCaseOnFirstError">
					<Compare>
						<Equal>
							<Value1>bAbortTestCaseOnFirstError</Value1>
							<Value2>false</Value2>
							<GotoStep>ProfileLoopIncrement</GotoStep>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>strResult</Value1>
							<Value2>EmptyString</Value2>
							<GotoStep>ProfileLoopIncrement</GotoStep>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="28" Level="Output">Object verification for all following modules abort because an error was already detected for the current module.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>END</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="ProfileLoopIncrement">
					<SetVariable Target="u32ProfileCounter">u32ProfileCounter + 1</SetVariable>
					<Compare>
						<Greater>
							<Value1>u32CurrentProfilesLength</Value1>
							<Value2>u32ProfileCounter</Value2>
							<GotoStep>ProfileLoopStart</GotoStep>
						</Greater>
					</Compare>
				</TestStep>
				<TestStep Name="END">
					<Compare>
						<NotEqual>
							<Value1>bAtLeastOneModuleMatch</Value1>
							<Value2>true</Value2>
							<SkipCase Id="29">SKIP TEST(no module/channel supports the current profile)</SkipCase>
						</NotEqual>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bDEBUG</Value1>
							<Value2>true</Value2>
							<WriteLine Id="30" Param0="strResult" Level="Verbose">DEBUG | Result : '{0}'.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>strResult</Value1>
							<Value2>EmptyString</Value2>
							<ReturnSuccess Id="31">Test succeed</ReturnSuccess>
						</Equal>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>strResult</Value1>
							<Value2>EmptyString</Value2>
							<RaiseError Id="32"></RaiseError>
						</NotEqual>
					</Compare>
				</TestStep>
			</TestCase>
		</TestGroup>
		<TestGroup Name="Verify objects 0xF9F0 - 0xF9FF (CDP Device Specific Information Data)" GroupId="9">
			<TestCase Name="offline | 0xF9F0 (Manufacturer Serial Number)" CaseId="1">
				<Description>
					<PreCondition>- The device profile is 5003
- The module profile is 2011
- The submodule profile is 0</PreCondition>
					<Action>- Iterate over all offline defined modules/channels and if the PreCondition matches the following operations are done:
- Get the offline description of object 0xF9F0(+module specific offset) 'Manufacturer Serial Number' and all entries
 Check:
    (Name)
    BitSize
    DataType
    Rx / Tx mappable
    Default Data
    MinData
    Flags       </Action>
					<PostCondition>Error if
- mandatory object / entry is not defined
- an optional object exists and the entries are invalid
- Object / entry description does not match with the specification</PostCondition>
					<ProposalForSolution>- Define the missing objects
- correct object / entry description</ProposalForSolution>
					<References>
						<Reference Specification="ETG.5003.2011"></Reference>
					</References>
					<Mandatory>true</Mandatory>
				</Description>
				<TestStep Name="InitResult">
					<SetVariable Target="strResult">EmptyString</SetVariable>
				</TestStep>
				<TestStep Name="CheckIfOdAvailable">
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Mailbox</Value1>
							<Value2>false</Value2>
							<SkipCase Id="1">DuT does not support mailbox.</SkipCase>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Mailbox.CoE</Value1>
							<Value2>false</Value2>
							<SkipCase Id="2">DuT does not support CoE.</SkipCase>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep>
					<GetObjectDictionary Target="odDeviceObjectdictionary">
						<DictionaryType>Offline</DictionaryType>
					</GetObjectDictionary>
					<SkipOnFailure Id="3">No offline object dictionary defined.</SkipOnFailure>
				</TestStep>
				<TestStep>
					<GetObjectList Count="u32Tmp" Target="odDeviceObjectdictionaryList" SourceDict="odDeviceObjectdictionary"></GetObjectList>
					<Compare>
						<Equal>
							<Value1>u32Tmp</Value1>
							<Value2>0</Value2>
							<SkipCase Id="4">No offline object dictionary defined.</SkipCase>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="InitAtLeastOneProfileMatch">
					<SetVariable Target="bAtLeastOneModuleMatch">false</SetVariable>
				</TestStep>
				<TestStep Name="GetCurrentProfileList">
					<SizeOf UInt32Var="u32Tmp">arrOfflineProfiles</SizeOf>
					<Compare>
						<Equal>
							<Value1>u32Tmp</Value1>
							<Value2>0</Value2>
							<CallTestFunction Name="GetCurrentProfileList">
								<Parameter>"offline"</Parameter>
								<Parameter>"SafeOP"</Parameter>
								<OutParameter>arrOfflineProfiles</OutParameter>
							</CallTestFunction>
						</Equal>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>u32Tmp</Value1>
							<Value2>0</Value2>
							<WriteLine Id="5" Param0="arrOfflineProfiles" Level="Verbose">Use previously created profile list ({0})</WriteLine>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep>
					<SizeOf UInt32Var="u32Tmp">arrOfflineProfiles</SizeOf>
				</TestStep>
				<TestStep>
					<InitArray TargetArray="arrCurrentProfiles" Length="u32Tmp"></InitArray>
				</TestStep>
				<TestStep>
					<CopyArray>
						<SourceArray>arrOfflineProfiles</SourceArray>
						<DestinationArray>arrCurrentProfiles</DestinationArray>
						<Length>u32Tmp</Length>
					</CopyArray>
				</TestStep>
				<TestStep Name="IsProfileSupported">
					<CallTestFunction Name="DeviceAndModuleProfileDefined">
						<Parameter>arrCurrentProfiles</Parameter>
						<Parameter>5003</Parameter>
						<Parameter>2011</Parameter>
						<OutParameter>bAtLeastOneModuleMatch</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>bAtLeastOneModuleMatch</Value1>
							<Value2>false</Value2>
							<GotoStep>END</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="GetObjectIndexInclOffset">
					<SetVariable Target="u16ObjectIndexInclOffset">#xF9F0</SetVariable>
					<WriteLine Id="6" Param0="u16ObjectIndexInclOffset" Level="Verbose">ObjectIndex '0x{0:X}' (module independent)</WriteLine>
				</TestStep>
				<TestStep Name="LoadDeviceObjectDictionary">
					<Description Id="7" Level="Verbose">Load 'offline' object dictionary for testing.</Description>
					<GetObjectDictionary Target="odDeviceObjectdictionary">
						<DictionaryType>Offline</DictionaryType>
					</GetObjectDictionary>
					<RaiseErrorOnFailure Id="8">VerifyObject : failed to load offline object dictionary.</RaiseErrorOnFailure>
				</TestStep>
				<TestStep Name="CallCheckObjectDescription">
					<Description Id="9" Param0="u16ObjectIndexInclOffset" Level="Output">Verify the object description 0x{0:X4} 'Manufacturer Serial Number'.</Description>
					<CallTestFunction Name="CheckObjectDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"offline"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>"Manufacturer Serial Number"</Parameter>
						<Parameter>null</Parameter>
						<Parameter>7</Parameter>
						<Parameter>-1</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<GotoStep>END</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CallSi0CheckEntryDescription">
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"offline"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>0</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>null</Parameter>
						<Parameter>9</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>null</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>i32CurrentBitOffset</Parameter>
						<Parameter>true</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="END">
					<Compare>
						<NotEqual>
							<Value1>bAtLeastOneModuleMatch</Value1>
							<Value2>true</Value2>
							<SkipCase Id="10">SKIP TEST(no module/channel supports the current profile)</SkipCase>
						</NotEqual>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bDEBUG</Value1>
							<Value2>true</Value2>
							<WriteLine Id="11" Param0="strResult" Level="Verbose">DEBUG | Result : '{0}'.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>strResult</Value1>
							<Value2>EmptyString</Value2>
							<ReturnSuccess Id="12">Test succeed</ReturnSuccess>
						</Equal>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>strResult</Value1>
							<Value2>EmptyString</Value2>
							<RaiseError Id="13"></RaiseError>
						</NotEqual>
					</Compare>
				</TestStep>
			</TestCase>
			<TestCase Name="online | 0xF9F0 (Manufacturer Serial Number)" CaseId="2">
				<Description>
					<PreCondition>- The device profile is 5003
- The module profile is 2011
- The submodule profile is 0</PreCondition>
					<Action>- Iterate over all online defined modules/channels and if the PreCondition matches the following operations are done:
- Get the online description of object 0xF9F0(+module specific offset) 'Manufacturer Serial Number' and all entries
 Check:
    (Name)
    BitSize
    DataType
    Rx / Tx mappable
    Default Data
    MinData
    Flags       </Action>
					<PostCondition>Error if
- mandatory object / entry is not defined
- an optional object exists and the entries are invalid
- Object / entry description does not match with the specification</PostCondition>
					<ProposalForSolution>- Define the missing objects
- correct object / entry description</ProposalForSolution>
					<References>
						<Reference Specification="ETG.5003.2011"></Reference>
					</References>
					<Mandatory>true</Mandatory>
				</Description>
				<TestStep Name="InitResult">
					<SetVariable Target="strResult">EmptyString</SetVariable>
				</TestStep>
				<TestStep Name="CheckIfOdAvailable">
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Mailbox</Value1>
							<Value2>false</Value2>
							<SkipCase Id="1">DuT does not support mailbox.</SkipCase>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Mailbox.CoE</Value1>
							<Value2>false</Value2>
							<SkipCase Id="2">DuT does not support CoE.</SkipCase>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Mailbox.CoE.SdoInfo</Value1>
							<Value2>false</Value2>
							<SkipCase Id="3">DuT does not support SDO Info.</SkipCase>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="InitAtLeastOneProfileMatch">
					<SetVariable Target="bAtLeastOneModuleMatch">false</SetVariable>
				</TestStep>
				<TestStep Name="GetCurrentProfileList">
					<SizeOf UInt32Var="u32Tmp">arrOnlineProfiles</SizeOf>
					<Compare>
						<Equal>
							<Value1>u32Tmp</Value1>
							<Value2>0</Value2>
							<CallTestFunction Name="GetCurrentProfileList">
								<Parameter>"online"</Parameter>
								<Parameter>"SafeOP"</Parameter>
								<OutParameter>arrOnlineProfiles</OutParameter>
							</CallTestFunction>
						</Equal>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>u32Tmp</Value1>
							<Value2>0</Value2>
							<WriteLine Id="4" Param0="arrOnlineProfiles" Level="Verbose">Use previously created profile list ({0})</WriteLine>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep>
					<SizeOf UInt32Var="u32Tmp">arrOnlineProfiles</SizeOf>
				</TestStep>
				<TestStep>
					<InitArray TargetArray="arrCurrentProfiles" Length="u32Tmp"></InitArray>
				</TestStep>
				<TestStep>
					<CopyArray>
						<SourceArray>arrOnlineProfiles</SourceArray>
						<DestinationArray>arrCurrentProfiles</DestinationArray>
						<Length>u32Tmp</Length>
					</CopyArray>
				</TestStep>
				<TestStep Name="IsProfileSupported">
					<CallTestFunction Name="DeviceAndModuleProfileDefined">
						<Parameter>arrCurrentProfiles</Parameter>
						<Parameter>5003</Parameter>
						<Parameter>2011</Parameter>
						<OutParameter>bAtLeastOneModuleMatch</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>bAtLeastOneModuleMatch</Value1>
							<Value2>false</Value2>
							<GotoStep>END</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="GetObjectIndexInclOffset">
					<SetVariable Target="u16ObjectIndexInclOffset">#xF9F0</SetVariable>
					<WriteLine Id="5" Param0="u16ObjectIndexInclOffset" Level="Verbose">ObjectIndex '0x{0:X}' (module independent)</WriteLine>
				</TestStep>
				<TestStep Name="LoadDeviceObjectDictionary">
					<Description Id="6" Level="Verbose">Load 'online' object dictionary for testing.</Description>
					<GetObjectDictionary Target="odDeviceObjectdictionary">
						<DictionaryType>Online</DictionaryType>
					</GetObjectDictionary>
					<RaiseErrorOnFailure Id="7">VerifyObject : failed to load online object dictionary.</RaiseErrorOnFailure>
				</TestStep>
				<TestStep Name="CallCheckObjectDescription">
					<Description Id="8" Param0="u16ObjectIndexInclOffset" Level="Output">Verify the object description 0x{0:X4} 'Manufacturer Serial Number'.</Description>
					<CallTestFunction Name="CheckObjectDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"online"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>"Manufacturer Serial Number"</Parameter>
						<Parameter>null</Parameter>
						<Parameter>7</Parameter>
						<Parameter>-1</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<GotoStep>END</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CallSi0CheckEntryDescription">
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"online"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>0</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>null</Parameter>
						<Parameter>9</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>null</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>i32CurrentBitOffset</Parameter>
						<Parameter>true</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="END">
					<Compare>
						<NotEqual>
							<Value1>bAtLeastOneModuleMatch</Value1>
							<Value2>true</Value2>
							<SkipCase Id="9">SKIP TEST(no module/channel supports the current profile)</SkipCase>
						</NotEqual>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bDEBUG</Value1>
							<Value2>true</Value2>
							<WriteLine Id="10" Param0="strResult" Level="Verbose">DEBUG | Result : '{0}'.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>strResult</Value1>
							<Value2>EmptyString</Value2>
							<ReturnSuccess Id="11">Test succeed</ReturnSuccess>
						</Equal>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>strResult</Value1>
							<Value2>EmptyString</Value2>
							<RaiseError Id="12"></RaiseError>
						</NotEqual>
					</Compare>
				</TestStep>
			</TestCase>
			<TestCase Name="offline | 0xF9F1 (CDP Functional Generation Number)" CaseId="3">
				<Description>
					<PreCondition>- The device profile is 5003
- The module profile is 2011
- The submodule profile is 0</PreCondition>
					<Action>- Iterate over all offline defined modules/channels and if the PreCondition matches the following operations are done:
- Get the offline description of object 0xF9F1(+module specific offset) 'CDP Functional Generation Number' and all entries
 Check:
    (Name)
    BitSize
    DataType
    Rx / Tx mappable
    Default Data
    MinData
    Flags       </Action>
					<PostCondition>Error if
- mandatory object / entry is not defined
- an optional object exists and the entries are invalid
- Object / entry description does not match with the specification</PostCondition>
					<ProposalForSolution>- Define the missing objects
- correct object / entry description</ProposalForSolution>
					<References>
						<Reference Specification="ETG.5003.2011"></Reference>
					</References>
					<Mandatory>true</Mandatory>
				</Description>
				<TestStep Name="InitResult">
					<SetVariable Target="strResult">EmptyString</SetVariable>
				</TestStep>
				<TestStep Name="CheckIfOdAvailable">
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Mailbox</Value1>
							<Value2>false</Value2>
							<SkipCase Id="1">DuT does not support mailbox.</SkipCase>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Mailbox.CoE</Value1>
							<Value2>false</Value2>
							<SkipCase Id="2">DuT does not support CoE.</SkipCase>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep>
					<GetObjectDictionary Target="odDeviceObjectdictionary">
						<DictionaryType>Offline</DictionaryType>
					</GetObjectDictionary>
					<SkipOnFailure Id="3">No offline object dictionary defined.</SkipOnFailure>
				</TestStep>
				<TestStep>
					<GetObjectList Count="u32Tmp" Target="odDeviceObjectdictionaryList" SourceDict="odDeviceObjectdictionary"></GetObjectList>
					<Compare>
						<Equal>
							<Value1>u32Tmp</Value1>
							<Value2>0</Value2>
							<SkipCase Id="4">No offline object dictionary defined.</SkipCase>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="InitAtLeastOneProfileMatch">
					<SetVariable Target="bAtLeastOneModuleMatch">false</SetVariable>
				</TestStep>
				<TestStep Name="GetCurrentProfileList">
					<SizeOf UInt32Var="u32Tmp">arrOfflineProfiles</SizeOf>
					<Compare>
						<Equal>
							<Value1>u32Tmp</Value1>
							<Value2>0</Value2>
							<CallTestFunction Name="GetCurrentProfileList">
								<Parameter>"offline"</Parameter>
								<Parameter>"SafeOP"</Parameter>
								<OutParameter>arrOfflineProfiles</OutParameter>
							</CallTestFunction>
						</Equal>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>u32Tmp</Value1>
							<Value2>0</Value2>
							<WriteLine Id="5" Param0="arrOfflineProfiles" Level="Verbose">Use previously created profile list ({0})</WriteLine>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep>
					<SizeOf UInt32Var="u32Tmp">arrOfflineProfiles</SizeOf>
				</TestStep>
				<TestStep>
					<InitArray TargetArray="arrCurrentProfiles" Length="u32Tmp"></InitArray>
				</TestStep>
				<TestStep>
					<CopyArray>
						<SourceArray>arrOfflineProfiles</SourceArray>
						<DestinationArray>arrCurrentProfiles</DestinationArray>
						<Length>u32Tmp</Length>
					</CopyArray>
				</TestStep>
				<TestStep Name="IsProfileSupported">
					<CallTestFunction Name="DeviceAndModuleProfileDefined">
						<Parameter>arrCurrentProfiles</Parameter>
						<Parameter>5003</Parameter>
						<Parameter>2011</Parameter>
						<OutParameter>bAtLeastOneModuleMatch</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>bAtLeastOneModuleMatch</Value1>
							<Value2>false</Value2>
							<GotoStep>END</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="GetObjectIndexInclOffset">
					<SetVariable Target="u16ObjectIndexInclOffset">#xF9F1</SetVariable>
					<WriteLine Id="6" Param0="u16ObjectIndexInclOffset" Level="Verbose">ObjectIndex '0x{0:X}' (module independent)</WriteLine>
				</TestStep>
				<TestStep Name="LoadDeviceObjectDictionary">
					<Description Id="7" Level="Verbose">Load 'offline' object dictionary for testing.</Description>
					<GetObjectDictionary Target="odDeviceObjectdictionary">
						<DictionaryType>Offline</DictionaryType>
					</GetObjectDictionary>
					<RaiseErrorOnFailure Id="8">VerifyObject : failed to load offline object dictionary.</RaiseErrorOnFailure>
				</TestStep>
				<TestStep Name="CallCheckObjectDescription">
					<Description Id="9" Param0="u16ObjectIndexInclOffset" Level="Output">Verify the object description 0x{0:X4} 'CDP Functional Generation Number'.</Description>
					<CallTestFunction Name="CheckObjectDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"offline"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>"CDP Functional Generation Number"</Parameter>
						<Parameter>null</Parameter>
						<Parameter>8</Parameter>
						<Parameter>-1</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<GotoStep>END</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="InitEntryBittOffset">
					<SetVariable Target="i32CurrentBitOffset">0</SetVariable>
				</TestStep>
				<TestStep Name="StartSi0">
					<Description Id="10" Level="Output">Start validate SubIndex0</Description>
					<WriteLine Id="11" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : Subindex '0x{0:X}.0'</WriteLine>
				</TestStep>
				<TestStep Name="CallSi0CheckEntryDescription">
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"offline"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>0</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>null</Parameter>
						<Parameter>5</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>null</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>null</Parameter>
						<Parameter>null</Parameter>
						<Parameter>null</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>8</Parameter>
						<Parameter>i32CurrentBitOffset</Parameter>
						<Parameter>true</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="EndSi0">
					<SetVariable Target="i32CurrentBitOffset">16</SetVariable>
				</TestStep>
				<TestStep Name="StartSi1">
					<Description Id="12" Level="Output">Start validate SubIndex1</Description>
					<WriteLine Id="13" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : Subindex '0x{0:X}.1'</WriteLine>
				</TestStep>
				<TestStep Name="CallSi1CheckEntryDescription">
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"offline"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>1</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>null</Parameter>
						<Parameter>7</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>null</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>32</Parameter>
						<Parameter>i32CurrentBitOffset</Parameter>
						<Parameter>true</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="EndSi1">
					<SetVariable Target="i32CurrentBitOffset">i32CurrentBitOffset + 32</SetVariable>
				</TestStep>
				<TestStep Name="CheckReservedEntryRange_2_to_255">
					<Description Id="14" Level="Output">Start check reserved entry range 2 to 255</Description>
					<CallTestFunction Name="CheckReservedEntryRange">
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>2</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>odDeviceObjectdictionary</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="END">
					<Compare>
						<NotEqual>
							<Value1>bAtLeastOneModuleMatch</Value1>
							<Value2>true</Value2>
							<SkipCase Id="15">SKIP TEST(no module/channel supports the current profile)</SkipCase>
						</NotEqual>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bDEBUG</Value1>
							<Value2>true</Value2>
							<WriteLine Id="16" Param0="strResult" Level="Verbose">DEBUG | Result : '{0}'.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>strResult</Value1>
							<Value2>EmptyString</Value2>
							<ReturnSuccess Id="17">Test succeed</ReturnSuccess>
						</Equal>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>strResult</Value1>
							<Value2>EmptyString</Value2>
							<RaiseError Id="18"></RaiseError>
						</NotEqual>
					</Compare>
				</TestStep>
			</TestCase>
			<TestCase Name="online | 0xF9F1 (CDP Functional Generation Number)" CaseId="4">
				<Description>
					<PreCondition>- The device profile is 5003
- The module profile is 2011
- The submodule profile is 0</PreCondition>
					<Action>- Iterate over all online defined modules/channels and if the PreCondition matches the following operations are done:
- Get the online description of object 0xF9F1(+module specific offset) 'CDP Functional Generation Number' and all entries
 Check:
    (Name)
    BitSize
    DataType
    Rx / Tx mappable
    Default Data
    MinData
    Flags       </Action>
					<PostCondition>Error if
- mandatory object / entry is not defined
- an optional object exists and the entries are invalid
- Object / entry description does not match with the specification</PostCondition>
					<ProposalForSolution>- Define the missing objects
- correct object / entry description</ProposalForSolution>
					<References>
						<Reference Specification="ETG.5003.2011"></Reference>
					</References>
					<Mandatory>true</Mandatory>
				</Description>
				<TestStep Name="InitResult">
					<SetVariable Target="strResult">EmptyString</SetVariable>
				</TestStep>
				<TestStep Name="CheckIfOdAvailable">
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Mailbox</Value1>
							<Value2>false</Value2>
							<SkipCase Id="1">DuT does not support mailbox.</SkipCase>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Mailbox.CoE</Value1>
							<Value2>false</Value2>
							<SkipCase Id="2">DuT does not support CoE.</SkipCase>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Mailbox.CoE.SdoInfo</Value1>
							<Value2>false</Value2>
							<SkipCase Id="3">DuT does not support SDO Info.</SkipCase>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="InitAtLeastOneProfileMatch">
					<SetVariable Target="bAtLeastOneModuleMatch">false</SetVariable>
				</TestStep>
				<TestStep Name="GetCurrentProfileList">
					<SizeOf UInt32Var="u32Tmp">arrOnlineProfiles</SizeOf>
					<Compare>
						<Equal>
							<Value1>u32Tmp</Value1>
							<Value2>0</Value2>
							<CallTestFunction Name="GetCurrentProfileList">
								<Parameter>"online"</Parameter>
								<Parameter>"SafeOP"</Parameter>
								<OutParameter>arrOnlineProfiles</OutParameter>
							</CallTestFunction>
						</Equal>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>u32Tmp</Value1>
							<Value2>0</Value2>
							<WriteLine Id="4" Param0="arrOnlineProfiles" Level="Verbose">Use previously created profile list ({0})</WriteLine>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep>
					<SizeOf UInt32Var="u32Tmp">arrOnlineProfiles</SizeOf>
				</TestStep>
				<TestStep>
					<InitArray TargetArray="arrCurrentProfiles" Length="u32Tmp"></InitArray>
				</TestStep>
				<TestStep>
					<CopyArray>
						<SourceArray>arrOnlineProfiles</SourceArray>
						<DestinationArray>arrCurrentProfiles</DestinationArray>
						<Length>u32Tmp</Length>
					</CopyArray>
				</TestStep>
				<TestStep Name="IsProfileSupported">
					<CallTestFunction Name="DeviceAndModuleProfileDefined">
						<Parameter>arrCurrentProfiles</Parameter>
						<Parameter>5003</Parameter>
						<Parameter>2011</Parameter>
						<OutParameter>bAtLeastOneModuleMatch</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>bAtLeastOneModuleMatch</Value1>
							<Value2>false</Value2>
							<GotoStep>END</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="GetObjectIndexInclOffset">
					<SetVariable Target="u16ObjectIndexInclOffset">#xF9F1</SetVariable>
					<WriteLine Id="5" Param0="u16ObjectIndexInclOffset" Level="Verbose">ObjectIndex '0x{0:X}' (module independent)</WriteLine>
				</TestStep>
				<TestStep Name="LoadDeviceObjectDictionary">
					<Description Id="6" Level="Verbose">Load 'online' object dictionary for testing.</Description>
					<GetObjectDictionary Target="odDeviceObjectdictionary">
						<DictionaryType>Online</DictionaryType>
					</GetObjectDictionary>
					<RaiseErrorOnFailure Id="7">VerifyObject : failed to load online object dictionary.</RaiseErrorOnFailure>
				</TestStep>
				<TestStep Name="CallCheckObjectDescription">
					<Description Id="8" Param0="u16ObjectIndexInclOffset" Level="Output">Verify the object description 0x{0:X4} 'CDP Functional Generation Number'.</Description>
					<CallTestFunction Name="CheckObjectDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"online"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>"CDP Functional Generation Number"</Parameter>
						<Parameter>null</Parameter>
						<Parameter>8</Parameter>
						<Parameter>-1</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<GotoStep>END</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="InitEntryBittOffset">
					<SetVariable Target="i32CurrentBitOffset">0</SetVariable>
				</TestStep>
				<TestStep Name="StartSi0">
					<Description Id="9" Level="Output">Start validate SubIndex0</Description>
					<WriteLine Id="10" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : Subindex '0x{0:X}.0'</WriteLine>
				</TestStep>
				<TestStep Name="CallSi0CheckEntryDescription">
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"online"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>0</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>null</Parameter>
						<Parameter>5</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>null</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>null</Parameter>
						<Parameter>null</Parameter>
						<Parameter>null</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>8</Parameter>
						<Parameter>i32CurrentBitOffset</Parameter>
						<Parameter>true</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="EndSi0">
					<SetVariable Target="i32CurrentBitOffset">16</SetVariable>
				</TestStep>
				<TestStep Name="StartSi1">
					<Description Id="11" Level="Output">Start validate SubIndex1</Description>
					<WriteLine Id="12" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : Subindex '0x{0:X}.1'</WriteLine>
				</TestStep>
				<TestStep Name="CallSi1CheckEntryDescription">
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"online"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>1</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>null</Parameter>
						<Parameter>7</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>null</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>32</Parameter>
						<Parameter>i32CurrentBitOffset</Parameter>
						<Parameter>true</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="EndSi1">
					<SetVariable Target="i32CurrentBitOffset">i32CurrentBitOffset + 32</SetVariable>
				</TestStep>
				<TestStep Name="CheckReservedEntryRange_2_to_255">
					<Description Id="13" Level="Output">Start check reserved entry range 2 to 255</Description>
					<CallTestFunction Name="CheckReservedEntryRange">
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>2</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>odDeviceObjectdictionary</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="END">
					<Compare>
						<NotEqual>
							<Value1>bAtLeastOneModuleMatch</Value1>
							<Value2>true</Value2>
							<SkipCase Id="14">SKIP TEST(no module/channel supports the current profile)</SkipCase>
						</NotEqual>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bDEBUG</Value1>
							<Value2>true</Value2>
							<WriteLine Id="15" Param0="strResult" Level="Verbose">DEBUG | Result : '{0}'.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>strResult</Value1>
							<Value2>EmptyString</Value2>
							<ReturnSuccess Id="16">Test succeed</ReturnSuccess>
						</Equal>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>strResult</Value1>
							<Value2>EmptyString</Value2>
							<RaiseError Id="17"></RaiseError>
						</NotEqual>
					</Compare>
				</TestStep>
			</TestCase>
			<TestCase Name="offline | 0xF9F2 (SDP Functional Generation Number)" CaseId="5">
				<Description>
					<PreCondition>- The device profile is 5003
- The module profile is 2011
- The submodule profile is 0</PreCondition>
					<Action>- Iterate over all offline defined modules/channels and if the PreCondition matches the following operations are done:
- Get the offline description of object 0xF9F2(+module specific offset) 'SDP Functional Generation Number' and all entries
 Check:
    (Name)
    BitSize
    DataType
    Rx / Tx mappable
    Default Data
    MinData
    Flags       </Action>
					<PostCondition>Error if
- mandatory object / entry is not defined
- an optional object exists and the entries are invalid
- Object / entry description does not match with the specification</PostCondition>
					<ProposalForSolution>- Define the missing objects
- correct object / entry description</ProposalForSolution>
					<References>
						<Reference Specification="ETG.5003.2011"></Reference>
					</References>
					<Mandatory>true</Mandatory>
				</Description>
				<TestStep Name="InitResult">
					<SetVariable Target="strResult">EmptyString</SetVariable>
				</TestStep>
				<TestStep Name="CheckIfOdAvailable">
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Mailbox</Value1>
							<Value2>false</Value2>
							<SkipCase Id="1">DuT does not support mailbox.</SkipCase>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Mailbox.CoE</Value1>
							<Value2>false</Value2>
							<SkipCase Id="2">DuT does not support CoE.</SkipCase>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep>
					<GetObjectDictionary Target="odDeviceObjectdictionary">
						<DictionaryType>Offline</DictionaryType>
					</GetObjectDictionary>
					<SkipOnFailure Id="3">No offline object dictionary defined.</SkipOnFailure>
				</TestStep>
				<TestStep>
					<GetObjectList Count="u32Tmp" Target="odDeviceObjectdictionaryList" SourceDict="odDeviceObjectdictionary"></GetObjectList>
					<Compare>
						<Equal>
							<Value1>u32Tmp</Value1>
							<Value2>0</Value2>
							<SkipCase Id="4">No offline object dictionary defined.</SkipCase>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="InitAtLeastOneProfileMatch">
					<SetVariable Target="bAtLeastOneModuleMatch">false</SetVariable>
				</TestStep>
				<TestStep Name="GetCurrentProfileList">
					<SizeOf UInt32Var="u32Tmp">arrOfflineProfiles</SizeOf>
					<Compare>
						<Equal>
							<Value1>u32Tmp</Value1>
							<Value2>0</Value2>
							<CallTestFunction Name="GetCurrentProfileList">
								<Parameter>"offline"</Parameter>
								<Parameter>"SafeOP"</Parameter>
								<OutParameter>arrOfflineProfiles</OutParameter>
							</CallTestFunction>
						</Equal>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>u32Tmp</Value1>
							<Value2>0</Value2>
							<WriteLine Id="5" Param0="arrOfflineProfiles" Level="Verbose">Use previously created profile list ({0})</WriteLine>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep>
					<SizeOf UInt32Var="u32Tmp">arrOfflineProfiles</SizeOf>
				</TestStep>
				<TestStep>
					<InitArray TargetArray="arrCurrentProfiles" Length="u32Tmp"></InitArray>
				</TestStep>
				<TestStep>
					<CopyArray>
						<SourceArray>arrOfflineProfiles</SourceArray>
						<DestinationArray>arrCurrentProfiles</DestinationArray>
						<Length>u32Tmp</Length>
					</CopyArray>
				</TestStep>
				<TestStep Name="IsProfileSupported">
					<CallTestFunction Name="DeviceAndModuleProfileDefined">
						<Parameter>arrCurrentProfiles</Parameter>
						<Parameter>5003</Parameter>
						<Parameter>2011</Parameter>
						<OutParameter>bAtLeastOneModuleMatch</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>bAtLeastOneModuleMatch</Value1>
							<Value2>false</Value2>
							<GotoStep>END</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="GetObjectIndexInclOffset">
					<SetVariable Target="u16ObjectIndexInclOffset">#xF9F2</SetVariable>
					<WriteLine Id="6" Param0="u16ObjectIndexInclOffset" Level="Verbose">ObjectIndex '0x{0:X}' (module independent)</WriteLine>
				</TestStep>
				<TestStep Name="LoadDeviceObjectDictionary">
					<Description Id="7" Level="Verbose">Load 'offline' object dictionary for testing.</Description>
					<GetObjectDictionary Target="odDeviceObjectdictionary">
						<DictionaryType>Offline</DictionaryType>
					</GetObjectDictionary>
					<RaiseErrorOnFailure Id="8">VerifyObject : failed to load offline object dictionary.</RaiseErrorOnFailure>
				</TestStep>
				<TestStep Name="CallCheckObjectDescription">
					<Description Id="9" Param0="u16ObjectIndexInclOffset" Level="Output">Verify the object description 0x{0:X4} 'SDP Functional Generation Number'.</Description>
					<CallTestFunction Name="CheckObjectDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"offline"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>"SDP Functional Generation Number"</Parameter>
						<Parameter>null</Parameter>
						<Parameter>8</Parameter>
						<Parameter>-1</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<GotoStep>END</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="InitEntryBittOffset">
					<SetVariable Target="i32CurrentBitOffset">0</SetVariable>
				</TestStep>
				<TestStep Name="StartSi0">
					<Description Id="10" Level="Output">Start validate SubIndex0</Description>
					<WriteLine Id="11" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : Subindex '0x{0:X}.0'</WriteLine>
				</TestStep>
				<TestStep Name="CallSi0CheckEntryDescription">
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"offline"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>0</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>null</Parameter>
						<Parameter>5</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>null</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>null</Parameter>
						<Parameter>null</Parameter>
						<Parameter>null</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>8</Parameter>
						<Parameter>i32CurrentBitOffset</Parameter>
						<Parameter>true</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="EndSi0">
					<SetVariable Target="i32CurrentBitOffset">16</SetVariable>
				</TestStep>
				<TestStep Name="InitProfileLoopCounter">
					<SetVariable Target="u32ProfileCounter">0</SetVariable>
				</TestStep>
				<TestStep Name="GetProfileArrayLength">
					<SizeOf UInt32Var="u32CurrentProfilesLength">arrCurrentProfiles</SizeOf>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="12" Param0="u32CurrentProfilesLength" Level="Verbose">'{0}' Profile(s) defined offline.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>u32CurrentProfilesLength</Value1>
							<Value2>0</Value2>
							<SkipCase Id="13">Skip case | no profile defined.</SkipCase>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="ProfileLoopStart">
					<GetArrayItem SourceArray="arrCurrentProfiles" Target="strTmpString" Index="u32ProfileCounter"></GetArrayItem>
				</TestStep>
				<TestStep Name="CheckProfileInformationString">
					<Compare>
						<Equal>
							<Value1>strTmpString</Value1>
							<Value2>null</Value2>
							<RaiseError Id="14" Param0="u32ProfileCounter">Profile Info element [{0}] is null.</RaiseError>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>strTmpString</Value1>
							<Value2>EmptyString</Value2>
							<RaiseError Id="15" Param0="u32ProfileCounter">Profile Info element [{0}] is an empty string.</RaiseError>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="GetDeviceProfile">
					<CallTestFunction Name="GetDeviceProfile">
						<Parameter>strTmpString</Parameter>
						<OutParameter>uint16CurDeviceProfile</OutParameter>
					</CallTestFunction>
				</TestStep>
				<TestStep Name="GetModuleProfile">
					<CallTestFunction Name="GetModuleProfile">
						<Parameter>strTmpString</Parameter>
						<OutParameter>uint16CurModuleProfile</OutParameter>
					</CallTestFunction>
				</TestStep>
				<TestStep Name="GetSubModuleProfile">
					<CallTestFunction Name="GetSubModuleProfile">
						<Parameter>strTmpString</Parameter>
						<OutParameter>uint16CurSubModuleProfile</OutParameter>
					</CallTestFunction>
				</TestStep>
				<TestStep Name="DumpProfileInfo">
					<Description Id="16" Param0="uint16CurDeviceProfile" Param1="uint16CurModuleProfile" Param2="uint16CurSubModuleProfile" Param3="u32ProfileCounter" Level="Output">Module[{3}] : DeviceProfile '{0}' ; ModuleProfile '{1}' ; SubModuleProfile '{2}'</Description>
					<Compare>
						<Equal>
							<Value1>bIgnoreProfileID</Value1>
							<Value2>true</Value2>
							<GotoStep>IndicateThatAtleastOneModuleMatch</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CompareDeviceProfile">
					<Compare>
						<NotEqual>
							<Value1>uint16CurDeviceProfile</Value1>
							<Value2>5003</Value2>
							<WriteLine Id="17" Param0="uint16CurDeviceProfile" Level="Output">Skip Profile  (Test Device Profile '5003' != Cur Device Profile '{0}')</WriteLine>
						</NotEqual>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>uint16CurDeviceProfile</Value1>
							<Value2>5003</Value2>
							<GotoStep>ProfileLoopEnd</GotoStep>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep Name="CompareModuleProfile">
					<Compare>
						<NotEqual>
							<Value1>uint16CurModuleProfile</Value1>
							<Value2>2011</Value2>
							<WriteLine Id="18" Param0="uint16CurModuleProfile" Level="Output">Skip Profile  (Test Module Profile '2011' != Cur Module Profile '{0}')</WriteLine>
						</NotEqual>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>uint16CurModuleProfile</Value1>
							<Value2>2011</Value2>
							<GotoStep>ProfileLoopEnd</GotoStep>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep Name="CompareSubModuleProfile">
					<Compare>
						<NotEqual>
							<Value1>uint16CurSubModuleProfile</Value1>
							<Value2>0</Value2>
							<WriteLine Id="19" Param0="uint16CurSubModuleProfile" Level="Output">Skip Profile  (Test SubModule Profile '0' != Cur SubModule Profile '{0}')</WriteLine>
						</NotEqual>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>uint16CurSubModuleProfile</Value1>
							<Value2>0</Value2>
							<GotoStep>ProfileLoopEnd</GotoStep>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep Name="IndicateThatAtleastOneModuleMatch">
					<SetVariable Target="bAtLeastOneModuleMatch">true</SetVariable>
				</TestStep>
				<TestStep Name="StartSi1">
					<Description Id="20" Param0="1 + (u32ProfileCounter * 1)" Level="Output">Start validate SubIndex{0}</Description>
					<SetVariable Target="byteSubIndexInclOffset">1 + (u32ProfileCounter * 1)</SetVariable>
					<WriteLine Id="21" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Param2="byteSubIndexInclOffset" Level="Verbose">Module[{1}] : Subindex '0x{0:X}.{2}'</WriteLine>
				</TestStep>
				<TestStep Name="CallSi1CheckEntryDescription">
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"offline"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>byteSubIndexInclOffset</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>null</Parameter>
						<Parameter>7</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>null</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>32</Parameter>
						<Parameter>i32CurrentBitOffset</Parameter>
						<Parameter>true</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="EndSi1">
					<SetVariable Target="i32CurrentBitOffset">i32CurrentBitOffset + 32</SetVariable>
				</TestStep>
				<TestStep Name="ProfileLoopEnd">
					<Compare>
						<Equal>
							<Value1>bAtLeastOneModuleMatch</Value1>
							<Value2>false</Value2>
							<GotoStep>HandleAbortTestCaseOnFirstError</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="HandleAbortTestCaseOnFirstError">
					<Compare>
						<Equal>
							<Value1>bAbortTestCaseOnFirstError</Value1>
							<Value2>false</Value2>
							<GotoStep>ProfileLoopIncrement</GotoStep>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>strResult</Value1>
							<Value2>EmptyString</Value2>
							<GotoStep>ProfileLoopIncrement</GotoStep>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="22" Level="Output">Object verification for all following modules abort because an error was already detected for the current module.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>END</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="ProfileLoopIncrement">
					<SetVariable Target="u32ProfileCounter">u32ProfileCounter + 1</SetVariable>
					<Compare>
						<Greater>
							<Value1>u32CurrentProfilesLength</Value1>
							<Value2>u32ProfileCounter</Value2>
							<GotoStep>ProfileLoopStart</GotoStep>
						</Greater>
					</Compare>
				</TestStep>
				<TestStep Name="END">
					<Compare>
						<NotEqual>
							<Value1>bAtLeastOneModuleMatch</Value1>
							<Value2>true</Value2>
							<SkipCase Id="23">SKIP TEST(no module/channel supports the current profile)</SkipCase>
						</NotEqual>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bDEBUG</Value1>
							<Value2>true</Value2>
							<WriteLine Id="24" Param0="strResult" Level="Verbose">DEBUG | Result : '{0}'.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>strResult</Value1>
							<Value2>EmptyString</Value2>
							<ReturnSuccess Id="25">Test succeed</ReturnSuccess>
						</Equal>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>strResult</Value1>
							<Value2>EmptyString</Value2>
							<RaiseError Id="26"></RaiseError>
						</NotEqual>
					</Compare>
				</TestStep>
			</TestCase>
			<TestCase Name="online | 0xF9F2 (SDP Functional Generation Number)" CaseId="6">
				<Description>
					<PreCondition>- The device profile is 5003
- The module profile is 2011
- The submodule profile is 0</PreCondition>
					<Action>- Iterate over all online defined modules/channels and if the PreCondition matches the following operations are done:
- Get the online description of object 0xF9F2(+module specific offset) 'SDP Functional Generation Number' and all entries
 Check:
    (Name)
    BitSize
    DataType
    Rx / Tx mappable
    Default Data
    MinData
    Flags       </Action>
					<PostCondition>Error if
- mandatory object / entry is not defined
- an optional object exists and the entries are invalid
- Object / entry description does not match with the specification</PostCondition>
					<ProposalForSolution>- Define the missing objects
- correct object / entry description</ProposalForSolution>
					<References>
						<Reference Specification="ETG.5003.2011"></Reference>
					</References>
					<Mandatory>true</Mandatory>
				</Description>
				<TestStep Name="InitResult">
					<SetVariable Target="strResult">EmptyString</SetVariable>
				</TestStep>
				<TestStep Name="CheckIfOdAvailable">
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Mailbox</Value1>
							<Value2>false</Value2>
							<SkipCase Id="1">DuT does not support mailbox.</SkipCase>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Mailbox.CoE</Value1>
							<Value2>false</Value2>
							<SkipCase Id="2">DuT does not support CoE.</SkipCase>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Mailbox.CoE.SdoInfo</Value1>
							<Value2>false</Value2>
							<SkipCase Id="3">DuT does not support SDO Info.</SkipCase>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="InitAtLeastOneProfileMatch">
					<SetVariable Target="bAtLeastOneModuleMatch">false</SetVariable>
				</TestStep>
				<TestStep Name="GetCurrentProfileList">
					<SizeOf UInt32Var="u32Tmp">arrOnlineProfiles</SizeOf>
					<Compare>
						<Equal>
							<Value1>u32Tmp</Value1>
							<Value2>0</Value2>
							<CallTestFunction Name="GetCurrentProfileList">
								<Parameter>"online"</Parameter>
								<Parameter>"SafeOP"</Parameter>
								<OutParameter>arrOnlineProfiles</OutParameter>
							</CallTestFunction>
						</Equal>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>u32Tmp</Value1>
							<Value2>0</Value2>
							<WriteLine Id="4" Param0="arrOnlineProfiles" Level="Verbose">Use previously created profile list ({0})</WriteLine>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep>
					<SizeOf UInt32Var="u32Tmp">arrOnlineProfiles</SizeOf>
				</TestStep>
				<TestStep>
					<InitArray TargetArray="arrCurrentProfiles" Length="u32Tmp"></InitArray>
				</TestStep>
				<TestStep>
					<CopyArray>
						<SourceArray>arrOnlineProfiles</SourceArray>
						<DestinationArray>arrCurrentProfiles</DestinationArray>
						<Length>u32Tmp</Length>
					</CopyArray>
				</TestStep>
				<TestStep Name="IsProfileSupported">
					<CallTestFunction Name="DeviceAndModuleProfileDefined">
						<Parameter>arrCurrentProfiles</Parameter>
						<Parameter>5003</Parameter>
						<Parameter>2011</Parameter>
						<OutParameter>bAtLeastOneModuleMatch</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>bAtLeastOneModuleMatch</Value1>
							<Value2>false</Value2>
							<GotoStep>END</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="GetObjectIndexInclOffset">
					<SetVariable Target="u16ObjectIndexInclOffset">#xF9F2</SetVariable>
					<WriteLine Id="5" Param0="u16ObjectIndexInclOffset" Level="Verbose">ObjectIndex '0x{0:X}' (module independent)</WriteLine>
				</TestStep>
				<TestStep Name="LoadDeviceObjectDictionary">
					<Description Id="6" Level="Verbose">Load 'online' object dictionary for testing.</Description>
					<GetObjectDictionary Target="odDeviceObjectdictionary">
						<DictionaryType>Online</DictionaryType>
					</GetObjectDictionary>
					<RaiseErrorOnFailure Id="7">VerifyObject : failed to load online object dictionary.</RaiseErrorOnFailure>
				</TestStep>
				<TestStep Name="CallCheckObjectDescription">
					<Description Id="8" Param0="u16ObjectIndexInclOffset" Level="Output">Verify the object description 0x{0:X4} 'SDP Functional Generation Number'.</Description>
					<CallTestFunction Name="CheckObjectDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"online"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>"SDP Functional Generation Number"</Parameter>
						<Parameter>null</Parameter>
						<Parameter>8</Parameter>
						<Parameter>-1</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<GotoStep>END</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="InitEntryBittOffset">
					<SetVariable Target="i32CurrentBitOffset">0</SetVariable>
				</TestStep>
				<TestStep Name="StartSi0">
					<Description Id="9" Level="Output">Start validate SubIndex0</Description>
					<WriteLine Id="10" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : Subindex '0x{0:X}.0'</WriteLine>
				</TestStep>
				<TestStep Name="CallSi0CheckEntryDescription">
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"online"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>0</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>null</Parameter>
						<Parameter>5</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>null</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>null</Parameter>
						<Parameter>null</Parameter>
						<Parameter>null</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>8</Parameter>
						<Parameter>i32CurrentBitOffset</Parameter>
						<Parameter>true</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="EndSi0">
					<SetVariable Target="i32CurrentBitOffset">16</SetVariable>
				</TestStep>
				<TestStep Name="InitProfileLoopCounter">
					<SetVariable Target="u32ProfileCounter">0</SetVariable>
				</TestStep>
				<TestStep Name="GetProfileArrayLength">
					<SizeOf UInt32Var="u32CurrentProfilesLength">arrCurrentProfiles</SizeOf>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="11" Param0="u32CurrentProfilesLength" Level="Verbose">'{0}' Profile(s) defined online.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>u32CurrentProfilesLength</Value1>
							<Value2>0</Value2>
							<SkipCase Id="12">Skip case | no profile defined.</SkipCase>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="ProfileLoopStart">
					<GetArrayItem SourceArray="arrCurrentProfiles" Target="strTmpString" Index="u32ProfileCounter"></GetArrayItem>
				</TestStep>
				<TestStep Name="CheckProfileInformationString">
					<Compare>
						<Equal>
							<Value1>strTmpString</Value1>
							<Value2>null</Value2>
							<RaiseError Id="13" Param0="u32ProfileCounter">Profile Info element [{0}] is null.</RaiseError>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>strTmpString</Value1>
							<Value2>EmptyString</Value2>
							<RaiseError Id="14" Param0="u32ProfileCounter">Profile Info element [{0}] is an empty string.</RaiseError>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="GetDeviceProfile">
					<CallTestFunction Name="GetDeviceProfile">
						<Parameter>strTmpString</Parameter>
						<OutParameter>uint16CurDeviceProfile</OutParameter>
					</CallTestFunction>
				</TestStep>
				<TestStep Name="GetModuleProfile">
					<CallTestFunction Name="GetModuleProfile">
						<Parameter>strTmpString</Parameter>
						<OutParameter>uint16CurModuleProfile</OutParameter>
					</CallTestFunction>
				</TestStep>
				<TestStep Name="GetSubModuleProfile">
					<CallTestFunction Name="GetSubModuleProfile">
						<Parameter>strTmpString</Parameter>
						<OutParameter>uint16CurSubModuleProfile</OutParameter>
					</CallTestFunction>
				</TestStep>
				<TestStep Name="DumpProfileInfo">
					<Description Id="15" Param0="uint16CurDeviceProfile" Param1="uint16CurModuleProfile" Param2="uint16CurSubModuleProfile" Param3="u32ProfileCounter" Level="Output">Module[{3}] : DeviceProfile '{0}' ; ModuleProfile '{1}' ; SubModuleProfile '{2}'</Description>
					<Compare>
						<Equal>
							<Value1>bIgnoreProfileID</Value1>
							<Value2>true</Value2>
							<GotoStep>IndicateThatAtleastOneModuleMatch</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CompareDeviceProfile">
					<Compare>
						<NotEqual>
							<Value1>uint16CurDeviceProfile</Value1>
							<Value2>5003</Value2>
							<WriteLine Id="16" Param0="uint16CurDeviceProfile" Level="Output">Skip Profile  (Test Device Profile '5003' != Cur Device Profile '{0}')</WriteLine>
						</NotEqual>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>uint16CurDeviceProfile</Value1>
							<Value2>5003</Value2>
							<GotoStep>ProfileLoopEnd</GotoStep>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep Name="CompareModuleProfile">
					<Compare>
						<NotEqual>
							<Value1>uint16CurModuleProfile</Value1>
							<Value2>2011</Value2>
							<WriteLine Id="17" Param0="uint16CurModuleProfile" Level="Output">Skip Profile  (Test Module Profile '2011' != Cur Module Profile '{0}')</WriteLine>
						</NotEqual>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>uint16CurModuleProfile</Value1>
							<Value2>2011</Value2>
							<GotoStep>ProfileLoopEnd</GotoStep>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep Name="CompareSubModuleProfile">
					<Compare>
						<NotEqual>
							<Value1>uint16CurSubModuleProfile</Value1>
							<Value2>0</Value2>
							<WriteLine Id="18" Param0="uint16CurSubModuleProfile" Level="Output">Skip Profile  (Test SubModule Profile '0' != Cur SubModule Profile '{0}')</WriteLine>
						</NotEqual>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>uint16CurSubModuleProfile</Value1>
							<Value2>0</Value2>
							<GotoStep>ProfileLoopEnd</GotoStep>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep Name="IndicateThatAtleastOneModuleMatch">
					<SetVariable Target="bAtLeastOneModuleMatch">true</SetVariable>
				</TestStep>
				<TestStep Name="StartSi1">
					<Description Id="19" Param0="1 + (u32ProfileCounter * 1)" Level="Output">Start validate SubIndex{0}</Description>
					<SetVariable Target="byteSubIndexInclOffset">1 + (u32ProfileCounter * 1)</SetVariable>
					<WriteLine Id="20" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Param2="byteSubIndexInclOffset" Level="Verbose">Module[{1}] : Subindex '0x{0:X}.{2}'</WriteLine>
				</TestStep>
				<TestStep Name="CallSi1CheckEntryDescription">
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"online"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>byteSubIndexInclOffset</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>null</Parameter>
						<Parameter>7</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>null</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>32</Parameter>
						<Parameter>i32CurrentBitOffset</Parameter>
						<Parameter>true</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="EndSi1">
					<SetVariable Target="i32CurrentBitOffset">i32CurrentBitOffset + 32</SetVariable>
				</TestStep>
				<TestStep Name="ProfileLoopEnd">
					<Compare>
						<Equal>
							<Value1>bAtLeastOneModuleMatch</Value1>
							<Value2>false</Value2>
							<GotoStep>HandleAbortTestCaseOnFirstError</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="HandleAbortTestCaseOnFirstError">
					<Compare>
						<Equal>
							<Value1>bAbortTestCaseOnFirstError</Value1>
							<Value2>false</Value2>
							<GotoStep>ProfileLoopIncrement</GotoStep>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>strResult</Value1>
							<Value2>EmptyString</Value2>
							<GotoStep>ProfileLoopIncrement</GotoStep>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="21" Level="Output">Object verification for all following modules abort because an error was already detected for the current module.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>END</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="ProfileLoopIncrement">
					<SetVariable Target="u32ProfileCounter">u32ProfileCounter + 1</SetVariable>
					<Compare>
						<Greater>
							<Value1>u32CurrentProfilesLength</Value1>
							<Value2>u32ProfileCounter</Value2>
							<GotoStep>ProfileLoopStart</GotoStep>
						</Greater>
					</Compare>
				</TestStep>
				<TestStep Name="END">
					<Compare>
						<NotEqual>
							<Value1>bAtLeastOneModuleMatch</Value1>
							<Value2>true</Value2>
							<SkipCase Id="22">SKIP TEST(no module/channel supports the current profile)</SkipCase>
						</NotEqual>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bDEBUG</Value1>
							<Value2>true</Value2>
							<WriteLine Id="23" Param0="strResult" Level="Verbose">DEBUG | Result : '{0}'.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>strResult</Value1>
							<Value2>EmptyString</Value2>
							<ReturnSuccess Id="24">Test succeed</ReturnSuccess>
						</Equal>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>strResult</Value1>
							<Value2>EmptyString</Value2>
							<RaiseError Id="25"></RaiseError>
						</NotEqual>
					</Compare>
				</TestStep>
			</TestCase>
			<TestCase Name="offline | 0xF9F3 (Vendor Name)" CaseId="7">
				<Description>
					<PreCondition>- The device profile is 5003
- The module profile is 2011
- The submodule profile is 0</PreCondition>
					<Action>- Iterate over all offline defined modules/channels and if the PreCondition matches the following operations are done:
- Get the offline description of object 0xF9F3(+module specific offset) 'Vendor Name' and all entries
 Check:
    (Name)
    BitSize
    DataType
    Rx / Tx mappable
    Default Data
    MinData
    Flags       </Action>
					<PostCondition>Error if
- mandatory object / entry is not defined
- an optional object exists and the entries are invalid
- Object / entry description does not match with the specification</PostCondition>
					<ProposalForSolution>- Define the missing objects
- correct object / entry description</ProposalForSolution>
					<References>
						<Reference Specification="ETG.5003.2011"></Reference>
					</References>
					<Mandatory>true</Mandatory>
				</Description>
				<TestStep Name="InitResult">
					<SetVariable Target="strResult">EmptyString</SetVariable>
				</TestStep>
				<TestStep Name="CheckIfOdAvailable">
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Mailbox</Value1>
							<Value2>false</Value2>
							<SkipCase Id="1">DuT does not support mailbox.</SkipCase>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Mailbox.CoE</Value1>
							<Value2>false</Value2>
							<SkipCase Id="2">DuT does not support CoE.</SkipCase>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep>
					<GetObjectDictionary Target="odDeviceObjectdictionary">
						<DictionaryType>Offline</DictionaryType>
					</GetObjectDictionary>
					<SkipOnFailure Id="3">No offline object dictionary defined.</SkipOnFailure>
				</TestStep>
				<TestStep>
					<GetObjectList Count="u32Tmp" Target="odDeviceObjectdictionaryList" SourceDict="odDeviceObjectdictionary"></GetObjectList>
					<Compare>
						<Equal>
							<Value1>u32Tmp</Value1>
							<Value2>0</Value2>
							<SkipCase Id="4">No offline object dictionary defined.</SkipCase>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="InitAtLeastOneProfileMatch">
					<SetVariable Target="bAtLeastOneModuleMatch">false</SetVariable>
				</TestStep>
				<TestStep Name="GetCurrentProfileList">
					<SizeOf UInt32Var="u32Tmp">arrOfflineProfiles</SizeOf>
					<Compare>
						<Equal>
							<Value1>u32Tmp</Value1>
							<Value2>0</Value2>
							<CallTestFunction Name="GetCurrentProfileList">
								<Parameter>"offline"</Parameter>
								<Parameter>"SafeOP"</Parameter>
								<OutParameter>arrOfflineProfiles</OutParameter>
							</CallTestFunction>
						</Equal>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>u32Tmp</Value1>
							<Value2>0</Value2>
							<WriteLine Id="5" Param0="arrOfflineProfiles" Level="Verbose">Use previously created profile list ({0})</WriteLine>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep>
					<SizeOf UInt32Var="u32Tmp">arrOfflineProfiles</SizeOf>
				</TestStep>
				<TestStep>
					<InitArray TargetArray="arrCurrentProfiles" Length="u32Tmp"></InitArray>
				</TestStep>
				<TestStep>
					<CopyArray>
						<SourceArray>arrOfflineProfiles</SourceArray>
						<DestinationArray>arrCurrentProfiles</DestinationArray>
						<Length>u32Tmp</Length>
					</CopyArray>
				</TestStep>
				<TestStep Name="IsProfileSupported">
					<CallTestFunction Name="DeviceAndModuleProfileDefined">
						<Parameter>arrCurrentProfiles</Parameter>
						<Parameter>5003</Parameter>
						<Parameter>2011</Parameter>
						<OutParameter>bAtLeastOneModuleMatch</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>bAtLeastOneModuleMatch</Value1>
							<Value2>false</Value2>
							<GotoStep>END</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="GetObjectIndexInclOffset">
					<SetVariable Target="u16ObjectIndexInclOffset">#xF9F3</SetVariable>
					<WriteLine Id="6" Param0="u16ObjectIndexInclOffset" Level="Verbose">ObjectIndex '0x{0:X}' (module independent)</WriteLine>
				</TestStep>
				<TestStep Name="LoadDeviceObjectDictionary">
					<Description Id="7" Level="Verbose">Load 'offline' object dictionary for testing.</Description>
					<GetObjectDictionary Target="odDeviceObjectdictionary">
						<DictionaryType>Offline</DictionaryType>
					</GetObjectDictionary>
					<RaiseErrorOnFailure Id="8">VerifyObject : failed to load offline object dictionary.</RaiseErrorOnFailure>
				</TestStep>
				<TestStep Name="CallCheckObjectDescription">
					<Description Id="9" Param0="u16ObjectIndexInclOffset" Level="Output">Verify the object description 0x{0:X4} 'Vendor Name'.</Description>
					<CallTestFunction Name="CheckObjectDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"offline"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>"Vendor Name"</Parameter>
						<Parameter>null</Parameter>
						<Parameter>7</Parameter>
						<Parameter>-1</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<GotoStep>END</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CallSi0CheckEntryDescription">
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"offline"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>0</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>null</Parameter>
						<Parameter>9</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>null</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>i32CurrentBitOffset</Parameter>
						<Parameter>true</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="END">
					<Compare>
						<NotEqual>
							<Value1>bAtLeastOneModuleMatch</Value1>
							<Value2>true</Value2>
							<SkipCase Id="10">SKIP TEST(no module/channel supports the current profile)</SkipCase>
						</NotEqual>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bDEBUG</Value1>
							<Value2>true</Value2>
							<WriteLine Id="11" Param0="strResult" Level="Verbose">DEBUG | Result : '{0}'.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>strResult</Value1>
							<Value2>EmptyString</Value2>
							<ReturnSuccess Id="12">Test succeed</ReturnSuccess>
						</Equal>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>strResult</Value1>
							<Value2>EmptyString</Value2>
							<RaiseError Id="13"></RaiseError>
						</NotEqual>
					</Compare>
				</TestStep>
			</TestCase>
			<TestCase Name="online | 0xF9F3 (Vendor Name)" CaseId="8">
				<Description>
					<PreCondition>- The device profile is 5003
- The module profile is 2011
- The submodule profile is 0</PreCondition>
					<Action>- Iterate over all online defined modules/channels and if the PreCondition matches the following operations are done:
- Get the online description of object 0xF9F3(+module specific offset) 'Vendor Name' and all entries
 Check:
    (Name)
    BitSize
    DataType
    Rx / Tx mappable
    Default Data
    MinData
    Flags       </Action>
					<PostCondition>Error if
- mandatory object / entry is not defined
- an optional object exists and the entries are invalid
- Object / entry description does not match with the specification</PostCondition>
					<ProposalForSolution>- Define the missing objects
- correct object / entry description</ProposalForSolution>
					<References>
						<Reference Specification="ETG.5003.2011"></Reference>
					</References>
					<Mandatory>true</Mandatory>
				</Description>
				<TestStep Name="InitResult">
					<SetVariable Target="strResult">EmptyString</SetVariable>
				</TestStep>
				<TestStep Name="CheckIfOdAvailable">
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Mailbox</Value1>
							<Value2>false</Value2>
							<SkipCase Id="1">DuT does not support mailbox.</SkipCase>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Mailbox.CoE</Value1>
							<Value2>false</Value2>
							<SkipCase Id="2">DuT does not support CoE.</SkipCase>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Mailbox.CoE.SdoInfo</Value1>
							<Value2>false</Value2>
							<SkipCase Id="3">DuT does not support SDO Info.</SkipCase>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="InitAtLeastOneProfileMatch">
					<SetVariable Target="bAtLeastOneModuleMatch">false</SetVariable>
				</TestStep>
				<TestStep Name="GetCurrentProfileList">
					<SizeOf UInt32Var="u32Tmp">arrOnlineProfiles</SizeOf>
					<Compare>
						<Equal>
							<Value1>u32Tmp</Value1>
							<Value2>0</Value2>
							<CallTestFunction Name="GetCurrentProfileList">
								<Parameter>"online"</Parameter>
								<Parameter>"SafeOP"</Parameter>
								<OutParameter>arrOnlineProfiles</OutParameter>
							</CallTestFunction>
						</Equal>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>u32Tmp</Value1>
							<Value2>0</Value2>
							<WriteLine Id="4" Param0="arrOnlineProfiles" Level="Verbose">Use previously created profile list ({0})</WriteLine>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep>
					<SizeOf UInt32Var="u32Tmp">arrOnlineProfiles</SizeOf>
				</TestStep>
				<TestStep>
					<InitArray TargetArray="arrCurrentProfiles" Length="u32Tmp"></InitArray>
				</TestStep>
				<TestStep>
					<CopyArray>
						<SourceArray>arrOnlineProfiles</SourceArray>
						<DestinationArray>arrCurrentProfiles</DestinationArray>
						<Length>u32Tmp</Length>
					</CopyArray>
				</TestStep>
				<TestStep Name="IsProfileSupported">
					<CallTestFunction Name="DeviceAndModuleProfileDefined">
						<Parameter>arrCurrentProfiles</Parameter>
						<Parameter>5003</Parameter>
						<Parameter>2011</Parameter>
						<OutParameter>bAtLeastOneModuleMatch</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>bAtLeastOneModuleMatch</Value1>
							<Value2>false</Value2>
							<GotoStep>END</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="GetObjectIndexInclOffset">
					<SetVariable Target="u16ObjectIndexInclOffset">#xF9F3</SetVariable>
					<WriteLine Id="5" Param0="u16ObjectIndexInclOffset" Level="Verbose">ObjectIndex '0x{0:X}' (module independent)</WriteLine>
				</TestStep>
				<TestStep Name="LoadDeviceObjectDictionary">
					<Description Id="6" Level="Verbose">Load 'online' object dictionary for testing.</Description>
					<GetObjectDictionary Target="odDeviceObjectdictionary">
						<DictionaryType>Online</DictionaryType>
					</GetObjectDictionary>
					<RaiseErrorOnFailure Id="7">VerifyObject : failed to load online object dictionary.</RaiseErrorOnFailure>
				</TestStep>
				<TestStep Name="CallCheckObjectDescription">
					<Description Id="8" Param0="u16ObjectIndexInclOffset" Level="Output">Verify the object description 0x{0:X4} 'Vendor Name'.</Description>
					<CallTestFunction Name="CheckObjectDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"online"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>"Vendor Name"</Parameter>
						<Parameter>null</Parameter>
						<Parameter>7</Parameter>
						<Parameter>-1</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<GotoStep>END</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CallSi0CheckEntryDescription">
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"online"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>0</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>null</Parameter>
						<Parameter>9</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>null</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>i32CurrentBitOffset</Parameter>
						<Parameter>true</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="END">
					<Compare>
						<NotEqual>
							<Value1>bAtLeastOneModuleMatch</Value1>
							<Value2>true</Value2>
							<SkipCase Id="9">SKIP TEST(no module/channel supports the current profile)</SkipCase>
						</NotEqual>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bDEBUG</Value1>
							<Value2>true</Value2>
							<WriteLine Id="10" Param0="strResult" Level="Verbose">DEBUG | Result : '{0}'.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>strResult</Value1>
							<Value2>EmptyString</Value2>
							<ReturnSuccess Id="11">Test succeed</ReturnSuccess>
						</Equal>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>strResult</Value1>
							<Value2>EmptyString</Value2>
							<RaiseError Id="12"></RaiseError>
						</NotEqual>
					</Compare>
				</TestStep>
			</TestCase>
			<TestCase Name="offline | 0xF9F4 (Semiconductor SDP Device Name)" CaseId="9">
				<Description>
					<PreCondition>- The device profile is 5003
- The module profile is 2011
- The submodule profile is 0</PreCondition>
					<Action>- Iterate over all offline defined modules/channels and if the PreCondition matches the following operations are done:
- Get the offline description of object 0xF9F4(+module specific offset) 'Semiconductor SDP Device Name' and all entries
 Check:
    (Name)
    BitSize
    DataType
    Rx / Tx mappable
    Default Data
    MinData
    Flags       </Action>
					<PostCondition>Error if
- mandatory object / entry is not defined
- an optional object exists and the entries are invalid
- Object / entry description does not match with the specification</PostCondition>
					<ProposalForSolution>- Define the missing objects
- correct object / entry description</ProposalForSolution>
					<References>
						<Reference Specification="ETG.5003.2011"></Reference>
					</References>
					<Mandatory>true</Mandatory>
				</Description>
				<TestStep Name="InitResult">
					<SetVariable Target="strResult">EmptyString</SetVariable>
				</TestStep>
				<TestStep Name="CheckIfOdAvailable">
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Mailbox</Value1>
							<Value2>false</Value2>
							<SkipCase Id="1">DuT does not support mailbox.</SkipCase>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Mailbox.CoE</Value1>
							<Value2>false</Value2>
							<SkipCase Id="2">DuT does not support CoE.</SkipCase>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep>
					<GetObjectDictionary Target="odDeviceObjectdictionary">
						<DictionaryType>Offline</DictionaryType>
					</GetObjectDictionary>
					<SkipOnFailure Id="3">No offline object dictionary defined.</SkipOnFailure>
				</TestStep>
				<TestStep>
					<GetObjectList Count="u32Tmp" Target="odDeviceObjectdictionaryList" SourceDict="odDeviceObjectdictionary"></GetObjectList>
					<Compare>
						<Equal>
							<Value1>u32Tmp</Value1>
							<Value2>0</Value2>
							<SkipCase Id="4">No offline object dictionary defined.</SkipCase>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="InitAtLeastOneProfileMatch">
					<SetVariable Target="bAtLeastOneModuleMatch">false</SetVariable>
				</TestStep>
				<TestStep Name="GetCurrentProfileList">
					<SizeOf UInt32Var="u32Tmp">arrOfflineProfiles</SizeOf>
					<Compare>
						<Equal>
							<Value1>u32Tmp</Value1>
							<Value2>0</Value2>
							<CallTestFunction Name="GetCurrentProfileList">
								<Parameter>"offline"</Parameter>
								<Parameter>"SafeOP"</Parameter>
								<OutParameter>arrOfflineProfiles</OutParameter>
							</CallTestFunction>
						</Equal>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>u32Tmp</Value1>
							<Value2>0</Value2>
							<WriteLine Id="5" Param0="arrOfflineProfiles" Level="Verbose">Use previously created profile list ({0})</WriteLine>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep>
					<SizeOf UInt32Var="u32Tmp">arrOfflineProfiles</SizeOf>
				</TestStep>
				<TestStep>
					<InitArray TargetArray="arrCurrentProfiles" Length="u32Tmp"></InitArray>
				</TestStep>
				<TestStep>
					<CopyArray>
						<SourceArray>arrOfflineProfiles</SourceArray>
						<DestinationArray>arrCurrentProfiles</DestinationArray>
						<Length>u32Tmp</Length>
					</CopyArray>
				</TestStep>
				<TestStep Name="IsProfileSupported">
					<CallTestFunction Name="DeviceAndModuleProfileDefined">
						<Parameter>arrCurrentProfiles</Parameter>
						<Parameter>5003</Parameter>
						<Parameter>2011</Parameter>
						<OutParameter>bAtLeastOneModuleMatch</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>bAtLeastOneModuleMatch</Value1>
							<Value2>false</Value2>
							<GotoStep>END</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="GetObjectIndexInclOffset">
					<SetVariable Target="u16ObjectIndexInclOffset">#xF9F4</SetVariable>
					<WriteLine Id="6" Param0="u16ObjectIndexInclOffset" Level="Verbose">ObjectIndex '0x{0:X}' (module independent)</WriteLine>
				</TestStep>
				<TestStep Name="LoadDeviceObjectDictionary">
					<Description Id="7" Level="Verbose">Load 'offline' object dictionary for testing.</Description>
					<GetObjectDictionary Target="odDeviceObjectdictionary">
						<DictionaryType>Offline</DictionaryType>
					</GetObjectDictionary>
					<RaiseErrorOnFailure Id="8">VerifyObject : failed to load offline object dictionary.</RaiseErrorOnFailure>
				</TestStep>
				<TestStep Name="CallCheckObjectDescription">
					<Description Id="9" Param0="u16ObjectIndexInclOffset" Level="Output">Verify the object description 0x{0:X4} 'Semiconductor SDP Device Name'.</Description>
					<CallTestFunction Name="CheckObjectDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"offline"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>"Semiconductor SDP Device Name"</Parameter>
						<Parameter>null</Parameter>
						<Parameter>8</Parameter>
						<Parameter>-1</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<GotoStep>END</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="InitEntryBittOffset">
					<SetVariable Target="i32CurrentBitOffset">0</SetVariable>
				</TestStep>
				<TestStep Name="StartSi0">
					<Description Id="10" Level="Output">Start validate SubIndex0</Description>
					<WriteLine Id="11" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : Subindex '0x{0:X}.0'</WriteLine>
				</TestStep>
				<TestStep Name="CallSi0CheckEntryDescription">
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"offline"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>0</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>null</Parameter>
						<Parameter>5</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>null</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>null</Parameter>
						<Parameter>null</Parameter>
						<Parameter>null</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>8</Parameter>
						<Parameter>i32CurrentBitOffset</Parameter>
						<Parameter>true</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="EndSi0">
					<SetVariable Target="i32CurrentBitOffset">16</SetVariable>
				</TestStep>
				<TestStep Name="InitProfileLoopCounter">
					<SetVariable Target="u32ProfileCounter">0</SetVariable>
				</TestStep>
				<TestStep Name="GetProfileArrayLength">
					<SizeOf UInt32Var="u32CurrentProfilesLength">arrCurrentProfiles</SizeOf>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="12" Param0="u32CurrentProfilesLength" Level="Verbose">'{0}' Profile(s) defined offline.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>u32CurrentProfilesLength</Value1>
							<Value2>0</Value2>
							<SkipCase Id="13">Skip case | no profile defined.</SkipCase>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="ProfileLoopStart">
					<GetArrayItem SourceArray="arrCurrentProfiles" Target="strTmpString" Index="u32ProfileCounter"></GetArrayItem>
				</TestStep>
				<TestStep Name="CheckProfileInformationString">
					<Compare>
						<Equal>
							<Value1>strTmpString</Value1>
							<Value2>null</Value2>
							<RaiseError Id="14" Param0="u32ProfileCounter">Profile Info element [{0}] is null.</RaiseError>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>strTmpString</Value1>
							<Value2>EmptyString</Value2>
							<RaiseError Id="15" Param0="u32ProfileCounter">Profile Info element [{0}] is an empty string.</RaiseError>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="GetDeviceProfile">
					<CallTestFunction Name="GetDeviceProfile">
						<Parameter>strTmpString</Parameter>
						<OutParameter>uint16CurDeviceProfile</OutParameter>
					</CallTestFunction>
				</TestStep>
				<TestStep Name="GetModuleProfile">
					<CallTestFunction Name="GetModuleProfile">
						<Parameter>strTmpString</Parameter>
						<OutParameter>uint16CurModuleProfile</OutParameter>
					</CallTestFunction>
				</TestStep>
				<TestStep Name="GetSubModuleProfile">
					<CallTestFunction Name="GetSubModuleProfile">
						<Parameter>strTmpString</Parameter>
						<OutParameter>uint16CurSubModuleProfile</OutParameter>
					</CallTestFunction>
				</TestStep>
				<TestStep Name="DumpProfileInfo">
					<Description Id="16" Param0="uint16CurDeviceProfile" Param1="uint16CurModuleProfile" Param2="uint16CurSubModuleProfile" Param3="u32ProfileCounter" Level="Output">Module[{3}] : DeviceProfile '{0}' ; ModuleProfile '{1}' ; SubModuleProfile '{2}'</Description>
					<Compare>
						<Equal>
							<Value1>bIgnoreProfileID</Value1>
							<Value2>true</Value2>
							<GotoStep>IndicateThatAtleastOneModuleMatch</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CompareDeviceProfile">
					<Compare>
						<NotEqual>
							<Value1>uint16CurDeviceProfile</Value1>
							<Value2>5003</Value2>
							<WriteLine Id="17" Param0="uint16CurDeviceProfile" Level="Output">Skip Profile  (Test Device Profile '5003' != Cur Device Profile '{0}')</WriteLine>
						</NotEqual>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>uint16CurDeviceProfile</Value1>
							<Value2>5003</Value2>
							<GotoStep>ProfileLoopEnd</GotoStep>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep Name="CompareModuleProfile">
					<Compare>
						<NotEqual>
							<Value1>uint16CurModuleProfile</Value1>
							<Value2>2011</Value2>
							<WriteLine Id="18" Param0="uint16CurModuleProfile" Level="Output">Skip Profile  (Test Module Profile '2011' != Cur Module Profile '{0}')</WriteLine>
						</NotEqual>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>uint16CurModuleProfile</Value1>
							<Value2>2011</Value2>
							<GotoStep>ProfileLoopEnd</GotoStep>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep Name="CompareSubModuleProfile">
					<Compare>
						<NotEqual>
							<Value1>uint16CurSubModuleProfile</Value1>
							<Value2>0</Value2>
							<WriteLine Id="19" Param0="uint16CurSubModuleProfile" Level="Output">Skip Profile  (Test SubModule Profile '0' != Cur SubModule Profile '{0}')</WriteLine>
						</NotEqual>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>uint16CurSubModuleProfile</Value1>
							<Value2>0</Value2>
							<GotoStep>ProfileLoopEnd</GotoStep>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep Name="IndicateThatAtleastOneModuleMatch">
					<SetVariable Target="bAtLeastOneModuleMatch">true</SetVariable>
				</TestStep>
				<TestStep Name="StartSi1">
					<Description Id="20" Param0="1 + (u32ProfileCounter * 1)" Level="Output">Start validate SubIndex{0}</Description>
					<SetVariable Target="byteSubIndexInclOffset">1 + (u32ProfileCounter * 1)</SetVariable>
					<WriteLine Id="21" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Param2="byteSubIndexInclOffset" Level="Verbose">Module[{1}] : Subindex '0x{0:X}.{2}'</WriteLine>
				</TestStep>
				<TestStep Name="CallSi1CheckEntryDescription">
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"offline"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>byteSubIndexInclOffset</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>null</Parameter>
						<Parameter>9</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>null</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>i32CurrentBitOffset</Parameter>
						<Parameter>true</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="EndSi1">
					<SetVariable Target="i32CurrentBitOffset">-1</SetVariable>
				</TestStep>
				<TestStep Name="ProfileLoopEnd">
					<Compare>
						<Equal>
							<Value1>bAtLeastOneModuleMatch</Value1>
							<Value2>false</Value2>
							<GotoStep>HandleAbortTestCaseOnFirstError</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="HandleAbortTestCaseOnFirstError">
					<Compare>
						<Equal>
							<Value1>bAbortTestCaseOnFirstError</Value1>
							<Value2>false</Value2>
							<GotoStep>ProfileLoopIncrement</GotoStep>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>strResult</Value1>
							<Value2>EmptyString</Value2>
							<GotoStep>ProfileLoopIncrement</GotoStep>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="22" Level="Output">Object verification for all following modules abort because an error was already detected for the current module.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>END</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="ProfileLoopIncrement">
					<SetVariable Target="u32ProfileCounter">u32ProfileCounter + 1</SetVariable>
					<Compare>
						<Greater>
							<Value1>u32CurrentProfilesLength</Value1>
							<Value2>u32ProfileCounter</Value2>
							<GotoStep>ProfileLoopStart</GotoStep>
						</Greater>
					</Compare>
				</TestStep>
				<TestStep Name="END">
					<Compare>
						<NotEqual>
							<Value1>bAtLeastOneModuleMatch</Value1>
							<Value2>true</Value2>
							<SkipCase Id="23">SKIP TEST(no module/channel supports the current profile)</SkipCase>
						</NotEqual>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bDEBUG</Value1>
							<Value2>true</Value2>
							<WriteLine Id="24" Param0="strResult" Level="Verbose">DEBUG | Result : '{0}'.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>strResult</Value1>
							<Value2>EmptyString</Value2>
							<ReturnSuccess Id="25">Test succeed</ReturnSuccess>
						</Equal>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>strResult</Value1>
							<Value2>EmptyString</Value2>
							<RaiseError Id="26"></RaiseError>
						</NotEqual>
					</Compare>
				</TestStep>
			</TestCase>
			<TestCase Name="online | 0xF9F4 (Semiconductor SDP Device Name)" CaseId="10">
				<Description>
					<PreCondition>- The device profile is 5003
- The module profile is 2011
- The submodule profile is 0</PreCondition>
					<Action>- Iterate over all online defined modules/channels and if the PreCondition matches the following operations are done:
- Get the online description of object 0xF9F4(+module specific offset) 'Semiconductor SDP Device Name' and all entries
 Check:
    (Name)
    BitSize
    DataType
    Rx / Tx mappable
    Default Data
    MinData
    Flags       </Action>
					<PostCondition>Error if
- mandatory object / entry is not defined
- an optional object exists and the entries are invalid
- Object / entry description does not match with the specification</PostCondition>
					<ProposalForSolution>- Define the missing objects
- correct object / entry description</ProposalForSolution>
					<References>
						<Reference Specification="ETG.5003.2011"></Reference>
					</References>
					<Mandatory>true</Mandatory>
				</Description>
				<TestStep Name="InitResult">
					<SetVariable Target="strResult">EmptyString</SetVariable>
				</TestStep>
				<TestStep Name="CheckIfOdAvailable">
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Mailbox</Value1>
							<Value2>false</Value2>
							<SkipCase Id="1">DuT does not support mailbox.</SkipCase>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Mailbox.CoE</Value1>
							<Value2>false</Value2>
							<SkipCase Id="2">DuT does not support CoE.</SkipCase>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Mailbox.CoE.SdoInfo</Value1>
							<Value2>false</Value2>
							<SkipCase Id="3">DuT does not support SDO Info.</SkipCase>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="InitAtLeastOneProfileMatch">
					<SetVariable Target="bAtLeastOneModuleMatch">false</SetVariable>
				</TestStep>
				<TestStep Name="GetCurrentProfileList">
					<SizeOf UInt32Var="u32Tmp">arrOnlineProfiles</SizeOf>
					<Compare>
						<Equal>
							<Value1>u32Tmp</Value1>
							<Value2>0</Value2>
							<CallTestFunction Name="GetCurrentProfileList">
								<Parameter>"online"</Parameter>
								<Parameter>"SafeOP"</Parameter>
								<OutParameter>arrOnlineProfiles</OutParameter>
							</CallTestFunction>
						</Equal>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>u32Tmp</Value1>
							<Value2>0</Value2>
							<WriteLine Id="4" Param0="arrOnlineProfiles" Level="Verbose">Use previously created profile list ({0})</WriteLine>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep>
					<SizeOf UInt32Var="u32Tmp">arrOnlineProfiles</SizeOf>
				</TestStep>
				<TestStep>
					<InitArray TargetArray="arrCurrentProfiles" Length="u32Tmp"></InitArray>
				</TestStep>
				<TestStep>
					<CopyArray>
						<SourceArray>arrOnlineProfiles</SourceArray>
						<DestinationArray>arrCurrentProfiles</DestinationArray>
						<Length>u32Tmp</Length>
					</CopyArray>
				</TestStep>
				<TestStep Name="IsProfileSupported">
					<CallTestFunction Name="DeviceAndModuleProfileDefined">
						<Parameter>arrCurrentProfiles</Parameter>
						<Parameter>5003</Parameter>
						<Parameter>2011</Parameter>
						<OutParameter>bAtLeastOneModuleMatch</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>bAtLeastOneModuleMatch</Value1>
							<Value2>false</Value2>
							<GotoStep>END</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="GetObjectIndexInclOffset">
					<SetVariable Target="u16ObjectIndexInclOffset">#xF9F4</SetVariable>
					<WriteLine Id="5" Param0="u16ObjectIndexInclOffset" Level="Verbose">ObjectIndex '0x{0:X}' (module independent)</WriteLine>
				</TestStep>
				<TestStep Name="LoadDeviceObjectDictionary">
					<Description Id="6" Level="Verbose">Load 'online' object dictionary for testing.</Description>
					<GetObjectDictionary Target="odDeviceObjectdictionary">
						<DictionaryType>Online</DictionaryType>
					</GetObjectDictionary>
					<RaiseErrorOnFailure Id="7">VerifyObject : failed to load online object dictionary.</RaiseErrorOnFailure>
				</TestStep>
				<TestStep Name="CallCheckObjectDescription">
					<Description Id="8" Param0="u16ObjectIndexInclOffset" Level="Output">Verify the object description 0x{0:X4} 'Semiconductor SDP Device Name'.</Description>
					<CallTestFunction Name="CheckObjectDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"online"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>"Semiconductor SDP Device Name"</Parameter>
						<Parameter>null</Parameter>
						<Parameter>8</Parameter>
						<Parameter>-1</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<GotoStep>END</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="InitEntryBittOffset">
					<SetVariable Target="i32CurrentBitOffset">0</SetVariable>
				</TestStep>
				<TestStep Name="StartSi0">
					<Description Id="9" Level="Output">Start validate SubIndex0</Description>
					<WriteLine Id="10" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : Subindex '0x{0:X}.0'</WriteLine>
				</TestStep>
				<TestStep Name="CallSi0CheckEntryDescription">
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"online"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>0</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>null</Parameter>
						<Parameter>5</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>null</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>null</Parameter>
						<Parameter>null</Parameter>
						<Parameter>null</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>8</Parameter>
						<Parameter>i32CurrentBitOffset</Parameter>
						<Parameter>true</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="EndSi0">
					<SetVariable Target="i32CurrentBitOffset">16</SetVariable>
				</TestStep>
				<TestStep Name="InitProfileLoopCounter">
					<SetVariable Target="u32ProfileCounter">0</SetVariable>
				</TestStep>
				<TestStep Name="GetProfileArrayLength">
					<SizeOf UInt32Var="u32CurrentProfilesLength">arrCurrentProfiles</SizeOf>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="11" Param0="u32CurrentProfilesLength" Level="Verbose">'{0}' Profile(s) defined online.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>u32CurrentProfilesLength</Value1>
							<Value2>0</Value2>
							<SkipCase Id="12">Skip case | no profile defined.</SkipCase>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="ProfileLoopStart">
					<GetArrayItem SourceArray="arrCurrentProfiles" Target="strTmpString" Index="u32ProfileCounter"></GetArrayItem>
				</TestStep>
				<TestStep Name="CheckProfileInformationString">
					<Compare>
						<Equal>
							<Value1>strTmpString</Value1>
							<Value2>null</Value2>
							<RaiseError Id="13" Param0="u32ProfileCounter">Profile Info element [{0}] is null.</RaiseError>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>strTmpString</Value1>
							<Value2>EmptyString</Value2>
							<RaiseError Id="14" Param0="u32ProfileCounter">Profile Info element [{0}] is an empty string.</RaiseError>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="GetDeviceProfile">
					<CallTestFunction Name="GetDeviceProfile">
						<Parameter>strTmpString</Parameter>
						<OutParameter>uint16CurDeviceProfile</OutParameter>
					</CallTestFunction>
				</TestStep>
				<TestStep Name="GetModuleProfile">
					<CallTestFunction Name="GetModuleProfile">
						<Parameter>strTmpString</Parameter>
						<OutParameter>uint16CurModuleProfile</OutParameter>
					</CallTestFunction>
				</TestStep>
				<TestStep Name="GetSubModuleProfile">
					<CallTestFunction Name="GetSubModuleProfile">
						<Parameter>strTmpString</Parameter>
						<OutParameter>uint16CurSubModuleProfile</OutParameter>
					</CallTestFunction>
				</TestStep>
				<TestStep Name="DumpProfileInfo">
					<Description Id="15" Param0="uint16CurDeviceProfile" Param1="uint16CurModuleProfile" Param2="uint16CurSubModuleProfile" Param3="u32ProfileCounter" Level="Output">Module[{3}] : DeviceProfile '{0}' ; ModuleProfile '{1}' ; SubModuleProfile '{2}'</Description>
					<Compare>
						<Equal>
							<Value1>bIgnoreProfileID</Value1>
							<Value2>true</Value2>
							<GotoStep>IndicateThatAtleastOneModuleMatch</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CompareDeviceProfile">
					<Compare>
						<NotEqual>
							<Value1>uint16CurDeviceProfile</Value1>
							<Value2>5003</Value2>
							<WriteLine Id="16" Param0="uint16CurDeviceProfile" Level="Output">Skip Profile  (Test Device Profile '5003' != Cur Device Profile '{0}')</WriteLine>
						</NotEqual>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>uint16CurDeviceProfile</Value1>
							<Value2>5003</Value2>
							<GotoStep>ProfileLoopEnd</GotoStep>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep Name="CompareModuleProfile">
					<Compare>
						<NotEqual>
							<Value1>uint16CurModuleProfile</Value1>
							<Value2>2011</Value2>
							<WriteLine Id="17" Param0="uint16CurModuleProfile" Level="Output">Skip Profile  (Test Module Profile '2011' != Cur Module Profile '{0}')</WriteLine>
						</NotEqual>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>uint16CurModuleProfile</Value1>
							<Value2>2011</Value2>
							<GotoStep>ProfileLoopEnd</GotoStep>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep Name="CompareSubModuleProfile">
					<Compare>
						<NotEqual>
							<Value1>uint16CurSubModuleProfile</Value1>
							<Value2>0</Value2>
							<WriteLine Id="18" Param0="uint16CurSubModuleProfile" Level="Output">Skip Profile  (Test SubModule Profile '0' != Cur SubModule Profile '{0}')</WriteLine>
						</NotEqual>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>uint16CurSubModuleProfile</Value1>
							<Value2>0</Value2>
							<GotoStep>ProfileLoopEnd</GotoStep>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep Name="IndicateThatAtleastOneModuleMatch">
					<SetVariable Target="bAtLeastOneModuleMatch">true</SetVariable>
				</TestStep>
				<TestStep Name="StartSi1">
					<Description Id="19" Param0="1 + (u32ProfileCounter * 1)" Level="Output">Start validate SubIndex{0}</Description>
					<SetVariable Target="byteSubIndexInclOffset">1 + (u32ProfileCounter * 1)</SetVariable>
					<WriteLine Id="20" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Param2="byteSubIndexInclOffset" Level="Verbose">Module[{1}] : Subindex '0x{0:X}.{2}'</WriteLine>
				</TestStep>
				<TestStep Name="CallSi1CheckEntryDescription">
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"online"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>byteSubIndexInclOffset</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>null</Parameter>
						<Parameter>9</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>null</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>i32CurrentBitOffset</Parameter>
						<Parameter>true</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="EndSi1">
					<SetVariable Target="i32CurrentBitOffset">-1</SetVariable>
				</TestStep>
				<TestStep Name="ProfileLoopEnd">
					<Compare>
						<Equal>
							<Value1>bAtLeastOneModuleMatch</Value1>
							<Value2>false</Value2>
							<GotoStep>HandleAbortTestCaseOnFirstError</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="HandleAbortTestCaseOnFirstError">
					<Compare>
						<Equal>
							<Value1>bAbortTestCaseOnFirstError</Value1>
							<Value2>false</Value2>
							<GotoStep>ProfileLoopIncrement</GotoStep>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>strResult</Value1>
							<Value2>EmptyString</Value2>
							<GotoStep>ProfileLoopIncrement</GotoStep>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="21" Level="Output">Object verification for all following modules abort because an error was already detected for the current module.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>END</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="ProfileLoopIncrement">
					<SetVariable Target="u32ProfileCounter">u32ProfileCounter + 1</SetVariable>
					<Compare>
						<Greater>
							<Value1>u32CurrentProfilesLength</Value1>
							<Value2>u32ProfileCounter</Value2>
							<GotoStep>ProfileLoopStart</GotoStep>
						</Greater>
					</Compare>
				</TestStep>
				<TestStep Name="END">
					<Compare>
						<NotEqual>
							<Value1>bAtLeastOneModuleMatch</Value1>
							<Value2>true</Value2>
							<SkipCase Id="22">SKIP TEST(no module/channel supports the current profile)</SkipCase>
						</NotEqual>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bDEBUG</Value1>
							<Value2>true</Value2>
							<WriteLine Id="23" Param0="strResult" Level="Verbose">DEBUG | Result : '{0}'.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>strResult</Value1>
							<Value2>EmptyString</Value2>
							<ReturnSuccess Id="24">Test succeed</ReturnSuccess>
						</Equal>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>strResult</Value1>
							<Value2>EmptyString</Value2>
							<RaiseError Id="25"></RaiseError>
						</NotEqual>
					</Compare>
				</TestStep>
			</TestCase>
			<TestCase Name="offline | 0xF9F5 (Output Identifier)" CaseId="11">
				<Description>
					<PreCondition>- The device profile is 5003
- The module profile is 2011
- The submodule profile is 0</PreCondition>
					<Action>- Iterate over all offline defined modules/channels and if the PreCondition matches the following operations are done:
- Get the offline description of object 0xF9F5(+module specific offset) 'Output Identifier' and all entries
 Check:
    (Name)
    BitSize
    DataType
    Rx / Tx mappable
    Default Data
    MinData
    Flags       </Action>
					<PostCondition>Error if
- mandatory object / entry is not defined
- an optional object exists and the entries are invalid
- Object / entry description does not match with the specification</PostCondition>
					<ProposalForSolution>- Define the missing objects
- correct object / entry description</ProposalForSolution>
					<References>
						<Reference Specification="ETG.5003.2011"></Reference>
					</References>
					<Mandatory>true</Mandatory>
				</Description>
				<TestStep Name="InitResult">
					<SetVariable Target="strResult">EmptyString</SetVariable>
				</TestStep>
				<TestStep Name="CheckIfOdAvailable">
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Mailbox</Value1>
							<Value2>false</Value2>
							<SkipCase Id="1">DuT does not support mailbox.</SkipCase>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Mailbox.CoE</Value1>
							<Value2>false</Value2>
							<SkipCase Id="2">DuT does not support CoE.</SkipCase>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep>
					<GetObjectDictionary Target="odDeviceObjectdictionary">
						<DictionaryType>Offline</DictionaryType>
					</GetObjectDictionary>
					<SkipOnFailure Id="3">No offline object dictionary defined.</SkipOnFailure>
				</TestStep>
				<TestStep>
					<GetObjectList Count="u32Tmp" Target="odDeviceObjectdictionaryList" SourceDict="odDeviceObjectdictionary"></GetObjectList>
					<Compare>
						<Equal>
							<Value1>u32Tmp</Value1>
							<Value2>0</Value2>
							<SkipCase Id="4">No offline object dictionary defined.</SkipCase>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="InitAtLeastOneProfileMatch">
					<SetVariable Target="bAtLeastOneModuleMatch">false</SetVariable>
				</TestStep>
				<TestStep Name="GetCurrentProfileList">
					<SizeOf UInt32Var="u32Tmp">arrOfflineProfiles</SizeOf>
					<Compare>
						<Equal>
							<Value1>u32Tmp</Value1>
							<Value2>0</Value2>
							<CallTestFunction Name="GetCurrentProfileList">
								<Parameter>"offline"</Parameter>
								<Parameter>"SafeOP"</Parameter>
								<OutParameter>arrOfflineProfiles</OutParameter>
							</CallTestFunction>
						</Equal>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>u32Tmp</Value1>
							<Value2>0</Value2>
							<WriteLine Id="5" Param0="arrOfflineProfiles" Level="Verbose">Use previously created profile list ({0})</WriteLine>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep>
					<SizeOf UInt32Var="u32Tmp">arrOfflineProfiles</SizeOf>
				</TestStep>
				<TestStep>
					<InitArray TargetArray="arrCurrentProfiles" Length="u32Tmp"></InitArray>
				</TestStep>
				<TestStep>
					<CopyArray>
						<SourceArray>arrOfflineProfiles</SourceArray>
						<DestinationArray>arrCurrentProfiles</DestinationArray>
						<Length>u32Tmp</Length>
					</CopyArray>
				</TestStep>
				<TestStep Name="IsProfileSupported">
					<CallTestFunction Name="DeviceAndModuleProfileDefined">
						<Parameter>arrCurrentProfiles</Parameter>
						<Parameter>5003</Parameter>
						<Parameter>2011</Parameter>
						<OutParameter>bAtLeastOneModuleMatch</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>bAtLeastOneModuleMatch</Value1>
							<Value2>false</Value2>
							<GotoStep>END</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="GetObjectIndexInclOffset">
					<SetVariable Target="u16ObjectIndexInclOffset">#xF9F5</SetVariable>
					<WriteLine Id="6" Param0="u16ObjectIndexInclOffset" Level="Verbose">ObjectIndex '0x{0:X}' (module independent)</WriteLine>
				</TestStep>
				<TestStep Name="LoadDeviceObjectDictionary">
					<Description Id="7" Level="Verbose">Load 'offline' object dictionary for testing.</Description>
					<GetObjectDictionary Target="odDeviceObjectdictionary">
						<DictionaryType>Offline</DictionaryType>
					</GetObjectDictionary>
					<RaiseErrorOnFailure Id="8">VerifyObject : failed to load offline object dictionary.</RaiseErrorOnFailure>
				</TestStep>
				<TestStep Name="CallCheckObjectDescription">
					<Description Id="9" Param0="u16ObjectIndexInclOffset" Level="Output">Verify the object description 0x{0:X4} 'Output Identifier'.</Description>
					<CallTestFunction Name="CheckObjectDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"offline"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>"Output Identifier"</Parameter>
						<Parameter>null</Parameter>
						<Parameter>8</Parameter>
						<Parameter>-1</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<GotoStep>END</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="InitEntryBittOffset">
					<SetVariable Target="i32CurrentBitOffset">0</SetVariable>
				</TestStep>
				<TestStep Name="StartSi0">
					<Description Id="10" Level="Output">Start validate SubIndex0</Description>
					<WriteLine Id="11" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : Subindex '0x{0:X}.0'</WriteLine>
				</TestStep>
				<TestStep Name="CallSi0CheckEntryDescription">
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"offline"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>0</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>null</Parameter>
						<Parameter>5</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>null</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>null</Parameter>
						<Parameter>null</Parameter>
						<Parameter>null</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>8</Parameter>
						<Parameter>i32CurrentBitOffset</Parameter>
						<Parameter>true</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="EndSi0">
					<SetVariable Target="i32CurrentBitOffset">16</SetVariable>
				</TestStep>
				<TestStep Name="InitProfileLoopCounter">
					<SetVariable Target="u32ProfileCounter">0</SetVariable>
				</TestStep>
				<TestStep Name="GetProfileArrayLength">
					<SizeOf UInt32Var="u32CurrentProfilesLength">arrCurrentProfiles</SizeOf>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="12" Param0="u32CurrentProfilesLength" Level="Verbose">'{0}' Profile(s) defined offline.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>u32CurrentProfilesLength</Value1>
							<Value2>0</Value2>
							<SkipCase Id="13">Skip case | no profile defined.</SkipCase>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="ProfileLoopStart">
					<GetArrayItem SourceArray="arrCurrentProfiles" Target="strTmpString" Index="u32ProfileCounter"></GetArrayItem>
				</TestStep>
				<TestStep Name="CheckProfileInformationString">
					<Compare>
						<Equal>
							<Value1>strTmpString</Value1>
							<Value2>null</Value2>
							<RaiseError Id="14" Param0="u32ProfileCounter">Profile Info element [{0}] is null.</RaiseError>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>strTmpString</Value1>
							<Value2>EmptyString</Value2>
							<RaiseError Id="15" Param0="u32ProfileCounter">Profile Info element [{0}] is an empty string.</RaiseError>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="GetDeviceProfile">
					<CallTestFunction Name="GetDeviceProfile">
						<Parameter>strTmpString</Parameter>
						<OutParameter>uint16CurDeviceProfile</OutParameter>
					</CallTestFunction>
				</TestStep>
				<TestStep Name="GetModuleProfile">
					<CallTestFunction Name="GetModuleProfile">
						<Parameter>strTmpString</Parameter>
						<OutParameter>uint16CurModuleProfile</OutParameter>
					</CallTestFunction>
				</TestStep>
				<TestStep Name="GetSubModuleProfile">
					<CallTestFunction Name="GetSubModuleProfile">
						<Parameter>strTmpString</Parameter>
						<OutParameter>uint16CurSubModuleProfile</OutParameter>
					</CallTestFunction>
				</TestStep>
				<TestStep Name="DumpProfileInfo">
					<Description Id="16" Param0="uint16CurDeviceProfile" Param1="uint16CurModuleProfile" Param2="uint16CurSubModuleProfile" Param3="u32ProfileCounter" Level="Output">Module[{3}] : DeviceProfile '{0}' ; ModuleProfile '{1}' ; SubModuleProfile '{2}'</Description>
					<Compare>
						<Equal>
							<Value1>bIgnoreProfileID</Value1>
							<Value2>true</Value2>
							<GotoStep>IndicateThatAtleastOneModuleMatch</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CompareDeviceProfile">
					<Compare>
						<NotEqual>
							<Value1>uint16CurDeviceProfile</Value1>
							<Value2>5003</Value2>
							<WriteLine Id="17" Param0="uint16CurDeviceProfile" Level="Output">Skip Profile  (Test Device Profile '5003' != Cur Device Profile '{0}')</WriteLine>
						</NotEqual>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>uint16CurDeviceProfile</Value1>
							<Value2>5003</Value2>
							<GotoStep>ProfileLoopEnd</GotoStep>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep Name="CompareModuleProfile">
					<Compare>
						<NotEqual>
							<Value1>uint16CurModuleProfile</Value1>
							<Value2>2011</Value2>
							<WriteLine Id="18" Param0="uint16CurModuleProfile" Level="Output">Skip Profile  (Test Module Profile '2011' != Cur Module Profile '{0}')</WriteLine>
						</NotEqual>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>uint16CurModuleProfile</Value1>
							<Value2>2011</Value2>
							<GotoStep>ProfileLoopEnd</GotoStep>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep Name="CompareSubModuleProfile">
					<Compare>
						<NotEqual>
							<Value1>uint16CurSubModuleProfile</Value1>
							<Value2>0</Value2>
							<WriteLine Id="19" Param0="uint16CurSubModuleProfile" Level="Output">Skip Profile  (Test SubModule Profile '0' != Cur SubModule Profile '{0}')</WriteLine>
						</NotEqual>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>uint16CurSubModuleProfile</Value1>
							<Value2>0</Value2>
							<GotoStep>ProfileLoopEnd</GotoStep>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep Name="IndicateThatAtleastOneModuleMatch">
					<SetVariable Target="bAtLeastOneModuleMatch">true</SetVariable>
				</TestStep>
				<TestStep Name="StartSi1">
					<Description Id="20" Param0="1 + (u32ProfileCounter * 1)" Level="Output">Start validate SubIndex{0}</Description>
					<SetVariable Target="byteSubIndexInclOffset">1 + (u32ProfileCounter * 1)</SetVariable>
					<WriteLine Id="21" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Param2="byteSubIndexInclOffset" Level="Verbose">Module[{1}] : Subindex '0x{0:X}.{2}'</WriteLine>
				</TestStep>
				<TestStep Name="CallSi1CheckEntryDescription">
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"offline"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>byteSubIndexInclOffset</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>null</Parameter>
						<Parameter>5</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>null</Parameter>
						<Parameter>R</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>8</Parameter>
						<Parameter>i32CurrentBitOffset</Parameter>
						<Parameter>true</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="EndSi1">
					<SetVariable Target="i32CurrentBitOffset">i32CurrentBitOffset + 8</SetVariable>
				</TestStep>
				<TestStep Name="ProfileLoopEnd">
					<Compare>
						<Equal>
							<Value1>bAtLeastOneModuleMatch</Value1>
							<Value2>false</Value2>
							<GotoStep>HandleAbortTestCaseOnFirstError</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="HandleAbortTestCaseOnFirstError">
					<Compare>
						<Equal>
							<Value1>bAbortTestCaseOnFirstError</Value1>
							<Value2>false</Value2>
							<GotoStep>ProfileLoopIncrement</GotoStep>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>strResult</Value1>
							<Value2>EmptyString</Value2>
							<GotoStep>ProfileLoopIncrement</GotoStep>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="22" Level="Output">Object verification for all following modules abort because an error was already detected for the current module.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>END</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="ProfileLoopIncrement">
					<SetVariable Target="u32ProfileCounter">u32ProfileCounter + 1</SetVariable>
					<Compare>
						<Greater>
							<Value1>u32CurrentProfilesLength</Value1>
							<Value2>u32ProfileCounter</Value2>
							<GotoStep>ProfileLoopStart</GotoStep>
						</Greater>
					</Compare>
				</TestStep>
				<TestStep Name="END">
					<Compare>
						<NotEqual>
							<Value1>bAtLeastOneModuleMatch</Value1>
							<Value2>true</Value2>
							<SkipCase Id="23">SKIP TEST(no module/channel supports the current profile)</SkipCase>
						</NotEqual>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bDEBUG</Value1>
							<Value2>true</Value2>
							<WriteLine Id="24" Param0="strResult" Level="Verbose">DEBUG | Result : '{0}'.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>strResult</Value1>
							<Value2>EmptyString</Value2>
							<ReturnSuccess Id="25">Test succeed</ReturnSuccess>
						</Equal>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>strResult</Value1>
							<Value2>EmptyString</Value2>
							<RaiseError Id="26"></RaiseError>
						</NotEqual>
					</Compare>
				</TestStep>
			</TestCase>
			<TestCase Name="online | 0xF9F5 (Output Identifier)" CaseId="12">
				<Description>
					<PreCondition>- The device profile is 5003
- The module profile is 2011
- The submodule profile is 0</PreCondition>
					<Action>- Iterate over all online defined modules/channels and if the PreCondition matches the following operations are done:
- Get the online description of object 0xF9F5(+module specific offset) 'Output Identifier' and all entries
 Check:
    (Name)
    BitSize
    DataType
    Rx / Tx mappable
    Default Data
    MinData
    Flags       </Action>
					<PostCondition>Error if
- mandatory object / entry is not defined
- an optional object exists and the entries are invalid
- Object / entry description does not match with the specification</PostCondition>
					<ProposalForSolution>- Define the missing objects
- correct object / entry description</ProposalForSolution>
					<References>
						<Reference Specification="ETG.5003.2011"></Reference>
					</References>
					<Mandatory>true</Mandatory>
				</Description>
				<TestStep Name="InitResult">
					<SetVariable Target="strResult">EmptyString</SetVariable>
				</TestStep>
				<TestStep Name="CheckIfOdAvailable">
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Mailbox</Value1>
							<Value2>false</Value2>
							<SkipCase Id="1">DuT does not support mailbox.</SkipCase>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Mailbox.CoE</Value1>
							<Value2>false</Value2>
							<SkipCase Id="2">DuT does not support CoE.</SkipCase>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Mailbox.CoE.SdoInfo</Value1>
							<Value2>false</Value2>
							<SkipCase Id="3">DuT does not support SDO Info.</SkipCase>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="InitAtLeastOneProfileMatch">
					<SetVariable Target="bAtLeastOneModuleMatch">false</SetVariable>
				</TestStep>
				<TestStep Name="GetCurrentProfileList">
					<SizeOf UInt32Var="u32Tmp">arrOnlineProfiles</SizeOf>
					<Compare>
						<Equal>
							<Value1>u32Tmp</Value1>
							<Value2>0</Value2>
							<CallTestFunction Name="GetCurrentProfileList">
								<Parameter>"online"</Parameter>
								<Parameter>"SafeOP"</Parameter>
								<OutParameter>arrOnlineProfiles</OutParameter>
							</CallTestFunction>
						</Equal>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>u32Tmp</Value1>
							<Value2>0</Value2>
							<WriteLine Id="4" Param0="arrOnlineProfiles" Level="Verbose">Use previously created profile list ({0})</WriteLine>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep>
					<SizeOf UInt32Var="u32Tmp">arrOnlineProfiles</SizeOf>
				</TestStep>
				<TestStep>
					<InitArray TargetArray="arrCurrentProfiles" Length="u32Tmp"></InitArray>
				</TestStep>
				<TestStep>
					<CopyArray>
						<SourceArray>arrOnlineProfiles</SourceArray>
						<DestinationArray>arrCurrentProfiles</DestinationArray>
						<Length>u32Tmp</Length>
					</CopyArray>
				</TestStep>
				<TestStep Name="IsProfileSupported">
					<CallTestFunction Name="DeviceAndModuleProfileDefined">
						<Parameter>arrCurrentProfiles</Parameter>
						<Parameter>5003</Parameter>
						<Parameter>2011</Parameter>
						<OutParameter>bAtLeastOneModuleMatch</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>bAtLeastOneModuleMatch</Value1>
							<Value2>false</Value2>
							<GotoStep>END</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="GetObjectIndexInclOffset">
					<SetVariable Target="u16ObjectIndexInclOffset">#xF9F5</SetVariable>
					<WriteLine Id="5" Param0="u16ObjectIndexInclOffset" Level="Verbose">ObjectIndex '0x{0:X}' (module independent)</WriteLine>
				</TestStep>
				<TestStep Name="LoadDeviceObjectDictionary">
					<Description Id="6" Level="Verbose">Load 'online' object dictionary for testing.</Description>
					<GetObjectDictionary Target="odDeviceObjectdictionary">
						<DictionaryType>Online</DictionaryType>
					</GetObjectDictionary>
					<RaiseErrorOnFailure Id="7">VerifyObject : failed to load online object dictionary.</RaiseErrorOnFailure>
				</TestStep>
				<TestStep Name="CallCheckObjectDescription">
					<Description Id="8" Param0="u16ObjectIndexInclOffset" Level="Output">Verify the object description 0x{0:X4} 'Output Identifier'.</Description>
					<CallTestFunction Name="CheckObjectDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"online"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>"Output Identifier"</Parameter>
						<Parameter>null</Parameter>
						<Parameter>8</Parameter>
						<Parameter>-1</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<GotoStep>END</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="InitEntryBittOffset">
					<SetVariable Target="i32CurrentBitOffset">0</SetVariable>
				</TestStep>
				<TestStep Name="StartSi0">
					<Description Id="9" Level="Output">Start validate SubIndex0</Description>
					<WriteLine Id="10" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : Subindex '0x{0:X}.0'</WriteLine>
				</TestStep>
				<TestStep Name="CallSi0CheckEntryDescription">
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"online"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>0</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>null</Parameter>
						<Parameter>5</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>null</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>null</Parameter>
						<Parameter>null</Parameter>
						<Parameter>null</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>8</Parameter>
						<Parameter>i32CurrentBitOffset</Parameter>
						<Parameter>true</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="EndSi0">
					<SetVariable Target="i32CurrentBitOffset">16</SetVariable>
				</TestStep>
				<TestStep Name="InitProfileLoopCounter">
					<SetVariable Target="u32ProfileCounter">0</SetVariable>
				</TestStep>
				<TestStep Name="GetProfileArrayLength">
					<SizeOf UInt32Var="u32CurrentProfilesLength">arrCurrentProfiles</SizeOf>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="11" Param0="u32CurrentProfilesLength" Level="Verbose">'{0}' Profile(s) defined online.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>u32CurrentProfilesLength</Value1>
							<Value2>0</Value2>
							<SkipCase Id="12">Skip case | no profile defined.</SkipCase>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="ProfileLoopStart">
					<GetArrayItem SourceArray="arrCurrentProfiles" Target="strTmpString" Index="u32ProfileCounter"></GetArrayItem>
				</TestStep>
				<TestStep Name="CheckProfileInformationString">
					<Compare>
						<Equal>
							<Value1>strTmpString</Value1>
							<Value2>null</Value2>
							<RaiseError Id="13" Param0="u32ProfileCounter">Profile Info element [{0}] is null.</RaiseError>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>strTmpString</Value1>
							<Value2>EmptyString</Value2>
							<RaiseError Id="14" Param0="u32ProfileCounter">Profile Info element [{0}] is an empty string.</RaiseError>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="GetDeviceProfile">
					<CallTestFunction Name="GetDeviceProfile">
						<Parameter>strTmpString</Parameter>
						<OutParameter>uint16CurDeviceProfile</OutParameter>
					</CallTestFunction>
				</TestStep>
				<TestStep Name="GetModuleProfile">
					<CallTestFunction Name="GetModuleProfile">
						<Parameter>strTmpString</Parameter>
						<OutParameter>uint16CurModuleProfile</OutParameter>
					</CallTestFunction>
				</TestStep>
				<TestStep Name="GetSubModuleProfile">
					<CallTestFunction Name="GetSubModuleProfile">
						<Parameter>strTmpString</Parameter>
						<OutParameter>uint16CurSubModuleProfile</OutParameter>
					</CallTestFunction>
				</TestStep>
				<TestStep Name="DumpProfileInfo">
					<Description Id="15" Param0="uint16CurDeviceProfile" Param1="uint16CurModuleProfile" Param2="uint16CurSubModuleProfile" Param3="u32ProfileCounter" Level="Output">Module[{3}] : DeviceProfile '{0}' ; ModuleProfile '{1}' ; SubModuleProfile '{2}'</Description>
					<Compare>
						<Equal>
							<Value1>bIgnoreProfileID</Value1>
							<Value2>true</Value2>
							<GotoStep>IndicateThatAtleastOneModuleMatch</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CompareDeviceProfile">
					<Compare>
						<NotEqual>
							<Value1>uint16CurDeviceProfile</Value1>
							<Value2>5003</Value2>
							<WriteLine Id="16" Param0="uint16CurDeviceProfile" Level="Output">Skip Profile  (Test Device Profile '5003' != Cur Device Profile '{0}')</WriteLine>
						</NotEqual>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>uint16CurDeviceProfile</Value1>
							<Value2>5003</Value2>
							<GotoStep>ProfileLoopEnd</GotoStep>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep Name="CompareModuleProfile">
					<Compare>
						<NotEqual>
							<Value1>uint16CurModuleProfile</Value1>
							<Value2>2011</Value2>
							<WriteLine Id="17" Param0="uint16CurModuleProfile" Level="Output">Skip Profile  (Test Module Profile '2011' != Cur Module Profile '{0}')</WriteLine>
						</NotEqual>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>uint16CurModuleProfile</Value1>
							<Value2>2011</Value2>
							<GotoStep>ProfileLoopEnd</GotoStep>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep Name="CompareSubModuleProfile">
					<Compare>
						<NotEqual>
							<Value1>uint16CurSubModuleProfile</Value1>
							<Value2>0</Value2>
							<WriteLine Id="18" Param0="uint16CurSubModuleProfile" Level="Output">Skip Profile  (Test SubModule Profile '0' != Cur SubModule Profile '{0}')</WriteLine>
						</NotEqual>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>uint16CurSubModuleProfile</Value1>
							<Value2>0</Value2>
							<GotoStep>ProfileLoopEnd</GotoStep>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep Name="IndicateThatAtleastOneModuleMatch">
					<SetVariable Target="bAtLeastOneModuleMatch">true</SetVariable>
				</TestStep>
				<TestStep Name="StartSi1">
					<Description Id="19" Param0="1 + (u32ProfileCounter * 1)" Level="Output">Start validate SubIndex{0}</Description>
					<SetVariable Target="byteSubIndexInclOffset">1 + (u32ProfileCounter * 1)</SetVariable>
					<WriteLine Id="20" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Param2="byteSubIndexInclOffset" Level="Verbose">Module[{1}] : Subindex '0x{0:X}.{2}'</WriteLine>
				</TestStep>
				<TestStep Name="CallSi1CheckEntryDescription">
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"online"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>byteSubIndexInclOffset</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>null</Parameter>
						<Parameter>5</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>null</Parameter>
						<Parameter>R</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>8</Parameter>
						<Parameter>i32CurrentBitOffset</Parameter>
						<Parameter>true</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="EndSi1">
					<SetVariable Target="i32CurrentBitOffset">i32CurrentBitOffset + 8</SetVariable>
				</TestStep>
				<TestStep Name="ProfileLoopEnd">
					<Compare>
						<Equal>
							<Value1>bAtLeastOneModuleMatch</Value1>
							<Value2>false</Value2>
							<GotoStep>HandleAbortTestCaseOnFirstError</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="HandleAbortTestCaseOnFirstError">
					<Compare>
						<Equal>
							<Value1>bAbortTestCaseOnFirstError</Value1>
							<Value2>false</Value2>
							<GotoStep>ProfileLoopIncrement</GotoStep>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>strResult</Value1>
							<Value2>EmptyString</Value2>
							<GotoStep>ProfileLoopIncrement</GotoStep>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="21" Level="Output">Object verification for all following modules abort because an error was already detected for the current module.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>END</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="ProfileLoopIncrement">
					<SetVariable Target="u32ProfileCounter">u32ProfileCounter + 1</SetVariable>
					<Compare>
						<Greater>
							<Value1>u32CurrentProfilesLength</Value1>
							<Value2>u32ProfileCounter</Value2>
							<GotoStep>ProfileLoopStart</GotoStep>
						</Greater>
					</Compare>
				</TestStep>
				<TestStep Name="END">
					<Compare>
						<NotEqual>
							<Value1>bAtLeastOneModuleMatch</Value1>
							<Value2>true</Value2>
							<SkipCase Id="22">SKIP TEST(no module/channel supports the current profile)</SkipCase>
						</NotEqual>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bDEBUG</Value1>
							<Value2>true</Value2>
							<WriteLine Id="23" Param0="strResult" Level="Verbose">DEBUG | Result : '{0}'.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>strResult</Value1>
							<Value2>EmptyString</Value2>
							<ReturnSuccess Id="24">Test succeed</ReturnSuccess>
						</Equal>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>strResult</Value1>
							<Value2>EmptyString</Value2>
							<RaiseError Id="25"></RaiseError>
						</NotEqual>
					</Compare>
				</TestStep>
			</TestCase>
			<TestCase Name="offline | 0xF9F6 (Time since power on)" CaseId="13">
				<Description>
					<PreCondition>- The device profile is 5003
- The module profile is 2011
- The submodule profile is 0</PreCondition>
					<Action>- Iterate over all offline defined modules/channels and if the PreCondition matches the following operations are done:
- Get the offline description of object 0xF9F6(+module specific offset) 'Time since power on' and all entries
 Check:
    (Name)
    BitSize
    DataType
    Rx / Tx mappable
    Default Data
    MinData
    Flags       </Action>
					<PostCondition>Error if
- mandatory object / entry is not defined
- an optional object exists and the entries are invalid
- Object / entry description does not match with the specification</PostCondition>
					<ProposalForSolution>- Define the missing objects
- correct object / entry description</ProposalForSolution>
					<References>
						<Reference Specification="ETG.5003.2011"></Reference>
					</References>
					<Mandatory>true</Mandatory>
				</Description>
				<TestStep Name="InitResult">
					<SetVariable Target="strResult">EmptyString</SetVariable>
				</TestStep>
				<TestStep Name="CheckIfOdAvailable">
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Mailbox</Value1>
							<Value2>false</Value2>
							<SkipCase Id="1">DuT does not support mailbox.</SkipCase>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Mailbox.CoE</Value1>
							<Value2>false</Value2>
							<SkipCase Id="2">DuT does not support CoE.</SkipCase>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep>
					<GetObjectDictionary Target="odDeviceObjectdictionary">
						<DictionaryType>Offline</DictionaryType>
					</GetObjectDictionary>
					<SkipOnFailure Id="3">No offline object dictionary defined.</SkipOnFailure>
				</TestStep>
				<TestStep>
					<GetObjectList Count="u32Tmp" Target="odDeviceObjectdictionaryList" SourceDict="odDeviceObjectdictionary"></GetObjectList>
					<Compare>
						<Equal>
							<Value1>u32Tmp</Value1>
							<Value2>0</Value2>
							<SkipCase Id="4">No offline object dictionary defined.</SkipCase>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="InitAtLeastOneProfileMatch">
					<SetVariable Target="bAtLeastOneModuleMatch">false</SetVariable>
				</TestStep>
				<TestStep Name="GetCurrentProfileList">
					<SizeOf UInt32Var="u32Tmp">arrOfflineProfiles</SizeOf>
					<Compare>
						<Equal>
							<Value1>u32Tmp</Value1>
							<Value2>0</Value2>
							<CallTestFunction Name="GetCurrentProfileList">
								<Parameter>"offline"</Parameter>
								<Parameter>"SafeOP"</Parameter>
								<OutParameter>arrOfflineProfiles</OutParameter>
							</CallTestFunction>
						</Equal>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>u32Tmp</Value1>
							<Value2>0</Value2>
							<WriteLine Id="5" Param0="arrOfflineProfiles" Level="Verbose">Use previously created profile list ({0})</WriteLine>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep>
					<SizeOf UInt32Var="u32Tmp">arrOfflineProfiles</SizeOf>
				</TestStep>
				<TestStep>
					<InitArray TargetArray="arrCurrentProfiles" Length="u32Tmp"></InitArray>
				</TestStep>
				<TestStep>
					<CopyArray>
						<SourceArray>arrOfflineProfiles</SourceArray>
						<DestinationArray>arrCurrentProfiles</DestinationArray>
						<Length>u32Tmp</Length>
					</CopyArray>
				</TestStep>
				<TestStep Name="IsProfileSupported">
					<CallTestFunction Name="DeviceAndModuleProfileDefined">
						<Parameter>arrCurrentProfiles</Parameter>
						<Parameter>5003</Parameter>
						<Parameter>2011</Parameter>
						<OutParameter>bAtLeastOneModuleMatch</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>bAtLeastOneModuleMatch</Value1>
							<Value2>false</Value2>
							<GotoStep>END</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="GetObjectIndexInclOffset">
					<SetVariable Target="u16ObjectIndexInclOffset">#xF9F6</SetVariable>
					<WriteLine Id="6" Param0="u16ObjectIndexInclOffset" Level="Verbose">ObjectIndex '0x{0:X}' (module independent)</WriteLine>
				</TestStep>
				<TestStep Name="LoadDeviceObjectDictionary">
					<Description Id="7" Level="Verbose">Load 'offline' object dictionary for testing.</Description>
					<GetObjectDictionary Target="odDeviceObjectdictionary">
						<DictionaryType>Offline</DictionaryType>
					</GetObjectDictionary>
					<RaiseErrorOnFailure Id="8">VerifyObject : failed to load offline object dictionary.</RaiseErrorOnFailure>
				</TestStep>
				<TestStep Name="CallCheckObjectDescription">
					<Description Id="9" Param0="u16ObjectIndexInclOffset" Level="Output">Verify the object description 0x{0:X4} 'Time since power on'.</Description>
					<CallTestFunction Name="CheckObjectDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"offline"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>"Time since power on"</Parameter>
						<Parameter>null</Parameter>
						<Parameter>7</Parameter>
						<Parameter>-1</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<GotoStep>END</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CallSi0CheckEntryDescription">
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"offline"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>0</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>null</Parameter>
						<Parameter>7</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>null</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>32</Parameter>
						<Parameter>i32CurrentBitOffset</Parameter>
						<Parameter>true</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="END">
					<Compare>
						<NotEqual>
							<Value1>bAtLeastOneModuleMatch</Value1>
							<Value2>true</Value2>
							<SkipCase Id="10">SKIP TEST(no module/channel supports the current profile)</SkipCase>
						</NotEqual>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bDEBUG</Value1>
							<Value2>true</Value2>
							<WriteLine Id="11" Param0="strResult" Level="Verbose">DEBUG | Result : '{0}'.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>strResult</Value1>
							<Value2>EmptyString</Value2>
							<ReturnSuccess Id="12">Test succeed</ReturnSuccess>
						</Equal>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>strResult</Value1>
							<Value2>EmptyString</Value2>
							<RaiseError Id="13"></RaiseError>
						</NotEqual>
					</Compare>
				</TestStep>
			</TestCase>
			<TestCase Name="online | 0xF9F6 (Time since power on)" CaseId="14">
				<Description>
					<PreCondition>- The device profile is 5003
- The module profile is 2011
- The submodule profile is 0</PreCondition>
					<Action>- Iterate over all online defined modules/channels and if the PreCondition matches the following operations are done:
- Get the online description of object 0xF9F6(+module specific offset) 'Time since power on' and all entries
 Check:
    (Name)
    BitSize
    DataType
    Rx / Tx mappable
    Default Data
    MinData
    Flags       </Action>
					<PostCondition>Error if
- mandatory object / entry is not defined
- an optional object exists and the entries are invalid
- Object / entry description does not match with the specification</PostCondition>
					<ProposalForSolution>- Define the missing objects
- correct object / entry description</ProposalForSolution>
					<References>
						<Reference Specification="ETG.5003.2011"></Reference>
					</References>
					<Mandatory>true</Mandatory>
				</Description>
				<TestStep Name="InitResult">
					<SetVariable Target="strResult">EmptyString</SetVariable>
				</TestStep>
				<TestStep Name="CheckIfOdAvailable">
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Mailbox</Value1>
							<Value2>false</Value2>
							<SkipCase Id="1">DuT does not support mailbox.</SkipCase>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Mailbox.CoE</Value1>
							<Value2>false</Value2>
							<SkipCase Id="2">DuT does not support CoE.</SkipCase>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Mailbox.CoE.SdoInfo</Value1>
							<Value2>false</Value2>
							<SkipCase Id="3">DuT does not support SDO Info.</SkipCase>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="InitAtLeastOneProfileMatch">
					<SetVariable Target="bAtLeastOneModuleMatch">false</SetVariable>
				</TestStep>
				<TestStep Name="GetCurrentProfileList">
					<SizeOf UInt32Var="u32Tmp">arrOnlineProfiles</SizeOf>
					<Compare>
						<Equal>
							<Value1>u32Tmp</Value1>
							<Value2>0</Value2>
							<CallTestFunction Name="GetCurrentProfileList">
								<Parameter>"online"</Parameter>
								<Parameter>"SafeOP"</Parameter>
								<OutParameter>arrOnlineProfiles</OutParameter>
							</CallTestFunction>
						</Equal>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>u32Tmp</Value1>
							<Value2>0</Value2>
							<WriteLine Id="4" Param0="arrOnlineProfiles" Level="Verbose">Use previously created profile list ({0})</WriteLine>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep>
					<SizeOf UInt32Var="u32Tmp">arrOnlineProfiles</SizeOf>
				</TestStep>
				<TestStep>
					<InitArray TargetArray="arrCurrentProfiles" Length="u32Tmp"></InitArray>
				</TestStep>
				<TestStep>
					<CopyArray>
						<SourceArray>arrOnlineProfiles</SourceArray>
						<DestinationArray>arrCurrentProfiles</DestinationArray>
						<Length>u32Tmp</Length>
					</CopyArray>
				</TestStep>
				<TestStep Name="IsProfileSupported">
					<CallTestFunction Name="DeviceAndModuleProfileDefined">
						<Parameter>arrCurrentProfiles</Parameter>
						<Parameter>5003</Parameter>
						<Parameter>2011</Parameter>
						<OutParameter>bAtLeastOneModuleMatch</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>bAtLeastOneModuleMatch</Value1>
							<Value2>false</Value2>
							<GotoStep>END</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="GetObjectIndexInclOffset">
					<SetVariable Target="u16ObjectIndexInclOffset">#xF9F6</SetVariable>
					<WriteLine Id="5" Param0="u16ObjectIndexInclOffset" Level="Verbose">ObjectIndex '0x{0:X}' (module independent)</WriteLine>
				</TestStep>
				<TestStep Name="LoadDeviceObjectDictionary">
					<Description Id="6" Level="Verbose">Load 'online' object dictionary for testing.</Description>
					<GetObjectDictionary Target="odDeviceObjectdictionary">
						<DictionaryType>Online</DictionaryType>
					</GetObjectDictionary>
					<RaiseErrorOnFailure Id="7">VerifyObject : failed to load online object dictionary.</RaiseErrorOnFailure>
				</TestStep>
				<TestStep Name="CallCheckObjectDescription">
					<Description Id="8" Param0="u16ObjectIndexInclOffset" Level="Output">Verify the object description 0x{0:X4} 'Time since power on'.</Description>
					<CallTestFunction Name="CheckObjectDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"online"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>"Time since power on"</Parameter>
						<Parameter>null</Parameter>
						<Parameter>7</Parameter>
						<Parameter>-1</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<GotoStep>END</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CallSi0CheckEntryDescription">
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"online"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>0</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>null</Parameter>
						<Parameter>7</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>null</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>32</Parameter>
						<Parameter>i32CurrentBitOffset</Parameter>
						<Parameter>true</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="END">
					<Compare>
						<NotEqual>
							<Value1>bAtLeastOneModuleMatch</Value1>
							<Value2>true</Value2>
							<SkipCase Id="9">SKIP TEST(no module/channel supports the current profile)</SkipCase>
						</NotEqual>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bDEBUG</Value1>
							<Value2>true</Value2>
							<WriteLine Id="10" Param0="strResult" Level="Verbose">DEBUG | Result : '{0}'.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>strResult</Value1>
							<Value2>EmptyString</Value2>
							<ReturnSuccess Id="11">Test succeed</ReturnSuccess>
						</Equal>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>strResult</Value1>
							<Value2>EmptyString</Value2>
							<RaiseError Id="12"></RaiseError>
						</NotEqual>
					</Compare>
				</TestStep>
			</TestCase>
			<TestCase Name="offline | 0xF9F7 (Total time powered)" CaseId="15">
				<Description>
					<PreCondition>- The device profile is 5003
- The module profile is 2011
- The submodule profile is 0</PreCondition>
					<Action>- Iterate over all offline defined modules/channels and if the PreCondition matches the following operations are done:
- Get the offline description of object 0xF9F7(+module specific offset) 'Total time powered' and all entries
 Check:
    (Name)
    BitSize
    DataType
    Rx / Tx mappable
    Default Data
    MinData
    Flags       </Action>
					<PostCondition>Error if
- mandatory object / entry is not defined
- an optional object exists and the entries are invalid
- Object / entry description does not match with the specification</PostCondition>
					<ProposalForSolution>- Define the missing objects
- correct object / entry description</ProposalForSolution>
					<References>
						<Reference Specification="ETG.5003.2011"></Reference>
					</References>
					<Mandatory>true</Mandatory>
				</Description>
				<TestStep Name="InitResult">
					<SetVariable Target="strResult">EmptyString</SetVariable>
				</TestStep>
				<TestStep Name="CheckIfOdAvailable">
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Mailbox</Value1>
							<Value2>false</Value2>
							<SkipCase Id="1">DuT does not support mailbox.</SkipCase>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Mailbox.CoE</Value1>
							<Value2>false</Value2>
							<SkipCase Id="2">DuT does not support CoE.</SkipCase>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep>
					<GetObjectDictionary Target="odDeviceObjectdictionary">
						<DictionaryType>Offline</DictionaryType>
					</GetObjectDictionary>
					<SkipOnFailure Id="3">No offline object dictionary defined.</SkipOnFailure>
				</TestStep>
				<TestStep>
					<GetObjectList Count="u32Tmp" Target="odDeviceObjectdictionaryList" SourceDict="odDeviceObjectdictionary"></GetObjectList>
					<Compare>
						<Equal>
							<Value1>u32Tmp</Value1>
							<Value2>0</Value2>
							<SkipCase Id="4">No offline object dictionary defined.</SkipCase>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="InitAtLeastOneProfileMatch">
					<SetVariable Target="bAtLeastOneModuleMatch">false</SetVariable>
				</TestStep>
				<TestStep Name="GetCurrentProfileList">
					<SizeOf UInt32Var="u32Tmp">arrOfflineProfiles</SizeOf>
					<Compare>
						<Equal>
							<Value1>u32Tmp</Value1>
							<Value2>0</Value2>
							<CallTestFunction Name="GetCurrentProfileList">
								<Parameter>"offline"</Parameter>
								<Parameter>"SafeOP"</Parameter>
								<OutParameter>arrOfflineProfiles</OutParameter>
							</CallTestFunction>
						</Equal>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>u32Tmp</Value1>
							<Value2>0</Value2>
							<WriteLine Id="5" Param0="arrOfflineProfiles" Level="Verbose">Use previously created profile list ({0})</WriteLine>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep>
					<SizeOf UInt32Var="u32Tmp">arrOfflineProfiles</SizeOf>
				</TestStep>
				<TestStep>
					<InitArray TargetArray="arrCurrentProfiles" Length="u32Tmp"></InitArray>
				</TestStep>
				<TestStep>
					<CopyArray>
						<SourceArray>arrOfflineProfiles</SourceArray>
						<DestinationArray>arrCurrentProfiles</DestinationArray>
						<Length>u32Tmp</Length>
					</CopyArray>
				</TestStep>
				<TestStep Name="IsProfileSupported">
					<CallTestFunction Name="DeviceAndModuleProfileDefined">
						<Parameter>arrCurrentProfiles</Parameter>
						<Parameter>5003</Parameter>
						<Parameter>2011</Parameter>
						<OutParameter>bAtLeastOneModuleMatch</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>bAtLeastOneModuleMatch</Value1>
							<Value2>false</Value2>
							<GotoStep>END</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="GetObjectIndexInclOffset">
					<SetVariable Target="u16ObjectIndexInclOffset">#xF9F7</SetVariable>
					<WriteLine Id="6" Param0="u16ObjectIndexInclOffset" Level="Verbose">ObjectIndex '0x{0:X}' (module independent)</WriteLine>
				</TestStep>
				<TestStep Name="LoadDeviceObjectDictionary">
					<Description Id="7" Level="Verbose">Load 'offline' object dictionary for testing.</Description>
					<GetObjectDictionary Target="odDeviceObjectdictionary">
						<DictionaryType>Offline</DictionaryType>
					</GetObjectDictionary>
					<RaiseErrorOnFailure Id="8">VerifyObject : failed to load offline object dictionary.</RaiseErrorOnFailure>
				</TestStep>
				<TestStep Name="SetObjectRequiredLevel">
					<SetVariable Target="bObjectOrEntryRequiredLevel">1</SetVariable>
					<WriteLine Id="9" Param0="u16ObjectIndexInclOffset" Level="Verbose">0x{0:X4} 'Total time powered' may be available</WriteLine>
				</TestStep>
				<TestStep Name="CheckIfObjectExists">
					<GetObjectDescription SourceDictionary="odDeviceObjectdictionary" Index="u16ObjectIndexInclOffset" SubIndex="-1"></GetObjectDescription>
					<GotoOnSuccess>CallCheckObjectDescription</GotoOnSuccess>
				</TestStep>
				<TestStep Name="HandleNotExistingObject">
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>2</Value2>
							<WriteLine Id="10" Param0="u16ObjectIndexInclOffset" Level="Warning">The object 0x{0:X4} 'Total time powered' does not exists.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>1</Value2>
							<WriteLine Id="11" Param0="u16ObjectIndexInclOffset" Level="Output">The object 0x{0:X4} 'Total time powered' does not exists.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>END</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CallCheckObjectDescription">
					<Description Id="12" Param0="u16ObjectIndexInclOffset" Level="Output">Verify the object description 0x{0:X4} 'Total time powered'.</Description>
					<CallTestFunction Name="CheckObjectDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"offline"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>"Total time powered"</Parameter>
						<Parameter>null</Parameter>
						<Parameter>7</Parameter>
						<Parameter>-1</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<GotoStep>END</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CallSi0CheckEntryDescription">
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"offline"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>0</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>null</Parameter>
						<Parameter>7</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>null</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>32</Parameter>
						<Parameter>i32CurrentBitOffset</Parameter>
						<Parameter>true</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="END">
					<Compare>
						<NotEqual>
							<Value1>bAtLeastOneModuleMatch</Value1>
							<Value2>true</Value2>
							<SkipCase Id="13">SKIP TEST(no module/channel supports the current profile)</SkipCase>
						</NotEqual>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bDEBUG</Value1>
							<Value2>true</Value2>
							<WriteLine Id="14" Param0="strResult" Level="Verbose">DEBUG | Result : '{0}'.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>strResult</Value1>
							<Value2>EmptyString</Value2>
							<ReturnSuccess Id="15">Test succeed</ReturnSuccess>
						</Equal>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>strResult</Value1>
							<Value2>EmptyString</Value2>
							<RaiseError Id="16"></RaiseError>
						</NotEqual>
					</Compare>
				</TestStep>
			</TestCase>
			<TestCase Name="online | 0xF9F7 (Total time powered)" CaseId="16">
				<Description>
					<PreCondition>- The device profile is 5003
- The module profile is 2011
- The submodule profile is 0</PreCondition>
					<Action>- Iterate over all online defined modules/channels and if the PreCondition matches the following operations are done:
- Get the online description of object 0xF9F7(+module specific offset) 'Total time powered' and all entries
 Check:
    (Name)
    BitSize
    DataType
    Rx / Tx mappable
    Default Data
    MinData
    Flags       </Action>
					<PostCondition>Error if
- mandatory object / entry is not defined
- an optional object exists and the entries are invalid
- Object / entry description does not match with the specification</PostCondition>
					<ProposalForSolution>- Define the missing objects
- correct object / entry description</ProposalForSolution>
					<References>
						<Reference Specification="ETG.5003.2011"></Reference>
					</References>
					<Mandatory>true</Mandatory>
				</Description>
				<TestStep Name="InitResult">
					<SetVariable Target="strResult">EmptyString</SetVariable>
				</TestStep>
				<TestStep Name="CheckIfOdAvailable">
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Mailbox</Value1>
							<Value2>false</Value2>
							<SkipCase Id="1">DuT does not support mailbox.</SkipCase>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Mailbox.CoE</Value1>
							<Value2>false</Value2>
							<SkipCase Id="2">DuT does not support CoE.</SkipCase>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Mailbox.CoE.SdoInfo</Value1>
							<Value2>false</Value2>
							<SkipCase Id="3">DuT does not support SDO Info.</SkipCase>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="InitAtLeastOneProfileMatch">
					<SetVariable Target="bAtLeastOneModuleMatch">false</SetVariable>
				</TestStep>
				<TestStep Name="GetCurrentProfileList">
					<SizeOf UInt32Var="u32Tmp">arrOnlineProfiles</SizeOf>
					<Compare>
						<Equal>
							<Value1>u32Tmp</Value1>
							<Value2>0</Value2>
							<CallTestFunction Name="GetCurrentProfileList">
								<Parameter>"online"</Parameter>
								<Parameter>"SafeOP"</Parameter>
								<OutParameter>arrOnlineProfiles</OutParameter>
							</CallTestFunction>
						</Equal>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>u32Tmp</Value1>
							<Value2>0</Value2>
							<WriteLine Id="4" Param0="arrOnlineProfiles" Level="Verbose">Use previously created profile list ({0})</WriteLine>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep>
					<SizeOf UInt32Var="u32Tmp">arrOnlineProfiles</SizeOf>
				</TestStep>
				<TestStep>
					<InitArray TargetArray="arrCurrentProfiles" Length="u32Tmp"></InitArray>
				</TestStep>
				<TestStep>
					<CopyArray>
						<SourceArray>arrOnlineProfiles</SourceArray>
						<DestinationArray>arrCurrentProfiles</DestinationArray>
						<Length>u32Tmp</Length>
					</CopyArray>
				</TestStep>
				<TestStep Name="IsProfileSupported">
					<CallTestFunction Name="DeviceAndModuleProfileDefined">
						<Parameter>arrCurrentProfiles</Parameter>
						<Parameter>5003</Parameter>
						<Parameter>2011</Parameter>
						<OutParameter>bAtLeastOneModuleMatch</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>bAtLeastOneModuleMatch</Value1>
							<Value2>false</Value2>
							<GotoStep>END</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="GetObjectIndexInclOffset">
					<SetVariable Target="u16ObjectIndexInclOffset">#xF9F7</SetVariable>
					<WriteLine Id="5" Param0="u16ObjectIndexInclOffset" Level="Verbose">ObjectIndex '0x{0:X}' (module independent)</WriteLine>
				</TestStep>
				<TestStep Name="LoadDeviceObjectDictionary">
					<Description Id="6" Level="Verbose">Load 'online' object dictionary for testing.</Description>
					<GetObjectDictionary Target="odDeviceObjectdictionary">
						<DictionaryType>Online</DictionaryType>
					</GetObjectDictionary>
					<RaiseErrorOnFailure Id="7">VerifyObject : failed to load online object dictionary.</RaiseErrorOnFailure>
				</TestStep>
				<TestStep Name="SetObjectRequiredLevel">
					<SetVariable Target="bObjectOrEntryRequiredLevel">1</SetVariable>
					<WriteLine Id="8" Param0="u16ObjectIndexInclOffset" Level="Verbose">0x{0:X4} 'Total time powered' may be available</WriteLine>
				</TestStep>
				<TestStep Name="CheckIfObjectExists">
					<GetObjectDescription SourceDictionary="odDeviceObjectdictionary" Index="u16ObjectIndexInclOffset" SubIndex="-1"></GetObjectDescription>
					<GotoOnSuccess>CallCheckObjectDescription</GotoOnSuccess>
				</TestStep>
				<TestStep Name="HandleNotExistingObject">
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>2</Value2>
							<WriteLine Id="9" Param0="u16ObjectIndexInclOffset" Level="Warning">The object 0x{0:X4} 'Total time powered' does not exists.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>1</Value2>
							<WriteLine Id="10" Param0="u16ObjectIndexInclOffset" Level="Output">The object 0x{0:X4} 'Total time powered' does not exists.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>END</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CallCheckObjectDescription">
					<Description Id="11" Param0="u16ObjectIndexInclOffset" Level="Output">Verify the object description 0x{0:X4} 'Total time powered'.</Description>
					<CallTestFunction Name="CheckObjectDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"online"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>"Total time powered"</Parameter>
						<Parameter>null</Parameter>
						<Parameter>7</Parameter>
						<Parameter>-1</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<GotoStep>END</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CallSi0CheckEntryDescription">
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"online"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>0</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>null</Parameter>
						<Parameter>7</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>null</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>32</Parameter>
						<Parameter>i32CurrentBitOffset</Parameter>
						<Parameter>true</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="END">
					<Compare>
						<NotEqual>
							<Value1>bAtLeastOneModuleMatch</Value1>
							<Value2>true</Value2>
							<SkipCase Id="12">SKIP TEST(no module/channel supports the current profile)</SkipCase>
						</NotEqual>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bDEBUG</Value1>
							<Value2>true</Value2>
							<WriteLine Id="13" Param0="strResult" Level="Verbose">DEBUG | Result : '{0}'.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>strResult</Value1>
							<Value2>EmptyString</Value2>
							<ReturnSuccess Id="14">Test succeed</ReturnSuccess>
						</Equal>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>strResult</Value1>
							<Value2>EmptyString</Value2>
							<RaiseError Id="15"></RaiseError>
						</NotEqual>
					</Compare>
				</TestStep>
			</TestCase>
			<TestCase Name="offline | 0xF9F8 (Firmware Update Functional Generation Number)" CaseId="17">
				<Description>
					<PreCondition>- The device profile is 5003
- The module profile is 2011
- The submodule profile is 0</PreCondition>
					<Action>- Iterate over all offline defined modules/channels and if the PreCondition matches the following operations are done:
- Get the offline description of object 0xF9F8(+module specific offset) 'Firmware Update Functional Generation Number' and all entries
 Check:
    (Name)
    BitSize
    DataType
    Rx / Tx mappable
    Default Data
    MinData
    Flags       </Action>
					<PostCondition>Error if
- mandatory object / entry is not defined
- an optional object exists and the entries are invalid
- Object / entry description does not match with the specification</PostCondition>
					<ProposalForSolution>- Define the missing objects
- correct object / entry description</ProposalForSolution>
					<References>
						<Reference Specification="ETG.5003.2011"></Reference>
					</References>
					<Mandatory>true</Mandatory>
				</Description>
				<TestStep Name="InitResult">
					<SetVariable Target="strResult">EmptyString</SetVariable>
				</TestStep>
				<TestStep Name="CheckIfOdAvailable">
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Mailbox</Value1>
							<Value2>false</Value2>
							<SkipCase Id="1">DuT does not support mailbox.</SkipCase>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Mailbox.CoE</Value1>
							<Value2>false</Value2>
							<SkipCase Id="2">DuT does not support CoE.</SkipCase>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep>
					<GetObjectDictionary Target="odDeviceObjectdictionary">
						<DictionaryType>Offline</DictionaryType>
					</GetObjectDictionary>
					<SkipOnFailure Id="3">No offline object dictionary defined.</SkipOnFailure>
				</TestStep>
				<TestStep>
					<GetObjectList Count="u32Tmp" Target="odDeviceObjectdictionaryList" SourceDict="odDeviceObjectdictionary"></GetObjectList>
					<Compare>
						<Equal>
							<Value1>u32Tmp</Value1>
							<Value2>0</Value2>
							<SkipCase Id="4">No offline object dictionary defined.</SkipCase>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="InitAtLeastOneProfileMatch">
					<SetVariable Target="bAtLeastOneModuleMatch">false</SetVariable>
				</TestStep>
				<TestStep Name="GetCurrentProfileList">
					<SizeOf UInt32Var="u32Tmp">arrOfflineProfiles</SizeOf>
					<Compare>
						<Equal>
							<Value1>u32Tmp</Value1>
							<Value2>0</Value2>
							<CallTestFunction Name="GetCurrentProfileList">
								<Parameter>"offline"</Parameter>
								<Parameter>"SafeOP"</Parameter>
								<OutParameter>arrOfflineProfiles</OutParameter>
							</CallTestFunction>
						</Equal>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>u32Tmp</Value1>
							<Value2>0</Value2>
							<WriteLine Id="5" Param0="arrOfflineProfiles" Level="Verbose">Use previously created profile list ({0})</WriteLine>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep>
					<SizeOf UInt32Var="u32Tmp">arrOfflineProfiles</SizeOf>
				</TestStep>
				<TestStep>
					<InitArray TargetArray="arrCurrentProfiles" Length="u32Tmp"></InitArray>
				</TestStep>
				<TestStep>
					<CopyArray>
						<SourceArray>arrOfflineProfiles</SourceArray>
						<DestinationArray>arrCurrentProfiles</DestinationArray>
						<Length>u32Tmp</Length>
					</CopyArray>
				</TestStep>
				<TestStep Name="IsProfileSupported">
					<CallTestFunction Name="DeviceAndModuleProfileDefined">
						<Parameter>arrCurrentProfiles</Parameter>
						<Parameter>5003</Parameter>
						<Parameter>2011</Parameter>
						<OutParameter>bAtLeastOneModuleMatch</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>bAtLeastOneModuleMatch</Value1>
							<Value2>false</Value2>
							<GotoStep>END</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="GetObjectIndexInclOffset">
					<SetVariable Target="u16ObjectIndexInclOffset">#xF9F8</SetVariable>
					<WriteLine Id="6" Param0="u16ObjectIndexInclOffset" Level="Verbose">ObjectIndex '0x{0:X}' (module independent)</WriteLine>
				</TestStep>
				<TestStep Name="LoadDeviceObjectDictionary">
					<Description Id="7" Level="Verbose">Load 'offline' object dictionary for testing.</Description>
					<GetObjectDictionary Target="odDeviceObjectdictionary">
						<DictionaryType>Offline</DictionaryType>
					</GetObjectDictionary>
					<RaiseErrorOnFailure Id="8">VerifyObject : failed to load offline object dictionary.</RaiseErrorOnFailure>
				</TestStep>
				<TestStep Name="CallCheckObjectDescription">
					<Description Id="9" Param0="u16ObjectIndexInclOffset" Level="Output">Verify the object description 0x{0:X4} 'Firmware Update Functional Generation Number'.</Description>
					<CallTestFunction Name="CheckObjectDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"offline"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>"Firmware Update Functional Generation Number"</Parameter>
						<Parameter>null</Parameter>
						<Parameter>7</Parameter>
						<Parameter>-1</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<GotoStep>END</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CallSi0CheckEntryDescription">
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"offline"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>0</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>null</Parameter>
						<Parameter>7</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>null</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>32</Parameter>
						<Parameter>i32CurrentBitOffset</Parameter>
						<Parameter>true</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="END">
					<Compare>
						<NotEqual>
							<Value1>bAtLeastOneModuleMatch</Value1>
							<Value2>true</Value2>
							<SkipCase Id="10">SKIP TEST(no module/channel supports the current profile)</SkipCase>
						</NotEqual>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bDEBUG</Value1>
							<Value2>true</Value2>
							<WriteLine Id="11" Param0="strResult" Level="Verbose">DEBUG | Result : '{0}'.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>strResult</Value1>
							<Value2>EmptyString</Value2>
							<ReturnSuccess Id="12">Test succeed</ReturnSuccess>
						</Equal>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>strResult</Value1>
							<Value2>EmptyString</Value2>
							<RaiseError Id="13"></RaiseError>
						</NotEqual>
					</Compare>
				</TestStep>
			</TestCase>
			<TestCase Name="online | 0xF9F8 (Firmware Update Functional Generation Number)" CaseId="18">
				<Description>
					<PreCondition>- The device profile is 5003
- The module profile is 2011
- The submodule profile is 0</PreCondition>
					<Action>- Iterate over all online defined modules/channels and if the PreCondition matches the following operations are done:
- Get the online description of object 0xF9F8(+module specific offset) 'Firmware Update Functional Generation Number' and all entries
 Check:
    (Name)
    BitSize
    DataType
    Rx / Tx mappable
    Default Data
    MinData
    Flags       </Action>
					<PostCondition>Error if
- mandatory object / entry is not defined
- an optional object exists and the entries are invalid
- Object / entry description does not match with the specification</PostCondition>
					<ProposalForSolution>- Define the missing objects
- correct object / entry description</ProposalForSolution>
					<References>
						<Reference Specification="ETG.5003.2011"></Reference>
					</References>
					<Mandatory>true</Mandatory>
				</Description>
				<TestStep Name="InitResult">
					<SetVariable Target="strResult">EmptyString</SetVariable>
				</TestStep>
				<TestStep Name="CheckIfOdAvailable">
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Mailbox</Value1>
							<Value2>false</Value2>
							<SkipCase Id="1">DuT does not support mailbox.</SkipCase>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Mailbox.CoE</Value1>
							<Value2>false</Value2>
							<SkipCase Id="2">DuT does not support CoE.</SkipCase>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Mailbox.CoE.SdoInfo</Value1>
							<Value2>false</Value2>
							<SkipCase Id="3">DuT does not support SDO Info.</SkipCase>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="InitAtLeastOneProfileMatch">
					<SetVariable Target="bAtLeastOneModuleMatch">false</SetVariable>
				</TestStep>
				<TestStep Name="GetCurrentProfileList">
					<SizeOf UInt32Var="u32Tmp">arrOnlineProfiles</SizeOf>
					<Compare>
						<Equal>
							<Value1>u32Tmp</Value1>
							<Value2>0</Value2>
							<CallTestFunction Name="GetCurrentProfileList">
								<Parameter>"online"</Parameter>
								<Parameter>"SafeOP"</Parameter>
								<OutParameter>arrOnlineProfiles</OutParameter>
							</CallTestFunction>
						</Equal>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>u32Tmp</Value1>
							<Value2>0</Value2>
							<WriteLine Id="4" Param0="arrOnlineProfiles" Level="Verbose">Use previously created profile list ({0})</WriteLine>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep>
					<SizeOf UInt32Var="u32Tmp">arrOnlineProfiles</SizeOf>
				</TestStep>
				<TestStep>
					<InitArray TargetArray="arrCurrentProfiles" Length="u32Tmp"></InitArray>
				</TestStep>
				<TestStep>
					<CopyArray>
						<SourceArray>arrOnlineProfiles</SourceArray>
						<DestinationArray>arrCurrentProfiles</DestinationArray>
						<Length>u32Tmp</Length>
					</CopyArray>
				</TestStep>
				<TestStep Name="IsProfileSupported">
					<CallTestFunction Name="DeviceAndModuleProfileDefined">
						<Parameter>arrCurrentProfiles</Parameter>
						<Parameter>5003</Parameter>
						<Parameter>2011</Parameter>
						<OutParameter>bAtLeastOneModuleMatch</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>bAtLeastOneModuleMatch</Value1>
							<Value2>false</Value2>
							<GotoStep>END</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="GetObjectIndexInclOffset">
					<SetVariable Target="u16ObjectIndexInclOffset">#xF9F8</SetVariable>
					<WriteLine Id="5" Param0="u16ObjectIndexInclOffset" Level="Verbose">ObjectIndex '0x{0:X}' (module independent)</WriteLine>
				</TestStep>
				<TestStep Name="LoadDeviceObjectDictionary">
					<Description Id="6" Level="Verbose">Load 'online' object dictionary for testing.</Description>
					<GetObjectDictionary Target="odDeviceObjectdictionary">
						<DictionaryType>Online</DictionaryType>
					</GetObjectDictionary>
					<RaiseErrorOnFailure Id="7">VerifyObject : failed to load online object dictionary.</RaiseErrorOnFailure>
				</TestStep>
				<TestStep Name="CallCheckObjectDescription">
					<Description Id="8" Param0="u16ObjectIndexInclOffset" Level="Output">Verify the object description 0x{0:X4} 'Firmware Update Functional Generation Number'.</Description>
					<CallTestFunction Name="CheckObjectDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"online"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>"Firmware Update Functional Generation Number"</Parameter>
						<Parameter>null</Parameter>
						<Parameter>7</Parameter>
						<Parameter>-1</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<GotoStep>END</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CallSi0CheckEntryDescription">
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"online"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>0</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>null</Parameter>
						<Parameter>7</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>null</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>32</Parameter>
						<Parameter>i32CurrentBitOffset</Parameter>
						<Parameter>true</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="END">
					<Compare>
						<NotEqual>
							<Value1>bAtLeastOneModuleMatch</Value1>
							<Value2>true</Value2>
							<SkipCase Id="9">SKIP TEST(no module/channel supports the current profile)</SkipCase>
						</NotEqual>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bDEBUG</Value1>
							<Value2>true</Value2>
							<WriteLine Id="10" Param0="strResult" Level="Verbose">DEBUG | Result : '{0}'.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>strResult</Value1>
							<Value2>EmptyString</Value2>
							<ReturnSuccess Id="11">Test succeed</ReturnSuccess>
						</Equal>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>strResult</Value1>
							<Value2>EmptyString</Value2>
							<RaiseError Id="12"></RaiseError>
						</NotEqual>
					</Compare>
				</TestStep>
			</TestCase>
			<TestCase Name="offline | 0xF9F9 (Module Manufacturer Hardware Version)" CaseId="19">
				<Description>
					<PreCondition>- The device profile is 5003
- The module profile is 2011
- The submodule profile is 0</PreCondition>
					<Action>- Iterate over all offline defined modules/channels and if the PreCondition matches the following operations are done:
- Get the offline description of object 0xF9F9(+module specific offset) 'Module Manufacturer Hardware Version' and all entries
 Check:
    (Name)
    BitSize
    DataType
    Rx / Tx mappable
    Default Data
    MinData
    Flags       </Action>
					<PostCondition>Error if
- mandatory object / entry is not defined
- an optional object exists and the entries are invalid
- Object / entry description does not match with the specification</PostCondition>
					<ProposalForSolution>- Define the missing objects
- correct object / entry description</ProposalForSolution>
					<References>
						<Reference Specification="ETG.5003.2011"></Reference>
					</References>
					<Mandatory>true</Mandatory>
				</Description>
				<TestStep Name="InitResult">
					<SetVariable Target="strResult">EmptyString</SetVariable>
				</TestStep>
				<TestStep Name="CheckIfOdAvailable">
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Mailbox</Value1>
							<Value2>false</Value2>
							<SkipCase Id="1">DuT does not support mailbox.</SkipCase>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Mailbox.CoE</Value1>
							<Value2>false</Value2>
							<SkipCase Id="2">DuT does not support CoE.</SkipCase>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep>
					<GetObjectDictionary Target="odDeviceObjectdictionary">
						<DictionaryType>Offline</DictionaryType>
					</GetObjectDictionary>
					<SkipOnFailure Id="3">No offline object dictionary defined.</SkipOnFailure>
				</TestStep>
				<TestStep>
					<GetObjectList Count="u32Tmp" Target="odDeviceObjectdictionaryList" SourceDict="odDeviceObjectdictionary"></GetObjectList>
					<Compare>
						<Equal>
							<Value1>u32Tmp</Value1>
							<Value2>0</Value2>
							<SkipCase Id="4">No offline object dictionary defined.</SkipCase>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="InitAtLeastOneProfileMatch">
					<SetVariable Target="bAtLeastOneModuleMatch">false</SetVariable>
				</TestStep>
				<TestStep Name="GetCurrentProfileList">
					<SizeOf UInt32Var="u32Tmp">arrOfflineProfiles</SizeOf>
					<Compare>
						<Equal>
							<Value1>u32Tmp</Value1>
							<Value2>0</Value2>
							<CallTestFunction Name="GetCurrentProfileList">
								<Parameter>"offline"</Parameter>
								<Parameter>"SafeOP"</Parameter>
								<OutParameter>arrOfflineProfiles</OutParameter>
							</CallTestFunction>
						</Equal>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>u32Tmp</Value1>
							<Value2>0</Value2>
							<WriteLine Id="5" Param0="arrOfflineProfiles" Level="Verbose">Use previously created profile list ({0})</WriteLine>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep>
					<SizeOf UInt32Var="u32Tmp">arrOfflineProfiles</SizeOf>
				</TestStep>
				<TestStep>
					<InitArray TargetArray="arrCurrentProfiles" Length="u32Tmp"></InitArray>
				</TestStep>
				<TestStep>
					<CopyArray>
						<SourceArray>arrOfflineProfiles</SourceArray>
						<DestinationArray>arrCurrentProfiles</DestinationArray>
						<Length>u32Tmp</Length>
					</CopyArray>
				</TestStep>
				<TestStep Name="IsProfileSupported">
					<CallTestFunction Name="DeviceAndModuleProfileDefined">
						<Parameter>arrCurrentProfiles</Parameter>
						<Parameter>5003</Parameter>
						<Parameter>2011</Parameter>
						<OutParameter>bAtLeastOneModuleMatch</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>bAtLeastOneModuleMatch</Value1>
							<Value2>false</Value2>
							<GotoStep>END</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="GetObjectIndexInclOffset">
					<SetVariable Target="u16ObjectIndexInclOffset">#xF9F9</SetVariable>
					<WriteLine Id="6" Param0="u16ObjectIndexInclOffset" Level="Verbose">ObjectIndex '0x{0:X}' (module independent)</WriteLine>
				</TestStep>
				<TestStep Name="LoadDeviceObjectDictionary">
					<Description Id="7" Level="Verbose">Load 'offline' object dictionary for testing.</Description>
					<GetObjectDictionary Target="odDeviceObjectdictionary">
						<DictionaryType>Offline</DictionaryType>
					</GetObjectDictionary>
					<RaiseErrorOnFailure Id="8">VerifyObject : failed to load offline object dictionary.</RaiseErrorOnFailure>
				</TestStep>
				<TestStep Name="SetObjectRequiredLevel">
					<SetVariable Target="bObjectOrEntryRequiredLevel">1</SetVariable>
					<WriteLine Id="9" Param0="u16ObjectIndexInclOffset" Level="Verbose">0x{0:X4} 'Module Manufacturer Hardware Version' may be available</WriteLine>
				</TestStep>
				<TestStep Name="CheckIfObjectExists">
					<GetObjectDescription SourceDictionary="odDeviceObjectdictionary" Index="u16ObjectIndexInclOffset" SubIndex="-1"></GetObjectDescription>
					<GotoOnSuccess>CallCheckObjectDescription</GotoOnSuccess>
				</TestStep>
				<TestStep Name="HandleNotExistingObject">
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>3</Value2>
							<SetVariable Target="strResult" Param0="u16ObjectIndexInclOffset">The object 0x{0:X4} 'Module Manufacturer Hardware Version' does not exists.</SetVariable>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>3</Value2>
							<WriteLine Id="10" Param0="u16ObjectIndexInclOffset" Level="Error">The object 0x{0:X4} 'Module Manufacturer Hardware Version' does not exists.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>2</Value2>
							<WriteLine Id="11" Param0="u16ObjectIndexInclOffset" Level="Warning">The object 0x{0:X4} 'Module Manufacturer Hardware Version' does not exists.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>1</Value2>
							<WriteLine Id="12" Param0="u16ObjectIndexInclOffset" Level="Output">The object 0x{0:X4} 'Module Manufacturer Hardware Version' does not exists.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>END</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CallCheckObjectDescription">
					<Description Id="13" Param0="u16ObjectIndexInclOffset" Level="Output">Verify the object description 0x{0:X4} 'Module Manufacturer Hardware Version'.</Description>
					<CallTestFunction Name="CheckObjectDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"offline"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>"Module Manufacturer Hardware Version"</Parameter>
						<Parameter>null</Parameter>
						<Parameter>8</Parameter>
						<Parameter>-1</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<GotoStep>END</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="InitEntryBittOffset">
					<SetVariable Target="i32CurrentBitOffset">0</SetVariable>
				</TestStep>
				<TestStep Name="StartSi0">
					<Description Id="14" Level="Output">Start validate SubIndex0</Description>
					<WriteLine Id="15" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : Subindex '0x{0:X}.0'</WriteLine>
				</TestStep>
				<TestStep Name="CallSi0CheckEntryDescription">
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"offline"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>0</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>null</Parameter>
						<Parameter>5</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>null</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>null</Parameter>
						<Parameter>null</Parameter>
						<Parameter>null</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>8</Parameter>
						<Parameter>i32CurrentBitOffset</Parameter>
						<Parameter>true</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="EndSi0">
					<SetVariable Target="i32CurrentBitOffset">16</SetVariable>
				</TestStep>
				<TestStep Name="InitProfileLoopCounter">
					<SetVariable Target="u32ProfileCounter">0</SetVariable>
				</TestStep>
				<TestStep Name="GetProfileArrayLength">
					<SizeOf UInt32Var="u32CurrentProfilesLength">arrCurrentProfiles</SizeOf>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="16" Param0="u32CurrentProfilesLength" Level="Verbose">'{0}' Profile(s) defined offline.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>u32CurrentProfilesLength</Value1>
							<Value2>0</Value2>
							<SkipCase Id="17">Skip case | no profile defined.</SkipCase>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="ProfileLoopStart">
					<GetArrayItem SourceArray="arrCurrentProfiles" Target="strTmpString" Index="u32ProfileCounter"></GetArrayItem>
				</TestStep>
				<TestStep Name="CheckProfileInformationString">
					<Compare>
						<Equal>
							<Value1>strTmpString</Value1>
							<Value2>null</Value2>
							<RaiseError Id="18" Param0="u32ProfileCounter">Profile Info element [{0}] is null.</RaiseError>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>strTmpString</Value1>
							<Value2>EmptyString</Value2>
							<RaiseError Id="19" Param0="u32ProfileCounter">Profile Info element [{0}] is an empty string.</RaiseError>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="GetDeviceProfile">
					<CallTestFunction Name="GetDeviceProfile">
						<Parameter>strTmpString</Parameter>
						<OutParameter>uint16CurDeviceProfile</OutParameter>
					</CallTestFunction>
				</TestStep>
				<TestStep Name="GetModuleProfile">
					<CallTestFunction Name="GetModuleProfile">
						<Parameter>strTmpString</Parameter>
						<OutParameter>uint16CurModuleProfile</OutParameter>
					</CallTestFunction>
				</TestStep>
				<TestStep Name="GetSubModuleProfile">
					<CallTestFunction Name="GetSubModuleProfile">
						<Parameter>strTmpString</Parameter>
						<OutParameter>uint16CurSubModuleProfile</OutParameter>
					</CallTestFunction>
				</TestStep>
				<TestStep Name="DumpProfileInfo">
					<Description Id="20" Param0="uint16CurDeviceProfile" Param1="uint16CurModuleProfile" Param2="uint16CurSubModuleProfile" Param3="u32ProfileCounter" Level="Output">Module[{3}] : DeviceProfile '{0}' ; ModuleProfile '{1}' ; SubModuleProfile '{2}'</Description>
					<Compare>
						<Equal>
							<Value1>bIgnoreProfileID</Value1>
							<Value2>true</Value2>
							<GotoStep>IndicateThatAtleastOneModuleMatch</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CompareDeviceProfile">
					<Compare>
						<NotEqual>
							<Value1>uint16CurDeviceProfile</Value1>
							<Value2>5003</Value2>
							<WriteLine Id="21" Param0="uint16CurDeviceProfile" Level="Output">Skip Profile  (Test Device Profile '5003' != Cur Device Profile '{0}')</WriteLine>
						</NotEqual>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>uint16CurDeviceProfile</Value1>
							<Value2>5003</Value2>
							<GotoStep>ProfileLoopEnd</GotoStep>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep Name="CompareModuleProfile">
					<Compare>
						<NotEqual>
							<Value1>uint16CurModuleProfile</Value1>
							<Value2>2011</Value2>
							<WriteLine Id="22" Param0="uint16CurModuleProfile" Level="Output">Skip Profile  (Test Module Profile '2011' != Cur Module Profile '{0}')</WriteLine>
						</NotEqual>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>uint16CurModuleProfile</Value1>
							<Value2>2011</Value2>
							<GotoStep>ProfileLoopEnd</GotoStep>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep Name="CompareSubModuleProfile">
					<Compare>
						<NotEqual>
							<Value1>uint16CurSubModuleProfile</Value1>
							<Value2>0</Value2>
							<WriteLine Id="23" Param0="uint16CurSubModuleProfile" Level="Output">Skip Profile  (Test SubModule Profile '0' != Cur SubModule Profile '{0}')</WriteLine>
						</NotEqual>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>uint16CurSubModuleProfile</Value1>
							<Value2>0</Value2>
							<GotoStep>ProfileLoopEnd</GotoStep>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep Name="IndicateThatAtleastOneModuleMatch">
					<SetVariable Target="bAtLeastOneModuleMatch">true</SetVariable>
				</TestStep>
				<TestStep Name="StartSi1">
					<Description Id="24" Param0="1 + (u32ProfileCounter * 1)" Level="Output">Start validate SubIndex{0}</Description>
					<SetVariable Target="byteSubIndexInclOffset">1 + (u32ProfileCounter * 1)</SetVariable>
					<WriteLine Id="25" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Param2="byteSubIndexInclOffset" Level="Verbose">Module[{1}] : Subindex '0x{0:X}.{2}'</WriteLine>
				</TestStep>
				<TestStep Name="SetSi1RequiredLevel">
					<SetVariable Target="bObjectOrEntryRequiredLevel">1</SetVariable>
					<WriteLine Id="26" Param0="u16ObjectIndexInclOffset" Param1="byteSubIndexInclOffset" Level="Verbose">0x{0:X4}.{1} may be available</WriteLine>
				</TestStep>
				<TestStep Name="CheckIfSi1Exists">
					<GetObjectDescription SourceDictionary="odDeviceObjectdictionary" Index="u16ObjectIndexInclOffset" SubIndex="byteSubIndexInclOffset">
						<Type>u16DataType</Type>
					</GetObjectDescription>
					<GotoOnFailure>HandleNotExistingSi1</GotoOnFailure>
				</TestStep>
				<TestStep>
					<Compare>
						<NotEqual>
							<Value1>u16DataType</Value1>
							<Value2>0</Value2>
							<GotoStep>CallSi1CheckEntryDescription</GotoStep>
						</NotEqual>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>1</Value2>
							<WriteLine Id="27" Param0="u16ObjectIndexInclOffset" Level="Verbose">The entry 0x{0:X4}.1 is defined as a padding entry.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>EndSi1</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="HandleNotExistingSi1">
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>3</Value2>
							<SetVariable Target="strResult" Param0="u16ObjectIndexInclOffset" Param1="byteSubIndexInclOffset">The entry 0x{0:X4}.{1} does not exists.</SetVariable>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>3</Value2>
							<WriteLine Id="28" Param0="u16ObjectIndexInclOffset" Param1="byteSubIndexInclOffset" Level="Error">The entry 0x{0:X4}.{1} does not exists.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>3</Value2>
							<GotoStep>EndSi1</GotoStep>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="29" Param0="u16ObjectIndexInclOffset" Param1="byteSubIndexInclOffset" Level="Output">The entry 0x{0:X4}.{1} does not exists.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>EndSi1</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CallSi1CheckEntryDescription">
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"offline"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>byteSubIndexInclOffset</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>null</Parameter>
						<Parameter>9</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>null</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>i32CurrentBitOffset</Parameter>
						<Parameter>true</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="EndSi1">
					<SetVariable Target="i32CurrentBitOffset">-1</SetVariable>
				</TestStep>
				<TestStep Name="ProfileLoopEnd">
					<Compare>
						<Equal>
							<Value1>bAtLeastOneModuleMatch</Value1>
							<Value2>false</Value2>
							<GotoStep>HandleAbortTestCaseOnFirstError</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="HandleAbortTestCaseOnFirstError">
					<Compare>
						<Equal>
							<Value1>bAbortTestCaseOnFirstError</Value1>
							<Value2>false</Value2>
							<GotoStep>ProfileLoopIncrement</GotoStep>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>strResult</Value1>
							<Value2>EmptyString</Value2>
							<GotoStep>ProfileLoopIncrement</GotoStep>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="30" Level="Output">Object verification for all following modules abort because an error was already detected for the current module.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>END</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="ProfileLoopIncrement">
					<SetVariable Target="u32ProfileCounter">u32ProfileCounter + 1</SetVariable>
					<Compare>
						<Greater>
							<Value1>u32CurrentProfilesLength</Value1>
							<Value2>u32ProfileCounter</Value2>
							<GotoStep>ProfileLoopStart</GotoStep>
						</Greater>
					</Compare>
				</TestStep>
				<TestStep Name="END">
					<Compare>
						<NotEqual>
							<Value1>bAtLeastOneModuleMatch</Value1>
							<Value2>true</Value2>
							<SkipCase Id="31">SKIP TEST(no module/channel supports the current profile)</SkipCase>
						</NotEqual>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bDEBUG</Value1>
							<Value2>true</Value2>
							<WriteLine Id="32" Param0="strResult" Level="Verbose">DEBUG | Result : '{0}'.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>strResult</Value1>
							<Value2>EmptyString</Value2>
							<ReturnSuccess Id="33">Test succeed</ReturnSuccess>
						</Equal>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>strResult</Value1>
							<Value2>EmptyString</Value2>
							<RaiseError Id="34"></RaiseError>
						</NotEqual>
					</Compare>
				</TestStep>
			</TestCase>
			<TestCase Name="online | 0xF9F9 (Module Manufacturer Hardware Version)" CaseId="20">
				<Description>
					<PreCondition>- The device profile is 5003
- The module profile is 2011
- The submodule profile is 0</PreCondition>
					<Action>- Iterate over all online defined modules/channels and if the PreCondition matches the following operations are done:
- Get the online description of object 0xF9F9(+module specific offset) 'Module Manufacturer Hardware Version' and all entries
 Check:
    (Name)
    BitSize
    DataType
    Rx / Tx mappable
    Default Data
    MinData
    Flags       </Action>
					<PostCondition>Error if
- mandatory object / entry is not defined
- an optional object exists and the entries are invalid
- Object / entry description does not match with the specification</PostCondition>
					<ProposalForSolution>- Define the missing objects
- correct object / entry description</ProposalForSolution>
					<References>
						<Reference Specification="ETG.5003.2011"></Reference>
					</References>
					<Mandatory>true</Mandatory>
				</Description>
				<TestStep Name="InitResult">
					<SetVariable Target="strResult">EmptyString</SetVariable>
				</TestStep>
				<TestStep Name="CheckIfOdAvailable">
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Mailbox</Value1>
							<Value2>false</Value2>
							<SkipCase Id="1">DuT does not support mailbox.</SkipCase>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Mailbox.CoE</Value1>
							<Value2>false</Value2>
							<SkipCase Id="2">DuT does not support CoE.</SkipCase>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Mailbox.CoE.SdoInfo</Value1>
							<Value2>false</Value2>
							<SkipCase Id="3">DuT does not support SDO Info.</SkipCase>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="InitAtLeastOneProfileMatch">
					<SetVariable Target="bAtLeastOneModuleMatch">false</SetVariable>
				</TestStep>
				<TestStep Name="GetCurrentProfileList">
					<SizeOf UInt32Var="u32Tmp">arrOnlineProfiles</SizeOf>
					<Compare>
						<Equal>
							<Value1>u32Tmp</Value1>
							<Value2>0</Value2>
							<CallTestFunction Name="GetCurrentProfileList">
								<Parameter>"online"</Parameter>
								<Parameter>"SafeOP"</Parameter>
								<OutParameter>arrOnlineProfiles</OutParameter>
							</CallTestFunction>
						</Equal>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>u32Tmp</Value1>
							<Value2>0</Value2>
							<WriteLine Id="4" Param0="arrOnlineProfiles" Level="Verbose">Use previously created profile list ({0})</WriteLine>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep>
					<SizeOf UInt32Var="u32Tmp">arrOnlineProfiles</SizeOf>
				</TestStep>
				<TestStep>
					<InitArray TargetArray="arrCurrentProfiles" Length="u32Tmp"></InitArray>
				</TestStep>
				<TestStep>
					<CopyArray>
						<SourceArray>arrOnlineProfiles</SourceArray>
						<DestinationArray>arrCurrentProfiles</DestinationArray>
						<Length>u32Tmp</Length>
					</CopyArray>
				</TestStep>
				<TestStep Name="IsProfileSupported">
					<CallTestFunction Name="DeviceAndModuleProfileDefined">
						<Parameter>arrCurrentProfiles</Parameter>
						<Parameter>5003</Parameter>
						<Parameter>2011</Parameter>
						<OutParameter>bAtLeastOneModuleMatch</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>bAtLeastOneModuleMatch</Value1>
							<Value2>false</Value2>
							<GotoStep>END</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="GetObjectIndexInclOffset">
					<SetVariable Target="u16ObjectIndexInclOffset">#xF9F9</SetVariable>
					<WriteLine Id="5" Param0="u16ObjectIndexInclOffset" Level="Verbose">ObjectIndex '0x{0:X}' (module independent)</WriteLine>
				</TestStep>
				<TestStep Name="LoadDeviceObjectDictionary">
					<Description Id="6" Level="Verbose">Load 'online' object dictionary for testing.</Description>
					<GetObjectDictionary Target="odDeviceObjectdictionary">
						<DictionaryType>Online</DictionaryType>
					</GetObjectDictionary>
					<RaiseErrorOnFailure Id="7">VerifyObject : failed to load online object dictionary.</RaiseErrorOnFailure>
				</TestStep>
				<TestStep Name="SetObjectRequiredLevel">
					<SetVariable Target="bObjectOrEntryRequiredLevel">1</SetVariable>
					<WriteLine Id="8" Param0="u16ObjectIndexInclOffset" Level="Verbose">0x{0:X4} 'Module Manufacturer Hardware Version' may be available</WriteLine>
				</TestStep>
				<TestStep Name="CheckIfObjectExists">
					<GetObjectDescription SourceDictionary="odDeviceObjectdictionary" Index="u16ObjectIndexInclOffset" SubIndex="-1"></GetObjectDescription>
					<GotoOnSuccess>CallCheckObjectDescription</GotoOnSuccess>
				</TestStep>
				<TestStep Name="HandleNotExistingObject">
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>3</Value2>
							<SetVariable Target="strResult" Param0="u16ObjectIndexInclOffset">The object 0x{0:X4} 'Module Manufacturer Hardware Version' does not exists.</SetVariable>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>3</Value2>
							<WriteLine Id="9" Param0="u16ObjectIndexInclOffset" Level="Error">The object 0x{0:X4} 'Module Manufacturer Hardware Version' does not exists.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>2</Value2>
							<WriteLine Id="10" Param0="u16ObjectIndexInclOffset" Level="Warning">The object 0x{0:X4} 'Module Manufacturer Hardware Version' does not exists.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>1</Value2>
							<WriteLine Id="11" Param0="u16ObjectIndexInclOffset" Level="Output">The object 0x{0:X4} 'Module Manufacturer Hardware Version' does not exists.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>END</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CallCheckObjectDescription">
					<Description Id="12" Param0="u16ObjectIndexInclOffset" Level="Output">Verify the object description 0x{0:X4} 'Module Manufacturer Hardware Version'.</Description>
					<CallTestFunction Name="CheckObjectDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"online"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>"Module Manufacturer Hardware Version"</Parameter>
						<Parameter>null</Parameter>
						<Parameter>8</Parameter>
						<Parameter>-1</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<GotoStep>END</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="InitEntryBittOffset">
					<SetVariable Target="i32CurrentBitOffset">0</SetVariable>
				</TestStep>
				<TestStep Name="StartSi0">
					<Description Id="13" Level="Output">Start validate SubIndex0</Description>
					<WriteLine Id="14" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : Subindex '0x{0:X}.0'</WriteLine>
				</TestStep>
				<TestStep Name="CallSi0CheckEntryDescription">
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"online"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>0</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>null</Parameter>
						<Parameter>5</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>null</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>null</Parameter>
						<Parameter>null</Parameter>
						<Parameter>null</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>8</Parameter>
						<Parameter>i32CurrentBitOffset</Parameter>
						<Parameter>true</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="EndSi0">
					<SetVariable Target="i32CurrentBitOffset">16</SetVariable>
				</TestStep>
				<TestStep Name="InitProfileLoopCounter">
					<SetVariable Target="u32ProfileCounter">0</SetVariable>
				</TestStep>
				<TestStep Name="GetProfileArrayLength">
					<SizeOf UInt32Var="u32CurrentProfilesLength">arrCurrentProfiles</SizeOf>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="15" Param0="u32CurrentProfilesLength" Level="Verbose">'{0}' Profile(s) defined online.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>u32CurrentProfilesLength</Value1>
							<Value2>0</Value2>
							<SkipCase Id="16">Skip case | no profile defined.</SkipCase>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="ProfileLoopStart">
					<GetArrayItem SourceArray="arrCurrentProfiles" Target="strTmpString" Index="u32ProfileCounter"></GetArrayItem>
				</TestStep>
				<TestStep Name="CheckProfileInformationString">
					<Compare>
						<Equal>
							<Value1>strTmpString</Value1>
							<Value2>null</Value2>
							<RaiseError Id="17" Param0="u32ProfileCounter">Profile Info element [{0}] is null.</RaiseError>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>strTmpString</Value1>
							<Value2>EmptyString</Value2>
							<RaiseError Id="18" Param0="u32ProfileCounter">Profile Info element [{0}] is an empty string.</RaiseError>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="GetDeviceProfile">
					<CallTestFunction Name="GetDeviceProfile">
						<Parameter>strTmpString</Parameter>
						<OutParameter>uint16CurDeviceProfile</OutParameter>
					</CallTestFunction>
				</TestStep>
				<TestStep Name="GetModuleProfile">
					<CallTestFunction Name="GetModuleProfile">
						<Parameter>strTmpString</Parameter>
						<OutParameter>uint16CurModuleProfile</OutParameter>
					</CallTestFunction>
				</TestStep>
				<TestStep Name="GetSubModuleProfile">
					<CallTestFunction Name="GetSubModuleProfile">
						<Parameter>strTmpString</Parameter>
						<OutParameter>uint16CurSubModuleProfile</OutParameter>
					</CallTestFunction>
				</TestStep>
				<TestStep Name="DumpProfileInfo">
					<Description Id="19" Param0="uint16CurDeviceProfile" Param1="uint16CurModuleProfile" Param2="uint16CurSubModuleProfile" Param3="u32ProfileCounter" Level="Output">Module[{3}] : DeviceProfile '{0}' ; ModuleProfile '{1}' ; SubModuleProfile '{2}'</Description>
					<Compare>
						<Equal>
							<Value1>bIgnoreProfileID</Value1>
							<Value2>true</Value2>
							<GotoStep>IndicateThatAtleastOneModuleMatch</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CompareDeviceProfile">
					<Compare>
						<NotEqual>
							<Value1>uint16CurDeviceProfile</Value1>
							<Value2>5003</Value2>
							<WriteLine Id="20" Param0="uint16CurDeviceProfile" Level="Output">Skip Profile  (Test Device Profile '5003' != Cur Device Profile '{0}')</WriteLine>
						</NotEqual>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>uint16CurDeviceProfile</Value1>
							<Value2>5003</Value2>
							<GotoStep>ProfileLoopEnd</GotoStep>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep Name="CompareModuleProfile">
					<Compare>
						<NotEqual>
							<Value1>uint16CurModuleProfile</Value1>
							<Value2>2011</Value2>
							<WriteLine Id="21" Param0="uint16CurModuleProfile" Level="Output">Skip Profile  (Test Module Profile '2011' != Cur Module Profile '{0}')</WriteLine>
						</NotEqual>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>uint16CurModuleProfile</Value1>
							<Value2>2011</Value2>
							<GotoStep>ProfileLoopEnd</GotoStep>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep Name="CompareSubModuleProfile">
					<Compare>
						<NotEqual>
							<Value1>uint16CurSubModuleProfile</Value1>
							<Value2>0</Value2>
							<WriteLine Id="22" Param0="uint16CurSubModuleProfile" Level="Output">Skip Profile  (Test SubModule Profile '0' != Cur SubModule Profile '{0}')</WriteLine>
						</NotEqual>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>uint16CurSubModuleProfile</Value1>
							<Value2>0</Value2>
							<GotoStep>ProfileLoopEnd</GotoStep>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep Name="IndicateThatAtleastOneModuleMatch">
					<SetVariable Target="bAtLeastOneModuleMatch">true</SetVariable>
				</TestStep>
				<TestStep Name="StartSi1">
					<Description Id="23" Param0="1 + (u32ProfileCounter * 1)" Level="Output">Start validate SubIndex{0}</Description>
					<SetVariable Target="byteSubIndexInclOffset">1 + (u32ProfileCounter * 1)</SetVariable>
					<WriteLine Id="24" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Param2="byteSubIndexInclOffset" Level="Verbose">Module[{1}] : Subindex '0x{0:X}.{2}'</WriteLine>
				</TestStep>
				<TestStep Name="SetSi1RequiredLevel">
					<SetVariable Target="bObjectOrEntryRequiredLevel">1</SetVariable>
					<WriteLine Id="25" Param0="u16ObjectIndexInclOffset" Param1="byteSubIndexInclOffset" Level="Verbose">0x{0:X4}.{1} may be available</WriteLine>
				</TestStep>
				<TestStep Name="CheckIfSi1Exists">
					<GetObjectDescription SourceDictionary="odDeviceObjectdictionary" Index="u16ObjectIndexInclOffset" SubIndex="byteSubIndexInclOffset">
						<Type>u16DataType</Type>
					</GetObjectDescription>
					<GotoOnFailure>HandleNotExistingSi1</GotoOnFailure>
				</TestStep>
				<TestStep>
					<Compare>
						<NotEqual>
							<Value1>u16DataType</Value1>
							<Value2>0</Value2>
							<GotoStep>CallSi1CheckEntryDescription</GotoStep>
						</NotEqual>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>1</Value2>
							<WriteLine Id="26" Param0="u16ObjectIndexInclOffset" Level="Verbose">The entry 0x{0:X4}.1 is defined as a padding entry.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>EndSi1</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="HandleNotExistingSi1">
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>3</Value2>
							<SetVariable Target="strResult" Param0="u16ObjectIndexInclOffset" Param1="byteSubIndexInclOffset">The entry 0x{0:X4}.{1} does not exists.</SetVariable>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>3</Value2>
							<WriteLine Id="27" Param0="u16ObjectIndexInclOffset" Param1="byteSubIndexInclOffset" Level="Error">The entry 0x{0:X4}.{1} does not exists.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>3</Value2>
							<GotoStep>EndSi1</GotoStep>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="28" Param0="u16ObjectIndexInclOffset" Param1="byteSubIndexInclOffset" Level="Output">The entry 0x{0:X4}.{1} does not exists.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>EndSi1</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CallSi1CheckEntryDescription">
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"online"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>byteSubIndexInclOffset</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>null</Parameter>
						<Parameter>9</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>null</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>i32CurrentBitOffset</Parameter>
						<Parameter>true</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="EndSi1">
					<SetVariable Target="i32CurrentBitOffset">-1</SetVariable>
				</TestStep>
				<TestStep Name="ProfileLoopEnd">
					<Compare>
						<Equal>
							<Value1>bAtLeastOneModuleMatch</Value1>
							<Value2>false</Value2>
							<GotoStep>HandleAbortTestCaseOnFirstError</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="HandleAbortTestCaseOnFirstError">
					<Compare>
						<Equal>
							<Value1>bAbortTestCaseOnFirstError</Value1>
							<Value2>false</Value2>
							<GotoStep>ProfileLoopIncrement</GotoStep>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>strResult</Value1>
							<Value2>EmptyString</Value2>
							<GotoStep>ProfileLoopIncrement</GotoStep>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="29" Level="Output">Object verification for all following modules abort because an error was already detected for the current module.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>END</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="ProfileLoopIncrement">
					<SetVariable Target="u32ProfileCounter">u32ProfileCounter + 1</SetVariable>
					<Compare>
						<Greater>
							<Value1>u32CurrentProfilesLength</Value1>
							<Value2>u32ProfileCounter</Value2>
							<GotoStep>ProfileLoopStart</GotoStep>
						</Greater>
					</Compare>
				</TestStep>
				<TestStep Name="END">
					<Compare>
						<NotEqual>
							<Value1>bAtLeastOneModuleMatch</Value1>
							<Value2>true</Value2>
							<SkipCase Id="30">SKIP TEST(no module/channel supports the current profile)</SkipCase>
						</NotEqual>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bDEBUG</Value1>
							<Value2>true</Value2>
							<WriteLine Id="31" Param0="strResult" Level="Verbose">DEBUG | Result : '{0}'.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>strResult</Value1>
							<Value2>EmptyString</Value2>
							<ReturnSuccess Id="32">Test succeed</ReturnSuccess>
						</Equal>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>strResult</Value1>
							<Value2>EmptyString</Value2>
							<RaiseError Id="33"></RaiseError>
						</NotEqual>
					</Compare>
				</TestStep>
			</TestCase>
			<TestCase Name="offline | 0xF9FA (Module Manufacturer Software Version)" CaseId="21">
				<Description>
					<PreCondition>- The device profile is 5003
- The module profile is 2011
- The submodule profile is 0</PreCondition>
					<Action>- Iterate over all offline defined modules/channels and if the PreCondition matches the following operations are done:
- Get the offline description of object 0xF9FA(+module specific offset) 'Module Manufacturer Software Version' and all entries
 Check:
    (Name)
    BitSize
    DataType
    Rx / Tx mappable
    Default Data
    MinData
    Flags       </Action>
					<PostCondition>Error if
- mandatory object / entry is not defined
- an optional object exists and the entries are invalid
- Object / entry description does not match with the specification</PostCondition>
					<ProposalForSolution>- Define the missing objects
- correct object / entry description</ProposalForSolution>
					<References>
						<Reference Specification="ETG.5003.2011"></Reference>
					</References>
					<Mandatory>true</Mandatory>
				</Description>
				<TestStep Name="InitResult">
					<SetVariable Target="strResult">EmptyString</SetVariable>
				</TestStep>
				<TestStep Name="CheckIfOdAvailable">
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Mailbox</Value1>
							<Value2>false</Value2>
							<SkipCase Id="1">DuT does not support mailbox.</SkipCase>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Mailbox.CoE</Value1>
							<Value2>false</Value2>
							<SkipCase Id="2">DuT does not support CoE.</SkipCase>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep>
					<GetObjectDictionary Target="odDeviceObjectdictionary">
						<DictionaryType>Offline</DictionaryType>
					</GetObjectDictionary>
					<SkipOnFailure Id="3">No offline object dictionary defined.</SkipOnFailure>
				</TestStep>
				<TestStep>
					<GetObjectList Count="u32Tmp" Target="odDeviceObjectdictionaryList" SourceDict="odDeviceObjectdictionary"></GetObjectList>
					<Compare>
						<Equal>
							<Value1>u32Tmp</Value1>
							<Value2>0</Value2>
							<SkipCase Id="4">No offline object dictionary defined.</SkipCase>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="InitAtLeastOneProfileMatch">
					<SetVariable Target="bAtLeastOneModuleMatch">false</SetVariable>
				</TestStep>
				<TestStep Name="GetCurrentProfileList">
					<SizeOf UInt32Var="u32Tmp">arrOfflineProfiles</SizeOf>
					<Compare>
						<Equal>
							<Value1>u32Tmp</Value1>
							<Value2>0</Value2>
							<CallTestFunction Name="GetCurrentProfileList">
								<Parameter>"offline"</Parameter>
								<Parameter>"SafeOP"</Parameter>
								<OutParameter>arrOfflineProfiles</OutParameter>
							</CallTestFunction>
						</Equal>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>u32Tmp</Value1>
							<Value2>0</Value2>
							<WriteLine Id="5" Param0="arrOfflineProfiles" Level="Verbose">Use previously created profile list ({0})</WriteLine>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep>
					<SizeOf UInt32Var="u32Tmp">arrOfflineProfiles</SizeOf>
				</TestStep>
				<TestStep>
					<InitArray TargetArray="arrCurrentProfiles" Length="u32Tmp"></InitArray>
				</TestStep>
				<TestStep>
					<CopyArray>
						<SourceArray>arrOfflineProfiles</SourceArray>
						<DestinationArray>arrCurrentProfiles</DestinationArray>
						<Length>u32Tmp</Length>
					</CopyArray>
				</TestStep>
				<TestStep Name="IsProfileSupported">
					<CallTestFunction Name="DeviceAndModuleProfileDefined">
						<Parameter>arrCurrentProfiles</Parameter>
						<Parameter>5003</Parameter>
						<Parameter>2011</Parameter>
						<OutParameter>bAtLeastOneModuleMatch</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>bAtLeastOneModuleMatch</Value1>
							<Value2>false</Value2>
							<GotoStep>END</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="GetObjectIndexInclOffset">
					<SetVariable Target="u16ObjectIndexInclOffset">#xF9FA</SetVariable>
					<WriteLine Id="6" Param0="u16ObjectIndexInclOffset" Level="Verbose">ObjectIndex '0x{0:X}' (module independent)</WriteLine>
				</TestStep>
				<TestStep Name="LoadDeviceObjectDictionary">
					<Description Id="7" Level="Verbose">Load 'offline' object dictionary for testing.</Description>
					<GetObjectDictionary Target="odDeviceObjectdictionary">
						<DictionaryType>Offline</DictionaryType>
					</GetObjectDictionary>
					<RaiseErrorOnFailure Id="8">VerifyObject : failed to load offline object dictionary.</RaiseErrorOnFailure>
				</TestStep>
				<TestStep Name="SetObjectRequiredLevel">
					<SetVariable Target="bObjectOrEntryRequiredLevel">1</SetVariable>
					<WriteLine Id="9" Param0="u16ObjectIndexInclOffset" Level="Verbose">0x{0:X4} 'Module Manufacturer Software Version' may be available</WriteLine>
				</TestStep>
				<TestStep Name="CheckIfObjectExists">
					<GetObjectDescription SourceDictionary="odDeviceObjectdictionary" Index="u16ObjectIndexInclOffset" SubIndex="-1"></GetObjectDescription>
					<GotoOnSuccess>CallCheckObjectDescription</GotoOnSuccess>
				</TestStep>
				<TestStep Name="HandleNotExistingObject">
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>3</Value2>
							<SetVariable Target="strResult" Param0="u16ObjectIndexInclOffset">The object 0x{0:X4} 'Module Manufacturer Software Version' does not exists.</SetVariable>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>3</Value2>
							<WriteLine Id="10" Param0="u16ObjectIndexInclOffset" Level="Error">The object 0x{0:X4} 'Module Manufacturer Software Version' does not exists.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>2</Value2>
							<WriteLine Id="11" Param0="u16ObjectIndexInclOffset" Level="Warning">The object 0x{0:X4} 'Module Manufacturer Software Version' does not exists.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>1</Value2>
							<WriteLine Id="12" Param0="u16ObjectIndexInclOffset" Level="Output">The object 0x{0:X4} 'Module Manufacturer Software Version' does not exists.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>END</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CallCheckObjectDescription">
					<Description Id="13" Param0="u16ObjectIndexInclOffset" Level="Output">Verify the object description 0x{0:X4} 'Module Manufacturer Software Version'.</Description>
					<CallTestFunction Name="CheckObjectDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"offline"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>"Module Manufacturer Software Version"</Parameter>
						<Parameter>null</Parameter>
						<Parameter>8</Parameter>
						<Parameter>-1</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<GotoStep>END</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="InitEntryBittOffset">
					<SetVariable Target="i32CurrentBitOffset">0</SetVariable>
				</TestStep>
				<TestStep Name="StartSi0">
					<Description Id="14" Level="Output">Start validate SubIndex0</Description>
					<WriteLine Id="15" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : Subindex '0x{0:X}.0'</WriteLine>
				</TestStep>
				<TestStep Name="CallSi0CheckEntryDescription">
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"offline"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>0</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>null</Parameter>
						<Parameter>5</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>null</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>null</Parameter>
						<Parameter>null</Parameter>
						<Parameter>null</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>8</Parameter>
						<Parameter>i32CurrentBitOffset</Parameter>
						<Parameter>true</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="EndSi0">
					<SetVariable Target="i32CurrentBitOffset">16</SetVariable>
				</TestStep>
				<TestStep Name="InitProfileLoopCounter">
					<SetVariable Target="u32ProfileCounter">0</SetVariable>
				</TestStep>
				<TestStep Name="GetProfileArrayLength">
					<SizeOf UInt32Var="u32CurrentProfilesLength">arrCurrentProfiles</SizeOf>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="16" Param0="u32CurrentProfilesLength" Level="Verbose">'{0}' Profile(s) defined offline.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>u32CurrentProfilesLength</Value1>
							<Value2>0</Value2>
							<SkipCase Id="17">Skip case | no profile defined.</SkipCase>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="ProfileLoopStart">
					<GetArrayItem SourceArray="arrCurrentProfiles" Target="strTmpString" Index="u32ProfileCounter"></GetArrayItem>
				</TestStep>
				<TestStep Name="CheckProfileInformationString">
					<Compare>
						<Equal>
							<Value1>strTmpString</Value1>
							<Value2>null</Value2>
							<RaiseError Id="18" Param0="u32ProfileCounter">Profile Info element [{0}] is null.</RaiseError>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>strTmpString</Value1>
							<Value2>EmptyString</Value2>
							<RaiseError Id="19" Param0="u32ProfileCounter">Profile Info element [{0}] is an empty string.</RaiseError>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="GetDeviceProfile">
					<CallTestFunction Name="GetDeviceProfile">
						<Parameter>strTmpString</Parameter>
						<OutParameter>uint16CurDeviceProfile</OutParameter>
					</CallTestFunction>
				</TestStep>
				<TestStep Name="GetModuleProfile">
					<CallTestFunction Name="GetModuleProfile">
						<Parameter>strTmpString</Parameter>
						<OutParameter>uint16CurModuleProfile</OutParameter>
					</CallTestFunction>
				</TestStep>
				<TestStep Name="GetSubModuleProfile">
					<CallTestFunction Name="GetSubModuleProfile">
						<Parameter>strTmpString</Parameter>
						<OutParameter>uint16CurSubModuleProfile</OutParameter>
					</CallTestFunction>
				</TestStep>
				<TestStep Name="DumpProfileInfo">
					<Description Id="20" Param0="uint16CurDeviceProfile" Param1="uint16CurModuleProfile" Param2="uint16CurSubModuleProfile" Param3="u32ProfileCounter" Level="Output">Module[{3}] : DeviceProfile '{0}' ; ModuleProfile '{1}' ; SubModuleProfile '{2}'</Description>
					<Compare>
						<Equal>
							<Value1>bIgnoreProfileID</Value1>
							<Value2>true</Value2>
							<GotoStep>IndicateThatAtleastOneModuleMatch</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CompareDeviceProfile">
					<Compare>
						<NotEqual>
							<Value1>uint16CurDeviceProfile</Value1>
							<Value2>5003</Value2>
							<WriteLine Id="21" Param0="uint16CurDeviceProfile" Level="Output">Skip Profile  (Test Device Profile '5003' != Cur Device Profile '{0}')</WriteLine>
						</NotEqual>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>uint16CurDeviceProfile</Value1>
							<Value2>5003</Value2>
							<GotoStep>ProfileLoopEnd</GotoStep>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep Name="CompareModuleProfile">
					<Compare>
						<NotEqual>
							<Value1>uint16CurModuleProfile</Value1>
							<Value2>2011</Value2>
							<WriteLine Id="22" Param0="uint16CurModuleProfile" Level="Output">Skip Profile  (Test Module Profile '2011' != Cur Module Profile '{0}')</WriteLine>
						</NotEqual>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>uint16CurModuleProfile</Value1>
							<Value2>2011</Value2>
							<GotoStep>ProfileLoopEnd</GotoStep>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep Name="CompareSubModuleProfile">
					<Compare>
						<NotEqual>
							<Value1>uint16CurSubModuleProfile</Value1>
							<Value2>0</Value2>
							<WriteLine Id="23" Param0="uint16CurSubModuleProfile" Level="Output">Skip Profile  (Test SubModule Profile '0' != Cur SubModule Profile '{0}')</WriteLine>
						</NotEqual>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>uint16CurSubModuleProfile</Value1>
							<Value2>0</Value2>
							<GotoStep>ProfileLoopEnd</GotoStep>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep Name="IndicateThatAtleastOneModuleMatch">
					<SetVariable Target="bAtLeastOneModuleMatch">true</SetVariable>
				</TestStep>
				<TestStep Name="StartSi1">
					<Description Id="24" Param0="1 + (u32ProfileCounter * 1)" Level="Output">Start validate SubIndex{0}</Description>
					<SetVariable Target="byteSubIndexInclOffset">1 + (u32ProfileCounter * 1)</SetVariable>
					<WriteLine Id="25" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Param2="byteSubIndexInclOffset" Level="Verbose">Module[{1}] : Subindex '0x{0:X}.{2}'</WriteLine>
				</TestStep>
				<TestStep Name="SetSi1RequiredLevel">
					<SetVariable Target="bObjectOrEntryRequiredLevel">1</SetVariable>
					<WriteLine Id="26" Param0="u16ObjectIndexInclOffset" Param1="byteSubIndexInclOffset" Level="Verbose">0x{0:X4}.{1} may be available</WriteLine>
				</TestStep>
				<TestStep Name="CheckIfSi1Exists">
					<GetObjectDescription SourceDictionary="odDeviceObjectdictionary" Index="u16ObjectIndexInclOffset" SubIndex="byteSubIndexInclOffset">
						<Type>u16DataType</Type>
					</GetObjectDescription>
					<GotoOnFailure>HandleNotExistingSi1</GotoOnFailure>
				</TestStep>
				<TestStep>
					<Compare>
						<NotEqual>
							<Value1>u16DataType</Value1>
							<Value2>0</Value2>
							<GotoStep>CallSi1CheckEntryDescription</GotoStep>
						</NotEqual>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>1</Value2>
							<WriteLine Id="27" Param0="u16ObjectIndexInclOffset" Level="Verbose">The entry 0x{0:X4}.1 is defined as a padding entry.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>EndSi1</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="HandleNotExistingSi1">
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>3</Value2>
							<SetVariable Target="strResult" Param0="u16ObjectIndexInclOffset" Param1="byteSubIndexInclOffset">The entry 0x{0:X4}.{1} does not exists.</SetVariable>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>3</Value2>
							<WriteLine Id="28" Param0="u16ObjectIndexInclOffset" Param1="byteSubIndexInclOffset" Level="Error">The entry 0x{0:X4}.{1} does not exists.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>3</Value2>
							<GotoStep>EndSi1</GotoStep>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="29" Param0="u16ObjectIndexInclOffset" Param1="byteSubIndexInclOffset" Level="Output">The entry 0x{0:X4}.{1} does not exists.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>EndSi1</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CallSi1CheckEntryDescription">
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"offline"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>byteSubIndexInclOffset</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>null</Parameter>
						<Parameter>9</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>null</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>i32CurrentBitOffset</Parameter>
						<Parameter>true</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="EndSi1">
					<SetVariable Target="i32CurrentBitOffset">-1</SetVariable>
				</TestStep>
				<TestStep Name="ProfileLoopEnd">
					<Compare>
						<Equal>
							<Value1>bAtLeastOneModuleMatch</Value1>
							<Value2>false</Value2>
							<GotoStep>HandleAbortTestCaseOnFirstError</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="HandleAbortTestCaseOnFirstError">
					<Compare>
						<Equal>
							<Value1>bAbortTestCaseOnFirstError</Value1>
							<Value2>false</Value2>
							<GotoStep>ProfileLoopIncrement</GotoStep>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>strResult</Value1>
							<Value2>EmptyString</Value2>
							<GotoStep>ProfileLoopIncrement</GotoStep>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="30" Level="Output">Object verification for all following modules abort because an error was already detected for the current module.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>END</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="ProfileLoopIncrement">
					<SetVariable Target="u32ProfileCounter">u32ProfileCounter + 1</SetVariable>
					<Compare>
						<Greater>
							<Value1>u32CurrentProfilesLength</Value1>
							<Value2>u32ProfileCounter</Value2>
							<GotoStep>ProfileLoopStart</GotoStep>
						</Greater>
					</Compare>
				</TestStep>
				<TestStep Name="END">
					<Compare>
						<NotEqual>
							<Value1>bAtLeastOneModuleMatch</Value1>
							<Value2>true</Value2>
							<SkipCase Id="31">SKIP TEST(no module/channel supports the current profile)</SkipCase>
						</NotEqual>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bDEBUG</Value1>
							<Value2>true</Value2>
							<WriteLine Id="32" Param0="strResult" Level="Verbose">DEBUG | Result : '{0}'.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>strResult</Value1>
							<Value2>EmptyString</Value2>
							<ReturnSuccess Id="33">Test succeed</ReturnSuccess>
						</Equal>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>strResult</Value1>
							<Value2>EmptyString</Value2>
							<RaiseError Id="34"></RaiseError>
						</NotEqual>
					</Compare>
				</TestStep>
			</TestCase>
			<TestCase Name="online | 0xF9FA (Module Manufacturer Software Version)" CaseId="22">
				<Description>
					<PreCondition>- The device profile is 5003
- The module profile is 2011
- The submodule profile is 0</PreCondition>
					<Action>- Iterate over all online defined modules/channels and if the PreCondition matches the following operations are done:
- Get the online description of object 0xF9FA(+module specific offset) 'Module Manufacturer Software Version' and all entries
 Check:
    (Name)
    BitSize
    DataType
    Rx / Tx mappable
    Default Data
    MinData
    Flags       </Action>
					<PostCondition>Error if
- mandatory object / entry is not defined
- an optional object exists and the entries are invalid
- Object / entry description does not match with the specification</PostCondition>
					<ProposalForSolution>- Define the missing objects
- correct object / entry description</ProposalForSolution>
					<References>
						<Reference Specification="ETG.5003.2011"></Reference>
					</References>
					<Mandatory>true</Mandatory>
				</Description>
				<TestStep Name="InitResult">
					<SetVariable Target="strResult">EmptyString</SetVariable>
				</TestStep>
				<TestStep Name="CheckIfOdAvailable">
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Mailbox</Value1>
							<Value2>false</Value2>
							<SkipCase Id="1">DuT does not support mailbox.</SkipCase>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Mailbox.CoE</Value1>
							<Value2>false</Value2>
							<SkipCase Id="2">DuT does not support CoE.</SkipCase>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Mailbox.CoE.SdoInfo</Value1>
							<Value2>false</Value2>
							<SkipCase Id="3">DuT does not support SDO Info.</SkipCase>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="InitAtLeastOneProfileMatch">
					<SetVariable Target="bAtLeastOneModuleMatch">false</SetVariable>
				</TestStep>
				<TestStep Name="GetCurrentProfileList">
					<SizeOf UInt32Var="u32Tmp">arrOnlineProfiles</SizeOf>
					<Compare>
						<Equal>
							<Value1>u32Tmp</Value1>
							<Value2>0</Value2>
							<CallTestFunction Name="GetCurrentProfileList">
								<Parameter>"online"</Parameter>
								<Parameter>"SafeOP"</Parameter>
								<OutParameter>arrOnlineProfiles</OutParameter>
							</CallTestFunction>
						</Equal>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>u32Tmp</Value1>
							<Value2>0</Value2>
							<WriteLine Id="4" Param0="arrOnlineProfiles" Level="Verbose">Use previously created profile list ({0})</WriteLine>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep>
					<SizeOf UInt32Var="u32Tmp">arrOnlineProfiles</SizeOf>
				</TestStep>
				<TestStep>
					<InitArray TargetArray="arrCurrentProfiles" Length="u32Tmp"></InitArray>
				</TestStep>
				<TestStep>
					<CopyArray>
						<SourceArray>arrOnlineProfiles</SourceArray>
						<DestinationArray>arrCurrentProfiles</DestinationArray>
						<Length>u32Tmp</Length>
					</CopyArray>
				</TestStep>
				<TestStep Name="IsProfileSupported">
					<CallTestFunction Name="DeviceAndModuleProfileDefined">
						<Parameter>arrCurrentProfiles</Parameter>
						<Parameter>5003</Parameter>
						<Parameter>2011</Parameter>
						<OutParameter>bAtLeastOneModuleMatch</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>bAtLeastOneModuleMatch</Value1>
							<Value2>false</Value2>
							<GotoStep>END</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="GetObjectIndexInclOffset">
					<SetVariable Target="u16ObjectIndexInclOffset">#xF9FA</SetVariable>
					<WriteLine Id="5" Param0="u16ObjectIndexInclOffset" Level="Verbose">ObjectIndex '0x{0:X}' (module independent)</WriteLine>
				</TestStep>
				<TestStep Name="LoadDeviceObjectDictionary">
					<Description Id="6" Level="Verbose">Load 'online' object dictionary for testing.</Description>
					<GetObjectDictionary Target="odDeviceObjectdictionary">
						<DictionaryType>Online</DictionaryType>
					</GetObjectDictionary>
					<RaiseErrorOnFailure Id="7">VerifyObject : failed to load online object dictionary.</RaiseErrorOnFailure>
				</TestStep>
				<TestStep Name="SetObjectRequiredLevel">
					<SetVariable Target="bObjectOrEntryRequiredLevel">1</SetVariable>
					<WriteLine Id="8" Param0="u16ObjectIndexInclOffset" Level="Verbose">0x{0:X4} 'Module Manufacturer Software Version' may be available</WriteLine>
				</TestStep>
				<TestStep Name="CheckIfObjectExists">
					<GetObjectDescription SourceDictionary="odDeviceObjectdictionary" Index="u16ObjectIndexInclOffset" SubIndex="-1"></GetObjectDescription>
					<GotoOnSuccess>CallCheckObjectDescription</GotoOnSuccess>
				</TestStep>
				<TestStep Name="HandleNotExistingObject">
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>3</Value2>
							<SetVariable Target="strResult" Param0="u16ObjectIndexInclOffset">The object 0x{0:X4} 'Module Manufacturer Software Version' does not exists.</SetVariable>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>3</Value2>
							<WriteLine Id="9" Param0="u16ObjectIndexInclOffset" Level="Error">The object 0x{0:X4} 'Module Manufacturer Software Version' does not exists.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>2</Value2>
							<WriteLine Id="10" Param0="u16ObjectIndexInclOffset" Level="Warning">The object 0x{0:X4} 'Module Manufacturer Software Version' does not exists.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>1</Value2>
							<WriteLine Id="11" Param0="u16ObjectIndexInclOffset" Level="Output">The object 0x{0:X4} 'Module Manufacturer Software Version' does not exists.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>END</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CallCheckObjectDescription">
					<Description Id="12" Param0="u16ObjectIndexInclOffset" Level="Output">Verify the object description 0x{0:X4} 'Module Manufacturer Software Version'.</Description>
					<CallTestFunction Name="CheckObjectDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"online"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>"Module Manufacturer Software Version"</Parameter>
						<Parameter>null</Parameter>
						<Parameter>8</Parameter>
						<Parameter>-1</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<GotoStep>END</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="InitEntryBittOffset">
					<SetVariable Target="i32CurrentBitOffset">0</SetVariable>
				</TestStep>
				<TestStep Name="StartSi0">
					<Description Id="13" Level="Output">Start validate SubIndex0</Description>
					<WriteLine Id="14" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : Subindex '0x{0:X}.0'</WriteLine>
				</TestStep>
				<TestStep Name="CallSi0CheckEntryDescription">
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"online"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>0</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>null</Parameter>
						<Parameter>5</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>null</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>null</Parameter>
						<Parameter>null</Parameter>
						<Parameter>null</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>8</Parameter>
						<Parameter>i32CurrentBitOffset</Parameter>
						<Parameter>true</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="EndSi0">
					<SetVariable Target="i32CurrentBitOffset">16</SetVariable>
				</TestStep>
				<TestStep Name="InitProfileLoopCounter">
					<SetVariable Target="u32ProfileCounter">0</SetVariable>
				</TestStep>
				<TestStep Name="GetProfileArrayLength">
					<SizeOf UInt32Var="u32CurrentProfilesLength">arrCurrentProfiles</SizeOf>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="15" Param0="u32CurrentProfilesLength" Level="Verbose">'{0}' Profile(s) defined online.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>u32CurrentProfilesLength</Value1>
							<Value2>0</Value2>
							<SkipCase Id="16">Skip case | no profile defined.</SkipCase>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="ProfileLoopStart">
					<GetArrayItem SourceArray="arrCurrentProfiles" Target="strTmpString" Index="u32ProfileCounter"></GetArrayItem>
				</TestStep>
				<TestStep Name="CheckProfileInformationString">
					<Compare>
						<Equal>
							<Value1>strTmpString</Value1>
							<Value2>null</Value2>
							<RaiseError Id="17" Param0="u32ProfileCounter">Profile Info element [{0}] is null.</RaiseError>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>strTmpString</Value1>
							<Value2>EmptyString</Value2>
							<RaiseError Id="18" Param0="u32ProfileCounter">Profile Info element [{0}] is an empty string.</RaiseError>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="GetDeviceProfile">
					<CallTestFunction Name="GetDeviceProfile">
						<Parameter>strTmpString</Parameter>
						<OutParameter>uint16CurDeviceProfile</OutParameter>
					</CallTestFunction>
				</TestStep>
				<TestStep Name="GetModuleProfile">
					<CallTestFunction Name="GetModuleProfile">
						<Parameter>strTmpString</Parameter>
						<OutParameter>uint16CurModuleProfile</OutParameter>
					</CallTestFunction>
				</TestStep>
				<TestStep Name="GetSubModuleProfile">
					<CallTestFunction Name="GetSubModuleProfile">
						<Parameter>strTmpString</Parameter>
						<OutParameter>uint16CurSubModuleProfile</OutParameter>
					</CallTestFunction>
				</TestStep>
				<TestStep Name="DumpProfileInfo">
					<Description Id="19" Param0="uint16CurDeviceProfile" Param1="uint16CurModuleProfile" Param2="uint16CurSubModuleProfile" Param3="u32ProfileCounter" Level="Output">Module[{3}] : DeviceProfile '{0}' ; ModuleProfile '{1}' ; SubModuleProfile '{2}'</Description>
					<Compare>
						<Equal>
							<Value1>bIgnoreProfileID</Value1>
							<Value2>true</Value2>
							<GotoStep>IndicateThatAtleastOneModuleMatch</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CompareDeviceProfile">
					<Compare>
						<NotEqual>
							<Value1>uint16CurDeviceProfile</Value1>
							<Value2>5003</Value2>
							<WriteLine Id="20" Param0="uint16CurDeviceProfile" Level="Output">Skip Profile  (Test Device Profile '5003' != Cur Device Profile '{0}')</WriteLine>
						</NotEqual>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>uint16CurDeviceProfile</Value1>
							<Value2>5003</Value2>
							<GotoStep>ProfileLoopEnd</GotoStep>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep Name="CompareModuleProfile">
					<Compare>
						<NotEqual>
							<Value1>uint16CurModuleProfile</Value1>
							<Value2>2011</Value2>
							<WriteLine Id="21" Param0="uint16CurModuleProfile" Level="Output">Skip Profile  (Test Module Profile '2011' != Cur Module Profile '{0}')</WriteLine>
						</NotEqual>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>uint16CurModuleProfile</Value1>
							<Value2>2011</Value2>
							<GotoStep>ProfileLoopEnd</GotoStep>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep Name="CompareSubModuleProfile">
					<Compare>
						<NotEqual>
							<Value1>uint16CurSubModuleProfile</Value1>
							<Value2>0</Value2>
							<WriteLine Id="22" Param0="uint16CurSubModuleProfile" Level="Output">Skip Profile  (Test SubModule Profile '0' != Cur SubModule Profile '{0}')</WriteLine>
						</NotEqual>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>uint16CurSubModuleProfile</Value1>
							<Value2>0</Value2>
							<GotoStep>ProfileLoopEnd</GotoStep>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep Name="IndicateThatAtleastOneModuleMatch">
					<SetVariable Target="bAtLeastOneModuleMatch">true</SetVariable>
				</TestStep>
				<TestStep Name="StartSi1">
					<Description Id="23" Param0="1 + (u32ProfileCounter * 1)" Level="Output">Start validate SubIndex{0}</Description>
					<SetVariable Target="byteSubIndexInclOffset">1 + (u32ProfileCounter * 1)</SetVariable>
					<WriteLine Id="24" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Param2="byteSubIndexInclOffset" Level="Verbose">Module[{1}] : Subindex '0x{0:X}.{2}'</WriteLine>
				</TestStep>
				<TestStep Name="SetSi1RequiredLevel">
					<SetVariable Target="bObjectOrEntryRequiredLevel">1</SetVariable>
					<WriteLine Id="25" Param0="u16ObjectIndexInclOffset" Param1="byteSubIndexInclOffset" Level="Verbose">0x{0:X4}.{1} may be available</WriteLine>
				</TestStep>
				<TestStep Name="CheckIfSi1Exists">
					<GetObjectDescription SourceDictionary="odDeviceObjectdictionary" Index="u16ObjectIndexInclOffset" SubIndex="byteSubIndexInclOffset">
						<Type>u16DataType</Type>
					</GetObjectDescription>
					<GotoOnFailure>HandleNotExistingSi1</GotoOnFailure>
				</TestStep>
				<TestStep>
					<Compare>
						<NotEqual>
							<Value1>u16DataType</Value1>
							<Value2>0</Value2>
							<GotoStep>CallSi1CheckEntryDescription</GotoStep>
						</NotEqual>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>1</Value2>
							<WriteLine Id="26" Param0="u16ObjectIndexInclOffset" Level="Verbose">The entry 0x{0:X4}.1 is defined as a padding entry.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>EndSi1</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="HandleNotExistingSi1">
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>3</Value2>
							<SetVariable Target="strResult" Param0="u16ObjectIndexInclOffset" Param1="byteSubIndexInclOffset">The entry 0x{0:X4}.{1} does not exists.</SetVariable>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>3</Value2>
							<WriteLine Id="27" Param0="u16ObjectIndexInclOffset" Param1="byteSubIndexInclOffset" Level="Error">The entry 0x{0:X4}.{1} does not exists.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>3</Value2>
							<GotoStep>EndSi1</GotoStep>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="28" Param0="u16ObjectIndexInclOffset" Param1="byteSubIndexInclOffset" Level="Output">The entry 0x{0:X4}.{1} does not exists.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>EndSi1</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CallSi1CheckEntryDescription">
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"online"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>byteSubIndexInclOffset</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>null</Parameter>
						<Parameter>9</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>null</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>i32CurrentBitOffset</Parameter>
						<Parameter>true</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="EndSi1">
					<SetVariable Target="i32CurrentBitOffset">-1</SetVariable>
				</TestStep>
				<TestStep Name="ProfileLoopEnd">
					<Compare>
						<Equal>
							<Value1>bAtLeastOneModuleMatch</Value1>
							<Value2>false</Value2>
							<GotoStep>HandleAbortTestCaseOnFirstError</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="HandleAbortTestCaseOnFirstError">
					<Compare>
						<Equal>
							<Value1>bAbortTestCaseOnFirstError</Value1>
							<Value2>false</Value2>
							<GotoStep>ProfileLoopIncrement</GotoStep>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>strResult</Value1>
							<Value2>EmptyString</Value2>
							<GotoStep>ProfileLoopIncrement</GotoStep>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="29" Level="Output">Object verification for all following modules abort because an error was already detected for the current module.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>END</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="ProfileLoopIncrement">
					<SetVariable Target="u32ProfileCounter">u32ProfileCounter + 1</SetVariable>
					<Compare>
						<Greater>
							<Value1>u32CurrentProfilesLength</Value1>
							<Value2>u32ProfileCounter</Value2>
							<GotoStep>ProfileLoopStart</GotoStep>
						</Greater>
					</Compare>
				</TestStep>
				<TestStep Name="END">
					<Compare>
						<NotEqual>
							<Value1>bAtLeastOneModuleMatch</Value1>
							<Value2>true</Value2>
							<SkipCase Id="30">SKIP TEST(no module/channel supports the current profile)</SkipCase>
						</NotEqual>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bDEBUG</Value1>
							<Value2>true</Value2>
							<WriteLine Id="31" Param0="strResult" Level="Verbose">DEBUG | Result : '{0}'.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>strResult</Value1>
							<Value2>EmptyString</Value2>
							<ReturnSuccess Id="32">Test succeed</ReturnSuccess>
						</Equal>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>strResult</Value1>
							<Value2>EmptyString</Value2>
							<RaiseError Id="33"></RaiseError>
						</NotEqual>
					</Compare>
				</TestStep>
			</TestCase>
			<TestCase Name="offline | 0xF9FB (Module Manufacturer Serial Number)" CaseId="23">
				<Description>
					<PreCondition>- The device profile is 5003
- The module profile is 2011
- The submodule profile is 0</PreCondition>
					<Action>- Iterate over all offline defined modules/channels and if the PreCondition matches the following operations are done:
- Get the offline description of object 0xF9FB(+module specific offset) 'Module Manufacturer Serial Number' and all entries
 Check:
    (Name)
    BitSize
    DataType
    Rx / Tx mappable
    Default Data
    MinData
    Flags       </Action>
					<PostCondition>Error if
- mandatory object / entry is not defined
- an optional object exists and the entries are invalid
- Object / entry description does not match with the specification</PostCondition>
					<ProposalForSolution>- Define the missing objects
- correct object / entry description</ProposalForSolution>
					<References>
						<Reference Specification="ETG.5003.2011"></Reference>
					</References>
					<Mandatory>true</Mandatory>
				</Description>
				<TestStep Name="InitResult">
					<SetVariable Target="strResult">EmptyString</SetVariable>
				</TestStep>
				<TestStep Name="CheckIfOdAvailable">
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Mailbox</Value1>
							<Value2>false</Value2>
							<SkipCase Id="1">DuT does not support mailbox.</SkipCase>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Mailbox.CoE</Value1>
							<Value2>false</Value2>
							<SkipCase Id="2">DuT does not support CoE.</SkipCase>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep>
					<GetObjectDictionary Target="odDeviceObjectdictionary">
						<DictionaryType>Offline</DictionaryType>
					</GetObjectDictionary>
					<SkipOnFailure Id="3">No offline object dictionary defined.</SkipOnFailure>
				</TestStep>
				<TestStep>
					<GetObjectList Count="u32Tmp" Target="odDeviceObjectdictionaryList" SourceDict="odDeviceObjectdictionary"></GetObjectList>
					<Compare>
						<Equal>
							<Value1>u32Tmp</Value1>
							<Value2>0</Value2>
							<SkipCase Id="4">No offline object dictionary defined.</SkipCase>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="InitAtLeastOneProfileMatch">
					<SetVariable Target="bAtLeastOneModuleMatch">false</SetVariable>
				</TestStep>
				<TestStep Name="GetCurrentProfileList">
					<SizeOf UInt32Var="u32Tmp">arrOfflineProfiles</SizeOf>
					<Compare>
						<Equal>
							<Value1>u32Tmp</Value1>
							<Value2>0</Value2>
							<CallTestFunction Name="GetCurrentProfileList">
								<Parameter>"offline"</Parameter>
								<Parameter>"SafeOP"</Parameter>
								<OutParameter>arrOfflineProfiles</OutParameter>
							</CallTestFunction>
						</Equal>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>u32Tmp</Value1>
							<Value2>0</Value2>
							<WriteLine Id="5" Param0="arrOfflineProfiles" Level="Verbose">Use previously created profile list ({0})</WriteLine>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep>
					<SizeOf UInt32Var="u32Tmp">arrOfflineProfiles</SizeOf>
				</TestStep>
				<TestStep>
					<InitArray TargetArray="arrCurrentProfiles" Length="u32Tmp"></InitArray>
				</TestStep>
				<TestStep>
					<CopyArray>
						<SourceArray>arrOfflineProfiles</SourceArray>
						<DestinationArray>arrCurrentProfiles</DestinationArray>
						<Length>u32Tmp</Length>
					</CopyArray>
				</TestStep>
				<TestStep Name="IsProfileSupported">
					<CallTestFunction Name="DeviceAndModuleProfileDefined">
						<Parameter>arrCurrentProfiles</Parameter>
						<Parameter>5003</Parameter>
						<Parameter>2011</Parameter>
						<OutParameter>bAtLeastOneModuleMatch</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>bAtLeastOneModuleMatch</Value1>
							<Value2>false</Value2>
							<GotoStep>END</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="GetObjectIndexInclOffset">
					<SetVariable Target="u16ObjectIndexInclOffset">#xF9FB</SetVariable>
					<WriteLine Id="6" Param0="u16ObjectIndexInclOffset" Level="Verbose">ObjectIndex '0x{0:X}' (module independent)</WriteLine>
				</TestStep>
				<TestStep Name="LoadDeviceObjectDictionary">
					<Description Id="7" Level="Verbose">Load 'offline' object dictionary for testing.</Description>
					<GetObjectDictionary Target="odDeviceObjectdictionary">
						<DictionaryType>Offline</DictionaryType>
					</GetObjectDictionary>
					<RaiseErrorOnFailure Id="8">VerifyObject : failed to load offline object dictionary.</RaiseErrorOnFailure>
				</TestStep>
				<TestStep Name="SetObjectRequiredLevel">
					<SetVariable Target="bObjectOrEntryRequiredLevel">1</SetVariable>
					<WriteLine Id="9" Param0="u16ObjectIndexInclOffset" Level="Verbose">0x{0:X4} 'Module Manufacturer Serial Number' may be available</WriteLine>
				</TestStep>
				<TestStep Name="CheckIfObjectExists">
					<GetObjectDescription SourceDictionary="odDeviceObjectdictionary" Index="u16ObjectIndexInclOffset" SubIndex="-1"></GetObjectDescription>
					<GotoOnSuccess>CallCheckObjectDescription</GotoOnSuccess>
				</TestStep>
				<TestStep Name="HandleNotExistingObject">
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>3</Value2>
							<SetVariable Target="strResult" Param0="u16ObjectIndexInclOffset">The object 0x{0:X4} 'Module Manufacturer Serial Number' does not exists.</SetVariable>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>3</Value2>
							<WriteLine Id="10" Param0="u16ObjectIndexInclOffset" Level="Error">The object 0x{0:X4} 'Module Manufacturer Serial Number' does not exists.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>2</Value2>
							<WriteLine Id="11" Param0="u16ObjectIndexInclOffset" Level="Warning">The object 0x{0:X4} 'Module Manufacturer Serial Number' does not exists.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>1</Value2>
							<WriteLine Id="12" Param0="u16ObjectIndexInclOffset" Level="Output">The object 0x{0:X4} 'Module Manufacturer Serial Number' does not exists.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>END</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CallCheckObjectDescription">
					<Description Id="13" Param0="u16ObjectIndexInclOffset" Level="Output">Verify the object description 0x{0:X4} 'Module Manufacturer Serial Number'.</Description>
					<CallTestFunction Name="CheckObjectDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"offline"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>"Module Manufacturer Serial Number"</Parameter>
						<Parameter>null</Parameter>
						<Parameter>8</Parameter>
						<Parameter>-1</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<GotoStep>END</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="InitEntryBittOffset">
					<SetVariable Target="i32CurrentBitOffset">0</SetVariable>
				</TestStep>
				<TestStep Name="StartSi0">
					<Description Id="14" Level="Output">Start validate SubIndex0</Description>
					<WriteLine Id="15" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : Subindex '0x{0:X}.0'</WriteLine>
				</TestStep>
				<TestStep Name="CallSi0CheckEntryDescription">
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"offline"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>0</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>null</Parameter>
						<Parameter>5</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>null</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>null</Parameter>
						<Parameter>null</Parameter>
						<Parameter>null</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>8</Parameter>
						<Parameter>i32CurrentBitOffset</Parameter>
						<Parameter>true</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="EndSi0">
					<SetVariable Target="i32CurrentBitOffset">16</SetVariable>
				</TestStep>
				<TestStep Name="InitProfileLoopCounter">
					<SetVariable Target="u32ProfileCounter">0</SetVariable>
				</TestStep>
				<TestStep Name="GetProfileArrayLength">
					<SizeOf UInt32Var="u32CurrentProfilesLength">arrCurrentProfiles</SizeOf>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="16" Param0="u32CurrentProfilesLength" Level="Verbose">'{0}' Profile(s) defined offline.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>u32CurrentProfilesLength</Value1>
							<Value2>0</Value2>
							<SkipCase Id="17">Skip case | no profile defined.</SkipCase>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="ProfileLoopStart">
					<GetArrayItem SourceArray="arrCurrentProfiles" Target="strTmpString" Index="u32ProfileCounter"></GetArrayItem>
				</TestStep>
				<TestStep Name="CheckProfileInformationString">
					<Compare>
						<Equal>
							<Value1>strTmpString</Value1>
							<Value2>null</Value2>
							<RaiseError Id="18" Param0="u32ProfileCounter">Profile Info element [{0}] is null.</RaiseError>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>strTmpString</Value1>
							<Value2>EmptyString</Value2>
							<RaiseError Id="19" Param0="u32ProfileCounter">Profile Info element [{0}] is an empty string.</RaiseError>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="GetDeviceProfile">
					<CallTestFunction Name="GetDeviceProfile">
						<Parameter>strTmpString</Parameter>
						<OutParameter>uint16CurDeviceProfile</OutParameter>
					</CallTestFunction>
				</TestStep>
				<TestStep Name="GetModuleProfile">
					<CallTestFunction Name="GetModuleProfile">
						<Parameter>strTmpString</Parameter>
						<OutParameter>uint16CurModuleProfile</OutParameter>
					</CallTestFunction>
				</TestStep>
				<TestStep Name="GetSubModuleProfile">
					<CallTestFunction Name="GetSubModuleProfile">
						<Parameter>strTmpString</Parameter>
						<OutParameter>uint16CurSubModuleProfile</OutParameter>
					</CallTestFunction>
				</TestStep>
				<TestStep Name="DumpProfileInfo">
					<Description Id="20" Param0="uint16CurDeviceProfile" Param1="uint16CurModuleProfile" Param2="uint16CurSubModuleProfile" Param3="u32ProfileCounter" Level="Output">Module[{3}] : DeviceProfile '{0}' ; ModuleProfile '{1}' ; SubModuleProfile '{2}'</Description>
					<Compare>
						<Equal>
							<Value1>bIgnoreProfileID</Value1>
							<Value2>true</Value2>
							<GotoStep>IndicateThatAtleastOneModuleMatch</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CompareDeviceProfile">
					<Compare>
						<NotEqual>
							<Value1>uint16CurDeviceProfile</Value1>
							<Value2>5003</Value2>
							<WriteLine Id="21" Param0="uint16CurDeviceProfile" Level="Output">Skip Profile  (Test Device Profile '5003' != Cur Device Profile '{0}')</WriteLine>
						</NotEqual>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>uint16CurDeviceProfile</Value1>
							<Value2>5003</Value2>
							<GotoStep>ProfileLoopEnd</GotoStep>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep Name="CompareModuleProfile">
					<Compare>
						<NotEqual>
							<Value1>uint16CurModuleProfile</Value1>
							<Value2>2011</Value2>
							<WriteLine Id="22" Param0="uint16CurModuleProfile" Level="Output">Skip Profile  (Test Module Profile '2011' != Cur Module Profile '{0}')</WriteLine>
						</NotEqual>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>uint16CurModuleProfile</Value1>
							<Value2>2011</Value2>
							<GotoStep>ProfileLoopEnd</GotoStep>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep Name="CompareSubModuleProfile">
					<Compare>
						<NotEqual>
							<Value1>uint16CurSubModuleProfile</Value1>
							<Value2>0</Value2>
							<WriteLine Id="23" Param0="uint16CurSubModuleProfile" Level="Output">Skip Profile  (Test SubModule Profile '0' != Cur SubModule Profile '{0}')</WriteLine>
						</NotEqual>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>uint16CurSubModuleProfile</Value1>
							<Value2>0</Value2>
							<GotoStep>ProfileLoopEnd</GotoStep>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep Name="IndicateThatAtleastOneModuleMatch">
					<SetVariable Target="bAtLeastOneModuleMatch">true</SetVariable>
				</TestStep>
				<TestStep Name="StartSi1">
					<Description Id="24" Param0="1 + (u32ProfileCounter * 1)" Level="Output">Start validate SubIndex{0}</Description>
					<SetVariable Target="byteSubIndexInclOffset">1 + (u32ProfileCounter * 1)</SetVariable>
					<WriteLine Id="25" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Param2="byteSubIndexInclOffset" Level="Verbose">Module[{1}] : Subindex '0x{0:X}.{2}'</WriteLine>
				</TestStep>
				<TestStep Name="SetSi1RequiredLevel">
					<SetVariable Target="bObjectOrEntryRequiredLevel">1</SetVariable>
					<WriteLine Id="26" Param0="u16ObjectIndexInclOffset" Param1="byteSubIndexInclOffset" Level="Verbose">0x{0:X4}.{1} may be available</WriteLine>
				</TestStep>
				<TestStep Name="CheckIfSi1Exists">
					<GetObjectDescription SourceDictionary="odDeviceObjectdictionary" Index="u16ObjectIndexInclOffset" SubIndex="byteSubIndexInclOffset">
						<Type>u16DataType</Type>
					</GetObjectDescription>
					<GotoOnFailure>HandleNotExistingSi1</GotoOnFailure>
				</TestStep>
				<TestStep>
					<Compare>
						<NotEqual>
							<Value1>u16DataType</Value1>
							<Value2>0</Value2>
							<GotoStep>CallSi1CheckEntryDescription</GotoStep>
						</NotEqual>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>1</Value2>
							<WriteLine Id="27" Param0="u16ObjectIndexInclOffset" Level="Verbose">The entry 0x{0:X4}.1 is defined as a padding entry.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>EndSi1</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="HandleNotExistingSi1">
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>3</Value2>
							<SetVariable Target="strResult" Param0="u16ObjectIndexInclOffset" Param1="byteSubIndexInclOffset">The entry 0x{0:X4}.{1} does not exists.</SetVariable>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>3</Value2>
							<WriteLine Id="28" Param0="u16ObjectIndexInclOffset" Param1="byteSubIndexInclOffset" Level="Error">The entry 0x{0:X4}.{1} does not exists.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>3</Value2>
							<GotoStep>EndSi1</GotoStep>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="29" Param0="u16ObjectIndexInclOffset" Param1="byteSubIndexInclOffset" Level="Output">The entry 0x{0:X4}.{1} does not exists.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>EndSi1</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CallSi1CheckEntryDescription">
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"offline"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>byteSubIndexInclOffset</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>null</Parameter>
						<Parameter>9</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>null</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>i32CurrentBitOffset</Parameter>
						<Parameter>true</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="EndSi1">
					<SetVariable Target="i32CurrentBitOffset">-1</SetVariable>
				</TestStep>
				<TestStep Name="ProfileLoopEnd">
					<Compare>
						<Equal>
							<Value1>bAtLeastOneModuleMatch</Value1>
							<Value2>false</Value2>
							<GotoStep>HandleAbortTestCaseOnFirstError</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="HandleAbortTestCaseOnFirstError">
					<Compare>
						<Equal>
							<Value1>bAbortTestCaseOnFirstError</Value1>
							<Value2>false</Value2>
							<GotoStep>ProfileLoopIncrement</GotoStep>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>strResult</Value1>
							<Value2>EmptyString</Value2>
							<GotoStep>ProfileLoopIncrement</GotoStep>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="30" Level="Output">Object verification for all following modules abort because an error was already detected for the current module.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>END</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="ProfileLoopIncrement">
					<SetVariable Target="u32ProfileCounter">u32ProfileCounter + 1</SetVariable>
					<Compare>
						<Greater>
							<Value1>u32CurrentProfilesLength</Value1>
							<Value2>u32ProfileCounter</Value2>
							<GotoStep>ProfileLoopStart</GotoStep>
						</Greater>
					</Compare>
				</TestStep>
				<TestStep Name="END">
					<Compare>
						<NotEqual>
							<Value1>bAtLeastOneModuleMatch</Value1>
							<Value2>true</Value2>
							<SkipCase Id="31">SKIP TEST(no module/channel supports the current profile)</SkipCase>
						</NotEqual>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bDEBUG</Value1>
							<Value2>true</Value2>
							<WriteLine Id="32" Param0="strResult" Level="Verbose">DEBUG | Result : '{0}'.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>strResult</Value1>
							<Value2>EmptyString</Value2>
							<ReturnSuccess Id="33">Test succeed</ReturnSuccess>
						</Equal>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>strResult</Value1>
							<Value2>EmptyString</Value2>
							<RaiseError Id="34"></RaiseError>
						</NotEqual>
					</Compare>
				</TestStep>
			</TestCase>
			<TestCase Name="online | 0xF9FB (Module Manufacturer Serial Number)" CaseId="24">
				<Description>
					<PreCondition>- The device profile is 5003
- The module profile is 2011
- The submodule profile is 0</PreCondition>
					<Action>- Iterate over all online defined modules/channels and if the PreCondition matches the following operations are done:
- Get the online description of object 0xF9FB(+module specific offset) 'Module Manufacturer Serial Number' and all entries
 Check:
    (Name)
    BitSize
    DataType
    Rx / Tx mappable
    Default Data
    MinData
    Flags       </Action>
					<PostCondition>Error if
- mandatory object / entry is not defined
- an optional object exists and the entries are invalid
- Object / entry description does not match with the specification</PostCondition>
					<ProposalForSolution>- Define the missing objects
- correct object / entry description</ProposalForSolution>
					<References>
						<Reference Specification="ETG.5003.2011"></Reference>
					</References>
					<Mandatory>true</Mandatory>
				</Description>
				<TestStep Name="InitResult">
					<SetVariable Target="strResult">EmptyString</SetVariable>
				</TestStep>
				<TestStep Name="CheckIfOdAvailable">
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Mailbox</Value1>
							<Value2>false</Value2>
							<SkipCase Id="1">DuT does not support mailbox.</SkipCase>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Mailbox.CoE</Value1>
							<Value2>false</Value2>
							<SkipCase Id="2">DuT does not support CoE.</SkipCase>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Mailbox.CoE.SdoInfo</Value1>
							<Value2>false</Value2>
							<SkipCase Id="3">DuT does not support SDO Info.</SkipCase>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="InitAtLeastOneProfileMatch">
					<SetVariable Target="bAtLeastOneModuleMatch">false</SetVariable>
				</TestStep>
				<TestStep Name="GetCurrentProfileList">
					<SizeOf UInt32Var="u32Tmp">arrOnlineProfiles</SizeOf>
					<Compare>
						<Equal>
							<Value1>u32Tmp</Value1>
							<Value2>0</Value2>
							<CallTestFunction Name="GetCurrentProfileList">
								<Parameter>"online"</Parameter>
								<Parameter>"SafeOP"</Parameter>
								<OutParameter>arrOnlineProfiles</OutParameter>
							</CallTestFunction>
						</Equal>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>u32Tmp</Value1>
							<Value2>0</Value2>
							<WriteLine Id="4" Param0="arrOnlineProfiles" Level="Verbose">Use previously created profile list ({0})</WriteLine>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep>
					<SizeOf UInt32Var="u32Tmp">arrOnlineProfiles</SizeOf>
				</TestStep>
				<TestStep>
					<InitArray TargetArray="arrCurrentProfiles" Length="u32Tmp"></InitArray>
				</TestStep>
				<TestStep>
					<CopyArray>
						<SourceArray>arrOnlineProfiles</SourceArray>
						<DestinationArray>arrCurrentProfiles</DestinationArray>
						<Length>u32Tmp</Length>
					</CopyArray>
				</TestStep>
				<TestStep Name="IsProfileSupported">
					<CallTestFunction Name="DeviceAndModuleProfileDefined">
						<Parameter>arrCurrentProfiles</Parameter>
						<Parameter>5003</Parameter>
						<Parameter>2011</Parameter>
						<OutParameter>bAtLeastOneModuleMatch</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>bAtLeastOneModuleMatch</Value1>
							<Value2>false</Value2>
							<GotoStep>END</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="GetObjectIndexInclOffset">
					<SetVariable Target="u16ObjectIndexInclOffset">#xF9FB</SetVariable>
					<WriteLine Id="5" Param0="u16ObjectIndexInclOffset" Level="Verbose">ObjectIndex '0x{0:X}' (module independent)</WriteLine>
				</TestStep>
				<TestStep Name="LoadDeviceObjectDictionary">
					<Description Id="6" Level="Verbose">Load 'online' object dictionary for testing.</Description>
					<GetObjectDictionary Target="odDeviceObjectdictionary">
						<DictionaryType>Online</DictionaryType>
					</GetObjectDictionary>
					<RaiseErrorOnFailure Id="7">VerifyObject : failed to load online object dictionary.</RaiseErrorOnFailure>
				</TestStep>
				<TestStep Name="SetObjectRequiredLevel">
					<SetVariable Target="bObjectOrEntryRequiredLevel">1</SetVariable>
					<WriteLine Id="8" Param0="u16ObjectIndexInclOffset" Level="Verbose">0x{0:X4} 'Module Manufacturer Serial Number' may be available</WriteLine>
				</TestStep>
				<TestStep Name="CheckIfObjectExists">
					<GetObjectDescription SourceDictionary="odDeviceObjectdictionary" Index="u16ObjectIndexInclOffset" SubIndex="-1"></GetObjectDescription>
					<GotoOnSuccess>CallCheckObjectDescription</GotoOnSuccess>
				</TestStep>
				<TestStep Name="HandleNotExistingObject">
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>3</Value2>
							<SetVariable Target="strResult" Param0="u16ObjectIndexInclOffset">The object 0x{0:X4} 'Module Manufacturer Serial Number' does not exists.</SetVariable>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>3</Value2>
							<WriteLine Id="9" Param0="u16ObjectIndexInclOffset" Level="Error">The object 0x{0:X4} 'Module Manufacturer Serial Number' does not exists.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>2</Value2>
							<WriteLine Id="10" Param0="u16ObjectIndexInclOffset" Level="Warning">The object 0x{0:X4} 'Module Manufacturer Serial Number' does not exists.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>1</Value2>
							<WriteLine Id="11" Param0="u16ObjectIndexInclOffset" Level="Output">The object 0x{0:X4} 'Module Manufacturer Serial Number' does not exists.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>END</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CallCheckObjectDescription">
					<Description Id="12" Param0="u16ObjectIndexInclOffset" Level="Output">Verify the object description 0x{0:X4} 'Module Manufacturer Serial Number'.</Description>
					<CallTestFunction Name="CheckObjectDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"online"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>"Module Manufacturer Serial Number"</Parameter>
						<Parameter>null</Parameter>
						<Parameter>8</Parameter>
						<Parameter>-1</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<GotoStep>END</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="InitEntryBittOffset">
					<SetVariable Target="i32CurrentBitOffset">0</SetVariable>
				</TestStep>
				<TestStep Name="StartSi0">
					<Description Id="13" Level="Output">Start validate SubIndex0</Description>
					<WriteLine Id="14" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : Subindex '0x{0:X}.0'</WriteLine>
				</TestStep>
				<TestStep Name="CallSi0CheckEntryDescription">
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"online"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>0</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>null</Parameter>
						<Parameter>5</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>null</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>null</Parameter>
						<Parameter>null</Parameter>
						<Parameter>null</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>8</Parameter>
						<Parameter>i32CurrentBitOffset</Parameter>
						<Parameter>true</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="EndSi0">
					<SetVariable Target="i32CurrentBitOffset">16</SetVariable>
				</TestStep>
				<TestStep Name="InitProfileLoopCounter">
					<SetVariable Target="u32ProfileCounter">0</SetVariable>
				</TestStep>
				<TestStep Name="GetProfileArrayLength">
					<SizeOf UInt32Var="u32CurrentProfilesLength">arrCurrentProfiles</SizeOf>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="15" Param0="u32CurrentProfilesLength" Level="Verbose">'{0}' Profile(s) defined online.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>u32CurrentProfilesLength</Value1>
							<Value2>0</Value2>
							<SkipCase Id="16">Skip case | no profile defined.</SkipCase>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="ProfileLoopStart">
					<GetArrayItem SourceArray="arrCurrentProfiles" Target="strTmpString" Index="u32ProfileCounter"></GetArrayItem>
				</TestStep>
				<TestStep Name="CheckProfileInformationString">
					<Compare>
						<Equal>
							<Value1>strTmpString</Value1>
							<Value2>null</Value2>
							<RaiseError Id="17" Param0="u32ProfileCounter">Profile Info element [{0}] is null.</RaiseError>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>strTmpString</Value1>
							<Value2>EmptyString</Value2>
							<RaiseError Id="18" Param0="u32ProfileCounter">Profile Info element [{0}] is an empty string.</RaiseError>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="GetDeviceProfile">
					<CallTestFunction Name="GetDeviceProfile">
						<Parameter>strTmpString</Parameter>
						<OutParameter>uint16CurDeviceProfile</OutParameter>
					</CallTestFunction>
				</TestStep>
				<TestStep Name="GetModuleProfile">
					<CallTestFunction Name="GetModuleProfile">
						<Parameter>strTmpString</Parameter>
						<OutParameter>uint16CurModuleProfile</OutParameter>
					</CallTestFunction>
				</TestStep>
				<TestStep Name="GetSubModuleProfile">
					<CallTestFunction Name="GetSubModuleProfile">
						<Parameter>strTmpString</Parameter>
						<OutParameter>uint16CurSubModuleProfile</OutParameter>
					</CallTestFunction>
				</TestStep>
				<TestStep Name="DumpProfileInfo">
					<Description Id="19" Param0="uint16CurDeviceProfile" Param1="uint16CurModuleProfile" Param2="uint16CurSubModuleProfile" Param3="u32ProfileCounter" Level="Output">Module[{3}] : DeviceProfile '{0}' ; ModuleProfile '{1}' ; SubModuleProfile '{2}'</Description>
					<Compare>
						<Equal>
							<Value1>bIgnoreProfileID</Value1>
							<Value2>true</Value2>
							<GotoStep>IndicateThatAtleastOneModuleMatch</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CompareDeviceProfile">
					<Compare>
						<NotEqual>
							<Value1>uint16CurDeviceProfile</Value1>
							<Value2>5003</Value2>
							<WriteLine Id="20" Param0="uint16CurDeviceProfile" Level="Output">Skip Profile  (Test Device Profile '5003' != Cur Device Profile '{0}')</WriteLine>
						</NotEqual>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>uint16CurDeviceProfile</Value1>
							<Value2>5003</Value2>
							<GotoStep>ProfileLoopEnd</GotoStep>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep Name="CompareModuleProfile">
					<Compare>
						<NotEqual>
							<Value1>uint16CurModuleProfile</Value1>
							<Value2>2011</Value2>
							<WriteLine Id="21" Param0="uint16CurModuleProfile" Level="Output">Skip Profile  (Test Module Profile '2011' != Cur Module Profile '{0}')</WriteLine>
						</NotEqual>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>uint16CurModuleProfile</Value1>
							<Value2>2011</Value2>
							<GotoStep>ProfileLoopEnd</GotoStep>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep Name="CompareSubModuleProfile">
					<Compare>
						<NotEqual>
							<Value1>uint16CurSubModuleProfile</Value1>
							<Value2>0</Value2>
							<WriteLine Id="22" Param0="uint16CurSubModuleProfile" Level="Output">Skip Profile  (Test SubModule Profile '0' != Cur SubModule Profile '{0}')</WriteLine>
						</NotEqual>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>uint16CurSubModuleProfile</Value1>
							<Value2>0</Value2>
							<GotoStep>ProfileLoopEnd</GotoStep>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep Name="IndicateThatAtleastOneModuleMatch">
					<SetVariable Target="bAtLeastOneModuleMatch">true</SetVariable>
				</TestStep>
				<TestStep Name="StartSi1">
					<Description Id="23" Param0="1 + (u32ProfileCounter * 1)" Level="Output">Start validate SubIndex{0}</Description>
					<SetVariable Target="byteSubIndexInclOffset">1 + (u32ProfileCounter * 1)</SetVariable>
					<WriteLine Id="24" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Param2="byteSubIndexInclOffset" Level="Verbose">Module[{1}] : Subindex '0x{0:X}.{2}'</WriteLine>
				</TestStep>
				<TestStep Name="SetSi1RequiredLevel">
					<SetVariable Target="bObjectOrEntryRequiredLevel">1</SetVariable>
					<WriteLine Id="25" Param0="u16ObjectIndexInclOffset" Param1="byteSubIndexInclOffset" Level="Verbose">0x{0:X4}.{1} may be available</WriteLine>
				</TestStep>
				<TestStep Name="CheckIfSi1Exists">
					<GetObjectDescription SourceDictionary="odDeviceObjectdictionary" Index="u16ObjectIndexInclOffset" SubIndex="byteSubIndexInclOffset">
						<Type>u16DataType</Type>
					</GetObjectDescription>
					<GotoOnFailure>HandleNotExistingSi1</GotoOnFailure>
				</TestStep>
				<TestStep>
					<Compare>
						<NotEqual>
							<Value1>u16DataType</Value1>
							<Value2>0</Value2>
							<GotoStep>CallSi1CheckEntryDescription</GotoStep>
						</NotEqual>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>1</Value2>
							<WriteLine Id="26" Param0="u16ObjectIndexInclOffset" Level="Verbose">The entry 0x{0:X4}.1 is defined as a padding entry.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>EndSi1</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="HandleNotExistingSi1">
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>3</Value2>
							<SetVariable Target="strResult" Param0="u16ObjectIndexInclOffset" Param1="byteSubIndexInclOffset">The entry 0x{0:X4}.{1} does not exists.</SetVariable>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>3</Value2>
							<WriteLine Id="27" Param0="u16ObjectIndexInclOffset" Param1="byteSubIndexInclOffset" Level="Error">The entry 0x{0:X4}.{1} does not exists.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bObjectOrEntryRequiredLevel</Value1>
							<Value2>3</Value2>
							<GotoStep>EndSi1</GotoStep>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="28" Param0="u16ObjectIndexInclOffset" Param1="byteSubIndexInclOffset" Level="Output">The entry 0x{0:X4}.{1} does not exists.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>EndSi1</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CallSi1CheckEntryDescription">
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"online"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>byteSubIndexInclOffset</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>null</Parameter>
						<Parameter>9</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>null</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>i32CurrentBitOffset</Parameter>
						<Parameter>true</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="EndSi1">
					<SetVariable Target="i32CurrentBitOffset">-1</SetVariable>
				</TestStep>
				<TestStep Name="ProfileLoopEnd">
					<Compare>
						<Equal>
							<Value1>bAtLeastOneModuleMatch</Value1>
							<Value2>false</Value2>
							<GotoStep>HandleAbortTestCaseOnFirstError</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="HandleAbortTestCaseOnFirstError">
					<Compare>
						<Equal>
							<Value1>bAbortTestCaseOnFirstError</Value1>
							<Value2>false</Value2>
							<GotoStep>ProfileLoopIncrement</GotoStep>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>strResult</Value1>
							<Value2>EmptyString</Value2>
							<GotoStep>ProfileLoopIncrement</GotoStep>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="29" Level="Output">Object verification for all following modules abort because an error was already detected for the current module.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>END</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="ProfileLoopIncrement">
					<SetVariable Target="u32ProfileCounter">u32ProfileCounter + 1</SetVariable>
					<Compare>
						<Greater>
							<Value1>u32CurrentProfilesLength</Value1>
							<Value2>u32ProfileCounter</Value2>
							<GotoStep>ProfileLoopStart</GotoStep>
						</Greater>
					</Compare>
				</TestStep>
				<TestStep Name="END">
					<Compare>
						<NotEqual>
							<Value1>bAtLeastOneModuleMatch</Value1>
							<Value2>true</Value2>
							<SkipCase Id="30">SKIP TEST(no module/channel supports the current profile)</SkipCase>
						</NotEqual>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bDEBUG</Value1>
							<Value2>true</Value2>
							<WriteLine Id="31" Param0="strResult" Level="Verbose">DEBUG | Result : '{0}'.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>strResult</Value1>
							<Value2>EmptyString</Value2>
							<ReturnSuccess Id="32">Test succeed</ReturnSuccess>
						</Equal>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>strResult</Value1>
							<Value2>EmptyString</Value2>
							<RaiseError Id="33"></RaiseError>
						</NotEqual>
					</Compare>
				</TestStep>
			</TestCase>
		</TestGroup>
		<TestGroup Name="Verify objects 0xFBF0 - 0xFBFF (CDP Command Objects)" GroupId="10">
			<TestCase Name="offline | 0xFBF0 (Device Reset Command)" CaseId="1">
				<Description>
					<PreCondition>- The device profile is 5003
- The module profile is 2011
- The submodule profile is 0</PreCondition>
					<Action>- Iterate over all offline defined modules/channels and if the PreCondition matches the following operations are done:
- Get the offline description of object 0xFBF0(+module specific offset) 'Device Reset Command' and all entries
 Check:
    (Name)
    BitSize
    DataType
    Rx / Tx mappable
    Default Data
    MinData
    Flags       </Action>
					<PostCondition>Error if
- mandatory object / entry is not defined
- an optional object exists and the entries are invalid
- Object / entry description does not match with the specification</PostCondition>
					<ProposalForSolution>- Define the missing objects
- correct object / entry description</ProposalForSolution>
					<References>
						<Reference Specification="ETG.5003.2011"></Reference>
					</References>
					<Mandatory>true</Mandatory>
				</Description>
				<TestStep Name="InitResult">
					<SetVariable Target="strResult">EmptyString</SetVariable>
				</TestStep>
				<TestStep Name="CheckIfOdAvailable">
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Mailbox</Value1>
							<Value2>false</Value2>
							<SkipCase Id="1">DuT does not support mailbox.</SkipCase>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Mailbox.CoE</Value1>
							<Value2>false</Value2>
							<SkipCase Id="2">DuT does not support CoE.</SkipCase>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep>
					<GetObjectDictionary Target="odDeviceObjectdictionary">
						<DictionaryType>Offline</DictionaryType>
					</GetObjectDictionary>
					<SkipOnFailure Id="3">No offline object dictionary defined.</SkipOnFailure>
				</TestStep>
				<TestStep>
					<GetObjectList Count="u32Tmp" Target="odDeviceObjectdictionaryList" SourceDict="odDeviceObjectdictionary"></GetObjectList>
					<Compare>
						<Equal>
							<Value1>u32Tmp</Value1>
							<Value2>0</Value2>
							<SkipCase Id="4">No offline object dictionary defined.</SkipCase>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="InitAtLeastOneProfileMatch">
					<SetVariable Target="bAtLeastOneModuleMatch">false</SetVariable>
				</TestStep>
				<TestStep Name="GetCurrentProfileList">
					<SizeOf UInt32Var="u32Tmp">arrOfflineProfiles</SizeOf>
					<Compare>
						<Equal>
							<Value1>u32Tmp</Value1>
							<Value2>0</Value2>
							<CallTestFunction Name="GetCurrentProfileList">
								<Parameter>"offline"</Parameter>
								<Parameter>"SafeOP"</Parameter>
								<OutParameter>arrOfflineProfiles</OutParameter>
							</CallTestFunction>
						</Equal>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>u32Tmp</Value1>
							<Value2>0</Value2>
							<WriteLine Id="5" Param0="arrOfflineProfiles" Level="Verbose">Use previously created profile list ({0})</WriteLine>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep>
					<SizeOf UInt32Var="u32Tmp">arrOfflineProfiles</SizeOf>
				</TestStep>
				<TestStep>
					<InitArray TargetArray="arrCurrentProfiles" Length="u32Tmp"></InitArray>
				</TestStep>
				<TestStep>
					<CopyArray>
						<SourceArray>arrOfflineProfiles</SourceArray>
						<DestinationArray>arrCurrentProfiles</DestinationArray>
						<Length>u32Tmp</Length>
					</CopyArray>
				</TestStep>
				<TestStep Name="IsProfileSupported">
					<CallTestFunction Name="DeviceAndModuleProfileDefined">
						<Parameter>arrCurrentProfiles</Parameter>
						<Parameter>5003</Parameter>
						<Parameter>2011</Parameter>
						<OutParameter>bAtLeastOneModuleMatch</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>bAtLeastOneModuleMatch</Value1>
							<Value2>false</Value2>
							<GotoStep>END</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="GetObjectIndexInclOffset">
					<SetVariable Target="u16ObjectIndexInclOffset">#xFBF0</SetVariable>
					<WriteLine Id="6" Param0="u16ObjectIndexInclOffset" Level="Verbose">ObjectIndex '0x{0:X}' (module independent)</WriteLine>
				</TestStep>
				<TestStep Name="LoadDeviceObjectDictionary">
					<Description Id="7" Level="Verbose">Load 'offline' object dictionary for testing.</Description>
					<GetObjectDictionary Target="odDeviceObjectdictionary">
						<DictionaryType>Offline</DictionaryType>
					</GetObjectDictionary>
					<RaiseErrorOnFailure Id="8">VerifyObject : failed to load offline object dictionary.</RaiseErrorOnFailure>
				</TestStep>
				<TestStep Name="CallCheckObjectDescription">
					<Description Id="9" Param0="u16ObjectIndexInclOffset" Level="Output">Verify the object description 0x{0:X4} 'Device Reset Command'.</Description>
					<CallTestFunction Name="CheckObjectDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"offline"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>"Device Reset Command"</Parameter>
						<Parameter>null</Parameter>
						<Parameter>9</Parameter>
						<Parameter>-1</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<GotoStep>END</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="InitEntryBittOffset">
					<SetVariable Target="i32CurrentBitOffset">0</SetVariable>
				</TestStep>
				<TestStep Name="StartSi0">
					<Description Id="10" Level="Output">Start validate SubIndex0</Description>
					<WriteLine Id="11" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : Subindex '0x{0:X}.0'</WriteLine>
				</TestStep>
				<TestStep Name="CallSi0CheckEntryDescription">
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"offline"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>0</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>null</Parameter>
						<Parameter>5</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>null</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>null</Parameter>
						<Parameter>null</Parameter>
						<Parameter>null</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>8</Parameter>
						<Parameter>i32CurrentBitOffset</Parameter>
						<Parameter>true</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="EndSi0">
					<SetVariable Target="i32CurrentBitOffset">16</SetVariable>
				</TestStep>
				<TestStep Name="StartSi1">
					<Description Id="12" Level="Output">Start validate SubIndex1</Description>
					<WriteLine Id="13" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : Subindex '0x{0:X}.1'</WriteLine>
				</TestStep>
				<TestStep Name="CallSi1CheckEntryDescription">
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"offline"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>1</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>"Command"</Parameter>
						<Parameter>10</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>null</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>48</Parameter>
						<Parameter>i32CurrentBitOffset</Parameter>
						<Parameter>true</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="EndSi1">
					<SetVariable Target="i32CurrentBitOffset">i32CurrentBitOffset + 48</SetVariable>
				</TestStep>
				<TestStep Name="StartSi2">
					<Description Id="14" Level="Output">Start validate SubIndex2</Description>
					<WriteLine Id="15" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : Subindex '0x{0:X}.2'</WriteLine>
				</TestStep>
				<TestStep Name="CallSi2CheckEntryDescription">
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"offline"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>2</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>"Status"</Parameter>
						<Parameter>5</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>null</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>8</Parameter>
						<Parameter>i32CurrentBitOffset</Parameter>
						<Parameter>true</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="EndSi2">
					<SetVariable Target="i32CurrentBitOffset">i32CurrentBitOffset + 8</SetVariable>
				</TestStep>
				<TestStep Name="StartSi3">
					<Description Id="16" Level="Output">Start validate SubIndex3</Description>
					<WriteLine Id="17" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : Subindex '0x{0:X}.3'</WriteLine>
				</TestStep>
				<TestStep Name="CallSi3CheckEntryDescription">
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"offline"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>3</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>"Response"</Parameter>
						<Parameter>10</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>null</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>16</Parameter>
						<Parameter>i32CurrentBitOffset</Parameter>
						<Parameter>true</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="EndSi3">
					<SetVariable Target="i32CurrentBitOffset">i32CurrentBitOffset + 16</SetVariable>
				</TestStep>
				<TestStep Name="CheckReservedEntryRange_4_to_255">
					<Description Id="18" Level="Output">Start check reserved entry range 4 to 255</Description>
					<CallTestFunction Name="CheckReservedEntryRange">
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>4</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>odDeviceObjectdictionary</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="END">
					<Compare>
						<NotEqual>
							<Value1>bAtLeastOneModuleMatch</Value1>
							<Value2>true</Value2>
							<SkipCase Id="19">SKIP TEST(no module/channel supports the current profile)</SkipCase>
						</NotEqual>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bDEBUG</Value1>
							<Value2>true</Value2>
							<WriteLine Id="20" Param0="strResult" Level="Verbose">DEBUG | Result : '{0}'.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>strResult</Value1>
							<Value2>EmptyString</Value2>
							<ReturnSuccess Id="21">Test succeed</ReturnSuccess>
						</Equal>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>strResult</Value1>
							<Value2>EmptyString</Value2>
							<RaiseError Id="22"></RaiseError>
						</NotEqual>
					</Compare>
				</TestStep>
			</TestCase>
			<TestCase Name="online | 0xFBF0 (Device Reset Command)" CaseId="2">
				<Description>
					<PreCondition>- The device profile is 5003
- The module profile is 2011
- The submodule profile is 0</PreCondition>
					<Action>- Iterate over all online defined modules/channels and if the PreCondition matches the following operations are done:
- Get the online description of object 0xFBF0(+module specific offset) 'Device Reset Command' and all entries
 Check:
    (Name)
    BitSize
    DataType
    Rx / Tx mappable
    Default Data
    MinData
    Flags       </Action>
					<PostCondition>Error if
- mandatory object / entry is not defined
- an optional object exists and the entries are invalid
- Object / entry description does not match with the specification</PostCondition>
					<ProposalForSolution>- Define the missing objects
- correct object / entry description</ProposalForSolution>
					<References>
						<Reference Specification="ETG.5003.2011"></Reference>
					</References>
					<Mandatory>true</Mandatory>
				</Description>
				<TestStep Name="InitResult">
					<SetVariable Target="strResult">EmptyString</SetVariable>
				</TestStep>
				<TestStep Name="CheckIfOdAvailable">
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Mailbox</Value1>
							<Value2>false</Value2>
							<SkipCase Id="1">DuT does not support mailbox.</SkipCase>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Mailbox.CoE</Value1>
							<Value2>false</Value2>
							<SkipCase Id="2">DuT does not support CoE.</SkipCase>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Mailbox.CoE.SdoInfo</Value1>
							<Value2>false</Value2>
							<SkipCase Id="3">DuT does not support SDO Info.</SkipCase>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="InitAtLeastOneProfileMatch">
					<SetVariable Target="bAtLeastOneModuleMatch">false</SetVariable>
				</TestStep>
				<TestStep Name="GetCurrentProfileList">
					<SizeOf UInt32Var="u32Tmp">arrOnlineProfiles</SizeOf>
					<Compare>
						<Equal>
							<Value1>u32Tmp</Value1>
							<Value2>0</Value2>
							<CallTestFunction Name="GetCurrentProfileList">
								<Parameter>"online"</Parameter>
								<Parameter>"SafeOP"</Parameter>
								<OutParameter>arrOnlineProfiles</OutParameter>
							</CallTestFunction>
						</Equal>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>u32Tmp</Value1>
							<Value2>0</Value2>
							<WriteLine Id="4" Param0="arrOnlineProfiles" Level="Verbose">Use previously created profile list ({0})</WriteLine>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep>
					<SizeOf UInt32Var="u32Tmp">arrOnlineProfiles</SizeOf>
				</TestStep>
				<TestStep>
					<InitArray TargetArray="arrCurrentProfiles" Length="u32Tmp"></InitArray>
				</TestStep>
				<TestStep>
					<CopyArray>
						<SourceArray>arrOnlineProfiles</SourceArray>
						<DestinationArray>arrCurrentProfiles</DestinationArray>
						<Length>u32Tmp</Length>
					</CopyArray>
				</TestStep>
				<TestStep Name="IsProfileSupported">
					<CallTestFunction Name="DeviceAndModuleProfileDefined">
						<Parameter>arrCurrentProfiles</Parameter>
						<Parameter>5003</Parameter>
						<Parameter>2011</Parameter>
						<OutParameter>bAtLeastOneModuleMatch</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>bAtLeastOneModuleMatch</Value1>
							<Value2>false</Value2>
							<GotoStep>END</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="GetObjectIndexInclOffset">
					<SetVariable Target="u16ObjectIndexInclOffset">#xFBF0</SetVariable>
					<WriteLine Id="5" Param0="u16ObjectIndexInclOffset" Level="Verbose">ObjectIndex '0x{0:X}' (module independent)</WriteLine>
				</TestStep>
				<TestStep Name="LoadDeviceObjectDictionary">
					<Description Id="6" Level="Verbose">Load 'online' object dictionary for testing.</Description>
					<GetObjectDictionary Target="odDeviceObjectdictionary">
						<DictionaryType>Online</DictionaryType>
					</GetObjectDictionary>
					<RaiseErrorOnFailure Id="7">VerifyObject : failed to load online object dictionary.</RaiseErrorOnFailure>
				</TestStep>
				<TestStep Name="CallCheckObjectDescription">
					<Description Id="8" Param0="u16ObjectIndexInclOffset" Level="Output">Verify the object description 0x{0:X4} 'Device Reset Command'.</Description>
					<CallTestFunction Name="CheckObjectDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"online"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>"Device Reset Command"</Parameter>
						<Parameter>null</Parameter>
						<Parameter>9</Parameter>
						<Parameter>-1</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<GotoStep>END</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="InitEntryBittOffset">
					<SetVariable Target="i32CurrentBitOffset">0</SetVariable>
				</TestStep>
				<TestStep Name="StartSi0">
					<Description Id="9" Level="Output">Start validate SubIndex0</Description>
					<WriteLine Id="10" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : Subindex '0x{0:X}.0'</WriteLine>
				</TestStep>
				<TestStep Name="CallSi0CheckEntryDescription">
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"online"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>0</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>null</Parameter>
						<Parameter>5</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>null</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>null</Parameter>
						<Parameter>null</Parameter>
						<Parameter>null</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>8</Parameter>
						<Parameter>i32CurrentBitOffset</Parameter>
						<Parameter>true</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="EndSi0">
					<SetVariable Target="i32CurrentBitOffset">16</SetVariable>
				</TestStep>
				<TestStep Name="StartSi1">
					<Description Id="11" Level="Output">Start validate SubIndex1</Description>
					<WriteLine Id="12" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : Subindex '0x{0:X}.1'</WriteLine>
				</TestStep>
				<TestStep Name="CallSi1CheckEntryDescription">
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"online"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>1</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>"Command"</Parameter>
						<Parameter>10</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>null</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>48</Parameter>
						<Parameter>i32CurrentBitOffset</Parameter>
						<Parameter>true</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="EndSi1">
					<SetVariable Target="i32CurrentBitOffset">i32CurrentBitOffset + 48</SetVariable>
				</TestStep>
				<TestStep Name="StartSi2">
					<Description Id="13" Level="Output">Start validate SubIndex2</Description>
					<WriteLine Id="14" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : Subindex '0x{0:X}.2'</WriteLine>
				</TestStep>
				<TestStep Name="CallSi2CheckEntryDescription">
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"online"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>2</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>"Status"</Parameter>
						<Parameter>5</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>null</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>8</Parameter>
						<Parameter>i32CurrentBitOffset</Parameter>
						<Parameter>true</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="EndSi2">
					<SetVariable Target="i32CurrentBitOffset">i32CurrentBitOffset + 8</SetVariable>
				</TestStep>
				<TestStep Name="StartSi3">
					<Description Id="15" Level="Output">Start validate SubIndex3</Description>
					<WriteLine Id="16" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : Subindex '0x{0:X}.3'</WriteLine>
				</TestStep>
				<TestStep Name="CallSi3CheckEntryDescription">
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"online"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>3</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>"Response"</Parameter>
						<Parameter>10</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>null</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>16</Parameter>
						<Parameter>i32CurrentBitOffset</Parameter>
						<Parameter>true</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="EndSi3">
					<SetVariable Target="i32CurrentBitOffset">i32CurrentBitOffset + 16</SetVariable>
				</TestStep>
				<TestStep Name="CheckReservedEntryRange_4_to_255">
					<Description Id="17" Level="Output">Start check reserved entry range 4 to 255</Description>
					<CallTestFunction Name="CheckReservedEntryRange">
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>4</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>odDeviceObjectdictionary</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="END">
					<Compare>
						<NotEqual>
							<Value1>bAtLeastOneModuleMatch</Value1>
							<Value2>true</Value2>
							<SkipCase Id="18">SKIP TEST(no module/channel supports the current profile)</SkipCase>
						</NotEqual>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bDEBUG</Value1>
							<Value2>true</Value2>
							<WriteLine Id="19" Param0="strResult" Level="Verbose">DEBUG | Result : '{0}'.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>strResult</Value1>
							<Value2>EmptyString</Value2>
							<ReturnSuccess Id="20">Test succeed</ReturnSuccess>
						</Equal>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>strResult</Value1>
							<Value2>EmptyString</Value2>
							<RaiseError Id="21"></RaiseError>
						</NotEqual>
					</Compare>
				</TestStep>
			</TestCase>
			<TestCase Name="offline | 0xFBF1 (Exception Reset Command)" CaseId="3">
				<Description>
					<PreCondition>- The device profile is 5003
- The module profile is 2011
- The submodule profile is 0</PreCondition>
					<Action>- Iterate over all offline defined modules/channels and if the PreCondition matches the following operations are done:
- Get the offline description of object 0xFBF1(+module specific offset) 'Exception Reset Command' and all entries
 Check:
    (Name)
    BitSize
    DataType
    Rx / Tx mappable
    Default Data
    MinData
    Flags       </Action>
					<PostCondition>Error if
- mandatory object / entry is not defined
- an optional object exists and the entries are invalid
- Object / entry description does not match with the specification</PostCondition>
					<ProposalForSolution>- Define the missing objects
- correct object / entry description</ProposalForSolution>
					<References>
						<Reference Specification="ETG.5003.2011"></Reference>
					</References>
					<Mandatory>true</Mandatory>
				</Description>
				<TestStep Name="InitResult">
					<SetVariable Target="strResult">EmptyString</SetVariable>
				</TestStep>
				<TestStep Name="CheckIfOdAvailable">
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Mailbox</Value1>
							<Value2>false</Value2>
							<SkipCase Id="1">DuT does not support mailbox.</SkipCase>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Mailbox.CoE</Value1>
							<Value2>false</Value2>
							<SkipCase Id="2">DuT does not support CoE.</SkipCase>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep>
					<GetObjectDictionary Target="odDeviceObjectdictionary">
						<DictionaryType>Offline</DictionaryType>
					</GetObjectDictionary>
					<SkipOnFailure Id="3">No offline object dictionary defined.</SkipOnFailure>
				</TestStep>
				<TestStep>
					<GetObjectList Count="u32Tmp" Target="odDeviceObjectdictionaryList" SourceDict="odDeviceObjectdictionary"></GetObjectList>
					<Compare>
						<Equal>
							<Value1>u32Tmp</Value1>
							<Value2>0</Value2>
							<SkipCase Id="4">No offline object dictionary defined.</SkipCase>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="InitAtLeastOneProfileMatch">
					<SetVariable Target="bAtLeastOneModuleMatch">false</SetVariable>
				</TestStep>
				<TestStep Name="GetCurrentProfileList">
					<SizeOf UInt32Var="u32Tmp">arrOfflineProfiles</SizeOf>
					<Compare>
						<Equal>
							<Value1>u32Tmp</Value1>
							<Value2>0</Value2>
							<CallTestFunction Name="GetCurrentProfileList">
								<Parameter>"offline"</Parameter>
								<Parameter>"SafeOP"</Parameter>
								<OutParameter>arrOfflineProfiles</OutParameter>
							</CallTestFunction>
						</Equal>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>u32Tmp</Value1>
							<Value2>0</Value2>
							<WriteLine Id="5" Param0="arrOfflineProfiles" Level="Verbose">Use previously created profile list ({0})</WriteLine>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep>
					<SizeOf UInt32Var="u32Tmp">arrOfflineProfiles</SizeOf>
				</TestStep>
				<TestStep>
					<InitArray TargetArray="arrCurrentProfiles" Length="u32Tmp"></InitArray>
				</TestStep>
				<TestStep>
					<CopyArray>
						<SourceArray>arrOfflineProfiles</SourceArray>
						<DestinationArray>arrCurrentProfiles</DestinationArray>
						<Length>u32Tmp</Length>
					</CopyArray>
				</TestStep>
				<TestStep Name="IsProfileSupported">
					<CallTestFunction Name="DeviceAndModuleProfileDefined">
						<Parameter>arrCurrentProfiles</Parameter>
						<Parameter>5003</Parameter>
						<Parameter>2011</Parameter>
						<OutParameter>bAtLeastOneModuleMatch</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>bAtLeastOneModuleMatch</Value1>
							<Value2>false</Value2>
							<GotoStep>END</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="GetObjectIndexInclOffset">
					<SetVariable Target="u16ObjectIndexInclOffset">#xFBF1</SetVariable>
					<WriteLine Id="6" Param0="u16ObjectIndexInclOffset" Level="Verbose">ObjectIndex '0x{0:X}' (module independent)</WriteLine>
				</TestStep>
				<TestStep Name="LoadDeviceObjectDictionary">
					<Description Id="7" Level="Verbose">Load 'offline' object dictionary for testing.</Description>
					<GetObjectDictionary Target="odDeviceObjectdictionary">
						<DictionaryType>Offline</DictionaryType>
					</GetObjectDictionary>
					<RaiseErrorOnFailure Id="8">VerifyObject : failed to load offline object dictionary.</RaiseErrorOnFailure>
				</TestStep>
				<TestStep Name="CallCheckObjectDescription">
					<Description Id="9" Param0="u16ObjectIndexInclOffset" Level="Output">Verify the object description 0x{0:X4} 'Exception Reset Command'.</Description>
					<CallTestFunction Name="CheckObjectDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"offline"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>"Exception Reset Command"</Parameter>
						<Parameter>null</Parameter>
						<Parameter>9</Parameter>
						<Parameter>-1</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<GotoStep>END</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="InitEntryBittOffset">
					<SetVariable Target="i32CurrentBitOffset">0</SetVariable>
				</TestStep>
				<TestStep Name="StartSi0">
					<Description Id="10" Level="Output">Start validate SubIndex0</Description>
					<WriteLine Id="11" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : Subindex '0x{0:X}.0'</WriteLine>
				</TestStep>
				<TestStep Name="CallSi0CheckEntryDescription">
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"offline"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>0</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>null</Parameter>
						<Parameter>5</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>null</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>null</Parameter>
						<Parameter>null</Parameter>
						<Parameter>null</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>8</Parameter>
						<Parameter>i32CurrentBitOffset</Parameter>
						<Parameter>true</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="EndSi0">
					<SetVariable Target="i32CurrentBitOffset">16</SetVariable>
				</TestStep>
				<TestStep Name="StartSi1">
					<Description Id="12" Level="Output">Start validate SubIndex1</Description>
					<WriteLine Id="13" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : Subindex '0x{0:X}.1'</WriteLine>
				</TestStep>
				<TestStep Name="CallSi1CheckEntryDescription">
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"offline"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>1</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>"Command"</Parameter>
						<Parameter>10</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>null</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>40</Parameter>
						<Parameter>i32CurrentBitOffset</Parameter>
						<Parameter>true</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="EndSi1">
					<SetVariable Target="i32CurrentBitOffset">i32CurrentBitOffset + 40</SetVariable>
				</TestStep>
				<TestStep Name="StartSi2">
					<Description Id="14" Level="Output">Start validate SubIndex2</Description>
					<WriteLine Id="15" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : Subindex '0x{0:X}.2'</WriteLine>
				</TestStep>
				<TestStep Name="CallSi2CheckEntryDescription">
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"offline"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>2</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>"Status"</Parameter>
						<Parameter>5</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>null</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>8</Parameter>
						<Parameter>i32CurrentBitOffset</Parameter>
						<Parameter>true</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="EndSi2">
					<SetVariable Target="i32CurrentBitOffset">i32CurrentBitOffset + 8</SetVariable>
				</TestStep>
				<TestStep Name="StartSi3">
					<Description Id="16" Level="Output">Start validate SubIndex3</Description>
					<WriteLine Id="17" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : Subindex '0x{0:X}.3'</WriteLine>
				</TestStep>
				<TestStep Name="CallSi3CheckEntryDescription">
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"offline"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>3</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>"Response"</Parameter>
						<Parameter>10</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>null</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>16</Parameter>
						<Parameter>i32CurrentBitOffset</Parameter>
						<Parameter>true</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="EndSi3">
					<SetVariable Target="i32CurrentBitOffset">i32CurrentBitOffset + 16</SetVariable>
				</TestStep>
				<TestStep Name="CheckReservedEntryRange_4_to_255">
					<Description Id="18" Level="Output">Start check reserved entry range 4 to 255</Description>
					<CallTestFunction Name="CheckReservedEntryRange">
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>4</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>odDeviceObjectdictionary</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="END">
					<Compare>
						<NotEqual>
							<Value1>bAtLeastOneModuleMatch</Value1>
							<Value2>true</Value2>
							<SkipCase Id="19">SKIP TEST(no module/channel supports the current profile)</SkipCase>
						</NotEqual>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bDEBUG</Value1>
							<Value2>true</Value2>
							<WriteLine Id="20" Param0="strResult" Level="Verbose">DEBUG | Result : '{0}'.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>strResult</Value1>
							<Value2>EmptyString</Value2>
							<ReturnSuccess Id="21">Test succeed</ReturnSuccess>
						</Equal>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>strResult</Value1>
							<Value2>EmptyString</Value2>
							<RaiseError Id="22"></RaiseError>
						</NotEqual>
					</Compare>
				</TestStep>
			</TestCase>
			<TestCase Name="online | 0xFBF1 (Exception Reset Command)" CaseId="4">
				<Description>
					<PreCondition>- The device profile is 5003
- The module profile is 2011
- The submodule profile is 0</PreCondition>
					<Action>- Iterate over all online defined modules/channels and if the PreCondition matches the following operations are done:
- Get the online description of object 0xFBF1(+module specific offset) 'Exception Reset Command' and all entries
 Check:
    (Name)
    BitSize
    DataType
    Rx / Tx mappable
    Default Data
    MinData
    Flags       </Action>
					<PostCondition>Error if
- mandatory object / entry is not defined
- an optional object exists and the entries are invalid
- Object / entry description does not match with the specification</PostCondition>
					<ProposalForSolution>- Define the missing objects
- correct object / entry description</ProposalForSolution>
					<References>
						<Reference Specification="ETG.5003.2011"></Reference>
					</References>
					<Mandatory>true</Mandatory>
				</Description>
				<TestStep Name="InitResult">
					<SetVariable Target="strResult">EmptyString</SetVariable>
				</TestStep>
				<TestStep Name="CheckIfOdAvailable">
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Mailbox</Value1>
							<Value2>false</Value2>
							<SkipCase Id="1">DuT does not support mailbox.</SkipCase>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Mailbox.CoE</Value1>
							<Value2>false</Value2>
							<SkipCase Id="2">DuT does not support CoE.</SkipCase>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Mailbox.CoE.SdoInfo</Value1>
							<Value2>false</Value2>
							<SkipCase Id="3">DuT does not support SDO Info.</SkipCase>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="InitAtLeastOneProfileMatch">
					<SetVariable Target="bAtLeastOneModuleMatch">false</SetVariable>
				</TestStep>
				<TestStep Name="GetCurrentProfileList">
					<SizeOf UInt32Var="u32Tmp">arrOnlineProfiles</SizeOf>
					<Compare>
						<Equal>
							<Value1>u32Tmp</Value1>
							<Value2>0</Value2>
							<CallTestFunction Name="GetCurrentProfileList">
								<Parameter>"online"</Parameter>
								<Parameter>"SafeOP"</Parameter>
								<OutParameter>arrOnlineProfiles</OutParameter>
							</CallTestFunction>
						</Equal>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>u32Tmp</Value1>
							<Value2>0</Value2>
							<WriteLine Id="4" Param0="arrOnlineProfiles" Level="Verbose">Use previously created profile list ({0})</WriteLine>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep>
					<SizeOf UInt32Var="u32Tmp">arrOnlineProfiles</SizeOf>
				</TestStep>
				<TestStep>
					<InitArray TargetArray="arrCurrentProfiles" Length="u32Tmp"></InitArray>
				</TestStep>
				<TestStep>
					<CopyArray>
						<SourceArray>arrOnlineProfiles</SourceArray>
						<DestinationArray>arrCurrentProfiles</DestinationArray>
						<Length>u32Tmp</Length>
					</CopyArray>
				</TestStep>
				<TestStep Name="IsProfileSupported">
					<CallTestFunction Name="DeviceAndModuleProfileDefined">
						<Parameter>arrCurrentProfiles</Parameter>
						<Parameter>5003</Parameter>
						<Parameter>2011</Parameter>
						<OutParameter>bAtLeastOneModuleMatch</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>bAtLeastOneModuleMatch</Value1>
							<Value2>false</Value2>
							<GotoStep>END</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="GetObjectIndexInclOffset">
					<SetVariable Target="u16ObjectIndexInclOffset">#xFBF1</SetVariable>
					<WriteLine Id="5" Param0="u16ObjectIndexInclOffset" Level="Verbose">ObjectIndex '0x{0:X}' (module independent)</WriteLine>
				</TestStep>
				<TestStep Name="LoadDeviceObjectDictionary">
					<Description Id="6" Level="Verbose">Load 'online' object dictionary for testing.</Description>
					<GetObjectDictionary Target="odDeviceObjectdictionary">
						<DictionaryType>Online</DictionaryType>
					</GetObjectDictionary>
					<RaiseErrorOnFailure Id="7">VerifyObject : failed to load online object dictionary.</RaiseErrorOnFailure>
				</TestStep>
				<TestStep Name="CallCheckObjectDescription">
					<Description Id="8" Param0="u16ObjectIndexInclOffset" Level="Output">Verify the object description 0x{0:X4} 'Exception Reset Command'.</Description>
					<CallTestFunction Name="CheckObjectDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"online"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>"Exception Reset Command"</Parameter>
						<Parameter>null</Parameter>
						<Parameter>9</Parameter>
						<Parameter>-1</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<GotoStep>END</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="InitEntryBittOffset">
					<SetVariable Target="i32CurrentBitOffset">0</SetVariable>
				</TestStep>
				<TestStep Name="StartSi0">
					<Description Id="9" Level="Output">Start validate SubIndex0</Description>
					<WriteLine Id="10" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : Subindex '0x{0:X}.0'</WriteLine>
				</TestStep>
				<TestStep Name="CallSi0CheckEntryDescription">
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"online"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>0</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>null</Parameter>
						<Parameter>5</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>null</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>null</Parameter>
						<Parameter>null</Parameter>
						<Parameter>null</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>8</Parameter>
						<Parameter>i32CurrentBitOffset</Parameter>
						<Parameter>true</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="EndSi0">
					<SetVariable Target="i32CurrentBitOffset">16</SetVariable>
				</TestStep>
				<TestStep Name="StartSi1">
					<Description Id="11" Level="Output">Start validate SubIndex1</Description>
					<WriteLine Id="12" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : Subindex '0x{0:X}.1'</WriteLine>
				</TestStep>
				<TestStep Name="CallSi1CheckEntryDescription">
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"online"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>1</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>"Command"</Parameter>
						<Parameter>10</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>null</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>40</Parameter>
						<Parameter>i32CurrentBitOffset</Parameter>
						<Parameter>true</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="EndSi1">
					<SetVariable Target="i32CurrentBitOffset">i32CurrentBitOffset + 40</SetVariable>
				</TestStep>
				<TestStep Name="StartSi2">
					<Description Id="13" Level="Output">Start validate SubIndex2</Description>
					<WriteLine Id="14" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : Subindex '0x{0:X}.2'</WriteLine>
				</TestStep>
				<TestStep Name="CallSi2CheckEntryDescription">
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"online"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>2</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>"Status"</Parameter>
						<Parameter>5</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>null</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>8</Parameter>
						<Parameter>i32CurrentBitOffset</Parameter>
						<Parameter>true</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="EndSi2">
					<SetVariable Target="i32CurrentBitOffset">i32CurrentBitOffset + 8</SetVariable>
				</TestStep>
				<TestStep Name="StartSi3">
					<Description Id="15" Level="Output">Start validate SubIndex3</Description>
					<WriteLine Id="16" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : Subindex '0x{0:X}.3'</WriteLine>
				</TestStep>
				<TestStep Name="CallSi3CheckEntryDescription">
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"online"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>3</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>"Response"</Parameter>
						<Parameter>10</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>null</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>16</Parameter>
						<Parameter>i32CurrentBitOffset</Parameter>
						<Parameter>true</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="EndSi3">
					<SetVariable Target="i32CurrentBitOffset">i32CurrentBitOffset + 16</SetVariable>
				</TestStep>
				<TestStep Name="CheckReservedEntryRange_4_to_255">
					<Description Id="17" Level="Output">Start check reserved entry range 4 to 255</Description>
					<CallTestFunction Name="CheckReservedEntryRange">
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>4</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>odDeviceObjectdictionary</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="END">
					<Compare>
						<NotEqual>
							<Value1>bAtLeastOneModuleMatch</Value1>
							<Value2>true</Value2>
							<SkipCase Id="18">SKIP TEST(no module/channel supports the current profile)</SkipCase>
						</NotEqual>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bDEBUG</Value1>
							<Value2>true</Value2>
							<WriteLine Id="19" Param0="strResult" Level="Verbose">DEBUG | Result : '{0}'.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>strResult</Value1>
							<Value2>EmptyString</Value2>
							<ReturnSuccess Id="20">Test succeed</ReturnSuccess>
						</Equal>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>strResult</Value1>
							<Value2>EmptyString</Value2>
							<RaiseError Id="21"></RaiseError>
						</NotEqual>
					</Compare>
				</TestStep>
			</TestCase>
			<TestCase Name="offline | 0xFBF2 (Store Parameters Command)" CaseId="5">
				<Description>
					<PreCondition>- The device profile is 5003
- The module profile is 2011
- The submodule profile is 0</PreCondition>
					<Action>- Iterate over all offline defined modules/channels and if the PreCondition matches the following operations are done:
- Get the offline description of object 0xFBF2(+module specific offset) 'Store Parameters Command' and all entries
 Check:
    (Name)
    BitSize
    DataType
    Rx / Tx mappable
    Default Data
    MinData
    Flags       </Action>
					<PostCondition>Error if
- mandatory object / entry is not defined
- an optional object exists and the entries are invalid
- Object / entry description does not match with the specification</PostCondition>
					<ProposalForSolution>- Define the missing objects
- correct object / entry description</ProposalForSolution>
					<References>
						<Reference Specification="ETG.5003.2011"></Reference>
					</References>
					<Mandatory>true</Mandatory>
				</Description>
				<TestStep Name="InitResult">
					<SetVariable Target="strResult">EmptyString</SetVariable>
				</TestStep>
				<TestStep Name="CheckIfOdAvailable">
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Mailbox</Value1>
							<Value2>false</Value2>
							<SkipCase Id="1">DuT does not support mailbox.</SkipCase>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Mailbox.CoE</Value1>
							<Value2>false</Value2>
							<SkipCase Id="2">DuT does not support CoE.</SkipCase>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep>
					<GetObjectDictionary Target="odDeviceObjectdictionary">
						<DictionaryType>Offline</DictionaryType>
					</GetObjectDictionary>
					<SkipOnFailure Id="3">No offline object dictionary defined.</SkipOnFailure>
				</TestStep>
				<TestStep>
					<GetObjectList Count="u32Tmp" Target="odDeviceObjectdictionaryList" SourceDict="odDeviceObjectdictionary"></GetObjectList>
					<Compare>
						<Equal>
							<Value1>u32Tmp</Value1>
							<Value2>0</Value2>
							<SkipCase Id="4">No offline object dictionary defined.</SkipCase>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="InitAtLeastOneProfileMatch">
					<SetVariable Target="bAtLeastOneModuleMatch">false</SetVariable>
				</TestStep>
				<TestStep Name="GetCurrentProfileList">
					<SizeOf UInt32Var="u32Tmp">arrOfflineProfiles</SizeOf>
					<Compare>
						<Equal>
							<Value1>u32Tmp</Value1>
							<Value2>0</Value2>
							<CallTestFunction Name="GetCurrentProfileList">
								<Parameter>"offline"</Parameter>
								<Parameter>"SafeOP"</Parameter>
								<OutParameter>arrOfflineProfiles</OutParameter>
							</CallTestFunction>
						</Equal>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>u32Tmp</Value1>
							<Value2>0</Value2>
							<WriteLine Id="5" Param0="arrOfflineProfiles" Level="Verbose">Use previously created profile list ({0})</WriteLine>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep>
					<SizeOf UInt32Var="u32Tmp">arrOfflineProfiles</SizeOf>
				</TestStep>
				<TestStep>
					<InitArray TargetArray="arrCurrentProfiles" Length="u32Tmp"></InitArray>
				</TestStep>
				<TestStep>
					<CopyArray>
						<SourceArray>arrOfflineProfiles</SourceArray>
						<DestinationArray>arrCurrentProfiles</DestinationArray>
						<Length>u32Tmp</Length>
					</CopyArray>
				</TestStep>
				<TestStep Name="IsProfileSupported">
					<CallTestFunction Name="DeviceAndModuleProfileDefined">
						<Parameter>arrCurrentProfiles</Parameter>
						<Parameter>5003</Parameter>
						<Parameter>2011</Parameter>
						<OutParameter>bAtLeastOneModuleMatch</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>bAtLeastOneModuleMatch</Value1>
							<Value2>false</Value2>
							<GotoStep>END</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="GetObjectIndexInclOffset">
					<SetVariable Target="u16ObjectIndexInclOffset">#xFBF2</SetVariable>
					<WriteLine Id="6" Param0="u16ObjectIndexInclOffset" Level="Verbose">ObjectIndex '0x{0:X}' (module independent)</WriteLine>
				</TestStep>
				<TestStep Name="LoadDeviceObjectDictionary">
					<Description Id="7" Level="Verbose">Load 'offline' object dictionary for testing.</Description>
					<GetObjectDictionary Target="odDeviceObjectdictionary">
						<DictionaryType>Offline</DictionaryType>
					</GetObjectDictionary>
					<RaiseErrorOnFailure Id="8">VerifyObject : failed to load offline object dictionary.</RaiseErrorOnFailure>
				</TestStep>
				<TestStep Name="CallCheckObjectDescription">
					<Description Id="9" Param0="u16ObjectIndexInclOffset" Level="Output">Verify the object description 0x{0:X4} 'Store Parameters Command'.</Description>
					<CallTestFunction Name="CheckObjectDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"offline"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>"Store Parameters Command"</Parameter>
						<Parameter>null</Parameter>
						<Parameter>9</Parameter>
						<Parameter>-1</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<GotoStep>END</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="InitEntryBittOffset">
					<SetVariable Target="i32CurrentBitOffset">0</SetVariable>
				</TestStep>
				<TestStep Name="StartSi0">
					<Description Id="10" Level="Output">Start validate SubIndex0</Description>
					<WriteLine Id="11" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : Subindex '0x{0:X}.0'</WriteLine>
				</TestStep>
				<TestStep Name="CallSi0CheckEntryDescription">
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"offline"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>0</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>null</Parameter>
						<Parameter>5</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>null</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>null</Parameter>
						<Parameter>null</Parameter>
						<Parameter>null</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>8</Parameter>
						<Parameter>i32CurrentBitOffset</Parameter>
						<Parameter>true</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="EndSi0">
					<SetVariable Target="i32CurrentBitOffset">16</SetVariable>
				</TestStep>
				<TestStep Name="StartSi1">
					<Description Id="12" Level="Output">Start validate SubIndex1</Description>
					<WriteLine Id="13" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : Subindex '0x{0:X}.1'</WriteLine>
				</TestStep>
				<TestStep Name="CallSi1CheckEntryDescription">
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"offline"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>1</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>"Command"</Parameter>
						<Parameter>10</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>null</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>32</Parameter>
						<Parameter>i32CurrentBitOffset</Parameter>
						<Parameter>true</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="EndSi1">
					<SetVariable Target="i32CurrentBitOffset">i32CurrentBitOffset + 32</SetVariable>
				</TestStep>
				<TestStep Name="StartSi2">
					<Description Id="14" Level="Output">Start validate SubIndex2</Description>
					<WriteLine Id="15" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : Subindex '0x{0:X}.2'</WriteLine>
				</TestStep>
				<TestStep Name="CallSi2CheckEntryDescription">
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"offline"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>2</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>"Status"</Parameter>
						<Parameter>5</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>null</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>8</Parameter>
						<Parameter>i32CurrentBitOffset</Parameter>
						<Parameter>true</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="EndSi2">
					<SetVariable Target="i32CurrentBitOffset">i32CurrentBitOffset + 8</SetVariable>
				</TestStep>
				<TestStep Name="StartSi3">
					<Description Id="16" Level="Output">Start validate SubIndex3</Description>
					<WriteLine Id="17" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : Subindex '0x{0:X}.3'</WriteLine>
				</TestStep>
				<TestStep Name="CallSi3CheckEntryDescription">
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"offline"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>3</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>"Response"</Parameter>
						<Parameter>10</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>null</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>16</Parameter>
						<Parameter>i32CurrentBitOffset</Parameter>
						<Parameter>true</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="EndSi3">
					<SetVariable Target="i32CurrentBitOffset">i32CurrentBitOffset + 16</SetVariable>
				</TestStep>
				<TestStep Name="CheckReservedEntryRange_4_to_255">
					<Description Id="18" Level="Output">Start check reserved entry range 4 to 255</Description>
					<CallTestFunction Name="CheckReservedEntryRange">
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>4</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>odDeviceObjectdictionary</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="END">
					<Compare>
						<NotEqual>
							<Value1>bAtLeastOneModuleMatch</Value1>
							<Value2>true</Value2>
							<SkipCase Id="19">SKIP TEST(no module/channel supports the current profile)</SkipCase>
						</NotEqual>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bDEBUG</Value1>
							<Value2>true</Value2>
							<WriteLine Id="20" Param0="strResult" Level="Verbose">DEBUG | Result : '{0}'.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>strResult</Value1>
							<Value2>EmptyString</Value2>
							<ReturnSuccess Id="21">Test succeed</ReturnSuccess>
						</Equal>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>strResult</Value1>
							<Value2>EmptyString</Value2>
							<RaiseError Id="22"></RaiseError>
						</NotEqual>
					</Compare>
				</TestStep>
			</TestCase>
			<TestCase Name="online | 0xFBF2 (Store Parameters Command)" CaseId="6">
				<Description>
					<PreCondition>- The device profile is 5003
- The module profile is 2011
- The submodule profile is 0</PreCondition>
					<Action>- Iterate over all online defined modules/channels and if the PreCondition matches the following operations are done:
- Get the online description of object 0xFBF2(+module specific offset) 'Store Parameters Command' and all entries
 Check:
    (Name)
    BitSize
    DataType
    Rx / Tx mappable
    Default Data
    MinData
    Flags       </Action>
					<PostCondition>Error if
- mandatory object / entry is not defined
- an optional object exists and the entries are invalid
- Object / entry description does not match with the specification</PostCondition>
					<ProposalForSolution>- Define the missing objects
- correct object / entry description</ProposalForSolution>
					<References>
						<Reference Specification="ETG.5003.2011"></Reference>
					</References>
					<Mandatory>true</Mandatory>
				</Description>
				<TestStep Name="InitResult">
					<SetVariable Target="strResult">EmptyString</SetVariable>
				</TestStep>
				<TestStep Name="CheckIfOdAvailable">
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Mailbox</Value1>
							<Value2>false</Value2>
							<SkipCase Id="1">DuT does not support mailbox.</SkipCase>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Mailbox.CoE</Value1>
							<Value2>false</Value2>
							<SkipCase Id="2">DuT does not support CoE.</SkipCase>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Mailbox.CoE.SdoInfo</Value1>
							<Value2>false</Value2>
							<SkipCase Id="3">DuT does not support SDO Info.</SkipCase>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="InitAtLeastOneProfileMatch">
					<SetVariable Target="bAtLeastOneModuleMatch">false</SetVariable>
				</TestStep>
				<TestStep Name="GetCurrentProfileList">
					<SizeOf UInt32Var="u32Tmp">arrOnlineProfiles</SizeOf>
					<Compare>
						<Equal>
							<Value1>u32Tmp</Value1>
							<Value2>0</Value2>
							<CallTestFunction Name="GetCurrentProfileList">
								<Parameter>"online"</Parameter>
								<Parameter>"SafeOP"</Parameter>
								<OutParameter>arrOnlineProfiles</OutParameter>
							</CallTestFunction>
						</Equal>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>u32Tmp</Value1>
							<Value2>0</Value2>
							<WriteLine Id="4" Param0="arrOnlineProfiles" Level="Verbose">Use previously created profile list ({0})</WriteLine>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep>
					<SizeOf UInt32Var="u32Tmp">arrOnlineProfiles</SizeOf>
				</TestStep>
				<TestStep>
					<InitArray TargetArray="arrCurrentProfiles" Length="u32Tmp"></InitArray>
				</TestStep>
				<TestStep>
					<CopyArray>
						<SourceArray>arrOnlineProfiles</SourceArray>
						<DestinationArray>arrCurrentProfiles</DestinationArray>
						<Length>u32Tmp</Length>
					</CopyArray>
				</TestStep>
				<TestStep Name="IsProfileSupported">
					<CallTestFunction Name="DeviceAndModuleProfileDefined">
						<Parameter>arrCurrentProfiles</Parameter>
						<Parameter>5003</Parameter>
						<Parameter>2011</Parameter>
						<OutParameter>bAtLeastOneModuleMatch</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>bAtLeastOneModuleMatch</Value1>
							<Value2>false</Value2>
							<GotoStep>END</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="GetObjectIndexInclOffset">
					<SetVariable Target="u16ObjectIndexInclOffset">#xFBF2</SetVariable>
					<WriteLine Id="5" Param0="u16ObjectIndexInclOffset" Level="Verbose">ObjectIndex '0x{0:X}' (module independent)</WriteLine>
				</TestStep>
				<TestStep Name="LoadDeviceObjectDictionary">
					<Description Id="6" Level="Verbose">Load 'online' object dictionary for testing.</Description>
					<GetObjectDictionary Target="odDeviceObjectdictionary">
						<DictionaryType>Online</DictionaryType>
					</GetObjectDictionary>
					<RaiseErrorOnFailure Id="7">VerifyObject : failed to load online object dictionary.</RaiseErrorOnFailure>
				</TestStep>
				<TestStep Name="CallCheckObjectDescription">
					<Description Id="8" Param0="u16ObjectIndexInclOffset" Level="Output">Verify the object description 0x{0:X4} 'Store Parameters Command'.</Description>
					<CallTestFunction Name="CheckObjectDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"online"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>"Store Parameters Command"</Parameter>
						<Parameter>null</Parameter>
						<Parameter>9</Parameter>
						<Parameter>-1</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<GotoStep>END</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="InitEntryBittOffset">
					<SetVariable Target="i32CurrentBitOffset">0</SetVariable>
				</TestStep>
				<TestStep Name="StartSi0">
					<Description Id="9" Level="Output">Start validate SubIndex0</Description>
					<WriteLine Id="10" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : Subindex '0x{0:X}.0'</WriteLine>
				</TestStep>
				<TestStep Name="CallSi0CheckEntryDescription">
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"online"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>0</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>null</Parameter>
						<Parameter>5</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>null</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>null</Parameter>
						<Parameter>null</Parameter>
						<Parameter>null</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>8</Parameter>
						<Parameter>i32CurrentBitOffset</Parameter>
						<Parameter>true</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="EndSi0">
					<SetVariable Target="i32CurrentBitOffset">16</SetVariable>
				</TestStep>
				<TestStep Name="StartSi1">
					<Description Id="11" Level="Output">Start validate SubIndex1</Description>
					<WriteLine Id="12" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : Subindex '0x{0:X}.1'</WriteLine>
				</TestStep>
				<TestStep Name="CallSi1CheckEntryDescription">
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"online"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>1</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>"Command"</Parameter>
						<Parameter>10</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>null</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>32</Parameter>
						<Parameter>i32CurrentBitOffset</Parameter>
						<Parameter>true</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="EndSi1">
					<SetVariable Target="i32CurrentBitOffset">i32CurrentBitOffset + 32</SetVariable>
				</TestStep>
				<TestStep Name="StartSi2">
					<Description Id="13" Level="Output">Start validate SubIndex2</Description>
					<WriteLine Id="14" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : Subindex '0x{0:X}.2'</WriteLine>
				</TestStep>
				<TestStep Name="CallSi2CheckEntryDescription">
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"online"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>2</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>"Status"</Parameter>
						<Parameter>5</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>null</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>8</Parameter>
						<Parameter>i32CurrentBitOffset</Parameter>
						<Parameter>true</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="EndSi2">
					<SetVariable Target="i32CurrentBitOffset">i32CurrentBitOffset + 8</SetVariable>
				</TestStep>
				<TestStep Name="StartSi3">
					<Description Id="15" Level="Output">Start validate SubIndex3</Description>
					<WriteLine Id="16" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : Subindex '0x{0:X}.3'</WriteLine>
				</TestStep>
				<TestStep Name="CallSi3CheckEntryDescription">
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"online"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>3</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>"Response"</Parameter>
						<Parameter>10</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>null</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>16</Parameter>
						<Parameter>i32CurrentBitOffset</Parameter>
						<Parameter>true</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="EndSi3">
					<SetVariable Target="i32CurrentBitOffset">i32CurrentBitOffset + 16</SetVariable>
				</TestStep>
				<TestStep Name="CheckReservedEntryRange_4_to_255">
					<Description Id="17" Level="Output">Start check reserved entry range 4 to 255</Description>
					<CallTestFunction Name="CheckReservedEntryRange">
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>4</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>odDeviceObjectdictionary</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="END">
					<Compare>
						<NotEqual>
							<Value1>bAtLeastOneModuleMatch</Value1>
							<Value2>true</Value2>
							<SkipCase Id="18">SKIP TEST(no module/channel supports the current profile)</SkipCase>
						</NotEqual>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bDEBUG</Value1>
							<Value2>true</Value2>
							<WriteLine Id="19" Param0="strResult" Level="Verbose">DEBUG | Result : '{0}'.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>strResult</Value1>
							<Value2>EmptyString</Value2>
							<ReturnSuccess Id="20">Test succeed</ReturnSuccess>
						</Equal>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>strResult</Value1>
							<Value2>EmptyString</Value2>
							<RaiseError Id="21"></RaiseError>
						</NotEqual>
					</Compare>
				</TestStep>
			</TestCase>
			<TestCase Name="offline | 0xFBF3 (Calculate Checksum Command)" CaseId="7">
				<Description>
					<PreCondition>- The device profile is 5003
- The module profile is 2011
- The submodule profile is 0</PreCondition>
					<Action>- Iterate over all offline defined modules/channels and if the PreCondition matches the following operations are done:
- Get the offline description of object 0xFBF3(+module specific offset) 'Calculate Checksum Command' and all entries
 Check:
    (Name)
    BitSize
    DataType
    Rx / Tx mappable
    Default Data
    MinData
    Flags       </Action>
					<PostCondition>Error if
- mandatory object / entry is not defined
- an optional object exists and the entries are invalid
- Object / entry description does not match with the specification</PostCondition>
					<ProposalForSolution>- Define the missing objects
- correct object / entry description</ProposalForSolution>
					<References>
						<Reference Specification="ETG.5003.2011"></Reference>
					</References>
					<Mandatory>true</Mandatory>
				</Description>
				<TestStep Name="InitResult">
					<SetVariable Target="strResult">EmptyString</SetVariable>
				</TestStep>
				<TestStep Name="CheckIfOdAvailable">
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Mailbox</Value1>
							<Value2>false</Value2>
							<SkipCase Id="1">DuT does not support mailbox.</SkipCase>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Mailbox.CoE</Value1>
							<Value2>false</Value2>
							<SkipCase Id="2">DuT does not support CoE.</SkipCase>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep>
					<GetObjectDictionary Target="odDeviceObjectdictionary">
						<DictionaryType>Offline</DictionaryType>
					</GetObjectDictionary>
					<SkipOnFailure Id="3">No offline object dictionary defined.</SkipOnFailure>
				</TestStep>
				<TestStep>
					<GetObjectList Count="u32Tmp" Target="odDeviceObjectdictionaryList" SourceDict="odDeviceObjectdictionary"></GetObjectList>
					<Compare>
						<Equal>
							<Value1>u32Tmp</Value1>
							<Value2>0</Value2>
							<SkipCase Id="4">No offline object dictionary defined.</SkipCase>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="InitAtLeastOneProfileMatch">
					<SetVariable Target="bAtLeastOneModuleMatch">false</SetVariable>
				</TestStep>
				<TestStep Name="GetCurrentProfileList">
					<SizeOf UInt32Var="u32Tmp">arrOfflineProfiles</SizeOf>
					<Compare>
						<Equal>
							<Value1>u32Tmp</Value1>
							<Value2>0</Value2>
							<CallTestFunction Name="GetCurrentProfileList">
								<Parameter>"offline"</Parameter>
								<Parameter>"SafeOP"</Parameter>
								<OutParameter>arrOfflineProfiles</OutParameter>
							</CallTestFunction>
						</Equal>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>u32Tmp</Value1>
							<Value2>0</Value2>
							<WriteLine Id="5" Param0="arrOfflineProfiles" Level="Verbose">Use previously created profile list ({0})</WriteLine>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep>
					<SizeOf UInt32Var="u32Tmp">arrOfflineProfiles</SizeOf>
				</TestStep>
				<TestStep>
					<InitArray TargetArray="arrCurrentProfiles" Length="u32Tmp"></InitArray>
				</TestStep>
				<TestStep>
					<CopyArray>
						<SourceArray>arrOfflineProfiles</SourceArray>
						<DestinationArray>arrCurrentProfiles</DestinationArray>
						<Length>u32Tmp</Length>
					</CopyArray>
				</TestStep>
				<TestStep Name="IsProfileSupported">
					<CallTestFunction Name="DeviceAndModuleProfileDefined">
						<Parameter>arrCurrentProfiles</Parameter>
						<Parameter>5003</Parameter>
						<Parameter>2011</Parameter>
						<OutParameter>bAtLeastOneModuleMatch</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>bAtLeastOneModuleMatch</Value1>
							<Value2>false</Value2>
							<GotoStep>END</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="GetObjectIndexInclOffset">
					<SetVariable Target="u16ObjectIndexInclOffset">#xFBF3</SetVariable>
					<WriteLine Id="6" Param0="u16ObjectIndexInclOffset" Level="Verbose">ObjectIndex '0x{0:X}' (module independent)</WriteLine>
				</TestStep>
				<TestStep Name="LoadDeviceObjectDictionary">
					<Description Id="7" Level="Verbose">Load 'offline' object dictionary for testing.</Description>
					<GetObjectDictionary Target="odDeviceObjectdictionary">
						<DictionaryType>Offline</DictionaryType>
					</GetObjectDictionary>
					<RaiseErrorOnFailure Id="8">VerifyObject : failed to load offline object dictionary.</RaiseErrorOnFailure>
				</TestStep>
				<TestStep Name="CallCheckObjectDescription">
					<Description Id="9" Param0="u16ObjectIndexInclOffset" Level="Output">Verify the object description 0x{0:X4} 'Calculate Checksum Command'.</Description>
					<CallTestFunction Name="CheckObjectDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"offline"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>"Calculate Checksum Command"</Parameter>
						<Parameter>null</Parameter>
						<Parameter>9</Parameter>
						<Parameter>-1</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<GotoStep>END</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="InitEntryBittOffset">
					<SetVariable Target="i32CurrentBitOffset">0</SetVariable>
				</TestStep>
				<TestStep Name="StartSi0">
					<Description Id="10" Level="Output">Start validate SubIndex0</Description>
					<WriteLine Id="11" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : Subindex '0x{0:X}.0'</WriteLine>
				</TestStep>
				<TestStep Name="CallSi0CheckEntryDescription">
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"offline"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>0</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>null</Parameter>
						<Parameter>5</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>null</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>null</Parameter>
						<Parameter>null</Parameter>
						<Parameter>null</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>8</Parameter>
						<Parameter>i32CurrentBitOffset</Parameter>
						<Parameter>true</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="EndSi0">
					<SetVariable Target="i32CurrentBitOffset">16</SetVariable>
				</TestStep>
				<TestStep Name="StartSi1">
					<Description Id="12" Level="Output">Start validate SubIndex1</Description>
					<WriteLine Id="13" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : Subindex '0x{0:X}.1'</WriteLine>
				</TestStep>
				<TestStep Name="CallSi1CheckEntryDescription">
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"offline"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>1</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>"Command"</Parameter>
						<Parameter>10</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>null</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>32</Parameter>
						<Parameter>i32CurrentBitOffset</Parameter>
						<Parameter>true</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="EndSi1">
					<SetVariable Target="i32CurrentBitOffset">i32CurrentBitOffset + 32</SetVariable>
				</TestStep>
				<TestStep Name="StartSi2">
					<Description Id="14" Level="Output">Start validate SubIndex2</Description>
					<WriteLine Id="15" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : Subindex '0x{0:X}.2'</WriteLine>
				</TestStep>
				<TestStep Name="CallSi2CheckEntryDescription">
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"offline"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>2</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>"Status"</Parameter>
						<Parameter>5</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>null</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>8</Parameter>
						<Parameter>i32CurrentBitOffset</Parameter>
						<Parameter>true</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="EndSi2">
					<SetVariable Target="i32CurrentBitOffset">i32CurrentBitOffset + 8</SetVariable>
				</TestStep>
				<TestStep Name="StartSi3">
					<Description Id="16" Level="Output">Start validate SubIndex3</Description>
					<WriteLine Id="17" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : Subindex '0x{0:X}.3'</WriteLine>
				</TestStep>
				<TestStep Name="CallSi3CheckEntryDescription">
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"offline"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>3</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>"Response"</Parameter>
						<Parameter>10</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>null</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>i32CurrentBitOffset</Parameter>
						<Parameter>true</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="EndSi3">
					<SetVariable Target="i32CurrentBitOffset">-1</SetVariable>
				</TestStep>
				<TestStep Name="CheckReservedEntryRange_4_to_255">
					<Description Id="18" Level="Output">Start check reserved entry range 4 to 255</Description>
					<CallTestFunction Name="CheckReservedEntryRange">
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>4</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>odDeviceObjectdictionary</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="END">
					<Compare>
						<NotEqual>
							<Value1>bAtLeastOneModuleMatch</Value1>
							<Value2>true</Value2>
							<SkipCase Id="19">SKIP TEST(no module/channel supports the current profile)</SkipCase>
						</NotEqual>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bDEBUG</Value1>
							<Value2>true</Value2>
							<WriteLine Id="20" Param0="strResult" Level="Verbose">DEBUG | Result : '{0}'.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>strResult</Value1>
							<Value2>EmptyString</Value2>
							<ReturnSuccess Id="21">Test succeed</ReturnSuccess>
						</Equal>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>strResult</Value1>
							<Value2>EmptyString</Value2>
							<RaiseError Id="22"></RaiseError>
						</NotEqual>
					</Compare>
				</TestStep>
			</TestCase>
			<TestCase Name="online | 0xFBF3 (Calculate Checksum Command)" CaseId="8">
				<Description>
					<PreCondition>- The device profile is 5003
- The module profile is 2011
- The submodule profile is 0</PreCondition>
					<Action>- Iterate over all online defined modules/channels and if the PreCondition matches the following operations are done:
- Get the online description of object 0xFBF3(+module specific offset) 'Calculate Checksum Command' and all entries
 Check:
    (Name)
    BitSize
    DataType
    Rx / Tx mappable
    Default Data
    MinData
    Flags       </Action>
					<PostCondition>Error if
- mandatory object / entry is not defined
- an optional object exists and the entries are invalid
- Object / entry description does not match with the specification</PostCondition>
					<ProposalForSolution>- Define the missing objects
- correct object / entry description</ProposalForSolution>
					<References>
						<Reference Specification="ETG.5003.2011"></Reference>
					</References>
					<Mandatory>true</Mandatory>
				</Description>
				<TestStep Name="InitResult">
					<SetVariable Target="strResult">EmptyString</SetVariable>
				</TestStep>
				<TestStep Name="CheckIfOdAvailable">
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Mailbox</Value1>
							<Value2>false</Value2>
							<SkipCase Id="1">DuT does not support mailbox.</SkipCase>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Mailbox.CoE</Value1>
							<Value2>false</Value2>
							<SkipCase Id="2">DuT does not support CoE.</SkipCase>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Mailbox.CoE.SdoInfo</Value1>
							<Value2>false</Value2>
							<SkipCase Id="3">DuT does not support SDO Info.</SkipCase>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="InitAtLeastOneProfileMatch">
					<SetVariable Target="bAtLeastOneModuleMatch">false</SetVariable>
				</TestStep>
				<TestStep Name="GetCurrentProfileList">
					<SizeOf UInt32Var="u32Tmp">arrOnlineProfiles</SizeOf>
					<Compare>
						<Equal>
							<Value1>u32Tmp</Value1>
							<Value2>0</Value2>
							<CallTestFunction Name="GetCurrentProfileList">
								<Parameter>"online"</Parameter>
								<Parameter>"SafeOP"</Parameter>
								<OutParameter>arrOnlineProfiles</OutParameter>
							</CallTestFunction>
						</Equal>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>u32Tmp</Value1>
							<Value2>0</Value2>
							<WriteLine Id="4" Param0="arrOnlineProfiles" Level="Verbose">Use previously created profile list ({0})</WriteLine>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep>
					<SizeOf UInt32Var="u32Tmp">arrOnlineProfiles</SizeOf>
				</TestStep>
				<TestStep>
					<InitArray TargetArray="arrCurrentProfiles" Length="u32Tmp"></InitArray>
				</TestStep>
				<TestStep>
					<CopyArray>
						<SourceArray>arrOnlineProfiles</SourceArray>
						<DestinationArray>arrCurrentProfiles</DestinationArray>
						<Length>u32Tmp</Length>
					</CopyArray>
				</TestStep>
				<TestStep Name="IsProfileSupported">
					<CallTestFunction Name="DeviceAndModuleProfileDefined">
						<Parameter>arrCurrentProfiles</Parameter>
						<Parameter>5003</Parameter>
						<Parameter>2011</Parameter>
						<OutParameter>bAtLeastOneModuleMatch</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>bAtLeastOneModuleMatch</Value1>
							<Value2>false</Value2>
							<GotoStep>END</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="GetObjectIndexInclOffset">
					<SetVariable Target="u16ObjectIndexInclOffset">#xFBF3</SetVariable>
					<WriteLine Id="5" Param0="u16ObjectIndexInclOffset" Level="Verbose">ObjectIndex '0x{0:X}' (module independent)</WriteLine>
				</TestStep>
				<TestStep Name="LoadDeviceObjectDictionary">
					<Description Id="6" Level="Verbose">Load 'online' object dictionary for testing.</Description>
					<GetObjectDictionary Target="odDeviceObjectdictionary">
						<DictionaryType>Online</DictionaryType>
					</GetObjectDictionary>
					<RaiseErrorOnFailure Id="7">VerifyObject : failed to load online object dictionary.</RaiseErrorOnFailure>
				</TestStep>
				<TestStep Name="CallCheckObjectDescription">
					<Description Id="8" Param0="u16ObjectIndexInclOffset" Level="Output">Verify the object description 0x{0:X4} 'Calculate Checksum Command'.</Description>
					<CallTestFunction Name="CheckObjectDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"online"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>"Calculate Checksum Command"</Parameter>
						<Parameter>null</Parameter>
						<Parameter>9</Parameter>
						<Parameter>-1</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<GotoStep>END</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="InitEntryBittOffset">
					<SetVariable Target="i32CurrentBitOffset">0</SetVariable>
				</TestStep>
				<TestStep Name="StartSi0">
					<Description Id="9" Level="Output">Start validate SubIndex0</Description>
					<WriteLine Id="10" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : Subindex '0x{0:X}.0'</WriteLine>
				</TestStep>
				<TestStep Name="CallSi0CheckEntryDescription">
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"online"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>0</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>null</Parameter>
						<Parameter>5</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>null</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>null</Parameter>
						<Parameter>null</Parameter>
						<Parameter>null</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>8</Parameter>
						<Parameter>i32CurrentBitOffset</Parameter>
						<Parameter>true</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="EndSi0">
					<SetVariable Target="i32CurrentBitOffset">16</SetVariable>
				</TestStep>
				<TestStep Name="StartSi1">
					<Description Id="11" Level="Output">Start validate SubIndex1</Description>
					<WriteLine Id="12" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : Subindex '0x{0:X}.1'</WriteLine>
				</TestStep>
				<TestStep Name="CallSi1CheckEntryDescription">
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"online"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>1</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>"Command"</Parameter>
						<Parameter>10</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>null</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>32</Parameter>
						<Parameter>i32CurrentBitOffset</Parameter>
						<Parameter>true</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="EndSi1">
					<SetVariable Target="i32CurrentBitOffset">i32CurrentBitOffset + 32</SetVariable>
				</TestStep>
				<TestStep Name="StartSi2">
					<Description Id="13" Level="Output">Start validate SubIndex2</Description>
					<WriteLine Id="14" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : Subindex '0x{0:X}.2'</WriteLine>
				</TestStep>
				<TestStep Name="CallSi2CheckEntryDescription">
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"online"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>2</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>"Status"</Parameter>
						<Parameter>5</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>null</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>8</Parameter>
						<Parameter>i32CurrentBitOffset</Parameter>
						<Parameter>true</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="EndSi2">
					<SetVariable Target="i32CurrentBitOffset">i32CurrentBitOffset + 8</SetVariable>
				</TestStep>
				<TestStep Name="StartSi3">
					<Description Id="15" Level="Output">Start validate SubIndex3</Description>
					<WriteLine Id="16" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : Subindex '0x{0:X}.3'</WriteLine>
				</TestStep>
				<TestStep Name="CallSi3CheckEntryDescription">
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"online"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>3</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>"Response"</Parameter>
						<Parameter>10</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>null</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>i32CurrentBitOffset</Parameter>
						<Parameter>true</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="EndSi3">
					<SetVariable Target="i32CurrentBitOffset">-1</SetVariable>
				</TestStep>
				<TestStep Name="CheckReservedEntryRange_4_to_255">
					<Description Id="17" Level="Output">Start check reserved entry range 4 to 255</Description>
					<CallTestFunction Name="CheckReservedEntryRange">
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>4</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>odDeviceObjectdictionary</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="END">
					<Compare>
						<NotEqual>
							<Value1>bAtLeastOneModuleMatch</Value1>
							<Value2>true</Value2>
							<SkipCase Id="18">SKIP TEST(no module/channel supports the current profile)</SkipCase>
						</NotEqual>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bDEBUG</Value1>
							<Value2>true</Value2>
							<WriteLine Id="19" Param0="strResult" Level="Verbose">DEBUG | Result : '{0}'.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>strResult</Value1>
							<Value2>EmptyString</Value2>
							<ReturnSuccess Id="20">Test succeed</ReturnSuccess>
						</Equal>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>strResult</Value1>
							<Value2>EmptyString</Value2>
							<RaiseError Id="21"></RaiseError>
						</NotEqual>
					</Compare>
				</TestStep>
			</TestCase>
			<TestCase Name="offline | 0xFBF4 (Load Parameters Command)" CaseId="9">
				<Description>
					<PreCondition>- The device profile is 5003
- The module profile is 2011
- The submodule profile is 0</PreCondition>
					<Action>- Iterate over all offline defined modules/channels and if the PreCondition matches the following operations are done:
- Get the offline description of object 0xFBF4(+module specific offset) 'Load Parameters Command' and all entries
 Check:
    (Name)
    BitSize
    DataType
    Rx / Tx mappable
    Default Data
    MinData
    Flags       </Action>
					<PostCondition>Error if
- mandatory object / entry is not defined
- an optional object exists and the entries are invalid
- Object / entry description does not match with the specification</PostCondition>
					<ProposalForSolution>- Define the missing objects
- correct object / entry description</ProposalForSolution>
					<References>
						<Reference Specification="ETG.5003.2011"></Reference>
					</References>
					<Mandatory>true</Mandatory>
				</Description>
				<TestStep Name="InitResult">
					<SetVariable Target="strResult">EmptyString</SetVariable>
				</TestStep>
				<TestStep Name="CheckIfOdAvailable">
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Mailbox</Value1>
							<Value2>false</Value2>
							<SkipCase Id="1">DuT does not support mailbox.</SkipCase>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Mailbox.CoE</Value1>
							<Value2>false</Value2>
							<SkipCase Id="2">DuT does not support CoE.</SkipCase>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep>
					<GetObjectDictionary Target="odDeviceObjectdictionary">
						<DictionaryType>Offline</DictionaryType>
					</GetObjectDictionary>
					<SkipOnFailure Id="3">No offline object dictionary defined.</SkipOnFailure>
				</TestStep>
				<TestStep>
					<GetObjectList Count="u32Tmp" Target="odDeviceObjectdictionaryList" SourceDict="odDeviceObjectdictionary"></GetObjectList>
					<Compare>
						<Equal>
							<Value1>u32Tmp</Value1>
							<Value2>0</Value2>
							<SkipCase Id="4">No offline object dictionary defined.</SkipCase>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="InitAtLeastOneProfileMatch">
					<SetVariable Target="bAtLeastOneModuleMatch">false</SetVariable>
				</TestStep>
				<TestStep Name="GetCurrentProfileList">
					<SizeOf UInt32Var="u32Tmp">arrOfflineProfiles</SizeOf>
					<Compare>
						<Equal>
							<Value1>u32Tmp</Value1>
							<Value2>0</Value2>
							<CallTestFunction Name="GetCurrentProfileList">
								<Parameter>"offline"</Parameter>
								<Parameter>"SafeOP"</Parameter>
								<OutParameter>arrOfflineProfiles</OutParameter>
							</CallTestFunction>
						</Equal>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>u32Tmp</Value1>
							<Value2>0</Value2>
							<WriteLine Id="5" Param0="arrOfflineProfiles" Level="Verbose">Use previously created profile list ({0})</WriteLine>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep>
					<SizeOf UInt32Var="u32Tmp">arrOfflineProfiles</SizeOf>
				</TestStep>
				<TestStep>
					<InitArray TargetArray="arrCurrentProfiles" Length="u32Tmp"></InitArray>
				</TestStep>
				<TestStep>
					<CopyArray>
						<SourceArray>arrOfflineProfiles</SourceArray>
						<DestinationArray>arrCurrentProfiles</DestinationArray>
						<Length>u32Tmp</Length>
					</CopyArray>
				</TestStep>
				<TestStep Name="IsProfileSupported">
					<CallTestFunction Name="DeviceAndModuleProfileDefined">
						<Parameter>arrCurrentProfiles</Parameter>
						<Parameter>5003</Parameter>
						<Parameter>2011</Parameter>
						<OutParameter>bAtLeastOneModuleMatch</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>bAtLeastOneModuleMatch</Value1>
							<Value2>false</Value2>
							<GotoStep>END</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="GetObjectIndexInclOffset">
					<SetVariable Target="u16ObjectIndexInclOffset">#xFBF4</SetVariable>
					<WriteLine Id="6" Param0="u16ObjectIndexInclOffset" Level="Verbose">ObjectIndex '0x{0:X}' (module independent)</WriteLine>
				</TestStep>
				<TestStep Name="LoadDeviceObjectDictionary">
					<Description Id="7" Level="Verbose">Load 'offline' object dictionary for testing.</Description>
					<GetObjectDictionary Target="odDeviceObjectdictionary">
						<DictionaryType>Offline</DictionaryType>
					</GetObjectDictionary>
					<RaiseErrorOnFailure Id="8">VerifyObject : failed to load offline object dictionary.</RaiseErrorOnFailure>
				</TestStep>
				<TestStep Name="CallCheckObjectDescription">
					<Description Id="9" Param0="u16ObjectIndexInclOffset" Level="Output">Verify the object description 0x{0:X4} 'Load Parameters Command'.</Description>
					<CallTestFunction Name="CheckObjectDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"offline"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>"Load Parameters Command"</Parameter>
						<Parameter>null</Parameter>
						<Parameter>9</Parameter>
						<Parameter>-1</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<GotoStep>END</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="InitEntryBittOffset">
					<SetVariable Target="i32CurrentBitOffset">0</SetVariable>
				</TestStep>
				<TestStep Name="StartSi0">
					<Description Id="10" Level="Output">Start validate SubIndex0</Description>
					<WriteLine Id="11" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : Subindex '0x{0:X}.0'</WriteLine>
				</TestStep>
				<TestStep Name="CallSi0CheckEntryDescription">
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"offline"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>0</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>null</Parameter>
						<Parameter>5</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>null</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>null</Parameter>
						<Parameter>null</Parameter>
						<Parameter>null</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>8</Parameter>
						<Parameter>i32CurrentBitOffset</Parameter>
						<Parameter>true</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="EndSi0">
					<SetVariable Target="i32CurrentBitOffset">16</SetVariable>
				</TestStep>
				<TestStep Name="StartSi1">
					<Description Id="12" Level="Output">Start validate SubIndex1</Description>
					<WriteLine Id="13" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : Subindex '0x{0:X}.1'</WriteLine>
				</TestStep>
				<TestStep Name="CallSi1CheckEntryDescription">
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"offline"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>1</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>"Command"</Parameter>
						<Parameter>10</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>null</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>32</Parameter>
						<Parameter>i32CurrentBitOffset</Parameter>
						<Parameter>true</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="EndSi1">
					<SetVariable Target="i32CurrentBitOffset">i32CurrentBitOffset + 32</SetVariable>
				</TestStep>
				<TestStep Name="StartSi2">
					<Description Id="14" Level="Output">Start validate SubIndex2</Description>
					<WriteLine Id="15" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : Subindex '0x{0:X}.2'</WriteLine>
				</TestStep>
				<TestStep Name="CallSi2CheckEntryDescription">
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"offline"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>2</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>"Status"</Parameter>
						<Parameter>5</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>null</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>8</Parameter>
						<Parameter>i32CurrentBitOffset</Parameter>
						<Parameter>true</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="EndSi2">
					<SetVariable Target="i32CurrentBitOffset">i32CurrentBitOffset + 8</SetVariable>
				</TestStep>
				<TestStep Name="StartSi3">
					<Description Id="16" Level="Output">Start validate SubIndex3</Description>
					<WriteLine Id="17" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : Subindex '0x{0:X}.3'</WriteLine>
				</TestStep>
				<TestStep Name="CallSi3CheckEntryDescription">
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"offline"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>3</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>"Response"</Parameter>
						<Parameter>10</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>null</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>16</Parameter>
						<Parameter>i32CurrentBitOffset</Parameter>
						<Parameter>true</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="EndSi3">
					<SetVariable Target="i32CurrentBitOffset">i32CurrentBitOffset + 16</SetVariable>
				</TestStep>
				<TestStep Name="CheckReservedEntryRange_4_to_255">
					<Description Id="18" Level="Output">Start check reserved entry range 4 to 255</Description>
					<CallTestFunction Name="CheckReservedEntryRange">
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>4</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>odDeviceObjectdictionary</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="END">
					<Compare>
						<NotEqual>
							<Value1>bAtLeastOneModuleMatch</Value1>
							<Value2>true</Value2>
							<SkipCase Id="19">SKIP TEST(no module/channel supports the current profile)</SkipCase>
						</NotEqual>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bDEBUG</Value1>
							<Value2>true</Value2>
							<WriteLine Id="20" Param0="strResult" Level="Verbose">DEBUG | Result : '{0}'.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>strResult</Value1>
							<Value2>EmptyString</Value2>
							<ReturnSuccess Id="21">Test succeed</ReturnSuccess>
						</Equal>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>strResult</Value1>
							<Value2>EmptyString</Value2>
							<RaiseError Id="22"></RaiseError>
						</NotEqual>
					</Compare>
				</TestStep>
			</TestCase>
			<TestCase Name="online | 0xFBF4 (Load Parameters Command)" CaseId="10">
				<Description>
					<PreCondition>- The device profile is 5003
- The module profile is 2011
- The submodule profile is 0</PreCondition>
					<Action>- Iterate over all online defined modules/channels and if the PreCondition matches the following operations are done:
- Get the online description of object 0xFBF4(+module specific offset) 'Load Parameters Command' and all entries
 Check:
    (Name)
    BitSize
    DataType
    Rx / Tx mappable
    Default Data
    MinData
    Flags       </Action>
					<PostCondition>Error if
- mandatory object / entry is not defined
- an optional object exists and the entries are invalid
- Object / entry description does not match with the specification</PostCondition>
					<ProposalForSolution>- Define the missing objects
- correct object / entry description</ProposalForSolution>
					<References>
						<Reference Specification="ETG.5003.2011"></Reference>
					</References>
					<Mandatory>true</Mandatory>
				</Description>
				<TestStep Name="InitResult">
					<SetVariable Target="strResult">EmptyString</SetVariable>
				</TestStep>
				<TestStep Name="CheckIfOdAvailable">
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Mailbox</Value1>
							<Value2>false</Value2>
							<SkipCase Id="1">DuT does not support mailbox.</SkipCase>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Mailbox.CoE</Value1>
							<Value2>false</Value2>
							<SkipCase Id="2">DuT does not support CoE.</SkipCase>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Mailbox.CoE.SdoInfo</Value1>
							<Value2>false</Value2>
							<SkipCase Id="3">DuT does not support SDO Info.</SkipCase>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="InitAtLeastOneProfileMatch">
					<SetVariable Target="bAtLeastOneModuleMatch">false</SetVariable>
				</TestStep>
				<TestStep Name="GetCurrentProfileList">
					<SizeOf UInt32Var="u32Tmp">arrOnlineProfiles</SizeOf>
					<Compare>
						<Equal>
							<Value1>u32Tmp</Value1>
							<Value2>0</Value2>
							<CallTestFunction Name="GetCurrentProfileList">
								<Parameter>"online"</Parameter>
								<Parameter>"SafeOP"</Parameter>
								<OutParameter>arrOnlineProfiles</OutParameter>
							</CallTestFunction>
						</Equal>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>u32Tmp</Value1>
							<Value2>0</Value2>
							<WriteLine Id="4" Param0="arrOnlineProfiles" Level="Verbose">Use previously created profile list ({0})</WriteLine>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep>
					<SizeOf UInt32Var="u32Tmp">arrOnlineProfiles</SizeOf>
				</TestStep>
				<TestStep>
					<InitArray TargetArray="arrCurrentProfiles" Length="u32Tmp"></InitArray>
				</TestStep>
				<TestStep>
					<CopyArray>
						<SourceArray>arrOnlineProfiles</SourceArray>
						<DestinationArray>arrCurrentProfiles</DestinationArray>
						<Length>u32Tmp</Length>
					</CopyArray>
				</TestStep>
				<TestStep Name="IsProfileSupported">
					<CallTestFunction Name="DeviceAndModuleProfileDefined">
						<Parameter>arrCurrentProfiles</Parameter>
						<Parameter>5003</Parameter>
						<Parameter>2011</Parameter>
						<OutParameter>bAtLeastOneModuleMatch</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>bAtLeastOneModuleMatch</Value1>
							<Value2>false</Value2>
							<GotoStep>END</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="GetObjectIndexInclOffset">
					<SetVariable Target="u16ObjectIndexInclOffset">#xFBF4</SetVariable>
					<WriteLine Id="5" Param0="u16ObjectIndexInclOffset" Level="Verbose">ObjectIndex '0x{0:X}' (module independent)</WriteLine>
				</TestStep>
				<TestStep Name="LoadDeviceObjectDictionary">
					<Description Id="6" Level="Verbose">Load 'online' object dictionary for testing.</Description>
					<GetObjectDictionary Target="odDeviceObjectdictionary">
						<DictionaryType>Online</DictionaryType>
					</GetObjectDictionary>
					<RaiseErrorOnFailure Id="7">VerifyObject : failed to load online object dictionary.</RaiseErrorOnFailure>
				</TestStep>
				<TestStep Name="CallCheckObjectDescription">
					<Description Id="8" Param0="u16ObjectIndexInclOffset" Level="Output">Verify the object description 0x{0:X4} 'Load Parameters Command'.</Description>
					<CallTestFunction Name="CheckObjectDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"online"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>"Load Parameters Command"</Parameter>
						<Parameter>null</Parameter>
						<Parameter>9</Parameter>
						<Parameter>-1</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<GotoStep>END</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="InitEntryBittOffset">
					<SetVariable Target="i32CurrentBitOffset">0</SetVariable>
				</TestStep>
				<TestStep Name="StartSi0">
					<Description Id="9" Level="Output">Start validate SubIndex0</Description>
					<WriteLine Id="10" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : Subindex '0x{0:X}.0'</WriteLine>
				</TestStep>
				<TestStep Name="CallSi0CheckEntryDescription">
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"online"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>0</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>null</Parameter>
						<Parameter>5</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>null</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>null</Parameter>
						<Parameter>null</Parameter>
						<Parameter>null</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>8</Parameter>
						<Parameter>i32CurrentBitOffset</Parameter>
						<Parameter>true</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="EndSi0">
					<SetVariable Target="i32CurrentBitOffset">16</SetVariable>
				</TestStep>
				<TestStep Name="StartSi1">
					<Description Id="11" Level="Output">Start validate SubIndex1</Description>
					<WriteLine Id="12" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : Subindex '0x{0:X}.1'</WriteLine>
				</TestStep>
				<TestStep Name="CallSi1CheckEntryDescription">
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"online"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>1</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>"Command"</Parameter>
						<Parameter>10</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>null</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>32</Parameter>
						<Parameter>i32CurrentBitOffset</Parameter>
						<Parameter>true</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="EndSi1">
					<SetVariable Target="i32CurrentBitOffset">i32CurrentBitOffset + 32</SetVariable>
				</TestStep>
				<TestStep Name="StartSi2">
					<Description Id="13" Level="Output">Start validate SubIndex2</Description>
					<WriteLine Id="14" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : Subindex '0x{0:X}.2'</WriteLine>
				</TestStep>
				<TestStep Name="CallSi2CheckEntryDescription">
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"online"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>2</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>"Status"</Parameter>
						<Parameter>5</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>null</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>8</Parameter>
						<Parameter>i32CurrentBitOffset</Parameter>
						<Parameter>true</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="EndSi2">
					<SetVariable Target="i32CurrentBitOffset">i32CurrentBitOffset + 8</SetVariable>
				</TestStep>
				<TestStep Name="StartSi3">
					<Description Id="15" Level="Output">Start validate SubIndex3</Description>
					<WriteLine Id="16" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : Subindex '0x{0:X}.3'</WriteLine>
				</TestStep>
				<TestStep Name="CallSi3CheckEntryDescription">
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"online"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>3</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>"Response"</Parameter>
						<Parameter>10</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>null</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>16</Parameter>
						<Parameter>i32CurrentBitOffset</Parameter>
						<Parameter>true</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="EndSi3">
					<SetVariable Target="i32CurrentBitOffset">i32CurrentBitOffset + 16</SetVariable>
				</TestStep>
				<TestStep Name="CheckReservedEntryRange_4_to_255">
					<Description Id="17" Level="Output">Start check reserved entry range 4 to 255</Description>
					<CallTestFunction Name="CheckReservedEntryRange">
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>4</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>odDeviceObjectdictionary</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="END">
					<Compare>
						<NotEqual>
							<Value1>bAtLeastOneModuleMatch</Value1>
							<Value2>true</Value2>
							<SkipCase Id="18">SKIP TEST(no module/channel supports the current profile)</SkipCase>
						</NotEqual>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bDEBUG</Value1>
							<Value2>true</Value2>
							<WriteLine Id="19" Param0="strResult" Level="Verbose">DEBUG | Result : '{0}'.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>strResult</Value1>
							<Value2>EmptyString</Value2>
							<ReturnSuccess Id="20">Test succeed</ReturnSuccess>
						</Equal>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>strResult</Value1>
							<Value2>EmptyString</Value2>
							<RaiseError Id="21"></RaiseError>
						</NotEqual>
					</Compare>
				</TestStep>
			</TestCase>
		</TestGroup>
	</TestGroups>
</EtherCATTest>