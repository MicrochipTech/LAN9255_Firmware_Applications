<?xml version="1.0" encoding="UTF-8" standalone="yes"?><EtherCATTest Name="TF-2301 AL CoE Object Dictionary" xsi:noNamespaceSchemaLocation="EtherCATTest.xsd" SchemaVersion="1.0.31" TestId="8961" TestVersion="1.3.0" RealeaseState="Released" TestVendorId="1" Url="http://www.ethercat.org/en/conformance.html" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
	<Comment>Tests CoE object dictionary of the application layer. Refers to: ETG.1000.6</Comment>
	<History>
		<HistoryEntry Editor="O.H" TestVersion="1.0.2" Date="2009-10-09">Renamed to AL_OD_Test</HistoryEntry>
		<HistoryEntry Editor="O.H" TestVersion="1.0.3" Date="2010-01-10">Description type added.</HistoryEntry>
		<HistoryEntry Editor="O.H" TestVersion="1.0.3" Date="2010-01-10">Test case at 'General Offline Dictionary plausibility/Invalid Objects' deleted.</HistoryEntry>
		<HistoryEntry Editor="O.H" TestVersion="1.0.3" Date="2010-01-10">Test case at 'General Online Dictionary plausibility/Invalid Objects' deleted.</HistoryEntry>
		<HistoryEntry Editor="O.H." TestVersion="1.0.6" Date="2010-03-12">New 'EtherCATTestV1i0i2i8.xsd' assigned.</HistoryEntry>
		<HistoryEntry Editor="O.H." TestVersion="1.0.7" Date="2011-02-25" Id="EN_110225_1">Where: Reset function
Description: When no FMMUs are supported by the ESC (reg 0x04 = 0) the function did still try to reset one FMMU
Solution: skip resetting FMMUs when FMMU count = 0</HistoryEntry>
		<HistoryEntry Editor="O.H." TestVersion="1.0.8" Date="2011-03-15" Id="EN_110315">Schema V1.0.3 assigned</HistoryEntry>
		<HistoryEntry Editor="O.H." TestVersion="1.1.0" Date="2012-08-01" Id="EN_120801_1">Schema V1.0.9 assigned</HistoryEntry>
		<HistoryEntry Editor="O.H." TestVersion="1.1.0" Date="2012-08-01" Id="EN_120801_2">Where: Upload All Objects Subindex 0 test step 8
Reason: The test case does not evaluate a meaningful error message if a mailbox protocol error occurs.
Solution: Detailed error messages of the mailbox service are forwarded to the logger.</HistoryEntry>
		<HistoryEntry Editor="O.H." TestVersion="1.1.1" Date="2012-09-18" Id="EN_TF_2301_120918_1">Where: Test file:EcBaseFunctions added to use the unique Reset test function.</HistoryEntry>
		<HistoryEntry Editor="R.H." TestVersion="1.1.2" Date="2012-10-18" Id="EN_TF_2301_121018_1">Added test case "Compare offline and online dictionary" ([1][2])</HistoryEntry>
		<HistoryEntry Editor="R.H." TestVersion="1.1.4" Date="2012-10-19" Id="EN_TF_2301_121019_1">Update Parameter list of "VerifyObjectDescription" (LevelWarning added), EcBaseFunctions V.0.0.4</HistoryEntry>
		<HistoryEntry Editor="D.O." TestVersion="1.1.5" Date="2012-10-19" Id="EN_TF_2301_121019">Where: Test Group: CoE Communication Area: two test cases and corresponding functions added Rx and Tx Pdo Mapping in offline OD.</HistoryEntry>
		<HistoryEntry Editor="D.O." TestVersion="1.1.6" Date="2012-10-22" Id="EN_TF_2301_121022">Where: Test Group: CoE Communication Area: Default value bit size check changed -  bit size can be lower or equal as expected</HistoryEntry>
		<HistoryEntry Editor="D.O." TestVersion="1.1.8" Date="2012-11-06" Id="EN_TF_2301_121106">Where: Test Group: CoE Communication Area: Error Register test: switched expected object code value with data type value</HistoryEntry>
		<HistoryEntry Editor="D.O." TestVersion="1.1.11" Date="2013-03-01" Id="EN_TF_2301_130301">Where: Test Case Upload All Objects Subindex 0: Allowed abort codes not lead to a warning</HistoryEntry>
		<HistoryEntry Editor="D.O." TestVersion="1.1.12" Date="2013-03-18" Id="EN_TF_2301_130318">Where: Test Group CoE Communication Area: All descriptions revised and described in more detail</HistoryEntry>
		<HistoryEntry Editor="D.O." TestVersion="1.1.13" Date="2013-04-16" Id="EN_TF_2301_130416">Misspelling: "ofline" changed to "offline"</HistoryEntry>
		<HistoryEntry Editor="D.O." TestVersion="1.1.14" Date="2013-06-04" Id="EN_TF_2301_130604">CoE Communication Area: "VerifyObjectDescription" set Parameter "Dictionary Type" General Offline Dictionary plausibility: "CompareObjectDictionary" set Parameters "Dictionary Type"</HistoryEntry>
		<HistoryEntry Editor="D.O." TestVersion="1.1.15" Date="2013-06-04" Id="EN_TF_2301_130604_1">Changed Group name from "Compare offline and online dictionary" to  "Compare online to offline object dictionary"</HistoryEntry>
		<HistoryEntry Editor="D.O." TestVersion="1.1.16" Date="2013-06-10" Id="EN_TF_2301_130610">Transmit / Recieve PDO Mapping Offline Object Dictionary: Handled Error String Result for detailed error output</HistoryEntry>
		<HistoryEntry Editor="D.O." TestVersion="1.1.17" Date="2013-07-09" Id="EN_TF_2301_130709">Improved Error message of 'CheckPdoEntryDefaultValue'</HistoryEntry>
		<HistoryEntry Editor="O.H." TestVersion="1.1.18" Date="2013-08-07" Id="EN_TF_2301_130807">CoE Comunication Area: Flags:Category compare is skipped if the element is not existing. Changed in EcBaseFunctions.VerifyObjectDescription</HistoryEntry>
		<HistoryEntry Editor="O.H." TestVersion="1.1.19" Date="2014-03-06" Id="EN_TF_2301_140306">Global test variables added. Unused variables deleted.</HistoryEntry>
		<HistoryEntry Editor="O.H." TestVersion="1.1.120" Date="2014-04-28" Id="EN_TF_2301_140428">Review: duplicated test step names removed</HistoryEntry>
		<HistoryEntry Editor="R.H." TestVersion="1.1.21" Date="2014-07-02" Id="EN_TF_2301_140702">try to read the offline OD to check if the DuT provides an offline OD (The test variable "DeviceDescr.Dictionary" does not cover an external OD file)</HistoryEntry>
		<HistoryEntry Editor="R.H." TestVersion="1.1.22" Date="2014-07-18" Id="EN_TF_2301_140718">update the file path for "MandatoryObject.xml" (it is located in the subfolder "ObjectDcitionaries")</HistoryEntry>
		<HistoryEntry Editor="R.H." TestVersion="1.1.23" Date="2014-08-04" Id="EN_TF_2301_140804">skip compare bitlength for entries with a flexible bitlength</HistoryEntry>
		<HistoryEntry Editor="R.H." TestVersion="1.1.24" Date="2014-08-13" Id="EN_TF_2301_140813">VerifyObjectDescription:
- remove parameter "MaxSubIndex"</HistoryEntry>
		<HistoryEntry Editor="O.H." TestVersion="1.1.25" Date="2014-09-30" Id="EN_TF_2301_140930">Test Function CheckPdoData:
- int32Index and Int32SubIndex moved to function parameter</HistoryEntry>
		<HistoryEntry Editor="O.H." TestVersion="1.1.25" Date="2014-09-30" Id="EN_TF_2301_140930_1">Obsolete TestCases 'CoE Communication Area.Upload All Objects Subindex 0' and 'CoE Communication Area.Mandatory Objects'
- int32Index and Int32SubIndex moved to function parameter</HistoryEntry>
		<HistoryEntry Editor="O.H." TestVersion="1.1.26" Date="2015-09-02" Id="EN_TF_2301_150902" Type="Enhancement">Test schema version set to 1.0.23</HistoryEntry>
		<HistoryEntry Editor="O.H." TestVersion="1.1.27" Date="2016-02-16" Id="EN_TF_2301_160216" Type="Enhancement">Where: 2.2 Error Register Object Description
Reason: Error Register Object Description 0x1001: The test fails when the object is mappable. According to ETG.1000-6 the TX/RX-Mapping option is not defined.
Solution: Error Register 0x1001 is mappable in DS301. It also makes sense to map it to the process data. Comment submitted for ETG.1000-6 to add TX-Mappable = optional. 
Accept TX-Mapping = TRUE</HistoryEntry>
		<HistoryEntry Editor="B.L." TestVersion="1.1.28" Date="2016-02-17" Id="EN_TF_2301_160217" Type="Enhancement">Update to Schema version 1.0.24</HistoryEntry>
		<HistoryEntry Editor="O.H." TestVersion="1.1.29" Date="2016-04-25" Id="EN_TF_2301_160425" Type="Enhancement">Where: 2.3.: Manufacturer Hardware Version Object Description
Reason: Two names should be valid 'Manufacturer Hardware Version' and the short form 'Hardware Version'
Solution: Test case changed to allow both names case insensitive </HistoryEntry>
		<HistoryEntry Editor="F.H." TestVersion="1.1.30" Date="2016-07-05">Release version</HistoryEntry>
		<HistoryEntry Editor="R.H." TestVersion="1.2.0" Date="2017-05-16" Id="EN_TF_2301_170516" Type="Enhancement">Compare offline and online object dictionary : skip diagnosis history object (0x10F3) (exception : EX_160929_1)</HistoryEntry>
		<HistoryEntry Editor="B.L." TestVersion="1.2.1" Date="2018-09-14">Add output IDs and update Schema version to 1.0.31</HistoryEntry>
		<HistoryEntry Editor="R.H." TestVersion="1.2.2" Date="2018-12-13">add TFX-2301 tests:
Device Type Object (0x1000)
Error Register Object (0x1001)
Manufacturer Device Name Object (0x1008)
Manufacturer Hardware Version Object (0x1009)
Manufacturer Software Version Object (0x100A)
Identity Object (0x1018)
Error Setting Object (0x10F1)
Diagnosis History Object (0x10F3)
RxPDO Parameter (0x1400 .. 0x15FF)
TxPDO Parameter (0x1800 .. 0x19FF)
Sync Manager Communication Type Object (0x1C00)
Sync Manager PDO Assignment (0x1C10 .. 0x1C2F)
Sync Manager Parameter (0x1C30 - 0x1C4F)
Device Command (0xFB00 .. 0xFBFF)</HistoryEntry>
		<HistoryEntry Editor="R.H." TestVersion="1.2.4" Date="2019-01-24">handle SM[x].virtual in offline test cases for 0x1C00 and 0x1C1x</HistoryEntry>
		<HistoryEntry Editor="B.L." TestVersion="1.2.5" Date="2019-01-31">handle SM[x].virtual in online test case for 0x1C1x</HistoryEntry>
		<HistoryEntry Editor="R.H." TestVersion="1.2.6" Date="2019-02-01">test case for 0x1C1x: handle test executed indication in case of disabled objects, offline tests update SM increment</HistoryEntry>
		<HistoryEntry Editor="R.H." TestVersion="1.2.7" Date="2019-02-01">do not check 0x1C1x.x backup flags</HistoryEntry>
		<HistoryEntry Editor="R.H." TestVersion="1.2.8" Date="2019-03-31">allow setting flag for 0x1C3x.1
adapt mandatory condition for 0x1C3x.6/.5./.12</HistoryEntry>
	</History>
	<TestVariables>
		<TestVariable>
			<Name>backInitTimeout</Name>
			<Type>Int32</Type>
		</TestVariable>
		<TestVariable>
			<Name>boolFinishedCheck</Name>
			<Type>Bool</Type>
		</TestVariable>
		<TestVariable>
			<Name>bDEBUG</Name>
			<Type>Bool</Type>
			<DefaultValue>false</DefaultValue>
		</TestVariable>
		<TestVariable>
			<Name>uint16Errors</Name>
			<Type>UInt16</Type>
		</TestVariable>
		<TestVariable>
			<Name>preOPTimeout</Name>
			<Type>Int32</Type>
		</TestVariable>
	</TestVariables>
	<Variables>
		<Variable>
			<Name>a</Name>
			<Type>Bool</Type>
		</Variable>
		<Variable>
			<Name>abortCode</Name>
			<Type>UInt32</Type>
		</Variable>
		<Variable>
			<Name>abortMessage</Name>
			<Type>String</Type>
		</Variable>
		<Variable>
			<Name>access</Name>
			<Type>String</Type>
		</Variable>
		<Variable>
			<Name>AckFlag</Name>
			<Type>Bool</Type>
		</Variable>
		<Variable>
			<Name>aInputData</Name>
			<Type>ArrayOfBytes</Type>
		</Variable>
		<Variable>
			<Name>alControl</Name>
			<Type>UInt16</Type>
		</Variable>
		<Variable>
			<Name>alEventRequestReg</Name>
			<Type>Byte</Type>
		</Variable>
		<Variable>
			<Name>alEventRequestReg.SmActChg</Name>
			<Type>Bool</Type>
		</Variable>
		<Variable>
			<Name>allEnabledInputSm</Name>
			<Type>ArrayOfBytes</Type>
		</Variable>
		<Variable>
			<Name>allEnabledOutputSm</Name>
			<Type>ArrayOfBytes</Type>
		</Variable>
		<Variable>
			<Name>allEnabledPdSm</Name>
			<Type>ArrayOfBytes</Type>
		</Variable>
		<Variable>
			<Name>allEnabledSm</Name>
			<Type>ArrayOfBytes</Type>
		</Variable>
		<Variable>
			<Name>allInputSm</Name>
			<Type>ArrayOfBytes</Type>
		</Variable>
		<Variable>
			<Name>allOutputSm</Name>
			<Type>ArrayOfBytes</Type>
		</Variable>
		<Variable>
			<Name>allPdSm</Name>
			<Type>ArrayOfBytes</Type>
		</Variable>
		<Variable>
			<Name>allSm</Name>
			<Type>ArrayOfBytes</Type>
		</Variable>
		<Variable>
			<Name>allSmRegisters</Name>
			<Type>ArrayOfBytes</Type>
		</Variable>
		<Variable>
			<Name>alStatus</Name>
			<Type>UInt16</Type>
		</Variable>
		<Variable>
			<Name>alStatus.Code</Name>
			<Type>ArrayOfUInt16</Type>
		</Variable>
		<Variable>
			<Name>alStatusCode</Name>
			<Type>UInt16</Type>
		</Variable>
		<Variable>
			<Name>alStatusCode1</Name>
			<Type>UInt16</Type>
		</Variable>
		<Variable>
			<Name>alStatusCode2</Name>
			<Type>UInt16</Type>
		</Variable>
		<Variable>
			<Name>arrBytesDefData</Name>
			<Type>ArrayOfBytes</Type>
		</Variable>
		<Variable>
			<Name>assignActivate</Name>
			<Type>UInt16</Type>
		</Variable>
		<Variable>
			<Name>assignToEcat</Name>
			<Type>Byte</Type>
		</Variable>
		<Variable>
			<Name>assignToPdi</Name>
			<Type>Byte</Type>
		</Variable>
		<Variable>
			<Name>b</Name>
			<Type>Bool</Type>
		</Variable>
		<Variable>
			<Name>backInitTimeout</Name>
			<Type>Int32</Type>
		</Variable>
		<Variable>
			<Name>backSafeOPTimeout</Name>
			<Type>Int32</Type>
		</Variable>
		<Variable>
			<Name>bitSize</Name>
			<Type>Int32</Type>
		</Variable>
		<Variable>
			<Name>bMakeWdTestFail</Name>
			<Type>Bool</Type>
		</Variable>
		<Variable>
			<Name>bObjectEntryIsMandatory</Name>
			<Type>Bool</Type>
			<Comment>if true the object or entry shall be available (category 'm' or 'c' and the condition is fulfilled) (automatic generated variable, will be overwritten when generating new test)</Comment>
		</Variable>
		<Variable>
			<Name>bool</Name>
			<Type>Bool</Type>
		</Variable>
		<Variable>
			<Name>boolPdoObject</Name>
			<Type>Bool</Type>
		</Variable>
		<Variable>
			<Name>boolVar</Name>
			<Type>Bool</Type>
		</Variable>
		<Variable>
			<Name>bWarning</Name>
			<Type>Bool</Type>
		</Variable>
		<Variable>
			<Name>byte</Name>
			<Type>Byte</Type>
		</Variable>
		<Variable>
			<Name>byte_opModeNo</Name>
			<Type>Byte</Type>
		</Variable>
		<Variable>
			<Name>byteVar</Name>
			<Type>Byte</Type>
		</Variable>
		<Variable>
			<Name>byteVar1</Name>
			<Type>Byte</Type>
		</Variable>
		<Variable>
			<Name>c</Name>
			<Type>Bool</Type>
		</Variable>
		<Variable>
			<Name>cmpIndex</Name>
			<Type>UInt16</Type>
		</Variable>
		<Variable>
			<Name>cmpListIndex</Name>
			<Type>UInt16</Type>
		</Variable>
		<Variable>
			<Name>CoeComm.AccessInPreOP</Name>
			<Type>Int16</Type>
		</Variable>
		<Variable>
			<Name>CoeComm.bError</Name>
			<Type>Bool</Type>
		</Variable>
		<Variable>
			<Name>CoeComm.bObjectDefined</Name>
			<Type>Bool</Type>
		</Variable>
		<Variable>
			<Name>CoeComm.bResult</Name>
			<Type>Bool</Type>
		</Variable>
		<Variable>
			<Name>CoeComm.bTestExecuted</Name>
			<Type>Bool</Type>
		</Variable>
		<Variable>
			<Name>CoeComm.Dict</Name>
			<Type>ObjectDictionary</Type>
		</Variable>
		<Variable>
			<Name>CoeComm.DutSupportsDc</Name>
			<Type>Bool</Type>
		</Variable>
		<Variable>
			<Name>CoeComm.EntryCount</Name>
			<Type>UInt16</Type>
		</Variable>
		<Variable>
			<Name>CoeComm.Index</Name>
			<Type>UInt16</Type>
		</Variable>
		<Variable>
			<Name>CoeComm.InPdLength</Name>
			<Type>Int32</Type>
		</Variable>
		<Variable>
			<Name>CoeComm.IsMandatroy</Name>
			<Type>Bool</Type>
		</Variable>
		<Variable>
			<Name>CoeComm.ObjLoopIdx</Name>
			<Type>UInt16</Type>
		</Variable>
		<Variable>
			<Name>CoeComm.OutPdLength</Name>
			<Type>Int32</Type>
		</Variable>
		<Variable>
			<Name>CoeComm.PsTimeout</Name>
			<Type>Int32</Type>
		</Variable>
		<Variable>
			<Name>CoeComm.Result</Name>
			<Type>Int16</Type>
		</Variable>
		<Variable>
			<Name>CoeComm.TmpBool</Name>
			<Type>Bool</Type>
		</Variable>
		<Variable>
			<Name>CoeComm.TmpData</Name>
			<Type>Byte</Type>
		</Variable>
		<Variable>
			<Name>CoeComm.TmpDataArray</Name>
			<Type>ArrayOfBytes</Type>
		</Variable>
		<Variable>
			<Name>CoeComm.TmpName</Name>
			<Type>String</Type>
		</Variable>
		<Variable>
			<Name>CoeComm.TmpNames</Name>
			<Type>ArrayOfString</Type>
		</Variable>
		<Variable>
			<Name>count</Name>
			<Type>UInt32</Type>
		</Variable>
		<Variable>
			<Name>dcActivation</Name>
			<Type>Byte</Type>
		</Variable>
		<Variable>
			<Name>dcAvailable</Name>
			<Type>Bool</Type>
		</Variable>
		<Variable>
			<Name>dcSyncOut</Name>
			<Type>Bool</Type>
		</Variable>
		<Variable>
			<Name>dcSyncOutUnit</Name>
			<Type>Bool</Type>
		</Variable>
		<Variable>
			<Name>defaultPdLength</Name>
			<Type>UInt32</Type>
		</Variable>
		<Variable>
			<Name>defaultPdoLength</Name>
			<Type>UInt32</Type>
		</Variable>
		<Variable>
			<Name>defData</Name>
			<Type>ArrayOfBytes</Type>
		</Variable>
		<Variable>
			<Name>devEm</Name>
			<Type>Bool</Type>
		</Variable>
		<Variable>
			<Name>enabledInputSmCount</Name>
			<Type>Int32</Type>
		</Variable>
		<Variable>
			<Name>enabledOutputSmCount</Name>
			<Type>Int32</Type>
		</Variable>
		<Variable>
			<Name>enabledPdSmCount</Name>
			<Type>Int32</Type>
		</Variable>
		<Variable>
			<Name>enabledSmCount</Name>
			<Type>Int32</Type>
		</Variable>
		<Variable>
			<Name>errAck</Name>
			<Type>Bool</Type>
		</Variable>
		<Variable>
			<Name>errorCount</Name>
			<Type>Int32</Type>
		</Variable>
		<Variable>
			<Name>errorList</Name>
			<Type>ArrayOfString</Type>
		</Variable>
		<Variable>
			<Name>escFeatures</Name>
			<Type>Byte</Type>
		</Variable>
		<Variable>
			<Name>escRevision</Name>
			<Type>Byte</Type>
		</Variable>
		<Variable>
			<Name>escType</Name>
			<Type>Byte</Type>
		</Variable>
		<Variable>
			<Name>EsmTimeout</Name>
			<Type>Int32</Type>
		</Variable>
		<Variable>
			<Name>expectedAlStatusCode</Name>
			<Type>UInt16</Type>
		</Variable>
		<Variable>
			<Name>expectedAlStatusCode2</Name>
			<Type>UInt16</Type>
		</Variable>
		<Variable>
			<Name>expectedAlStatusCode3</Name>
			<Type>UInt16</Type>
		</Variable>
		<Variable>
			<Name>faInputData</Name>
			<Type>ArrayOfBytes</Type>
		</Variable>
		<Variable>
			<Name>falControl</Name>
			<Type>UInt16</Type>
		</Variable>
		<Variable>
			<Name>falControlErrorFlag</Name>
			<Type>Bool</Type>
		</Variable>
		<Variable>
			<Name>falStatus</Name>
			<Type>UInt16</Type>
		</Variable>
		<Variable>
			<Name>falStatusCode</Name>
			<Type>UInt16</Type>
		</Variable>
		<Variable>
			<Name>farraySize</Name>
			<Type>Byte</Type>
		</Variable>
		<Variable>
			<Name>fassignActivate</Name>
			<Type>UInt16</Type>
		</Variable>
		<Variable>
			<Name>fbyteVar</Name>
			<Type>Byte</Type>
		</Variable>
		<Variable>
			<Name>fescFeatureReg</Name>
			<Type>Byte</Type>
		</Variable>
		<Variable>
			<Name>fexpectedAlStatusCode2</Name>
			<Type>UInt16</Type>
		</Variable>
		<Variable>
			<Name>fexpectedAlStatusCode3</Name>
			<Type>UInt16</Type>
		</Variable>
		<Variable>
			<Name>ffirstDcOpMode</Name>
			<Type>Int32</Type>
		</Variable>
		<Variable>
			<Name>ffirstDcOpModeNo</Name>
			<Type>Byte</Type>
		</Variable>
		<Variable>
			<Name>firstInputSm</Name>
			<Type>Byte</Type>
		</Variable>
		<Variable>
			<Name>firstOutputSm</Name>
			<Type>Byte</Type>
		</Variable>
		<Variable>
			<Name>fmmuClearData</Name>
			<Type>ArrayOfBytes</Type>
		</Variable>
		<Variable>
			<Name>fmmuSync</Name>
			<Type>Register</Type>
		</Variable>
		<Variable>
			<Name>fopModeCounter</Name>
			<Type>Byte</Type>
		</Variable>
		<Variable>
			<Name>fpdiCntrlSm</Name>
			<Type>Byte</Type>
		</Variable>
		<Variable>
			<Name>fpdiCntrlSmActivation</Name>
			<Type>Bool</Type>
		</Variable>
		<Variable>
			<Name>fpdiControlSm0</Name>
			<Type>Byte</Type>
		</Variable>
		<Variable>
			<Name>fpdiControlSm1</Name>
			<Type>Byte</Type>
		</Variable>
		<Variable>
			<Name>fpdiControlSm2</Name>
			<Type>Byte</Type>
		</Variable>
		<Variable>
			<Name>fpdiControlSm3</Name>
			<Type>Byte</Type>
		</Variable>
		<Variable>
			<Name>fsm0Deactivated</Name>
			<Type>Bool</Type>
		</Variable>
		<Variable>
			<Name>fsm1Deactivated</Name>
			<Type>Bool</Type>
		</Variable>
		<Variable>
			<Name>fsm2Deactivated</Name>
			<Type>Bool</Type>
		</Variable>
		<Variable>
			<Name>fsm3Deactivated</Name>
			<Type>Bool</Type>
		</Variable>
		<Variable>
			<Name>fuInt32Var</Name>
			<Type>UInt32</Type>
		</Variable>
		<Variable>
			<Name>i32CurrentBitOffset</Name>
			<Type>Int32</Type>
			<Comment>Bittoffset of the current entry (automatic generated variable, will be overwritten when generating new test)</Comment>
		</Variable>
		<Variable>
			<Name>index</Name>
			<Type>Int32</Type>
		</Variable>
		<Variable>
			<Name>index32</Name>
			<Type>Int32</Type>
		</Variable>
		<Variable>
			<Name>index8</Name>
			<Type>Byte</Type>
		</Variable>
		<Variable>
			<Name>indexCount</Name>
			<Type>UInt16</Type>
		</Variable>
		<Variable>
			<Name>initArray</Name>
			<Type>ArrayOfBytes</Type>
		</Variable>
		<Variable>
			<Name>inputSm</Name>
			<Type>Byte</Type>
		</Variable>
		<Variable>
			<Name>inputSmCount</Name>
			<Type>Int32</Type>
		</Variable>
		<Variable>
			<Name>inputSmEnable</Name>
			<Type>Bool</Type>
		</Variable>
		<Variable>
			<Name>inputSyncMan</Name>
			<Type>Byte</Type>
		</Variable>
		<Variable>
			<Name>inputSyncManDisabled</Name>
			<Type>Bool</Type>
		</Variable>
		<Variable>
			<Name>int32</Name>
			<Type>Int32</Type>
		</Variable>
		<Variable>
			<Name>int32CompareResult</Name>
			<Type>Int32</Type>
		</Variable>
		<Variable>
			<Name>int32DTListCounter</Name>
			<Type>Int32</Type>
		</Variable>
		<Variable>
			<Name>int32Index</Name>
			<Type>Int32</Type>
		</Variable>
		<Variable>
			<Name>int32ListCount</Name>
			<Type>Int32</Type>
		</Variable>
		<Variable>
			<Name>int32SubIndex</Name>
			<Type>Int32</Type>
		</Variable>
		<Variable>
			<Name>lastPdSm</Name>
			<Type>Byte</Type>
		</Variable>
		<Variable>
			<Name>listIndex</Name>
			<Type>UInt16</Type>
		</Variable>
		<Variable>
			<Name>mandatoryDict</Name>
			<Type>ObjectDictionary</Type>
		</Variable>
		<Variable>
			<Name>mbxProtocolSupported</Name>
			<Type>Bool</Type>
		</Variable>
		<Variable>
			<Name>mbxSm</Name>
			<Type>Byte</Type>
		</Variable>
		<Variable>
			<Name>ModuleIdent.Error</Name>
			<Type>Bool</Type>
		</Variable>
		<Variable>
			<Name>ModuleIdent.List</Name>
			<Type>ArrayOfInt32</Type>
		</Variable>
		<Variable>
			<Name>ModuleIdent.ListLength</Name>
			<Type>UInt32</Type>
		</Variable>
		<Variable>
			<Name>ModuleIdent.LoopCnt</Name>
			<Type>UInt32</Type>
		</Variable>
		<Variable>
			<Name>ModuleIdent.ModuleIdent</Name>
			<Type>Int32</Type>
		</Variable>
		<Variable>
			<Name>ModuleIdent.ModuleText</Name>
			<Type>String</Type>
		</Variable>
		<Variable>
			<Name>ModuleIdent.ModuleXPath</Name>
			<Type>String</Type>
		</Variable>
		<Variable>
			<Name>ModuleIdent.RegexMatch</Name>
			<Type>Bool</Type>
		</Variable>
		<Variable>
			<Name>ModuleProfile0x1000</Name>
			<Type>UInt16</Type>
		</Variable>
		<Variable>
			<Name>name</Name>
			<Type>String</Type>
		</Variable>
		<Variable>
			<Name>noEnabledInputSm</Name>
			<Type>Bool</Type>
		</Variable>
		<Variable>
			<Name>noEnabledOutputSm</Name>
			<Type>Bool</Type>
		</Variable>
		<Variable>
			<Name>noEnabledPdSm</Name>
			<Type>Bool</Type>
		</Variable>
		<Variable>
			<Name>noEnabledSm</Name>
			<Type>Bool</Type>
		</Variable>
		<Variable>
			<Name>noInputs</Name>
			<Type>Bool</Type>
		</Variable>
		<Variable>
			<Name>noInputSm</Name>
			<Type>Bool</Type>
		</Variable>
		<Variable>
			<Name>noOutputs</Name>
			<Type>Bool</Type>
		</Variable>
		<Variable>
			<Name>noOutputSm</Name>
			<Type>Bool</Type>
		</Variable>
		<Variable>
			<Name>noPdSm</Name>
			<Type>Bool</Type>
		</Variable>
		<Variable>
			<Name>nullByte</Name>
			<Type>Byte</Type>
		</Variable>
		<Variable>
			<Name>nullWord</Name>
			<Type>UInt16</Type>
		</Variable>
		<Variable>
			<Name>object.Index</Name>
			<Type>UInt16</Type>
		</Variable>
		<Variable>
			<Name>object.Name</Name>
			<Type>String</Type>
		</Variable>
		<Variable>
			<Name>objectList</Name>
			<Type>ObjectList</Type>
		</Variable>
		<Variable>
			<Name>odCurrObjectDictionary</Name>
			<Type>ObjectDictionary</Type>
		</Variable>
		<Variable>
			<Name>odDeviceObjectdictionary</Name>
			<Type>ObjectDictionary</Type>
			<Comment>Current device object dictionary to be tested. (automatic generated variable, will be overwritten when generating new test)</Comment>
		</Variable>
		<Variable>
			<Name>offlineDictionary</Name>
			<Type>ObjectDictionary</Type>
		</Variable>
		<Variable>
			<Name>offset</Name>
			<Type>Int32</Type>
		</Variable>
		<Variable>
			<Name>olCurrObjectList</Name>
			<Type>ObjectList</Type>
		</Variable>
		<Variable>
			<Name>onlineDictionary</Name>
			<Type>ObjectDictionary</Type>
		</Variable>
		<Variable>
			<Name>otherSm</Name>
			<Type>Byte</Type>
		</Variable>
		<Variable>
			<Name>outputSmCount</Name>
			<Type>Int32</Type>
		</Variable>
		<Variable>
			<Name>outputSmEnable</Name>
			<Type>Bool</Type>
		</Variable>
		<Variable>
			<Name>outputSyncMan</Name>
			<Type>Byte</Type>
		</Variable>
		<Variable>
			<Name>pdiCntrlSm</Name>
			<Type>Byte</Type>
		</Variable>
		<Variable>
			<Name>pdiCntrlSmActivation</Name>
			<Type>Bool</Type>
		</Variable>
		<Variable>
			<Name>pdiCtrl</Name>
			<Type>UInt16</Type>
		</Variable>
		<Variable>
			<Name>pdSm</Name>
			<Type>Byte</Type>
		</Variable>
		<Variable>
			<Name>pdSmCount</Name>
			<Type>Byte</Type>
		</Variable>
		<Variable>
			<Name>preOPTimeout</Name>
			<Type>Int32</Type>
		</Variable>
		<Variable>
			<Name>readInOp</Name>
			<Type>Bool</Type>
		</Variable>
		<Variable>
			<Name>readInPreOp</Name>
			<Type>Bool</Type>
		</Variable>
		<Variable>
			<Name>readInSafeOp</Name>
			<Type>Bool</Type>
		</Variable>
		<Variable>
			<Name>Result</Name>
			<Type>Bool</Type>
		</Variable>
		<Variable>
			<Name>safeOPTimeout</Name>
			<Type>Int32</Type>
		</Variable>
		<Variable>
			<Name>skipTestCase</Name>
			<Type>Bool</Type>
		</Variable>
		<Variable>
			<Name>SM0Length</Name>
			<Type>UInt16</Type>
		</Variable>
		<Variable>
			<Name>SM0StartAddress</Name>
			<Type>UInt16</Type>
		</Variable>
		<Variable>
			<Name>SM1Length</Name>
			<Type>UInt16</Type>
		</Variable>
		<Variable>
			<Name>SM1StartAddress</Name>
			<Type>UInt16</Type>
		</Variable>
		<Variable>
			<Name>sm2Control</Name>
			<Type>Byte</Type>
		</Variable>
		<Variable>
			<Name>sm2Deactivate</Name>
			<Type>Bool</Type>
		</Variable>
		<Variable>
			<Name>sm3Control</Name>
			<Type>Byte</Type>
		</Variable>
		<Variable>
			<Name>sm3Deactivate</Name>
			<Type>Bool</Type>
		</Variable>
		<Variable>
			<Name>smActivate</Name>
			<Type>Byte</Type>
		</Variable>
		<Variable>
			<Name>smActivateInt</Name>
			<Type>Bool</Type>
		</Variable>
		<Variable>
			<Name>smAdo</Name>
			<Type>UInt16</Type>
		</Variable>
		<Variable>
			<Name>smClearData</Name>
			<Type>ArrayOfBytes</Type>
		</Variable>
		<Variable>
			<Name>smControl</Name>
			<Type>Byte</Type>
		</Variable>
		<Variable>
			<Name>smControlType</Name>
			<Type>Byte</Type>
		</Variable>
		<Variable>
			<Name>smCount</Name>
			<Type>UInt32</Type>
		</Variable>
		<Variable>
			<Name>smDeactivate</Name>
			<Type>Bool</Type>
		</Variable>
		<Variable>
			<Name>smDirection</Name>
			<Type>Bool</Type>
		</Variable>
		<Variable>
			<Name>smDirection2Bit</Name>
			<Type>Byte</Type>
		</Variable>
		<Variable>
			<Name>smDisabled</Name>
			<Type>Bool</Type>
		</Variable>
		<Variable>
			<Name>smEnable</Name>
			<Type>Bool</Type>
		</Variable>
		<Variable>
			<Name>smNo</Name>
			<Type>Byte</Type>
		</Variable>
		<Variable>
			<Name>smNumber</Name>
			<Type>Byte</Type>
		</Variable>
		<Variable>
			<Name>smOperationMode2Bit</Name>
			<Type>Byte</Type>
		</Variable>
		<Variable>
			<Name>smSettings</Name>
			<Type>ArrayOfBytes</Type>
		</Variable>
		<Variable>
			<Name>smStartAddress</Name>
			<Type>UInt16</Type>
		</Variable>
		<Variable>
			<Name>smStartAddressWrong</Name>
			<Type>UInt16</Type>
		</Variable>
		<Variable>
			<Name>smText</Name>
			<Type>String</Type>
		</Variable>
		<Variable>
			<Name>smType</Name>
			<Type>String</Type>
		</Variable>
		<Variable>
			<Name>smVirtual</Name>
			<Type>Bool</Type>
		</Variable>
		<Variable>
			<Name>stateValue</Name>
			<Type>Int32</Type>
		</Variable>
		<Variable>
			<Name>stateValueNext</Name>
			<Type>UInt16</Type>
		</Variable>
		<Variable>
			<Name>StringIndexErrorBitSize</Name>
			<Type>String</Type>
		</Variable>
		<Variable>
			<Name>strResult</Name>
			<Type>String</Type>
			<Comment>Test function result (automatic generated variable, will be overwritten when generating new test)</Comment>
		</Variable>
		<Variable>
			<Name>strsdoAbortMessage</Name>
			<Type>String</Type>
		</Variable>
		<Variable>
			<Name>subIdx</Name>
			<Type>Byte</Type>
		</Variable>
		<Variable>
			<Name>tmpData</Name>
			<Type>ArrayOfBytes</Type>
		</Variable>
		<Variable>
			<Name>tmpString</Name>
			<Type>String</Type>
		</Variable>
		<Variable>
			<Name>type</Name>
			<Type>String</Type>
		</Variable>
		<Variable>
			<Name>u16ObjectIndexInclOffset</Name>
			<Type>UInt16</Type>
			<Comment>Object index include the module specific offset (automatic generated variable, will be overwritten when generating new test)</Comment>
		</Variable>
		<Variable>
			<Name>u32ProfileListLength</Name>
			<Type>UInt32</Type>
		</Variable>
		<Variable>
			<Name>u32sdoAbort</Name>
			<Type>UInt32</Type>
		</Variable>
		<Variable>
			<Name>u8DiagMessageLoop</Name>
			<Type>Byte</Type>
			<Comment>Loop counter to iterate over all diag messages</Comment>
		</Variable>
		<Variable>
			<Name>uInt16</Name>
			<Type>UInt16</Type>
		</Variable>
		<Variable>
			<Name>uint16_dcActivation</Name>
			<Type>UInt16</Type>
		</Variable>
		<Variable>
			<Name>uint16_dcLatchCfg</Name>
			<Type>UInt16</Type>
		</Variable>
		<Variable>
			<Name>uint16_event</Name>
			<Type>UInt16</Type>
		</Variable>
		<Variable>
			<Name>uint16_wdDiv</Name>
			<Type>UInt16</Type>
		</Variable>
		<Variable>
			<Name>uint16_wdPd</Name>
			<Type>UInt16</Type>
		</Variable>
		<Variable>
			<Name>uint16CurrDataType</Name>
			<Type>UInt16</Type>
		</Variable>
		<Variable>
			<Name>uint16TestedValues</Name>
			<Type>UInt16</Type>
		</Variable>
		<Variable>
			<Name>uInt16Val</Name>
			<Type>UInt16</Type>
		</Variable>
		<Variable>
			<Name>uInt16Var</Name>
			<Type>UInt16</Type>
		</Variable>
		<Variable>
			<Name>uInt32</Name>
			<Type>UInt32</Type>
		</Variable>
		<Variable>
			<Name>uint32_dcStartTimeHigh</Name>
			<Type>UInt32</Type>
		</Variable>
		<Variable>
			<Name>uint32_dcStartTimeLow</Name>
			<Type>UInt32</Type>
		</Variable>
		<Variable>
			<Name>uint32_dcSync0CycleTime</Name>
			<Type>UInt32</Type>
		</Variable>
		<Variable>
			<Name>uint32_dcSync1CycleTime</Name>
			<Type>UInt32</Type>
		</Variable>
		<Variable>
			<Name>uint32_dcSysTimeDelay</Name>
			<Type>UInt32</Type>
		</Variable>
		<Variable>
			<Name>uint32_dcSysTimeHigh</Name>
			<Type>UInt32</Type>
		</Variable>
		<Variable>
			<Name>uint32_dcSysTimeLow</Name>
			<Type>UInt32</Type>
		</Variable>
		<Variable>
			<Name>uint32_lengthOfList</Name>
			<Type>UInt32</Type>
		</Variable>
		<Variable>
			<Name>uint32_sizeOfAllPdSm</Name>
			<Type>UInt32</Type>
		</Variable>
		<Variable>
			<Name>uint32BitOffs</Name>
			<Type>UInt32</Type>
		</Variable>
		<Variable>
			<Name>uint32BitSize</Name>
			<Type>UInt32</Type>
		</Variable>
		<Variable>
			<Name>uInt32Val</Name>
			<Type>UInt32</Type>
		</Variable>
		<Variable>
			<Name>uInt32Var</Name>
			<Type>UInt32</Type>
		</Variable>
		<Variable>
			<Name>uint64_dcStartTime</Name>
			<Type>UInt64</Type>
		</Variable>
		<Variable>
			<Name>uint64_dcSysTime</Name>
			<Type>UInt64</Type>
		</Variable>
		<Variable>
			<Name>uint64_dcSysTimeDiff</Name>
			<Type>UInt64</Type>
		</Variable>
		<Variable>
			<Name>uint64_dcSysTimeHigh</Name>
			<Type>UInt64</Type>
		</Variable>
		<Variable>
			<Name>uint64_dcSysTimeLow</Name>
			<Type>UInt64</Type>
		</Variable>
		<Variable>
			<Name>uint64_dcSysTimeOffset</Name>
			<Type>UInt64</Type>
		</Variable>
		<Variable>
			<Name>uint64_wdPdDoubleMinusWdPdInclJitter</Name>
			<Type>Int64</Type>
		</Variable>
		<Variable>
			<Name>uint64_wdPdInclJitter</Name>
			<Type>UInt64</Type>
		</Variable>
		<Variable>
			<Name>uint64_wdPdInclJitter.settings</Name>
			<Type>Int64</Type>
		</Variable>
		<Variable>
			<Name>uint64_wdPdTime</Name>
			<Type>Int64</Type>
		</Variable>
		<Variable>
			<Name>uint64_wdPdTimeDouble</Name>
			<Type>Int64</Type>
		</Variable>
		<Variable>
			<Name>vendorIdIpCore</Name>
			<Type>UInt32</Type>
		</Variable>
		<Variable>
			<Name>VerifyDescriptionError</Name>
			<Type>Bool</Type>
			<Comment>Indicates if an error occured during verification of the object/entry description (automatic generated variable, will be overwritten when generating new test)</Comment>
		</Variable>
		<Variable>
			<Name>writeInOp</Name>
			<Type>Bool</Type>
		</Variable>
		<Variable>
			<Name>writeInPreOp</Name>
			<Type>Bool</Type>
		</Variable>
		<Variable>
			<Name>writeInSafeOp</Name>
			<Type>Bool</Type>
		</Variable>
	</Variables>
	<IncludedTestFunctions>
		<FileName>BF-0040_V1i0i1_ProfileFunctions.xml</FileName>
		<FileName Version="1.0.47">EcBaseFunctions_V1i0i0.xml</FileName>
	</IncludedTestFunctions>
	<TestFunctions>
		<TestFunction Name="InitTimeoutsAndReset" FunctionId="101">
			<?MAX_OUTPUT_ID 0?>
			<TestStep>
				<CallTestFunction Name="SetStateMachTimeouts"></CallTestFunction>
			</TestStep>
			<TestStep>
				<CallTestFunction Name="Reset"></CallTestFunction>
				<RaiseErrorOnFailure Id="0">Failed to reset device</RaiseErrorOnFailure>
			</TestStep>
		</TestFunction>
		<TestFunction Name="CheckListForIndex" FunctionId="201">
			<TestStep>
				<SetVariable Target="indexCount">0</SetVariable>
			</TestStep>
			<TestStep>
				<GetObjectDescriptionFromList Source="objectList" ListIndex="cmpListIndex">
					<Index>cmpIndex</Index>
				</GetObjectDescriptionFromList>
			</TestStep>
			<TestStep>
				<CallFunction>CompareIndexes</CallFunction>
			</TestStep>
			<TestStep>
				<SetVariable Target="cmpListIndex">cmpListIndex+1</SetVariable>
			</TestStep>
			<TestStep>
				<Compare>
					<Lower>
						<Value1>cmpListIndex</Value1>
						<Value2>count</Value2>
						<GotoStep>2</GotoStep>
					</Lower>
				</Compare>
			</TestStep>
			<TestStep>
				<SetVariable Target="cmpListIndex">0</SetVariable>
			</TestStep>
			<TestStep>
				<SetVariable Target="listIndex">listIndex+1</SetVariable>
			</TestStep>
		</TestFunction>
		<TestFunction Name="CompareIndexes" FunctionId="202">
			<?MAX_OUTPUT_ID 0?>
			<TestStep>
				<Compare>
					<NotEqual>
						<Value1>index</Value1>
						<Value2>cmpIndex</Value2>
						<Return Id="0"></Return>
					</NotEqual>
				</Compare>
			</TestStep>
			<TestStep>
				<SetVariable Target="indexCount">indexCount+1</SetVariable>
			</TestStep>
		</TestFunction>
		<TestFunction Name="SetStateMachTimeouts" FunctionId="301">
			<?MAX_OUTPUT_ID 1?>
			<TestStep>
				<SetVariable Target="preOPTimeout">3000</SetVariable>
			</TestStep>
			<TestStep>
				<SetVariable Target="backInitTimeout">3000</SetVariable>
			</TestStep>
			<TestStep>
				<Compare>
					<Equal>
						<Value1>DeviceDescr.Info</Value1>
						<Value2>false</Value2>
						<Return Id="0"></Return>
					</Equal>
				</Compare>
				<Compare>
					<Equal>
						<Value1>DeviceDescr.Info.StateMachine.Timeout</Value1>
						<Value2>false</Value2>
						<Return Id="1"></Return>
					</Equal>
				</Compare>
			</TestStep>
			<TestStep>
				<SetVariable Target="preOPTimeout">DeviceDescr.Info.StateMachine.Timeout.PreopTimeout</SetVariable>
			</TestStep>
			<TestStep>
				<SetVariable Target="backInitTimeout">DeviceDescr.Info.StateMachine.Timeout.BackToInitTimeout </SetVariable>
			</TestStep>
		</TestFunction>
		<TestFunction Name="WriteObjectDescription" FunctionId="401">
			<TestStep>
				<GetObjectDescriptionFromList Source="objectList" ListIndex="listIndex">
					<Index>index</Index>
					<SubIdx>subIdx</SubIdx>
					<Name>name</Name>
					<BitSize>bitSize</BitSize>
					<Flags>
						<Access>access</Access>
					</Flags>
				</GetObjectDescriptionFromList>
			</TestStep>
		</TestFunction>
		<TestFunction Name="WriteObjectList" FunctionId="402">
			<?MAX_OUTPUT_ID 2?>
			<TestStep>
				<SetVariable Target="listIndex">0</SetVariable>
			</TestStep>
			<TestStep Name="WriteObjectDescription">
				<GetObjectDescriptionFromList Source="objectList" ListIndex="listIndex">
					<Index>index</Index>
					<SubIdx>subIdx</SubIdx>
					<Type>type</Type>
					<DefaultData>defData</DefaultData>
					<Flags>
						<Access ReadInOP="readInOp" ReadInPreop="readInPreOp" ReadInSafeOP="readInSafeOp" WriteinOP="writeInOp" WriteInPreOp="writeInPreOp" WriteInSafeOp="writeInSafeOp">hallo</Access>
					</Flags>
				</GetObjectDescriptionFromList>
				<WriteLine Id="0" Param0="index" Param1="subIdx" Param2="listIndex">Objects[{2}] 0x{0:x4}:{1}</WriteLine>
				<WriteLine Id="1" Param0="listIndex" Param1="readInPreOp" Param2="readInSafeOp" Param3="readInOp">Objects[{0}] ReadAccess: PreOp {1}, SafeOp {2}, Op {3}</WriteLine>
				<WriteLine Id="2" Param0="listIndex" Param1="writeInPreOp" Param2="writeInSafeOp" Param3="writeInOp">Objects[{0}] WriteAccess: PreOp {1}, SafeOp {2}, Op {3}</WriteLine>
			</TestStep>
			<TestStep>
				<SetVariable Target="listIndex">listIndex+1</SetVariable>
			</TestStep>
			<TestStep></TestStep>
			<TestStep>
				<Compare>
					<Lower>
						<Value1>listIndex</Value1>
						<Value2>count</Value2>
						<GotoStep>WriteObjectDescription</GotoStep>
					</Lower>
				</Compare>
			</TestStep>
			<TestStep>
				<SetVariable Target="listIndex">0</SetVariable>
			</TestStep>
		</TestFunction>
		<TestFunction Name="CheckIsPdo" FunctionId="501">
			<?MAX_OUTPUT_ID 4?>
			<Parameter>
				<Name>CheckIsPdo.boolCheckForPdo</Name>
				<Type>Bool</Type>
			</Parameter>
			<Parameter>
				<Name>CheckIsPdo.int32Index</Name>
				<Type>Int32</Type>
			</Parameter>
			<OutParameter>
				<Name>CheckIsPdo.boolPdoIndex</Name>
				<Type>Bool</Type>
			</OutParameter>
			<TestStep Name="CheckPdoType">
				<Compare>
					<Equal>
						<Value1>CheckIsPdo.boolCheckForPdo</Value1>
						<Value2>false</Value2>
						<GotoStep>CheckIndexForTxPDO</GotoStep>
					</Equal>
				</Compare>
			</TestStep>
			<TestStep Name="CheckIndexForPDO">
				<SetVariable Target="boolFinishedCheck">false</SetVariable>
				<Compare>
					<Lower>
						<Value1>CheckIsPdo.int32Index</Value1>
						<Value2>#x1600</Value2>
						<GotoStep>SetIsNotAndReturn</GotoStep>
					</Lower>
				</Compare>
				<Compare>
					<Greater>
						<Value1>CheckIsPdo.int32Index</Value1>
						<Value2>#x17ff</Value2>
						<GotoStep>RxPdoSetIsNotAndFinish</GotoStep>
					</Greater>
				</Compare>
			</TestStep>
			<TestStep>
				<SetVariable Target="CheckIsPdo.boolPdoIndex">true</SetVariable>
				<Compare>
					<Equal>
						<Value1>true</Value1>
						<Value2>true</Value2>
						<Return Id="0"></Return>
					</Equal>
				</Compare>
			</TestStep>
			<TestStep Name="RxPdoSetIsNotAndReturn">
				<SetVariable Target="CheckIsPdo.boolPdoIndex">false</SetVariable>
				<Compare>
					<Equal>
						<Value1>true</Value1>
						<Value2>true</Value2>
						<Return Id="1"></Return>
					</Equal>
				</Compare>
			</TestStep>
			<TestStep Name="RxPdoSetIsNotAndFinish">
				<SetVariable Target="boolFinishedCheck">true</SetVariable>
			</TestStep>
			<TestStep>
				<SetVariable Target="CheckIsPdo.boolPdoIndex">false</SetVariable>
				<Compare>
					<Equal>
						<Value1>true</Value1>
						<Value2>true</Value2>
						<Return Id="2"></Return>
					</Equal>
				</Compare>
			</TestStep>
			<TestStep Name="CheckIndexForTxPDO">
				<SetVariable Target="boolFinishedCheck">false</SetVariable>
				<Compare>
					<Lower>
						<Value1>CheckIsPdo.int32Index</Value1>
						<Value2>#x1a00</Value2>
						<GotoStep>SetIsNotAndReturn</GotoStep>
					</Lower>
				</Compare>
				<Compare>
					<Greater>
						<Value1>CheckIsPdo.int32Index</Value1>
						<Value2>#x1bff</Value2>
						<GotoStep>SetIsNotAndFinish</GotoStep>
					</Greater>
				</Compare>
			</TestStep>
			<TestStep>
				<SetVariable Target="CheckIsPdo.boolPdoIndex">true</SetVariable>
				<Compare>
					<Equal>
						<Value1>true</Value1>
						<Value2>true</Value2>
						<Return Id="3"></Return>
					</Equal>
				</Compare>
			</TestStep>
			<TestStep Name="SetIsNotAndReturn">
				<SetVariable Target="CheckIsPdo.boolPdoIndex">false</SetVariable>
				<Compare>
					<Equal>
						<Value1>true</Value1>
						<Value2>true</Value2>
						<Return Id="4"></Return>
					</Equal>
				</Compare>
			</TestStep>
			<TestStep Name="SetIsNotAndFinish">
				<SetVariable Target="boolFinishedCheck">true</SetVariable>
			</TestStep>
			<TestStep>
				<SetVariable Target="CheckIsPdo.boolPdoIndex">false</SetVariable>
			</TestStep>
		</TestFunction>
		<TestFunction Name="CheckPdoEntryDefaultValue" FunctionId="502">
			<?MAX_OUTPUT_ID 19?>
			<Parameter>
				<Name>CheckPdoEntryDefaultValue.boolOnlineDict</Name>
				<Type>Bool</Type>
			</Parameter>
			<Parameter>
				<Name>CheckPdoEntryDefaultValue.int32SubIndex</Name>
				<Type>Int32</Type>
			</Parameter>
			<Parameter>
				<Name>CheckPdoEntryDefaultValue.int32Index</Name>
				<Type>Int32</Type>
			</Parameter>
			<Parameter>
				<Name>CheckPdoEntryDefaultValue.uint16CurrDataType</Name>
				<Type>UInt16</Type>
			</Parameter>
			<Parameter>
				<Name>CheckPdoEntryDefaultValue.arrBytesDefData</Name>
				<Type>ArrayOfBytes</Type>
			</Parameter>
			<Parameter>
				<Name>CheckPdoEntryDefaultValue.int32DTListCounter</Name>
				<Type>Int32</Type>
			</Parameter>
			<Parameter>
				<Name>CheckPdoEntryDefaultValue.olCurrObjectList</Name>
				<Type>ObjectList</Type>
			</Parameter>
			<Parameter>
				<Name>CheckPdoEntryDefaultValue.odCurrObjectDictionary</Name>
				<Type>ObjectDictionary</Type>
			</Parameter>
			<Parameter>
				<Name>CheckPdoEntryDefaultValue.uint32BitOffs</Name>
				<Type>UInt32</Type>
			</Parameter>
			<LocalVariables>
				<Name>CheckPdoEntryDefaultValue.boolFoundIndex</Name>
				<Type>Bool</Type>
			</LocalVariables>
			<LocalVariables>
				<Name>CheckPdoEntryDefaultValue.uint16ByteMaxSubIdx</Name>
				<Type>UInt16</Type>
			</LocalVariables>
			<LocalVariables>
				<Name>CheckPdoEntryDefaultValue.uint32DefDataLength</Name>
				<Type>UInt32</Type>
			</LocalVariables>
			<LocalVariables>
				<Name>CheckPdoEntryDefaultValue.uint16ParentDataType</Name>
				<Type>UInt16</Type>
			</LocalVariables>
			<LocalVariables>
				<Name>CheckPdoEntryDefaultValue.uint32BitSizeParent</Name>
				<Type>UInt32</Type>
			</LocalVariables>
			<LocalVariables>
				<Name>CheckPdoEntryDefaultValue.uint16MaxSubIndex</Name>
				<Type>UInt16</Type>
			</LocalVariables>
			<LocalVariables>
				<Name>CheckPdoEntryDefaultValue.int32TestIndexCount</Name>
				<Type>Int32</Type>
			</LocalVariables>
			<LocalVariables>
				<Name>CheckPdoEntryDefaultValue.int32DTListCounterTest</Name>
				<Type>Int32</Type>
			</LocalVariables>
			<LocalVariables>
				<Name>CheckPdoEntryDefaultValue.uint32TotalBitSize</Name>
				<Type>UInt32</Type>
			</LocalVariables>
			<LocalVariables>
				<Name>CheckPdoEntryDefaultValue.uint32TotalTestEntryBitSize</Name>
				<Type>UInt32</Type>
			</LocalVariables>
			<TestStep Name="CheckSubIndex">
				<Compare>
					<Equal>
						<Value1>CheckPdoEntryDefaultValue.int32SubIndex</Value1>
						<Value2>0</Value2>
						<GotoStep>CheckDataTypeOfPdoParent</GotoStep>
					</Equal>
				</Compare>
				<Compare>
					<Equal>
						<Value1>CheckPdoEntryDefaultValue.int32SubIndex</Value1>
						<Value2>1</Value2>
						<GotoStep>CheckOffsetAndDataTypeOfSubIdx1</GotoStep>
					</Equal>
				</Compare>
			</TestStep>
			<TestStep Name="CheckDataTypeOfNormalEntry">
				<Compare>
					<Equal>
						<Value1>CheckPdoEntryDefaultValue.uint16CurrDataType</Value1>
						<Value2>7</Value2>
						<GotoStep>CheckIfDefaultValueExists</GotoStep>
					</Equal>
				</Compare>
				<Compare>
					<Equal>
						<Value1>true</Value1>
						<Value2>true</Value2>
						<GotoStep>WriteErrorEntryDataType</GotoStep>
					</Equal>
				</Compare>
			</TestStep>
			<TestStep Name="CheckOffsetAndDataTypeOfSubIdx1">
				<Compare>
					<NotEqual>
						<Value1>CheckPdoEntryDefaultValue.uint32BitOffs</Value1>
						<Value2>16</Value2>
						<GotoStep>WriteErrorBitOffset</GotoStep>
					</NotEqual>
				</Compare>
				<Compare>
					<Equal>
						<Value1>CheckPdoEntryDefaultValue.uint16CurrDataType</Value1>
						<Value2>7</Value2>
						<GotoStep>CheckIfDefaultValueExists</GotoStep>
					</Equal>
				</Compare>
				<Compare>
					<Equal>
						<Value1>true</Value1>
						<Value2>true</Value2>
						<GotoStep>WriteErrorEntryDataType</GotoStep>
					</Equal>
				</Compare>
			</TestStep>
			<TestStep Name="CheckDataTypeOfPdoParent">
				<GetObjectDescription SourceDictionary="CheckPdoEntryDefaultValue.odCurrObjectDictionary" Index="CheckPdoEntryDefaultValue.int32Index" SubIndex="-1">
					<Type>CheckPdoEntryDefaultValue.uint16ParentDataType</Type>
					<BitSize>CheckPdoEntryDefaultValue.uint32BitSizeParent</BitSize>
					<MaxSubIndex>CheckPdoEntryDefaultValue.uint16MaxSubIndex</MaxSubIndex>
				</GetObjectDescription>
				<Compare>
					<Equal>
						<Value1>CheckPdoEntryDefaultValue.boolOnlineDict</Value1>
						<Value2>false</Value2>
						<GotoStep>CheckDataTypeOfFirstSubIdx</GotoStep>
					</Equal>
				</Compare>
				<Compare>
					<NotEqual>
						<Value1>CheckPdoEntryDefaultValue.uint16ParentDataType</Value1>
						<Value2>33</Value2>
						<GotoStep>WriteErrorParentDataType</GotoStep>
					</NotEqual>
				</Compare>
			</TestStep>
			<TestStep Name="CheckDataTypeOfFirstSubIdx">
				<Compare>
					<NotEqual>
						<Value1>CheckPdoEntryDefaultValue.uint16CurrDataType</Value1>
						<Value2>5</Value2>
						<GotoStep>WriteErrorFirstEntry</GotoStep>
					</NotEqual>
				</Compare>
			</TestStep>
			<TestStep Name="CheckLengthOfDefaultValueFirstSubIdx">
				<SizeOf UInt32Var="CheckPdoEntryDefaultValue.uint32DefDataLength">CheckPdoEntryDefaultValue.arrBytesDefData</SizeOf>
				<Compare>
					<Equal>
						<Value1>CheckPdoEntryDefaultValue.uint32DefDataLength</Value1>
						<Value2>0</Value2>
						<Return Id="0"></Return>
					</Equal>
				</Compare>
			</TestStep>
			<TestStep Name="GetDefaultValueOfFirstSubIdx">
				<GetBits Source="CheckPdoEntryDefaultValue.arrBytesDefData" Target="CheckPdoEntryDefaultValue.uint16ByteMaxSubIdx">
					<Offset>0</Offset>
					<Length>8</Length>
				</GetBits>
			</TestStep>
			<TestStep Name="CompareDefaultValueOfFirstSubIdxToMaxSubIdx">
				<Compare>
					<Greater>
						<Value1>CheckPdoEntryDefaultValue.uint16ByteMaxSubIdx</Value1>
						<Value2>CheckPdoEntryDefaultValue.uint16MaxSubIndex</Value2>
						<GotoStep>WriteErrorSubIdx0DefValue</GotoStep>
					</Greater>
				</Compare>
				<Compare>
					<Equal>
						<Value1>true</Value1>
						<Value2>true</Value2>
						<GotoStep>WriteDescCheckLengthOfObject</GotoStep>
					</Equal>
				</Compare>
			</TestStep>
			<TestStep Name="CheckIfDefaultValueExists">
				<SizeOf UInt32Var="CheckPdoEntryDefaultValue.uint32DefDataLength">CheckPdoEntryDefaultValue.arrBytesDefData</SizeOf>
				<Compare>
					<Equal>
						<Value1>CheckPdoEntryDefaultValue.uint32DefDataLength</Value1>
						<Value2>0</Value2>
						<Return Id="1"></Return>
					</Equal>
				</Compare>
				<Compare>
					<Lower>
						<Value1>CheckPdoEntryDefaultValue.uint32DefDataLength</Value1>
						<Value2>4</Value2>
						<Return Id="2"></Return>
					</Lower>
				</Compare>
			</TestStep>
			<TestStep Name="CallFunctionDefaultValueTest">
				<CallTestFunction Name="CheckPdoValue">
					<Parameter>CheckPdoEntryDefaultValue.odCurrObjectDictionary</Parameter>
					<Parameter>CheckPdoEntryDefaultValue.arrBytesDefData</Parameter>
					<Parameter>CheckPdoEntryDefaultValue.int32Index</Parameter>
					<Parameter>CheckPdoEntryDefaultValue.int32SubIndex</Parameter>
					<OutParameter>CheckPdoEntryDefaultValue.boolFoundIndex</OutParameter>
				</CallTestFunction>
				<Compare>
					<NotEqual>
						<Value1>CheckPdoEntryDefaultValue.boolFoundIndex</Value1>
						<Value2>true</Value2>
						<SetVariable Target="uint16Errors">uint16Errors+1</SetVariable>
					</NotEqual>
				</Compare>
				<Compare>
					<NotEqual>
						<Value1>CheckPdoEntryDefaultValue.boolFoundIndex</Value1>
						<Value2>true</Value2>
						<Return Id="3"></Return>
					</NotEqual>
				</Compare>
				<Compare>
					<Equal>
						<Value1>true</Value1>
						<Value2>true</Value2>
						<WriteLine Id="4" Level="Verbose" Param0="CheckPdoEntryDefaultValue.int32Index" Param1="CheckPdoEntryDefaultValue.int32SubIndex">CheckPdoEntryDefaultValue: PDO entry 0x{0:x4}:{1} has the right default value.</WriteLine>
					</Equal>
				</Compare>
				<Compare>
					<Equal>
						<Value1>true</Value1>
						<Value2>true</Value2>
						<Return Id="5"></Return>
					</Equal>
				</Compare>
			</TestStep>
			<TestStep Name="WriteDescCheckLengthOfObject">
				<Description Id="6" Level="Verbose" Param0="CheckPdoEntryDefaultValue.int32Index" Param1="CheckPdoEntryDefaultValue.uint16MaxSubIndex" Param2="CheckPdoEntryDefaultValue.uint32BitSizeParent">CheckPdoEntryDefaultValue: Checking bit length of PDO object 0x{0:x4}. Max SubIndex: {1}. Excepted bit size {2}.</Description>
				<SetVariable Target="CheckPdoEntryDefaultValue.int32TestIndexCount">0</SetVariable>
			</TestStep>
			<TestStep Name="SetTotalBitSize">
				<SetVariable Target="CheckPdoEntryDefaultValue.uint32TotalBitSize">8</SetVariable>
			</TestStep>
			<TestStep Name="ResetTestCounter">
				<SetVariable Target="CheckPdoEntryDefaultValue.int32DTListCounterTest">0</SetVariable>
			</TestStep>
			<TestStep Name="ResetIndexCounter">
				<SetVariable Target="CheckPdoEntryDefaultValue.int32TestIndexCount">0</SetVariable>
			</TestStep>
			<TestStep Name="SetCounterOnCurrEntry">
				<SetVariable Target="CheckPdoEntryDefaultValue.int32DTListCounterTest">CheckPdoEntryDefaultValue.int32DTListCounter+CheckPdoEntryDefaultValue.int32TestIndexCount</SetVariable>
			</TestStep>
			<TestStep Name="GetNextListEntry">
				<GetObjectDescriptionFromList Source="CheckPdoEntryDefaultValue.olCurrObjectList" ListIndex="CheckPdoEntryDefaultValue.int32DTListCounterTest">
					<BitSize>CheckPdoEntryDefaultValue.uint32TotalTestEntryBitSize</BitSize>
				</GetObjectDescriptionFromList>
			</TestStep>
			<TestStep Name="AddToTotalBitSize">
				<SetVariable Target="CheckPdoEntryDefaultValue.uint32TotalBitSize">CheckPdoEntryDefaultValue.uint32TotalBitSize+CheckPdoEntryDefaultValue.uint32TotalTestEntryBitSize</SetVariable>
			</TestStep>
			<TestStep Name="CheckMaxSubIndex">
				<Compare>
					<NotEqual>
						<Value1>CheckPdoEntryDefaultValue.int32TestIndexCount</Value1>
						<Value2>CheckPdoEntryDefaultValue.uint16MaxSubIndex</Value2>
						<GotoStep>IncrementTestIndexCounter</GotoStep>
					</NotEqual>
				</Compare>
			</TestStep>
			<TestStep Name="CompareTotalBitSizeToParentBitSize">
				<Compare>
					<Equal>
						<Value1>CheckPdoEntryDefaultValue.uint32TotalBitSize</Value1>
						<Value2>CheckPdoEntryDefaultValue.uint32BitSizeParent</Value2>
						<WriteLine Id="7" Level="Output" Param0="CheckPdoEntryDefaultValue.uint32TotalBitSize" Param1="CheckPdoEntryDefaultValue.uint32BitSizeParent" Param2="CheckPdoEntryDefaultValue.int32Index">CheckPdoEntryDefaultValue: Total bit length {0} of PDO object 0x{2:x4} is equal to expected Bit Size {1}.</WriteLine>
					</Equal>
				</Compare>
				<Compare>
					<Equal>
						<Value1>CheckPdoEntryDefaultValue.uint32TotalBitSize</Value1>
						<Value2>CheckPdoEntryDefaultValue.uint32BitSizeParent</Value2>
						<Return Id="8"></Return>
					</Equal>
				</Compare>
				<Compare>
					<Equal>
						<Value1>true</Value1>
						<Value2>true</Value2>
						<GotoStep>WriteErrorTotalBitSizeParent</GotoStep>
					</Equal>
				</Compare>
			</TestStep>
			<TestStep Name="IncrementTestIndexCounter">
				<SetVariable Target="CheckPdoEntryDefaultValue.int32TestIndexCount">CheckPdoEntryDefaultValue.int32TestIndexCount+1</SetVariable>
				<Compare>
					<Equal>
						<Value1>true</Value1>
						<Value2>true</Value2>
						<GotoStep>SetCounterOnCurrEntry</GotoStep>
					</Equal>
				</Compare>
			</TestStep>
			<TestStep Name="WriteErrorTotalBitSizeParent">
				<SetVariable Target="uint16Errors">uint16Errors+1</SetVariable>
				<WriteLine Id="9" Level="Error" Param0="CheckPdoEntryDefaultValue.uint32TotalBitSize" Param1="CheckPdoEntryDefaultValue.uint32BitSizeParent" Param2="CheckPdoEntryDefaultValue.int32Index">CheckPdoEntryDefaultValue: PDO object 0x{2:x4}: Total Bit Size {0} does not match with expected Bit Size {1}.</WriteLine>
			</TestStep>
			<TestStep Name="Return1">
				<Compare>
					<Equal>
						<Value1>true</Value1>
						<Value2>true</Value2>
						<Return Id="10"></Return>
					</Equal>
				</Compare>
			</TestStep>
			<TestStep Name="WriteErrorBitOffset">
				<SetVariable Target="uint16Errors">uint16Errors+1</SetVariable>
				<WriteLine Id="11" Level="Error" Param0="CheckPdoEntryDefaultValue.int32Index" Param1="CheckPdoEntryDefaultValue.int32SubIndex" Param2="CheckPdoEntryDefaultValue.uint32BitOffs">CheckPdoEntryDefaultValue: Entry 0x{0:x4}:{1} has the wrong bit offset ({2}).</WriteLine>
			</TestStep>
			<TestStep Name="Return2">
				<Compare>
					<Equal>
						<Value1>true</Value1>
						<Value2>true</Value2>
						<Return Id="12"></Return>
					</Equal>
				</Compare>
			</TestStep>
			<TestStep Name="WriteErrorEntryDataType">
				<SetVariable Target="uint16Errors">uint16Errors+1</SetVariable>
				<WriteLine Id="13" Level="Error" Param0="CheckPdoEntryDefaultValue.int32Index" Param1="CheckPdoEntryDefaultValue.int32SubIndex" Param2="CheckPdoEntryDefaultValue.uint16CurrDataType">CheckPdoEntryDefaultValue: Index 0x{0:x4}:{1} has a wrong data type (0x{2:x4}) expected data type: 0x007.</WriteLine>
			</TestStep>
			<TestStep Name="Return3">
				<Compare>
					<Equal>
						<Value1>true</Value1>
						<Value2>true</Value2>
						<Return Id="14"></Return>
					</Equal>
				</Compare>
			</TestStep>
			<TestStep Name="WriteErrorParentDataType">
				<SetVariable Target="uint16Errors">uint16Errors+1</SetVariable>
				<WriteLine Id="15" Level="Error" Param0="CheckPdoEntryDefaultValue.int32Index" Param1="CheckPdoEntryDefaultValue.uint16ParentDataType">The PDO object 0x{0:x4} has a wrong data type 0x{1:x4}.</WriteLine>
			</TestStep>
			<TestStep Name="Return4">
				<Compare>
					<Equal>
						<Value1>true</Value1>
						<Value2>true</Value2>
						<Return Id="16"></Return>
					</Equal>
				</Compare>
			</TestStep>
			<TestStep Name="WriteErrorSubIdx0DefValue">
				<SetVariable Target="uint16Errors">uint16Errors+1</SetVariable>
				<WriteLine Id="17" Level="Error" Param0="CheckPdoEntryDefaultValue.int32Index" Param1="CheckPdoEntryDefaultValue.int32SubIndex" Param2="CheckPdoEntryDefaultValue.uint16ByteMaxSubIdx" Param3="CheckPdoEntryDefaultValue.uint16MaxSubIndex">CheckPdoEntryDefaultValue: The first entry 0x{0:x4}:{1} has a wrong default value ({2}) expected default value: {3}.</WriteLine>
			</TestStep>
			<TestStep Name="Return5">
				<Compare>
					<Equal>
						<Value1>true</Value1>
						<Value2>true</Value2>
						<Return Id="18"></Return>
					</Equal>
				</Compare>
			</TestStep>
			<TestStep Name="WriteErrorFirstEntry">
				<SetVariable Target="uint16Errors">uint16Errors+1</SetVariable>
				<WriteLine Id="19" Level="Error" Param0="CheckPdoEntryDefaultValue.int32Index" Param1="CheckPdoEntryDefaultValue.int32SubIndex" Param2="CheckPdoEntryDefaultValue.uint16CurrDataType">CheckPdoEntryDefaultValue: The first entry 0x{0:x4}:{1} has a wrong data type (0x{2:x4}) expected data type: 0x005.</WriteLine>
			</TestStep>
		</TestFunction>
		<TestFunction Name="CheckPdoValue" FunctionId="503">
			<?MAX_OUTPUT_ID 12?>
			<Parameter>
				<Name>CheckPdoValue.odCurrObjectDictionary</Name>
				<Type>ObjectDictionary</Type>
			</Parameter>
			<Parameter>
				<Name>CheckPdoValue.arrBytesDefData</Name>
				<Type>ArrayOfBytes</Type>
			</Parameter>
			<Parameter>
				<Name>CheckPdoValue.int32Index</Name>
				<Type>Int32</Type>
			</Parameter>
			<Parameter>
				<Name>CheckPdoValue.int32SubIndex</Name>
				<Type>Int32</Type>
			</Parameter>
			<LocalVariables>
				<Name>CheckPdoValue.uint32DefMapBitSize</Name>
				<Type>UInt32</Type>
			</LocalVariables>
			<LocalVariables>
				<Name>CheckPdoValue.uint16DefMapIdx</Name>
				<Type>UInt16</Type>
			</LocalVariables>
			<LocalVariables>
				<Name>CheckPdoValue.uint16DefMapSubIdx</Name>
				<Type>UInt16</Type>
			</LocalVariables>
			<LocalVariables>
				<Name>CheckPdoValue.uint32MapBitSize</Name>
				<Type>UInt32</Type>
			</LocalVariables>
			<LocalVariables>
				<Name>CheckPdoValue.uint16ObjCode</Name>
				<Type>UInt16</Type>
			</LocalVariables>
			<OutParameter>
				<Name>CheckPdoValue.boolSuccessfull</Name>
				<Type>Bool</Type>
			</OutParameter>
			<TestStep Name="ResetReturnValue">
				<SetVariable Target="CheckPdoValue.boolSuccessfull">false</SetVariable>
			</TestStep>
			<TestStep Name="GetLengthOfMappedObject">
				<GetBits Source="CheckPdoValue.arrBytesDefData" Target="CheckPdoValue.uint32DefMapBitSize">
					<Offset>0</Offset>
					<Length>8</Length>
				</GetBits>
			</TestStep>
			<TestStep Name="GetSubIndexOfMappedObject">
				<GetBits Source="CheckPdoValue.arrBytesDefData" Target="CheckPdoValue.uint16DefMapSubIdx">
					<Offset>8</Offset>
					<Length>8</Length>
				</GetBits>
			</TestStep>
			<TestStep Name="GetIndexOfMappedObject">
				<GetBits Source="CheckPdoValue.arrBytesDefData" Target="CheckPdoValue.uint16DefMapIdx">
					<Offset>16</Offset>
					<Length>16</Length>
				</GetBits>
			</TestStep>
			<TestStep Name="CheckIfGapInPdo">
				<Compare>
					<NotEqual>
						<Value1>CheckPdoValue.uint16DefMapIdx</Value1>
						<Value2>0</Value2>
						<GotoStep>GetMappedObject</GotoStep>
					</NotEqual>
				</Compare>
				<Compare>
					<Equal>
						<Value1>CheckPdoValue.uint16DefMapSubIdx</Value1>
						<Value2>0</Value2>
						<SetVariable Target="CheckPdoValue.boolSuccessfull">true</SetVariable>
					</Equal>
				</Compare>
				<Compare>
					<Equal>
						<Value1>CheckPdoValue.uint16DefMapSubIdx</Value1>
						<Value2>0</Value2>
						<WriteLine Id="0" Level="Verbose" Param0="CheckPdoValue.int32Index" Param1="CheckPdoValue.int32SubIndex" Param2="CheckPdoValue.uint32DefMapBitSize">CheckPdoValue: Default data of {0:x4}:{1} defines a gap (index + subindex = 0)  - bit size: {2}.</WriteLine>
					</Equal>
				</Compare>
				<Compare>
					<Equal>
						<Value1>CheckPdoValue.uint16DefMapSubIdx</Value1>
						<Value2>0</Value2>
						<Return Id="1"></Return>
					</Equal>
				</Compare>
			</TestStep>
			<TestStep Name="GetMappedObject">
				<Compare>
					<Equal>
						<Value1>CheckPdoValue.uint16DefMapSubIdx</Value1>
						<Value2>0</Value2>
						<GotoStep>CheckObjectCodeIfSubIdx0</GotoStep>
					</Equal>
				</Compare>
			</TestStep>
			<TestStep Name="GetEntryDefaultValue">
				<GetObjectDescription Index="CheckPdoValue.uint16DefMapIdx" SubIndex="CheckPdoValue.uint16DefMapSubIdx" SourceDictionary="CheckPdoValue.odCurrObjectDictionary">
					<BitSize>CheckPdoValue.uint32MapBitSize</BitSize>
				</GetObjectDescription>
				<GotoOnFailure>WriteErrorWithSubIdx</GotoOnFailure>
			</TestStep>
			<TestStep Name="CheckBitSizeOfDefaultValue">
				<Compare>
					<LowerOrEqual>
						<Value1>CheckPdoValue.uint32DefMapBitSize</Value1>
						<Value2>CheckPdoValue.uint32MapBitSize</Value2>
						<SetVariable Target="CheckPdoValue.boolSuccessfull">true</SetVariable>
					</LowerOrEqual>
				</Compare>
				<Compare>
					<LowerOrEqual>
						<Value1>CheckPdoValue.uint32DefMapBitSize</Value1>
						<Value2>CheckPdoValue.uint32MapBitSize</Value2>
						<Return Id="2"></Return>
					</LowerOrEqual>
				</Compare>
				<Compare>
					<Equal>
						<Value1>true</Value1>
						<Value2>true</Value2>
						<GotoStep>WriteErrorBitSize</GotoStep>
					</Equal>
				</Compare>
			</TestStep>
			<TestStep Name="CheckObjectCodeIfSubIdx0">
				<GetObjectDescription Index="CheckPdoValue.uint16DefMapIdx" SubIndex="-1" SourceDictionary="CheckPdoValue.odCurrObjectDictionary">
					<BitSize>CheckPdoValue.uint32MapBitSize</BitSize>
					<ObjectCode>CheckPdoValue.uint16ObjCode</ObjectCode>
				</GetObjectDescription>
				<GotoOnFailure>WriteError</GotoOnFailure>
			</TestStep>
			<TestStep Name="CheckBitSizeOfDefaultValue2">
				<Compare>
					<Equal>
						<Value1>CheckPdoValue.uint16ObjCode</Value1>
						<Value2>0</Value2>
						<GotoStep>WriteErrorObjCode</GotoStep>
					</Equal>
				</Compare>
				<Compare>
					<LowerOrEqual>
						<Value1>CheckPdoValue.uint32DefMapBitSize</Value1>
						<Value2>CheckPdoValue.uint32MapBitSize</Value2>
						<SetVariable Target="CheckPdoValue.boolSuccessfull">true</SetVariable>
					</LowerOrEqual>
				</Compare>
				<Compare>
					<LowerOrEqual>
						<Value1>CheckPdoValue.uint32DefMapBitSize</Value1>
						<Value2>CheckPdoValue.uint32MapBitSize</Value2>
						<Return Id="3"></Return>
					</LowerOrEqual>
				</Compare>
				<Compare>
					<Equal>
						<Value1>true</Value1>
						<Value2>true</Value2>
						<GotoStep>WriteErrorBitSizeObject</GotoStep>
					</Equal>
				</Compare>
			</TestStep>
			<TestStep Name="WriteErrorWithSubIdx">
				<WriteLine Id="4" Level="Error" Param0="CheckPdoValue.uint16DefMapIdx" Param1="CheckPdoValue.uint16DefMapSubIdx" Param2="CheckPdoValue.int32Index" Param3="CheckPdoValue.int32SubIndex">Default value (0x{0:x4}:{1}) of PDO 0x{2:x4}:{3} not found in object dictionary.</WriteLine>
			</TestStep>
			<TestStep Name="Return">
				<Compare>
					<Equal>
						<Value1>true</Value1>
						<Value2>true</Value2>
						<Return Id="5"></Return>
					</Equal>
				</Compare>
			</TestStep>
			<TestStep Name="WriteErrorObjCode">
				<WriteLine Id="6" Level="Error" Param0="CheckPdoValue.uint16DefMapIdx" Param1="CheckPdoValue.int32Index" Param2="CheckPdoValue.int32SubIndex" Param3="CheckPdoValue.uint16ObjCode">CheckPdoValue: Default value of Pdo 0x{1:x4}:{2} is invalid - wrong object code ({3}) of object 0x{0:x4}!</WriteLine>
			</TestStep>
			<TestStep Name="Return2">
				<Compare>
					<Equal>
						<Value1>true</Value1>
						<Value2>true</Value2>
						<Return Id="7"></Return>
					</Equal>
				</Compare>
			</TestStep>
			<TestStep Name="WriteErrorBitSizeObject">
				<WriteLine Id="8" Level="Error" Param0="CheckPdoValue.uint16DefMapIdx" Param1="CheckPdoValue.int32Index" Param2="CheckPdoValue.int32SubIndex" Param3="CheckPdoValue.uint32DefMapBitSize">CheckPdoValue: Default value of Pdo 0x{1:x4}:{2} is invalid - wrong default bit size ({3}) of object 0x{0:x4}!</WriteLine>
			</TestStep>
			<TestStep Name="Return3">
				<Compare>
					<Equal>
						<Value1>true</Value1>
						<Value2>true</Value2>
						<Return Id="9"></Return>
					</Equal>
				</Compare>
			</TestStep>
			<TestStep Name="WriteErrorBitSize">
				<WriteLine Id="10" Level="Error" Param0="CheckPdoValue.uint16DefMapIdx" Param1="CheckPdoValue.int32Index" Param2="CheckPdoValue.int32SubIndex" Param3="CheckPdoValue.uint16DefMapSubIdx">CheckPdoValue: Default value of Pdo 0x{1:x4}:{2} is invalid - wrong default bit size of entry 0x{0:x4}:{3}!</WriteLine>
			</TestStep>
			<TestStep Name="Return4">
				<Compare>
					<Equal>
						<Value1>true</Value1>
						<Value2>true</Value2>
						<Return Id="11"></Return>
					</Equal>
				</Compare>
			</TestStep>
			<TestStep Name="WriteError">
				<WriteLine Id="12" Level="Error" Param0="CheckPdoValue.uint16DefMapIdx" Param1="CheckPdoValue.int32Index" Param2="CheckPdoValue.int32SubIndex">Default value (0x{0:x4}) of PDO 0x{1:x4}:{2} not found in object dictionary.</WriteLine>
			</TestStep>
		</TestFunction>
		<TestFunction Name="IsObjectDefined" FunctionId="601">
			<?MAX_OUTPUT_ID 0?>
			<Parameter>
				<Name>IsObjectDefined.OD</Name>
				<Type>ObjectDictionary</Type>
			</Parameter>
			<Parameter>
				<Name>IsObjectDefined.ObjIndex</Name>
				<Type>UInt16</Type>
			</Parameter>
			<LocalVariables>
				<Name>IsObjectDefined.maxSi</Name>
				<Type>Byte</Type>
			</LocalVariables>
			<OutParameter>
				<Name>IsObjectDefined.defined</Name>
				<Type>Bool</Type>
			</OutParameter>
			<!--Check if an object is defined within a specific object dictionary-->
			<TestStep Name="InitResult">
				<SetVariable Target="IsObjectDefined.defined">true</SetVariable>
			</TestStep>
			<TestStep>
				<GetObjectDescription Index="IsObjectDefined.ObjIndex" SourceDictionary="IsObjectDefined.OD" SubIndex="-1" SDOInfoReload="false">
					<MaxSubIndex>IsObjectDefined.maxSi</MaxSubIndex>
				</GetObjectDescription>
				<GotoOnFailure>ObjNotFound</GotoOnFailure>
				<Compare>
					<Equal>
						<Value1>true</Value1>
						<Value2>true</Value2>
						<Return Id="0"></Return>
					</Equal>
				</Compare>
			</TestStep>
			<TestStep Name="ObjNotFound">
				<SetVariable Target="IsObjectDefined.defined">false</SetVariable>
			</TestStep>
		</TestFunction>
		<TestFunction Name="IsEntryDefined" FunctionId="602">
			<?MAX_OUTPUT_ID 0?>
			<Parameter>
				<Name>IsEntryDefined.OD</Name>
				<Type>ObjectDictionary</Type>
			</Parameter>
			<Parameter>
				<Name>IsEntryDefined.ObjIndex</Name>
				<Type>UInt16</Type>
			</Parameter>
			<Parameter>
				<Name>IsEntryDefined.SubIndex</Name>
				<Type>Byte</Type>
			</Parameter>
			<LocalVariables>
				<Name>IsEntryDefined.maxSi</Name>
				<Type>Byte</Type>
			</LocalVariables>
			<OutParameter>
				<Name>IsEntryDefined.defined</Name>
				<Type>Bool</Type>
			</OutParameter>
			<!--Check if an object entry is defined within a specific object dictionary-->
			<TestStep Name="InitResult">
				<SetVariable Target="IsEntryDefined.defined">true</SetVariable>
			</TestStep>
			<TestStep>
				<GetObjectDescription Index="IsEntryDefined.ObjIndex" SourceDictionary="IsEntryDefined.OD" SubIndex="IsEntryDefined.SubIndex" SDOInfoReload="false"></GetObjectDescription>
				<GotoOnFailure>ObjNotFound</GotoOnFailure>
				<Compare>
					<Equal>
						<Value1>true</Value1>
						<Value2>true</Value2>
						<Return Id="0"></Return>
					</Equal>
				</Compare>
			</TestStep>
			<TestStep Name="ObjNotFound">
				<SetVariable Target="IsEntryDefined.defined">false</SetVariable>
			</TestStep>
		</TestFunction>
	</TestFunctions>
	<TestGroups>
		<TestGroup Name="General Offline Dictionary plausibility" GroupId="1">
			<Comment>Gets the offline OD from the ESI and tests objects</Comment>
			<TestCase Name="Compare online to offline object dictionary" CaseId="1">
				<?MAX_OUTPUT_ID 9?>
				<Description>
					<Purpose>Compare the offline dictionary and the online dictionary</Purpose>
					<PreCondition>- An offline object dictionary is defined.
- The DuT supports the CoE SdoInfo service.</PreCondition>
					<Action>- Read the online and offline dictionary
- Compare the object descriptions
- Compare the entry descriptions</Action>
					<PostCondition>At least every object which is defined in the offline dictionary shall be avaliable in the online dictionary and the object/entry descriptions shall match.
In case of a warning or error is the expected value define in the offline dictionary.</PostCondition>
					<TestsToPassBefore>
						<ID>0x1300[10]</ID>
					</TestsToPassBefore>
					<References>
						<Reference></Reference>
					</References>
					<Mandatory>true</Mandatory>
				</Description>
				<TestStep Name="CheckForMailboxCoESdoInfo">
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Mailbox</Value1>
							<Value2>false</Value2>
							<SkipCase Id="0">Device does not support mailbox communication</SkipCase>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Mailbox.CoE</Value1>
							<Value2>false</Value2>
							<SkipCase Id="1">Device does not support CoE</SkipCase>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Mailbox.CoE.SdoInfo</Value1>
							<Value2>false</Value2>
							<SkipCase Id="2">Device does not support SdoInfo</SkipCase>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="GetOfflineOD">
					<GetObjectDictionary Target="offlineDictionary">
						<DictionaryType>Offline</DictionaryType>
					</GetObjectDictionary>
					<SkipOnFailure Id="3">The DuT does not support an offline dictionary.</SkipOnFailure>
				</TestStep>
				<TestStep Name="Reset">
					<CallTestFunction Name="InitTimeoutsAndReset"></CallTestFunction>
					<RaiseErrorOnFailure Id="4">Failed to Reset Device</RaiseErrorOnFailure>
				</TestStep>
				<TestStep Name="RunToPreOp">
					<RunToState SendProcessData="false" Timeout="preOPTimeout">
						<State>PREOP</State>
					</RunToState>
					<RaiseErrorOnFailure Id="5">Failed to go to PreOp</RaiseErrorOnFailure>
				</TestStep>
				<TestStep Name="GetOnlineOD">
					<GetObjectDictionary Target="onlineDictionary">
						<DictionaryType>Online</DictionaryType>
					</GetObjectDictionary>
					<RaiseErrorOnFailure Id="6">Failed to get online Dictionary</RaiseErrorOnFailure>
				</TestStep>
				<TestStep>
					<CallTestFunction Name="CompareObjectDictionary">
						<Parameter>offlineDictionary</Parameter>
						<Parameter>Offline Dictionary</Parameter>
						<Parameter>onlineDictionary</Parameter>
						<Parameter>Online Dictionary</Parameter>
						<Parameter>0<!--no Pdo mapping offset is set-->
						</Parameter>
						<Parameter>0<!--no object offset is set-->
						</Parameter>
						<Parameter>false<!--ignore category (each difference is an error)-->
						</Parameter>
						<Parameter>true<!--skip bitlength comparision for entries with variable bitlength-->
						</Parameter>
						<Parameter>10F3<!--skip diag history-->
						</Parameter>
						<OutParameter>Result</OutParameter>
					</CallTestFunction>
				</TestStep>
				<TestStep>
					<Compare>
						<Equal>
							<Value1>Result</Value1>
							<Value2>true</Value2>
							<ReturnSuccess Id="7">Compare Dictionaries successful.</ReturnSuccess>
						</Equal>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>Result</Value1>
							<Value2>true</Value2>
							<RaiseError Id="8"></RaiseError>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep Name="RunToInit">
					<RunToState SendProcessData="false" Timeout="backInitTimeout">
						<State>INIT</State>
					</RunToState>
					<RaiseErrorOnFailure Id="9">Failed to go to Init</RaiseErrorOnFailure>
				</TestStep>
			</TestCase>
		</TestGroup>
		<!--Test Group 2 shall not be used (was used for obsolete CoE Communication Area Tests)-->
		<TestGroup Name="CoE Communication Area | offline" GroupId="3">
			<Comment>Checks the objects of the CoE communication area (0x1000-0x1fff)</Comment>
			<TestCase Name="Device Type Object (0x1000)" CaseId="1">
				<?MAX_OUTPUT_ID 9?>
				<Description>
					<Purpose>The offline dictionary shall contain the mandatory Device Type Object (index 0x1000). The test case ensures the correct object structure and naming.</Purpose>
					<PreCondition>Device supports Mailbox communication via CoE protocol
ESI provides a offline object dictionary</PreCondition>
					<Action>Check the object structure:
1. Name
2. Data Type
3. Object Code
4. Access
5. Pdo mapping
6. Bit Size</Action>
					<PostCondition>The offline dictionary shall contain the object
The structure shall be as described in ETG.1000.6 5.6.7.4.1 Device Type.
1. Warning if object name is not 'Device Type'
2. Error if data type is not 'USINT32'
3. Error if object code is not 'VAR'
4. Error if access is not 'Read only'
5. Error if Pdo mapping is defined
6. Error if BitSize is not 32</PostCondition>
					<References>
						<Reference Chapter="5.6.7.4.1 Device Type" Specification="ETG.1000.6 "></Reference>
					</References>
					<Mandatory>true</Mandatory>
				</Description>
				<TestStep Name="CheckMbxCoeSupport">
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Mailbox</Value1>
							<Value2>false</Value2>
							<SkipCase Id="0">Device does not support mailbox communication</SkipCase>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Mailbox.CoE</Value1>
							<Value2>false</Value2>
							<SkipCase Id="1">Device does not support CoE</SkipCase>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Dictionary</Value1>
							<Value2>false</Value2>
							<SkipCase Id="2">Device does not provide an offline dictionary</SkipCase>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="SetDefaultMandatoryValue">
					<SetVariable Target="CoeComm.IsMandatroy">true</SetVariable>
				</TestStep>
				<TestStep Name="InitResult">
					<SetVariable Target="CoeComm.bResult">true</SetVariable>
				</TestStep>
				<TestStep Name="InitIndex">
					<SetVariable Target="CoeComm.Index">#x1000</SetVariable>
				</TestStep>
				<TestStep Name="InitObjName">
					<SetVariable Target="CoeComm.TmpName">Device Type</SetVariable>
				</TestStep>
				<TestStep>
					<InitArray TargetArray="CoeComm.TmpNames" Length="1"></InitArray>
				</TestStep>
				<TestStep>
					<SetArrayItem TargetArray="CoeComm.TmpNames" Index="0">CoeComm.TmpName</SetArrayItem>
				</TestStep>
				<TestStep Name="GetOD">
					<Description Id="3">Getting offline dictionary from assigned ESI...</Description>
					<GetObjectDictionary Target="CoeComm.Dict">
						<DictionaryType>Offline</DictionaryType>
					</GetObjectDictionary>
					<RaiseErrorOnFailure Id="4">Failed to get offline dictionary.</RaiseErrorOnFailure>
				</TestStep>
				<TestStep Name="SkipCheckObjDefinedIfMandatory">
					<!--In case of a not defined object the function Check Object Description will return an error-->
					<Compare>
						<Equal>
							<Value1>CoeComm.IsMandatroy</Value1>
							<Value2>true</Value2>
							<GotoStep>VerifyObjDescr</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CheckIfObjIsDefined">
					<CallTestFunction Name="IsObjectDefined">
						<Parameter>CoeComm.Dict</Parameter>
						<Parameter>CoeComm.Index</Parameter>
						<OutParameter>CoeComm.TmpBool</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>CoeComm.TmpBool</Value1>
							<Value2>false</Value2>
							<SkipCase Id="5" Param0="CoeComm.Index" Param1="CoeComm.TmpName">The object '{1}' 0x{0:x4} is not defined.</SkipCase>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="VerifyObjDescr">
					<Description Id="6" Param0="CoeComm.Index" Level="Output">0x{0:x4} Checking object description...</Description>
					<CallTestFunction Name="CheckObjectDescription">
						<Parameter>CoeComm.Dict</Parameter>
						<Parameter>offline</Parameter>
						<Parameter>CoeComm.Index<!--VerifyObjectDescription.Index-->
						</Parameter>
						<Parameter>false<!--VerifyObjectDescription.LevelWarning-->
						</Parameter>
						<Parameter>false</Parameter>
						<Parameter>CoeComm.TmpNames<!--VerifyObjectDescription.Expected.Names-->
						</Parameter>
						<Parameter>7<!--VerifyObjectDescription.Expected.Type-->
						</Parameter>
						<Parameter>7<!--VerifyObjectDescription.Expected.ObjectCode-->
						</Parameter>
						<Parameter>32<!--VerifyObjectDescription.Expected.BitSize-->
						</Parameter>
						<OutParameter>CoeComm.bError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>CoeComm.bError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="CoeComm.bResult">false</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="VerifySi0Descr">
					<Description Id="7" Param0="CoeComm.Index" Level="Output">0x{0:x4}.0 Checking entry description...</Description>
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>CoeComm.Dict<!--CheckEntryDescription.ObjectDictionary-->
						</Parameter>
						<Parameter>offline<!--CheckEntryDescription.DictionaryType-->
						</Parameter>
						<Parameter>CoeComm.Index<!--CheckEntryDescription.Index-->
						</Parameter>
						<Parameter>0<!--CheckEntryDescription.SubIndex-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.LevelWarning-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.CaseSensitive-->
						</Parameter>
						<Parameter>EmptyString<!--CheckEntryDescription.Expected.Name-->
						</Parameter>
						<Parameter>7<!--CheckEntryDescription.Expected.Type-->
						</Parameter>
						<Parameter>true<!--CheckEntryDescription.Expected.Access.ReadInPreOp-->
						</Parameter>
						<Parameter>true<!--CheckEntryDescription.Expected.Access.ReadInSafeOp-->
						</Parameter>
						<Parameter>true<!--CheckEntryDescription.Expected.Access.ReadInOp-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.Expected.Access.WriteInPreOp-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.Expected.Access.WriteInSafeOp-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.Expected.Access.WriteInOp-->
						</Parameter>
						<Parameter>EmptyString<!--CheckEntryDescription.Expected.Category-->
						</Parameter>
						<Parameter>None<!--CheckEntryDescription.Expected.PdoMapping-->
						</Parameter>
						<Parameter>null<!--CheckEntryDescription.Expected.DefaultData-->
						</Parameter>
						<Parameter>null<!--CheckEntryDescription.Expected.MinData-->
						</Parameter>
						<Parameter>null<!--CheckEntryDescription.Expected.MaxData-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.Expected.Settings-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.Expected.Backup-->
						</Parameter>
						<Parameter>32<!--CheckEntryDescription.Expected.BitSize-->
						</Parameter>
						<Parameter>0<!--CheckEntryDescription.Expected.BitOffs-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.AllowEnumDataType-->
						</Parameter>
						<OutParameter>CoeComm.bError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>CoeComm.bError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="CoeComm.bResult">false</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="WriteSuccess">
					<Compare>
						<Equal>
							<Value1>CoeComm.bResult</Value1>
							<Value2>true</Value2>
							<ReturnSuccess Id="8" Param0="CoeComm.Index" Param1="CoeComm.TmpName">{1} (0x{0:x4}) : the object structure is valid.</ReturnSuccess>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>CoeComm.bResult</Value1>
							<Value2>false</Value2>
							<RaiseError Id="9"></RaiseError>
						</Equal>
					</Compare>
				</TestStep>
			</TestCase>
			<TestCase Name="Error Register Object (0x1001)" CaseId="2">
				<?MAX_OUTPUT_ID 9?>
				<Description>
					<Purpose>Check the optional Error Register object (0x1001). The test case ensures the correct object structure and naming.</Purpose>
					<PreCondition>Device supports Mailbox communication via CoE protocol
ESI provides a offline object dictionary</PreCondition>
					<Action>Check the object structure:
1. Name
2. Data Type
3. Object Code
4. Access
5. Bit Size</Action>
					<PostCondition>Skip if the object is not defined.
The structure shall be as described in ETG.1000.6 5.6.7.4.2 Error Register. If at least one value is not equal to the expected value the test case returns a error list containing all errors.
1. Warning if object name is not 'Error Register'
2. Error if data type is not 'USINT8'
3. Error if object code is not 'VAR'
4. Error if access is not 'Read only'
5. Error if BitSize is not 8</PostCondition>
					<References>
						<Reference Chapter="5.6.7.4.2 Error Register" Specification="ETG.1000.6 "></Reference>
					</References>
					<Mandatory>true</Mandatory>
				</Description>
				<TestStep Name="CheckMbxCoeSupport">
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Mailbox</Value1>
							<Value2>false</Value2>
							<SkipCase Id="0">Device does not support mailbox communication</SkipCase>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Mailbox.CoE</Value1>
							<Value2>false</Value2>
							<SkipCase Id="1">Device does not support CoE</SkipCase>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Dictionary</Value1>
							<Value2>false</Value2>
							<SkipCase Id="2">Device does not provide an offline dictionary</SkipCase>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="SetDefaultMandatoryValue">
					<SetVariable Target="CoeComm.IsMandatroy">false</SetVariable>
				</TestStep>
				<TestStep Name="InitResult">
					<SetVariable Target="CoeComm.bResult">true</SetVariable>
				</TestStep>
				<TestStep Name="InitIndex">
					<SetVariable Target="CoeComm.Index">#x1001</SetVariable>
				</TestStep>
				<TestStep Name="InitObjName">
					<SetVariable Target="CoeComm.TmpName">Error Register</SetVariable>
				</TestStep>
				<TestStep>
					<InitArray TargetArray="CoeComm.TmpNames" Length="1"></InitArray>
				</TestStep>
				<TestStep>
					<SetArrayItem TargetArray="CoeComm.TmpNames" Index="0">CoeComm.TmpName</SetArrayItem>
				</TestStep>
				<TestStep Name="GetOD">
					<Description Id="3">Getting offline dictionary from assigned ESI...</Description>
					<GetObjectDictionary Target="CoeComm.Dict">
						<DictionaryType>Offline</DictionaryType>
					</GetObjectDictionary>
					<RaiseErrorOnFailure Id="4">Failed to get offline dictionary.</RaiseErrorOnFailure>
				</TestStep>
				<TestStep Name="SkipCheckObjDefinedIfMandatory">
					<!--In case of a not defined object the function Check Object Description will return an error-->
					<Compare>
						<Equal>
							<Value1>CoeComm.IsMandatroy</Value1>
							<Value2>true</Value2>
							<GotoStep>VerifyObjDescr</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CheckIfObjIsDefined">
					<CallTestFunction Name="IsObjectDefined">
						<Parameter>CoeComm.Dict</Parameter>
						<Parameter>CoeComm.Index</Parameter>
						<OutParameter>CoeComm.TmpBool</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>CoeComm.TmpBool</Value1>
							<Value2>false</Value2>
							<SkipCase Id="5" Param0="CoeComm.Index" Param1="CoeComm.TmpName">The object '{1}' 0x{0:x4} is not defined.</SkipCase>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="VerifyObjDescr">
					<Description Id="6" Param0="CoeComm.Index" Level="Output">0x{0:x4} Checking object description...</Description>
					<CallTestFunction Name="CheckObjectDescription">
						<Parameter>CoeComm.Dict</Parameter>
						<Parameter>offline</Parameter>
						<Parameter>CoeComm.Index<!--VerifyObjectDescription.Index-->
						</Parameter>
						<Parameter>false<!--VerifyObjectDescription.LevelWarning-->
						</Parameter>
						<Parameter>false</Parameter>
						<Parameter>CoeComm.TmpNames<!--VerifyObjectDescription.Expected.Names-->
						</Parameter>
						<Parameter>5<!--VerifyObjectDescription.Expected.Type-->
						</Parameter>
						<Parameter>7<!--VerifyObjectDescription.Expected.ObjectCode-->
						</Parameter>
						<Parameter>8<!--VerifyObjectDescription.Expected.BitSize-->
						</Parameter>
						<OutParameter>CoeComm.bError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>CoeComm.bError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="CoeComm.bResult">false</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="VerifySi0Descr">
					<Description Id="7" Level="Output" Param0="CoeComm.Index">0x{0:x4}.0 Checking entry description...</Description>
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>CoeComm.Dict<!--CheckEntryDescription.ObjectDictionary-->
						</Parameter>
						<Parameter>offline<!--CheckEntryDescription.DictionaryType-->
						</Parameter>
						<Parameter>CoeComm.Index<!--CheckEntryDescription.Index-->
						</Parameter>
						<Parameter>0<!--CheckEntryDescription.SubIndex-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.LevelWarning-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.CaseSensitive-->
						</Parameter>
						<Parameter>EmptyString<!--CheckEntryDescription.Expected.Name-->
						</Parameter>
						<Parameter>5<!--CheckEntryDescription.Expected.Type-->
						</Parameter>
						<Parameter>true<!--CheckEntryDescription.Expected.Access.ReadInPreOp-->
						</Parameter>
						<Parameter>true<!--CheckEntryDescription.Expected.Access.ReadInSafeOp-->
						</Parameter>
						<Parameter>true<!--CheckEntryDescription.Expected.Access.ReadInOp-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.Expected.Access.WriteInPreOp-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.Expected.Access.WriteInSafeOp-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.Expected.Access.WriteInOp-->
						</Parameter>
						<Parameter>EmptyString<!--CheckEntryDescription.Expected.Category-->
						</Parameter>
						<Parameter>EmptyString<!--CheckEntryDescription.Expected.PdoMapping-->
						</Parameter>
						<Parameter>null<!--CheckEntryDescription.Expected.DefaultData-->
						</Parameter>
						<Parameter>null<!--CheckEntryDescription.Expected.MinData-->
						</Parameter>
						<Parameter>null<!--CheckEntryDescription.Expected.MaxData-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.Expected.Settings-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.Expected.Backup-->
						</Parameter>
						<Parameter>8<!--CheckEntryDescription.Expected.BitSize-->
						</Parameter>
						<Parameter>0<!--CheckEntryDescription.Expected.BitOffs-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.AllowEnumDataType-->
						</Parameter>
						<OutParameter>CoeComm.bError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>CoeComm.bError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="CoeComm.bResult">false</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="WriteSuccess">
					<Compare>
						<Equal>
							<Value1>CoeComm.bResult</Value1>
							<Value2>true</Value2>
							<ReturnSuccess Id="8" Param0="CoeComm.Index" Param1="CoeComm.TmpName">{1} (0x{0:x4}) : the object structure is valid.</ReturnSuccess>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>CoeComm.bResult</Value1>
							<Value2>false</Value2>
							<RaiseError Id="9"></RaiseError>
						</Equal>
					</Compare>
				</TestStep>
			</TestCase>
			<TestCase Name="Manufacturer Device Name Object (0x1008)" CaseId="3">
				<?MAX_OUTPUT_ID 9?>
				<Description>
					<Purpose>Check the Manufacturer Device Name object (0x1008). The test case ensures the correct object structure and naming.</Purpose>
					<PreCondition>Device supports Mailbox communication via CoE protocol
ESI provides a offline object dictionary</PreCondition>
					<Action>Check the object structure:
1. Name
2. Data Type
3. Object Code
4. Access
5. Pdo mapping</Action>
					<PostCondition>If the device profile 5001 is supported the object is mandatory.
The structure shall be as described in ETG.1000.6 5.6.7.4.3 Manufacturer Device Name. If at least one value is not equal to the expected value the test case returns a error list containing all errors.
1. Warning if object name is not 'Manufacturer Device Name' or 'Device Name'
2. Error if data type is not 'VISIBLE_STRING'
3. Error if object code is not 'VAR'
4. Error if access is not 'Read only'
5. Error if Pdo mapping is defined</PostCondition>
					<References>
						<Reference Chapter="5.6.7.4.3 Manufacturer Device Name" Specification="ETG.1000.6 "></Reference>
						<Reference Chapter="4.3.1.2 Device Name" Specification="ETG.5001.1"></Reference>
					</References>
					<Mandatory>true</Mandatory>
				</Description>
				<TestStep Name="CheckMbxCoeSupport">
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Mailbox</Value1>
							<Value2>false</Value2>
							<SkipCase Id="0">Device does not support mailbox communication</SkipCase>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Mailbox.CoE</Value1>
							<Value2>false</Value2>
							<SkipCase Id="1">Device does not support CoE</SkipCase>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Dictionary</Value1>
							<Value2>false</Value2>
							<SkipCase Id="2">Device does not provide an offline dictionary</SkipCase>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="SetDefaultMandatoryValue">
					<SetVariable Target="CoeComm.IsMandatroy">false</SetVariable>
				</TestStep>
				<TestStep Name="GetDeviceProfile">
					<CallTestFunction Name="DeviceProfileSupported">
						<Parameter>"offline"</Parameter>
						<Parameter>5001</Parameter>
						<OutParameter>CoeComm.IsMandatroy</OutParameter>
					</CallTestFunction>
				</TestStep>
				<TestStep Name="InitResult">
					<SetVariable Target="CoeComm.bResult">true</SetVariable>
				</TestStep>
				<TestStep Name="InitIndex">
					<SetVariable Target="CoeComm.Index">#x1008</SetVariable>
				</TestStep>
				<TestStep Name="InitObjName">
					<SetVariable Target="CoeComm.TmpName">Manufacturer Device Name</SetVariable>
				</TestStep>
				<TestStep>
					<InitArray TargetArray="CoeComm.TmpNames" Length="2"></InitArray>
				</TestStep>
				<TestStep>
					<SetArrayItem TargetArray="CoeComm.TmpNames" Index="0">CoeComm.TmpName</SetArrayItem>
				</TestStep>
				<TestStep>
					<SetArrayItem TargetArray="CoeComm.TmpNames" Index="1">"Device Name"</SetArrayItem>
				</TestStep>
				<TestStep Name="GetOD">
					<Description Id="3">Getting offline dictionary from assigned ESI...</Description>
					<GetObjectDictionary Target="CoeComm.Dict">
						<DictionaryType>Offline</DictionaryType>
					</GetObjectDictionary>
					<RaiseErrorOnFailure Id="4">Failed to get offline dictionary.</RaiseErrorOnFailure>
				</TestStep>
				<TestStep Name="SkipCheckObjDefinedIfMandatory">
					<!--In case of a not defined object the function Check Object Description will return an error-->
					<Compare>
						<Equal>
							<Value1>CoeComm.IsMandatroy</Value1>
							<Value2>true</Value2>
							<GotoStep>VerifyObjDescr</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CheckIfObjIsDefined">
					<CallTestFunction Name="IsObjectDefined">
						<Parameter>CoeComm.Dict</Parameter>
						<Parameter>CoeComm.Index</Parameter>
						<OutParameter>CoeComm.TmpBool</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>CoeComm.TmpBool</Value1>
							<Value2>false</Value2>
							<SkipCase Id="5" Param0="CoeComm.Index" Param1="CoeComm.TmpName">The object '{1}' 0x{0:x4} is not defined.</SkipCase>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="VerifyObjDescr">
					<Description Id="6" Param0="CoeComm.Index" Level="Output">0x{0:x4} Checking object description...</Description>
					<CallTestFunction Name="CheckObjectDescription">
						<Parameter>CoeComm.Dict</Parameter>
						<Parameter>offline</Parameter>
						<Parameter>CoeComm.Index<!--VerifyObjectDescription.Index-->
						</Parameter>
						<Parameter>false<!--VerifyObjectDescription.LevelWarning-->
						</Parameter>
						<Parameter>false</Parameter>
						<Parameter>CoeComm.TmpNames<!--VerifyObjectDescription.Expected.Names-->
						</Parameter>
						<Parameter>9<!--VerifyObjectDescription.Expected.Type-->
						</Parameter>
						<Parameter>7<!--VerifyObjectDescription.Expected.ObjectCode-->
						</Parameter>
						<Parameter>-1<!--VerifyObjectDescription.Expected.BitSize-->
						</Parameter>
						<OutParameter>CoeComm.bError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>CoeComm.bError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="CoeComm.bResult">false</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="VerifySi0Descr">
					<Description Id="7" Param0="CoeComm.Index" Level="Output">0x{0:x4}.0 Checking entry description...</Description>
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>CoeComm.Dict<!--CheckEntryDescription.ObjectDictionary-->
						</Parameter>
						<Parameter>offline<!--CheckEntryDescription.DictionaryType-->
						</Parameter>
						<Parameter>CoeComm.Index<!--CheckEntryDescription.Index-->
						</Parameter>
						<Parameter>0<!--CheckEntryDescription.SubIndex-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.LevelWarning-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.CaseSensitive-->
						</Parameter>
						<Parameter>EmptyString<!--CheckEntryDescription.Expected.Name-->
						</Parameter>
						<Parameter>9<!--CheckEntryDescription.Expected.Type-->
						</Parameter>
						<Parameter>true<!--CheckEntryDescription.Expected.Access.ReadInPreOp-->
						</Parameter>
						<Parameter>true<!--CheckEntryDescription.Expected.Access.ReadInSafeOp-->
						</Parameter>
						<Parameter>true<!--CheckEntryDescription.Expected.Access.ReadInOp-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.Expected.Access.WriteInPreOp-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.Expected.Access.WriteInSafeOp-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.Expected.Access.WriteInOp-->
						</Parameter>
						<Parameter>EmptyString<!--CheckEntryDescription.Expected.Category-->
						</Parameter>
						<Parameter>None<!--CheckEntryDescription.Expected.PdoMapping-->
						</Parameter>
						<Parameter>null<!--CheckEntryDescription.Expected.DefaultData-->
						</Parameter>
						<Parameter>null<!--CheckEntryDescription.Expected.MinData-->
						</Parameter>
						<Parameter>null<!--CheckEntryDescription.Expected.MaxData-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.Expected.Settings-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.Expected.Backup-->
						</Parameter>
						<Parameter>-1<!--CheckEntryDescription.Expected.BitSize-->
						</Parameter>
						<Parameter>0<!--CheckEntryDescription.Expected.BitOffs-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.AllowEnumDataType-->
						</Parameter>
						<OutParameter>CoeComm.bError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>CoeComm.bError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="CoeComm.bResult">false</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="WriteSuccess">
					<Compare>
						<Equal>
							<Value1>CoeComm.bResult</Value1>
							<Value2>true</Value2>
							<ReturnSuccess Id="8" Param0="CoeComm.Index" Param1="CoeComm.TmpName">{1} (0x{0:x4}) : the object structure is valid.</ReturnSuccess>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>CoeComm.bResult</Value1>
							<Value2>false</Value2>
							<RaiseError Id="9"></RaiseError>
						</Equal>
					</Compare>
				</TestStep>
			</TestCase>
			<TestCase Name="Manufacturer Hardware Version Object (0x1009)" CaseId="4">
				<?MAX_OUTPUT_ID 9?>
				<Description>
					<Purpose>Check the Manufacturer Hardware Version object (0x1009). The test case ensures the correct object structure and naming.</Purpose>
					<PreCondition>Device supports Mailbox communication via CoE protocol
ESI provides a offline object dictionary</PreCondition>
					<Action>Check the object structure:
1. Name
2. Data Type
3. Object Code
4. Access
5. Pdo mapping</Action>
					<PostCondition>If the device profile 5001 is supported the object is mandatory.
The structure shall be as described in ETG.1000.6 5.6.7.4.4 Manufacturer Hardware Version. If at least one value is not equal to the expected value the test case returns a error list containing all errors.
1. Warning if object name is not 'Manufacturer Hardware Version' or 'Hardware Version'
2. Error if data type is not 'VISIBLE_STRING'
3. Error if object code is not 'VAR'
4. Error if access is not 'Read only'
5. Error if Pdo mapping is defined</PostCondition>
					<References>
						<Reference Chapter="5.6.7.4.4 Manufacturer Hardware Version" Specification="ETG.1000.6 "></Reference>
						<Reference Chapter="4.3.1.2 Hardware Version" Specification="ETG.5001.1"></Reference>
					</References>
					<Mandatory>true</Mandatory>
				</Description>
				<TestStep Name="CheckMbxCoeSupport">
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Mailbox</Value1>
							<Value2>false</Value2>
							<SkipCase Id="0">Device does not support mailbox communication</SkipCase>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Mailbox.CoE</Value1>
							<Value2>false</Value2>
							<SkipCase Id="1">Device does not support CoE</SkipCase>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Dictionary</Value1>
							<Value2>false</Value2>
							<SkipCase Id="2">Device does not provide an offline dictionary</SkipCase>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="SetDefaultMandatoryValue">
					<SetVariable Target="CoeComm.IsMandatroy">false</SetVariable>
				</TestStep>
				<TestStep Name="GetDeviceProfile">
					<CallTestFunction Name="DeviceProfileSupported">
						<Parameter>"offline"</Parameter>
						<Parameter>5001</Parameter>
						<OutParameter>CoeComm.IsMandatroy</OutParameter>
					</CallTestFunction>
				</TestStep>
				<TestStep Name="InitResult">
					<SetVariable Target="CoeComm.bResult">true</SetVariable>
				</TestStep>
				<TestStep Name="InitIndex">
					<SetVariable Target="CoeComm.Index">#x1009</SetVariable>
				</TestStep>
				<TestStep Name="InitObjName">
					<SetVariable Target="CoeComm.TmpName">Manufacturer Hardware Version</SetVariable>
				</TestStep>
				<TestStep>
					<InitArray TargetArray="CoeComm.TmpNames" Length="2"></InitArray>
				</TestStep>
				<TestStep>
					<SetArrayItem TargetArray="CoeComm.TmpNames" Index="0">CoeComm.TmpName</SetArrayItem>
				</TestStep>
				<TestStep>
					<SetArrayItem TargetArray="CoeComm.TmpNames" Index="1">"Hardware Version"</SetArrayItem>
				</TestStep>
				<TestStep Name="GetOD">
					<Description Id="3">Getting offline dictionary from assigned ESI...</Description>
					<GetObjectDictionary Target="CoeComm.Dict">
						<DictionaryType>Offline</DictionaryType>
					</GetObjectDictionary>
					<RaiseErrorOnFailure Id="4">Failed to get offline dictionary.</RaiseErrorOnFailure>
				</TestStep>
				<TestStep Name="SkipCheckObjDefinedIfMandatory">
					<!--In case of a not defined object the function Check Object Description will return an error-->
					<Compare>
						<Equal>
							<Value1>CoeComm.IsMandatroy</Value1>
							<Value2>true</Value2>
							<GotoStep>VerifyObjDescr</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CheckIfObjIsDefined">
					<CallTestFunction Name="IsObjectDefined">
						<Parameter>CoeComm.Dict</Parameter>
						<Parameter>CoeComm.Index</Parameter>
						<OutParameter>CoeComm.TmpBool</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>CoeComm.TmpBool</Value1>
							<Value2>false</Value2>
							<SkipCase Id="5" Param0="CoeComm.Index" Param1="CoeComm.TmpName">The object '{1}' 0x{0:x4} is not defined.</SkipCase>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="VerifyObjDescr">
					<Description Id="6" Param0="CoeComm.Index" Level="Output">0x{0:x4} Checking object description...</Description>
					<CallTestFunction Name="CheckObjectDescription">
						<Parameter>CoeComm.Dict</Parameter>
						<Parameter>offline</Parameter>
						<Parameter>CoeComm.Index<!--VerifyObjectDescription.Index-->
						</Parameter>
						<Parameter>false<!--VerifyObjectDescription.LevelWarning-->
						</Parameter>
						<Parameter>false</Parameter>
						<Parameter>CoeComm.TmpNames<!--VerifyObjectDescription.Expected.Names-->
						</Parameter>
						<Parameter>9<!--VerifyObjectDescription.Expected.Type-->
						</Parameter>
						<Parameter>7<!--VerifyObjectDescription.Expected.ObjectCode-->
						</Parameter>
						<Parameter>-1<!--VerifyObjectDescription.Expected.BitSize-->
						</Parameter>
						<OutParameter>CoeComm.bError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>CoeComm.bError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="CoeComm.bResult">false</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="VerifySi0Descr">
					<Description Id="7" Param0="CoeComm.Index" Level="Output">0x{0:x4}.0 Checking entry description...</Description>
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>CoeComm.Dict<!--CheckEntryDescription.ObjectDictionary-->
						</Parameter>
						<Parameter>offline<!--CheckEntryDescription.DictionaryType-->
						</Parameter>
						<Parameter>CoeComm.Index<!--CheckEntryDescription.Index-->
						</Parameter>
						<Parameter>0<!--CheckEntryDescription.SubIndex-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.LevelWarning-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.CaseSensitive-->
						</Parameter>
						<Parameter>EmptyString<!--CheckEntryDescription.Expected.Name-->
						</Parameter>
						<Parameter>9<!--CheckEntryDescription.Expected.Type-->
						</Parameter>
						<Parameter>true<!--CheckEntryDescription.Expected.Access.ReadInPreOp-->
						</Parameter>
						<Parameter>true<!--CheckEntryDescription.Expected.Access.ReadInSafeOp-->
						</Parameter>
						<Parameter>true<!--CheckEntryDescription.Expected.Access.ReadInOp-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.Expected.Access.WriteInPreOp-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.Expected.Access.WriteInSafeOp-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.Expected.Access.WriteInOp-->
						</Parameter>
						<Parameter>EmptyString<!--CheckEntryDescription.Expected.Category-->
						</Parameter>
						<Parameter>None<!--CheckEntryDescription.Expected.PdoMapping-->
						</Parameter>
						<Parameter>null<!--CheckEntryDescription.Expected.DefaultData-->
						</Parameter>
						<Parameter>null<!--CheckEntryDescription.Expected.MinData-->
						</Parameter>
						<Parameter>null<!--CheckEntryDescription.Expected.MaxData-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.Expected.Settings-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.Expected.Backup-->
						</Parameter>
						<Parameter>-1<!--CheckEntryDescription.Expected.BitSize-->
						</Parameter>
						<Parameter>0<!--CheckEntryDescription.Expected.BitOffs-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.AllowEnumDataType-->
						</Parameter>
						<OutParameter>CoeComm.bError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>CoeComm.bError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="CoeComm.bResult">false</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="WriteSuccess">
					<Compare>
						<Equal>
							<Value1>CoeComm.bResult</Value1>
							<Value2>true</Value2>
							<ReturnSuccess Id="8" Param0="CoeComm.Index" Param1="CoeComm.TmpName">{1} (0x{0:x4}) : the object structure is valid.</ReturnSuccess>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>CoeComm.bResult</Value1>
							<Value2>false</Value2>
							<RaiseError Id="9"></RaiseError>
						</Equal>
					</Compare>
				</TestStep>
			</TestCase>
			<TestCase Name="Manufacturer Software Version Object (0x100A)" CaseId="5">
				<?MAX_OUTPUT_ID 9?>
				<Description>
					<Purpose>Check the Manufacturer Software Version object (0x100A). The test case ensures the correct object structure and naming.</Purpose>
					<PreCondition>Device supports Mailbox communication via CoE protocol
ESI provides a offline object dictionary</PreCondition>
					<Action>Check the object structure:
1. Name
2. Data Type
3. Object Code
4. Access
5. Pdo mapping</Action>
					<PostCondition>If the device profile 5001 is supported the object is mandatory.
The structure shall be as described in ETG.1000.6 5.6.7.4.5 Manufacturer Software Version. If at least one value is not equal to the expected value the test case returns a error list containing all errors.
1. Warning if object name is not 'Manufacturer Software Version' or 'Software Version'
2. Error if data type is not 'VISIBLE_STRING'
3. Error if object code is not 'VAR'
4. Error if access is not 'Read only'
5. Error if Pdo mapping is defined</PostCondition>
					<References>
						<Reference Chapter="5.6.7.4.5 Manufacturer Software Version" Specification="ETG.1000.6 "></Reference>
						<Reference Chapter="4.3.1.2 Software Version" Specification="ETG.5001.1"></Reference>
					</References>
					<Mandatory>true</Mandatory>
				</Description>
				<TestStep Name="CheckMbxCoeSupport">
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Mailbox</Value1>
							<Value2>false</Value2>
							<SkipCase Id="0">Device does not support mailbox communication</SkipCase>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Mailbox.CoE</Value1>
							<Value2>false</Value2>
							<SkipCase Id="1">Device does not support CoE</SkipCase>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Dictionary</Value1>
							<Value2>false</Value2>
							<SkipCase Id="2">Device does not provide an offline dictionary</SkipCase>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="SetDefaultMandatoryValue">
					<SetVariable Target="CoeComm.IsMandatroy">false</SetVariable>
				</TestStep>
				<TestStep Name="GetDeviceProfile">
					<CallTestFunction Name="DeviceProfileSupported">
						<Parameter>"offline"</Parameter>
						<Parameter>5001</Parameter>
						<OutParameter>CoeComm.IsMandatroy</OutParameter>
					</CallTestFunction>
				</TestStep>
				<TestStep Name="InitResult">
					<SetVariable Target="CoeComm.bResult">true</SetVariable>
				</TestStep>
				<TestStep Name="InitIndex">
					<SetVariable Target="CoeComm.Index">#x100A</SetVariable>
				</TestStep>
				<TestStep Name="InitObjName">
					<SetVariable Target="CoeComm.TmpName">Manufacturer Software Version</SetVariable>
				</TestStep>
				<TestStep>
					<InitArray TargetArray="CoeComm.TmpNames" Length="2"></InitArray>
				</TestStep>
				<TestStep>
					<SetArrayItem TargetArray="CoeComm.TmpNames" Index="0">CoeComm.TmpName</SetArrayItem>
				</TestStep>
				<TestStep>
					<SetArrayItem TargetArray="CoeComm.TmpNames" Index="1">"Software Version"</SetArrayItem>
				</TestStep>
				<TestStep Name="GetOD">
					<Description Id="3">Getting offline dictionary from assigned ESI...</Description>
					<GetObjectDictionary Target="CoeComm.Dict">
						<DictionaryType>Offline</DictionaryType>
					</GetObjectDictionary>
					<RaiseErrorOnFailure Id="4">Failed to get offline dictionary.</RaiseErrorOnFailure>
				</TestStep>
				<TestStep Name="SkipCheckObjDefinedIfMandatory">
					<!--In case of a not defined object the function Check Object Description will return an error-->
					<Compare>
						<Equal>
							<Value1>CoeComm.IsMandatroy</Value1>
							<Value2>true</Value2>
							<GotoStep>VerifyObjDescr</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CheckIfObjIsDefined">
					<CallTestFunction Name="IsObjectDefined">
						<Parameter>CoeComm.Dict</Parameter>
						<Parameter>CoeComm.Index</Parameter>
						<OutParameter>CoeComm.TmpBool</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>CoeComm.TmpBool</Value1>
							<Value2>false</Value2>
							<SkipCase Id="5" Param0="CoeComm.Index" Param1="CoeComm.TmpName">The object '{1}' 0x{0:x4} is not defined.</SkipCase>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="VerifyObjDescr">
					<Description Id="6" Param0="CoeComm.Index" Level="Output">0x{0:x4} Checking object description...</Description>
					<CallTestFunction Name="CheckObjectDescription">
						<Parameter>CoeComm.Dict</Parameter>
						<Parameter>offline</Parameter>
						<Parameter>CoeComm.Index<!--VerifyObjectDescription.Index-->
						</Parameter>
						<Parameter>false<!--VerifyObjectDescription.LevelWarning-->
						</Parameter>
						<Parameter>false</Parameter>
						<Parameter>CoeComm.TmpNames<!--VerifyObjectDescription.Expected.Names-->
						</Parameter>
						<Parameter>9<!--VerifyObjectDescription.Expected.Type-->
						</Parameter>
						<Parameter>7<!--VerifyObjectDescription.Expected.ObjectCode-->
						</Parameter>
						<Parameter>-1<!--VerifyObjectDescription.Expected.BitSize-->
						</Parameter>
						<OutParameter>CoeComm.bError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>CoeComm.bError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="CoeComm.bResult">false</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="VerifySi0Descr">
					<Description Id="7" Param0="CoeComm.Index" Level="Output">0x{0:x4}.0 Checking entry description...</Description>
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>CoeComm.Dict<!--CheckEntryDescription.ObjectDictionary-->
						</Parameter>
						<Parameter>offline<!--CheckEntryDescription.DictionaryType-->
						</Parameter>
						<Parameter>CoeComm.Index<!--CheckEntryDescription.Index-->
						</Parameter>
						<Parameter>0<!--CheckEntryDescription.SubIndex-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.LevelWarning-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.CaseSensitive-->
						</Parameter>
						<Parameter>EmptyString<!--CheckEntryDescription.Expected.Name-->
						</Parameter>
						<Parameter>9<!--CheckEntryDescription.Expected.Type-->
						</Parameter>
						<Parameter>true<!--CheckEntryDescription.Expected.Access.ReadInPreOp-->
						</Parameter>
						<Parameter>true<!--CheckEntryDescription.Expected.Access.ReadInSafeOp-->
						</Parameter>
						<Parameter>true<!--CheckEntryDescription.Expected.Access.ReadInOp-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.Expected.Access.WriteInPreOp-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.Expected.Access.WriteInSafeOp-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.Expected.Access.WriteInOp-->
						</Parameter>
						<Parameter>EmptyString<!--CheckEntryDescription.Expected.Category-->
						</Parameter>
						<Parameter>None<!--CheckEntryDescription.Expected.PdoMapping-->
						</Parameter>
						<Parameter>null<!--CheckEntryDescription.Expected.DefaultData-->
						</Parameter>
						<Parameter>null<!--CheckEntryDescription.Expected.MinData-->
						</Parameter>
						<Parameter>null<!--CheckEntryDescription.Expected.MaxData-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.Expected.Settings-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.Expected.Backup-->
						</Parameter>
						<Parameter>-1<!--CheckEntryDescription.Expected.BitSize-->
						</Parameter>
						<Parameter>0<!--CheckEntryDescription.Expected.BitOffs-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.AllowEnumDataType-->
						</Parameter>
						<OutParameter>CoeComm.bError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>CoeComm.bError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="CoeComm.bResult">false</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="WriteSuccess">
					<Compare>
						<Equal>
							<Value1>CoeComm.bResult</Value1>
							<Value2>true</Value2>
							<ReturnSuccess Id="8" Param0="CoeComm.Index" Param1="CoeComm.TmpName">{1} (0x{0:x4}) : the object structure is valid.</ReturnSuccess>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>CoeComm.bResult</Value1>
							<Value2>false</Value2>
							<RaiseError Id="9"></RaiseError>
						</Equal>
					</Compare>
				</TestStep>
			</TestCase>
			<TestCase Name="Identity Object (0x1018)" CaseId="6">
				<?MAX_OUTPUT_ID 13?>
				<Description>
					<Purpose>The offline dictionary shall contain the mandatory Identity Object (index 0x1018). The test case ensures the correct object structure and naming.</Purpose>
					<PreCondition>Device supports Mailbox communication via CoE protocol
ESI provides a offline object dictionary</PreCondition>
					<Action>Check the object structure:
1. Name
2. Data Type
3. Object Code
4. Access
5. Pdo mapping
6. Bit Size</Action>
					<PostCondition>The offline dictionary shall contain the mandatory Identity Object.
The structure shall be as described in ETG.1000.6 5.6.7.4.6 Identity Object. If at least one value is not equal to the expected value the test case returns a error list containing all errors.
Object Description:
1. Warning if the name is not 'Identity'
6. Error if BitSize is not 144
Subindex 1:
1.1. Warning if the name is not 'Vendor ID'
2.1. Error if data type is not 'USINT32'
4.1. Error if access is not 'Read only'
5.1. Error if Pdo mapping is defined
6.1. Error if BitSize is not 32
Subindex 2:
1.2. Warning if the name is not 'Product Code'
2.2. Error if data type is not 'USINT32'
4.2. Error if access is not 'Read only'
5.2. Error if Pdo mapping is defined
6.2. Error if BitSize is not 32
Subindex 3:
1.3. Warning if the name is not 'Revision Number'
2.3. Error if data type is not 'USINT32'
4.3. Error if access is not 'Read only'
5.3. Error if Pdo mapping is defined
6.3. Error if BitSize is not 32
Subindex 4:
1.4. Warning if the name is not 'Serial Number'
2.4. Error if data type is not 'USINT32'
4.4. Error if access is not 'Read only'
5.4. Error if Pdo mapping is defined
6.4. Error if BitSize is not 32</PostCondition>
					<References>
						<Reference Chapter="5.6.7.4.6 Identity Object" Specification="ETG.1000.6 "></Reference>
					</References>
					<Mandatory>true</Mandatory>
				</Description>
				<TestStep Name="CheckMbxCoeSupport">
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Mailbox</Value1>
							<Value2>false</Value2>
							<SkipCase Id="0">Device does not support mailbox communication</SkipCase>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Mailbox.CoE</Value1>
							<Value2>false</Value2>
							<SkipCase Id="1">Device does not support CoE</SkipCase>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Dictionary</Value1>
							<Value2>false</Value2>
							<SkipCase Id="2">Device does not provide an offline dictionary</SkipCase>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="SetDefaultMandatoryValue">
					<SetVariable Target="CoeComm.IsMandatroy">true</SetVariable>
				</TestStep>
				<TestStep Name="InitResult">
					<SetVariable Target="CoeComm.bResult">true</SetVariable>
				</TestStep>
				<TestStep Name="InitIndex">
					<SetVariable Target="CoeComm.Index">#x1018</SetVariable>
				</TestStep>
				<TestStep Name="InitObjName">
					<SetVariable Target="CoeComm.TmpName">Identity</SetVariable>
				</TestStep>
				<TestStep>
					<InitArray TargetArray="CoeComm.TmpNames" Length="2"></InitArray>
				</TestStep>
				<TestStep>
					<SetArrayItem TargetArray="CoeComm.TmpNames" Index="0">CoeComm.TmpName</SetArrayItem>
				</TestStep>
				<TestStep>
					<SetArrayItem TargetArray="CoeComm.TmpNames" Index="1">"Identity Object"</SetArrayItem>
				</TestStep>
				<TestStep Name="GetOD">
					<Description Id="3">Getting offline dictionary from assigned ESI...</Description>
					<GetObjectDictionary Target="CoeComm.Dict">
						<DictionaryType>Offline</DictionaryType>
					</GetObjectDictionary>
					<RaiseErrorOnFailure Id="4">Failed to get offline dictionary.</RaiseErrorOnFailure>
				</TestStep>
				<TestStep Name="SkipCheckObjDefinedIfMandatory">
					<!--In case of a not defined object the function Check Object Description will return an error-->
					<Compare>
						<Equal>
							<Value1>CoeComm.IsMandatroy</Value1>
							<Value2>true</Value2>
							<GotoStep>VerifyObjDescr</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CheckIfObjIsDefined">
					<CallTestFunction Name="IsObjectDefined">
						<Parameter>CoeComm.Dict</Parameter>
						<Parameter>CoeComm.Index</Parameter>
						<OutParameter>CoeComm.TmpBool</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>CoeComm.TmpBool</Value1>
							<Value2>false</Value2>
							<SkipCase Id="5" Param0="CoeComm.Index" Param1="CoeComm.TmpName">The object '{1}' 0x{0:x4} is not defined.</SkipCase>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="VerifyObjDescr">
					<Description Id="6" Param0="CoeComm.Index" Level="Output">0x{0:x4} Checking object description...</Description>
					<CallTestFunction Name="CheckObjectDescription">
						<Parameter>CoeComm.Dict</Parameter>
						<Parameter>offline</Parameter>
						<Parameter>CoeComm.Index<!--VerifyObjectDescription.Index-->
						</Parameter>
						<Parameter>false<!--VerifyObjectDescription.LevelWarning-->
						</Parameter>
						<Parameter>false</Parameter>
						<Parameter>CoeComm.TmpNames<!--VerifyObjectDescription.Expected.Names-->
						</Parameter>
						<Parameter>0<!--VerifyObjectDescription.Expected.Type-->
						</Parameter>
						<Parameter>9<!--VerifyObjectDescription.Expected.ObjectCode-->
						</Parameter>
						<Parameter>144<!--VerifyObjectDescription.Expected.BitSize-->
						</Parameter>
						<OutParameter>CoeComm.bError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>CoeComm.bError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="CoeComm.bResult">false</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="VerifySi0Descr">
					<Description Id="7" Param0="CoeComm.Index" Level="Output">0x{0:x4}.0 Checking entry description...</Description>
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>CoeComm.Dict<!--CheckEntryDescription.ObjectDictionary-->
						</Parameter>
						<Parameter>offline<!--CheckEntryDescription.DictionaryType-->
						</Parameter>
						<Parameter>CoeComm.Index<!--CheckEntryDescription.Index-->
						</Parameter>
						<Parameter>0<!--CheckEntryDescription.SubIndex-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.LevelWarning-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.CaseSensitive-->
						</Parameter>
						<Parameter>EmptyString<!--CheckEntryDescription.Expected.Name-->
						</Parameter>
						<Parameter>5<!--CheckEntryDescription.Expected.Type-->
						</Parameter>
						<Parameter>true<!--CheckEntryDescription.Expected.Access.ReadInPreOp-->
						</Parameter>
						<Parameter>true<!--CheckEntryDescription.Expected.Access.ReadInSafeOp-->
						</Parameter>
						<Parameter>true<!--CheckEntryDescription.Expected.Access.ReadInOp-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.Expected.Access.WriteInPreOp-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.Expected.Access.WriteInSafeOp-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.Expected.Access.WriteInOp-->
						</Parameter>
						<Parameter>EmptyString<!--CheckEntryDescription.Expected.Category-->
						</Parameter>
						<Parameter>None<!--CheckEntryDescription.Expected.PdoMapping-->
						</Parameter>
						<Parameter>null<!--CheckEntryDescription.Expected.DefaultData-->
						</Parameter>
						<Parameter>null<!--CheckEntryDescription.Expected.MinData-->
						</Parameter>
						<Parameter>null<!--CheckEntryDescription.Expected.MaxData-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.Expected.Settings-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.Expected.Backup-->
						</Parameter>
						<Parameter>8<!--CheckEntryDescription.Expected.BitSize-->
						</Parameter>
						<Parameter>0<!--CheckEntryDescription.Expected.BitOffs-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.AllowEnumDataType-->
						</Parameter>
						<OutParameter>CoeComm.bError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>CoeComm.bError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="CoeComm.bResult">false</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="VerifySi1Descr">
					<Description Id="8" Param0="CoeComm.Index" Level="Output">0x{0:x4}.1 Checking entry description...</Description>
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>CoeComm.Dict<!--CheckEntryDescription.ObjectDictionary-->
						</Parameter>
						<Parameter>offline<!--CheckEntryDescription.DictionaryType-->
						</Parameter>
						<Parameter>CoeComm.Index<!--CheckEntryDescription.Index-->
						</Parameter>
						<Parameter>1<!--CheckEntryDescription.SubIndex-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.LevelWarning-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.CaseSensitive-->
						</Parameter>
						<Parameter>"Vendor ID"</Parameter>
						<!--CheckEntryDescription.Expected.Name-->
						<Parameter>7<!--CheckEntryDescription.Expected.Type-->
						</Parameter>
						<Parameter>true<!--CheckEntryDescription.Expected.Access.ReadInPreOp-->
						</Parameter>
						<Parameter>true<!--CheckEntryDescription.Expected.Access.ReadInSafeOp-->
						</Parameter>
						<Parameter>true<!--CheckEntryDescription.Expected.Access.ReadInOp-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.Expected.Access.WriteInPreOp-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.Expected.Access.WriteInSafeOp-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.Expected.Access.WriteInOp-->
						</Parameter>
						<Parameter>EmptyString<!--CheckEntryDescription.Expected.Category-->
						</Parameter>
						<Parameter>None<!--CheckEntryDescription.Expected.PdoMapping-->
						</Parameter>
						<Parameter>null<!--CheckEntryDescription.Expected.DefaultData-->
						</Parameter>
						<Parameter>null<!--CheckEntryDescription.Expected.MinData-->
						</Parameter>
						<Parameter>null<!--CheckEntryDescription.Expected.MaxData-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.Expected.Settings-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.Expected.Backup-->
						</Parameter>
						<Parameter>32<!--CheckEntryDescription.Expected.BitSize-->
						</Parameter>
						<Parameter>16<!--CheckEntryDescription.Expected.BitOffs-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.AllowEnumDataType-->
						</Parameter>
						<OutParameter>CoeComm.bError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>CoeComm.bError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="CoeComm.bResult">false</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="VerifySi2Descr">
					<Description Id="9" Param0="CoeComm.Index" Level="Output">0x{0:x4}.2 Checking entry description...</Description>
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>CoeComm.Dict<!--CheckEntryDescription.ObjectDictionary-->
						</Parameter>
						<Parameter>offline<!--CheckEntryDescription.DictionaryType-->
						</Parameter>
						<Parameter>CoeComm.Index<!--CheckEntryDescription.Index-->
						</Parameter>
						<Parameter>2<!--CheckEntryDescription.SubIndex-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.LevelWarning-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.CaseSensitive-->
						</Parameter>
						<Parameter>"Product Code"</Parameter>
						<!--CheckEntryDescription.Expected.Name-->
						<Parameter>7<!--CheckEntryDescription.Expected.Type-->
						</Parameter>
						<Parameter>true<!--CheckEntryDescription.Expected.Access.ReadInPreOp-->
						</Parameter>
						<Parameter>true<!--CheckEntryDescription.Expected.Access.ReadInSafeOp-->
						</Parameter>
						<Parameter>true<!--CheckEntryDescription.Expected.Access.ReadInOp-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.Expected.Access.WriteInPreOp-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.Expected.Access.WriteInSafeOp-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.Expected.Access.WriteInOp-->
						</Parameter>
						<Parameter>EmptyString<!--CheckEntryDescription.Expected.Category-->
						</Parameter>
						<Parameter>None<!--CheckEntryDescription.Expected.PdoMapping-->
						</Parameter>
						<Parameter>null<!--CheckEntryDescription.Expected.DefaultData-->
						</Parameter>
						<Parameter>null<!--CheckEntryDescription.Expected.MinData-->
						</Parameter>
						<Parameter>null<!--CheckEntryDescription.Expected.MaxData-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.Expected.Settings-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.Expected.Backup-->
						</Parameter>
						<Parameter>32<!--CheckEntryDescription.Expected.BitSize-->
						</Parameter>
						<Parameter>48<!--CheckEntryDescription.Expected.BitOffs-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.AllowEnumDataType-->
						</Parameter>
						<OutParameter>CoeComm.bError</OutParameter>
					</CallTestFunction>
				</TestStep>
				<TestStep Name="VerifySi3Descr">
					<Description Id="10" Param0="CoeComm.Index" Level="Output">0x{0:x4}.3 Checking entry description...</Description>
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>CoeComm.Dict<!--CheckEntryDescription.ObjectDictionary-->
						</Parameter>
						<Parameter>offline<!--CheckEntryDescription.DictionaryType-->
						</Parameter>
						<Parameter>CoeComm.Index<!--CheckEntryDescription.Index-->
						</Parameter>
						<Parameter>3<!--CheckEntryDescription.SubIndex-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.LevelWarning-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.CaseSensitive-->
						</Parameter>
						<Parameter>"Revision Number","Revision"</Parameter>
						<!--CheckEntryDescription.Expected.Name-->
						<Parameter>7<!--CheckEntryDescription.Expected.Type-->
						</Parameter>
						<Parameter>true<!--CheckEntryDescription.Expected.Access.ReadInPreOp-->
						</Parameter>
						<Parameter>true<!--CheckEntryDescription.Expected.Access.ReadInSafeOp-->
						</Parameter>
						<Parameter>true<!--CheckEntryDescription.Expected.Access.ReadInOp-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.Expected.Access.WriteInPreOp-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.Expected.Access.WriteInSafeOp-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.Expected.Access.WriteInOp-->
						</Parameter>
						<Parameter>EmptyString<!--CheckEntryDescription.Expected.Category-->
						</Parameter>
						<Parameter>None<!--CheckEntryDescription.Expected.PdoMapping-->
						</Parameter>
						<Parameter>null<!--CheckEntryDescription.Expected.DefaultData-->
						</Parameter>
						<Parameter>null<!--CheckEntryDescription.Expected.MinData-->
						</Parameter>
						<Parameter>null<!--CheckEntryDescription.Expected.MaxData-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.Expected.Settings-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.Expected.Backup-->
						</Parameter>
						<Parameter>32<!--CheckEntryDescription.Expected.BitSize-->
						</Parameter>
						<Parameter>80<!--CheckEntryDescription.Expected.BitOffs-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.AllowEnumDataType-->
						</Parameter>
						<OutParameter>CoeComm.bError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>CoeComm.bError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="CoeComm.bResult">false</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="VerifySi4Descr">
					<Description Id="11" Param0="CoeComm.Index" Level="Output">0x{0:x4}.4 Checking entry description...</Description>
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>CoeComm.Dict<!--CheckEntryDescription.ObjectDictionary-->
						</Parameter>
						<Parameter>offline<!--CheckEntryDescription.DictionaryType-->
						</Parameter>
						<Parameter>CoeComm.Index<!--CheckEntryDescription.Index-->
						</Parameter>
						<Parameter>4<!--CheckEntryDescription.SubIndex-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.LevelWarning-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.CaseSensitive-->
						</Parameter>
						<Parameter>"Serial Number"</Parameter>
						<!--CheckEntryDescription.Expected.Name-->
						<Parameter>7<!--CheckEntryDescription.Expected.Type-->
						</Parameter>
						<Parameter>true<!--CheckEntryDescription.Expected.Access.ReadInPreOp-->
						</Parameter>
						<Parameter>true<!--CheckEntryDescription.Expected.Access.ReadInSafeOp-->
						</Parameter>
						<Parameter>true<!--CheckEntryDescription.Expected.Access.ReadInOp-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.Expected.Access.WriteInPreOp-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.Expected.Access.WriteInSafeOp-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.Expected.Access.WriteInOp-->
						</Parameter>
						<Parameter>EmptyString<!--CheckEntryDescription.Expected.Category-->
						</Parameter>
						<Parameter>None<!--CheckEntryDescription.Expected.PdoMapping-->
						</Parameter>
						<Parameter>null<!--CheckEntryDescription.Expected.DefaultData-->
						</Parameter>
						<Parameter>null<!--CheckEntryDescription.Expected.MinData-->
						</Parameter>
						<Parameter>null<!--CheckEntryDescription.Expected.MaxData-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.Expected.Settings-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.Expected.Backup-->
						</Parameter>
						<Parameter>32<!--CheckEntryDescription.Expected.BitSize-->
						</Parameter>
						<Parameter>112<!--CheckEntryDescription.Expected.BitOffs-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.AllowEnumDataType-->
						</Parameter>
						<OutParameter>CoeComm.bError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>CoeComm.bError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="CoeComm.bResult">false</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="WriteSuccess">
					<Compare>
						<Equal>
							<Value1>CoeComm.bResult</Value1>
							<Value2>true</Value2>
							<ReturnSuccess Id="12" Param0="CoeComm.Index" Param1="CoeComm.TmpName">{1} (0x{0:x4}) : the object structure is valid.</ReturnSuccess>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>CoeComm.bResult</Value1>
							<Value2>false</Value2>
							<RaiseError Id="13"></RaiseError>
						</Equal>
					</Compare>
				</TestStep>
			</TestCase>
			<TestCase Name="Error Setting Object (0x10F1)" CaseId="7">
				<?MAX_OUTPUT_ID 11?>
				<Description>
					<Purpose>Check the Error Setting Object (index 0x10F1). The test case ensures the correct object structure and naming.</Purpose>
					<PreCondition>Device supports Mailbox communication via CoE protocol
ESI provides a offline object dictionary</PreCondition>
					<Action>Check the object structure:
1. Name
2. Data Type
3. Object Code
4. Access
5. Pdo mapping
6. Bit Size</Action>
					<PostCondition>The structure shall be as described in ETG.1020 19.2.2 Identity Object. If at least one value is not equal to the expected value the test case returns a error list containing all errors.
Object Description:
1. Warning if the name is not 'Error Setting'
6. Error if BitSize is not 64
Subindex 1:
1.1. Warning if the name is not 'Local Error Reaction'
2.1. Error if data type is not 'USINT32'
4.1. Error if access is not 'Read Write'
5.1. Error if Pdo mapping is defined
6.1. Error if BitSize is not 32
Subindex 2:
1.2. Warning if the name is not 'Sync Error Counter Limit'
2.2. Error if data type is not 'USINT16'
4.2. Error if access is not 'Read Write'
5.2. Error if Pdo mapping is defined
6.2. Error if BitSize is not 16</PostCondition>
					<References>
						<Reference Chapter="19.2.2.2 Error Setting" Specification="ETG.1020"></Reference>
					</References>
					<Mandatory>true</Mandatory>
				</Description>
				<TestStep Name="CheckMbxCoeSupport">
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Mailbox</Value1>
							<Value2>false</Value2>
							<SkipCase Id="0">Device does not support mailbox communication</SkipCase>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Mailbox.CoE</Value1>
							<Value2>false</Value2>
							<SkipCase Id="1">Device does not support CoE</SkipCase>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Dictionary</Value1>
							<Value2>false</Value2>
							<SkipCase Id="2">Device does not provide an offline dictionary</SkipCase>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="SetDefaultMandatoryValue">
					<SetVariable Target="CoeComm.IsMandatroy">false</SetVariable>
				</TestStep>
				<TestStep Name="InitResult">
					<SetVariable Target="CoeComm.bResult">true</SetVariable>
				</TestStep>
				<TestStep Name="InitIndex">
					<SetVariable Target="CoeComm.Index">#x10F1</SetVariable>
				</TestStep>
				<TestStep Name="InitObjName">
					<SetVariable Target="CoeComm.TmpName">Error Setting</SetVariable>
				</TestStep>
				<TestStep>
					<InitArray TargetArray="CoeComm.TmpNames" Length="3"></InitArray>
				</TestStep>
				<TestStep>
					<SetArrayItem TargetArray="CoeComm.TmpNames" Index="0">CoeComm.TmpName</SetArrayItem>
				</TestStep>
				<TestStep>
					<SetArrayItem TargetArray="CoeComm.TmpNames" Index="1">"Error Settings"</SetArrayItem>
				</TestStep>
				<TestStep>
					<SetArrayItem TargetArray="CoeComm.TmpNames" Index="2">"Sync Error Settings"</SetArrayItem>
				</TestStep>
				<TestStep Name="GetOD">
					<Description Id="3">Getting offline dictionary from assigned ESI...</Description>
					<GetObjectDictionary Target="CoeComm.Dict">
						<DictionaryType>Offline</DictionaryType>
					</GetObjectDictionary>
					<RaiseErrorOnFailure Id="4">Failed to get offline dictionary.</RaiseErrorOnFailure>
				</TestStep>
				<TestStep Name="SkipCheckObjDefinedIfMandatory">
					<!--In case of a not defined object the function Check Object Description will return an error-->
					<Compare>
						<Equal>
							<Value1>CoeComm.IsMandatroy</Value1>
							<Value2>true</Value2>
							<GotoStep>VerifyObjDescr</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CheckIfObjIsDefined">
					<CallTestFunction Name="IsObjectDefined">
						<Parameter>CoeComm.Dict</Parameter>
						<Parameter>CoeComm.Index</Parameter>
						<OutParameter>CoeComm.TmpBool</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>CoeComm.TmpBool</Value1>
							<Value2>false</Value2>
							<SkipCase Id="5" Param0="CoeComm.Index" Param1="CoeComm.TmpName">The object '{1}' 0x{0:x4} is not defined.</SkipCase>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="VerifyObjDescr">
					<Description Id="6" Param0="CoeComm.Index" Level="Output">0x{0:x4} Checking object description...</Description>
					<CallTestFunction Name="CheckObjectDescription">
						<Parameter>CoeComm.Dict</Parameter>
						<Parameter>offline</Parameter>
						<Parameter>CoeComm.Index<!--VerifyObjectDescription.Index-->
						</Parameter>
						<Parameter>false<!--VerifyObjectDescription.LevelWarning-->
						</Parameter>
						<Parameter>false</Parameter>
						<Parameter>CoeComm.TmpNames<!--VerifyObjectDescription.Expected.Names-->
						</Parameter>
						<Parameter>0<!--VerifyObjectDescription.Expected.Type-->
						</Parameter>
						<Parameter>9<!--VerifyObjectDescription.Expected.ObjectCode-->
						</Parameter>
						<Parameter>64<!--VerifyObjectDescription.Expected.BitSize-->
						</Parameter>
						<OutParameter>CoeComm.bError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>CoeComm.bError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="CoeComm.bResult">false</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="VerifySi0Descr">
					<Description Id="7" Param0="CoeComm.Index" Level="Output">0x{0:x4}.0 Checking entry description...</Description>
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>CoeComm.Dict<!--CheckEntryDescription.ObjectDictionary-->
						</Parameter>
						<Parameter>offline<!--CheckEntryDescription.DictionaryType-->
						</Parameter>
						<Parameter>CoeComm.Index<!--CheckEntryDescription.Index-->
						</Parameter>
						<Parameter>0<!--CheckEntryDescription.SubIndex-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.LevelWarning-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.CaseSensitive-->
						</Parameter>
						<Parameter>EmptyString<!--CheckEntryDescription.Expected.Name-->
						</Parameter>
						<Parameter>5<!--CheckEntryDescription.Expected.Type-->
						</Parameter>
						<Parameter>true<!--CheckEntryDescription.Expected.Access.ReadInPreOp-->
						</Parameter>
						<Parameter>true<!--CheckEntryDescription.Expected.Access.ReadInSafeOp-->
						</Parameter>
						<Parameter>true<!--CheckEntryDescription.Expected.Access.ReadInOp-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.Expected.Access.WriteInPreOp-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.Expected.Access.WriteInSafeOp-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.Expected.Access.WriteInOp-->
						</Parameter>
						<Parameter>EmptyString<!--CheckEntryDescription.Expected.Category-->
						</Parameter>
						<Parameter>None<!--CheckEntryDescription.Expected.PdoMapping-->
						</Parameter>
						<Parameter>null<!--CheckEntryDescription.Expected.DefaultData-->
						</Parameter>
						<Parameter>null<!--CheckEntryDescription.Expected.MinData-->
						</Parameter>
						<Parameter>null<!--CheckEntryDescription.Expected.MaxData-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.Expected.Settings-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.Expected.Backup-->
						</Parameter>
						<Parameter>8<!--CheckEntryDescription.Expected.BitSize-->
						</Parameter>
						<Parameter>0<!--CheckEntryDescription.Expected.BitOffs-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.AllowEnumDataType-->
						</Parameter>
						<OutParameter>CoeComm.bError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>CoeComm.bError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="CoeComm.bResult">false</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="VerifySi1Descr">
					<Description Id="8" Param0="CoeComm.Index" Level="Output">0x{0:x4}.1 Checking entry description...</Description>
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>CoeComm.Dict<!--CheckEntryDescription.ObjectDictionary-->
						</Parameter>
						<Parameter>offline<!--CheckEntryDescription.DictionaryType-->
						</Parameter>
						<Parameter>CoeComm.Index<!--CheckEntryDescription.Index-->
						</Parameter>
						<Parameter>1<!--CheckEntryDescription.SubIndex-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.LevelWarning-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.CaseSensitive-->
						</Parameter>
						<Parameter>"Local Error Reaction"</Parameter>
						<!--CheckEntryDescription.Expected.Name-->
						<Parameter>7<!--CheckEntryDescription.Expected.Type-->
						</Parameter>
						<Parameter>true<!--CheckEntryDescription.Expected.Access.ReadInPreOp-->
						</Parameter>
						<Parameter>true<!--CheckEntryDescription.Expected.Access.ReadInSafeOp-->
						</Parameter>
						<Parameter>true<!--CheckEntryDescription.Expected.Access.ReadInOp-->
						</Parameter>
						<Parameter>true<!--CheckEntryDescription.Expected.Access.WriteInPreOp-->
						</Parameter>
						<Parameter>true<!--CheckEntryDescription.Expected.Access.WriteInSafeOp-->
						</Parameter>
						<Parameter>true<!--CheckEntryDescription.Expected.Access.WriteInOp-->
						</Parameter>
						<Parameter>EmptyString<!--CheckEntryDescription.Expected.Category-->
						</Parameter>
						<Parameter>None<!--CheckEntryDescription.Expected.PdoMapping-->
						</Parameter>
						<Parameter>null<!--CheckEntryDescription.Expected.DefaultData-->
						</Parameter>
						<Parameter>null<!--CheckEntryDescription.Expected.MinData-->
						</Parameter>
						<Parameter>null<!--CheckEntryDescription.Expected.MaxData-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.Expected.Settings-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.Expected.Backup-->
						</Parameter>
						<Parameter>32<!--CheckEntryDescription.Expected.BitSize-->
						</Parameter>
						<Parameter>16<!--CheckEntryDescription.Expected.BitOffs-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.AllowEnumDataType-->
						</Parameter>
						<OutParameter>CoeComm.bError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>CoeComm.bError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="CoeComm.bResult">false</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="VerifySi2Descr">
					<Description Id="9" Param0="CoeComm.Index" Level="Output">0x{0:x4}.2 Checking entry description...</Description>
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>CoeComm.Dict<!--CheckEntryDescription.ObjectDictionary-->
						</Parameter>
						<Parameter>offline<!--CheckEntryDescription.DictionaryType-->
						</Parameter>
						<Parameter>CoeComm.Index<!--CheckEntryDescription.Index-->
						</Parameter>
						<Parameter>2<!--CheckEntryDescription.SubIndex-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.LevelWarning-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.CaseSensitive-->
						</Parameter>
						<Parameter>"Sync Error Counter Limit","Sync Error Count Limit"</Parameter>
						<!--CheckEntryDescription.Expected.Name-->
						<Parameter>6<!--CheckEntryDescription.Expected.Type-->
						</Parameter>
						<Parameter>true<!--CheckEntryDescription.Expected.Access.ReadInPreOp-->
						</Parameter>
						<Parameter>true<!--CheckEntryDescription.Expected.Access.ReadInSafeOp-->
						</Parameter>
						<Parameter>true<!--CheckEntryDescription.Expected.Access.ReadInOp-->
						</Parameter>
						<Parameter>true<!--CheckEntryDescription.Expected.Access.WriteInPreOp-->
						</Parameter>
						<Parameter>true<!--CheckEntryDescription.Expected.Access.WriteInSafeOp-->
						</Parameter>
						<Parameter>true<!--CheckEntryDescription.Expected.Access.WriteInOp-->
						</Parameter>
						<Parameter>EmptyString<!--CheckEntryDescription.Expected.Category-->
						</Parameter>
						<Parameter>None<!--CheckEntryDescription.Expected.PdoMapping-->
						</Parameter>
						<Parameter>null<!--CheckEntryDescription.Expected.DefaultData-->
						</Parameter>
						<Parameter>null<!--CheckEntryDescription.Expected.MinData-->
						</Parameter>
						<Parameter>null<!--CheckEntryDescription.Expected.MaxData-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.Expected.Settings-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.Expected.Backup-->
						</Parameter>
						<Parameter>16<!--CheckEntryDescription.Expected.BitSize-->
						</Parameter>
						<Parameter>48<!--CheckEntryDescription.Expected.BitOffs-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.AllowEnumDataType-->
						</Parameter>
						<OutParameter>CoeComm.bError</OutParameter>
					</CallTestFunction>
				</TestStep>
				<TestStep Name="WriteSuccess">
					<Compare>
						<Equal>
							<Value1>CoeComm.bResult</Value1>
							<Value2>true</Value2>
							<ReturnSuccess Id="10" Param0="CoeComm.Index" Param1="CoeComm.TmpName">{1} (0x{0:x4}) : the object structure is valid.</ReturnSuccess>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>CoeComm.bResult</Value1>
							<Value2>false</Value2>
							<RaiseError Id="11"></RaiseError>
						</Equal>
					</Compare>
				</TestStep>
			</TestCase>
			<TestCase Name="Diagnosis History Object (0x10F3)" CaseId="8">
				<?MAX_OUTPUT_ID 20?>
				<Description>
					<PreCondition>- offline OD defined
- object 0x10F3 defined</PreCondition>
					<Action>Check object structure accoring ETG.1020</Action>
					<PostCondition>Error if the object does not match the description in the ETG.1020</PostCondition>
					<ProposalForSolution></ProposalForSolution>
					<References>
						<Reference Specification="ETG.1020"></Reference>
					</References>
					<Mandatory>true</Mandatory>
				</Description>
				<TestStep Name="InitResult">
					<SetVariable Target="strResult">EmptyString</SetVariable>
				</TestStep>
				<TestStep Name="CheckIfOfflineOdAvailable">
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Dictionary</Value1>
							<Value2>false</Value2>
							<SkipCase Id="0">No offline object dictionary defined.</SkipCase>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="GetObjectIndexInlcOffset">
					<SetVariable Target="u16ObjectIndexInclOffset">#x10F3</SetVariable>
				</TestStep>
				<TestStep Name="SetObjectMandatoryIndication">
					<SetVariable Target="bObjectEntryIsMandatory">false</SetVariable>
					<WriteLine Id="1" Param0="u16ObjectIndexInclOffset" Level="Verbose">0x{0:X4}.0 'Diagnosis History Object' may be available</WriteLine>
				</TestStep>
				<TestStep Name="LoadDeviceObjectDictionary">
					<Description Id="2" Level="Verbose">VerifyObject : Load 'offline' object dictionary for testing.</Description>
					<GetObjectDictionary Target="odDeviceObjectdictionary">
						<DictionaryType>Offline</DictionaryType>
					</GetObjectDictionary>
					<RaiseErrorOnFailure Id="3">VerifyObject : failed to load offline object dictionary.</RaiseErrorOnFailure>
				</TestStep>
				<TestStep Name="CheckIfObjectExists">
					<GetObjectDescription SourceDictionary="odDeviceObjectdictionary" Index="u16ObjectIndexInclOffset" SubIndex="-1"></GetObjectDescription>
					<GotoOnSuccess>CallCheckObjectDescription</GotoOnSuccess>
				</TestStep>
				<TestStep Name="HandleNotExistingObject">
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="4" Param0="u16ObjectIndexInclOffset" Level="Output">The optional object 0x{0:X4} 'Diagnosis History Object' does not exists.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>END</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CallCheckObjectDescription">
					<Description Id="5" Param0="u16ObjectIndexInclOffset" Level="Output">Verify the object description 0x{0:X4} 'Diagnosis History Object'.</Description>
					<CallTestFunction Name="CheckObjectDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"offline"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>false</Parameter>
						<Parameter>true</Parameter>
						<Parameter>"Diagnosis History"</Parameter>
						<Parameter>null</Parameter>
						<Parameter>9</Parameter>
						<Parameter>-1</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<GotoStep>END</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="InitEntryBittOffset">
					<SetVariable Target="i32CurrentBitOffset">0</SetVariable>
				</TestStep>
				<TestStep Name="StartSi0">
					<Description Id="6" Level="Output">Start validate SubIndex0</Description>
				</TestStep>
				<TestStep Name="SetSi0MandatoryIndication">
					<SetVariable Target="bObjectEntryIsMandatory">false</SetVariable>
					<WriteLine Id="7" Param0="u16ObjectIndexInclOffset" Level="Verbose">0x{0:X4}.0 'Diagnosis History Object' may be available</WriteLine>
				</TestStep>
				<TestStep Name="CallSi0CheckEntryDescription">
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"offline"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>0</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>null</Parameter>
						<Parameter>5</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>null</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>null</Parameter>
						<Parameter>null</Parameter>
						<Parameter>null</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>8</Parameter>
						<Parameter>i32CurrentBitOffset</Parameter>
						<Parameter>true</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="EndSi0">
					<SetVariable Target="i32CurrentBitOffset">16</SetVariable>
				</TestStep>
				<TestStep Name="StartSi1">
					<Description Id="8" Level="Output">Start validate SubIndex1</Description>
				</TestStep>
				<TestStep Name="SetSi1MandatoryIndication">
					<SetVariable Target="bObjectEntryIsMandatory">true</SetVariable>
					<WriteLine Id="9" Param0="u16ObjectIndexInclOffset" Level="Verbose">0x{0:X4}.1 'Maximum Messages' shall be available</WriteLine>
				</TestStep>
				<TestStep Name="CallSi1CheckEntryDescription">
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"offline"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>1</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>"Maximum Messages"</Parameter>
						<Parameter>5</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>null</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>8</Parameter>
						<Parameter>i32CurrentBitOffset</Parameter>
						<Parameter>true</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="EndSi1">
					<SetVariable Target="i32CurrentBitOffset">i32CurrentBitOffset + 8</SetVariable>
				</TestStep>
				<TestStep Name="StartSi2">
					<Description Id="10" Level="Output">Start validate SubIndex2</Description>
				</TestStep>
				<TestStep Name="SetSi2MandatoryIndication">
					<SetVariable Target="bObjectEntryIsMandatory">true</SetVariable>
					<WriteLine Id="11" Param0="u16ObjectIndexInclOffset" Level="Verbose">0x{0:X4}.2 'Newest Message' shall be available</WriteLine>
				</TestStep>
				<TestStep Name="CallSi2CheckEntryDescription">
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"offline"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>2</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>"Newest Message"</Parameter>
						<Parameter>5</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>null</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>8</Parameter>
						<Parameter>i32CurrentBitOffset</Parameter>
						<Parameter>true</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="EndSi2">
					<SetVariable Target="i32CurrentBitOffset">i32CurrentBitOffset + 8</SetVariable>
				</TestStep>
				<TestStep Name="StartSi3">
					<Description Id="12" Level="Output">Start validate SubIndex3</Description>
				</TestStep>
				<TestStep Name="SetSi3MandatoryIndication">
					<SetVariable Target="bObjectEntryIsMandatory">true</SetVariable>
					<WriteLine Id="13" Param0="u16ObjectIndexInclOffset" Level="Verbose">0x{0:X4}.3 'Newest Acknowledged Message' shall be available</WriteLine>
				</TestStep>
				<TestStep Name="CallSi3CheckEntryDescription">
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"offline"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>3</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>"Newest Acknowledged Message"</Parameter>
						<Parameter>5</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>null</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>8</Parameter>
						<Parameter>i32CurrentBitOffset</Parameter>
						<Parameter>true</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="EndSi3">
					<SetVariable Target="i32CurrentBitOffset">i32CurrentBitOffset + 8</SetVariable>
				</TestStep>
				<TestStep Name="SetSi4MandatoryIndication">
					<SetVariable Target="bObjectEntryIsMandatory">true</SetVariable>
					<WriteLine Id="14" Param0="u16ObjectIndexInclOffset" Level="Verbose">0x{0:X4}.4 'New Messages Available' shall be available</WriteLine>
				</TestStep>
				<TestStep Name="CallSi4CheckEntryDescription">
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"offline"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>4</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>"New Messages Available"</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>null</Parameter>
						<Parameter>null</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>i32CurrentBitOffset</Parameter>
						<Parameter>true</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="EndSi4">
					<!--add 7 implicit padding bits (the next entry is an uint16 value which always starts at an even word address)-->
					<SetVariable Target="i32CurrentBitOffset">i32CurrentBitOffset + 8</SetVariable>
				</TestStep>
				<TestStep Name="StartSi5">
					<Description Id="15" Level="Output">Start validate SubIndex5</Description>
				</TestStep>
				<TestStep Name="SetSi5MandatoryIndication">
					<SetVariable Target="bObjectEntryIsMandatory">true</SetVariable>
					<WriteLine Id="16" Param0="u16ObjectIndexInclOffset" Level="Verbose">0x{0:X4}.5 'Flags' shall be available</WriteLine>
				</TestStep>
				<TestStep Name="CallSi5CheckEntryDescription">
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"offline"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>5</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>"Flags"</Parameter>
						<Parameter>6</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>null</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>16</Parameter>
						<Parameter>i32CurrentBitOffset</Parameter>
						<Parameter>true</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="EndSi5">
					<SetVariable Target="i32CurrentBitOffset">i32CurrentBitOffset + 16</SetVariable>
				</TestStep>
				<TestStep Name="StartSi6">
					<SetVariable Target="u8DiagMessageLoop">5</SetVariable>
				</TestStep>
				<TestStep Name="LoopStart">
					<SetVariable Target="u8DiagMessageLoop">u8DiagMessageLoop + 1</SetVariable>
				</TestStep>
				<TestStep Name="CheckIfSi6Exists">
					<Description Id="17" Level="Output" Param0="u8DiagMessageLoop">Start validate SubIndex {0} (diag message)</Description>
					<GetObjectDescription SourceDictionary="odDeviceObjectdictionary" Index="u16ObjectIndexInclOffset" SubIndex="u8DiagMessageLoop"></GetObjectDescription>
					<GotoOnFailure>HandleNotExistingSi6</GotoOnFailure>
				</TestStep>
				<TestStep>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>CallSi6CheckEntryDescription</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="HandleNotExistingSi6">
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="18" Param0="u16ObjectIndexInclOffset" Level="Verbose" Param1="u8DiagMessageLoop">The diag message 0x{0:X4}.{1} is not defined.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>EndSi6</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CallSi6CheckEntryDescription">
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"offline"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>u8DiagMessageLoop</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>null</Parameter>
						<Parameter>10</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>null</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>true</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="EndSi6">
					<Compare>
						<Lower>
							<Value1>u8DiagMessageLoop</Value1>
							<Value2>255</Value2>
							<GotoStep>LoopStart</GotoStep>
						</Lower>
					</Compare>
				</TestStep>
				<TestStep Name="END">
					<Compare>
						<Equal>
							<Value1>strResult</Value1>
							<Value2>EmptyString</Value2>
							<ReturnSuccess Id="19">Test succeed</ReturnSuccess>
						</Equal>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>strResult</Value1>
							<Value2>EmptyString</Value2>
							<RaiseError Id="20"></RaiseError>
						</NotEqual>
					</Compare>
				</TestStep>
			</TestCase>
			<TestCase Name="RxPDO Parameter (0x1400 .. 0x15FF)" CaseId="9">
				<?MAX_OUTPUT_ID 13?>
				<Description>
					<Purpose>Check the Structure of the RxPDO Parameter objects</Purpose>
					<PreCondition>Device supports Mailbox communication via CoE protocol
ESI provides a offline object dictionary</PreCondition>
					<Action>Check the object structure:
1. Name
2. Data Type
3. Object Code
4. Access
5. Pdo mapping
6. Bit Size</Action>
					<PostCondition>The structure shall be as described in ETG.1020 </PostCondition>
					<References>
						<Reference Specification="ETG.1020"></Reference>
					</References>
					<Mandatory>true</Mandatory>
				</Description>
				<TestStep Name="CheckMbxCoeSupport">
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Mailbox</Value1>
							<Value2>false</Value2>
							<SkipCase Id="0">Device does not support mailbox communication</SkipCase>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Mailbox.CoE</Value1>
							<Value2>false</Value2>
							<SkipCase Id="1">Device does not support CoE</SkipCase>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Dictionary</Value1>
							<Value2>false</Value2>
							<SkipCase Id="2">Device does not provide an offline dictionary</SkipCase>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="SetDefaultMandatoryValue">
					<SetVariable Target="CoeComm.IsMandatroy">false</SetVariable>
				</TestStep>
				<TestStep Name="InitTestRunIndication">
					<SetVariable Target="CoeComm.bTestExecuted">false</SetVariable>
				</TestStep>
				<TestStep Name="InitResult">
					<SetVariable Target="CoeComm.bResult">true</SetVariable>
				</TestStep>
				<TestStep Name="InitObjName">
					<SetVariable Target="CoeComm.TmpName">RxPDO Parameter</SetVariable>
				</TestStep>
				<TestStep Name="InitIndex">
					<SetVariable Target="CoeComm.Index">#x1400</SetVariable>
				</TestStep>
				<TestStep Name="GetOD">
					<Description Id="3">Getting offline dictionary from assigned ESI...</Description>
					<GetObjectDictionary Target="CoeComm.Dict">
						<DictionaryType>Offline</DictionaryType>
					</GetObjectDictionary>
					<RaiseErrorOnFailure Id="4">Failed to get offline dictionary.</RaiseErrorOnFailure>
				</TestStep>
				<TestStep Name="ObjLoopSTART"></TestStep>
				<TestStep Name="SkipCheckObjDefinedIfMandatory">
					<!--In case of a not defined object the function Check Object Description will return an error-->
					<Compare>
						<Equal>
							<Value1>CoeComm.IsMandatroy</Value1>
							<Value2>true</Value2>
							<GotoStep>StartTest</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CheckIfObjIsDefined">
					<CallTestFunction Name="IsObjectDefined">
						<Parameter>CoeComm.Dict</Parameter>
						<Parameter>CoeComm.Index</Parameter>
						<OutParameter>CoeComm.TmpBool</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>CoeComm.TmpBool</Value1>
							<Value2>false</Value2>
							<GotoStep>ObjLoopEND</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="StartTest">
					<SetVariable Target="CoeComm.bTestExecuted">true</SetVariable>
				</TestStep>
				<TestStep Name="VerifyObjDescr">
					<Description Id="5" Param0="CoeComm.Index" Level="Output">0x{0:x4} Checking object description...</Description>
					<CallTestFunction Name="CheckObjectDescription">
						<Parameter>CoeComm.Dict</Parameter>
						<Parameter>offline</Parameter>
						<Parameter>CoeComm.Index<!--VerifyObjectDescription.Index-->
						</Parameter>
						<Parameter>false<!--VerifyObjectDescription.LevelWarning-->
						</Parameter>
						<Parameter>false</Parameter>
						<Parameter>null<!--VerifyObjectDescription.Expected.Names-->
						</Parameter>
						<Parameter>0<!--VerifyObjectDescription.Expected.Type-->
						</Parameter>
						<Parameter>9<!--VerifyObjectDescription.Expected.ObjectCode-->
						</Parameter>
						<Parameter>-1<!--VerifyObjectDescription.Expected.BitSize-->
						</Parameter>
						<OutParameter>CoeComm.bError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>CoeComm.bError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="CoeComm.bResult">false</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="VerifySi0Descr">
					<Description Id="6" Param0="CoeComm.Index" Level="Output">0x{0:x4}.0 Checking entry description...</Description>
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>CoeComm.Dict<!--CheckEntryDescription.ObjectDictionary-->
						</Parameter>
						<Parameter>offline<!--CheckEntryDescription.DictionaryType-->
						</Parameter>
						<Parameter>CoeComm.Index<!--CheckEntryDescription.Index-->
						</Parameter>
						<Parameter>0<!--CheckEntryDescription.SubIndex-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.LevelWarning-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.CaseSensitive-->
						</Parameter>
						<Parameter>EmptyString<!--CheckEntryDescription.Expected.Name-->
						</Parameter>
						<Parameter>5<!--CheckEntryDescription.Expected.Type-->
						</Parameter>
						<Parameter>true<!--CheckEntryDescription.Expected.Access.ReadInPreOp-->
						</Parameter>
						<Parameter>true<!--CheckEntryDescription.Expected.Access.ReadInSafeOp-->
						</Parameter>
						<Parameter>true<!--CheckEntryDescription.Expected.Access.ReadInOp-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.Expected.Access.WriteInPreOp-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.Expected.Access.WriteInSafeOp-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.Expected.Access.WriteInOp-->
						</Parameter>
						<Parameter>EmptyString<!--CheckEntryDescription.Expected.Category-->
						</Parameter>
						<Parameter>None<!--CheckEntryDescription.Expected.PdoMapping-->
						</Parameter>
						<Parameter>null<!--CheckEntryDescription.Expected.DefaultData-->
						</Parameter>
						<Parameter>null<!--CheckEntryDescription.Expected.MinData-->
						</Parameter>
						<Parameter>null<!--CheckEntryDescription.Expected.MaxData-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.Expected.Settings-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.Expected.Backup-->
						</Parameter>
						<Parameter>8<!--CheckEntryDescription.Expected.BitSize-->
						</Parameter>
						<Parameter>0<!--CheckEntryDescription.Expected.BitOffs-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.AllowEnumDataType-->
						</Parameter>
						<OutParameter>CoeComm.bError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>CoeComm.bError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="CoeComm.bResult">false</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CheckIfSubIndex6IsDefined">
					<CallTestFunction Name="IsEntryDefined">
						<Parameter>CoeComm.Dict</Parameter>
						<Parameter>CoeComm.Index</Parameter>
						<Parameter>6</Parameter>
						<OutParameter>CoeComm.TmpBool</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>CoeComm.TmpBool</Value1>
							<Value2>false</Value2>
							<GotoStep>CheckIfSubIndex7IsDefined</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="VerifySi6Descr">
					<Description Id="7" Param0="CoeComm.Index" Level="Output">0x{0:x4}.6 Checking entry description...</Description>
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>CoeComm.Dict<!--CheckEntryDescription.ObjectDictionary-->
						</Parameter>
						<Parameter>offline<!--CheckEntryDescription.DictionaryType-->
						</Parameter>
						<Parameter>CoeComm.Index<!--CheckEntryDescription.Index-->
						</Parameter>
						<Parameter>6<!--CheckEntryDescription.SubIndex-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.LevelWarning-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.CaseSensitive-->
						</Parameter>
						<Parameter>"RxPDO Exculde RxPDOs","Exclude RxPDOs"</Parameter>
						<!--CheckEntryDescription.Expected.Name-->
						<Parameter>10<!--CheckEntryDescription.Expected.Type-->
						</Parameter>
						<Parameter>true<!--CheckEntryDescription.Expected.Access.ReadInPreOp-->
						</Parameter>
						<Parameter>true<!--CheckEntryDescription.Expected.Access.ReadInSafeOp-->
						</Parameter>
						<Parameter>true<!--CheckEntryDescription.Expected.Access.ReadInOp-->
						</Parameter>
						<Parameter>-1<!--CheckEntryDescription.Expected.Access.WriteInPreOp-->
						</Parameter>
						<Parameter>-1<!--CheckEntryDescription.Expected.Access.WriteInSafeOp-->
						</Parameter>
						<Parameter>-1<!--CheckEntryDescription.Expected.Access.WriteInOp-->
						</Parameter>
						<Parameter>"o"</Parameter>
						<!--CheckEntryDescription.Category-->
						<Parameter>None<!--CheckEntryDescription.Expected.PdoMapping-->
						</Parameter>
						<Parameter>null<!--CheckEntryDescription.Expected.DefaultData-->
						</Parameter>
						<Parameter>null<!--CheckEntryDescription.Expected.MinData-->
						</Parameter>
						<Parameter>null<!--CheckEntryDescription.Expected.MaxData-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.Expected.Settings-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.Expected.Backup-->
						</Parameter>
						<Parameter>-1<!--CheckEntryDescription.Expected.BitSize-->
						</Parameter>
						<Parameter>-1<!--CheckEntryDescription.Expected.BitOffs-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.AllowEnumDataType-->
						</Parameter>
						<OutParameter>CoeComm.bError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>CoeComm.bError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="CoeComm.bResult">false</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CheckIfSubIndex7IsDefined">
					<CallTestFunction Name="IsEntryDefined">
						<Parameter>CoeComm.Dict</Parameter>
						<Parameter>CoeComm.Index</Parameter>
						<Parameter>7</Parameter>
						<OutParameter>CoeComm.TmpBool</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>CoeComm.TmpBool</Value1>
							<Value2>false</Value2>
							<GotoStep>CheckIfSubIndex8IsDefined</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="VerifySi7Descr">
					<Description Id="8" Param0="CoeComm.Index" Level="Output">0x{0:x4}.7 Checking entry description...</Description>
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>CoeComm.Dict<!--CheckEntryDescription.ObjectDictionary-->
						</Parameter>
						<Parameter>offline<!--CheckEntryDescription.DictionaryType-->
						</Parameter>
						<Parameter>CoeComm.Index<!--CheckEntryDescription.Index-->
						</Parameter>
						<Parameter>7<!--CheckEntryDescription.SubIndex-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.LevelWarning-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.CaseSensitive-->
						</Parameter>
						<Parameter>"RxPDO State"</Parameter>
						<!--CheckEntryDescription.Expected.Name-->
						<Parameter>1<!--CheckEntryDescription.Expected.Type-->
						</Parameter>
						<Parameter>true<!--CheckEntryDescription.Expected.Access.ReadInPreOp-->
						</Parameter>
						<Parameter>true<!--CheckEntryDescription.Expected.Access.ReadInSafeOp-->
						</Parameter>
						<Parameter>true<!--CheckEntryDescription.Expected.Access.ReadInOp-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.Expected.Access.WriteInPreOp-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.Expected.Access.WriteInSafeOp-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.Expected.Access.WriteInOp-->
						</Parameter>
						<Parameter>"o"</Parameter>
						<!--CheckEntryDescription.Expected.Category-->
						<Parameter>EmptyString<!--CheckEntryDescription.Expected.PdoMapping-->
						</Parameter>
						<Parameter>null<!--CheckEntryDescription.Expected.DefaultData-->
						</Parameter>
						<Parameter>null<!--CheckEntryDescription.Expected.MinData-->
						</Parameter>
						<Parameter>null<!--CheckEntryDescription.Expected.MaxData-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.Expected.Settings-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.Expected.Backup-->
						</Parameter>
						<Parameter>1<!--CheckEntryDescription.Expected.BitSize-->
						</Parameter>
						<Parameter>-1<!--CheckEntryDescription.Expected.BitOffs-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.AllowEnumDataType-->
						</Parameter>
						<OutParameter>CoeComm.bError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>CoeComm.bError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="CoeComm.bResult">false</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CheckIfSubIndex8IsDefined">
					<CallTestFunction Name="IsEntryDefined">
						<Parameter>CoeComm.Dict</Parameter>
						<Parameter>CoeComm.Index</Parameter>
						<Parameter>8</Parameter>
						<OutParameter>CoeComm.TmpBool</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>CoeComm.TmpBool</Value1>
							<Value2>false</Value2>
							<GotoStep>CheckIfSubIndex9IsDefined</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="VerifySi8Descr">
					<Description Id="9" Param0="CoeComm.Index" Level="Output">0x{0:x4}.8 Checking entry description...</Description>
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>CoeComm.Dict<!--CheckEntryDescription.ObjectDictionary-->
						</Parameter>
						<Parameter>offline<!--CheckEntryDescription.DictionaryType-->
						</Parameter>
						<Parameter>CoeComm.Index<!--CheckEntryDescription.Index-->
						</Parameter>
						<Parameter>8<!--CheckEntryDescription.SubIndex-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.LevelWarning-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.CaseSensitive-->
						</Parameter>
						<Parameter>"RxPDO Control"</Parameter>
						<!--CheckEntryDescription.Expected.Name-->
						<Parameter>1<!--CheckEntryDescription.Expected.Type-->
						</Parameter>
						<Parameter>true<!--CheckEntryDescription.Expected.Access.ReadInPreOp-->
						</Parameter>
						<Parameter>true<!--CheckEntryDescription.Expected.Access.ReadInSafeOp-->
						</Parameter>
						<Parameter>true<!--CheckEntryDescription.Expected.Access.ReadInOp-->
						</Parameter>
						<Parameter>true<!--CheckEntryDescription.Expected.Access.WriteInPreOp-->
						</Parameter>
						<Parameter>true<!--CheckEntryDescription.Expected.Access.WriteInSafeOp-->
						</Parameter>
						<Parameter>true<!--CheckEntryDescription.Expected.Access.WriteInOp-->
						</Parameter>
						<Parameter>"o"</Parameter>
						<!--CheckEntryDescription.Expected.Category-->
						<Parameter>"rx"</Parameter>
						<!--CheckEntryDescription.Expected.PdoMapping-->
						<Parameter>null<!--CheckEntryDescription.Expected.DefaultData-->
						</Parameter>
						<Parameter>null<!--CheckEntryDescription.Expected.MinData-->
						</Parameter>
						<Parameter>null<!--CheckEntryDescription.Expected.MaxData-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.Expected.Settings-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.Expected.Backup-->
						</Parameter>
						<Parameter>1<!--CheckEntryDescription.Expected.BitSize-->
						</Parameter>
						<Parameter>-1<!--CheckEntryDescription.Expected.BitOffs-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.AllowEnumDataType-->
						</Parameter>
						<OutParameter>CoeComm.bError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>CoeComm.bError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="CoeComm.bResult">false</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CheckIfSubIndex9IsDefined">
					<CallTestFunction Name="IsEntryDefined">
						<Parameter>CoeComm.Dict</Parameter>
						<Parameter>CoeComm.Index</Parameter>
						<Parameter>9</Parameter>
						<OutParameter>CoeComm.TmpBool</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>CoeComm.TmpBool</Value1>
							<Value2>false</Value2>
							<GotoStep>ObjLoopEND</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="VerifySi9Descr">
					<Description Id="10" Param0="CoeComm.Index" Level="Output">0x{0:x4}.9 Checking entry description...</Description>
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>CoeComm.Dict<!--CheckEntryDescription.ObjectDictionary-->
						</Parameter>
						<Parameter>offline<!--CheckEntryDescription.DictionaryType-->
						</Parameter>
						<Parameter>CoeComm.Index<!--CheckEntryDescription.Index-->
						</Parameter>
						<Parameter>9<!--CheckEntryDescription.SubIndex-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.LevelWarning-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.CaseSensitive-->
						</Parameter>
						<Parameter>"RxPDO Toggle","OutputUpdateCounter"</Parameter>
						<!--CheckEntryDescription.Expected.Name-->
						<Parameter>#xFFFF<!--CheckEntryDescription.Expected.Type-->
						</Parameter>
						<Parameter>true<!--CheckEntryDescription.Expected.Access.ReadInPreOp-->
						</Parameter>
						<Parameter>true<!--CheckEntryDescription.Expected.Access.ReadInSafeOp-->
						</Parameter>
						<Parameter>true<!--CheckEntryDescription.Expected.Access.ReadInOp-->
						</Parameter>
						<Parameter>true<!--CheckEntryDescription.Expected.Access.WriteInPreOp-->
						</Parameter>
						<Parameter>true<!--CheckEntryDescription.Expected.Access.WriteInSafeOp-->
						</Parameter>
						<Parameter>true<!--CheckEntryDescription.Expected.Access.WriteInOp-->
						</Parameter>
						<Parameter>"o"</Parameter>
						<!--CheckEntryDescription.Expected.Category-->
						<Parameter>EmptyString<!--CheckEntryDescription.Expected.PdoMapping-->
						</Parameter>
						<Parameter>null<!--CheckEntryDescription.Expected.DefaultData-->
						</Parameter>
						<Parameter>null<!--CheckEntryDescription.Expected.MinData-->
						</Parameter>
						<Parameter>null<!--CheckEntryDescription.Expected.MaxData-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.Expected.Settings-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.Expected.Backup-->
						</Parameter>
						<Parameter>-1<!--CheckEntryDescription.Expected.BitSize-->
						</Parameter>
						<Parameter>-1<!--CheckEntryDescription.Expected.BitOffs-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.AllowEnumDataType-->
						</Parameter>
						<OutParameter>CoeComm.bError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>CoeComm.bError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="CoeComm.bResult">false</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="ObjLoopEND">
					<SetVariable Target="CoeComm.Index">CoeComm.Index + 1</SetVariable>
					<Compare>
						<LowerOrEqual>
							<Value1>CoeComm.Index</Value1>
							<Value2>#x15FF</Value2>
							<GotoStep>ObjLoopSTART</GotoStep>
						</LowerOrEqual>
					</Compare>
				</TestStep>
				<TestStep Name="SetTestState">
					<Compare>
						<Equal>
							<Value1>CoeComm.bTestExecuted</Value1>
							<Value2>false</Value2>
							<SkipCase Id="11" Param0="CoeComm.TmpName">No '{0}' (0x1400 to 0x15FF) is defined.</SkipCase>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>CoeComm.bResult</Value1>
							<Value2>true</Value2>
							<ReturnSuccess Id="12" Param0="CoeComm.Index" Param1="CoeComm.TmpName">{1} (0x{0:x4}) : the object structure is valid.</ReturnSuccess>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>CoeComm.bResult</Value1>
							<Value2>false</Value2>
							<RaiseError Id="13"></RaiseError>
						</Equal>
					</Compare>
				</TestStep>
			</TestCase>
			<TestCase Name="TxPDO Parameter (0x1800 .. 0x19FF)" CaseId="10">
				<?MAX_OUTPUT_ID 12?>
				<Description>
					<Purpose>Check the Structure of the TxPDO Parameter objects</Purpose>
					<PreCondition>Device supports Mailbox communication via CoE protocol
ESI provides a offline object dictionary</PreCondition>
					<Action>Check the object structure:
1. Name
2. Data Type
3. Object Code
4. Access
5. Pdo mapping
6. Bit Size</Action>
					<PostCondition>The structure shall be as described in ETG.1020 </PostCondition>
					<References>
						<Reference Specification="ETG.1020"></Reference>
					</References>
					<Mandatory>true</Mandatory>
				</Description>
				<TestStep Name="CheckMbxCoeSupport">
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Mailbox</Value1>
							<Value2>false</Value2>
							<SkipCase Id="0">Device does not support mailbox communication</SkipCase>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Mailbox.CoE</Value1>
							<Value2>false</Value2>
							<SkipCase Id="1">Device does not support CoE</SkipCase>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Dictionary</Value1>
							<Value2>false</Value2>
							<SkipCase Id="2">Device does not provide an offline dictionary</SkipCase>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="SetDefaultMandatoryValue">
					<SetVariable Target="CoeComm.IsMandatroy">false</SetVariable>
				</TestStep>
				<TestStep Name="InitTestRunIndication">
					<SetVariable Target="CoeComm.bTestExecuted">false</SetVariable>
				</TestStep>
				<TestStep Name="InitResult">
					<SetVariable Target="CoeComm.bResult">true</SetVariable>
				</TestStep>
				<TestStep Name="InitObjName">
					<SetVariable Target="CoeComm.TmpName">TxPDO Parameter</SetVariable>
				</TestStep>
				<TestStep Name="InitIndex">
					<SetVariable Target="CoeComm.Index">#x1800</SetVariable>
				</TestStep>
				<TestStep Name="GetOD">
					<Description Id="3">Getting offline dictionary from assigned ESI...</Description>
					<GetObjectDictionary Target="CoeComm.Dict">
						<DictionaryType>Offline</DictionaryType>
					</GetObjectDictionary>
					<RaiseErrorOnFailure Id="4">Failed to get offline dictionary.</RaiseErrorOnFailure>
				</TestStep>
				<TestStep Name="ObjLoopSTART"></TestStep>
				<TestStep Name="SkipCheckObjDefinedIfMandatory">
					<!--In case of a not defined object the function Check Object Description will return an error-->
					<Compare>
						<Equal>
							<Value1>CoeComm.IsMandatroy</Value1>
							<Value2>true</Value2>
							<GotoStep>StartTest</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CheckIfObjIsDefined">
					<CallTestFunction Name="IsObjectDefined">
						<Parameter>CoeComm.Dict</Parameter>
						<Parameter>CoeComm.Index</Parameter>
						<OutParameter>CoeComm.TmpBool</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>CoeComm.TmpBool</Value1>
							<Value2>false</Value2>
							<GotoStep>ObjLoopEND</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="StartTest">
					<SetVariable Target="CoeComm.bTestExecuted">true</SetVariable>
				</TestStep>
				<TestStep Name="VerifyObjDescr">
					<Description Id="5" Param0="CoeComm.Index" Level="Output">0x{0:x4} Checking object description...</Description>
					<CallTestFunction Name="CheckObjectDescription">
						<Parameter>CoeComm.Dict</Parameter>
						<Parameter>offline</Parameter>
						<Parameter>CoeComm.Index<!--VerifyObjectDescription.Index-->
						</Parameter>
						<Parameter>false<!--VerifyObjectDescription.LevelWarning-->
						</Parameter>
						<Parameter>false</Parameter>
						<Parameter>null<!--VerifyObjectDescription.Expected.Names-->
						</Parameter>
						<Parameter>0<!--VerifyObjectDescription.Expected.Type-->
						</Parameter>
						<Parameter>9<!--VerifyObjectDescription.Expected.ObjectCode-->
						</Parameter>
						<Parameter>-1<!--VerifyObjectDescription.Expected.BitSize-->
						</Parameter>
						<OutParameter>CoeComm.bError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>CoeComm.bError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="CoeComm.bResult">false</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="VerifySi0Descr">
					<Description Id="6" Param0="CoeComm.Index" Level="Output">0x{0:x4}.0 Checking entry description...</Description>
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>CoeComm.Dict<!--CheckEntryDescription.ObjectDictionary-->
						</Parameter>
						<Parameter>offline<!--CheckEntryDescription.DictionaryType-->
						</Parameter>
						<Parameter>CoeComm.Index<!--CheckEntryDescription.Index-->
						</Parameter>
						<Parameter>0<!--CheckEntryDescription.SubIndex-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.LevelWarning-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.CaseSensitive-->
						</Parameter>
						<Parameter>EmptyString<!--CheckEntryDescription.Expected.Name-->
						</Parameter>
						<Parameter>5<!--CheckEntryDescription.Expected.Type-->
						</Parameter>
						<Parameter>true<!--CheckEntryDescription.Expected.Access.ReadInPreOp-->
						</Parameter>
						<Parameter>true<!--CheckEntryDescription.Expected.Access.ReadInSafeOp-->
						</Parameter>
						<Parameter>true<!--CheckEntryDescription.Expected.Access.ReadInOp-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.Expected.Access.WriteInPreOp-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.Expected.Access.WriteInSafeOp-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.Expected.Access.WriteInOp-->
						</Parameter>
						<Parameter>EmptyString<!--CheckEntryDescription.Expected.Category-->
						</Parameter>
						<Parameter>None<!--CheckEntryDescription.Expected.PdoMapping-->
						</Parameter>
						<Parameter>null<!--CheckEntryDescription.Expected.DefaultData-->
						</Parameter>
						<Parameter>null<!--CheckEntryDescription.Expected.MinData-->
						</Parameter>
						<Parameter>null<!--CheckEntryDescription.Expected.MaxData-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.Expected.Settings-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.Expected.Backup-->
						</Parameter>
						<Parameter>8<!--CheckEntryDescription.Expected.BitSize-->
						</Parameter>
						<Parameter>0<!--CheckEntryDescription.Expected.BitOffs-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.AllowEnumDataType-->
						</Parameter>
						<OutParameter>CoeComm.bError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>CoeComm.bError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="CoeComm.bResult">false</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CheckIfSubIndex6IsDefined">
					<CallTestFunction Name="IsEntryDefined">
						<Parameter>CoeComm.Dict</Parameter>
						<Parameter>CoeComm.Index</Parameter>
						<Parameter>6</Parameter>
						<OutParameter>CoeComm.TmpBool</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>CoeComm.TmpBool</Value1>
							<Value2>false</Value2>
							<GotoStep>CheckIfSubIndex7IsDefined</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="VerifySi6Descr">
					<Description Id="7" Param0="CoeComm.Index" Level="Output">0x{0:x4}.6 Checking entry description...</Description>
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>CoeComm.Dict<!--CheckEntryDescription.ObjectDictionary-->
						</Parameter>
						<Parameter>offline<!--CheckEntryDescription.DictionaryType-->
						</Parameter>
						<Parameter>CoeComm.Index<!--CheckEntryDescription.Index-->
						</Parameter>
						<Parameter>6<!--CheckEntryDescription.SubIndex-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.LevelWarning-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.CaseSensitive-->
						</Parameter>
						<Parameter>"TxPDO Exculde TxPDOs","Exclude TxPDOs"</Parameter>
						<!--CheckEntryDescription.Expected.Name-->
						<Parameter>10<!--CheckEntryDescription.Expected.Type-->
						</Parameter>
						<Parameter>true<!--CheckEntryDescription.Expected.Access.ReadInPreOp-->
						</Parameter>
						<Parameter>true<!--CheckEntryDescription.Expected.Access.ReadInSafeOp-->
						</Parameter>
						<Parameter>true<!--CheckEntryDescription.Expected.Access.ReadInOp-->
						</Parameter>
						<Parameter>-1<!--CheckEntryDescription.Expected.Access.WriteInPreOp-->
						</Parameter>
						<Parameter>-1<!--CheckEntryDescription.Expected.Access.WriteInSafeOp-->
						</Parameter>
						<Parameter>-1<!--CheckEntryDescription.Expected.Access.WriteInOp-->
						</Parameter>
						<Parameter>"o"</Parameter>
						<!--CheckEntryDescription.Expected.Category-->
						<Parameter>None<!--CheckEntryDescription.Expected.PdoMapping-->
						</Parameter>
						<Parameter>null<!--CheckEntryDescription.Expected.DefaultData-->
						</Parameter>
						<Parameter>null<!--CheckEntryDescription.Expected.MinData-->
						</Parameter>
						<Parameter>null<!--CheckEntryDescription.Expected.MaxData-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.Expected.Settings-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.Expected.Backup-->
						</Parameter>
						<Parameter>-1<!--CheckEntryDescription.Expected.BitSize-->
						</Parameter>
						<Parameter>-1<!--CheckEntryDescription.Expected.BitOffs-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.AllowEnumDataType-->
						</Parameter>
						<OutParameter>CoeComm.bError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>CoeComm.bError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="CoeComm.bResult">false</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CheckIfSubIndex7IsDefined">
					<CallTestFunction Name="IsEntryDefined">
						<Parameter>CoeComm.Dict</Parameter>
						<Parameter>CoeComm.Index</Parameter>
						<Parameter>7</Parameter>
						<OutParameter>CoeComm.TmpBool</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>CoeComm.TmpBool</Value1>
							<Value2>false</Value2>
							<GotoStep>CheckIfSubIndex9IsDefined</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="VerifySi7Descr">
					<Description Id="8" Param0="CoeComm.Index" Level="Output">0x{0:x4}.7 Checking entry description...</Description>
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>CoeComm.Dict<!--CheckEntryDescription.ObjectDictionary-->
						</Parameter>
						<Parameter>offline<!--CheckEntryDescription.DictionaryType-->
						</Parameter>
						<Parameter>CoeComm.Index<!--CheckEntryDescription.Index-->
						</Parameter>
						<Parameter>7<!--CheckEntryDescription.SubIndex-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.LevelWarning-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.CaseSensitive-->
						</Parameter>
						<Parameter>"TxPDO State","TxPDO-State"</Parameter>
						<!--CheckEntryDescription.Expected.Name-->
						<Parameter>1<!--CheckEntryDescription.Expected.Type-->
						</Parameter>
						<Parameter>true<!--CheckEntryDescription.Expected.Access.ReadInPreOp-->
						</Parameter>
						<Parameter>true<!--CheckEntryDescription.Expected.Access.ReadInSafeOp-->
						</Parameter>
						<Parameter>true<!--CheckEntryDescription.Expected.Access.ReadInOp-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.Expected.Access.WriteInPreOp-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.Expected.Access.WriteInSafeOp-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.Expected.Access.WriteInOp-->
						</Parameter>
						<Parameter>"o"</Parameter>
						<!--CheckEntryDescription.Expected.Category-->
						<Parameter>EmptyString<!--CheckEntryDescription.Expected.PdoMapping-->
						</Parameter>
						<Parameter>null<!--CheckEntryDescription.Expected.DefaultData-->
						</Parameter>
						<Parameter>null<!--CheckEntryDescription.Expected.MinData-->
						</Parameter>
						<Parameter>null<!--CheckEntryDescription.Expected.MaxData-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.Expected.Settings-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.Expected.Backup-->
						</Parameter>
						<Parameter>1<!--CheckEntryDescription.Expected.BitSize-->
						</Parameter>
						<Parameter>-1<!--CheckEntryDescription.Expected.BitOffs-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.AllowEnumDataType-->
						</Parameter>
						<OutParameter>CoeComm.bError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>CoeComm.bError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="CoeComm.bResult">false</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CheckIfSubIndex9IsDefined">
					<CallTestFunction Name="IsEntryDefined">
						<Parameter>CoeComm.Dict</Parameter>
						<Parameter>CoeComm.Index</Parameter>
						<Parameter>9</Parameter>
						<OutParameter>CoeComm.TmpBool</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>CoeComm.TmpBool</Value1>
							<Value2>false</Value2>
							<GotoStep>ObjLoopEND</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="VerifySi9Descr">
					<Description Id="9" Param0="CoeComm.Index" Level="Output">0x{0:x4}.9 Checking entry description...</Description>
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>CoeComm.Dict<!--CheckEntryDescription.ObjectDictionary-->
						</Parameter>
						<Parameter>offline<!--CheckEntryDescription.DictionaryType-->
						</Parameter>
						<Parameter>CoeComm.Index<!--CheckEntryDescription.Index-->
						</Parameter>
						<Parameter>9<!--CheckEntryDescription.SubIndex-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.LevelWarning-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.CaseSensitive-->
						</Parameter>
						<Parameter>"TxPDO Toggle","OutputUpdateCounter","TxPDO-Toggle"</Parameter>
						<!--CheckEntryDescription.Expected.Name-->
						<Parameter>#xFFFF<!--CheckEntryDescription.Expected.Type-->
						</Parameter>
						<Parameter>true<!--CheckEntryDescription.Expected.Access.ReadInPreOp-->
						</Parameter>
						<Parameter>true<!--CheckEntryDescription.Expected.Access.ReadInSafeOp-->
						</Parameter>
						<Parameter>true<!--CheckEntryDescription.Expected.Access.ReadInOp-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.Expected.Access.WriteInPreOp-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.Expected.Access.WriteInSafeOp-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.Expected.Access.WriteInOp-->
						</Parameter>
						<Parameter>"o"</Parameter>
						<!--CheckEntryDescription.Expected.Category-->
						<Parameter>EmptyString<!--CheckEntryDescription.Expected.PdoMapping-->
						</Parameter>
						<Parameter>null<!--CheckEntryDescription.Expected.DefaultData-->
						</Parameter>
						<Parameter>null<!--CheckEntryDescription.Expected.MinData-->
						</Parameter>
						<Parameter>null<!--CheckEntryDescription.Expected.MaxData-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.Expected.Settings-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.Expected.Backup-->
						</Parameter>
						<Parameter>-1<!--CheckEntryDescription.Expected.BitSize-->
						</Parameter>
						<Parameter>-1<!--CheckEntryDescription.Expected.BitOffs-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.AllowEnumDataType-->
						</Parameter>
						<OutParameter>CoeComm.bError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>CoeComm.bError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="CoeComm.bResult">false</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="ObjLoopEND">
					<SetVariable Target="CoeComm.Index">CoeComm.Index + 1</SetVariable>
					<Compare>
						<LowerOrEqual>
							<Value1>CoeComm.Index</Value1>
							<Value2>#x19FF</Value2>
							<GotoStep>ObjLoopSTART</GotoStep>
						</LowerOrEqual>
					</Compare>
				</TestStep>
				<TestStep Name="SetTestState">
					<Compare>
						<Equal>
							<Value1>CoeComm.bTestExecuted</Value1>
							<Value2>false</Value2>
							<SkipCase Id="10" Param0="CoeComm.TmpName">No '{0}' (0x1800 to 0x19FF) is defined.</SkipCase>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>CoeComm.bResult</Value1>
							<Value2>true</Value2>
							<ReturnSuccess Id="11" Param0="CoeComm.TmpName">{1} (0x1800 to 0x19FF) : the object structure is valid.</ReturnSuccess>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>CoeComm.bResult</Value1>
							<Value2>false</Value2>
							<RaiseError Id="12"></RaiseError>
						</Equal>
					</Compare>
				</TestStep>
			</TestCase>
			<TestCase Name="Sync Manager Communication Type Object (0x1C00)" CaseId="12">
				<?MAX_OUTPUT_ID 11?>
				<Description>
					<Purpose>Check the Sync Manager Communication Type Object (index 0x1C00). The test case ensures the correct object structure and naming.</Purpose>
					<PreCondition>Device supports Mailbox communication via CoE protocol
ESI provides a offline object dictionary</PreCondition>
					<Action>Check the object structure:
1. Name
2. Data Type
3. Object Code
4. Access
5. Pdo mapping
6. Bit Size</Action>
					<PostCondition>The offline dictionary shall contain the object
The structure shall be as described in ETG.1000.6 5.6.7.4.9 Sync Manager Communication Type.
1. Warning if object name is not 'Sync Manager Communication Type '
2. Error if the entry data type is not 'USINT8'
3. Error if object code is not 'ARRAY'
4. Error if access is not 'Read only'
5. Error if Pdo mapping is defined
6. Error if Entry BitSize is not 8</PostCondition>
					<References>
						<Reference Chapter="5.6.7.4.9 Sync Manager Communication Type " Specification="ETG.1000.6 "></Reference>
					</References>
					<Mandatory>true</Mandatory>
				</Description>
				<TestStep Name="CheckMbxCoeSupport">
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Mailbox</Value1>
							<Value2>false</Value2>
							<SkipCase Id="0">Device does not support mailbox communication</SkipCase>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Mailbox.CoE</Value1>
							<Value2>false</Value2>
							<SkipCase Id="1">Device does not support CoE</SkipCase>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Dictionary</Value1>
							<Value2>false</Value2>
							<SkipCase Id="2">Device does not provide an offline dictionary</SkipCase>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="SetDefaultMandatoryValue">
					<SetVariable Target="CoeComm.IsMandatroy">false</SetVariable>
				</TestStep>
				<TestStep Name="InitResult">
					<SetVariable Target="CoeComm.bResult">true</SetVariable>
				</TestStep>
				<TestStep Name="InitIndex">
					<SetVariable Target="CoeComm.Index">#x1C00</SetVariable>
				</TestStep>
				<TestStep Name="InitDefaultData">
					<InitArray TargetArray="CoeComm.TmpDataArray" Length="1"></InitArray>
				</TestStep>
				<TestStep Name="InitObjName">
					<SetVariable Target="CoeComm.TmpName">Sync Manager Communication Type</SetVariable>
				</TestStep>
				<TestStep>
					<InitArray TargetArray="CoeComm.TmpNames" Length="2"></InitArray>
				</TestStep>
				<TestStep>
					<SetArrayItem TargetArray="CoeComm.TmpNames" Index="0">CoeComm.TmpName</SetArrayItem>
				</TestStep>
				<TestStep>
					<SetArrayItem TargetArray="CoeComm.TmpNames" Index="1">"Sync manager type"</SetArrayItem>
				</TestStep>
				<TestStep Name="GetOD">
					<Description Id="3">Getting offline dictionary from assigned ESI...</Description>
					<GetObjectDictionary Target="CoeComm.Dict">
						<DictionaryType>Offline</DictionaryType>
					</GetObjectDictionary>
					<RaiseErrorOnFailure Id="4">Failed to get offline dictionary.</RaiseErrorOnFailure>
				</TestStep>
				<TestStep Name="SkipCheckObjDefinedIfMandatory">
					<!--In case of a not defined object the function Check Object Description will return an error-->
					<Compare>
						<Equal>
							<Value1>CoeComm.IsMandatroy</Value1>
							<Value2>true</Value2>
							<GotoStep>VerifyObjDescr</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CheckIfObjIsDefined">
					<CallTestFunction Name="IsObjectDefined">
						<Parameter>CoeComm.Dict</Parameter>
						<Parameter>CoeComm.Index</Parameter>
						<OutParameter>CoeComm.TmpBool</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>CoeComm.TmpBool</Value1>
							<Value2>false</Value2>
							<SkipCase Id="5" Param0="CoeComm.Index" Param1="CoeComm.TmpName">The object '{1}' 0x{0:x4} is not defined.</SkipCase>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="VerifyObjDescr">
					<Description Id="6" Param0="CoeComm.Index" Level="Output">0x{0:x4} Checking object description...</Description>
					<CallTestFunction Name="CheckObjectDescription">
						<Parameter>CoeComm.Dict</Parameter>
						<Parameter>offline</Parameter>
						<Parameter>CoeComm.Index<!--VerifyObjectDescription.Index-->
						</Parameter>
						<Parameter>false<!--VerifyObjectDescription.LevelWarning-->
						</Parameter>
						<Parameter>false</Parameter>
						<Parameter>CoeComm.TmpNames<!--VerifyObjectDescription.Expected.Names-->
						</Parameter>
						<Parameter>5<!--VerifyObjectDescription.Expected.Type-->
						</Parameter>
						<Parameter>8<!--VerifyObjectDescription.Expected.ObjectCode-->
						</Parameter>
						<Parameter>-1<!--VerifyObjectDescription.Expected.BitSize-->
						</Parameter>
						<OutParameter>CoeComm.bError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>CoeComm.bError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="CoeComm.bResult">false</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="VerifySi0Descr">
					<Description Id="7" Param0="CoeComm.Index" Level="Output">0x{0:x4}.0 Checking entry description...</Description>
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>CoeComm.Dict<!--CheckEntryDescription.ObjectDictionary-->
						</Parameter>
						<Parameter>offline<!--CheckEntryDescription.DictionaryType-->
						</Parameter>
						<Parameter>CoeComm.Index<!--CheckEntryDescription.Index-->
						</Parameter>
						<Parameter>0<!--CheckEntryDescription.SubIndex-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.LevelWarning-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.CaseSensitive-->
						</Parameter>
						<Parameter>EmptyString<!--CheckEntryDescription.Expected.Name-->
						</Parameter>
						<Parameter>5<!--CheckEntryDescription.Expected.Type-->
						</Parameter>
						<Parameter>true<!--CheckEntryDescription.Expected.Access.ReadInPreOp-->
						</Parameter>
						<Parameter>true<!--CheckEntryDescription.Expected.Access.ReadInSafeOp-->
						</Parameter>
						<Parameter>true<!--CheckEntryDescription.Expected.Access.ReadInOp-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.Expected.Access.WriteInPreOp-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.Expected.Access.WriteInSafeOp-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.Expected.Access.WriteInOp-->
						</Parameter>
						<Parameter>EmptyString<!--CheckEntryDescription.Expected.Category-->
						</Parameter>
						<Parameter>None<!--CheckEntryDescription.Expected.PdoMapping-->
						</Parameter>
						<Parameter>null<!--CheckEntryDescription.Expected.DefaultData-->
						</Parameter>
						<Parameter>null<!--CheckEntryDescription.Expected.MinData-->
						</Parameter>
						<Parameter>null<!--CheckEntryDescription.Expected.MaxData-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.Expected.Settings-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.Expected.Backup-->
						</Parameter>
						<Parameter>8<!--CheckEntryDescription.Expected.BitSize-->
						</Parameter>
						<Parameter>0<!--CheckEntryDescription.Expected.BitOffs-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.AllowEnumDataType-->
						</Parameter>
						<OutParameter>CoeComm.bError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>CoeComm.bError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="CoeComm.bResult">false</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="InitEntryLoopCounter">
					<SetVariable Target="CoeComm.EntryCount">1</SetVariable>
				</TestStep>
				<TestStep Name="EntryLoopStart">
					<!--0 is the default entry value for unused SyncManager-->
					<SetVariable Target="CoeComm.TmpData">0</SetVariable>
				</TestStep>
				<TestStep Name="CheckIfSubIndexXIsMandatory">
					<Compare>
						<Greater>
							<Value1>CoeComm.EntryCount</Value1>
							<Value2>DeviceDescr.SM.Count</Value2>
							<GotoStep>CheckIfSubIndexXIsDefined</GotoStep>
						</Greater>
					</Compare>
					<Compare>
						<Equal>
							<Value1>DeviceDescr.SM[(CoeComm.EntryCount-1)].Virtual</Value1>
							<Value2>true</Value2>
							<WriteLine Id="11" Level="Output" Param0="(CoeComm.EntryCount-1)">Skip entry, SM[{0}] is virtual.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>DeviceDescr.SM[(CoeComm.EntryCount-1)].Virtual</Value1>
							<Value2>true</Value2>
							<GotoStep>EntryLoopEnd</GotoStep>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>DeviceDescr.SM[(CoeComm.EntryCount-1)]</Value1>
							<Value2>"Inputs"</Value2>
							<SetVariable Target="CoeComm.TmpData">4</SetVariable>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>DeviceDescr.SM[(CoeComm.EntryCount-1)]</Value1>
							<Value2>"Outputs"</Value2>
							<SetVariable Target="CoeComm.TmpData">3</SetVariable>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>DeviceDescr.SM[(CoeComm.EntryCount-1)]</Value1>
							<Value2>"MBoxIn"</Value2>
							<SetVariable Target="CoeComm.TmpData">2</SetVariable>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>DeviceDescr.SM[(CoeComm.EntryCount-1)]</Value1>
							<Value2>"MBoxOut"</Value2>
							<SetVariable Target="CoeComm.TmpData">1</SetVariable>
						</Equal>
					</Compare>
					<!--The entry is mandatory ; goto VerifyEntryDescr-->
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>VerifySixDescr</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CheckIfSubIndexXIsDefined">
					<!--The entry is optional skip entry description test if it is not defined-->
					<CallTestFunction Name="IsEntryDefined">
						<Parameter>CoeComm.Dict</Parameter>
						<Parameter>CoeComm.Index</Parameter>
						<Parameter>CoeComm.EntryCount</Parameter>
						<OutParameter>CoeComm.TmpBool</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>CoeComm.TmpBool</Value1>
							<Value2>false</Value2>
							<GotoStep>EntryLoopEnd</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="VerifySixDescr">
					<SetArrayItem TargetArray="CoeComm.TmpDataArray" Index="0">CoeComm.TmpData</SetArrayItem>
				</TestStep>
				<TestStep>
					<Description Id="8" Param0="CoeComm.Index" Param1="CoeComm.EntryCount" Level="Output">0x{0:x4}.{1} Checking entry description...</Description>
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>CoeComm.Dict<!--CheckEntryDescription.ObjectDictionary-->
						</Parameter>
						<Parameter>offline<!--CheckEntryDescription.DictionaryType-->
						</Parameter>
						<Parameter>CoeComm.Index<!--CheckEntryDescription.Index-->
						</Parameter>
						<Parameter>CoeComm.EntryCount<!--CheckEntryDescription.SubIndex-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.LevelWarning-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.CaseSensitive-->
						</Parameter>
						<Parameter>EmptyString<!--CheckEntryDescription.Expected.Name-->
						</Parameter>
						<Parameter>5<!--CheckEntryDescription.Expected.Type-->
						</Parameter>
						<Parameter>true<!--CheckEntryDescription.Expected.Access.ReadInPreOp-->
						</Parameter>
						<Parameter>true<!--CheckEntryDescription.Expected.Access.ReadInSafeOp-->
						</Parameter>
						<Parameter>true<!--CheckEntryDescription.Expected.Access.ReadInOp-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.Expected.Access.WriteInPreOp-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.Expected.Access.WriteInSafeOp-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.Expected.Access.WriteInOp-->
						</Parameter>
						<Parameter>"o"</Parameter>
						<!--CheckEntryDescription.Expected.Category-->
						<Parameter>None<!--CheckEntryDescription.Expected.PdoMapping-->
						</Parameter>
						<Parameter>CoeComm.TmpDataArray<!--CheckEntryDescription.Expected.DefaultData-->
						</Parameter>
						<Parameter>null<!--CheckEntryDescription.Expected.MinData-->
						</Parameter>
						<Parameter>null<!--CheckEntryDescription.Expected.MaxData-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.Expected.Settings-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.Expected.Backup-->
						</Parameter>
						<Parameter>8<!--CheckEntryDescription.Expected.BitSize-->
						</Parameter>
						<Parameter>-1<!--CheckEntryDescription.Expected.BitOffs-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.AllowEnumDataType-->
						</Parameter>
						<OutParameter>CoeComm.bError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>CoeComm.bError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="CoeComm.bResult">false</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="EntryLoopEnd">
					<SetVariable Target="CoeComm.EntryCount">CoeComm.EntryCount + 1</SetVariable>
					<Compare>
						<LowerOrEqual>
							<Value1>CoeComm.EntryCount</Value1>
							<Value2>255</Value2>
							<GotoStep>EntryLoopStart</GotoStep>
						</LowerOrEqual>
					</Compare>
				</TestStep>
				<TestStep Name="WriteSuccess">
					<Compare>
						<Equal>
							<Value1>CoeComm.bResult</Value1>
							<Value2>true</Value2>
							<ReturnSuccess Id="9" Param0="CoeComm.Index" Param1="CoeComm.TmpName">{1} (0x{0:x4}) : the object structure is valid.</ReturnSuccess>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>CoeComm.bResult</Value1>
							<Value2>false</Value2>
							<RaiseError Id="10"></RaiseError>
						</Equal>
					</Compare>
				</TestStep>
			</TestCase>
			<TestCase Name="Sync Manager PDO Assignment (0x1C10 .. 0x1C2F)" CaseId="13">
				<?MAX_OUTPUT_ID 14?>
				<Description>
					<Purpose>Check if process data syncmanager assing objects are defined.</Purpose>
					<PreCondition>Device supports Mailbox communication via CoE protocol
ESI provides a offline object dictionary</PreCondition>
					<Action>Check the object structure:
1. Name
2. Data Type
3. Object Code
4. Access
5. Pdo mapping
6. Bit Size</Action>
					<PostCondition>The structure shall be as described in ETG.1000.6</PostCondition>
					<References>
						<Reference Specification="ETG.1000.6"></Reference>
					</References>
					<Mandatory>true</Mandatory>
				</Description>
				<TestStep Name="CheckMbxCoeSupport">
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Mailbox</Value1>
							<Value2>false</Value2>
							<SkipCase Id="0">Device does not support mailbox communication</SkipCase>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Mailbox.CoE</Value1>
							<Value2>false</Value2>
							<SkipCase Id="1">Device does not support CoE</SkipCase>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Dictionary</Value1>
							<Value2>false</Value2>
							<SkipCase Id="2">Device does not provide an offline dictionary</SkipCase>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="SetDefaultMandatoryValue">
					<SetVariable Target="CoeComm.IsMandatroy">false</SetVariable>
				</TestStep>
				<TestStep Name="InitTestRunIndication">
					<SetVariable Target="CoeComm.bTestExecuted">false</SetVariable>
				</TestStep>
				<TestStep Name="InitResult">
					<SetVariable Target="CoeComm.bResult">true</SetVariable>
				</TestStep>
				<TestStep Name="InitAccessFlag">
					<SetVariable Target="CoeComm.AccessInPreOP">-1</SetVariable>
					<Compare>
						<Equal>
							<!--Value 1: DeviceDescr.Mailbox.CoE.PdoAssign-->
							<Value1>false</Value1>
							<Value2>true</Value2>
							<SetVariable Target="CoeComm.AccessInPreOP">1</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="InitObjName">
					<SetVariable Target="CoeComm.TmpName">Sync Manager PDO Assignment</SetVariable>
				</TestStep>
				<TestStep Name="InitIndex">
					<SetVariable Target="CoeComm.Index">#x1C10</SetVariable>
				</TestStep>
				<TestStep Name="GetOD">
					<Description Id="3">Getting offline dictionary from assigned ESI...</Description>
					<GetObjectDictionary Target="CoeComm.Dict">
						<DictionaryType>Offline</DictionaryType>
					</GetObjectDictionary>
					<RaiseErrorOnFailure Id="4">Failed to get offline dictionary.</RaiseErrorOnFailure>
				</TestStep>
				<TestStep Name="ObjLoopSTART">
					<SetVariable Target="CoeComm.ObjLoopIdx">CoeComm.Index - #x1C10</SetVariable>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<CallTestFunction Name="IsObjectDefined">
								<Parameter>CoeComm.Dict</Parameter>
								<Parameter>CoeComm.Index</Parameter>
								<OutParameter>CoeComm.bObjectDefined</OutParameter>
							</CallTestFunction>
						</Equal>
					</Compare>
					<Compare>
						<GreaterOrEqual>
							<Value1>CoeComm.ObjLoopIdx</Value1>
							<Value2>DeviceDescr.SM.Count</Value2>
							<GotoStep>HandleDisabledObj</GotoStep>
						</GreaterOrEqual>
					</Compare>
					<Compare>
						<Equal>
							<Value1>DeviceDescr.SM[CoeComm.ObjLoopIdx].Virtual</Value1>
							<Value2>true</Value2>
							<WriteLine Id="14" Level="Output" Param0="CoeComm.ObjLoopIdx" Param1="CoeComm.Index">Skip Object 0x{1:X}, SM[{0}] is virtual.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>DeviceDescr.SM[CoeComm.ObjLoopIdx].Virtual</Value1>
							<Value2>true</Value2>
							<GotoStep>ObjLoopEND</GotoStep>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="5" Level="Verbose" Param0="DeviceDescr.SM[CoeComm.ObjLoopIdx]" Param1="CoeComm.ObjLoopIdx">Current SM[{1}].Type '{0}'.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>DeviceDescr.SM[CoeComm.ObjLoopIdx]</Value1>
							<Value2>"Inputs"</Value2>
							<GotoStep>StartTest</GotoStep>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>DeviceDescr.SM[CoeComm.ObjLoopIdx]</Value1>
							<Value2>"Outputs"</Value2>
							<GotoStep>StartTest</GotoStep>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="6" Level="Verbose" Param0="DeviceDescr.SM[CoeComm.ObjLoopIdx]" Param1="CoeComm.ObjLoopIdx">No SyncManager PDO assign object shall be defined because the SM[{1}].Type is '{0}'.</WriteLine>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="HandleDisabledObj">
					<SetVariable Target="CoeComm.bTestExecuted">true</SetVariable>
					<!--the current object shall not be defined (or SI0 shall be 0)-->
					<Compare>
						<Equal>
							<Value1>CoeComm.bObjectDefined</Value1>
							<Value2>false</Value2>
							<GotoStep>ObjLoopEND</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CheckValueOfSi0">
					<InitArray TargetArray="CoeComm.TmpDataArray" Length="1"></InitArray>
				</TestStep>
				<TestStep>
					<SetArrayItem TargetArray="CoeComm.TmpDataArray" Index="0">0</SetArrayItem>
				</TestStep>
				<TestStep>
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>CoeComm.Dict<!--CheckEntryDescription.ObjectDictionary-->
						</Parameter>
						<Parameter>offline<!--CheckEntryDescription.DictionaryType-->
						</Parameter>
						<Parameter>CoeComm.Index<!--CheckEntryDescription.Index-->
						</Parameter>
						<Parameter>0<!--CheckEntryDescription.SubIndex-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.LevelWarning-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.CaseSensitive-->
						</Parameter>
						<Parameter>EmptyString<!--CheckEntryDescription.Expected.Name-->
						</Parameter>
						<Parameter>5<!--CheckEntryDescription.Expected.Type-->
						</Parameter>
						<Parameter>true<!--CheckEntryDescription.Expected.Access.ReadInPreOp-->
						</Parameter>
						<Parameter>true<!--CheckEntryDescription.Expected.Access.ReadInSafeOp-->
						</Parameter>
						<Parameter>true<!--CheckEntryDescription.Expected.Access.ReadInOp-->
						</Parameter>
						<Parameter>CoeComm.AccessInPreOP<!--CheckEntryDescription.Expected.Access.WriteInPreOp-->
						</Parameter>
						<Parameter>-1<!--CheckEntryDescription.Expected.Access.WriteInSafeOp-->
						</Parameter>
						<Parameter>-1<!--CheckEntryDescription.Expected.Access.WriteInOp-->
						</Parameter>
						<Parameter>EmptyString<!--CheckEntryDescription.Expected.Category-->
						</Parameter>
						<Parameter>None<!--CheckEntryDescription.Expected.PdoMapping-->
						</Parameter>
						<Parameter>CoeComm.TmpDataArray<!--CheckEntryDescription.Expected.DefaultData-->
						</Parameter>
						<Parameter>null<!--CheckEntryDescription.Expected.MinData-->
						</Parameter>
						<Parameter>null<!--CheckEntryDescription.Expected.MaxData-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.Expected.Settings-->
						</Parameter>
						<Parameter>-1<!--CheckEntryDescription.Expected.Backup-->
						</Parameter>
						<Parameter>8<!--CheckEntryDescription.Expected.BitSize-->
						</Parameter>
						<Parameter>0<!--CheckEntryDescription.Expected.BitOffs-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.AllowEnumDataType-->
						</Parameter>
						<OutParameter>CoeComm.bError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>CoeComm.bError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="CoeComm.bResult">false</SetVariable>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>ObjLoopEND</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="StartTest"></TestStep>
				<TestStep Name="CheckDefaultLengthAndEnable">
					<Description Id="7" Level="Verbose" Param0="CoeComm.ObjLoopIdx" Param1="DeviceDescr.SM[CoeComm.ObjLoopIdx].DefaultSize" Param2="DeviceDescr.SM[CoeComm.ObjLoopIdx].Enable">SM[{0}].DefaultSize '{1}' (Enable '{2}').</Description>
					<Compare>
						<Equal>
							<Value1>DeviceDescr.SM[CoeComm.ObjLoopIdx].DefaultSize</Value1>
							<Value2>0</Value2>
							<GotoStep>CheckIfPdSmIsDefined</GotoStep>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>DeviceDescr.SM[CoeComm.ObjLoopIdx].Enable</Value1>
							<Value2>false</Value2>
							<GotoStep>CheckIfPdSmIsDefined</GotoStep>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>VerifyObjDescr</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CheckIfPdSmIsDefined">
					<!--The current assign object may not be defined offline because the corresponding SM is disabled or the default length is 0-->
					<Compare>
						<Equal>
							<Value1>CoeComm.bObjectDefined</Value1>
							<Value2>false</Value2>
							<GotoStep>ObjLoopEND</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="VerifyObjDescr">
					<Description Id="8" Param0="CoeComm.Index" Level="Output">0x{0:x4} Checking object description...</Description>
					<CallTestFunction Name="CheckObjectDescription">
						<Parameter>CoeComm.Dict</Parameter>
						<Parameter>offline</Parameter>
						<Parameter>CoeComm.Index<!--VerifyObjectDescription.Index-->
						</Parameter>
						<Parameter>true<!--VerifyObjectDescription.LevelWarning-->
						</Parameter>
						<Parameter>false</Parameter>
						<Parameter>null<!--VerifyObjectDescription.Expected.Names-->
						</Parameter>
						<Parameter>0<!--VerifyObjectDescription.Expected.Type-->
						</Parameter>
						<Parameter>8<!--VerifyObjectDescription.Expected.ObjectCode-->
						</Parameter>
						<Parameter>-1<!--VerifyObjectDescription.Expected.BitSize-->
						</Parameter>
						<OutParameter>CoeComm.bError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>CoeComm.bError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="CoeComm.bResult">false</SetVariable>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>CoeComm.bObjectDefined</Value1>
							<Value2>false</Value2>
							<GotoStep>ObjLoopEND</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="VerifySi0Descr">
					<Description Id="9" Param0="CoeComm.Index" Level="Output">0x{0:x4}.0 Checking entry description...</Description>
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>CoeComm.Dict<!--CheckEntryDescription.ObjectDictionary-->
						</Parameter>
						<Parameter>offline<!--CheckEntryDescription.DictionaryType-->
						</Parameter>
						<Parameter>CoeComm.Index<!--CheckEntryDescription.Index-->
						</Parameter>
						<Parameter>0<!--CheckEntryDescription.SubIndex-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.LevelWarning-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.CaseSensitive-->
						</Parameter>
						<Parameter>EmptyString<!--CheckEntryDescription.Expected.Name-->
						</Parameter>
						<Parameter>5<!--CheckEntryDescription.Expected.Type-->
						</Parameter>
						<Parameter>true<!--CheckEntryDescription.Expected.Access.ReadInPreOp-->
						</Parameter>
						<Parameter>true<!--CheckEntryDescription.Expected.Access.ReadInSafeOp-->
						</Parameter>
						<Parameter>true<!--CheckEntryDescription.Expected.Access.ReadInOp-->
						</Parameter>
						<Parameter>CoeComm.AccessInPreOP<!--CheckEntryDescription.Expected.Access.WriteInPreOp-->
						</Parameter>
						<Parameter>-1<!--CheckEntryDescription.Expected.Access.WriteInSafeOp-->
						</Parameter>
						<Parameter>-1<!--CheckEntryDescription.Expected.Access.WriteInOp-->
						</Parameter>
						<Parameter>EmptyString<!--CheckEntryDescription.Expected.Category-->
						</Parameter>
						<Parameter>None<!--CheckEntryDescription.Expected.PdoMapping-->
						</Parameter>
						<Parameter>null<!--CheckEntryDescription.Expected.DefaultData-->
						</Parameter>
						<Parameter>null<!--CheckEntryDescription.Expected.MinData-->
						</Parameter>
						<Parameter>null<!--CheckEntryDescription.Expected.MaxData-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.Expected.Settings-->
						</Parameter>
						<Parameter>-1<!--CheckEntryDescription.Expected.Backup-->
						</Parameter>
						<Parameter>8<!--CheckEntryDescription.Expected.BitSize-->
						</Parameter>
						<Parameter>0<!--CheckEntryDescription.Expected.BitOffs-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.AllowEnumDataType-->
						</Parameter>
						<OutParameter>CoeComm.bError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>CoeComm.bError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="CoeComm.bResult">false</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="InitEntryCount">
					<SetVariable Target="CoeComm.EntryCount">1</SetVariable>
				</TestStep>
				<TestStep Name="EntryLoopSTART"></TestStep>
				<TestStep Name="CheckIfSubIndexXIsDefined">
					<CallTestFunction Name="IsEntryDefined">
						<Parameter>CoeComm.Dict</Parameter>
						<Parameter>CoeComm.Index</Parameter>
						<Parameter>CoeComm.EntryCount</Parameter>
						<OutParameter>CoeComm.TmpBool</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>CoeComm.TmpBool</Value1>
							<Value2>false</Value2>
							<GotoStep>EntryLoopEND</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="VerifySiXDescr">
					<Description Id="10" Param0="CoeComm.Index" Param1="CoeComm.EntryCount" Level="Output">0x{0:x4}.{1} Checking entry description...</Description>
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>CoeComm.Dict<!--CheckEntryDescription.ObjectDictionary-->
						</Parameter>
						<Parameter>offline<!--CheckEntryDescription.DictionaryType-->
						</Parameter>
						<Parameter>CoeComm.Index<!--CheckEntryDescription.Index-->
						</Parameter>
						<Parameter>CoeComm.EntryCount<!--CheckEntryDescription.SubIndex-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.LevelWarning-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.CaseSensitive-->
						</Parameter>
						<Parameter>EmptyString<!--CheckEntryDescription.Expected.Name-->
						</Parameter>
						<Parameter>6<!--CheckEntryDescription.Expected.Type-->
						</Parameter>
						<Parameter>true<!--CheckEntryDescription.Expected.Access.ReadInPreOp-->
						</Parameter>
						<Parameter>true<!--CheckEntryDescription.Expected.Access.ReadInSafeOp-->
						</Parameter>
						<Parameter>true<!--CheckEntryDescription.Expected.Access.ReadInOp-->
						</Parameter>
						<Parameter>CoeComm.AccessInPreOP<!--CheckEntryDescription.Expected.Access.WriteInPreOp-->
						</Parameter>
						<Parameter>-1<!--CheckEntryDescription.Expected.Access.WriteInSafeOp-->
						</Parameter>
						<Parameter>-1<!--CheckEntryDescription.Expected.Access.WriteInOp-->
						</Parameter>
						<Parameter>"o"</Parameter>
						<!--CheckEntryDescription.Expected.Category-->
						<Parameter>None<!--CheckEntryDescription.Expected.PdoMapping-->
						</Parameter>
						<Parameter>null<!--CheckEntryDescription.Expected.DefaultData-->
						</Parameter>
						<Parameter>null<!--CheckEntryDescription.Expected.MinData-->
						</Parameter>
						<Parameter>null<!--CheckEntryDescription.Expected.MaxData-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.Expected.Settings-->
						</Parameter>
						<Parameter>-1<!--CheckEntryDescription.Expected.Backup-->
						</Parameter>
						<Parameter>16<!--CheckEntryDescription.Expected.BitSize-->
						</Parameter>
						<Parameter>-1<!--CheckEntryDescription.Expected.BitOffs-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.AllowEnumDataType-->
						</Parameter>
						<OutParameter>CoeComm.bError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>CoeComm.bError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="CoeComm.bResult">false</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="EntryLoopEND">
					<SetVariable Target="CoeComm.EntryCount">CoeComm.EntryCount + 1</SetVariable>
					<Compare>
						<Lower>
							<Value1>CoeComm.EntryCount</Value1>
							<Value2>255</Value2>
							<GotoStep>EntryLoopSTART</GotoStep>
						</Lower>
					</Compare>
				</TestStep>
				<TestStep Name="ObjLoopEND">
					<SetVariable Target="CoeComm.Index">CoeComm.Index + 1</SetVariable>
					<Compare>
						<LowerOrEqual>
							<Value1>CoeComm.Index</Value1>
							<Value2>#x1C2F</Value2>
							<GotoStep>ObjLoopSTART</GotoStep>
						</LowerOrEqual>
					</Compare>
				</TestStep>
				<TestStep Name="SetTestState">
					<Compare>
						<Equal>
							<Value1>CoeComm.bTestExecuted</Value1>
							<Value2>false</Value2>
							<SkipCase Id="11" Param0="CoeComm.TmpName">No '{0}' (0x1C10 to 0x1C2F) is defined.</SkipCase>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>CoeComm.bResult</Value1>
							<Value2>true</Value2>
							<ReturnSuccess Id="12" Param0="CoeComm.TmpName">{0} (0x1C10 to 0x1C2F) : the object structure is valid.</ReturnSuccess>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>CoeComm.bResult</Value1>
							<Value2>false</Value2>
							<RaiseError Id="13"></RaiseError>
						</Equal>
					</Compare>
				</TestStep>
			</TestCase>
			<TestCase Name="Sync Manager Parameter (0x1C30 - 0x1C4F)" CaseId="14">
				<?MAX_OUTPUT_ID 38?>
				<Description>
					<Purpose>Check the Structure of the Sync Manager Parameter objects</Purpose>
					<PreCondition>Device supports Mailbox communication via CoE protocol
ESI provides a offline object dictionary</PreCondition>
					<Action>Check the object structure:
1. Name
2. Data Type
3. Object Code
4. Access
5. Pdo mapping
6. Bit Size</Action>
					<PostCondition>The structure shall be as described in ETG.1020 </PostCondition>
					<References>
						<Reference Specification="ETG.1020"></Reference>
					</References>
					<Mandatory>true</Mandatory>
				</Description>
				<TestStep Name="CheckMbxCoeSupport">
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Mailbox</Value1>
							<Value2>false</Value2>
							<SkipCase Id="0">Device does not support mailbox communication</SkipCase>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Mailbox.CoE</Value1>
							<Value2>false</Value2>
							<SkipCase Id="1">Device does not support CoE</SkipCase>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Dictionary</Value1>
							<Value2>false</Value2>
							<SkipCase Id="2">Device does not provide an offline dictionary</SkipCase>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="SetDefaultMandatoryValue">
					<SetVariable Target="CoeComm.IsMandatroy">DeviceDescr.DC</SetVariable>
				</TestStep>
				<TestStep Name="InitTestRunIndication">
					<SetVariable Target="CoeComm.bTestExecuted">false</SetVariable>
				</TestStep>
				<TestStep Name="InitResult">
					<SetVariable Target="CoeComm.bResult">true</SetVariable>
				</TestStep>
				<TestStep Name="InitObjName">
					<SetVariable Target="CoeComm.TmpName">Sync Manager Parameter</SetVariable>
				</TestStep>
				<TestStep Name="InitIndex">
					<SetVariable Target="CoeComm.Index">#x1C30</SetVariable>
				</TestStep>
				<TestStep Name="GetOD">
					<Description Id="3">Getting offline dictionary from assigned ESI...</Description>
					<GetObjectDictionary Target="CoeComm.Dict">
						<DictionaryType>Offline</DictionaryType>
					</GetObjectDictionary>
					<RaiseErrorOnFailure Id="4">Failed to get offline dictionary.</RaiseErrorOnFailure>
				</TestStep>
				<TestStep Name="ObjLoopSTART">
					<SetVariable Target="CoeComm.ObjLoopIdx">CoeComm.Index - #x1C30</SetVariable>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<CallTestFunction Name="IsObjectDefined">
								<Parameter>CoeComm.Dict</Parameter>
								<Parameter>CoeComm.Index</Parameter>
								<OutParameter>CoeComm.bObjectDefined</OutParameter>
							</CallTestFunction>
						</Equal>
					</Compare>
					<Compare>
						<GreaterOrEqual>
							<Value1>CoeComm.ObjLoopIdx</Value1>
							<Value2>DeviceDescr.SM.Count</Value2>
							<GotoStep>HandleDisabledObj</GotoStep>
						</GreaterOrEqual>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="5" Level="Verbose" Param0="DeviceDescr.SM[CoeComm.ObjLoopIdx]" Param1="CoeComm.ObjLoopIdx">Current SM[{1}].Type '{0}'.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>DeviceDescr.SM[CoeComm.ObjLoopIdx]</Value1>
							<Value2>"Inputs"</Value2>
							<GotoStep>StartTest</GotoStep>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>DeviceDescr.SM[CoeComm.ObjLoopIdx]</Value1>
							<Value2>"Outputs"</Value2>
							<GotoStep>StartTest</GotoStep>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="6" Level="Verbose" Param0="DeviceDescr.SM[CoeComm.ObjLoopIdx]" Param1="CoeComm.ObjLoopIdx">No SyncManager Parameter object shall be defined because the SM[{1}].Type is '{0}'.</WriteLine>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="HandleDisabledObj">
					<Compare>
						<Equal>
							<Value1>CoeComm.bObjectDefined</Value1>
							<Value2>false</Value2>
							<GotoStep>ObjLoopEND</GotoStep>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<SetVariable Target="CoeComm.bResult">false</SetVariable>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="7" Level="Error" Param0="DeviceDescr.SM[CoeComm.ObjLoopIdx]" Param1="CoeComm.ObjLoopIdx">No SyncManager Parameter object shall be defined because the SM[{1}].Type is '{0}'.</WriteLine>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="StartTest">
					<SetVariable Target="CoeComm.bTestExecuted">true</SetVariable>
				</TestStep>
				<TestStep Name="HandleDisabledSm">
					<Compare>
						<Equal>
							<Value1>CurrentConfig.Sm[CoeComm.ObjLoopIdx].Length</Value1>
							<Value2>0</Value2>
							<WriteLine Id="8" Level="Verbose" Param1="CoeComm.Index" Param0="CoeComm.ObjLoopIdx">0x{1:X} is not mandatory, SM[{0}] length is 0.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>CurrentConfig.Sm[CoeComm.ObjLoopIdx].Length</Value1>
							<Value2>0</Value2>
							<SetVariable Target="CoeComm.IsMandatroy">false</SetVariable>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>CurrentConfig.Sm[CoeComm.ObjLoopIdx].Enable</Value1>
							<Value2>false</Value2>
							<WriteLine Id="9" Level="Verbose" Param1="CoeComm.Index" Param0="CoeComm.ObjLoopIdx">0x{1:X} is not mandatory, SM[{0}] is not enabled.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>CurrentConfig.Sm[CoeComm.ObjLoopIdx].Enable</Value1>
							<Value2>false</Value2>
							<SetVariable Target="CoeComm.IsMandatroy">false</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CheckifOptionalObjectExists">
					<CallTestFunction Name="IsObjectDefined">
						<Parameter>CoeComm.Dict</Parameter>
						<Parameter>CoeComm.Index</Parameter>
						<OutParameter>CoeComm.TmpBool</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>CoeComm.IsMandatroy</Value1>
							<Value2>true</Value2>
							<GotoStep>VerifyObjDescr</GotoStep>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>CoeComm.TmpBool</Value1>
							<Value2>false</Value2>
							<GotoStep>ObjLoopEND</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="VerifyObjDescr">
					<Description Id="10" Param0="CoeComm.Index" Level="Output">0x{0:x4} Checking object description...</Description>
					<CallTestFunction Name="CheckObjectDescription">
						<Parameter>CoeComm.Dict</Parameter>
						<Parameter>offline</Parameter>
						<Parameter>CoeComm.Index<!--VerifyObjectDescription.Index-->
						</Parameter>
						<Parameter>false<!--VerifyObjectDescription.LevelWarning-->
						</Parameter>
						<Parameter>false</Parameter>
						<Parameter>null<!--VerifyObjectDescription.Expected.Names-->
						</Parameter>
						<Parameter>0<!--VerifyObjectDescription.Expected.Type-->
						</Parameter>
						<Parameter>9<!--VerifyObjectDescription.Expected.ObjectCode-->
						</Parameter>
						<Parameter>-1<!--VerifyObjectDescription.Expected.BitSize-->
						</Parameter>
						<OutParameter>CoeComm.bError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>CoeComm.bError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="CoeComm.bResult">false</SetVariable>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>CoeComm.bObjectDefined</Value1>
							<Value2>false</Value2>
							<GotoStep>ObjLoopEND</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="VerifySi0Descr">
					<Description Id="11" Param0="CoeComm.Index" Level="Output">0x{0:x4}.0 Checking entry description...</Description>
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>CoeComm.Dict<!--CheckEntryDescription.ObjectDictionary-->
						</Parameter>
						<Parameter>offline<!--CheckEntryDescription.DictionaryType-->
						</Parameter>
						<Parameter>CoeComm.Index<!--CheckEntryDescription.Index-->
						</Parameter>
						<Parameter>0<!--CheckEntryDescription.SubIndex-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.LevelWarning-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.CaseSensitive-->
						</Parameter>
						<Parameter>EmptyString<!--CheckEntryDescription.Expected.Name-->
						</Parameter>
						<Parameter>5<!--CheckEntryDescription.Expected.Type-->
						</Parameter>
						<Parameter>true<!--CheckEntryDescription.Expected.Access.ReadInPreOp-->
						</Parameter>
						<Parameter>true<!--CheckEntryDescription.Expected.Access.ReadInSafeOp-->
						</Parameter>
						<Parameter>true<!--CheckEntryDescription.Expected.Access.ReadInOp-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.Expected.Access.WriteInPreOp-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.Expected.Access.WriteInSafeOp-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.Expected.Access.WriteInOp-->
						</Parameter>
						<Parameter>EmptyString<!--CheckEntryDescription.Expected.Category-->
						</Parameter>
						<Parameter>None<!--CheckEntryDescription.Expected.PdoMapping-->
						</Parameter>
						<Parameter>null<!--CheckEntryDescription.Expected.DefaultData-->
						</Parameter>
						<Parameter>null<!--CheckEntryDescription.Expected.MinData-->
						</Parameter>
						<Parameter>null<!--CheckEntryDescription.Expected.MaxData-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.Expected.Settings-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.Expected.Backup-->
						</Parameter>
						<Parameter>8<!--CheckEntryDescription.Expected.BitSize-->
						</Parameter>
						<Parameter>-1<!--CheckEntryDescription.Expected.BitOffs-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.AllowEnumDataType-->
						</Parameter>
						<OutParameter>CoeComm.bError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>CoeComm.bError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="CoeComm.bResult">false</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CheckSi_1">
					<SetVariable Target="CoeComm.EntryCount">1</SetVariable>
				</TestStep>
				<TestStep>
					<Description Id="12" Param0="CoeComm.Index" Param1="CoeComm.EntryCount" Level="Output">0x{0:x4}.{1} Checking entry description...</Description>
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>CoeComm.Dict<!--CheckEntryDescription.ObjectDictionary-->
						</Parameter>
						<Parameter>offline<!--CheckEntryDescription.DictionaryType-->
						</Parameter>
						<Parameter>CoeComm.Index<!--CheckEntryDescription.Index-->
						</Parameter>
						<Parameter>CoeComm.EntryCount<!--CheckEntryDescription.SubIndex-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.LevelWarning-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.CaseSensitive-->
						</Parameter>
						<Parameter>"Synchronization Type","Sync mode"</Parameter>
						<!--CheckEntryDescription.Expected.Name-->
						<Parameter>6<!--CheckEntryDescription.Expected.Type-->
						</Parameter>
						<Parameter>true<!--CheckEntryDescription.Expected.Access.ReadInPreOp-->
						</Parameter>
						<Parameter>true<!--CheckEntryDescription.Expected.Access.ReadInSafeOp-->
						</Parameter>
						<Parameter>true<!--CheckEntryDescription.Expected.Access.ReadInOp-->
						</Parameter>
						<Parameter>-1<!--CheckEntryDescription.Expected.Access.WriteInPreOp-->
						</Parameter>
						<Parameter>-1<!--CheckEntryDescription.Expected.Access.WriteInSafeOp-->
						</Parameter>
						<Parameter>-1<!--CheckEntryDescription.Expected.Access.WriteInOp-->
						</Parameter>
						<Parameter>EmptyString<!--CheckEntryDescription.Expected.Category-->
						</Parameter>
						<Parameter>None<!--CheckEntryDescription.Expected.PdoMapping-->
						</Parameter>
						<Parameter>null<!--CheckEntryDescription.Expected.DefaultData-->
						</Parameter>
						<Parameter>null<!--CheckEntryDescription.Expected.MinData-->
						</Parameter>
						<Parameter>null<!--CheckEntryDescription.Expected.MaxData-->
						</Parameter>
						<Parameter>-1<!--CheckEntryDescription.Expected.Settings-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.Expected.Backup-->
						</Parameter>
						<Parameter>16<!--CheckEntryDescription.Expected.BitSize-->
						</Parameter>
						<Parameter>-1<!--CheckEntryDescription.Expected.BitOffs-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.AllowEnumDataType-->
						</Parameter>
						<OutParameter>CoeComm.bError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>CoeComm.bError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="CoeComm.bResult">false</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CheckSi_2">
					<SetVariable Target="CoeComm.EntryCount">2</SetVariable>
				</TestStep>
				<TestStep Name="CheckIfSubIndex2IsDefined">
					<CallTestFunction Name="IsEntryDefined">
						<Parameter>CoeComm.Dict</Parameter>
						<Parameter>CoeComm.Index</Parameter>
						<Parameter>CoeComm.EntryCount</Parameter>
						<OutParameter>CoeComm.TmpBool</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>CoeComm.TmpBool</Value1>
							<Value2>false</Value2>
							<GotoStep>CheckSi_3</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep>
					<Description Id="13" Param0="CoeComm.Index" Param1="CoeComm.EntryCount" Level="Output">0x{0:x4}.{1} Checking entry description...</Description>
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>CoeComm.Dict<!--CheckEntryDescription.ObjectDictionary-->
						</Parameter>
						<Parameter>offline<!--CheckEntryDescription.DictionaryType-->
						</Parameter>
						<Parameter>CoeComm.Index<!--CheckEntryDescription.Index-->
						</Parameter>
						<Parameter>CoeComm.EntryCount<!--CheckEntryDescription.SubIndex-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.LevelWarning-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.CaseSensitive-->
						</Parameter>
						<Parameter>"Cycle Time"</Parameter>
						<!--CheckEntryDescription.Expected.Name-->
						<Parameter>7<!--CheckEntryDescription.Expected.Type-->
						</Parameter>
						<Parameter>true<!--CheckEntryDescription.Expected.Access.ReadInPreOp-->
						</Parameter>
						<Parameter>true<!--CheckEntryDescription.Expected.Access.ReadInSafeOp-->
						</Parameter>
						<Parameter>true<!--CheckEntryDescription.Expected.Access.ReadInOp-->
						</Parameter>
						<Parameter>-1<!--CheckEntryDescription.Expected.Access.WriteInPreOp-->
						</Parameter>
						<Parameter>-1<!--CheckEntryDescription.Expected.Access.WriteInSafeOp-->
						</Parameter>
						<Parameter>-1<!--CheckEntryDescription.Expected.Access.WriteInOp-->
						</Parameter>
						<Parameter>"o"</Parameter>
						<!--CheckEntryDescription.Expected.Category-->
						<Parameter>None<!--CheckEntryDescription.Expected.PdoMapping-->
						</Parameter>
						<Parameter>null<!--CheckEntryDescription.Expected.DefaultData-->
						</Parameter>
						<Parameter>null<!--CheckEntryDescription.Expected.MinData-->
						</Parameter>
						<Parameter>null<!--CheckEntryDescription.Expected.MaxData-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.Expected.Settings-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.Expected.Backup-->
						</Parameter>
						<Parameter>32<!--CheckEntryDescription.Expected.BitSize-->
						</Parameter>
						<Parameter>-1<!--CheckEntryDescription.Expected.BitOffs-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.AllowEnumDataType-->
						</Parameter>
						<OutParameter>CoeComm.bError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>CoeComm.bError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="CoeComm.bResult">false</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CheckSi_3">
					<SetVariable Target="CoeComm.EntryCount">3</SetVariable>
				</TestStep>
				<TestStep>
					<CallTestFunction Name="IsEntryDefined">
						<Parameter>CoeComm.Dict</Parameter>
						<Parameter>CoeComm.Index</Parameter>
						<Parameter>CoeComm.EntryCount</Parameter>
						<OutParameter>CoeComm.TmpBool</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>CoeComm.TmpBool</Value1>
							<Value2>false</Value2>
							<GotoStep>CheckSi_4</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep>
					<Description Id="14" Param0="CoeComm.Index" Param1="CoeComm.EntryCount" Level="Output">0x{0:x4}.{1} Checking entry description...</Description>
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>CoeComm.Dict<!--CheckEntryDescription.ObjectDictionary-->
						</Parameter>
						<Parameter>offline<!--CheckEntryDescription.DictionaryType-->
						</Parameter>
						<Parameter>CoeComm.Index<!--CheckEntryDescription.Index-->
						</Parameter>
						<Parameter>CoeComm.EntryCount<!--CheckEntryDescription.SubIndex-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.LevelWarning-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.CaseSensitive-->
						</Parameter>
						<Parameter>"Shift Time"</Parameter>
						<!--CheckEntryDescription.Expected.Name-->
						<Parameter>7<!--CheckEntryDescription.Expected.Type-->
						</Parameter>
						<Parameter>true<!--CheckEntryDescription.Expected.Access.ReadInPreOp-->
						</Parameter>
						<Parameter>true<!--CheckEntryDescription.Expected.Access.ReadInSafeOp-->
						</Parameter>
						<Parameter>true<!--CheckEntryDescription.Expected.Access.ReadInOp-->
						</Parameter>
						<Parameter>-1<!--CheckEntryDescription.Expected.Access.WriteInPreOp-->
						</Parameter>
						<Parameter>-1<!--CheckEntryDescription.Expected.Access.WriteInSafeOp-->
						</Parameter>
						<Parameter>-1<!--CheckEntryDescription.Expected.Access.WriteInOp-->
						</Parameter>
						<Parameter>"o"</Parameter>
						<!--CheckEntryDescription.Expected.Category-->
						<Parameter>None<!--CheckEntryDescription.Expected.PdoMapping-->
						</Parameter>
						<Parameter>null<!--CheckEntryDescription.Expected.DefaultData-->
						</Parameter>
						<Parameter>null<!--CheckEntryDescription.Expected.MinData-->
						</Parameter>
						<Parameter>null<!--CheckEntryDescription.Expected.MaxData-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.Expected.Settings-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.Expected.Backup-->
						</Parameter>
						<Parameter>32<!--CheckEntryDescription.Expected.BitSize-->
						</Parameter>
						<Parameter>-1<!--CheckEntryDescription.Expected.BitOffs-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.AllowEnumDataType-->
						</Parameter>
						<OutParameter>CoeComm.bError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>CoeComm.bError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="CoeComm.bResult">false</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CheckSi_4">
					<SetVariable Target="CoeComm.EntryCount">4</SetVariable>
				</TestStep>
				<TestStep>
					<Description Id="15" Param0="CoeComm.Index" Param1="CoeComm.EntryCount" Level="Output">0x{0:x4}.{1} Checking entry description...</Description>
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>CoeComm.Dict<!--CheckEntryDescription.ObjectDictionary-->
						</Parameter>
						<Parameter>offline<!--CheckEntryDescription.DictionaryType-->
						</Parameter>
						<Parameter>CoeComm.Index<!--CheckEntryDescription.Index-->
						</Parameter>
						<Parameter>CoeComm.EntryCount<!--CheckEntryDescription.SubIndex-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.LevelWarning-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.CaseSensitive-->
						</Parameter>
						<Parameter>"Synchronization Types supported","Sync modes supported"</Parameter>
						<!--CheckEntryDescription.Expected.Name-->
						<Parameter>6<!--CheckEntryDescription.Expected.Type-->
						</Parameter>
						<Parameter>true<!--CheckEntryDescription.Expected.Access.ReadInPreOp-->
						</Parameter>
						<Parameter>true<!--CheckEntryDescription.Expected.Access.ReadInSafeOp-->
						</Parameter>
						<Parameter>true<!--CheckEntryDescription.Expected.Access.ReadInOp-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.Expected.Access.WriteInPreOp-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.Expected.Access.WriteInSafeOp-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.Expected.Access.WriteInOp-->
						</Parameter>
						<Parameter>EmptyString<!--CheckEntryDescription.Expected.Category-->
						</Parameter>
						<Parameter>None<!--CheckEntryDescription.Expected.PdoMapping-->
						</Parameter>
						<Parameter>null<!--CheckEntryDescription.Expected.DefaultData-->
						</Parameter>
						<Parameter>null<!--CheckEntryDescription.Expected.MinData-->
						</Parameter>
						<Parameter>null<!--CheckEntryDescription.Expected.MaxData-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.Expected.Settings-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.Expected.Backup-->
						</Parameter>
						<Parameter>16<!--CheckEntryDescription.Expected.BitSize-->
						</Parameter>
						<Parameter>-1<!--CheckEntryDescription.Expected.BitOffs-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.AllowEnumDataType-->
						</Parameter>
						<OutParameter>CoeComm.bError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>CoeComm.bError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="CoeComm.bResult">false</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CheckSi_5">
					<SetVariable Target="CoeComm.EntryCount">5</SetVariable>
				</TestStep>
				<TestStep>
					<CallTestFunction Name="CheckDistributedClocksSupport">
						<OutParameter>CoeComm.DutSupportsDc</OutParameter>
					</CallTestFunction>
				</TestStep>
				<TestStep>
					<CallTestFunction Name="IsEntryDefined">
						<Parameter>CoeComm.Dict</Parameter>
						<Parameter>CoeComm.Index</Parameter>
						<Parameter>CoeComm.EntryCount</Parameter>
						<OutParameter>CoeComm.TmpBool</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>CoeComm.TmpBool</Value1>
							<Value2>true</Value2>
							<GotoStep>VerifySi_5</GotoStep>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>CoeComm.DutSupportsDc</Value1>
							<Value2>false</Value2>
							<GotoStep>CheckSi_6</GotoStep>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Level="Error" Param0="CoeComm.Index" Param1="CoeComm.EntryCount">0x{0:x4}.{1} shall be defined if DC is supported.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<SetVariable Target="CoeComm.bResult">false</SetVariable>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>CheckSi_6</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="VerifySi_5">
					<Description Id="16" Param0="CoeComm.Index" Param1="CoeComm.EntryCount" Level="Output">0x{0:x4}.{1} Checking entry description...</Description>
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>CoeComm.Dict<!--CheckEntryDescription.ObjectDictionary-->
						</Parameter>
						<Parameter>offline<!--CheckEntryDescription.DictionaryType-->
						</Parameter>
						<Parameter>CoeComm.Index<!--CheckEntryDescription.Index-->
						</Parameter>
						<Parameter>CoeComm.EntryCount<!--CheckEntryDescription.SubIndex-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.LevelWarning-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.CaseSensitive-->
						</Parameter>
						<Parameter>"Minimum Cycle Time"</Parameter>
						<!--CheckEntryDescription.Expected.Name-->
						<Parameter>7<!--CheckEntryDescription.Expected.Type-->
						</Parameter>
						<Parameter>true<!--CheckEntryDescription.Expected.Access.ReadInPreOp-->
						</Parameter>
						<Parameter>true<!--CheckEntryDescription.Expected.Access.ReadInSafeOp-->
						</Parameter>
						<Parameter>true<!--CheckEntryDescription.Expected.Access.ReadInOp-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.Expected.Access.WriteInPreOp-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.Expected.Access.WriteInSafeOp-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.Expected.Access.WriteInOp-->
						</Parameter>
						<Parameter>"o"</Parameter>
						<!--CheckEntryDescription.Expected.Category-->
						<Parameter>None<!--CheckEntryDescription.Expected.PdoMapping-->
						</Parameter>
						<Parameter>null<!--CheckEntryDescription.Expected.DefaultData-->
						</Parameter>
						<Parameter>null<!--CheckEntryDescription.Expected.MinData-->
						</Parameter>
						<Parameter>null<!--CheckEntryDescription.Expected.MaxData-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.Expected.Settings-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.Expected.Backup-->
						</Parameter>
						<Parameter>32<!--CheckEntryDescription.Expected.BitSize-->
						</Parameter>
						<Parameter>-1<!--CheckEntryDescription.Expected.BitOffs-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.AllowEnumDataType-->
						</Parameter>
						<OutParameter>CoeComm.bError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>CoeComm.bError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="CoeComm.bResult">false</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CheckSi_6">
					<SetVariable Target="CoeComm.EntryCount">6</SetVariable>
				</TestStep>
				<TestStep>
					<CallTestFunction Name="CheckDistributedClocksSupport">
						<OutParameter>CoeComm.DutSupportsDc</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>CoeComm.DutSupportsDc</Value1>
							<Value2>true</Value2>
							<WriteLine Level="Output" Param0="CoeComm.Index">DuT supports at least one DC mode 0x{0:X}.6 shall be supported.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>CoeComm.DutSupportsDc</Value1>
							<Value2>true</Value2>
							<GotoStep>VerifySi_6</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep>
					<CallTestFunction Name="IsEntryDefined">
						<Parameter>CoeComm.Dict</Parameter>
						<Parameter>CoeComm.Index</Parameter>
						<Parameter>CoeComm.EntryCount</Parameter>
						<OutParameter>CoeComm.TmpBool</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>CoeComm.TmpBool</Value1>
							<Value2>false</Value2>
							<GotoStep>CheckSi_7</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="VerifySi_6">
					<Description Id="17" Param0="CoeComm.Index" Param1="CoeComm.EntryCount" Level="Output">0x{0:x4}.{1} Checking entry description...</Description>
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>CoeComm.Dict<!--CheckEntryDescription.ObjectDictionary-->
						</Parameter>
						<Parameter>offline<!--CheckEntryDescription.DictionaryType-->
						</Parameter>
						<Parameter>CoeComm.Index<!--CheckEntryDescription.Index-->
						</Parameter>
						<Parameter>CoeComm.EntryCount<!--CheckEntryDescription.SubIndex-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.LevelWarning-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.CaseSensitive-->
						</Parameter>
						<Parameter>"Calc and Copy Time"</Parameter>
						<!--CheckEntryDescription.Expected.Name-->
						<Parameter>7<!--CheckEntryDescription.Expected.Type-->
						</Parameter>
						<Parameter>true<!--CheckEntryDescription.Expected.Access.ReadInPreOp-->
						</Parameter>
						<Parameter>true<!--CheckEntryDescription.Expected.Access.ReadInSafeOp-->
						</Parameter>
						<Parameter>true<!--CheckEntryDescription.Expected.Access.ReadInOp-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.Expected.Access.WriteInPreOp-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.Expected.Access.WriteInSafeOp-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.Expected.Access.WriteInOp-->
						</Parameter>
						<Parameter>"o"</Parameter>
						<!--CheckEntryDescription.Expected.Category-->
						<Parameter>None<!--CheckEntryDescription.Expected.PdoMapping-->
						</Parameter>
						<Parameter>null<!--CheckEntryDescription.Expected.DefaultData-->
						</Parameter>
						<Parameter>null<!--CheckEntryDescription.Expected.MinData-->
						</Parameter>
						<Parameter>null<!--CheckEntryDescription.Expected.MaxData-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.Expected.Settings-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.Expected.Backup-->
						</Parameter>
						<Parameter>32<!--CheckEntryDescription.Expected.BitSize-->
						</Parameter>
						<Parameter>-1<!--CheckEntryDescription.Expected.BitOffs-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.AllowEnumDataType-->
						</Parameter>
						<OutParameter>CoeComm.bError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>CoeComm.bError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="CoeComm.bResult">false</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CheckSi_7">
					<SetVariable Target="CoeComm.EntryCount">7</SetVariable>
				</TestStep>
				<TestStep>
					<CallTestFunction Name="IsEntryDefined">
						<Parameter>CoeComm.Dict</Parameter>
						<Parameter>CoeComm.Index</Parameter>
						<Parameter>CoeComm.EntryCount</Parameter>
						<OutParameter>CoeComm.TmpBool</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>CoeComm.TmpBool</Value1>
							<Value2>false</Value2>
							<GotoStep>CheckSi_8</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="VerifySi_7">
					<Description Id="18" Param0="CoeComm.Index" Param1="CoeComm.EntryCount" Level="Output">0x{0:x4}.{1} Checking entry description...</Description>
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>CoeComm.Dict<!--CheckEntryDescription.ObjectDictionary-->
						</Parameter>
						<Parameter>offline<!--CheckEntryDescription.DictionaryType-->
						</Parameter>
						<Parameter>CoeComm.Index<!--CheckEntryDescription.Index-->
						</Parameter>
						<Parameter>CoeComm.EntryCount<!--CheckEntryDescription.SubIndex-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.LevelWarning-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.CaseSensitive-->
						</Parameter>
						<Parameter>"Minimum Delay Time"</Parameter>
						<!--CheckEntryDescription.Expected.Name-->
						<Parameter>7<!--CheckEntryDescription.Expected.Type-->
						</Parameter>
						<Parameter>true<!--CheckEntryDescription.Expected.Access.ReadInPreOp-->
						</Parameter>
						<Parameter>true<!--CheckEntryDescription.Expected.Access.ReadInSafeOp-->
						</Parameter>
						<Parameter>true<!--CheckEntryDescription.Expected.Access.ReadInOp-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.Expected.Access.WriteInPreOp-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.Expected.Access.WriteInSafeOp-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.Expected.Access.WriteInOp-->
						</Parameter>
						<Parameter>"o"</Parameter>
						<!--CheckEntryDescription.Expected.Category-->
						<Parameter>None<!--CheckEntryDescription.Expected.PdoMapping-->
						</Parameter>
						<Parameter>null<!--CheckEntryDescription.Expected.DefaultData-->
						</Parameter>
						<Parameter>null<!--CheckEntryDescription.Expected.MinData-->
						</Parameter>
						<Parameter>null<!--CheckEntryDescription.Expected.MaxData-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.Expected.Settings-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.Expected.Backup-->
						</Parameter>
						<Parameter>32<!--CheckEntryDescription.Expected.BitSize-->
						</Parameter>
						<Parameter>-1<!--CheckEntryDescription.Expected.BitOffs-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.AllowEnumDataType-->
						</Parameter>
						<OutParameter>CoeComm.bError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>CoeComm.bError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="CoeComm.bResult">false</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CheckSi_8">
					<SetVariable Target="CoeComm.EntryCount">8</SetVariable>
				</TestStep>
				<TestStep>
					<CallTestFunction Name="IsEntryDefined">
						<Parameter>CoeComm.Dict</Parameter>
						<Parameter>CoeComm.Index</Parameter>
						<Parameter>CoeComm.EntryCount</Parameter>
						<OutParameter>CoeComm.TmpBool</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>CoeComm.TmpBool</Value1>
							<Value2>false</Value2>
							<GotoStep>CheckSi_9</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="VerifySi_8">
					<Description Id="19" Param0="CoeComm.Index" Param1="CoeComm.EntryCount" Level="Output">0x{0:x4}.{1} Checking entry description...</Description>
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>CoeComm.Dict<!--CheckEntryDescription.ObjectDictionary-->
						</Parameter>
						<Parameter>offline<!--CheckEntryDescription.DictionaryType-->
						</Parameter>
						<Parameter>CoeComm.Index<!--CheckEntryDescription.Index-->
						</Parameter>
						<Parameter>CoeComm.EntryCount<!--CheckEntryDescription.SubIndex-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.LevelWarning-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.CaseSensitive-->
						</Parameter>
						<Parameter>"Get Cycle Time","Command"</Parameter>
						<!--CheckEntryDescription.Expected.Name-->
						<Parameter>6<!--CheckEntryDescription.Expected.Type-->
						</Parameter>
						<Parameter>-1<!--CheckEntryDescription.Expected.Access.ReadInPreOp-->
						</Parameter>
						<Parameter>-1<!--CheckEntryDescription.Expected.Access.ReadInSafeOp-->
						</Parameter>
						<Parameter>-1<!--CheckEntryDescription.Expected.Access.ReadInOp-->
						</Parameter>
						<Parameter>-1<!--CheckEntryDescription.Expected.Access.WriteInPreOp-->
						</Parameter>
						<Parameter>-1<!--CheckEntryDescription.Expected.Access.WriteInSafeOp-->
						</Parameter>
						<Parameter>-1<!--CheckEntryDescription.Expected.Access.WriteInOp-->
						</Parameter>
						<Parameter>"o"</Parameter>
						<!--CheckEntryDescription.Expected.Category-->
						<Parameter>None<!--CheckEntryDescription.Expected.PdoMapping-->
						</Parameter>
						<Parameter>null<!--CheckEntryDescription.Expected.DefaultData-->
						</Parameter>
						<Parameter>null<!--CheckEntryDescription.Expected.MinData-->
						</Parameter>
						<Parameter>null<!--CheckEntryDescription.Expected.MaxData-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.Expected.Settings-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.Expected.Backup-->
						</Parameter>
						<Parameter>16<!--CheckEntryDescription.Expected.BitSize-->
						</Parameter>
						<Parameter>-1<!--CheckEntryDescription.Expected.BitOffs-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.AllowEnumDataType-->
						</Parameter>
						<OutParameter>CoeComm.bError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>CoeComm.bError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="CoeComm.bResult">false</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CheckSi_9">
					<SetVariable Target="CoeComm.EntryCount">9</SetVariable>
				</TestStep>
				<TestStep>
					<CallTestFunction Name="IsEntryDefined">
						<Parameter>CoeComm.Dict</Parameter>
						<Parameter>CoeComm.Index</Parameter>
						<Parameter>CoeComm.EntryCount</Parameter>
						<OutParameter>CoeComm.TmpBool</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>CoeComm.TmpBool</Value1>
							<Value2>false</Value2>
							<GotoStep>CheckSi_10</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="VerifySi_9">
					<Description Id="20" Param0="CoeComm.Index" Param1="CoeComm.EntryCount" Level="Output">0x{0:x4}.{1} Checking entry description...</Description>
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>CoeComm.Dict<!--CheckEntryDescription.ObjectDictionary-->
						</Parameter>
						<Parameter>offline<!--CheckEntryDescription.DictionaryType-->
						</Parameter>
						<Parameter>CoeComm.Index<!--CheckEntryDescription.Index-->
						</Parameter>
						<Parameter>CoeComm.EntryCount<!--CheckEntryDescription.SubIndex-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.LevelWarning-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.CaseSensitive-->
						</Parameter>
						<Parameter>"Delay Time","Maximum delay time"</Parameter>
						<!--CheckEntryDescription.Expected.Name-->
						<Parameter>7<!--CheckEntryDescription.Expected.Type-->
						</Parameter>
						<Parameter>true<!--CheckEntryDescription.Expected.Access.ReadInPreOp-->
						</Parameter>
						<Parameter>true<!--CheckEntryDescription.Expected.Access.ReadInSafeOp-->
						</Parameter>
						<Parameter>true<!--CheckEntryDescription.Expected.Access.ReadInOp-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.Expected.Access.WriteInPreOp-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.Expected.Access.WriteInSafeOp-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.Expected.Access.WriteInOp-->
						</Parameter>
						<Parameter>"o"</Parameter>
						<!--CheckEntryDescription.Expected.Category-->
						<Parameter>None<!--CheckEntryDescription.Expected.PdoMapping-->
						</Parameter>
						<Parameter>null<!--CheckEntryDescription.Expected.DefaultData-->
						</Parameter>
						<Parameter>null<!--CheckEntryDescription.Expected.MinData-->
						</Parameter>
						<Parameter>null<!--CheckEntryDescription.Expected.MaxData-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.Expected.Settings-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.Expected.Backup-->
						</Parameter>
						<Parameter>32<!--CheckEntryDescription.Expected.BitSize-->
						</Parameter>
						<Parameter>-1<!--CheckEntryDescription.Expected.BitOffs-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.AllowEnumDataType-->
						</Parameter>
						<OutParameter>CoeComm.bError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>CoeComm.bError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="CoeComm.bResult">false</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CheckSi_10">
					<SetVariable Target="CoeComm.EntryCount">10</SetVariable>
				</TestStep>
				<TestStep>
					<CallTestFunction Name="IsEntryDefined">
						<Parameter>CoeComm.Dict</Parameter>
						<Parameter>CoeComm.Index</Parameter>
						<Parameter>CoeComm.EntryCount</Parameter>
						<OutParameter>CoeComm.TmpBool</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>CoeComm.TmpBool</Value1>
							<Value2>false</Value2>
							<GotoStep>CheckSi_11</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="VerifySi_10">
					<Description Id="21" Param0="CoeComm.Index" Param1="CoeComm.EntryCount" Level="Output">0x{0:x4}.{1} Checking entry description...</Description>
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>CoeComm.Dict<!--CheckEntryDescription.ObjectDictionary-->
						</Parameter>
						<Parameter>offline<!--CheckEntryDescription.DictionaryType-->
						</Parameter>
						<Parameter>CoeComm.Index<!--CheckEntryDescription.Index-->
						</Parameter>
						<Parameter>CoeComm.EntryCount<!--CheckEntryDescription.SubIndex-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.LevelWarning-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.CaseSensitive-->
						</Parameter>
						<Parameter>"Sync0 Cycle Time"</Parameter>
						<!--CheckEntryDescription.Expected.Name-->
						<Parameter>7<!--CheckEntryDescription.Expected.Type-->
						</Parameter>
						<Parameter>-1<!--CheckEntryDescription.Expected.Access.ReadInPreOp-->
						</Parameter>
						<Parameter>-1<!--CheckEntryDescription.Expected.Access.ReadInSafeOp-->
						</Parameter>
						<Parameter>-1<!--CheckEntryDescription.Expected.Access.ReadInOp-->
						</Parameter>
						<Parameter>-1<!--CheckEntryDescription.Expected.Access.WriteInPreOp-->
						</Parameter>
						<Parameter>-1<!--CheckEntryDescription.Expected.Access.WriteInSafeOp-->
						</Parameter>
						<Parameter>-1<!--CheckEntryDescription.Expected.Access.WriteInOp-->
						</Parameter>
						<Parameter>"o"</Parameter>
						<!--CheckEntryDescription.Expected.Category-->
						<Parameter>None<!--CheckEntryDescription.Expected.PdoMapping-->
						</Parameter>
						<Parameter>null<!--CheckEntryDescription.Expected.DefaultData-->
						</Parameter>
						<Parameter>null<!--CheckEntryDescription.Expected.MinData-->
						</Parameter>
						<Parameter>null<!--CheckEntryDescription.Expected.MaxData-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.Expected.Settings-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.Expected.Backup-->
						</Parameter>
						<Parameter>32<!--CheckEntryDescription.Expected.BitSize-->
						</Parameter>
						<Parameter>-1<!--CheckEntryDescription.Expected.BitOffs-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.AllowEnumDataType-->
						</Parameter>
						<OutParameter>CoeComm.bError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>CoeComm.bError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="CoeComm.bResult">false</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CheckSi_11">
					<SetVariable Target="CoeComm.EntryCount">11</SetVariable>
				</TestStep>
				<TestStep>
					<CallTestFunction Name="CheckDistributedClocksSupport">
						<OutParameter>CoeComm.DutSupportsDc</OutParameter>
					</CallTestFunction>
				</TestStep>
				<TestStep>
					<CallTestFunction Name="IsEntryDefined">
						<Parameter>CoeComm.Dict</Parameter>
						<Parameter>CoeComm.Index</Parameter>
						<Parameter>CoeComm.EntryCount</Parameter>
						<OutParameter>CoeComm.TmpBool</OutParameter>
					</CallTestFunction>
					<!--DC is not supported : skip Si11-->
					<Compare>
						<Equal>
							<Value1>CoeComm.DutSupportsDc</Value1>
							<Value2>false</Value2>
							<GotoStep>CheckSi_12</GotoStep>
						</Equal>
					</Compare>
					<!--Si 11 is defined and DC is supported : check entry description-->
					<Compare>
						<Equal>
							<Value1>CoeComm.TmpBool AND CoeComm.DutSupportsDc</Value1>
							<Value2>true</Value2>
							<GotoStep>VerifySi_11</GotoStep>
						</Equal>
					</Compare>
					<!--Si 11 is not defined and DC is supported : write warning and skip entry test-->
					<Compare>
						<Equal>
							<Value1>CoeComm.TmpBool</Value1>
							<Value2>false</Value2>
							<WriteLine Id="22" Level="Warning" Param0="CoeComm.Index">0x:{0:X}.11 should be defined because the DuT supports one DC synchonization mode.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>CoeComm.TmpBool</Value1>
							<Value2>false</Value2>
							<GotoStep>CheckSi_12</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="VerifySi_11">
					<Description Id="23" Param0="CoeComm.Index" Param1="CoeComm.EntryCount" Level="Output">0x{0:x4}.{1} Checking entry description...</Description>
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>CoeComm.Dict<!--CheckEntryDescription.ObjectDictionary-->
						</Parameter>
						<Parameter>offline<!--CheckEntryDescription.DictionaryType-->
						</Parameter>
						<Parameter>CoeComm.Index<!--CheckEntryDescription.Index-->
						</Parameter>
						<Parameter>CoeComm.EntryCount<!--CheckEntryDescription.SubIndex-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.LevelWarning-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.CaseSensitive-->
						</Parameter>
						<Parameter>"SM-Event Missed","SM event missed counter"</Parameter>
						<!--CheckEntryDescription.Expected.Name-->
						<Parameter>6<!--CheckEntryDescription.Expected.Type-->
						</Parameter>
						<Parameter>true<!--CheckEntryDescription.Expected.Access.ReadInPreOp-->
						</Parameter>
						<Parameter>true<!--CheckEntryDescription.Expected.Access.ReadInSafeOp-->
						</Parameter>
						<Parameter>true<!--CheckEntryDescription.Expected.Access.ReadInOp-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.Expected.Access.WriteInPreOp-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.Expected.Access.WriteInSafeOp-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.Expected.Access.WriteInOp-->
						</Parameter>
						<Parameter>"o"</Parameter>
						<!--CheckEntryDescription.Expected.Category-->
						<Parameter>None<!--CheckEntryDescription.Expected.PdoMapping-->
						</Parameter>
						<Parameter>null<!--CheckEntryDescription.Expected.DefaultData-->
						</Parameter>
						<Parameter>null<!--CheckEntryDescription.Expected.MinData-->
						</Parameter>
						<Parameter>null<!--CheckEntryDescription.Expected.MaxData-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.Expected.Settings-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.Expected.Backup-->
						</Parameter>
						<Parameter>16<!--CheckEntryDescription.Expected.BitSize-->
						</Parameter>
						<Parameter>-1<!--CheckEntryDescription.Expected.BitOffs-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.AllowEnumDataType-->
						</Parameter>
						<OutParameter>CoeComm.bError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>CoeComm.bError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="CoeComm.bResult">false</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CheckSi_12">
					<SetVariable Target="CoeComm.EntryCount">12</SetVariable>
				</TestStep>
				<TestStep>
					<CallTestFunction Name="CheckDistributedClocksSupport">
						<OutParameter>CoeComm.DutSupportsDc</OutParameter>
					</CallTestFunction>
				</TestStep>
				<TestStep>
					<CallTestFunction Name="IsEntryDefined">
						<Parameter>CoeComm.Dict</Parameter>
						<Parameter>CoeComm.Index</Parameter>
						<Parameter>CoeComm.EntryCount</Parameter>
						<OutParameter>CoeComm.TmpBool</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>CoeComm.TmpBool</Value1>
							<Value2>true</Value2>
							<GotoStep>VerifySi_12</GotoStep>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>CoeComm.DutSupportsDc</Value1>
							<Value2>false</Value2>
							<GotoStep>CheckSi_13</GotoStep>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Level="Error" Param0="CoeComm.Index" Param1="CoeComm.EntryCount">0x{0:x4}.{1} shall be defined if DC is supported.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<SetVariable Target="CoeComm.bResult">false</SetVariable>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>CheckSi_13</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="VerifySi_12">
					<Description Id="24" Param0="CoeComm.Index" Param1="CoeComm.EntryCount" Level="Output">0x{0:x4}.{1} Checking entry description...</Description>
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>CoeComm.Dict<!--CheckEntryDescription.ObjectDictionary-->
						</Parameter>
						<Parameter>offline<!--CheckEntryDescription.DictionaryType-->
						</Parameter>
						<Parameter>CoeComm.Index<!--CheckEntryDescription.Index-->
						</Parameter>
						<Parameter>CoeComm.EntryCount<!--CheckEntryDescription.SubIndex-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.LevelWarning-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.CaseSensitive-->
						</Parameter>
						<Parameter>"Cycle Time Too Small","Cycle exceeded counter"</Parameter>
						<!--CheckEntryDescription.Expected.Name-->
						<Parameter>6<!--CheckEntryDescription.Expected.Type-->
						</Parameter>
						<Parameter>true<!--CheckEntryDescription.Expected.Access.ReadInPreOp-->
						</Parameter>
						<Parameter>true<!--CheckEntryDescription.Expected.Access.ReadInSafeOp-->
						</Parameter>
						<Parameter>true<!--CheckEntryDescription.Expected.Access.ReadInOp-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.Expected.Access.WriteInPreOp-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.Expected.Access.WriteInSafeOp-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.Expected.Access.WriteInOp-->
						</Parameter>
						<Parameter>"o"</Parameter>
						<!--CheckEntryDescription.Expected.Category-->
						<Parameter>None<!--CheckEntryDescription.Expected.PdoMapping-->
						</Parameter>
						<Parameter>null<!--CheckEntryDescription.Expected.DefaultData-->
						</Parameter>
						<Parameter>null<!--CheckEntryDescription.Expected.MinData-->
						</Parameter>
						<Parameter>null<!--CheckEntryDescription.Expected.MaxData-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.Expected.Settings-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.Expected.Backup-->
						</Parameter>
						<Parameter>16<!--CheckEntryDescription.Expected.BitSize-->
						</Parameter>
						<Parameter>-1<!--CheckEntryDescription.Expected.BitOffs-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.AllowEnumDataType-->
						</Parameter>
						<OutParameter>CoeComm.bError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>CoeComm.bError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="CoeComm.bResult">false</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CheckSi_13">
					<SetVariable Target="CoeComm.EntryCount">13</SetVariable>
				</TestStep>
				<TestStep>
					<CallTestFunction Name="CheckDistributedClocksSupport">
						<OutParameter>CoeComm.DutSupportsDc</OutParameter>
					</CallTestFunction>
				</TestStep>
				<TestStep>
					<CallTestFunction Name="IsEntryDefined">
						<Parameter>CoeComm.Dict</Parameter>
						<Parameter>CoeComm.Index</Parameter>
						<Parameter>CoeComm.EntryCount</Parameter>
						<OutParameter>CoeComm.TmpBool</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>CoeComm.TmpBool</Value1>
							<Value2>false</Value2>
							<GotoStep>CheckSi_14</GotoStep>
						</Equal>
					</Compare>
					<!--Si 13 is defined and DC is supported : check entry description-->
					<Compare>
						<Equal>
							<Value1>CoeComm.TmpBool AND CoeComm.DutSupportsDc</Value1>
							<Value2>true</Value2>
							<GotoStep>VerifySi_13</GotoStep>
						</Equal>
					</Compare>
					<!--Si 13 is not defined and DC is supported : write warning and skip entry test-->
					<Compare>
						<Equal>
							<Value1>CoeComm.TmpBool</Value1>
							<Value2>false</Value2>
							<WriteLine Id="38" Level="Warning" Param0="CoeComm.Index">0x:{0:X}.11 should be defined because the DuT supports one DC synchonization mode.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>CoeComm.TmpBool</Value1>
							<Value2>false</Value2>
							<GotoStep>CheckSi_14</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="VerifySi_13">
					<Description Id="25" Param0="CoeComm.Index" Param1="CoeComm.EntryCount" Level="Output">0x{0:x4}.{1} Checking entry description...</Description>
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>CoeComm.Dict<!--CheckEntryDescription.ObjectDictionary-->
						</Parameter>
						<Parameter>offline<!--CheckEntryDescription.DictionaryType-->
						</Parameter>
						<Parameter>CoeComm.Index<!--CheckEntryDescription.Index-->
						</Parameter>
						<Parameter>CoeComm.EntryCount<!--CheckEntryDescription.SubIndex-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.LevelWarning-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.CaseSensitive-->
						</Parameter>
						<Parameter>"Shift Time Too Short","Shift too short counter"</Parameter>
						<!--CheckEntryDescription.Expected.Name-->
						<Parameter>6<!--CheckEntryDescription.Expected.Type-->
						</Parameter>
						<Parameter>true<!--CheckEntryDescription.Expected.Access.ReadInPreOp-->
						</Parameter>
						<Parameter>true<!--CheckEntryDescription.Expected.Access.ReadInSafeOp-->
						</Parameter>
						<Parameter>true<!--CheckEntryDescription.Expected.Access.ReadInOp-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.Expected.Access.WriteInPreOp-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.Expected.Access.WriteInSafeOp-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.Expected.Access.WriteInOp-->
						</Parameter>
						<Parameter>"o"</Parameter>
						<!--CheckEntryDescription.Expected.Category-->
						<Parameter>None<!--CheckEntryDescription.Expected.PdoMapping-->
						</Parameter>
						<Parameter>null<!--CheckEntryDescription.Expected.DefaultData-->
						</Parameter>
						<Parameter>null<!--CheckEntryDescription.Expected.MinData-->
						</Parameter>
						<Parameter>null<!--CheckEntryDescription.Expected.MaxData-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.Expected.Settings-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.Expected.Backup-->
						</Parameter>
						<Parameter>16<!--CheckEntryDescription.Expected.BitSize-->
						</Parameter>
						<Parameter>-1<!--CheckEntryDescription.Expected.BitOffs-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.AllowEnumDataType-->
						</Parameter>
						<OutParameter>CoeComm.bError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>CoeComm.bError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="CoeComm.bResult">false</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CheckSi_14">
					<SetVariable Target="CoeComm.EntryCount">14</SetVariable>
				</TestStep>
				<TestStep>
					<CallTestFunction Name="IsEntryDefined">
						<Parameter>CoeComm.Dict</Parameter>
						<Parameter>CoeComm.Index</Parameter>
						<Parameter>CoeComm.EntryCount</Parameter>
						<OutParameter>CoeComm.TmpBool</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>CoeComm.TmpBool</Value1>
							<Value2>false</Value2>
							<GotoStep>CheckSi_15</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="VerifySi_14">
					<Description Id="26" Param0="CoeComm.Index" Param1="CoeComm.EntryCount" Level="Output">0x{0:x4}.{1} Checking entry description...</Description>
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>CoeComm.Dict<!--CheckEntryDescription.ObjectDictionary-->
						</Parameter>
						<Parameter>offline<!--CheckEntryDescription.DictionaryType-->
						</Parameter>
						<Parameter>CoeComm.Index<!--CheckEntryDescription.Index-->
						</Parameter>
						<Parameter>CoeComm.EntryCount<!--CheckEntryDescription.SubIndex-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.LevelWarning-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.CaseSensitive-->
						</Parameter>
						<Parameter>"RxPDO Toggle Failed"</Parameter>
						<!--CheckEntryDescription.Expected.Name-->
						<Parameter>6<!--CheckEntryDescription.Expected.Type-->
						</Parameter>
						<Parameter>true<!--CheckEntryDescription.Expected.Access.ReadInPreOp-->
						</Parameter>
						<Parameter>true<!--CheckEntryDescription.Expected.Access.ReadInSafeOp-->
						</Parameter>
						<Parameter>true<!--CheckEntryDescription.Expected.Access.ReadInOp-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.Expected.Access.WriteInPreOp-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.Expected.Access.WriteInSafeOp-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.Expected.Access.WriteInOp-->
						</Parameter>
						<Parameter>"o"</Parameter>
						<!--CheckEntryDescription.Expected.Category-->
						<Parameter>None<!--CheckEntryDescription.Expected.PdoMapping-->
						</Parameter>
						<Parameter>null<!--CheckEntryDescription.Expected.DefaultData-->
						</Parameter>
						<Parameter>null<!--CheckEntryDescription.Expected.MinData-->
						</Parameter>
						<Parameter>null<!--CheckEntryDescription.Expected.MaxData-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.Expected.Settings-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.Expected.Backup-->
						</Parameter>
						<Parameter>16<!--CheckEntryDescription.Expected.BitSize-->
						</Parameter>
						<Parameter>-1<!--CheckEntryDescription.Expected.BitOffs-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.AllowEnumDataType-->
						</Parameter>
						<OutParameter>CoeComm.bError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>CoeComm.bError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="CoeComm.bResult">false</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CheckSi_15">
					<SetVariable Target="CoeComm.EntryCount">15</SetVariable>
				</TestStep>
				<TestStep>
					<CallTestFunction Name="IsEntryDefined">
						<Parameter>CoeComm.Dict</Parameter>
						<Parameter>CoeComm.Index</Parameter>
						<Parameter>CoeComm.EntryCount</Parameter>
						<OutParameter>CoeComm.TmpBool</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>CoeComm.TmpBool</Value1>
							<Value2>false</Value2>
							<GotoStep>CheckSi_16</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="VerifySi_15">
					<Description Id="27" Param0="CoeComm.Index" Param1="CoeComm.EntryCount" Level="Output">0x{0:x4}.{1} Checking entry description...</Description>
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>CoeComm.Dict<!--CheckEntryDescription.ObjectDictionary-->
						</Parameter>
						<Parameter>offline<!--CheckEntryDescription.DictionaryType-->
						</Parameter>
						<Parameter>CoeComm.Index<!--CheckEntryDescription.Index-->
						</Parameter>
						<Parameter>CoeComm.EntryCount<!--CheckEntryDescription.SubIndex-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.LevelWarning-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.CaseSensitive-->
						</Parameter>
						<Parameter>"Minimum Cycle Distance"</Parameter>
						<!--CheckEntryDescription.Expected.Name-->
						<Parameter>7<!--CheckEntryDescription.Expected.Type-->
						</Parameter>
						<Parameter>true<!--CheckEntryDescription.Expected.Access.ReadInPreOp-->
						</Parameter>
						<Parameter>true<!--CheckEntryDescription.Expected.Access.ReadInSafeOp-->
						</Parameter>
						<Parameter>true<!--CheckEntryDescription.Expected.Access.ReadInOp-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.Expected.Access.WriteInPreOp-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.Expected.Access.WriteInSafeOp-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.Expected.Access.WriteInOp-->
						</Parameter>
						<Parameter>"o"</Parameter>
						<!--CheckEntryDescription.Expected.Category-->
						<Parameter>None<!--CheckEntryDescription.Expected.PdoMapping-->
						</Parameter>
						<Parameter>null<!--CheckEntryDescription.Expected.DefaultData-->
						</Parameter>
						<Parameter>null<!--CheckEntryDescription.Expected.MinData-->
						</Parameter>
						<Parameter>null<!--CheckEntryDescription.Expected.MaxData-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.Expected.Settings-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.Expected.Backup-->
						</Parameter>
						<Parameter>32<!--CheckEntryDescription.Expected.BitSize-->
						</Parameter>
						<Parameter>-1<!--CheckEntryDescription.Expected.BitOffs-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.AllowEnumDataType-->
						</Parameter>
						<OutParameter>CoeComm.bError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>CoeComm.bError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="CoeComm.bResult">false</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CheckSi_16">
					<SetVariable Target="CoeComm.EntryCount">16</SetVariable>
				</TestStep>
				<TestStep>
					<CallTestFunction Name="IsEntryDefined">
						<Parameter>CoeComm.Dict</Parameter>
						<Parameter>CoeComm.Index</Parameter>
						<Parameter>CoeComm.EntryCount</Parameter>
						<OutParameter>CoeComm.TmpBool</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>CoeComm.TmpBool</Value1>
							<Value2>false</Value2>
							<GotoStep>CheckSi_17</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="VerifySi_16">
					<Description Id="28" Param0="CoeComm.Index" Param1="CoeComm.EntryCount" Level="Output">0x{0:x4}.{1} Checking entry description...</Description>
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>CoeComm.Dict<!--CheckEntryDescription.ObjectDictionary-->
						</Parameter>
						<Parameter>offline<!--CheckEntryDescription.DictionaryType-->
						</Parameter>
						<Parameter>CoeComm.Index<!--CheckEntryDescription.Index-->
						</Parameter>
						<Parameter>CoeComm.EntryCount<!--CheckEntryDescription.SubIndex-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.LevelWarning-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.CaseSensitive-->
						</Parameter>
						<Parameter>"Maximum Cycle Distance"</Parameter>
						<!--CheckEntryDescription.Expected.Name-->
						<Parameter>7<!--CheckEntryDescription.Expected.Type-->
						</Parameter>
						<Parameter>true<!--CheckEntryDescription.Expected.Access.ReadInPreOp-->
						</Parameter>
						<Parameter>true<!--CheckEntryDescription.Expected.Access.ReadInSafeOp-->
						</Parameter>
						<Parameter>true<!--CheckEntryDescription.Expected.Access.ReadInOp-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.Expected.Access.WriteInPreOp-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.Expected.Access.WriteInSafeOp-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.Expected.Access.WriteInOp-->
						</Parameter>
						<Parameter>"o"</Parameter>
						<!--CheckEntryDescription.Expected.Category-->
						<Parameter>None<!--CheckEntryDescription.Expected.PdoMapping-->
						</Parameter>
						<Parameter>null<!--CheckEntryDescription.Expected.DefaultData-->
						</Parameter>
						<Parameter>null<!--CheckEntryDescription.Expected.MinData-->
						</Parameter>
						<Parameter>null<!--CheckEntryDescription.Expected.MaxData-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.Expected.Settings-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.Expected.Backup-->
						</Parameter>
						<Parameter>32<!--CheckEntryDescription.Expected.BitSize-->
						</Parameter>
						<Parameter>-1<!--CheckEntryDescription.Expected.BitOffs-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.AllowEnumDataType-->
						</Parameter>
						<OutParameter>CoeComm.bError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>CoeComm.bError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="CoeComm.bResult">false</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CheckSi_17">
					<SetVariable Target="CoeComm.EntryCount">17</SetVariable>
				</TestStep>
				<TestStep>
					<CallTestFunction Name="IsEntryDefined">
						<Parameter>CoeComm.Dict</Parameter>
						<Parameter>CoeComm.Index</Parameter>
						<Parameter>CoeComm.EntryCount</Parameter>
						<OutParameter>CoeComm.TmpBool</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>CoeComm.TmpBool</Value1>
							<Value2>false</Value2>
							<GotoStep>CheckSi_18</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="VerifySi_17">
					<Description Id="29" Param0="CoeComm.Index" Param1="CoeComm.EntryCount" Level="Output">0x{0:x4}.{1} Checking entry description...</Description>
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>CoeComm.Dict<!--CheckEntryDescription.ObjectDictionary-->
						</Parameter>
						<Parameter>offline<!--CheckEntryDescription.DictionaryType-->
						</Parameter>
						<Parameter>CoeComm.Index<!--CheckEntryDescription.Index-->
						</Parameter>
						<Parameter>CoeComm.EntryCount<!--CheckEntryDescription.SubIndex-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.LevelWarning-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.CaseSensitive-->
						</Parameter>
						<Parameter>"Minimum SM Sync Distance"</Parameter>
						<!--CheckEntryDescription.Expected.Name-->
						<Parameter>7<!--CheckEntryDescription.Expected.Type-->
						</Parameter>
						<Parameter>true<!--CheckEntryDescription.Expected.Access.ReadInPreOp-->
						</Parameter>
						<Parameter>true<!--CheckEntryDescription.Expected.Access.ReadInSafeOp-->
						</Parameter>
						<Parameter>true<!--CheckEntryDescription.Expected.Access.ReadInOp-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.Expected.Access.WriteInPreOp-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.Expected.Access.WriteInSafeOp-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.Expected.Access.WriteInOp-->
						</Parameter>
						<Parameter>"o"</Parameter>
						<!--CheckEntryDescription.Expected.Category-->
						<Parameter>None<!--CheckEntryDescription.Expected.PdoMapping-->
						</Parameter>
						<Parameter>null<!--CheckEntryDescription.Expected.DefaultData-->
						</Parameter>
						<Parameter>null<!--CheckEntryDescription.Expected.MinData-->
						</Parameter>
						<Parameter>null<!--CheckEntryDescription.Expected.MaxData-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.Expected.Settings-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.Expected.Backup-->
						</Parameter>
						<Parameter>32<!--CheckEntryDescription.Expected.BitSize-->
						</Parameter>
						<Parameter>-1<!--CheckEntryDescription.Expected.BitOffs-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.AllowEnumDataType-->
						</Parameter>
						<OutParameter>CoeComm.bError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>CoeComm.bError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="CoeComm.bResult">false</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CheckSi_18">
					<SetVariable Target="CoeComm.EntryCount">18</SetVariable>
				</TestStep>
				<TestStep>
					<CallTestFunction Name="IsEntryDefined">
						<Parameter>CoeComm.Dict</Parameter>
						<Parameter>CoeComm.Index</Parameter>
						<Parameter>CoeComm.EntryCount</Parameter>
						<OutParameter>CoeComm.TmpBool</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>CoeComm.TmpBool</Value1>
							<Value2>false</Value2>
							<GotoStep>CheckSi_19</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="VerifySi_18">
					<Description Id="30" Param0="CoeComm.Index" Param1="CoeComm.EntryCount" Level="Output">0x{0:x4}.{1} Checking entry description...</Description>
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>CoeComm.Dict<!--CheckEntryDescription.ObjectDictionary-->
						</Parameter>
						<Parameter>offline<!--CheckEntryDescription.DictionaryType-->
						</Parameter>
						<Parameter>CoeComm.Index<!--CheckEntryDescription.Index-->
						</Parameter>
						<Parameter>CoeComm.EntryCount<!--CheckEntryDescription.SubIndex-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.LevelWarning-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.CaseSensitive-->
						</Parameter>
						<Parameter>"Maximum SM Sync Distance"</Parameter>
						<!--CheckEntryDescription.Expected.Name-->
						<Parameter>7<!--CheckEntryDescription.Expected.Type-->
						</Parameter>
						<Parameter>true<!--CheckEntryDescription.Expected.Access.ReadInPreOp-->
						</Parameter>
						<Parameter>true<!--CheckEntryDescription.Expected.Access.ReadInSafeOp-->
						</Parameter>
						<Parameter>true<!--CheckEntryDescription.Expected.Access.ReadInOp-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.Expected.Access.WriteInPreOp-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.Expected.Access.WriteInSafeOp-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.Expected.Access.WriteInOp-->
						</Parameter>
						<Parameter>"o"</Parameter>
						<!--CheckEntryDescription.Expected.Category-->
						<Parameter>None<!--CheckEntryDescription.Expected.PdoMapping-->
						</Parameter>
						<Parameter>null<!--CheckEntryDescription.Expected.DefaultData-->
						</Parameter>
						<Parameter>null<!--CheckEntryDescription.Expected.MinData-->
						</Parameter>
						<Parameter>null<!--CheckEntryDescription.Expected.MaxData-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.Expected.Settings-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.Expected.Backup-->
						</Parameter>
						<Parameter>32<!--CheckEntryDescription.Expected.BitSize-->
						</Parameter>
						<Parameter>-1<!--CheckEntryDescription.Expected.BitOffs-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.AllowEnumDataType-->
						</Parameter>
						<OutParameter>CoeComm.bError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>CoeComm.bError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="CoeComm.bResult">false</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CheckSi_19">
					<SetVariable Target="CoeComm.EntryCount">19</SetVariable>
				</TestStep>
				<TestStep>
					<CallTestFunction Name="IsEntryDefined">
						<Parameter>CoeComm.Dict</Parameter>
						<Parameter>CoeComm.Index</Parameter>
						<Parameter>CoeComm.EntryCount</Parameter>
						<OutParameter>CoeComm.TmpBool</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>CoeComm.TmpBool</Value1>
							<Value2>false</Value2>
							<GotoStep>CheckSi_20</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="VerifySi_19">
					<Description Id="31" Param0="CoeComm.Index" Param1="CoeComm.EntryCount" Level="Output">0x{0:x4}.{1} Checking entry description...</Description>
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>CoeComm.Dict<!--CheckEntryDescription.ObjectDictionary-->
						</Parameter>
						<Parameter>offline<!--CheckEntryDescription.DictionaryType-->
						</Parameter>
						<Parameter>CoeComm.Index<!--CheckEntryDescription.Index-->
						</Parameter>
						<Parameter>CoeComm.EntryCount<!--CheckEntryDescription.SubIndex-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.LevelWarning-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.CaseSensitive-->
						</Parameter>
						<Parameter>"Application Cycle Exceed Counter","Application Cycle Exceeded Counter"</Parameter>
						<!--CheckEntryDescription.Expected.Name-->
						<Parameter>6<!--CheckEntryDescription.Expected.Type-->
						</Parameter>
						<Parameter>true<!--CheckEntryDescription.Expected.Access.ReadInPreOp-->
						</Parameter>
						<Parameter>true<!--CheckEntryDescription.Expected.Access.ReadInSafeOp-->
						</Parameter>
						<Parameter>true<!--CheckEntryDescription.Expected.Access.ReadInOp-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.Expected.Access.WriteInPreOp-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.Expected.Access.WriteInSafeOp-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.Expected.Access.WriteInOp-->
						</Parameter>
						<Parameter>"o"</Parameter>
						<!--CheckEntryDescription.Expected.Category-->
						<Parameter>None<!--CheckEntryDescription.Expected.PdoMapping-->
						</Parameter>
						<Parameter>null<!--CheckEntryDescription.Expected.DefaultData-->
						</Parameter>
						<Parameter>null<!--CheckEntryDescription.Expected.MinData-->
						</Parameter>
						<Parameter>null<!--CheckEntryDescription.Expected.MaxData-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.Expected.Settings-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.Expected.Backup-->
						</Parameter>
						<Parameter>16<!--CheckEntryDescription.Expected.BitSize-->
						</Parameter>
						<Parameter>-1<!--CheckEntryDescription.Expected.BitOffs-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.AllowEnumDataType-->
						</Parameter>
						<OutParameter>CoeComm.bError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>CoeComm.bError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="CoeComm.bResult">false</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CheckSi_20">
					<SetVariable Target="CoeComm.EntryCount">20</SetVariable>
				</TestStep>
				<TestStep>
					<CallTestFunction Name="IsEntryDefined">
						<Parameter>CoeComm.Dict</Parameter>
						<Parameter>CoeComm.Index</Parameter>
						<Parameter>CoeComm.EntryCount</Parameter>
						<OutParameter>CoeComm.TmpBool</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>CoeComm.TmpBool</Value1>
							<Value2>false</Value2>
							<GotoStep>CheckSi_ReservedRange</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="VerifySi_20">
					<Description Id="32" Param0="CoeComm.Index" Param1="CoeComm.EntryCount" Level="Output">0x{0:x4}.{1} Checking entry description...</Description>
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>CoeComm.Dict<!--CheckEntryDescription.ObjectDictionary-->
						</Parameter>
						<Parameter>offline<!--CheckEntryDescription.DictionaryType-->
						</Parameter>
						<Parameter>CoeComm.Index<!--CheckEntryDescription.Index-->
						</Parameter>
						<Parameter>CoeComm.EntryCount<!--CheckEntryDescription.SubIndex-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.LevelWarning-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.CaseSensitive-->
						</Parameter>
						<Parameter>"Frame repeat time"</Parameter>
						<!--CheckEntryDescription.Expected.Name-->
						<Parameter>7<!--CheckEntryDescription.Expected.Type-->
						</Parameter>
						<Parameter>-1<!--CheckEntryDescription.Expected.Access.ReadInPreOp-->
						</Parameter>
						<Parameter>true<!--CheckEntryDescription.Expected.Access.ReadInSafeOp-->
						</Parameter>
						<Parameter>true<!--CheckEntryDescription.Expected.Access.ReadInOp-->
						</Parameter>
						<Parameter>-1<!--CheckEntryDescription.Expected.Access.WriteInPreOp-->
						</Parameter>
						<Parameter>-1<!--CheckEntryDescription.Expected.Access.WriteInSafeOp-->
						</Parameter>
						<Parameter>-1<!--CheckEntryDescription.Expected.Access.WriteInOp-->
						</Parameter>
						<Parameter>"o"</Parameter>
						<!--CheckEntryDescription.Expected.Category-->
						<Parameter>None<!--CheckEntryDescription.Expected.PdoMapping-->
						</Parameter>
						<Parameter>null<!--CheckEntryDescription.Expected.DefaultData-->
						</Parameter>
						<Parameter>null<!--CheckEntryDescription.Expected.MinData-->
						</Parameter>
						<Parameter>null<!--CheckEntryDescription.Expected.MaxData-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.Expected.Settings-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.Expected.Backup-->
						</Parameter>
						<Parameter>32<!--CheckEntryDescription.Expected.BitSize-->
						</Parameter>
						<Parameter>-1<!--CheckEntryDescription.Expected.BitOffs-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.AllowEnumDataType-->
						</Parameter>
						<OutParameter>CoeComm.bError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>CoeComm.bError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="CoeComm.bResult">false</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CheckSi_ReservedRange">
					<SetVariable Target="CoeComm.EntryCount">21</SetVariable>
				</TestStep>
				<TestStep Name="ReservedLoopSTART"></TestStep>
				<TestStep>
					<CallTestFunction Name="IsEntryDefined">
						<Parameter>CoeComm.Dict</Parameter>
						<Parameter>CoeComm.Index</Parameter>
						<Parameter>CoeComm.EntryCount</Parameter>
						<OutParameter>CoeComm.TmpBool</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>CoeComm.TmpBool</Value1>
							<Value2>true</Value2>
							<SetVariable Target="CoeComm.bResult">false</SetVariable>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>CoeComm.TmpBool</Value1>
							<Value2>true</Value2>
							<WriteLine Id="33" Level="Error" Param0="CoeComm.Index" Param1="CoeComm.EntryCount">0x{0:x4}.{1} shall not be defined (reserved entry)</WriteLine>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="ReservedLoopEND">
					<SetVariable Target="CoeComm.EntryCount">CoeComm.EntryCount + 1</SetVariable>
					<Compare>
						<Lower>
							<Value1>CoeComm.EntryCount</Value1>
							<Value2>32</Value2>
							<GotoStep>ReservedLoopSTART</GotoStep>
						</Lower>
					</Compare>
				</TestStep>
				<TestStep Name="CheckSi_32">
					<SetVariable Target="CoeComm.EntryCount">32</SetVariable>
				</TestStep>
				<TestStep>
					<CallTestFunction Name="IsEntryDefined">
						<Parameter>CoeComm.Dict</Parameter>
						<Parameter>CoeComm.Index</Parameter>
						<Parameter>CoeComm.EntryCount</Parameter>
						<OutParameter>CoeComm.TmpBool</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>CoeComm.TmpBool</Value1>
							<Value2>false</Value2>
							<GotoStep>ObjLoopEND</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="VerifySi_32">
					<Description Id="34" Param0="CoeComm.Index" Param1="CoeComm.EntryCount" Level="Output">0x{0:x4}.{1} Checking entry description...</Description>
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>CoeComm.Dict<!--CheckEntryDescription.ObjectDictionary-->
						</Parameter>
						<Parameter>offline<!--CheckEntryDescription.DictionaryType-->
						</Parameter>
						<Parameter>CoeComm.Index<!--CheckEntryDescription.Index-->
						</Parameter>
						<Parameter>CoeComm.EntryCount<!--CheckEntryDescription.SubIndex-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.LevelWarning-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.CaseSensitive-->
						</Parameter>
						<Parameter>"Sync Error"</Parameter>
						<!--CheckEntryDescription.Expected.Name-->
						<Parameter>1<!--CheckEntryDescription.Expected.Type-->
						</Parameter>
						<Parameter>true<!--CheckEntryDescription.Expected.Access.ReadInPreOp-->
						</Parameter>
						<Parameter>true<!--CheckEntryDescription.Expected.Access.ReadInSafeOp-->
						</Parameter>
						<Parameter>true<!--CheckEntryDescription.Expected.Access.ReadInOp-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.Expected.Access.WriteInPreOp-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.Expected.Access.WriteInSafeOp-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.Expected.Access.WriteInOp-->
						</Parameter>
						<Parameter>EmptyString<!--CheckEntryDescription.Expected.Category-->
						</Parameter>
						<Parameter>null<!--CheckEntryDescription.Expected.PdoMapping-->
						</Parameter>
						<Parameter>null<!--CheckEntryDescription.Expected.DefaultData-->
						</Parameter>
						<Parameter>null<!--CheckEntryDescription.Expected.MinData-->
						</Parameter>
						<Parameter>null<!--CheckEntryDescription.Expected.MaxData-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.Expected.Settings-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.Expected.Backup-->
						</Parameter>
						<Parameter>1<!--CheckEntryDescription.Expected.BitSize-->
						</Parameter>
						<Parameter>-1<!--CheckEntryDescription.Expected.BitOffs-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.AllowEnumDataType-->
						</Parameter>
						<OutParameter>CoeComm.bError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>CoeComm.bError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="CoeComm.bResult">false</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="ObjLoopEND">
					<SetVariable Target="CoeComm.Index">CoeComm.Index + 1</SetVariable>
					<Compare>
						<LowerOrEqual>
							<Value1>CoeComm.Index</Value1>
							<Value2>#x1C4F</Value2>
							<GotoStep>ObjLoopSTART</GotoStep>
						</LowerOrEqual>
					</Compare>
				</TestStep>
				<TestStep Name="SetTestState">
					<Compare>
						<Equal>
							<Value1>CoeComm.bTestExecuted</Value1>
							<Value2>false</Value2>
							<SkipCase Id="35" Param0="CoeComm.TmpName">No '{0}' (0x1C30 to 0x1C4F) is defined.</SkipCase>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>CoeComm.bResult</Value1>
							<Value2>true</Value2>
							<ReturnSuccess Id="36" Param0="CoeComm.TmpName">{0} (0x1C30 to 0x1C4F) : the object structure is valid.</ReturnSuccess>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>CoeComm.bResult</Value1>
							<Value2>false</Value2>
							<RaiseError Id="37"></RaiseError>
						</Equal>
					</Compare>
				</TestStep>
			</TestCase>
		</TestGroup>
		<TestGroup Name="CoE Device Object Area | offline" GroupId="4">
			<Comment>Checks the objects of the CoE device object area (0xf000-0xffff)</Comment>
			<TestCase Name="Device Command (0xFB00 .. 0xFBFF)" CaseId="10">
				<?MAX_OUTPUT_ID 14?>
				<Description>
					<Purpose>The test case ensures the correct object structure of the objects 0xFB00 - 0xFBFF (Device Command)</Purpose>
					<PreCondition>Device supports Mailbox communication via CoE protocol
The DuT provides an offline object dictionary
The DuT supports the 5001 profile</PreCondition>
					<Action> Check :
	(Name)
	BitSize
	DataType
	Rx/Tx mappable
	Default Data
	MinData
	Flags</Action>
					<PostCondition>In case that the optional objects 0xFB00 to 0xFBFF is defined the object structure shall be as follows:
Index: 0xFB00 - 0xFBFF
Code: 'Record'
Subindex 000:
	Required: 'm'
	Name: 'SubIndex 000'
	Data type: 'UINT8'
	Flags: '0x7'
	Bitsize: '8'
Subindex 001 (Command ):
	Required: 'm'
	Data type: 'OCTET_STRING'
	Flags: '0x7'
	Bit size: '8'
Subindex 002 (Status):
	Required: 'm'
	Data type: 'UNSIGNED8'
	Flags: '0x7'
	Bit size: '8'
Subindex 003 (Response):
	Required: 'm'
	Data type: 'OCTET_STRING'
	Flags: '0x7'
	Bit size: '8'</PostCondition>
					<References>
						<Reference Chapter="19.2.2.2 Error Setting" Specification="ETG.1020"></Reference>
					</References>
					<Mandatory>true</Mandatory>
				</Description>
				<TestStep Name="CheckMbxCoeSupport">
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Mailbox</Value1>
							<Value2>false</Value2>
							<SkipCase Id="0">Device does not support mailbox communication</SkipCase>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Mailbox.CoE</Value1>
							<Value2>false</Value2>
							<SkipCase Id="1">Device does not support CoE</SkipCase>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Dictionary</Value1>
							<Value2>false</Value2>
							<SkipCase Id="2">Device does not provide an offline dictionary</SkipCase>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="InitSlave">
					<CallTestFunction Name="Reset"></CallTestFunction>
				</TestStep>
				<TestStep Name="RunToSafeOP">
					<CallTestFunction Name="GetSafeOpOpTimeout">
						<OutParameter>CoeComm.PsTimeout</OutParameter>
					</CallTestFunction>
				</TestStep>
				<TestStep>
					<RunToState Timeout="CoeComm.PsTimeout">
						<State>SAFEOP</State>
					</RunToState>
				</TestStep>
				<TestStep Name="SetDefaultMandatoryValue">
					<SetVariable Target="CoeComm.IsMandatroy">false</SetVariable>
				</TestStep>
				<TestStep Name="InitTestRunIndication">
					<SetVariable Target="CoeComm.bTestExecuted">false</SetVariable>
				</TestStep>
				<TestStep Name="InitResult">
					<SetVariable Target="CoeComm.bResult">true</SetVariable>
				</TestStep>
				<TestStep Name="InitObjName">
					<SetVariable Target="CoeComm.TmpName">Device Command</SetVariable>
				</TestStep>
				<TestStep Name="InitIndex">
					<SetVariable Target="CoeComm.Index">#xFBFF</SetVariable>
				</TestStep>
				<TestStep Name="GetOD">
					<Description Id="3">Getting offline dictionary from slave...</Description>
					<GetObjectDictionary Target="CoeComm.Dict">
						<DictionaryType>Offline</DictionaryType>
					</GetObjectDictionary>
					<RaiseErrorOnFailure Id="4">Failed to get offline dictionary.</RaiseErrorOnFailure>
				</TestStep>
				<TestStep Name="ObjLoopSTART"></TestStep>
				<TestStep Name="HandleDisabledObj">
					<CallTestFunction Name="IsObjectDefined">
						<Parameter>CoeComm.Dict</Parameter>
						<Parameter>CoeComm.Index</Parameter>
						<OutParameter>CoeComm.TmpBool</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>CoeComm.TmpBool</Value1>
							<Value2>false</Value2>
							<GotoStep>ObjLoopEND</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="StartTest">
					<SetVariable Target="CoeComm.bTestExecuted">true</SetVariable>
				</TestStep>
				<TestStep Name="VerifyObjDescr">
					<Description Id="5" Param0="CoeComm.Index" Level="Output">0x{0:x4} Checking object description...</Description>
					<CallTestFunction Name="CheckObjectDescription">
						<Parameter>CoeComm.Dict</Parameter>
						<Parameter>offline</Parameter>
						<Parameter>CoeComm.Index<!--VerifyObjectDescription.Index-->
						</Parameter>
						<Parameter>false<!--VerifyObjectDescription.LevelWarning-->
						</Parameter>
						<Parameter>false</Parameter>
						<Parameter>null<!--VerifyObjectDescription.Expected.Names-->
						</Parameter>
						<Parameter>#x25<!--VerifyObjectDescription.Expected.Type-->
						</Parameter>
						<Parameter>9<!--VerifyObjectDescription.Expected.ObjectCode-->
						</Parameter>
						<Parameter>-1<!--VerifyObjectDescription.Expected.BitSize-->
						</Parameter>
						<OutParameter>CoeComm.bError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>CoeComm.bError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="CoeComm.bResult">false</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="VerifySi0Descr">
					<Description Id="6" Param0="CoeComm.Index" Level="Output">0x{0:x4}.0 Checking entry description...</Description>
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>CoeComm.Dict<!--CheckEntryDescription.ObjectDictionary-->
						</Parameter>
						<Parameter>offline<!--CheckEntryDescription.DictionaryType-->
						</Parameter>
						<Parameter>CoeComm.Index<!--CheckEntryDescription.Index-->
						</Parameter>
						<Parameter>0<!--CheckEntryDescription.SubIndex-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.LevelWarning-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.CaseSensitive-->
						</Parameter>
						<Parameter>EmptyString<!--CheckEntryDescription.Expected.Name-->
						</Parameter>
						<Parameter>5<!--CheckEntryDescription.Expected.Type-->
						</Parameter>
						<Parameter>true<!--CheckEntryDescription.Expected.Access.ReadInPreOp-->
						</Parameter>
						<Parameter>true<!--CheckEntryDescription.Expected.Access.ReadInSafeOp-->
						</Parameter>
						<Parameter>true<!--CheckEntryDescription.Expected.Access.ReadInOp-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.Expected.Access.WriteInPreOp-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.Expected.Access.WriteInSafeOp-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.Expected.Access.WriteInOp-->
						</Parameter>
						<Parameter>EmptyString<!--CheckEntryDescription.Expected.Category-->
						</Parameter>
						<Parameter>None<!--CheckEntryDescription.Expected.PdoMapping-->
						</Parameter>
						<Parameter>null<!--CheckEntryDescription.Expected.DefaultData-->
						</Parameter>
						<Parameter>null<!--CheckEntryDescription.Expected.MinData-->
						</Parameter>
						<Parameter>null<!--CheckEntryDescription.Expected.MaxData-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.Expected.Settings-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.Expected.Backup-->
						</Parameter>
						<Parameter>8<!--CheckEntryDescription.Expected.BitSize-->
						</Parameter>
						<Parameter>0<!--CheckEntryDescription.Expected.BitOffs-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.AllowEnumDataType-->
						</Parameter>
						<OutParameter>CoeComm.bError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>CoeComm.bError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="CoeComm.bResult">false</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="VerifySi1Descr">
					<Description Id="7" Param0="CoeComm.Index" Level="Output">0x{0:x4}.1 Checking entry description...</Description>
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>CoeComm.Dict<!--CheckEntryDescription.ObjectDictionary-->
						</Parameter>
						<Parameter>offline<!--CheckEntryDescription.DictionaryType-->
						</Parameter>
						<Parameter>CoeComm.Index<!--CheckEntryDescription.Index-->
						</Parameter>
						<Parameter>1<!--CheckEntryDescription.SubIndex-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.LevelWarning-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.CaseSensitive-->
						</Parameter>
						<Parameter>"Command"</Parameter>
						<!--CheckEntryDescription.Expected.Name-->
						<Parameter>10<!--CheckEntryDescription.Expected.Type-->
						</Parameter>
						<Parameter>true<!--CheckEntryDescription.Expected.Access.ReadInPreOp-->
						</Parameter>
						<Parameter>true<!--CheckEntryDescription.Expected.Access.ReadInSafeOp-->
						</Parameter>
						<Parameter>true<!--CheckEntryDescription.Expected.Access.ReadInOp-->
						</Parameter>
						<Parameter>true<!--CheckEntryDescription.Expected.Access.WriteInPreOp-->
						</Parameter>
						<Parameter>true<!--CheckEntryDescription.Expected.Access.WriteInSafeOp-->
						</Parameter>
						<Parameter>true<!--CheckEntryDescription.Expected.Access.WriteInOp-->
						</Parameter>
						<Parameter>EmptyString<!--CheckEntryDescription.Expected.Category-->
						</Parameter>
						<Parameter>None<!--CheckEntryDescription.Expected.PdoMapping-->
						</Parameter>
						<Parameter>null<!--CheckEntryDescription.Expected.DefaultData-->
						</Parameter>
						<Parameter>null<!--CheckEntryDescription.Expected.MinData-->
						</Parameter>
						<Parameter>null<!--CheckEntryDescription.Expected.MaxData-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.Expected.Settings-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.Expected.Backup-->
						</Parameter>
						<Parameter>-1<!--CheckEntryDescription.Expected.BitSize-->
						</Parameter>
						<Parameter>16<!--CheckEntryDescription.Expected.BitOffs-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.AllowEnumDataType-->
						</Parameter>
						<OutParameter>CoeComm.bError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>CoeComm.bError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="CoeComm.bResult">false</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="VerifySi2Descr">
					<Description Id="8" Param0="CoeComm.Index" Level="Output">0x{0:x4}.2 Checking entry description...</Description>
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>CoeComm.Dict<!--CheckEntryDescription.ObjectDictionary-->
						</Parameter>
						<Parameter>offline<!--CheckEntryDescription.DictionaryType-->
						</Parameter>
						<Parameter>CoeComm.Index<!--CheckEntryDescription.Index-->
						</Parameter>
						<Parameter>2<!--CheckEntryDescription.SubIndex-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.LevelWarning-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.CaseSensitive-->
						</Parameter>
						<Parameter>"Status"</Parameter>
						<!--CheckEntryDescription.Expected.Name-->
						<Parameter>5<!--CheckEntryDescription.Expected.Type-->
						</Parameter>
						<Parameter>true<!--CheckEntryDescription.Expected.Access.ReadInPreOp-->
						</Parameter>
						<Parameter>true<!--CheckEntryDescription.Expected.Access.ReadInSafeOp-->
						</Parameter>
						<Parameter>true<!--CheckEntryDescription.Expected.Access.ReadInOp-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.Expected.Access.WriteInPreOp-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.Expected.Access.WriteInSafeOp-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.Expected.Access.WriteInOp-->
						</Parameter>
						<Parameter>EmptyString<!--CheckEntryDescription.Expected.Category-->
						</Parameter>
						<Parameter>None<!--CheckEntryDescription.Expected.PdoMapping-->
						</Parameter>
						<Parameter>null<!--CheckEntryDescription.Expected.DefaultData-->
						</Parameter>
						<Parameter>null<!--CheckEntryDescription.Expected.MinData-->
						</Parameter>
						<Parameter>null<!--CheckEntryDescription.Expected.MaxData-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.Expected.Settings-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.Expected.Backup-->
						</Parameter>
						<Parameter>8<!--CheckEntryDescription.Expected.BitSize-->
						</Parameter>
						<Parameter>-1<!--CheckEntryDescription.Expected.BitOffs-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.AllowEnumDataType-->
						</Parameter>
						<OutParameter>CoeComm.bError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>CoeComm.bError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="CoeComm.bResult">false</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="VerifySi3Descr">
					<Description Id="9" Param0="CoeComm.Index" Level="Output">0x{0:x4}.3 Checking entry description...</Description>
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>CoeComm.Dict<!--CheckEntryDescription.ObjectDictionary-->
						</Parameter>
						<Parameter>offline<!--CheckEntryDescription.DictionaryType-->
						</Parameter>
						<Parameter>CoeComm.Index<!--CheckEntryDescription.Index-->
						</Parameter>
						<Parameter>3<!--CheckEntryDescription.SubIndex-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.LevelWarning-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.CaseSensitive-->
						</Parameter>
						<Parameter>"Response"</Parameter>
						<!--CheckEntryDescription.Expected.Name-->
						<Parameter>10<!--CheckEntryDescription.Expected.Type-->
						</Parameter>
						<Parameter>true<!--CheckEntryDescription.Expected.Access.ReadInPreOp-->
						</Parameter>
						<Parameter>true<!--CheckEntryDescription.Expected.Access.ReadInSafeOp-->
						</Parameter>
						<Parameter>true<!--CheckEntryDescription.Expected.Access.ReadInOp-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.Expected.Access.WriteInPreOp-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.Expected.Access.WriteInSafeOp-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.Expected.Access.WriteInOp-->
						</Parameter>
						<Parameter>EmptyString<!--CheckEntryDescription.Expected.Category-->
						</Parameter>
						<Parameter>None<!--CheckEntryDescription.Expected.PdoMapping-->
						</Parameter>
						<Parameter>null<!--CheckEntryDescription.Expected.DefaultData-->
						</Parameter>
						<Parameter>null<!--CheckEntryDescription.Expected.MinData-->
						</Parameter>
						<Parameter>null<!--CheckEntryDescription.Expected.MaxData-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.Expected.Settings-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.Expected.Backup-->
						</Parameter>
						<Parameter>-1<!--CheckEntryDescription.Expected.BitSize-->
						</Parameter>
						<Parameter>-1<!--CheckEntryDescription.Expected.BitOffs-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.AllowEnumDataType-->
						</Parameter>
						<OutParameter>CoeComm.bError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>CoeComm.bError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="CoeComm.bResult">false</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="WriteSuccess">
					<Compare>
						<Equal>
							<Value1>CoeComm.bResult</Value1>
							<Value2>true</Value2>
							<ReturnSuccess Id="10" Param0="CoeComm.Index" Param1="CoeComm.TmpName">{1} (0x{0:x4}) : offline object structure is valid.</ReturnSuccess>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>CoeComm.bResult</Value1>
							<Value2>false</Value2>
							<RaiseError Id="11"></RaiseError>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="ObjLoopEND">
					<SetVariable Target="CoeComm.Index">CoeComm.Index + 1</SetVariable>
					<Compare>
						<LowerOrEqual>
							<Value1>CoeComm.Index</Value1>
							<Value2>#xFBFF</Value2>
							<GotoStep>ObjLoopSTART</GotoStep>
						</LowerOrEqual>
					</Compare>
				</TestStep>
				<TestStep Name="SetTestState">
					<Compare>
						<Equal>
							<Value1>CoeComm.bTestExecuted</Value1>
							<Value2>false</Value2>
							<SkipCase Id="12" Param0="CoeComm.TmpName">No '{0}' (0xFB00 to 0xFBFF) is defined.</SkipCase>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>CoeComm.bResult</Value1>
							<Value2>true</Value2>
							<ReturnSuccess Id="13" Param0="CoeComm.TmpName">{0} (0xFB00 to 0xFBFF) : the object structure is valid.</ReturnSuccess>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>CoeComm.bResult</Value1>
							<Value2>false</Value2>
							<RaiseError Id="14"></RaiseError>
						</Equal>
					</Compare>
				</TestStep>
			</TestCase>
		</TestGroup>
		<TestGroup Name="CoE Communication Area | online" GroupId="5">
			<Comment>Checks the objects of the CoE communication area (0x1000-0x1fff)</Comment>
			<TestCase Name="Device Type Object (0x1000)" CaseId="1">
				<?MAX_OUTPUT_ID 10?>
				<Description>
					<Purpose>The online dictionary shall contain the mandatory Device Type Object (index 0x1000). The test case ensures the correct object structure and naming.</Purpose>
					<PreCondition>Device supports Mailbox communication via CoE protocol
ESI provides a online object dictionary</PreCondition>
					<Action>Check the object structure:
1. Name
2. Data Type
3. Object Code
4. Access
5. Pdo mapping
6. Bit Size</Action>
					<PostCondition>The online dictionary shall contain the object
The structure shall be as described in ETG.1000.6 5.6.7.4.1 Device Type.
1. Warning if object name is not 'Device Type'
2. Error if data type is not 'USINT32'
3. Error if object code is not 'VAR'
4. Error if access is not 'Read only'
5. Error if Pdo mapping is defined
6. Error if BitSize is not 32</PostCondition>
					<References>
						<Reference Chapter="5.6.7.4.1 Device Type" Specification="ETG.1000.6 "></Reference>
					</References>
					<Mandatory>true</Mandatory>
				</Description>
				<TestStep>
					<CallTestFunction Name="Reset"></CallTestFunction>
				</TestStep>
				<TestStep Name="CheckMbxCoeSupport">
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Mailbox</Value1>
							<Value2>false</Value2>
							<SkipCase Id="0">Device does not support mailbox communication</SkipCase>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Mailbox.CoE</Value1>
							<Value2>false</Value2>
							<SkipCase Id="1">Device does not support CoE</SkipCase>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Mailbox.CoE.SdoInfo</Value1>
							<Value2>false</Value2>
							<SkipCase Id="2">Device does not support SdoInfo</SkipCase>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="SetDefaultMandatoryValue">
					<SetVariable Target="CoeComm.IsMandatroy">true</SetVariable>
				</TestStep>
				<TestStep Name="InitResult">
					<SetVariable Target="CoeComm.bResult">true</SetVariable>
				</TestStep>
				<TestStep Name="InitIndex">
					<SetVariable Target="CoeComm.Index">#x1000</SetVariable>
				</TestStep>
				<TestStep Name="InitObjName">
					<SetVariable Target="CoeComm.TmpName">Device Type</SetVariable>
				</TestStep>
				<TestStep>
					<InitArray TargetArray="CoeComm.TmpNames" Length="1"></InitArray>
				</TestStep>
				<TestStep>
					<SetArrayItem TargetArray="CoeComm.TmpNames" Index="0">CoeComm.TmpName</SetArrayItem>
				</TestStep>
				<TestStep Name="CallInitMailbox">
					<CallFunction>SetStateMachTimeouts</CallFunction>
				</TestStep>
				<TestStep Name="GoToPreOp">
					<RunToState Timeout="preOPTimeout">
						<State>PREOP</State>
					</RunToState>
					<RaiseErrorOnFailure Id="3">Failed to go to PreOP!</RaiseErrorOnFailure>
				</TestStep>
				<TestStep Name="GetOD">
					<Description Id="4">Getting online dictionary from assigned ESI...</Description>
					<GetObjectDictionary Target="CoeComm.Dict">
						<DictionaryType>Online</DictionaryType>
					</GetObjectDictionary>
					<RaiseErrorOnFailure Id="5">Failed to get online dictionary.</RaiseErrorOnFailure>
				</TestStep>
				<TestStep Name="SkipCheckObjDefinedIfMandatory">
					<!--In case of a not defined object the function Check Object Description will return an error-->
					<Compare>
						<Equal>
							<Value1>CoeComm.IsMandatroy</Value1>
							<Value2>true</Value2>
							<GotoStep>VerifyObjDescr</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CheckIfObjIsDefined">
					<CallTestFunction Name="IsObjectDefined">
						<Parameter>CoeComm.Dict</Parameter>
						<Parameter>CoeComm.Index</Parameter>
						<OutParameter>CoeComm.TmpBool</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>CoeComm.TmpBool</Value1>
							<Value2>false</Value2>
							<SkipCase Id="6" Param0="CoeComm.Index" Param1="CoeComm.TmpName">The object '{1}' 0x{0:x4} is not defined.</SkipCase>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="VerifyObjDescr">
					<Description Id="7" Param0="CoeComm.Index" Level="Output">0x{0:x4} Checking object description...</Description>
					<CallTestFunction Name="CheckObjectDescription">
						<Parameter>CoeComm.Dict</Parameter>
						<Parameter>online</Parameter>
						<Parameter>CoeComm.Index<!--VerifyObjectDescription.Index-->
						</Parameter>
						<Parameter>false<!--VerifyObjectDescription.LevelWarning-->
						</Parameter>
						<Parameter>false</Parameter>
						<Parameter>CoeComm.TmpNames<!--VerifyObjectDescription.Expected.Names-->
						</Parameter>
						<Parameter>7<!--VerifyObjectDescription.Expected.Type-->
						</Parameter>
						<Parameter>7<!--VerifyObjectDescription.Expected.ObjectCode-->
						</Parameter>
						<Parameter>32<!--VerifyObjectDescription.Expected.BitSize-->
						</Parameter>
						<OutParameter>CoeComm.bError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>CoeComm.bError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="CoeComm.bResult">false</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="VerifySi0Descr">
					<Description Id="8" Param0="CoeComm.Index" Level="Output">0x{0:x4}.0 Checking entry description...</Description>
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>CoeComm.Dict<!--CheckEntryDescription.ObjectDictionary-->
						</Parameter>
						<Parameter>online<!--CheckEntryDescription.DictionaryType-->
						</Parameter>
						<Parameter>CoeComm.Index<!--CheckEntryDescription.Index-->
						</Parameter>
						<Parameter>0<!--CheckEntryDescription.SubIndex-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.LevelWarning-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.CaseSensitive-->
						</Parameter>
						<Parameter>EmptyString<!--CheckEntryDescription.Expected.Name-->
						</Parameter>
						<Parameter>7<!--CheckEntryDescription.Expected.Type-->
						</Parameter>
						<Parameter>true<!--CheckEntryDescription.Expected.Access.ReadInPreOp-->
						</Parameter>
						<Parameter>true<!--CheckEntryDescription.Expected.Access.ReadInSafeOp-->
						</Parameter>
						<Parameter>true<!--CheckEntryDescription.Expected.Access.ReadInOp-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.Expected.Access.WriteInPreOp-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.Expected.Access.WriteInSafeOp-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.Expected.Access.WriteInOp-->
						</Parameter>
						<Parameter>EmptyString<!--CheckEntryDescription.Expected.Category-->
						</Parameter>
						<Parameter>None<!--CheckEntryDescription.Expected.PdoMapping-->
						</Parameter>
						<Parameter>null<!--CheckEntryDescription.Expected.DefaultData-->
						</Parameter>
						<Parameter>null<!--CheckEntryDescription.Expected.MinData-->
						</Parameter>
						<Parameter>null<!--CheckEntryDescription.Expected.MaxData-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.Expected.Settings-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.Expected.Backup-->
						</Parameter>
						<Parameter>32<!--CheckEntryDescription.Expected.BitSize-->
						</Parameter>
						<Parameter>0<!--CheckEntryDescription.Expected.BitOffs-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.AllowEnumDataType-->
						</Parameter>
						<OutParameter>CoeComm.bError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>CoeComm.bError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="CoeComm.bResult">false</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="WriteSuccess">
					<Compare>
						<Equal>
							<Value1>CoeComm.bResult</Value1>
							<Value2>true</Value2>
							<ReturnSuccess Id="9" Param0="CoeComm.Index" Param1="CoeComm.TmpName">{1} (0x{0:x4}) : the object structure is valid.</ReturnSuccess>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>CoeComm.bResult</Value1>
							<Value2>false</Value2>
							<RaiseError Id="10"></RaiseError>
						</Equal>
					</Compare>
				</TestStep>
			</TestCase>
			<TestCase Name="Error Register Object (0x1001)" CaseId="2">
				<?MAX_OUTPUT_ID 10?>
				<Description>
					<Purpose>Check the optional Error Register object (0x1001). The test case ensures the correct object structure and naming.</Purpose>
					<PreCondition>Device supports Mailbox communication via CoE protocol
ESI provides a online object dictionary</PreCondition>
					<Action>Check the object structure:
1. Name
2. Data Type
3. Object Code
4. Access
5. Bit Size</Action>
					<PostCondition>Skip if the object is not defined.
The structure shall be as described in ETG.1000.6 5.6.7.4.2 Error Register. If at least one value is not equal to the expected value the test case returns a error list containing all errors.
1. Warning if object name is not 'Error Register'
2. Error if data type is not 'USINT8'
3. Error if object code is not 'VAR'
4. Error if access is not 'Read only'
5. Error if BitSize is not 8</PostCondition>
					<References>
						<Reference Chapter="5.6.7.4.2 Error Register" Specification="ETG.1000.6 "></Reference>
					</References>
					<Mandatory>true</Mandatory>
				</Description>
				<TestStep>
					<CallTestFunction Name="Reset"></CallTestFunction>
				</TestStep>
				<TestStep Name="CheckMbxCoeSupport">
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Mailbox</Value1>
							<Value2>false</Value2>
							<SkipCase Id="0">Device does not support mailbox communication</SkipCase>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Mailbox.CoE</Value1>
							<Value2>false</Value2>
							<SkipCase Id="1">Device does not support CoE</SkipCase>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Mailbox.CoE.SdoInfo</Value1>
							<Value2>false</Value2>
							<SkipCase Id="2">Device does not support SdoInfo</SkipCase>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="SetDefaultMandatoryValue">
					<SetVariable Target="CoeComm.IsMandatroy">false</SetVariable>
				</TestStep>
				<TestStep Name="InitResult">
					<SetVariable Target="CoeComm.bResult">true</SetVariable>
				</TestStep>
				<TestStep Name="InitIndex">
					<SetVariable Target="CoeComm.Index">#x1001</SetVariable>
				</TestStep>
				<TestStep Name="InitObjName">
					<SetVariable Target="CoeComm.TmpName">Error Register</SetVariable>
				</TestStep>
				<TestStep>
					<InitArray TargetArray="CoeComm.TmpNames" Length="1"></InitArray>
				</TestStep>
				<TestStep>
					<SetArrayItem TargetArray="CoeComm.TmpNames" Index="0">CoeComm.TmpName</SetArrayItem>
				</TestStep>
				<TestStep Name="CallInitMailbox">
					<CallFunction>SetStateMachTimeouts</CallFunction>
				</TestStep>
				<TestStep Name="GoToPreOp">
					<RunToState Timeout="preOPTimeout">
						<State>PREOP</State>
					</RunToState>
					<RaiseErrorOnFailure Id="3">Failed to go to PreOP!</RaiseErrorOnFailure>
				</TestStep>
				<TestStep Name="GetOD">
					<Description Id="4">Getting online dictionary from assigned ESI...</Description>
					<GetObjectDictionary Target="CoeComm.Dict">
						<DictionaryType>Online</DictionaryType>
					</GetObjectDictionary>
					<RaiseErrorOnFailure Id="5">Failed to get online dictionary.</RaiseErrorOnFailure>
				</TestStep>
				<TestStep Name="SkipCheckObjDefinedIfMandatory">
					<!--In case of a not defined object the function Check Object Description will return an error-->
					<Compare>
						<Equal>
							<Value1>CoeComm.IsMandatroy</Value1>
							<Value2>true</Value2>
							<GotoStep>VerifyObjDescr</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CheckIfObjIsDefined">
					<CallTestFunction Name="IsObjectDefined">
						<Parameter>CoeComm.Dict</Parameter>
						<Parameter>CoeComm.Index</Parameter>
						<OutParameter>CoeComm.TmpBool</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>CoeComm.TmpBool</Value1>
							<Value2>false</Value2>
							<SkipCase Id="6" Param0="CoeComm.Index" Param1="CoeComm.TmpName">The object '{1}' 0x{0:x4} is not defined.</SkipCase>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="VerifyObjDescr">
					<Description Id="7" Param0="CoeComm.Index" Level="Output">0x{0:x4} Checking object description...</Description>
					<CallTestFunction Name="CheckObjectDescription">
						<Parameter>CoeComm.Dict</Parameter>
						<Parameter>online</Parameter>
						<Parameter>CoeComm.Index<!--VerifyObjectDescription.Index-->
						</Parameter>
						<Parameter>false<!--VerifyObjectDescription.LevelWarning-->
						</Parameter>
						<Parameter>false</Parameter>
						<Parameter>CoeComm.TmpNames<!--VerifyObjectDescription.Expected.Names-->
						</Parameter>
						<Parameter>5<!--VerifyObjectDescription.Expected.Type-->
						</Parameter>
						<Parameter>7<!--VerifyObjectDescription.Expected.ObjectCode-->
						</Parameter>
						<Parameter>8<!--VerifyObjectDescription.Expected.BitSize-->
						</Parameter>
						<OutParameter>CoeComm.bError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>CoeComm.bError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="CoeComm.bResult">false</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="VerifySi0Descr">
					<Description Id="8" Level="Output" Param0="CoeComm.Index">0x{0:x4}.0 Checking entry description...</Description>
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>CoeComm.Dict<!--CheckEntryDescription.ObjectDictionary-->
						</Parameter>
						<Parameter>online<!--CheckEntryDescription.DictionaryType-->
						</Parameter>
						<Parameter>CoeComm.Index<!--CheckEntryDescription.Index-->
						</Parameter>
						<Parameter>0<!--CheckEntryDescription.SubIndex-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.LevelWarning-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.CaseSensitive-->
						</Parameter>
						<Parameter>EmptyString<!--CheckEntryDescription.Expected.Name-->
						</Parameter>
						<Parameter>5<!--CheckEntryDescription.Expected.Type-->
						</Parameter>
						<Parameter>true<!--CheckEntryDescription.Expected.Access.ReadInPreOp-->
						</Parameter>
						<Parameter>true<!--CheckEntryDescription.Expected.Access.ReadInSafeOp-->
						</Parameter>
						<Parameter>true<!--CheckEntryDescription.Expected.Access.ReadInOp-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.Expected.Access.WriteInPreOp-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.Expected.Access.WriteInSafeOp-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.Expected.Access.WriteInOp-->
						</Parameter>
						<Parameter>EmptyString<!--CheckEntryDescription.Expected.Category-->
						</Parameter>
						<Parameter>EmptyString<!--CheckEntryDescription.Expected.PdoMapping-->
						</Parameter>
						<Parameter>null<!--CheckEntryDescription.Expected.DefaultData-->
						</Parameter>
						<Parameter>null<!--CheckEntryDescription.Expected.MinData-->
						</Parameter>
						<Parameter>null<!--CheckEntryDescription.Expected.MaxData-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.Expected.Settings-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.Expected.Backup-->
						</Parameter>
						<Parameter>8<!--CheckEntryDescription.Expected.BitSize-->
						</Parameter>
						<Parameter>0<!--CheckEntryDescription.Expected.BitOffs-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.AllowEnumDataType-->
						</Parameter>
						<OutParameter>CoeComm.bError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>CoeComm.bError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="CoeComm.bResult">false</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="WriteSuccess">
					<Compare>
						<Equal>
							<Value1>CoeComm.bResult</Value1>
							<Value2>true</Value2>
							<ReturnSuccess Id="9" Param0="CoeComm.Index" Param1="CoeComm.TmpName">{1} (0x{0:x4}) : the object structure is valid.</ReturnSuccess>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>CoeComm.bResult</Value1>
							<Value2>false</Value2>
							<RaiseError Id="10"></RaiseError>
						</Equal>
					</Compare>
				</TestStep>
			</TestCase>
			<TestCase Name="Manufacturer Device Name Object (0x1008)" CaseId="3">
				<?MAX_OUTPUT_ID 9?>
				<Description>
					<Purpose>Check the Manufacturer Device Name object (0x1008). The test case ensures the correct object structure and naming.</Purpose>
					<PreCondition>Device supports Mailbox communication via CoE protocol
ESI provides a online object dictionary</PreCondition>
					<Action>Check the object structure:
1. Name
2. Data Type
3. Object Code
4. Access
5. Pdo mapping</Action>
					<PostCondition>If the device profile 5001 is supported the object is mandatory.
The structure shall be as described in ETG.1000.6 5.6.7.4.3 Manufacturer Device Name. If at least one value is not equal to the expected value the test case returns a error list containing all errors.
1. Warning if object name is not 'Manufacturer Device Name' or 'Device Name'
2. Error if data type is not 'VISIBLE_STRING'
3. Error if object code is not 'VAR'
4. Error if access is not 'Read only'
5. Error if Pdo mapping is defined</PostCondition>
					<References>
						<Reference Chapter="5.6.7.4.3 Manufacturer Device Name" Specification="ETG.1000.6 "></Reference>
						<Reference Chapter="4.3.1.2 Device Name" Specification="ETG.5001.1"></Reference>
					</References>
					<Mandatory>true</Mandatory>
				</Description>
				<TestStep>
					<CallTestFunction Name="Reset"></CallTestFunction>
				</TestStep>
				<TestStep Name="CheckMbxCoeSupport">
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Mailbox</Value1>
							<Value2>false</Value2>
							<SkipCase Id="0">Device does not support mailbox communication</SkipCase>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Mailbox.CoE</Value1>
							<Value2>false</Value2>
							<SkipCase Id="1">Device does not support CoE</SkipCase>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Mailbox.CoE.SdoInfo</Value1>
							<Value2>false</Value2>
							<SkipCase Id="2">Device does not support SdoInfo</SkipCase>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="SetDefaultMandatoryValue">
					<SetVariable Target="CoeComm.IsMandatroy">false</SetVariable>
				</TestStep>
				<TestStep Name="GetDeviceProfile">
					<CallTestFunction Name="DeviceProfileSupported">
						<Parameter>"online"</Parameter>
						<Parameter>5001</Parameter>
						<OutParameter>CoeComm.IsMandatroy</OutParameter>
					</CallTestFunction>
				</TestStep>
				<TestStep Name="InitResult">
					<SetVariable Target="CoeComm.bResult">true</SetVariable>
				</TestStep>
				<TestStep Name="InitIndex">
					<SetVariable Target="CoeComm.Index">#x1008</SetVariable>
				</TestStep>
				<TestStep Name="InitObjName">
					<SetVariable Target="CoeComm.TmpName">Manufacturer Device Name</SetVariable>
				</TestStep>
				<TestStep>
					<InitArray TargetArray="CoeComm.TmpNames" Length="2"></InitArray>
				</TestStep>
				<TestStep>
					<SetArrayItem TargetArray="CoeComm.TmpNames" Index="0">CoeComm.TmpName</SetArrayItem>
				</TestStep>
				<TestStep>
					<SetArrayItem TargetArray="CoeComm.TmpNames" Index="1">"Device Name"</SetArrayItem>
				</TestStep>
				<TestStep Name="GetOD">
					<Description Id="3">Getting online dictionary from assigned ESI...</Description>
					<GetObjectDictionary Target="CoeComm.Dict">
						<DictionaryType>Online</DictionaryType>
					</GetObjectDictionary>
					<RaiseErrorOnFailure Id="4">Failed to get online dictionary.</RaiseErrorOnFailure>
				</TestStep>
				<TestStep Name="SkipCheckObjDefinedIfMandatory">
					<!--In case of a not defined object the function Check Object Description will return an error-->
					<Compare>
						<Equal>
							<Value1>CoeComm.IsMandatroy</Value1>
							<Value2>true</Value2>
							<GotoStep>VerifyObjDescr</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CheckIfObjIsDefined">
					<CallTestFunction Name="IsObjectDefined">
						<Parameter>CoeComm.Dict</Parameter>
						<Parameter>CoeComm.Index</Parameter>
						<OutParameter>CoeComm.TmpBool</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>CoeComm.TmpBool</Value1>
							<Value2>false</Value2>
							<SkipCase Id="5" Param0="CoeComm.Index" Param1="CoeComm.TmpName">The object '{1}' 0x{0:x4} is not defined.</SkipCase>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="VerifyObjDescr">
					<Description Id="6" Param0="CoeComm.Index" Level="Output">0x{0:x4} Checking object description...</Description>
					<CallTestFunction Name="CheckObjectDescription">
						<Parameter>CoeComm.Dict</Parameter>
						<Parameter>online</Parameter>
						<Parameter>CoeComm.Index<!--VerifyObjectDescription.Index-->
						</Parameter>
						<Parameter>false<!--VerifyObjectDescription.LevelWarning-->
						</Parameter>
						<Parameter>false</Parameter>
						<Parameter>CoeComm.TmpNames<!--VerifyObjectDescription.Expected.Names-->
						</Parameter>
						<Parameter>9<!--VerifyObjectDescription.Expected.Type-->
						</Parameter>
						<Parameter>7<!--VerifyObjectDescription.Expected.ObjectCode-->
						</Parameter>
						<Parameter>-1<!--VerifyObjectDescription.Expected.BitSize-->
						</Parameter>
						<OutParameter>CoeComm.bError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>CoeComm.bError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="CoeComm.bResult">false</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="VerifySi0Descr">
					<Description Id="7" Param0="CoeComm.Index" Level="Output">0x{0:x4}.0 Checking entry description...</Description>
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>CoeComm.Dict<!--CheckEntryDescription.ObjectDictionary-->
						</Parameter>
						<Parameter>online<!--CheckEntryDescription.DictionaryType-->
						</Parameter>
						<Parameter>CoeComm.Index<!--CheckEntryDescription.Index-->
						</Parameter>
						<Parameter>0<!--CheckEntryDescription.SubIndex-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.LevelWarning-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.CaseSensitive-->
						</Parameter>
						<Parameter>EmptyString<!--CheckEntryDescription.Expected.Name-->
						</Parameter>
						<Parameter>9<!--CheckEntryDescription.Expected.Type-->
						</Parameter>
						<Parameter>true<!--CheckEntryDescription.Expected.Access.ReadInPreOp-->
						</Parameter>
						<Parameter>true<!--CheckEntryDescription.Expected.Access.ReadInSafeOp-->
						</Parameter>
						<Parameter>true<!--CheckEntryDescription.Expected.Access.ReadInOp-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.Expected.Access.WriteInPreOp-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.Expected.Access.WriteInSafeOp-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.Expected.Access.WriteInOp-->
						</Parameter>
						<Parameter>EmptyString<!--CheckEntryDescription.Expected.Category-->
						</Parameter>
						<Parameter>None<!--CheckEntryDescription.Expected.PdoMapping-->
						</Parameter>
						<Parameter>null<!--CheckEntryDescription.Expected.DefaultData-->
						</Parameter>
						<Parameter>null<!--CheckEntryDescription.Expected.MinData-->
						</Parameter>
						<Parameter>null<!--CheckEntryDescription.Expected.MaxData-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.Expected.Settings-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.Expected.Backup-->
						</Parameter>
						<Parameter>-1<!--CheckEntryDescription.Expected.BitSize-->
						</Parameter>
						<Parameter>0<!--CheckEntryDescription.Expected.BitOffs-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.AllowEnumDataType-->
						</Parameter>
						<OutParameter>CoeComm.bError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>CoeComm.bError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="CoeComm.bResult">false</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="WriteSuccess">
					<Compare>
						<Equal>
							<Value1>CoeComm.bResult</Value1>
							<Value2>true</Value2>
							<ReturnSuccess Id="8" Param0="CoeComm.Index" Param1="CoeComm.TmpName">{1} (0x{0:x4}) : the object structure is valid.</ReturnSuccess>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>CoeComm.bResult</Value1>
							<Value2>false</Value2>
							<RaiseError Id="9"></RaiseError>
						</Equal>
					</Compare>
				</TestStep>
			</TestCase>
			<TestCase Name="Manufacturer Hardware Version Object (0x1009)" CaseId="4">
				<?MAX_OUTPUT_ID 9?>
				<Description>
					<Purpose>Check the Manufacturer Hardware Version object (0x1009). The test case ensures the correct object structure and naming.</Purpose>
					<PreCondition>Device supports Mailbox communication via CoE protocol
ESI provides a online object dictionary</PreCondition>
					<Action>Check the object structure:
1. Name
2. Data Type
3. Object Code
4. Access
5. Pdo mapping</Action>
					<PostCondition>If the device profile 5001 is supported the object is mandatory.
The structure shall be as described in ETG.1000.6 5.6.7.4.4 Manufacturer Hardware Version. If at least one value is not equal to the expected value the test case returns a error list containing all errors.
1. Warning if object name is not 'Manufacturer Hardware Version' or 'Hardware Version'
2. Error if data type is not 'VISIBLE_STRING'
3. Error if object code is not 'VAR'
4. Error if access is not 'Read only'
5. Error if Pdo mapping is defined</PostCondition>
					<References>
						<Reference Chapter="5.6.7.4.4 Manufacturer Hardware Version" Specification="ETG.1000.6 "></Reference>
						<Reference Chapter="4.3.1.2 Hardware Version" Specification="ETG.5001.1"></Reference>
					</References>
					<Mandatory>true</Mandatory>
				</Description>
				<TestStep>
					<CallTestFunction Name="Reset"></CallTestFunction>
				</TestStep>
				<TestStep Name="CheckMbxCoeSupport">
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Mailbox</Value1>
							<Value2>false</Value2>
							<SkipCase Id="0">Device does not support mailbox communication</SkipCase>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Mailbox.CoE</Value1>
							<Value2>false</Value2>
							<SkipCase Id="1">Device does not support CoE</SkipCase>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Mailbox.CoE.SdoInfo</Value1>
							<Value2>false</Value2>
							<SkipCase Id="2">Device does not support SdoInfo</SkipCase>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="SetDefaultMandatoryValue">
					<SetVariable Target="CoeComm.IsMandatroy">false</SetVariable>
				</TestStep>
				<TestStep Name="GetDeviceProfile">
					<CallTestFunction Name="DeviceProfileSupported">
						<Parameter>"online"</Parameter>
						<Parameter>5001</Parameter>
						<OutParameter>CoeComm.IsMandatroy</OutParameter>
					</CallTestFunction>
				</TestStep>
				<TestStep Name="InitResult">
					<SetVariable Target="CoeComm.bResult">true</SetVariable>
				</TestStep>
				<TestStep Name="InitIndex">
					<SetVariable Target="CoeComm.Index">#x1009</SetVariable>
				</TestStep>
				<TestStep Name="InitObjName">
					<SetVariable Target="CoeComm.TmpName">Manufacturer Hardware Version</SetVariable>
				</TestStep>
				<TestStep>
					<InitArray TargetArray="CoeComm.TmpNames" Length="2"></InitArray>
				</TestStep>
				<TestStep>
					<SetArrayItem TargetArray="CoeComm.TmpNames" Index="0">CoeComm.TmpName</SetArrayItem>
				</TestStep>
				<TestStep>
					<SetArrayItem TargetArray="CoeComm.TmpNames" Index="1">"Hardware Version"</SetArrayItem>
				</TestStep>
				<TestStep Name="GetOD">
					<Description Id="3">Getting online dictionary from assigned ESI...</Description>
					<GetObjectDictionary Target="CoeComm.Dict">
						<DictionaryType>Online</DictionaryType>
					</GetObjectDictionary>
					<RaiseErrorOnFailure Id="4">Failed to get online dictionary.</RaiseErrorOnFailure>
				</TestStep>
				<TestStep Name="SkipCheckObjDefinedIfMandatory">
					<!--In case of a not defined object the function Check Object Description will return an error-->
					<Compare>
						<Equal>
							<Value1>CoeComm.IsMandatroy</Value1>
							<Value2>true</Value2>
							<GotoStep>VerifyObjDescr</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CheckIfObjIsDefined">
					<CallTestFunction Name="IsObjectDefined">
						<Parameter>CoeComm.Dict</Parameter>
						<Parameter>CoeComm.Index</Parameter>
						<OutParameter>CoeComm.TmpBool</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>CoeComm.TmpBool</Value1>
							<Value2>false</Value2>
							<SkipCase Id="5" Param0="CoeComm.Index" Param1="CoeComm.TmpName">The object '{1}' 0x{0:x4} is not defined.</SkipCase>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="VerifyObjDescr">
					<Description Id="6" Param0="CoeComm.Index" Level="Output">0x{0:x4} Checking object description...</Description>
					<CallTestFunction Name="CheckObjectDescription">
						<Parameter>CoeComm.Dict</Parameter>
						<Parameter>online</Parameter>
						<Parameter>CoeComm.Index<!--VerifyObjectDescription.Index-->
						</Parameter>
						<Parameter>false<!--VerifyObjectDescription.LevelWarning-->
						</Parameter>
						<Parameter>false</Parameter>
						<Parameter>CoeComm.TmpNames<!--VerifyObjectDescription.Expected.Names-->
						</Parameter>
						<Parameter>9<!--VerifyObjectDescription.Expected.Type-->
						</Parameter>
						<Parameter>7<!--VerifyObjectDescription.Expected.ObjectCode-->
						</Parameter>
						<Parameter>-1<!--VerifyObjectDescription.Expected.BitSize-->
						</Parameter>
						<OutParameter>CoeComm.bError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>CoeComm.bError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="CoeComm.bResult">false</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="VerifySi0Descr">
					<Description Id="7" Param0="CoeComm.Index" Level="Output">0x{0:x4}.0 Checking entry description...</Description>
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>CoeComm.Dict<!--CheckEntryDescription.ObjectDictionary-->
						</Parameter>
						<Parameter>online<!--CheckEntryDescription.DictionaryType-->
						</Parameter>
						<Parameter>CoeComm.Index<!--CheckEntryDescription.Index-->
						</Parameter>
						<Parameter>0<!--CheckEntryDescription.SubIndex-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.LevelWarning-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.CaseSensitive-->
						</Parameter>
						<Parameter>EmptyString<!--CheckEntryDescription.Expected.Name-->
						</Parameter>
						<Parameter>9<!--CheckEntryDescription.Expected.Type-->
						</Parameter>
						<Parameter>true<!--CheckEntryDescription.Expected.Access.ReadInPreOp-->
						</Parameter>
						<Parameter>true<!--CheckEntryDescription.Expected.Access.ReadInSafeOp-->
						</Parameter>
						<Parameter>true<!--CheckEntryDescription.Expected.Access.ReadInOp-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.Expected.Access.WriteInPreOp-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.Expected.Access.WriteInSafeOp-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.Expected.Access.WriteInOp-->
						</Parameter>
						<Parameter>EmptyString<!--CheckEntryDescription.Expected.Category-->
						</Parameter>
						<Parameter>None<!--CheckEntryDescription.Expected.PdoMapping-->
						</Parameter>
						<Parameter>null<!--CheckEntryDescription.Expected.DefaultData-->
						</Parameter>
						<Parameter>null<!--CheckEntryDescription.Expected.MinData-->
						</Parameter>
						<Parameter>null<!--CheckEntryDescription.Expected.MaxData-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.Expected.Settings-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.Expected.Backup-->
						</Parameter>
						<Parameter>-1<!--CheckEntryDescription.Expected.BitSize-->
						</Parameter>
						<Parameter>0<!--CheckEntryDescription.Expected.BitOffs-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.AllowEnumDataType-->
						</Parameter>
						<OutParameter>CoeComm.bError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>CoeComm.bError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="CoeComm.bResult">false</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="WriteSuccess">
					<Compare>
						<Equal>
							<Value1>CoeComm.bResult</Value1>
							<Value2>true</Value2>
							<ReturnSuccess Id="8" Param0="CoeComm.Index" Param1="CoeComm.TmpName">{1} (0x{0:x4}) : the object structure is valid.</ReturnSuccess>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>CoeComm.bResult</Value1>
							<Value2>false</Value2>
							<RaiseError Id="9"></RaiseError>
						</Equal>
					</Compare>
				</TestStep>
			</TestCase>
			<TestCase Name="Manufacturer Software Version Object (0x100A)" CaseId="5">
				<?MAX_OUTPUT_ID 9?>
				<Description>
					<Purpose>Check the Manufacturer Software Version object (0x100A). The test case ensures the correct object structure and naming.</Purpose>
					<PreCondition>Device supports Mailbox communication via CoE protocol
ESI provides a online object dictionary</PreCondition>
					<Action>Check the object structure:
1. Name
2. Data Type
3. Object Code
4. Access
5. Pdo mapping</Action>
					<PostCondition>If the device profile 5001 is supported the object is mandatory.
The structure shall be as described in ETG.1000.6 5.6.7.4.5 Manufacturer Software Version. If at least one value is not equal to the expected value the test case returns a error list containing all errors.
1. Warning if object name is not 'Manufacturer Software Version' or 'Software Version'
2. Error if data type is not 'VISIBLE_STRING'
3. Error if object code is not 'VAR'
4. Error if access is not 'Read only'
5. Error if Pdo mapping is defined</PostCondition>
					<References>
						<Reference Chapter="5.6.7.4.5 Manufacturer Software Version" Specification="ETG.1000.6 "></Reference>
						<Reference Chapter="4.3.1.2 Software Version" Specification="ETG.5001.1"></Reference>
					</References>
					<Mandatory>true</Mandatory>
				</Description>
				<TestStep>
					<CallTestFunction Name="Reset"></CallTestFunction>
				</TestStep>
				<TestStep Name="CheckMbxCoeSupport">
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Mailbox</Value1>
							<Value2>false</Value2>
							<SkipCase Id="0">Device does not support mailbox communication</SkipCase>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Mailbox.CoE</Value1>
							<Value2>false</Value2>
							<SkipCase Id="1">Device does not support CoE</SkipCase>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Mailbox.CoE.SdoInfo</Value1>
							<Value2>false</Value2>
							<SkipCase Id="2">Device does not support SdoInfo</SkipCase>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="SetDefaultMandatoryValue">
					<SetVariable Target="CoeComm.IsMandatroy">false</SetVariable>
				</TestStep>
				<TestStep Name="GetDeviceProfile">
					<CallTestFunction Name="DeviceProfileSupported">
						<Parameter>"online"</Parameter>
						<Parameter>5001</Parameter>
						<OutParameter>CoeComm.IsMandatroy</OutParameter>
					</CallTestFunction>
				</TestStep>
				<TestStep Name="InitResult">
					<SetVariable Target="CoeComm.bResult">true</SetVariable>
				</TestStep>
				<TestStep Name="InitIndex">
					<SetVariable Target="CoeComm.Index">#x100A</SetVariable>
				</TestStep>
				<TestStep Name="InitObjName">
					<SetVariable Target="CoeComm.TmpName">Manufacturer Software Version</SetVariable>
				</TestStep>
				<TestStep>
					<InitArray TargetArray="CoeComm.TmpNames" Length="2"></InitArray>
				</TestStep>
				<TestStep>
					<SetArrayItem TargetArray="CoeComm.TmpNames" Index="0">CoeComm.TmpName</SetArrayItem>
				</TestStep>
				<TestStep>
					<SetArrayItem TargetArray="CoeComm.TmpNames" Index="1">"Software Version"</SetArrayItem>
				</TestStep>
				<TestStep Name="GetOD">
					<Description Id="3">Getting online dictionary from assigned ESI...</Description>
					<GetObjectDictionary Target="CoeComm.Dict">
						<DictionaryType>Online</DictionaryType>
					</GetObjectDictionary>
					<RaiseErrorOnFailure Id="4">Failed to get online dictionary.</RaiseErrorOnFailure>
				</TestStep>
				<TestStep Name="SkipCheckObjDefinedIfMandatory">
					<!--In case of a not defined object the function Check Object Description will return an error-->
					<Compare>
						<Equal>
							<Value1>CoeComm.IsMandatroy</Value1>
							<Value2>true</Value2>
							<GotoStep>VerifyObjDescr</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CheckIfObjIsDefined">
					<CallTestFunction Name="IsObjectDefined">
						<Parameter>CoeComm.Dict</Parameter>
						<Parameter>CoeComm.Index</Parameter>
						<OutParameter>CoeComm.TmpBool</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>CoeComm.TmpBool</Value1>
							<Value2>false</Value2>
							<SkipCase Id="5" Param0="CoeComm.Index" Param1="CoeComm.TmpName">The object '{1}' 0x{0:x4} is not defined.</SkipCase>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="VerifyObjDescr">
					<Description Id="6" Param0="CoeComm.Index" Level="Output">0x{0:x4} Checking object description...</Description>
					<CallTestFunction Name="CheckObjectDescription">
						<Parameter>CoeComm.Dict</Parameter>
						<Parameter>online</Parameter>
						<Parameter>CoeComm.Index<!--VerifyObjectDescription.Index-->
						</Parameter>
						<Parameter>false<!--VerifyObjectDescription.LevelWarning-->
						</Parameter>
						<Parameter>false</Parameter>
						<Parameter>CoeComm.TmpNames<!--VerifyObjectDescription.Expected.Names-->
						</Parameter>
						<Parameter>9<!--VerifyObjectDescription.Expected.Type-->
						</Parameter>
						<Parameter>7<!--VerifyObjectDescription.Expected.ObjectCode-->
						</Parameter>
						<Parameter>-1<!--VerifyObjectDescription.Expected.BitSize-->
						</Parameter>
						<OutParameter>CoeComm.bError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>CoeComm.bError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="CoeComm.bResult">false</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="VerifySi0Descr">
					<Description Id="7" Param0="CoeComm.Index" Level="Output">0x{0:x4}.0 Checking entry description...</Description>
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>CoeComm.Dict<!--CheckEntryDescription.ObjectDictionary-->
						</Parameter>
						<Parameter>online<!--CheckEntryDescription.DictionaryType-->
						</Parameter>
						<Parameter>CoeComm.Index<!--CheckEntryDescription.Index-->
						</Parameter>
						<Parameter>0<!--CheckEntryDescription.SubIndex-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.LevelWarning-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.CaseSensitive-->
						</Parameter>
						<Parameter>EmptyString<!--CheckEntryDescription.Expected.Name-->
						</Parameter>
						<Parameter>9<!--CheckEntryDescription.Expected.Type-->
						</Parameter>
						<Parameter>true<!--CheckEntryDescription.Expected.Access.ReadInPreOp-->
						</Parameter>
						<Parameter>true<!--CheckEntryDescription.Expected.Access.ReadInSafeOp-->
						</Parameter>
						<Parameter>true<!--CheckEntryDescription.Expected.Access.ReadInOp-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.Expected.Access.WriteInPreOp-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.Expected.Access.WriteInSafeOp-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.Expected.Access.WriteInOp-->
						</Parameter>
						<Parameter>EmptyString<!--CheckEntryDescription.Expected.Category-->
						</Parameter>
						<Parameter>None<!--CheckEntryDescription.Expected.PdoMapping-->
						</Parameter>
						<Parameter>null<!--CheckEntryDescription.Expected.DefaultData-->
						</Parameter>
						<Parameter>null<!--CheckEntryDescription.Expected.MinData-->
						</Parameter>
						<Parameter>null<!--CheckEntryDescription.Expected.MaxData-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.Expected.Settings-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.Expected.Backup-->
						</Parameter>
						<Parameter>-1<!--CheckEntryDescription.Expected.BitSize-->
						</Parameter>
						<Parameter>0<!--CheckEntryDescription.Expected.BitOffs-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.AllowEnumDataType-->
						</Parameter>
						<OutParameter>CoeComm.bError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>CoeComm.bError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="CoeComm.bResult">false</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="WriteSuccess">
					<Compare>
						<Equal>
							<Value1>CoeComm.bResult</Value1>
							<Value2>true</Value2>
							<ReturnSuccess Id="8" Param0="CoeComm.Index" Param1="CoeComm.TmpName">{1} (0x{0:x4}) : the object structure is valid.</ReturnSuccess>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>CoeComm.bResult</Value1>
							<Value2>false</Value2>
							<RaiseError Id="9"></RaiseError>
						</Equal>
					</Compare>
				</TestStep>
			</TestCase>
			<TestCase Name="Identity Object (0x1018)" CaseId="6">
				<?MAX_OUTPUT_ID 14?>
				<Description>
					<Purpose>The online dictionary shall contain the mandatory Identity Object (index 0x1018). The test case ensures the correct object structure and naming.</Purpose>
					<PreCondition>Device supports Mailbox communication via CoE protocol
ESI provides a online object dictionary</PreCondition>
					<Action>Check the object structure:
1. Name
2. Data Type
3. Object Code
4. Access
5. Pdo mapping
6. Bit Size</Action>
					<PostCondition>The online dictionary shall contain the mandatory Identity Object.
The structure shall be as described in ETG.1000.6 5.6.7.4.6 Identity Object. If at least one value is not equal to the expected value the test case returns a error list containing all errors.
Object Description:
1. Warning if the name is not 'Identity'
6. Error if BitSize is not 144
Subindex 1:
1.1. Warning if the name is not 'Vendor ID'
2.1. Error if data type is not 'USINT32'
4.1. Error if access is not 'Read only'
5.1. Error if Pdo mapping is defined
6.1. Error if BitSize is not 32
Subindex 2:
1.2. Warning if the name is not 'Product Code'
2.2. Error if data type is not 'USINT32'
4.2. Error if access is not 'Read only'
5.2. Error if Pdo mapping is defined
6.2. Error if BitSize is not 32
Subindex 3:
1.3. Warning if the name is not 'Revision Number'
2.3. Error if data type is not 'USINT32'
4.3. Error if access is not 'Read only'
5.3. Error if Pdo mapping is defined
6.3. Error if BitSize is not 32
Subindex 4:
1.4. Warning if the name is not 'Serial Number'
2.4. Error if data type is not 'USINT32'
4.4. Error if access is not 'Read only'
5.4. Error if Pdo mapping is defined
6.4. Error if BitSize is not 32</PostCondition>
					<References>
						<Reference Chapter="5.6.7.4.6 Identity Object" Specification="ETG.1000.6 "></Reference>
					</References>
					<Mandatory>true</Mandatory>
				</Description>
				<TestStep>
					<CallTestFunction Name="Reset"></CallTestFunction>
				</TestStep>
				<TestStep Name="CheckMbxCoeSupport">
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Mailbox</Value1>
							<Value2>false</Value2>
							<SkipCase Id="0">Device does not support mailbox communication</SkipCase>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Mailbox.CoE</Value1>
							<Value2>false</Value2>
							<SkipCase Id="1">Device does not support CoE</SkipCase>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Mailbox.CoE.SdoInfo</Value1>
							<Value2>false</Value2>
							<SkipCase Id="2">Device does not support SdoInfo</SkipCase>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="SetDefaultMandatoryValue">
					<SetVariable Target="CoeComm.IsMandatroy">true</SetVariable>
				</TestStep>
				<TestStep Name="InitResult">
					<SetVariable Target="CoeComm.bResult">true</SetVariable>
				</TestStep>
				<TestStep Name="InitIndex">
					<SetVariable Target="CoeComm.Index">#x1018</SetVariable>
				</TestStep>
				<TestStep Name="InitObjName">
					<SetVariable Target="CoeComm.TmpName">Identity</SetVariable>
				</TestStep>
				<TestStep>
					<InitArray TargetArray="CoeComm.TmpNames" Length="2"></InitArray>
				</TestStep>
				<TestStep>
					<SetArrayItem TargetArray="CoeComm.TmpNames" Index="0">CoeComm.TmpName</SetArrayItem>
				</TestStep>
				<TestStep>
					<SetArrayItem TargetArray="CoeComm.TmpNames" Index="1">"Identity Object"</SetArrayItem>
				</TestStep>
				<TestStep Name="CallInitMailbox">
					<CallFunction>SetStateMachTimeouts</CallFunction>
				</TestStep>
				<TestStep Name="GoToPreOp">
					<RunToState Timeout="preOPTimeout">
						<State>PREOP</State>
					</RunToState>
					<RaiseErrorOnFailure Id="3">Failed to go to PreOP!</RaiseErrorOnFailure>
				</TestStep>
				<TestStep Name="GetOD">
					<Description Id="4">Getting online dictionary from assigned ESI...</Description>
					<GetObjectDictionary Target="CoeComm.Dict">
						<DictionaryType>Online</DictionaryType>
					</GetObjectDictionary>
					<RaiseErrorOnFailure Id="5">Failed to get online dictionary.</RaiseErrorOnFailure>
				</TestStep>
				<TestStep Name="SkipCheckObjDefinedIfMandatory">
					<!--In case of a not defined object the function Check Object Description will return an error-->
					<Compare>
						<Equal>
							<Value1>CoeComm.IsMandatroy</Value1>
							<Value2>true</Value2>
							<GotoStep>VerifyObjDescr</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CheckIfObjIsDefined">
					<CallTestFunction Name="IsObjectDefined">
						<Parameter>CoeComm.Dict</Parameter>
						<Parameter>CoeComm.Index</Parameter>
						<OutParameter>CoeComm.TmpBool</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>CoeComm.TmpBool</Value1>
							<Value2>false</Value2>
							<SkipCase Id="6" Param0="CoeComm.Index" Param1="CoeComm.TmpName">The object '{1}' 0x{0:x4} is not defined.</SkipCase>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="VerifyObjDescr">
					<Description Id="7" Param0="CoeComm.Index" Level="Output">0x{0:x4} Checking object description...</Description>
					<CallTestFunction Name="CheckObjectDescription">
						<Parameter>CoeComm.Dict</Parameter>
						<Parameter>online</Parameter>
						<Parameter>CoeComm.Index<!--VerifyObjectDescription.Index-->
						</Parameter>
						<Parameter>false<!--VerifyObjectDescription.LevelWarning-->
						</Parameter>
						<Parameter>false</Parameter>
						<Parameter>CoeComm.TmpNames<!--VerifyObjectDescription.Expected.Names-->
						</Parameter>
						<Parameter>0<!--VerifyObjectDescription.Expected.Type-->
						</Parameter>
						<Parameter>9<!--VerifyObjectDescription.Expected.ObjectCode-->
						</Parameter>
						<Parameter>144<!--VerifyObjectDescription.Expected.BitSize-->
						</Parameter>
						<OutParameter>CoeComm.bError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>CoeComm.bError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="CoeComm.bResult">false</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="VerifySi0Descr">
					<Description Id="8" Param0="CoeComm.Index" Level="Output">0x{0:x4}.0 Checking entry description...</Description>
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>CoeComm.Dict<!--CheckEntryDescription.ObjectDictionary-->
						</Parameter>
						<Parameter>online<!--CheckEntryDescription.DictionaryType-->
						</Parameter>
						<Parameter>CoeComm.Index<!--CheckEntryDescription.Index-->
						</Parameter>
						<Parameter>0<!--CheckEntryDescription.SubIndex-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.LevelWarning-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.CaseSensitive-->
						</Parameter>
						<Parameter>EmptyString<!--CheckEntryDescription.Expected.Name-->
						</Parameter>
						<Parameter>5<!--CheckEntryDescription.Expected.Type-->
						</Parameter>
						<Parameter>true<!--CheckEntryDescription.Expected.Access.ReadInPreOp-->
						</Parameter>
						<Parameter>true<!--CheckEntryDescription.Expected.Access.ReadInSafeOp-->
						</Parameter>
						<Parameter>true<!--CheckEntryDescription.Expected.Access.ReadInOp-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.Expected.Access.WriteInPreOp-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.Expected.Access.WriteInSafeOp-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.Expected.Access.WriteInOp-->
						</Parameter>
						<Parameter>EmptyString<!--CheckEntryDescription.Expected.Category-->
						</Parameter>
						<Parameter>None<!--CheckEntryDescription.Expected.PdoMapping-->
						</Parameter>
						<Parameter>null<!--CheckEntryDescription.Expected.DefaultData-->
						</Parameter>
						<Parameter>null<!--CheckEntryDescription.Expected.MinData-->
						</Parameter>
						<Parameter>null<!--CheckEntryDescription.Expected.MaxData-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.Expected.Settings-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.Expected.Backup-->
						</Parameter>
						<Parameter>8<!--CheckEntryDescription.Expected.BitSize-->
						</Parameter>
						<Parameter>0<!--CheckEntryDescription.Expected.BitOffs-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.AllowEnumDataType-->
						</Parameter>
						<OutParameter>CoeComm.bError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>CoeComm.bError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="CoeComm.bResult">false</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="VerifySi1Descr">
					<Description Id="9" Param0="CoeComm.Index" Level="Output">0x{0:x4}.1 Checking entry description...</Description>
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>CoeComm.Dict<!--CheckEntryDescription.ObjectDictionary-->
						</Parameter>
						<Parameter>online<!--CheckEntryDescription.DictionaryType-->
						</Parameter>
						<Parameter>CoeComm.Index<!--CheckEntryDescription.Index-->
						</Parameter>
						<Parameter>1<!--CheckEntryDescription.SubIndex-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.LevelWarning-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.CaseSensitive-->
						</Parameter>
						<Parameter>"Vendor ID"</Parameter>
						<!--CheckEntryDescription.Expected.Name-->
						<Parameter>7<!--CheckEntryDescription.Expected.Type-->
						</Parameter>
						<Parameter>true<!--CheckEntryDescription.Expected.Access.ReadInPreOp-->
						</Parameter>
						<Parameter>true<!--CheckEntryDescription.Expected.Access.ReadInSafeOp-->
						</Parameter>
						<Parameter>true<!--CheckEntryDescription.Expected.Access.ReadInOp-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.Expected.Access.WriteInPreOp-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.Expected.Access.WriteInSafeOp-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.Expected.Access.WriteInOp-->
						</Parameter>
						<Parameter>EmptyString<!--CheckEntryDescription.Expected.Category-->
						</Parameter>
						<Parameter>None<!--CheckEntryDescription.Expected.PdoMapping-->
						</Parameter>
						<Parameter>null<!--CheckEntryDescription.Expected.DefaultData-->
						</Parameter>
						<Parameter>null<!--CheckEntryDescription.Expected.MinData-->
						</Parameter>
						<Parameter>null<!--CheckEntryDescription.Expected.MaxData-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.Expected.Settings-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.Expected.Backup-->
						</Parameter>
						<Parameter>32<!--CheckEntryDescription.Expected.BitSize-->
						</Parameter>
						<Parameter>16<!--CheckEntryDescription.Expected.BitOffs-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.AllowEnumDataType-->
						</Parameter>
						<OutParameter>CoeComm.bError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>CoeComm.bError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="CoeComm.bResult">false</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="VerifySi2Descr">
					<Description Id="10" Param0="CoeComm.Index" Level="Output">0x{0:x4}.2 Checking entry description...</Description>
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>CoeComm.Dict<!--CheckEntryDescription.ObjectDictionary-->
						</Parameter>
						<Parameter>online<!--CheckEntryDescription.DictionaryType-->
						</Parameter>
						<Parameter>CoeComm.Index<!--CheckEntryDescription.Index-->
						</Parameter>
						<Parameter>2<!--CheckEntryDescription.SubIndex-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.LevelWarning-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.CaseSensitive-->
						</Parameter>
						<Parameter>"Product Code"</Parameter>
						<!--CheckEntryDescription.Expected.Name-->
						<Parameter>7<!--CheckEntryDescription.Expected.Type-->
						</Parameter>
						<Parameter>true<!--CheckEntryDescription.Expected.Access.ReadInPreOp-->
						</Parameter>
						<Parameter>true<!--CheckEntryDescription.Expected.Access.ReadInSafeOp-->
						</Parameter>
						<Parameter>true<!--CheckEntryDescription.Expected.Access.ReadInOp-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.Expected.Access.WriteInPreOp-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.Expected.Access.WriteInSafeOp-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.Expected.Access.WriteInOp-->
						</Parameter>
						<Parameter>EmptyString<!--CheckEntryDescription.Expected.Category-->
						</Parameter>
						<Parameter>None<!--CheckEntryDescription.Expected.PdoMapping-->
						</Parameter>
						<Parameter>null<!--CheckEntryDescription.Expected.DefaultData-->
						</Parameter>
						<Parameter>null<!--CheckEntryDescription.Expected.MinData-->
						</Parameter>
						<Parameter>null<!--CheckEntryDescription.Expected.MaxData-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.Expected.Settings-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.Expected.Backup-->
						</Parameter>
						<Parameter>32<!--CheckEntryDescription.Expected.BitSize-->
						</Parameter>
						<Parameter>48<!--CheckEntryDescription.Expected.BitOffs-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.AllowEnumDataType-->
						</Parameter>
						<OutParameter>CoeComm.bError</OutParameter>
					</CallTestFunction>
				</TestStep>
				<TestStep Name="VerifySi3Descr">
					<Description Id="11" Param0="CoeComm.Index" Level="Output">0x{0:x4}.3 Checking entry description...</Description>
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>CoeComm.Dict<!--CheckEntryDescription.ObjectDictionary-->
						</Parameter>
						<Parameter>online<!--CheckEntryDescription.DictionaryType-->
						</Parameter>
						<Parameter>CoeComm.Index<!--CheckEntryDescription.Index-->
						</Parameter>
						<Parameter>3<!--CheckEntryDescription.SubIndex-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.LevelWarning-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.CaseSensitive-->
						</Parameter>
						<Parameter>"Revision Number","Revision"</Parameter>
						<!--CheckEntryDescription.Expected.Name-->
						<Parameter>7<!--CheckEntryDescription.Expected.Type-->
						</Parameter>
						<Parameter>true<!--CheckEntryDescription.Expected.Access.ReadInPreOp-->
						</Parameter>
						<Parameter>true<!--CheckEntryDescription.Expected.Access.ReadInSafeOp-->
						</Parameter>
						<Parameter>true<!--CheckEntryDescription.Expected.Access.ReadInOp-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.Expected.Access.WriteInPreOp-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.Expected.Access.WriteInSafeOp-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.Expected.Access.WriteInOp-->
						</Parameter>
						<Parameter>EmptyString<!--CheckEntryDescription.Expected.Category-->
						</Parameter>
						<Parameter>None<!--CheckEntryDescription.Expected.PdoMapping-->
						</Parameter>
						<Parameter>null<!--CheckEntryDescription.Expected.DefaultData-->
						</Parameter>
						<Parameter>null<!--CheckEntryDescription.Expected.MinData-->
						</Parameter>
						<Parameter>null<!--CheckEntryDescription.Expected.MaxData-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.Expected.Settings-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.Expected.Backup-->
						</Parameter>
						<Parameter>32<!--CheckEntryDescription.Expected.BitSize-->
						</Parameter>
						<Parameter>80<!--CheckEntryDescription.Expected.BitOffs-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.AllowEnumDataType-->
						</Parameter>
						<OutParameter>CoeComm.bError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>CoeComm.bError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="CoeComm.bResult">false</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="VerifySi4Descr">
					<Description Id="12" Param0="CoeComm.Index" Level="Output">0x{0:x4}.4 Checking entry description...</Description>
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>CoeComm.Dict<!--CheckEntryDescription.ObjectDictionary-->
						</Parameter>
						<Parameter>online<!--CheckEntryDescription.DictionaryType-->
						</Parameter>
						<Parameter>CoeComm.Index<!--CheckEntryDescription.Index-->
						</Parameter>
						<Parameter>4<!--CheckEntryDescription.SubIndex-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.LevelWarning-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.CaseSensitive-->
						</Parameter>
						<Parameter>"Serial Number"</Parameter>
						<!--CheckEntryDescription.Expected.Name-->
						<Parameter>7<!--CheckEntryDescription.Expected.Type-->
						</Parameter>
						<Parameter>true<!--CheckEntryDescription.Expected.Access.ReadInPreOp-->
						</Parameter>
						<Parameter>true<!--CheckEntryDescription.Expected.Access.ReadInSafeOp-->
						</Parameter>
						<Parameter>true<!--CheckEntryDescription.Expected.Access.ReadInOp-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.Expected.Access.WriteInPreOp-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.Expected.Access.WriteInSafeOp-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.Expected.Access.WriteInOp-->
						</Parameter>
						<Parameter>EmptyString<!--CheckEntryDescription.Expected.Category-->
						</Parameter>
						<Parameter>None<!--CheckEntryDescription.Expected.PdoMapping-->
						</Parameter>
						<Parameter>null<!--CheckEntryDescription.Expected.DefaultData-->
						</Parameter>
						<Parameter>null<!--CheckEntryDescription.Expected.MinData-->
						</Parameter>
						<Parameter>null<!--CheckEntryDescription.Expected.MaxData-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.Expected.Settings-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.Expected.Backup-->
						</Parameter>
						<Parameter>32<!--CheckEntryDescription.Expected.BitSize-->
						</Parameter>
						<Parameter>112<!--CheckEntryDescription.Expected.BitOffs-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.AllowEnumDataType-->
						</Parameter>
						<OutParameter>CoeComm.bError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>CoeComm.bError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="CoeComm.bResult">false</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="WriteSuccess">
					<Compare>
						<Equal>
							<Value1>CoeComm.bResult</Value1>
							<Value2>true</Value2>
							<ReturnSuccess Id="13" Param0="CoeComm.Index" Param1="CoeComm.TmpName">{1} (0x{0:x4}) : the object structure is valid.</ReturnSuccess>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>CoeComm.bResult</Value1>
							<Value2>false</Value2>
							<RaiseError Id="14"></RaiseError>
						</Equal>
					</Compare>
				</TestStep>
			</TestCase>
			<TestCase Name="Error Setting Object (0x10F1)" CaseId="7">
				<?MAX_OUTPUT_ID 12?>
				<Description>
					<Purpose>Check the Error Setting Object (index 0x10F1). The test case ensures the correct object structure and naming.</Purpose>
					<PreCondition>Device supports Mailbox communication via CoE protocol
ESI provides a online object dictionary</PreCondition>
					<Action>Check the object structure:
1. Name
2. Data Type
3. Object Code
4. Access
5. Pdo mapping
6. Bit Size</Action>
					<PostCondition>The structure shall be as described in ETG.1020 19.2.2 Identity Object. If at least one value is not equal to the expected value the test case returns a error list containing all errors.
Object Description:
1. Warning if the name is not 'Error Setting'
6. Error if BitSize is not 64
Subindex 1:
1.1. Warning if the name is not 'Local Error Reaction'
2.1. Error if data type is not 'USINT32'
4.1. Error if access is not 'Read Write'
5.1. Error if Pdo mapping is defined
6.1. Error if BitSize is not 32
Subindex 2:
1.2. Warning if the name is not 'Sync Error Counter Limit'
2.2. Error if data type is not 'USINT16'
4.2. Error if access is not 'Read Write'
5.2. Error if Pdo mapping is defined
6.2. Error if BitSize is not 16</PostCondition>
					<References>
						<Reference Chapter="19.2.2.2 Error Setting" Specification="ETG.1020"></Reference>
					</References>
					<Mandatory>true</Mandatory>
				</Description>
				<TestStep>
					<CallTestFunction Name="Reset"></CallTestFunction>
				</TestStep>
				<TestStep Name="CheckMbxCoeSupport">
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Mailbox</Value1>
							<Value2>false</Value2>
							<SkipCase Id="0">Device does not support mailbox communication</SkipCase>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Mailbox.CoE</Value1>
							<Value2>false</Value2>
							<SkipCase Id="1">Device does not support CoE</SkipCase>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Mailbox.CoE.SdoInfo</Value1>
							<Value2>false</Value2>
							<SkipCase Id="2">Device does not support SdoInfo</SkipCase>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="SetDefaultMandatoryValue">
					<SetVariable Target="CoeComm.IsMandatroy">false</SetVariable>
				</TestStep>
				<TestStep Name="InitResult">
					<SetVariable Target="CoeComm.bResult">true</SetVariable>
				</TestStep>
				<TestStep Name="InitIndex">
					<SetVariable Target="CoeComm.Index">#x10F1</SetVariable>
				</TestStep>
				<TestStep Name="InitObjName">
					<SetVariable Target="CoeComm.TmpName">Error Setting</SetVariable>
				</TestStep>
				<TestStep>
					<InitArray TargetArray="CoeComm.TmpNames" Length="3"></InitArray>
				</TestStep>
				<TestStep>
					<SetArrayItem TargetArray="CoeComm.TmpNames" Index="0">CoeComm.TmpName</SetArrayItem>
				</TestStep>
				<TestStep>
					<SetArrayItem TargetArray="CoeComm.TmpNames" Index="1">"Error Settings"</SetArrayItem>
				</TestStep>
				<TestStep>
					<SetArrayItem TargetArray="CoeComm.TmpNames" Index="2">"Sync Error Settings"</SetArrayItem>
				</TestStep>
				<TestStep Name="CallInitMailbox">
					<CallFunction>SetStateMachTimeouts</CallFunction>
				</TestStep>
				<TestStep Name="GoToPreOp">
					<RunToState Timeout="preOPTimeout">
						<State>PREOP</State>
					</RunToState>
					<RaiseErrorOnFailure Id="3">Failed to go to PreOP!</RaiseErrorOnFailure>
				</TestStep>
				<TestStep Name="GetOD">
					<Description Id="4">Getting online dictionary from assigned ESI...</Description>
					<GetObjectDictionary Target="CoeComm.Dict">
						<DictionaryType>Online</DictionaryType>
					</GetObjectDictionary>
					<RaiseErrorOnFailure Id="5">Failed to get online dictionary.</RaiseErrorOnFailure>
				</TestStep>
				<TestStep Name="SkipCheckObjDefinedIfMandatory">
					<!--In case of a not defined object the function Check Object Description will return an error-->
					<Compare>
						<Equal>
							<Value1>CoeComm.IsMandatroy</Value1>
							<Value2>true</Value2>
							<GotoStep>VerifyObjDescr</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CheckIfObjIsDefined">
					<CallTestFunction Name="IsObjectDefined">
						<Parameter>CoeComm.Dict</Parameter>
						<Parameter>CoeComm.Index</Parameter>
						<OutParameter>CoeComm.TmpBool</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>CoeComm.TmpBool</Value1>
							<Value2>false</Value2>
							<SkipCase Id="6" Param0="CoeComm.Index" Param1="CoeComm.TmpName">The object '{1}' 0x{0:x4} is not defined.</SkipCase>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="VerifyObjDescr">
					<Description Id="7" Param0="CoeComm.Index" Level="Output">0x{0:x4} Checking object description...</Description>
					<CallTestFunction Name="CheckObjectDescription">
						<Parameter>CoeComm.Dict</Parameter>
						<Parameter>online</Parameter>
						<Parameter>CoeComm.Index<!--VerifyObjectDescription.Index-->
						</Parameter>
						<Parameter>false<!--VerifyObjectDescription.LevelWarning-->
						</Parameter>
						<Parameter>false</Parameter>
						<Parameter>CoeComm.TmpNames<!--VerifyObjectDescription.Expected.Names-->
						</Parameter>
						<Parameter>0<!--VerifyObjectDescription.Expected.Type-->
						</Parameter>
						<Parameter>9<!--VerifyObjectDescription.Expected.ObjectCode-->
						</Parameter>
						<Parameter>64<!--VerifyObjectDescription.Expected.BitSize-->
						</Parameter>
						<OutParameter>CoeComm.bError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>CoeComm.bError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="CoeComm.bResult">false</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="VerifySi0Descr">
					<Description Id="8" Param0="CoeComm.Index" Level="Output">0x{0:x4}.0 Checking entry description...</Description>
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>CoeComm.Dict<!--CheckEntryDescription.ObjectDictionary-->
						</Parameter>
						<Parameter>online<!--CheckEntryDescription.DictionaryType-->
						</Parameter>
						<Parameter>CoeComm.Index<!--CheckEntryDescription.Index-->
						</Parameter>
						<Parameter>0<!--CheckEntryDescription.SubIndex-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.LevelWarning-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.CaseSensitive-->
						</Parameter>
						<Parameter>EmptyString<!--CheckEntryDescription.Expected.Name-->
						</Parameter>
						<Parameter>5<!--CheckEntryDescription.Expected.Type-->
						</Parameter>
						<Parameter>true<!--CheckEntryDescription.Expected.Access.ReadInPreOp-->
						</Parameter>
						<Parameter>true<!--CheckEntryDescription.Expected.Access.ReadInSafeOp-->
						</Parameter>
						<Parameter>true<!--CheckEntryDescription.Expected.Access.ReadInOp-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.Expected.Access.WriteInPreOp-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.Expected.Access.WriteInSafeOp-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.Expected.Access.WriteInOp-->
						</Parameter>
						<Parameter>EmptyString<!--CheckEntryDescription.Expected.Category-->
						</Parameter>
						<Parameter>None<!--CheckEntryDescription.Expected.PdoMapping-->
						</Parameter>
						<Parameter>null<!--CheckEntryDescription.Expected.DefaultData-->
						</Parameter>
						<Parameter>null<!--CheckEntryDescription.Expected.MinData-->
						</Parameter>
						<Parameter>null<!--CheckEntryDescription.Expected.MaxData-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.Expected.Settings-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.Expected.Backup-->
						</Parameter>
						<Parameter>8<!--CheckEntryDescription.Expected.BitSize-->
						</Parameter>
						<Parameter>0<!--CheckEntryDescription.Expected.BitOffs-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.AllowEnumDataType-->
						</Parameter>
						<OutParameter>CoeComm.bError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>CoeComm.bError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="CoeComm.bResult">false</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="VerifySi1Descr">
					<Description Id="9" Param0="CoeComm.Index" Level="Output">0x{0:x4}.1 Checking entry description...</Description>
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>CoeComm.Dict<!--CheckEntryDescription.ObjectDictionary-->
						</Parameter>
						<Parameter>online<!--CheckEntryDescription.DictionaryType-->
						</Parameter>
						<Parameter>CoeComm.Index<!--CheckEntryDescription.Index-->
						</Parameter>
						<Parameter>1<!--CheckEntryDescription.SubIndex-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.LevelWarning-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.CaseSensitive-->
						</Parameter>
						<Parameter>"Local Error Reaction"</Parameter>
						<!--CheckEntryDescription.Expected.Name-->
						<Parameter>7<!--CheckEntryDescription.Expected.Type-->
						</Parameter>
						<Parameter>true<!--CheckEntryDescription.Expected.Access.ReadInPreOp-->
						</Parameter>
						<Parameter>true<!--CheckEntryDescription.Expected.Access.ReadInSafeOp-->
						</Parameter>
						<Parameter>true<!--CheckEntryDescription.Expected.Access.ReadInOp-->
						</Parameter>
						<Parameter>true<!--CheckEntryDescription.Expected.Access.WriteInPreOp-->
						</Parameter>
						<Parameter>true<!--CheckEntryDescription.Expected.Access.WriteInSafeOp-->
						</Parameter>
						<Parameter>true<!--CheckEntryDescription.Expected.Access.WriteInOp-->
						</Parameter>
						<Parameter>EmptyString<!--CheckEntryDescription.Expected.Category-->
						</Parameter>
						<Parameter>None<!--CheckEntryDescription.Expected.PdoMapping-->
						</Parameter>
						<Parameter>null<!--CheckEntryDescription.Expected.DefaultData-->
						</Parameter>
						<Parameter>null<!--CheckEntryDescription.Expected.MinData-->
						</Parameter>
						<Parameter>null<!--CheckEntryDescription.Expected.MaxData-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.Expected.Settings-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.Expected.Backup-->
						</Parameter>
						<Parameter>32<!--CheckEntryDescription.Expected.BitSize-->
						</Parameter>
						<Parameter>16<!--CheckEntryDescription.Expected.BitOffs-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.AllowEnumDataType-->
						</Parameter>
						<OutParameter>CoeComm.bError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>CoeComm.bError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="CoeComm.bResult">false</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="VerifySi2Descr">
					<Description Id="10" Param0="CoeComm.Index" Level="Output">0x{0:x4}.2 Checking entry description...</Description>
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>CoeComm.Dict<!--CheckEntryDescription.ObjectDictionary-->
						</Parameter>
						<Parameter>online<!--CheckEntryDescription.DictionaryType-->
						</Parameter>
						<Parameter>CoeComm.Index<!--CheckEntryDescription.Index-->
						</Parameter>
						<Parameter>2<!--CheckEntryDescription.SubIndex-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.LevelWarning-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.CaseSensitive-->
						</Parameter>
						<Parameter>"Sync Error Counter Limit","Sync Error Count Limit"</Parameter>
						<!--CheckEntryDescription.Expected.Name-->
						<Parameter>6<!--CheckEntryDescription.Expected.Type-->
						</Parameter>
						<Parameter>true<!--CheckEntryDescription.Expected.Access.ReadInPreOp-->
						</Parameter>
						<Parameter>true<!--CheckEntryDescription.Expected.Access.ReadInSafeOp-->
						</Parameter>
						<Parameter>true<!--CheckEntryDescription.Expected.Access.ReadInOp-->
						</Parameter>
						<Parameter>true<!--CheckEntryDescription.Expected.Access.WriteInPreOp-->
						</Parameter>
						<Parameter>true<!--CheckEntryDescription.Expected.Access.WriteInSafeOp-->
						</Parameter>
						<Parameter>true<!--CheckEntryDescription.Expected.Access.WriteInOp-->
						</Parameter>
						<Parameter>EmptyString<!--CheckEntryDescription.Expected.Category-->
						</Parameter>
						<Parameter>None<!--CheckEntryDescription.Expected.PdoMapping-->
						</Parameter>
						<Parameter>null<!--CheckEntryDescription.Expected.DefaultData-->
						</Parameter>
						<Parameter>null<!--CheckEntryDescription.Expected.MinData-->
						</Parameter>
						<Parameter>null<!--CheckEntryDescription.Expected.MaxData-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.Expected.Settings-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.Expected.Backup-->
						</Parameter>
						<Parameter>16<!--CheckEntryDescription.Expected.BitSize-->
						</Parameter>
						<Parameter>48<!--CheckEntryDescription.Expected.BitOffs-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.AllowEnumDataType-->
						</Parameter>
						<OutParameter>CoeComm.bError</OutParameter>
					</CallTestFunction>
				</TestStep>
				<TestStep Name="WriteSuccess">
					<Compare>
						<Equal>
							<Value1>CoeComm.bResult</Value1>
							<Value2>true</Value2>
							<ReturnSuccess Id="11" Param0="CoeComm.Index" Param1="CoeComm.TmpName">{1} (0x{0:x4}) : the object structure is valid.</ReturnSuccess>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>CoeComm.bResult</Value1>
							<Value2>false</Value2>
							<RaiseError Id="12"></RaiseError>
						</Equal>
					</Compare>
				</TestStep>
			</TestCase>
			<TestCase Name="Diagnosis History Object (0x10F3)" CaseId="8">
				<?MAX_OUTPUT_ID 24?>
				<Description>
					<PreCondition>- online OD defined
- object 0x10F3 defined</PreCondition>
					<Action>Check object structure accoring ETG.1020</Action>
					<PostCondition>Error if the object does not match the description in the ETG.1020</PostCondition>
					<ProposalForSolution></ProposalForSolution>
					<References>
						<Reference Specification="ETG.1020"></Reference>
					</References>
					<Mandatory>true</Mandatory>
				</Description>
				<TestStep Name="InitResult">
					<SetVariable Target="strResult">EmptyString</SetVariable>
				</TestStep>
				<TestStep Name="ResetDuT">
					<CallTestFunction Name="Reset"></CallTestFunction>
				</TestStep>
				<TestStep Name="CheckMbxCoeSupport">
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Mailbox</Value1>
							<Value2>false</Value2>
							<SkipCase Id="0">Device does not support mailbox communication</SkipCase>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Mailbox.CoE</Value1>
							<Value2>false</Value2>
							<SkipCase Id="1">Device does not support CoE</SkipCase>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Mailbox.CoE.SdoInfo</Value1>
							<Value2>false</Value2>
							<SkipCase Id="2">Device does not support SdoInfo</SkipCase>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CheckIfOfflineOdAvailable">
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Dictionary</Value1>
							<Value2>false</Value2>
							<SkipCase Id="3">No offline object dictionary defined.</SkipCase>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="GetObjectIndexInlcOffset">
					<SetVariable Target="u16ObjectIndexInclOffset">#x10F3</SetVariable>
				</TestStep>
				<TestStep Name="SetObjectMandatoryIndication">
					<SetVariable Target="bObjectEntryIsMandatory">false</SetVariable>
					<WriteLine Id="4" Param0="u16ObjectIndexInclOffset" Level="Verbose">0x{0:X4}.0 'Diagnosis History Object' may be available</WriteLine>
				</TestStep>
				<TestStep Name="CallInitMailbox">
					<CallFunction>SetStateMachTimeouts</CallFunction>
				</TestStep>
				<TestStep Name="GoToPreOp">
					<StopCyclicFrames></StopCyclicFrames>
				</TestStep>
				<TestStep>
					<RunToState Timeout="preOPTimeout">
						<State>PREOP</State>
					</RunToState>
					<RaiseErrorOnFailure Id="5">Failed to go to PreOP!</RaiseErrorOnFailure>
				</TestStep>
				<TestStep Name="LoadDeviceObjectDictionary">
					<Description Id="6" Level="Verbose">VerifyObject : Load 'online' object dictionary for testing.</Description>
					<GetObjectDictionary Target="odDeviceObjectdictionary">
						<DictionaryType>Online</DictionaryType>
					</GetObjectDictionary>
					<RaiseErrorOnFailure Id="7">VerifyObject : failed to load online object dictionary.</RaiseErrorOnFailure>
				</TestStep>
				<TestStep Name="CheckIfObjectExists">
					<GetObjectDescription SourceDictionary="odDeviceObjectdictionary" Index="u16ObjectIndexInclOffset" SubIndex="-1"></GetObjectDescription>
					<GotoOnSuccess>CallCheckObjectDescription</GotoOnSuccess>
				</TestStep>
				<TestStep Name="HandleNotExistingObject">
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="8" Param0="u16ObjectIndexInclOffset" Level="Output">The optional/conditional object 0x{0:X4} 'Diagnosis History Object' does not exists.)</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>END</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CallCheckObjectDescription">
					<Description Id="9" Param0="u16ObjectIndexInclOffset" Level="Output">Verify the object description 0x{0:X4} 'Diagnosis History Object'.</Description>
					<CallTestFunction Name="CheckObjectDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"online"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>false</Parameter>
						<Parameter>true</Parameter>
						<Parameter>"Diagnosis History"</Parameter>
						<Parameter>null</Parameter>
						<Parameter>9</Parameter>
						<Parameter>-1</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<GotoStep>END</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="InitEntryBittOffset">
					<SetVariable Target="i32CurrentBitOffset">0</SetVariable>
				</TestStep>
				<TestStep Name="StartSi0">
					<Description Id="10" Level="Output">Start validate SubIndex0</Description>
				</TestStep>
				<TestStep Name="SetSi0MandatoryIndication">
					<SetVariable Target="bObjectEntryIsMandatory">false</SetVariable>
					<WriteLine Id="11" Param0="u16ObjectIndexInclOffset" Level="Verbose">0x{0:X4}.0 'Diagnosis History Object' may be available</WriteLine>
				</TestStep>
				<TestStep Name="CallSi0CheckEntryDescription">
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"online"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>0</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>null</Parameter>
						<Parameter>5</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>null</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>null</Parameter>
						<Parameter>null</Parameter>
						<Parameter>null</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>8</Parameter>
						<Parameter>i32CurrentBitOffset</Parameter>
						<Parameter>true</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="EndSi0">
					<SetVariable Target="i32CurrentBitOffset">16</SetVariable>
				</TestStep>
				<TestStep Name="StartSi1">
					<Description Id="12" Level="Output">Start validate SubIndex1</Description>
				</TestStep>
				<TestStep Name="SetSi1MandatoryIndication">
					<SetVariable Target="bObjectEntryIsMandatory">true</SetVariable>
					<WriteLine Id="13" Param0="u16ObjectIndexInclOffset" Level="Verbose">0x{0:X4}.1 'Maximum Messages' shall be available</WriteLine>
				</TestStep>
				<TestStep Name="CallSi1CheckEntryDescription">
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"online"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>1</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>"Maximum Messages"</Parameter>
						<Parameter>5</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>null</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>8</Parameter>
						<Parameter>i32CurrentBitOffset</Parameter>
						<Parameter>true</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="EndSi1">
					<SetVariable Target="i32CurrentBitOffset">i32CurrentBitOffset + 8</SetVariable>
				</TestStep>
				<TestStep Name="StartSi2">
					<Description Id="14" Level="Output">Start validate SubIndex2</Description>
				</TestStep>
				<TestStep Name="SetSi2MandatoryIndication">
					<SetVariable Target="bObjectEntryIsMandatory">true</SetVariable>
					<WriteLine Id="15" Param0="u16ObjectIndexInclOffset" Level="Verbose">0x{0:X4}.2 'Newest Message' shall be available</WriteLine>
				</TestStep>
				<TestStep Name="CallSi2CheckEntryDescription">
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"online"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>2</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>"Newest Message"</Parameter>
						<Parameter>5</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>null</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>8</Parameter>
						<Parameter>i32CurrentBitOffset</Parameter>
						<Parameter>true</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="EndSi2">
					<SetVariable Target="i32CurrentBitOffset">i32CurrentBitOffset + 8</SetVariable>
				</TestStep>
				<TestStep Name="StartSi3">
					<Description Id="16" Level="Output">Start validate SubIndex3</Description>
				</TestStep>
				<TestStep Name="SetSi3MandatoryIndication">
					<SetVariable Target="bObjectEntryIsMandatory">true</SetVariable>
					<WriteLine Id="17" Param0="u16ObjectIndexInclOffset" Level="Verbose">0x{0:X4}.3 'Newest Acknowledged Message' shall be available</WriteLine>
				</TestStep>
				<TestStep Name="CallSi3CheckEntryDescription">
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"online"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>3</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>"Newest Acknowledged Message"</Parameter>
						<Parameter>5</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>null</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>8</Parameter>
						<Parameter>i32CurrentBitOffset</Parameter>
						<Parameter>true</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="EndSi3">
					<SetVariable Target="i32CurrentBitOffset">i32CurrentBitOffset + 8</SetVariable>
				</TestStep>
				<TestStep Name="SetSi4MandatoryIndication">
					<SetVariable Target="bObjectEntryIsMandatory">true</SetVariable>
					<WriteLine Id="18" Param0="u16ObjectIndexInclOffset" Level="Verbose">0x{0:X4}.4 'New Messages Available' shall be available</WriteLine>
				</TestStep>
				<TestStep Name="CallSi4CheckEntryDescription">
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"online"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>4</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>"New Messages Available"</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>null</Parameter>
						<Parameter>null</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>i32CurrentBitOffset</Parameter>
						<Parameter>true</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="EndSi4">
					<!--add 7 implicit padding bits (the next entry is an uint16 value which always starts at an even word address)-->
					<SetVariable Target="i32CurrentBitOffset">i32CurrentBitOffset + 8</SetVariable>
				</TestStep>
				<TestStep Name="StartSi5">
					<Description Id="19" Level="Output">Start validate SubIndex5</Description>
				</TestStep>
				<TestStep Name="SetSi5MandatoryIndication">
					<SetVariable Target="bObjectEntryIsMandatory">true</SetVariable>
					<WriteLine Id="20" Param0="u16ObjectIndexInclOffset" Level="Verbose">0x{0:X4}.5 'Flags' shall be available</WriteLine>
				</TestStep>
				<TestStep Name="CallSi5CheckEntryDescription">
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"online"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>5</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>"Flags"</Parameter>
						<Parameter>6</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>null</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>16</Parameter>
						<Parameter>i32CurrentBitOffset</Parameter>
						<Parameter>true</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="EndSi5">
					<SetVariable Target="i32CurrentBitOffset">i32CurrentBitOffset + 16</SetVariable>
				</TestStep>
				<TestStep Name="StartSi6">
					<SetVariable Target="u8DiagMessageLoop">5</SetVariable>
				</TestStep>
				<TestStep Name="LoopStart">
					<SetVariable Target="u8DiagMessageLoop">u8DiagMessageLoop + 1</SetVariable>
				</TestStep>
				<TestStep Name="CheckIfSi6Exists">
					<Description Id="21" Level="Output" Param0="u8DiagMessageLoop">Start validate SubIndex {0} (diag message)</Description>
					<GetObjectDescription SourceDictionary="odDeviceObjectdictionary" Index="u16ObjectIndexInclOffset" SubIndex="u8DiagMessageLoop"></GetObjectDescription>
					<GotoOnFailure>HandleNotExistingSi6</GotoOnFailure>
				</TestStep>
				<TestStep>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>CallSi6CheckEntryDescription</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="HandleNotExistingSi6">
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="22" Param0="u16ObjectIndexInclOffset" Level="Verbose" Param1="u8DiagMessageLoop">The diag message 0x{0:X4}.{1} is not defined.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>EndSi6</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CallSi6CheckEntryDescription">
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"online"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>u8DiagMessageLoop</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>null</Parameter>
						<Parameter>10</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>null</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>true</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="EndSi6">
					<Compare>
						<Lower>
							<Value1>u8DiagMessageLoop</Value1>
							<Value2>255</Value2>
							<GotoStep>LoopStart</GotoStep>
						</Lower>
					</Compare>
				</TestStep>
				<TestStep Name="END">
					<Compare>
						<Equal>
							<Value1>strResult</Value1>
							<Value2>EmptyString</Value2>
							<ReturnSuccess Id="23">Test succeed</ReturnSuccess>
						</Equal>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>strResult</Value1>
							<Value2>EmptyString</Value2>
							<RaiseError Id="24"></RaiseError>
						</NotEqual>
					</Compare>
				</TestStep>
			</TestCase>
			<TestCase Name="RxPDO Parameter (0x1400 .. 0x15FF)" CaseId="9">
				<?MAX_OUTPUT_ID 14?>
				<Description>
					<Purpose>Check the Structure of the RxPDO Parameter objects</Purpose>
					<PreCondition>Device supports Mailbox communication via CoE protocol
ESI provides a offline object dictionary</PreCondition>
					<Action>Check the object structure:
1. Name
2. Data Type
3. Object Code
4. Access
5. Pdo mapping
6. Bit Size</Action>
					<PostCondition>The structure shall be as described in ETG.1020 </PostCondition>
					<References>
						<Reference Specification="ETG.1020"></Reference>
					</References>
					<Mandatory>true</Mandatory>
				</Description>
				<TestStep>
					<CallTestFunction Name="Reset"></CallTestFunction>
				</TestStep>
				<TestStep Name="CheckMbxCoeSupport">
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Mailbox</Value1>
							<Value2>false</Value2>
							<SkipCase Id="0">Device does not support mailbox communication</SkipCase>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Mailbox.CoE</Value1>
							<Value2>false</Value2>
							<SkipCase Id="1">Device does not support CoE</SkipCase>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Mailbox.CoE.SdoInfo</Value1>
							<Value2>false</Value2>
							<SkipCase Id="2">Device does not support SdoInfo</SkipCase>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="SetDefaultMandatoryValue">
					<SetVariable Target="CoeComm.IsMandatroy">false</SetVariable>
				</TestStep>
				<TestStep Name="InitTestRunIndication">
					<SetVariable Target="CoeComm.bTestExecuted">false</SetVariable>
				</TestStep>
				<TestStep Name="InitResult">
					<SetVariable Target="CoeComm.bResult">true</SetVariable>
				</TestStep>
				<TestStep Name="InitObjName">
					<SetVariable Target="CoeComm.TmpName">RxPDO Parameter</SetVariable>
				</TestStep>
				<TestStep Name="InitIndex">
					<SetVariable Target="CoeComm.Index">#x1400</SetVariable>
				</TestStep>
				<TestStep Name="CallInitMailbox">
					<CallFunction>SetStateMachTimeouts</CallFunction>
				</TestStep>
				<TestStep Name="GoToPreOp">
					<RunToState Timeout="preOPTimeout">
						<State>PREOP</State>
					</RunToState>
					<RaiseErrorOnFailure Id="3">Failed to go to PreOP!</RaiseErrorOnFailure>
				</TestStep>
				<TestStep Name="GetOD">
					<Description Id="4">Getting online dictionary from assigned ESI...</Description>
					<GetObjectDictionary Target="CoeComm.Dict">
						<DictionaryType>Online</DictionaryType>
					</GetObjectDictionary>
					<RaiseErrorOnFailure Id="5">Failed to get online dictionary.</RaiseErrorOnFailure>
				</TestStep>
				<TestStep Name="ObjLoopSTART"></TestStep>
				<TestStep Name="SkipCheckObjDefinedIfMandatory">
					<!--In case of a not defined object the function Check Object Description will return an error-->
					<Compare>
						<Equal>
							<Value1>CoeComm.IsMandatroy</Value1>
							<Value2>true</Value2>
							<GotoStep>StartTest</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CheckIfObjIsDefined">
					<CallTestFunction Name="IsObjectDefined">
						<Parameter>CoeComm.Dict</Parameter>
						<Parameter>CoeComm.Index</Parameter>
						<OutParameter>CoeComm.TmpBool</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>CoeComm.TmpBool</Value1>
							<Value2>false</Value2>
							<GotoStep>ObjLoopEND</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="StartTest">
					<SetVariable Target="CoeComm.bTestExecuted">true</SetVariable>
				</TestStep>
				<TestStep Name="VerifyObjDescr">
					<Description Id="6" Param0="CoeComm.Index" Level="Output">0x{0:x4} Checking object description...</Description>
					<CallTestFunction Name="CheckObjectDescription">
						<Parameter>CoeComm.Dict</Parameter>
						<Parameter>online</Parameter>
						<Parameter>CoeComm.Index<!--VerifyObjectDescription.Index-->
						</Parameter>
						<Parameter>false<!--VerifyObjectDescription.LevelWarning-->
						</Parameter>
						<Parameter>false</Parameter>
						<Parameter>null<!--VerifyObjectDescription.Expected.Names-->
						</Parameter>
						<Parameter>0<!--VerifyObjectDescription.Expected.Type-->
						</Parameter>
						<Parameter>9<!--VerifyObjectDescription.Expected.ObjectCode-->
						</Parameter>
						<Parameter>-1<!--VerifyObjectDescription.Expected.BitSize-->
						</Parameter>
						<OutParameter>CoeComm.bError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>CoeComm.bError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="CoeComm.bResult">false</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="VerifySi0Descr">
					<Description Id="7" Param0="CoeComm.Index" Level="Output">0x{0:x4}.0 Checking entry description...</Description>
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>CoeComm.Dict<!--CheckEntryDescription.ObjectDictionary-->
						</Parameter>
						<Parameter>online<!--CheckEntryDescription.DictionaryType-->
						</Parameter>
						<Parameter>CoeComm.Index<!--CheckEntryDescription.Index-->
						</Parameter>
						<Parameter>0<!--CheckEntryDescription.SubIndex-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.LevelWarning-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.CaseSensitive-->
						</Parameter>
						<Parameter>EmptyString<!--CheckEntryDescription.Expected.Name-->
						</Parameter>
						<Parameter>5<!--CheckEntryDescription.Expected.Type-->
						</Parameter>
						<Parameter>true<!--CheckEntryDescription.Expected.Access.ReadInPreOp-->
						</Parameter>
						<Parameter>true<!--CheckEntryDescription.Expected.Access.ReadInSafeOp-->
						</Parameter>
						<Parameter>true<!--CheckEntryDescription.Expected.Access.ReadInOp-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.Expected.Access.WriteInPreOp-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.Expected.Access.WriteInSafeOp-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.Expected.Access.WriteInOp-->
						</Parameter>
						<Parameter>EmptyString<!--CheckEntryDescription.Expected.Category-->
						</Parameter>
						<Parameter>None<!--CheckEntryDescription.Expected.PdoMapping-->
						</Parameter>
						<Parameter>null<!--CheckEntryDescription.Expected.DefaultData-->
						</Parameter>
						<Parameter>null<!--CheckEntryDescription.Expected.MinData-->
						</Parameter>
						<Parameter>null<!--CheckEntryDescription.Expected.MaxData-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.Expected.Settings-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.Expected.Backup-->
						</Parameter>
						<Parameter>8<!--CheckEntryDescription.Expected.BitSize-->
						</Parameter>
						<Parameter>0<!--CheckEntryDescription.Expected.BitOffs-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.AllowEnumDataType-->
						</Parameter>
						<OutParameter>CoeComm.bError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>CoeComm.bError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="CoeComm.bResult">false</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CheckIfSubIndex6IsDefined">
					<CallTestFunction Name="IsEntryDefined">
						<Parameter>CoeComm.Dict</Parameter>
						<Parameter>CoeComm.Index</Parameter>
						<Parameter>6</Parameter>
						<OutParameter>CoeComm.TmpBool</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>CoeComm.TmpBool</Value1>
							<Value2>false</Value2>
							<GotoStep>CheckIfSubIndex7IsDefined</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="VerifySi6Descr">
					<Description Id="8" Param0="CoeComm.Index" Level="Output">0x{0:x4}.6 Checking entry description...</Description>
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>CoeComm.Dict<!--CheckEntryDescription.ObjectDictionary-->
						</Parameter>
						<Parameter>online<!--CheckEntryDescription.DictionaryType-->
						</Parameter>
						<Parameter>CoeComm.Index<!--CheckEntryDescription.Index-->
						</Parameter>
						<Parameter>6<!--CheckEntryDescription.SubIndex-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.LevelWarning-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.CaseSensitive-->
						</Parameter>
						<Parameter>"RxPDO Exculde RxPDOs","Exclude RxPDOs"</Parameter>
						<!--CheckEntryDescription.Expected.Name-->
						<Parameter>10<!--CheckEntryDescription.Expected.Type-->
						</Parameter>
						<Parameter>true<!--CheckEntryDescription.Expected.Access.ReadInPreOp-->
						</Parameter>
						<Parameter>true<!--CheckEntryDescription.Expected.Access.ReadInSafeOp-->
						</Parameter>
						<Parameter>true<!--CheckEntryDescription.Expected.Access.ReadInOp-->
						</Parameter>
						<Parameter>-1<!--CheckEntryDescription.Expected.Access.WriteInPreOp-->
						</Parameter>
						<Parameter>-1<!--CheckEntryDescription.Expected.Access.WriteInSafeOp-->
						</Parameter>
						<Parameter>-1<!--CheckEntryDescription.Expected.Access.WriteInOp-->
						</Parameter>
						<Parameter>"o"</Parameter>
						<!--CheckEntryDescription.Category-->
						<Parameter>None<!--CheckEntryDescription.Expected.PdoMapping-->
						</Parameter>
						<Parameter>null<!--CheckEntryDescription.Expected.DefaultData-->
						</Parameter>
						<Parameter>null<!--CheckEntryDescription.Expected.MinData-->
						</Parameter>
						<Parameter>null<!--CheckEntryDescription.Expected.MaxData-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.Expected.Settings-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.Expected.Backup-->
						</Parameter>
						<Parameter>-1<!--CheckEntryDescription.Expected.BitSize-->
						</Parameter>
						<Parameter>-1<!--CheckEntryDescription.Expected.BitOffs-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.AllowEnumDataType-->
						</Parameter>
						<OutParameter>CoeComm.bError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>CoeComm.bError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="CoeComm.bResult">false</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CheckIfSubIndex7IsDefined">
					<CallTestFunction Name="IsEntryDefined">
						<Parameter>CoeComm.Dict</Parameter>
						<Parameter>CoeComm.Index</Parameter>
						<Parameter>7</Parameter>
						<OutParameter>CoeComm.TmpBool</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>CoeComm.TmpBool</Value1>
							<Value2>false</Value2>
							<GotoStep>CheckIfSubIndex8IsDefined</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="VerifySi7Descr">
					<Description Id="9" Param0="CoeComm.Index" Level="Output">0x{0:x4}.7 Checking entry description...</Description>
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>CoeComm.Dict<!--CheckEntryDescription.ObjectDictionary-->
						</Parameter>
						<Parameter>online<!--CheckEntryDescription.DictionaryType-->
						</Parameter>
						<Parameter>CoeComm.Index<!--CheckEntryDescription.Index-->
						</Parameter>
						<Parameter>7<!--CheckEntryDescription.SubIndex-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.LevelWarning-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.CaseSensitive-->
						</Parameter>
						<Parameter>"RxPDO State"</Parameter>
						<!--CheckEntryDescription.Expected.Name-->
						<Parameter>1<!--CheckEntryDescription.Expected.Type-->
						</Parameter>
						<Parameter>true<!--CheckEntryDescription.Expected.Access.ReadInPreOp-->
						</Parameter>
						<Parameter>true<!--CheckEntryDescription.Expected.Access.ReadInSafeOp-->
						</Parameter>
						<Parameter>true<!--CheckEntryDescription.Expected.Access.ReadInOp-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.Expected.Access.WriteInPreOp-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.Expected.Access.WriteInSafeOp-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.Expected.Access.WriteInOp-->
						</Parameter>
						<Parameter>"o"</Parameter>
						<!--CheckEntryDescription.Expected.Category-->
						<Parameter>EmptyString<!--CheckEntryDescription.Expected.PdoMapping-->
						</Parameter>
						<Parameter>null<!--CheckEntryDescription.Expected.DefaultData-->
						</Parameter>
						<Parameter>null<!--CheckEntryDescription.Expected.MinData-->
						</Parameter>
						<Parameter>null<!--CheckEntryDescription.Expected.MaxData-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.Expected.Settings-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.Expected.Backup-->
						</Parameter>
						<Parameter>1<!--CheckEntryDescription.Expected.BitSize-->
						</Parameter>
						<Parameter>-1<!--CheckEntryDescription.Expected.BitOffs-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.AllowEnumDataType-->
						</Parameter>
						<OutParameter>CoeComm.bError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>CoeComm.bError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="CoeComm.bResult">false</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CheckIfSubIndex8IsDefined">
					<CallTestFunction Name="IsEntryDefined">
						<Parameter>CoeComm.Dict</Parameter>
						<Parameter>CoeComm.Index</Parameter>
						<Parameter>8</Parameter>
						<OutParameter>CoeComm.TmpBool</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>CoeComm.TmpBool</Value1>
							<Value2>false</Value2>
							<GotoStep>CheckIfSubIndex9IsDefined</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="VerifySi8Descr">
					<Description Id="10" Param0="CoeComm.Index" Level="Output">0x{0:x4}.8 Checking entry description...</Description>
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>CoeComm.Dict<!--CheckEntryDescription.ObjectDictionary-->
						</Parameter>
						<Parameter>online<!--CheckEntryDescription.DictionaryType-->
						</Parameter>
						<Parameter>CoeComm.Index<!--CheckEntryDescription.Index-->
						</Parameter>
						<Parameter>8<!--CheckEntryDescription.SubIndex-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.LevelWarning-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.CaseSensitive-->
						</Parameter>
						<Parameter>"RxPDO Control"</Parameter>
						<!--CheckEntryDescription.Expected.Name-->
						<Parameter>1<!--CheckEntryDescription.Expected.Type-->
						</Parameter>
						<Parameter>true<!--CheckEntryDescription.Expected.Access.ReadInPreOp-->
						</Parameter>
						<Parameter>true<!--CheckEntryDescription.Expected.Access.ReadInSafeOp-->
						</Parameter>
						<Parameter>true<!--CheckEntryDescription.Expected.Access.ReadInOp-->
						</Parameter>
						<Parameter>true<!--CheckEntryDescription.Expected.Access.WriteInPreOp-->
						</Parameter>
						<Parameter>true<!--CheckEntryDescription.Expected.Access.WriteInSafeOp-->
						</Parameter>
						<Parameter>true<!--CheckEntryDescription.Expected.Access.WriteInOp-->
						</Parameter>
						<Parameter>"o"</Parameter>
						<!--CheckEntryDescription.Expected.Category-->
						<Parameter>"rx"</Parameter>
						<!--CheckEntryDescription.Expected.PdoMapping-->
						<Parameter>null<!--CheckEntryDescription.Expected.DefaultData-->
						</Parameter>
						<Parameter>null<!--CheckEntryDescription.Expected.MinData-->
						</Parameter>
						<Parameter>null<!--CheckEntryDescription.Expected.MaxData-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.Expected.Settings-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.Expected.Backup-->
						</Parameter>
						<Parameter>1<!--CheckEntryDescription.Expected.BitSize-->
						</Parameter>
						<Parameter>-1<!--CheckEntryDescription.Expected.BitOffs-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.AllowEnumDataType-->
						</Parameter>
						<OutParameter>CoeComm.bError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>CoeComm.bError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="CoeComm.bResult">false</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CheckIfSubIndex9IsDefined">
					<CallTestFunction Name="IsEntryDefined">
						<Parameter>CoeComm.Dict</Parameter>
						<Parameter>CoeComm.Index</Parameter>
						<Parameter>9</Parameter>
						<OutParameter>CoeComm.TmpBool</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>CoeComm.TmpBool</Value1>
							<Value2>false</Value2>
							<GotoStep>ObjLoopEND</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="VerifySi9Descr">
					<Description Id="11" Param0="CoeComm.Index" Level="Output">0x{0:x4}.9 Checking entry description...</Description>
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>CoeComm.Dict<!--CheckEntryDescription.ObjectDictionary-->
						</Parameter>
						<Parameter>online<!--CheckEntryDescription.DictionaryType-->
						</Parameter>
						<Parameter>CoeComm.Index<!--CheckEntryDescription.Index-->
						</Parameter>
						<Parameter>9<!--CheckEntryDescription.SubIndex-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.LevelWarning-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.CaseSensitive-->
						</Parameter>
						<Parameter>"RxPDO Toggle","OutputUpdateCounter"</Parameter>
						<!--CheckEntryDescription.Expected.Name-->
						<Parameter>#xFFFF<!--CheckEntryDescription.Expected.Type-->
						</Parameter>
						<Parameter>true<!--CheckEntryDescription.Expected.Access.ReadInPreOp-->
						</Parameter>
						<Parameter>true<!--CheckEntryDescription.Expected.Access.ReadInSafeOp-->
						</Parameter>
						<Parameter>true<!--CheckEntryDescription.Expected.Access.ReadInOp-->
						</Parameter>
						<Parameter>true<!--CheckEntryDescription.Expected.Access.WriteInPreOp-->
						</Parameter>
						<Parameter>true<!--CheckEntryDescription.Expected.Access.WriteInSafeOp-->
						</Parameter>
						<Parameter>true<!--CheckEntryDescription.Expected.Access.WriteInOp-->
						</Parameter>
						<Parameter>"o"</Parameter>
						<!--CheckEntryDescription.Expected.Category-->
						<Parameter>EmptyString<!--CheckEntryDescription.Expected.PdoMapping-->
						</Parameter>
						<Parameter>null<!--CheckEntryDescription.Expected.DefaultData-->
						</Parameter>
						<Parameter>null<!--CheckEntryDescription.Expected.MinData-->
						</Parameter>
						<Parameter>null<!--CheckEntryDescription.Expected.MaxData-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.Expected.Settings-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.Expected.Backup-->
						</Parameter>
						<Parameter>-1<!--CheckEntryDescription.Expected.BitSize-->
						</Parameter>
						<Parameter>-1<!--CheckEntryDescription.Expected.BitOffs-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.AllowEnumDataType-->
						</Parameter>
						<OutParameter>CoeComm.bError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>CoeComm.bError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="CoeComm.bResult">false</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="ObjLoopEND">
					<SetVariable Target="CoeComm.Index">CoeComm.Index + 1</SetVariable>
					<Compare>
						<LowerOrEqual>
							<Value1>CoeComm.Index</Value1>
							<Value2>#x15FF</Value2>
							<GotoStep>ObjLoopSTART</GotoStep>
						</LowerOrEqual>
					</Compare>
				</TestStep>
				<TestStep Name="SetTestState">
					<Compare>
						<Equal>
							<Value1>CoeComm.bTestExecuted</Value1>
							<Value2>false</Value2>
							<SkipCase Id="12" Param0="CoeComm.TmpName">No '{0}' (0x1400 to 0x15FF) is defined.</SkipCase>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>CoeComm.bResult</Value1>
							<Value2>true</Value2>
							<ReturnSuccess Id="13" Param0="CoeComm.Index" Param1="CoeComm.TmpName">{1} (0x{0:x4}) : the object structure is valid.</ReturnSuccess>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>CoeComm.bResult</Value1>
							<Value2>false</Value2>
							<RaiseError Id="14"></RaiseError>
						</Equal>
					</Compare>
				</TestStep>
			</TestCase>
			<TestCase Name="TxPDO Parameter (0x1800 .. 0x19FF)" CaseId="10">
				<?MAX_OUTPUT_ID 13?>
				<Description>
					<Purpose>Check the Structure of the TxPDO Parameter objects</Purpose>
					<PreCondition>Device supports Mailbox communication via CoE protocol
ESI provides a offline object dictionary</PreCondition>
					<Action>Check the object structure:
1. Name
2. Data Type
3. Object Code
4. Access
5. Pdo mapping
6. Bit Size</Action>
					<PostCondition>The structure shall be as described in ETG.1020 </PostCondition>
					<References>
						<Reference Specification="ETG.1020"></Reference>
					</References>
					<Mandatory>true</Mandatory>
				</Description>
				<TestStep>
					<CallTestFunction Name="Reset"></CallTestFunction>
				</TestStep>
				<TestStep Name="CheckMbxCoeSupport">
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Mailbox</Value1>
							<Value2>false</Value2>
							<SkipCase Id="0">Device does not support mailbox communication</SkipCase>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Mailbox.CoE</Value1>
							<Value2>false</Value2>
							<SkipCase Id="1">Device does not support CoE</SkipCase>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Mailbox.CoE.SdoInfo</Value1>
							<Value2>false</Value2>
							<SkipCase Id="2">Device does not support SdoInfo</SkipCase>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="SetDefaultMandatoryValue">
					<SetVariable Target="CoeComm.IsMandatroy">false</SetVariable>
				</TestStep>
				<TestStep Name="InitTestRunIndication">
					<SetVariable Target="CoeComm.bTestExecuted">false</SetVariable>
				</TestStep>
				<TestStep Name="InitResult">
					<SetVariable Target="CoeComm.bResult">true</SetVariable>
				</TestStep>
				<TestStep Name="InitObjName">
					<SetVariable Target="CoeComm.TmpName">TxPDO Parameter</SetVariable>
				</TestStep>
				<TestStep Name="InitIndex">
					<SetVariable Target="CoeComm.Index">#x1800</SetVariable>
				</TestStep>
				<TestStep Name="CallInitMailbox">
					<CallFunction>SetStateMachTimeouts</CallFunction>
				</TestStep>
				<TestStep Name="GoToPreOp">
					<RunToState Timeout="preOPTimeout">
						<State>PREOP</State>
					</RunToState>
					<RaiseErrorOnFailure Id="3">Failed to go to PreOP!</RaiseErrorOnFailure>
				</TestStep>
				<TestStep Name="GetOD">
					<Description Id="4">Getting online dictionary from assigned ESI...</Description>
					<GetObjectDictionary Target="CoeComm.Dict">
						<DictionaryType>Online</DictionaryType>
					</GetObjectDictionary>
					<RaiseErrorOnFailure Id="5">Failed to get online dictionary.</RaiseErrorOnFailure>
				</TestStep>
				<TestStep Name="ObjLoopSTART"></TestStep>
				<TestStep Name="SkipCheckObjDefinedIfMandatory">
					<!--In case of a not defined object the function Check Object Description will return an error-->
					<Compare>
						<Equal>
							<Value1>CoeComm.IsMandatroy</Value1>
							<Value2>true</Value2>
							<GotoStep>StartTest</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CheckIfObjIsDefined">
					<CallTestFunction Name="IsObjectDefined">
						<Parameter>CoeComm.Dict</Parameter>
						<Parameter>CoeComm.Index</Parameter>
						<OutParameter>CoeComm.TmpBool</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>CoeComm.TmpBool</Value1>
							<Value2>false</Value2>
							<GotoStep>ObjLoopEND</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="StartTest">
					<SetVariable Target="CoeComm.bTestExecuted">true</SetVariable>
				</TestStep>
				<TestStep Name="VerifyObjDescr">
					<Description Id="6" Param0="CoeComm.Index" Level="Output">0x{0:x4} Checking object description...</Description>
					<CallTestFunction Name="CheckObjectDescription">
						<Parameter>CoeComm.Dict</Parameter>
						<Parameter>online</Parameter>
						<Parameter>CoeComm.Index<!--VerifyObjectDescription.Index-->
						</Parameter>
						<Parameter>false<!--VerifyObjectDescription.LevelWarning-->
						</Parameter>
						<Parameter>false</Parameter>
						<Parameter>null<!--VerifyObjectDescription.Expected.Names-->
						</Parameter>
						<Parameter>0<!--VerifyObjectDescription.Expected.Type-->
						</Parameter>
						<Parameter>9<!--VerifyObjectDescription.Expected.ObjectCode-->
						</Parameter>
						<Parameter>-1<!--VerifyObjectDescription.Expected.BitSize-->
						</Parameter>
						<OutParameter>CoeComm.bError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>CoeComm.bError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="CoeComm.bResult">false</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="VerifySi0Descr">
					<Description Id="7" Param0="CoeComm.Index" Level="Output">0x{0:x4}.0 Checking entry description...</Description>
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>CoeComm.Dict<!--CheckEntryDescription.ObjectDictionary-->
						</Parameter>
						<Parameter>online<!--CheckEntryDescription.DictionaryType-->
						</Parameter>
						<Parameter>CoeComm.Index<!--CheckEntryDescription.Index-->
						</Parameter>
						<Parameter>0<!--CheckEntryDescription.SubIndex-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.LevelWarning-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.CaseSensitive-->
						</Parameter>
						<Parameter>EmptyString<!--CheckEntryDescription.Expected.Name-->
						</Parameter>
						<Parameter>5<!--CheckEntryDescription.Expected.Type-->
						</Parameter>
						<Parameter>true<!--CheckEntryDescription.Expected.Access.ReadInPreOp-->
						</Parameter>
						<Parameter>true<!--CheckEntryDescription.Expected.Access.ReadInSafeOp-->
						</Parameter>
						<Parameter>true<!--CheckEntryDescription.Expected.Access.ReadInOp-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.Expected.Access.WriteInPreOp-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.Expected.Access.WriteInSafeOp-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.Expected.Access.WriteInOp-->
						</Parameter>
						<Parameter>EmptyString<!--CheckEntryDescription.Expected.Category-->
						</Parameter>
						<Parameter>None<!--CheckEntryDescription.Expected.PdoMapping-->
						</Parameter>
						<Parameter>null<!--CheckEntryDescription.Expected.DefaultData-->
						</Parameter>
						<Parameter>null<!--CheckEntryDescription.Expected.MinData-->
						</Parameter>
						<Parameter>null<!--CheckEntryDescription.Expected.MaxData-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.Expected.Settings-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.Expected.Backup-->
						</Parameter>
						<Parameter>8<!--CheckEntryDescription.Expected.BitSize-->
						</Parameter>
						<Parameter>0<!--CheckEntryDescription.Expected.BitOffs-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.AllowEnumDataType-->
						</Parameter>
						<OutParameter>CoeComm.bError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>CoeComm.bError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="CoeComm.bResult">false</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CheckIfSubIndex6IsDefined">
					<CallTestFunction Name="IsEntryDefined">
						<Parameter>CoeComm.Dict</Parameter>
						<Parameter>CoeComm.Index</Parameter>
						<Parameter>6</Parameter>
						<OutParameter>CoeComm.TmpBool</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>CoeComm.TmpBool</Value1>
							<Value2>false</Value2>
							<GotoStep>CheckIfSubIndex7IsDefined</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="VerifySi6Descr">
					<Description Id="8" Param0="CoeComm.Index" Level="Output">0x{0:x4}.6 Checking entry description...</Description>
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>CoeComm.Dict<!--CheckEntryDescription.ObjectDictionary-->
						</Parameter>
						<Parameter>online<!--CheckEntryDescription.DictionaryType-->
						</Parameter>
						<Parameter>CoeComm.Index<!--CheckEntryDescription.Index-->
						</Parameter>
						<Parameter>6<!--CheckEntryDescription.SubIndex-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.LevelWarning-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.CaseSensitive-->
						</Parameter>
						<Parameter>"TxPDO Exculde TxPDOs","Exclude TxPDOs"</Parameter>
						<!--CheckEntryDescription.Expected.Name-->
						<Parameter>10<!--CheckEntryDescription.Expected.Type-->
						</Parameter>
						<Parameter>true<!--CheckEntryDescription.Expected.Access.ReadInPreOp-->
						</Parameter>
						<Parameter>true<!--CheckEntryDescription.Expected.Access.ReadInSafeOp-->
						</Parameter>
						<Parameter>true<!--CheckEntryDescription.Expected.Access.ReadInOp-->
						</Parameter>
						<Parameter>-1<!--CheckEntryDescription.Expected.Access.WriteInPreOp-->
						</Parameter>
						<Parameter>-1<!--CheckEntryDescription.Expected.Access.WriteInSafeOp-->
						</Parameter>
						<Parameter>-1<!--CheckEntryDescription.Expected.Access.WriteInOp-->
						</Parameter>
						<Parameter>"o"</Parameter>
						<!--CheckEntryDescription.Expected.Category-->
						<Parameter>None<!--CheckEntryDescription.Expected.PdoMapping-->
						</Parameter>
						<Parameter>null<!--CheckEntryDescription.Expected.DefaultData-->
						</Parameter>
						<Parameter>null<!--CheckEntryDescription.Expected.MinData-->
						</Parameter>
						<Parameter>null<!--CheckEntryDescription.Expected.MaxData-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.Expected.Settings-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.Expected.Backup-->
						</Parameter>
						<Parameter>-1<!--CheckEntryDescription.Expected.BitSize-->
						</Parameter>
						<Parameter>-1<!--CheckEntryDescription.Expected.BitOffs-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.AllowEnumDataType-->
						</Parameter>
						<OutParameter>CoeComm.bError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>CoeComm.bError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="CoeComm.bResult">false</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CheckIfSubIndex7IsDefined">
					<CallTestFunction Name="IsEntryDefined">
						<Parameter>CoeComm.Dict</Parameter>
						<Parameter>CoeComm.Index</Parameter>
						<Parameter>7</Parameter>
						<OutParameter>CoeComm.TmpBool</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>CoeComm.TmpBool</Value1>
							<Value2>false</Value2>
							<GotoStep>CheckIfSubIndex9IsDefined</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="VerifySi7Descr">
					<Description Id="9" Param0="CoeComm.Index" Level="Output">0x{0:x4}.7 Checking entry description...</Description>
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>CoeComm.Dict<!--CheckEntryDescription.ObjectDictionary-->
						</Parameter>
						<Parameter>online<!--CheckEntryDescription.DictionaryType-->
						</Parameter>
						<Parameter>CoeComm.Index<!--CheckEntryDescription.Index-->
						</Parameter>
						<Parameter>7<!--CheckEntryDescription.SubIndex-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.LevelWarning-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.CaseSensitive-->
						</Parameter>
						<Parameter>"TxPDO State","TxPDO-State"</Parameter>
						<!--CheckEntryDescription.Expected.Name-->
						<Parameter>1<!--CheckEntryDescription.Expected.Type-->
						</Parameter>
						<Parameter>true<!--CheckEntryDescription.Expected.Access.ReadInPreOp-->
						</Parameter>
						<Parameter>true<!--CheckEntryDescription.Expected.Access.ReadInSafeOp-->
						</Parameter>
						<Parameter>true<!--CheckEntryDescription.Expected.Access.ReadInOp-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.Expected.Access.WriteInPreOp-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.Expected.Access.WriteInSafeOp-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.Expected.Access.WriteInOp-->
						</Parameter>
						<Parameter>"o"</Parameter>
						<!--CheckEntryDescription.Expected.Category-->
						<Parameter>EmptyString<!--CheckEntryDescription.Expected.PdoMapping-->
						</Parameter>
						<Parameter>null<!--CheckEntryDescription.Expected.DefaultData-->
						</Parameter>
						<Parameter>null<!--CheckEntryDescription.Expected.MinData-->
						</Parameter>
						<Parameter>null<!--CheckEntryDescription.Expected.MaxData-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.Expected.Settings-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.Expected.Backup-->
						</Parameter>
						<Parameter>1<!--CheckEntryDescription.Expected.BitSize-->
						</Parameter>
						<Parameter>-1<!--CheckEntryDescription.Expected.BitOffs-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.AllowEnumDataType-->
						</Parameter>
						<OutParameter>CoeComm.bError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>CoeComm.bError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="CoeComm.bResult">false</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CheckIfSubIndex9IsDefined">
					<CallTestFunction Name="IsEntryDefined">
						<Parameter>CoeComm.Dict</Parameter>
						<Parameter>CoeComm.Index</Parameter>
						<Parameter>9</Parameter>
						<OutParameter>CoeComm.TmpBool</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>CoeComm.TmpBool</Value1>
							<Value2>false</Value2>
							<GotoStep>ObjLoopEND</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="VerifySi9Descr">
					<Description Id="10" Param0="CoeComm.Index" Level="Output">0x{0:x4}.9 Checking entry description...</Description>
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>CoeComm.Dict<!--CheckEntryDescription.ObjectDictionary-->
						</Parameter>
						<Parameter>online<!--CheckEntryDescription.DictionaryType-->
						</Parameter>
						<Parameter>CoeComm.Index<!--CheckEntryDescription.Index-->
						</Parameter>
						<Parameter>9<!--CheckEntryDescription.SubIndex-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.LevelWarning-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.CaseSensitive-->
						</Parameter>
						<Parameter>"TxPDO Toggle","OutputUpdateCounter","TxPDO-Toggle"</Parameter>
						<!--CheckEntryDescription.Expected.Name-->
						<Parameter>#xFFFF<!--CheckEntryDescription.Expected.Type-->
						</Parameter>
						<Parameter>true<!--CheckEntryDescription.Expected.Access.ReadInPreOp-->
						</Parameter>
						<Parameter>true<!--CheckEntryDescription.Expected.Access.ReadInSafeOp-->
						</Parameter>
						<Parameter>true<!--CheckEntryDescription.Expected.Access.ReadInOp-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.Expected.Access.WriteInPreOp-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.Expected.Access.WriteInSafeOp-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.Expected.Access.WriteInOp-->
						</Parameter>
						<Parameter>"o"</Parameter>
						<!--CheckEntryDescription.Expected.Category-->
						<Parameter>EmptyString<!--CheckEntryDescription.Expected.PdoMapping-->
						</Parameter>
						<Parameter>null<!--CheckEntryDescription.Expected.DefaultData-->
						</Parameter>
						<Parameter>null<!--CheckEntryDescription.Expected.MinData-->
						</Parameter>
						<Parameter>null<!--CheckEntryDescription.Expected.MaxData-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.Expected.Settings-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.Expected.Backup-->
						</Parameter>
						<Parameter>-1<!--CheckEntryDescription.Expected.BitSize-->
						</Parameter>
						<Parameter>-1<!--CheckEntryDescription.Expected.BitOffs-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.AllowEnumDataType-->
						</Parameter>
						<OutParameter>CoeComm.bError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>CoeComm.bError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="CoeComm.bResult">false</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="ObjLoopEND">
					<SetVariable Target="CoeComm.Index">CoeComm.Index + 1</SetVariable>
					<Compare>
						<LowerOrEqual>
							<Value1>CoeComm.Index</Value1>
							<Value2>#x19FF</Value2>
							<GotoStep>ObjLoopSTART</GotoStep>
						</LowerOrEqual>
					</Compare>
				</TestStep>
				<TestStep Name="SetTestState">
					<Compare>
						<Equal>
							<Value1>CoeComm.bTestExecuted</Value1>
							<Value2>false</Value2>
							<SkipCase Id="11" Param0="CoeComm.TmpName">No '{0}' (0x1800 to 0x19FF) is defined.</SkipCase>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>CoeComm.bResult</Value1>
							<Value2>true</Value2>
							<ReturnSuccess Id="12" Param0="CoeComm.TmpName">{0} (0x1800 to 0x19FF) : the object structure is valid.</ReturnSuccess>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>CoeComm.bResult</Value1>
							<Value2>false</Value2>
							<RaiseError Id="13"></RaiseError>
						</Equal>
					</Compare>
				</TestStep>
			</TestCase>
			<TestCase Name="Sync Manager Communication Type Object (0x1C00)" CaseId="12">
				<?MAX_OUTPUT_ID 16?>
				<Description>
					<Purpose>Check the Sync Manager Communication Type Object (index 0x1C00). The test case ensures the correct object structure and naming.</Purpose>
					<PreCondition>Device supports Mailbox communication via CoE protocol
ESI provides a online object dictionary</PreCondition>
					<Action>Check the object structure:
1. Name
2. Data Type
3. Object Code
4. Access
5. Pdo mapping
6. Bit Size</Action>
					<PostCondition>The online dictionary shall contain the object
The structure shall be as described in ETG.1000.6 5.6.7.4.9 Sync Manager Communication Type.
1. Warning if object name is not 'Sync Manager Communication Type '
2. Error if the entry data type is not 'USINT8'
3. Error if object code is not 'ARRAY'
4. Error if access is not 'Read only'
5. Error if Pdo mapping is defined
6. Error if Entry BitSize is not 8</PostCondition>
					<References>
						<Reference Chapter="5.6.7.4.9 Sync Manager Communication Type " Specification="ETG.1000.6 "></Reference>
					</References>
					<Mandatory>true</Mandatory>
				</Description>
				<TestStep>
					<CallTestFunction Name="Reset"></CallTestFunction>
				</TestStep>
				<TestStep Name="CheckMbxCoeSupport">
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Mailbox</Value1>
							<Value2>false</Value2>
							<SkipCase Id="0">Device does not support mailbox communication</SkipCase>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Mailbox.CoE</Value1>
							<Value2>false</Value2>
							<SkipCase Id="1">Device does not support CoE</SkipCase>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Mailbox.CoE.SdoInfo</Value1>
							<Value2>false</Value2>
							<SkipCase Id="2">Device does not support SdoInfo</SkipCase>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="SetDefaultMandatoryValue">
					<SetVariable Target="CoeComm.IsMandatroy">false</SetVariable>
				</TestStep>
				<TestStep Name="InitResult">
					<SetVariable Target="CoeComm.bResult">true</SetVariable>
				</TestStep>
				<TestStep Name="InitIndex">
					<SetVariable Target="CoeComm.Index">#x1C00</SetVariable>
				</TestStep>
				<TestStep Name="InitDefaultData">
					<InitArray TargetArray="CoeComm.TmpDataArray" Length="1"></InitArray>
				</TestStep>
				<TestStep Name="InitObjName">
					<SetVariable Target="CoeComm.TmpName">Sync Manager Communication Type</SetVariable>
				</TestStep>
				<TestStep>
					<InitArray TargetArray="CoeComm.TmpNames" Length="2"></InitArray>
				</TestStep>
				<TestStep>
					<SetArrayItem TargetArray="CoeComm.TmpNames" Index="0">CoeComm.TmpName</SetArrayItem>
				</TestStep>
				<TestStep>
					<SetArrayItem TargetArray="CoeComm.TmpNames" Index="1">"Sync manager type"</SetArrayItem>
				</TestStep>
				<TestStep Name="CallInitMailbox">
					<CallFunction>SetStateMachTimeouts</CallFunction>
				</TestStep>
				<TestStep Name="GoToPreOp">
					<RunToState Timeout="preOPTimeout">
						<State>PREOP</State>
					</RunToState>
					<RaiseErrorOnFailure Id="3">Failed to go to PreOP!</RaiseErrorOnFailure>
				</TestStep>
				<TestStep Name="GetOD">
					<Description Id="4">Getting online dictionary from assigned ESI...</Description>
					<GetObjectDictionary Target="CoeComm.Dict">
						<DictionaryType>Online</DictionaryType>
					</GetObjectDictionary>
					<RaiseErrorOnFailure Id="5">Failed to get online dictionary.</RaiseErrorOnFailure>
				</TestStep>
				<TestStep Name="SkipCheckObjDefinedIfMandatory">
					<!--In case of a not defined object the function Check Object Description will return an error-->
					<Compare>
						<Equal>
							<Value1>CoeComm.IsMandatroy</Value1>
							<Value2>true</Value2>
							<GotoStep>VerifyObjDescr</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CheckIfObjIsDefined">
					<CallTestFunction Name="IsObjectDefined">
						<Parameter>CoeComm.Dict</Parameter>
						<Parameter>CoeComm.Index</Parameter>
						<OutParameter>CoeComm.TmpBool</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>CoeComm.TmpBool</Value1>
							<Value2>false</Value2>
							<SkipCase Id="6" Param0="CoeComm.Index" Param1="CoeComm.TmpName">The object '{1}' 0x{0:x4} is not defined.</SkipCase>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="VerifyObjDescr">
					<Description Id="7" Param0="CoeComm.Index" Level="Output">0x{0:x4} Checking object description...</Description>
					<CallTestFunction Name="CheckObjectDescription">
						<Parameter>CoeComm.Dict</Parameter>
						<Parameter>online</Parameter>
						<Parameter>CoeComm.Index<!--VerifyObjectDescription.Index-->
						</Parameter>
						<Parameter>false<!--VerifyObjectDescription.LevelWarning-->
						</Parameter>
						<Parameter>false</Parameter>
						<Parameter>CoeComm.TmpNames<!--VerifyObjectDescription.Expected.Names-->
						</Parameter>
						<Parameter>5<!--VerifyObjectDescription.Expected.Type-->
						</Parameter>
						<Parameter>8<!--VerifyObjectDescription.Expected.ObjectCode-->
						</Parameter>
						<Parameter>-1<!--VerifyObjectDescription.Expected.BitSize-->
						</Parameter>
						<OutParameter>CoeComm.bError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>CoeComm.bError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="CoeComm.bResult">false</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="VerifySi0Descr">
					<Description Id="8" Param0="CoeComm.Index" Level="Output">0x{0:x4}.0 Checking entry description...</Description>
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>CoeComm.Dict<!--CheckEntryDescription.ObjectDictionary-->
						</Parameter>
						<Parameter>online<!--CheckEntryDescription.DictionaryType-->
						</Parameter>
						<Parameter>CoeComm.Index<!--CheckEntryDescription.Index-->
						</Parameter>
						<Parameter>0<!--CheckEntryDescription.SubIndex-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.LevelWarning-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.CaseSensitive-->
						</Parameter>
						<Parameter>EmptyString<!--CheckEntryDescription.Expected.Name-->
						</Parameter>
						<Parameter>5<!--CheckEntryDescription.Expected.Type-->
						</Parameter>
						<Parameter>true<!--CheckEntryDescription.Expected.Access.ReadInPreOp-->
						</Parameter>
						<Parameter>true<!--CheckEntryDescription.Expected.Access.ReadInSafeOp-->
						</Parameter>
						<Parameter>true<!--CheckEntryDescription.Expected.Access.ReadInOp-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.Expected.Access.WriteInPreOp-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.Expected.Access.WriteInSafeOp-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.Expected.Access.WriteInOp-->
						</Parameter>
						<Parameter>EmptyString<!--CheckEntryDescription.Expected.Category-->
						</Parameter>
						<Parameter>None<!--CheckEntryDescription.Expected.PdoMapping-->
						</Parameter>
						<Parameter>null<!--CheckEntryDescription.Expected.DefaultData-->
						</Parameter>
						<Parameter>null<!--CheckEntryDescription.Expected.MinData-->
						</Parameter>
						<Parameter>null<!--CheckEntryDescription.Expected.MaxData-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.Expected.Settings-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.Expected.Backup-->
						</Parameter>
						<Parameter>8<!--CheckEntryDescription.Expected.BitSize-->
						</Parameter>
						<Parameter>0<!--CheckEntryDescription.Expected.BitOffs-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.AllowEnumDataType-->
						</Parameter>
						<OutParameter>CoeComm.bError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>CoeComm.bError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="CoeComm.bResult">false</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="InitEntryLoopCounter">
					<SetVariable Target="CoeComm.EntryCount">1</SetVariable>
				</TestStep>
				<TestStep Name="EntryLoopStart">
					<!--0 is the default entry value for unused SyncManager-->
					<SetVariable Target="CoeComm.TmpData">0</SetVariable>
				</TestStep>
				<TestStep Name="CheckIfSubIndexXIsMandatory">
					<Compare>
						<Greater>
							<Value1>CoeComm.EntryCount</Value1>
							<Value2>DeviceDescr.SM.Count</Value2>
							<SetVariable Target="CoeComm.TmpData">0</SetVariable>
						</Greater>
					</Compare>
					<Compare>
						<Greater>
							<Value1>CoeComm.EntryCount</Value1>
							<Value2>DeviceDescr.SM.Count</Value2>
							<GotoStep>CheckIfSubIndexXIsDefined</GotoStep>
						</Greater>
					</Compare>
					<Compare>
						<Equal>
							<Value1>DeviceDescr.SM[(CoeComm.EntryCount-1)].Virtual</Value1>
							<Value2>true</Value2>
							<WriteLine Id="16" Level="Output" Param0="(CoeComm.EntryCount-1)">Skip entry, SM[{0}] is virtual.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>DeviceDescr.SM[(CoeComm.EntryCount-1)].Virtual</Value1>
							<Value2>true</Value2>
							<GotoStep>EntryLoopEnd</GotoStep>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>DeviceDescr.SM[(CoeComm.EntryCount-1)]</Value1>
							<Value2>"Inputs"</Value2>
							<SetVariable Target="CoeComm.TmpData">4</SetVariable>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>DeviceDescr.SM[(CoeComm.EntryCount-1)]</Value1>
							<Value2>"Outputs"</Value2>
							<SetVariable Target="CoeComm.TmpData">3</SetVariable>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>DeviceDescr.SM[(CoeComm.EntryCount-1)]</Value1>
							<Value2>"MBoxIn"</Value2>
							<SetVariable Target="CoeComm.TmpData">2</SetVariable>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>DeviceDescr.SM[(CoeComm.EntryCount-1)]</Value1>
							<Value2>"MBoxOut"</Value2>
							<SetVariable Target="CoeComm.TmpData">1</SetVariable>
						</Equal>
					</Compare>
					<!--The entry is mandatory ; goto VerifyEntryDescr-->
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>VerifySixDescr</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CheckIfSubIndexXIsDefined">
					<!--The entry is optional skip entry description test if it is not defined-->
					<CallTestFunction Name="IsEntryDefined">
						<Parameter>CoeComm.Dict</Parameter>
						<Parameter>CoeComm.Index</Parameter>
						<Parameter>CoeComm.EntryCount</Parameter>
						<OutParameter>CoeComm.TmpBool</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>CoeComm.TmpBool</Value1>
							<Value2>false</Value2>
							<GotoStep>EntryLoopEnd</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="VerifySixDescr">
					<SetArrayItem TargetArray="CoeComm.TmpDataArray" Index="0">CoeComm.TmpData</SetArrayItem>
				</TestStep>
				<TestStep>
					<Description Id="9" Param0="CoeComm.Index" Param1="CoeComm.EntryCount" Level="Output">0x{0:x4}.{1} Checking entry description...</Description>
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>CoeComm.Dict<!--CheckEntryDescription.ObjectDictionary-->
						</Parameter>
						<Parameter>online<!--CheckEntryDescription.DictionaryType-->
						</Parameter>
						<Parameter>CoeComm.Index<!--CheckEntryDescription.Index-->
						</Parameter>
						<Parameter>CoeComm.EntryCount<!--CheckEntryDescription.SubIndex-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.LevelWarning-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.CaseSensitive-->
						</Parameter>
						<Parameter>EmptyString<!--CheckEntryDescription.Expected.Name-->
						</Parameter>
						<Parameter>5<!--CheckEntryDescription.Expected.Type-->
						</Parameter>
						<Parameter>true<!--CheckEntryDescription.Expected.Access.ReadInPreOp-->
						</Parameter>
						<Parameter>true<!--CheckEntryDescription.Expected.Access.ReadInSafeOp-->
						</Parameter>
						<Parameter>true<!--CheckEntryDescription.Expected.Access.ReadInOp-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.Expected.Access.WriteInPreOp-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.Expected.Access.WriteInSafeOp-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.Expected.Access.WriteInOp-->
						</Parameter>
						<Parameter>"o"</Parameter>
						<!--CheckEntryDescription.Expected.Category-->
						<Parameter>None<!--CheckEntryDescription.Expected.PdoMapping-->
						</Parameter>
						<Parameter>CoeComm.TmpDataArray<!--CheckEntryDescription.Expected.DefaultData-->
						</Parameter>
						<Parameter>null<!--CheckEntryDescription.Expected.MinData-->
						</Parameter>
						<Parameter>null<!--CheckEntryDescription.Expected.MaxData-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.Expected.Settings-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.Expected.Backup-->
						</Parameter>
						<Parameter>8<!--CheckEntryDescription.Expected.BitSize-->
						</Parameter>
						<Parameter>-1<!--CheckEntryDescription.Expected.BitOffs-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.AllowEnumDataType-->
						</Parameter>
						<OutParameter>CoeComm.bError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>CoeComm.bError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="CoeComm.bResult">false</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="UploadEntryValue">
					<UploadCoEObject>
						<Index>#x1C00</Index>
						<SubIndex>CoeComm.EntryCount</SubIndex>
						<DataVar>byte</DataVar>
						<AbortCode>u32sdoAbort</AbortCode>
						<AbortMessage>strsdoAbortMessage</AbortMessage>
					</UploadCoEObject>
					<RaiseErrorOnFailure Id="10" Param0="CoeComm.EntryCount">Failed to upload 0x1C00.{0}</RaiseErrorOnFailure>
					<Compare>
						<NotEqual>
							<Value1>strsdoAbortMessage</Value1>
							<Value2>EmptyString</Value2>
							<WriteLine Id="11" Param0="CoeComm.EntryCount" Param1="strsdoAbortMessage" Level="Error">Failed to upload 0x1C00.{0} : '{1}'</WriteLine>
						</NotEqual>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>strsdoAbortMessage</Value1>
							<Value2>EmptyString</Value2>
							<SetVariable Target="CoeComm.bResult">false</SetVariable>
						</NotEqual>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>strsdoAbortMessage</Value1>
							<Value2>EmptyString</Value2>
							<GotoStep>EntryLoopEnd</GotoStep>
						</NotEqual>
					</Compare>
					<!--subindex does not exists abort code returned-->
					<Compare>
						<Equal>
							<Value1>u32sdoAbort</Value1>
							<Value2>#x06090011</Value2>
							<GotoStep>EntryLoopEnd</GotoStep>
						</Equal>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>u32sdoAbort</Value1>
							<Value2>0</Value2>
							<WriteLine Id="12" Level="Error" Param0="CoeComm.EntryCount" Param1="u32sdoAbort">Failed to upload 0x1C00.{0} : 0x{1:X}</WriteLine>
						</NotEqual>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>u32sdoAbort</Value1>
							<Value2>0</Value2>
							<SetVariable Target="CoeComm.bResult">false</SetVariable>
						</NotEqual>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>u32sdoAbort</Value1>
							<Value2>0</Value2>
							<GotoStep>EntryLoopEnd</GotoStep>
						</NotEqual>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>byte</Value1>
							<Value2>CoeComm.TmpData</Value2>
							<WriteLine Id="13" Param0="CoeComm.EntryCount" Level="Error" Param1="byte" Param2="CoeComm.TmpData">0x1C00.{0} : {1} invalid, expected {2}</WriteLine>
						</NotEqual>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>byte</Value1>
							<Value2>CoeComm.TmpData</Value2>
							<SetVariable Target="CoeComm.bResult">false</SetVariable>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep Name="EntryLoopEnd">
					<SetVariable Target="CoeComm.EntryCount">CoeComm.EntryCount + 1</SetVariable>
					<Compare>
						<LowerOrEqual>
							<Value1>CoeComm.EntryCount</Value1>
							<Value2>255</Value2>
							<GotoStep>EntryLoopStart</GotoStep>
						</LowerOrEqual>
					</Compare>
				</TestStep>
				<TestStep Name="WriteSuccess">
					<Compare>
						<Equal>
							<Value1>CoeComm.bResult</Value1>
							<Value2>true</Value2>
							<ReturnSuccess Id="14" Param0="CoeComm.Index" Param1="CoeComm.TmpName">{1} (0x{0:x4}) : the object structure is valid.</ReturnSuccess>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>CoeComm.bResult</Value1>
							<Value2>false</Value2>
							<RaiseError Id="15"></RaiseError>
						</Equal>
					</Compare>
				</TestStep>
			</TestCase>
			<TestCase Name="Sync Manager PDO Assignment (0x1C10 .. 0x1C2F)" CaseId="13">
				<?MAX_OUTPUT_ID 14?>
				<Description>
					<Purpose>Check if process data syncmanager assing objects are defined.</Purpose>
					<PreCondition>Device supports Mailbox communication via CoE protocol
ESI provides a offline object dictionary</PreCondition>
					<Action>Check the object structure:
1. Name
2. Data Type
3. Object Code
4. Access
5. Pdo mapping
6. Bit Size</Action>
					<PostCondition>The structure shall be as described in ETG.1000.6</PostCondition>
					<References>
						<Reference Specification="ETG.1000.6"></Reference>
					</References>
					<Mandatory>true</Mandatory>
				</Description>
				<TestStep>
					<CallTestFunction Name="Reset"></CallTestFunction>
				</TestStep>
				<TestStep Name="CheckMbxCoeSupport">
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Mailbox</Value1>
							<Value2>false</Value2>
							<SkipCase Id="0">Device does not support mailbox communication</SkipCase>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Mailbox.CoE</Value1>
							<Value2>false</Value2>
							<SkipCase Id="1">Device does not support CoE</SkipCase>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Mailbox.CoE.SdoInfo</Value1>
							<Value2>false</Value2>
							<SkipCase Id="2">Device does not support SdoInfo</SkipCase>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="SetDefaultMandatoryValue">
					<SetVariable Target="CoeComm.IsMandatroy">false</SetVariable>
				</TestStep>
				<TestStep Name="InitTestRunIndication">
					<SetVariable Target="CoeComm.bTestExecuted">false</SetVariable>
				</TestStep>
				<TestStep Name="InitResult">
					<SetVariable Target="CoeComm.bResult">true</SetVariable>
				</TestStep>
				<TestStep Name="InitAccessFlag">
					<SetVariable Target="CoeComm.AccessInPreOP">-1</SetVariable>
					<Compare>
						<Equal>
							<!--Value 1: DeviceDescr.Mailbox.CoE.PdoAssign-->
							<Value1>false</Value1>
							<Value2>true</Value2>
							<SetVariable Target="CoeComm.AccessInPreOP">1</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="InitObjName">
					<SetVariable Target="CoeComm.TmpName">Sync Manager PDO Assignment</SetVariable>
				</TestStep>
				<TestStep Name="InitIndex">
					<SetVariable Target="CoeComm.Index">#x1C10</SetVariable>
				</TestStep>
				<TestStep Name="CallInitMailbox">
					<CallFunction>SetStateMachTimeouts</CallFunction>
				</TestStep>
				<TestStep Name="GoToPreOp">
					<RunToState Timeout="preOPTimeout">
						<State>PREOP</State>
					</RunToState>
					<RaiseErrorOnFailure Id="3">Failed to go to PreOP!</RaiseErrorOnFailure>
				</TestStep>
				<TestStep Name="GetOD">
					<Description Id="4">Getting online dictionary from assigned ESI...</Description>
					<GetObjectDictionary Target="CoeComm.Dict">
						<DictionaryType>Online</DictionaryType>
					</GetObjectDictionary>
					<RaiseErrorOnFailure Id="5">Failed to get online dictionary.</RaiseErrorOnFailure>
				</TestStep>
				<TestStep Name="ObjLoopSTART">
					<SetVariable Target="CoeComm.ObjLoopIdx">CoeComm.Index - #x1C10</SetVariable>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<CallTestFunction Name="IsObjectDefined">
								<Parameter>CoeComm.Dict</Parameter>
								<Parameter>CoeComm.Index</Parameter>
								<OutParameter>CoeComm.bObjectDefined</OutParameter>
							</CallTestFunction>
						</Equal>
					</Compare>
					<Compare>
						<GreaterOrEqual>
							<Value1>CoeComm.ObjLoopIdx</Value1>
							<Value2>DeviceDescr.SM.Count</Value2>
							<GotoStep>HandleDisabledObj</GotoStep>
						</GreaterOrEqual>
					</Compare>
					<Compare>
						<Equal>
							<Value1>DeviceDescr.SM[CoeComm.ObjLoopIdx].Virtual</Value1>
							<Value2>true</Value2>
							<WriteLine Id="14" Level="Output" Param0="(CoeComm.EntryCount-1)" Param1="CoeComm.Index">Skip Object 0x{1:X}, SM[{0}] is virtual.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>DeviceDescr.SM[CoeComm.ObjLoopIdx].Virtual</Value1>
							<Value2>true</Value2>
							<GotoStep>ObjLoopEND</GotoStep>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="6" Level="Verbose" Param0="DeviceDescr.SM[CoeComm.ObjLoopIdx]" Param1="CoeComm.ObjLoopIdx">Current SM[{1}].Type '{0}'.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>DeviceDescr.SM[CoeComm.ObjLoopIdx]</Value1>
							<Value2>"Inputs"</Value2>
							<GotoStep>StartTest</GotoStep>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>DeviceDescr.SM[CoeComm.ObjLoopIdx]</Value1>
							<Value2>"Outputs"</Value2>
							<GotoStep>StartTest</GotoStep>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="7" Level="Verbose" Param0="DeviceDescr.SM[CoeComm.ObjLoopIdx]" Param1="CoeComm.ObjLoopIdx">No SyncManager PDO assign object shall be defined because the SM[{1}].Type is '{0}'.</WriteLine>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="HandleDisabledObj">
					<SetVariable Target="CoeComm.bTestExecuted">true</SetVariable>
					<Compare>
						<Equal>
							<Value1>CoeComm.bObjectDefined</Value1>
							<Value2>false</Value2>
							<GotoStep>ObjLoopEND</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CheckValueOfSi0">
					<InitArray TargetArray="CoeComm.TmpDataArray" Length="1"></InitArray>
				</TestStep>
				<TestStep>
					<SetArrayItem TargetArray="CoeComm.TmpDataArray" Index="0">0</SetArrayItem>
				</TestStep>
				<TestStep>
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>CoeComm.Dict<!--CheckEntryDescription.ObjectDictionary-->
						</Parameter>
						<Parameter>online<!--CheckEntryDescription.DictionaryType-->
						</Parameter>
						<Parameter>CoeComm.Index<!--CheckEntryDescription.Index-->
						</Parameter>
						<Parameter>0<!--CheckEntryDescription.SubIndex-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.LevelWarning-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.CaseSensitive-->
						</Parameter>
						<Parameter>EmptyString<!--CheckEntryDescription.Expected.Name-->
						</Parameter>
						<Parameter>5<!--CheckEntryDescription.Expected.Type-->
						</Parameter>
						<Parameter>true<!--CheckEntryDescription.Expected.Access.ReadInPreOp-->
						</Parameter>
						<Parameter>true<!--CheckEntryDescription.Expected.Access.ReadInSafeOp-->
						</Parameter>
						<Parameter>true<!--CheckEntryDescription.Expected.Access.ReadInOp-->
						</Parameter>
						<Parameter>CoeComm.AccessInPreOP<!--CheckEntryDescription.Expected.Access.WriteInPreOp-->
						</Parameter>
						<Parameter>-1<!--CheckEntryDescription.Expected.Access.WriteInSafeOp-->
						</Parameter>
						<Parameter>-1<!--CheckEntryDescription.Expected.Access.WriteInOp-->
						</Parameter>
						<Parameter>EmptyString<!--CheckEntryDescription.Expected.Category-->
						</Parameter>
						<Parameter>None<!--CheckEntryDescription.Expected.PdoMapping-->
						</Parameter>
						<Parameter>CoeComm.TmpDataArray<!--CheckEntryDescription.Expected.DefaultData-->
						</Parameter>
						<Parameter>null<!--CheckEntryDescription.Expected.MinData-->
						</Parameter>
						<Parameter>null<!--CheckEntryDescription.Expected.MaxData-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.Expected.Settings-->
						</Parameter>
						<Parameter>-1<!--CheckEntryDescription.Expected.Backup-->
						</Parameter>
						<Parameter>8<!--CheckEntryDescription.Expected.BitSize-->
						</Parameter>
						<Parameter>0<!--CheckEntryDescription.Expected.BitOffs-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.AllowEnumDataType-->
						</Parameter>
						<OutParameter>CoeComm.bError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>CoeComm.bError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="CoeComm.bResult">false</SetVariable>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>ObjLoopEND</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="StartTest">
					<SetVariable Target="CoeComm.bTestExecuted">true</SetVariable>
				</TestStep>
				<TestStep Name="VerifyObjDescr">
					<Description Id="8" Param0="CoeComm.Index" Level="Output">0x{0:x4} Checking object description...</Description>
					<CallTestFunction Name="CheckObjectDescription">
						<Parameter>CoeComm.Dict</Parameter>
						<Parameter>online</Parameter>
						<Parameter>CoeComm.Index<!--VerifyObjectDescription.Index-->
						</Parameter>
						<Parameter>false<!--VerifyObjectDescription.LevelWarning-->
						</Parameter>
						<Parameter>false</Parameter>
						<Parameter>null<!--VerifyObjectDescription.Expected.Names-->
						</Parameter>
						<Parameter>0<!--VerifyObjectDescription.Expected.Type-->
						</Parameter>
						<Parameter>8<!--VerifyObjectDescription.Expected.ObjectCode-->
						</Parameter>
						<Parameter>-1<!--VerifyObjectDescription.Expected.BitSize-->
						</Parameter>
						<OutParameter>CoeComm.bError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>CoeComm.bError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="CoeComm.bResult">false</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="VerifySi0Descr">
					<Description Id="9" Param0="CoeComm.Index" Level="Output">0x{0:x4}.0 Checking entry description...</Description>
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>CoeComm.Dict<!--CheckEntryDescription.ObjectDictionary-->
						</Parameter>
						<Parameter>online<!--CheckEntryDescription.DictionaryType-->
						</Parameter>
						<Parameter>CoeComm.Index<!--CheckEntryDescription.Index-->
						</Parameter>
						<Parameter>0<!--CheckEntryDescription.SubIndex-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.LevelWarning-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.CaseSensitive-->
						</Parameter>
						<Parameter>EmptyString<!--CheckEntryDescription.Expected.Name-->
						</Parameter>
						<Parameter>5<!--CheckEntryDescription.Expected.Type-->
						</Parameter>
						<Parameter>true<!--CheckEntryDescription.Expected.Access.ReadInPreOp-->
						</Parameter>
						<Parameter>true<!--CheckEntryDescription.Expected.Access.ReadInSafeOp-->
						</Parameter>
						<Parameter>true<!--CheckEntryDescription.Expected.Access.ReadInOp-->
						</Parameter>
						<Parameter>CoeComm.AccessInPreOP<!--CheckEntryDescription.Expected.Access.WriteInPreOp-->
						</Parameter>
						<Parameter>-1<!--CheckEntryDescription.Expected.Access.WriteInSafeOp-->
						</Parameter>
						<Parameter>-1<!--CheckEntryDescription.Expected.Access.WriteInOp-->
						</Parameter>
						<Parameter>EmptyString<!--CheckEntryDescription.Expected.Category-->
						</Parameter>
						<Parameter>None<!--CheckEntryDescription.Expected.PdoMapping-->
						</Parameter>
						<Parameter>null<!--CheckEntryDescription.Expected.DefaultData-->
						</Parameter>
						<Parameter>null<!--CheckEntryDescription.Expected.MinData-->
						</Parameter>
						<Parameter>null<!--CheckEntryDescription.Expected.MaxData-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.Expected.Settings-->
						</Parameter>
						<Parameter>-1<!--CheckEntryDescription.Expected.Backup-->
						</Parameter>
						<Parameter>8<!--CheckEntryDescription.Expected.BitSize-->
						</Parameter>
						<Parameter>0<!--CheckEntryDescription.Expected.BitOffs-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.AllowEnumDataType-->
						</Parameter>
						<OutParameter>CoeComm.bError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>CoeComm.bError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="CoeComm.bResult">false</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="InitEntryCount">
					<SetVariable Target="CoeComm.EntryCount">1</SetVariable>
				</TestStep>
				<TestStep Name="EntryLoopSTART"></TestStep>
				<TestStep Name="CheckIfSubIndexXIsDefined">
					<CallTestFunction Name="IsEntryDefined">
						<Parameter>CoeComm.Dict</Parameter>
						<Parameter>CoeComm.Index</Parameter>
						<Parameter>CoeComm.EntryCount</Parameter>
						<OutParameter>CoeComm.TmpBool</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>CoeComm.TmpBool</Value1>
							<Value2>false</Value2>
							<GotoStep>EntryLoopEND</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="VerifySiXDescr">
					<Description Id="10" Param0="CoeComm.Index" Param1="CoeComm.EntryCount" Level="Output">0x{0:x4}.{1} Checking entry description...</Description>
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>CoeComm.Dict<!--CheckEntryDescription.ObjectDictionary-->
						</Parameter>
						<Parameter>online<!--CheckEntryDescription.DictionaryType-->
						</Parameter>
						<Parameter>CoeComm.Index<!--CheckEntryDescription.Index-->
						</Parameter>
						<Parameter>CoeComm.EntryCount<!--CheckEntryDescription.SubIndex-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.LevelWarning-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.CaseSensitive-->
						</Parameter>
						<Parameter>EmptyString<!--CheckEntryDescription.Expected.Name-->
						</Parameter>
						<Parameter>6<!--CheckEntryDescription.Expected.Type-->
						</Parameter>
						<Parameter>true<!--CheckEntryDescription.Expected.Access.ReadInPreOp-->
						</Parameter>
						<Parameter>true<!--CheckEntryDescription.Expected.Access.ReadInSafeOp-->
						</Parameter>
						<Parameter>true<!--CheckEntryDescription.Expected.Access.ReadInOp-->
						</Parameter>
						<Parameter>CoeComm.AccessInPreOP<!--CheckEntryDescription.Expected.Access.WriteInPreOp-->
						</Parameter>
						<Parameter>-1<!--CheckEntryDescription.Expected.Access.WriteInSafeOp-->
						</Parameter>
						<Parameter>-1<!--CheckEntryDescription.Expected.Access.WriteInOp-->
						</Parameter>
						<Parameter>"o"</Parameter>
						<!--CheckEntryDescription.Expected.Category-->
						<Parameter>None<!--CheckEntryDescription.Expected.PdoMapping-->
						</Parameter>
						<Parameter>null<!--CheckEntryDescription.Expected.DefaultData-->
						</Parameter>
						<Parameter>null<!--CheckEntryDescription.Expected.MinData-->
						</Parameter>
						<Parameter>null<!--CheckEntryDescription.Expected.MaxData-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.Expected.Settings-->
						</Parameter>
						<Parameter>-1<!--CheckEntryDescription.Expected.Backup-->
						</Parameter>
						<Parameter>16<!--CheckEntryDescription.Expected.BitSize-->
						</Parameter>
						<Parameter>-1<!--CheckEntryDescription.Expected.BitOffs-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.AllowEnumDataType-->
						</Parameter>
						<OutParameter>CoeComm.bError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>CoeComm.bError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="CoeComm.bResult">false</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="EntryLoopEND">
					<SetVariable Target="CoeComm.EntryCount">CoeComm.EntryCount + 1</SetVariable>
					<Compare>
						<Lower>
							<Value1>CoeComm.EntryCount</Value1>
							<Value2>255</Value2>
							<GotoStep>EntryLoopSTART</GotoStep>
						</Lower>
					</Compare>
				</TestStep>
				<TestStep Name="ObjLoopEND">
					<SetVariable Target="CoeComm.Index">CoeComm.Index + 1</SetVariable>
					<Compare>
						<LowerOrEqual>
							<Value1>CoeComm.Index</Value1>
							<Value2>#x1C2F</Value2>
							<GotoStep>ObjLoopSTART</GotoStep>
						</LowerOrEqual>
					</Compare>
				</TestStep>
				<TestStep Name="SetTestState">
					<Compare>
						<Equal>
							<Value1>CoeComm.bTestExecuted</Value1>
							<Value2>false</Value2>
							<SkipCase Id="11" Param0="CoeComm.TmpName">No '{0}' (0x1C10 to 0x1C2F) is defined.</SkipCase>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>CoeComm.bResult</Value1>
							<Value2>true</Value2>
							<ReturnSuccess Id="12" Param0="CoeComm.TmpName">{0} (0x1C10 to 0x1C2F) : the object structure is valid.</ReturnSuccess>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>CoeComm.bResult</Value1>
							<Value2>false</Value2>
							<RaiseError Id="13"></RaiseError>
						</Equal>
					</Compare>
				</TestStep>
			</TestCase>
			<TestCase Name="Sync Manager Parameter (0x1C30 - 0x1C4F)" CaseId="14">
				<?MAX_OUTPUT_ID 39?>
				<Description>
					<Purpose>Check the Structure of the Sync Manager Parameter objects</Purpose>
					<PreCondition>Device supports Mailbox communication via CoE protocol
ESI provides a offline object dictionary</PreCondition>
					<Action>Check the object structure:
1. Name
2. Data Type
3. Object Code
4. Access
5. Pdo mapping
6. Bit Size</Action>
					<PostCondition>The structure shall be as described in ETG.1020 </PostCondition>
					<References>
						<Reference Specification="ETG.1020"></Reference>
					</References>
					<Mandatory>true</Mandatory>
				</Description>
				<TestStep>
					<CallTestFunction Name="Reset"></CallTestFunction>
				</TestStep>
				<TestStep Name="CheckMbxCoeSupport">
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Mailbox</Value1>
							<Value2>false</Value2>
							<SkipCase Id="0">Device does not support mailbox communication</SkipCase>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Mailbox.CoE</Value1>
							<Value2>false</Value2>
							<SkipCase Id="1">Device does not support CoE</SkipCase>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Mailbox.CoE.SdoInfo</Value1>
							<Value2>false</Value2>
							<SkipCase Id="2">Device does not support SdoInfo</SkipCase>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="SetDefaultMandatoryValue">
					<SetVariable Target="CoeComm.IsMandatroy">DeviceDescr.DC</SetVariable>
				</TestStep>
				<TestStep Name="InitTestRunIndication">
					<SetVariable Target="CoeComm.bTestExecuted">false</SetVariable>
				</TestStep>
				<TestStep Name="InitResult">
					<SetVariable Target="CoeComm.bResult">true</SetVariable>
				</TestStep>
				<TestStep Name="InitObjName">
					<SetVariable Target="CoeComm.TmpName">Sync Manager Parameter</SetVariable>
				</TestStep>
				<TestStep Name="InitIndex">
					<SetVariable Target="CoeComm.Index">#x1C30</SetVariable>
				</TestStep>
				<TestStep Name="CallInitMailbox">
					<CallFunction>SetStateMachTimeouts</CallFunction>
				</TestStep>
				<TestStep Name="GoToPreOp">
					<RunToState Timeout="preOPTimeout">
						<State>PREOP</State>
					</RunToState>
					<RaiseErrorOnFailure Id="3">Failed to go to PreOP!</RaiseErrorOnFailure>
				</TestStep>
				<TestStep Name="GetOD">
					<Description Id="4">Getting online dictionary from assigned ESI...</Description>
					<GetObjectDictionary Target="CoeComm.Dict">
						<DictionaryType>Online</DictionaryType>
					</GetObjectDictionary>
					<RaiseErrorOnFailure Id="5">Failed to get online dictionary.</RaiseErrorOnFailure>
				</TestStep>
				<TestStep Name="ObjLoopSTART">
					<SetVariable Target="CoeComm.ObjLoopIdx">CoeComm.Index - #x1C30</SetVariable>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<CallTestFunction Name="IsObjectDefined">
								<Parameter>CoeComm.Dict</Parameter>
								<Parameter>CoeComm.Index</Parameter>
								<OutParameter>CoeComm.bObjectDefined</OutParameter>
							</CallTestFunction>
						</Equal>
					</Compare>
					<Compare>
						<GreaterOrEqual>
							<Value1>CoeComm.ObjLoopIdx</Value1>
							<Value2>CurrentConfig.Sm.Count</Value2>
							<GotoStep>HandleDisabledObj</GotoStep>
						</GreaterOrEqual>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="6" Level="Verbose" Param0="DeviceDescr.SM[CoeComm.ObjLoopIdx]" Param1="CoeComm.ObjLoopIdx">Current SM[{1}].Type '{0}'.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>DeviceDescr.SM[CoeComm.ObjLoopIdx]</Value1>
							<Value2>"Inputs"</Value2>
							<GotoStep>StartTest</GotoStep>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>DeviceDescr.SM[CoeComm.ObjLoopIdx]</Value1>
							<Value2>"Outputs"</Value2>
							<GotoStep>StartTest</GotoStep>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="7" Level="Verbose" Param0="DeviceDescr.SM[CoeComm.ObjLoopIdx]" Param1="CoeComm.ObjLoopIdx">No SyncManager Parameter object shall be defined because the SM[{1}].Type is '{0}'.</WriteLine>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="HandleDisabledObj">
					<Compare>
						<Equal>
							<Value1>CoeComm.bObjectDefined</Value1>
							<Value2>false</Value2>
							<GotoStep>ObjLoopEND</GotoStep>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<SetVariable Target="CoeComm.bResult">false</SetVariable>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="8" Level="Error" Param0="DeviceDescr.SM[CoeComm.ObjLoopIdx]" Param1="CoeComm.ObjLoopIdx">No SyncManager Parameter object shall be defined because the SM[{1}].Type is '{0}'.</WriteLine>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="StartTest">
					<SetVariable Target="CoeComm.bTestExecuted">true</SetVariable>
				</TestStep>
				<TestStep Name="HandleDisabledSm">
					<Compare>
						<Equal>
							<Value1>CurrentConfig.Sm[CoeComm.ObjLoopIdx].Length</Value1>
							<Value2>0</Value2>
							<WriteLine Id="9" Level="Verbose" Param1="CoeComm.Index" Param0="CoeComm.ObjLoopIdx">0x{1:X} is not mandatory, SM[{0}] length is 0.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>CurrentConfig.Sm[CoeComm.ObjLoopIdx].Length</Value1>
							<Value2>0</Value2>
							<SetVariable Target="CoeComm.IsMandatroy">false</SetVariable>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>CurrentConfig.Sm[CoeComm.ObjLoopIdx].Enable</Value1>
							<Value2>false</Value2>
							<WriteLine Id="10" Level="Verbose" Param1="CoeComm.Index" Param0="CoeComm.ObjLoopIdx">0x{1:X} is not mandatory, SM[{0}] is not enabled.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>CurrentConfig.Sm[CoeComm.ObjLoopIdx].Enable</Value1>
							<Value2>false</Value2>
							<SetVariable Target="CoeComm.IsMandatroy">false</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CheckifOptionalObjectExists">
					<Compare>
						<Equal>
							<Value1>CoeComm.IsMandatroy</Value1>
							<Value2>true</Value2>
							<GotoStep>VerifyObjDescr</GotoStep>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>CoeComm.bObjectDefined</Value1>
							<Value2>false</Value2>
							<GotoStep>ObjLoopEND</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="VerifyObjDescr">
					<Description Id="11" Param0="CoeComm.Index" Level="Output">0x{0:x4} Checking object description...</Description>
					<CallTestFunction Name="CheckObjectDescription">
						<Parameter>CoeComm.Dict</Parameter>
						<Parameter>online</Parameter>
						<Parameter>CoeComm.Index<!--VerifyObjectDescription.Index-->
						</Parameter>
						<Parameter>false<!--VerifyObjectDescription.LevelWarning-->
						</Parameter>
						<Parameter>false</Parameter>
						<Parameter>null<!--VerifyObjectDescription.Expected.Names-->
						</Parameter>
						<Parameter>0<!--VerifyObjectDescription.Expected.Type-->
						</Parameter>
						<Parameter>9<!--VerifyObjectDescription.Expected.ObjectCode-->
						</Parameter>
						<Parameter>-1<!--VerifyObjectDescription.Expected.BitSize-->
						</Parameter>
						<OutParameter>CoeComm.bError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>CoeComm.bError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="CoeComm.bResult">false</SetVariable>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>CoeComm.bObjectDefined</Value1>
							<Value2>false</Value2>
							<GotoStep>ObjLoopEND</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="VerifySi0Descr">
					<Description Id="12" Param0="CoeComm.Index" Level="Output">0x{0:x4}.0 Checking entry description...</Description>
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>CoeComm.Dict<!--CheckEntryDescription.ObjectDictionary-->
						</Parameter>
						<Parameter>online<!--CheckEntryDescription.DictionaryType-->
						</Parameter>
						<Parameter>CoeComm.Index<!--CheckEntryDescription.Index-->
						</Parameter>
						<Parameter>0<!--CheckEntryDescription.SubIndex-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.LevelWarning-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.CaseSensitive-->
						</Parameter>
						<Parameter>EmptyString<!--CheckEntryDescription.Expected.Name-->
						</Parameter>
						<Parameter>5<!--CheckEntryDescription.Expected.Type-->
						</Parameter>
						<Parameter>true<!--CheckEntryDescription.Expected.Access.ReadInPreOp-->
						</Parameter>
						<Parameter>true<!--CheckEntryDescription.Expected.Access.ReadInSafeOp-->
						</Parameter>
						<Parameter>true<!--CheckEntryDescription.Expected.Access.ReadInOp-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.Expected.Access.WriteInPreOp-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.Expected.Access.WriteInSafeOp-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.Expected.Access.WriteInOp-->
						</Parameter>
						<Parameter>EmptyString<!--CheckEntryDescription.Expected.Category-->
						</Parameter>
						<Parameter>None<!--CheckEntryDescription.Expected.PdoMapping-->
						</Parameter>
						<Parameter>null<!--CheckEntryDescription.Expected.DefaultData-->
						</Parameter>
						<Parameter>null<!--CheckEntryDescription.Expected.MinData-->
						</Parameter>
						<Parameter>null<!--CheckEntryDescription.Expected.MaxData-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.Expected.Settings-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.Expected.Backup-->
						</Parameter>
						<Parameter>8<!--CheckEntryDescription.Expected.BitSize-->
						</Parameter>
						<Parameter>-1<!--CheckEntryDescription.Expected.BitOffs-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.AllowEnumDataType-->
						</Parameter>
						<OutParameter>CoeComm.bError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>CoeComm.bError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="CoeComm.bResult">false</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CheckSi_1">
					<SetVariable Target="CoeComm.EntryCount">1</SetVariable>
				</TestStep>
				<TestStep>
					<Description Id="13" Param0="CoeComm.Index" Param1="CoeComm.EntryCount" Level="Output">0x{0:x4}.{1} Checking entry description...</Description>
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>CoeComm.Dict<!--CheckEntryDescription.ObjectDictionary-->
						</Parameter>
						<Parameter>online<!--CheckEntryDescription.DictionaryType-->
						</Parameter>
						<Parameter>CoeComm.Index<!--CheckEntryDescription.Index-->
						</Parameter>
						<Parameter>CoeComm.EntryCount<!--CheckEntryDescription.SubIndex-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.LevelWarning-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.CaseSensitive-->
						</Parameter>
						<Parameter>"Synchronization Type","Sync mode"</Parameter>
						<!--CheckEntryDescription.Expected.Name-->
						<Parameter>6<!--CheckEntryDescription.Expected.Type-->
						</Parameter>
						<Parameter>true<!--CheckEntryDescription.Expected.Access.ReadInPreOp-->
						</Parameter>
						<Parameter>true<!--CheckEntryDescription.Expected.Access.ReadInSafeOp-->
						</Parameter>
						<Parameter>true<!--CheckEntryDescription.Expected.Access.ReadInOp-->
						</Parameter>
						<Parameter>-1<!--CheckEntryDescription.Expected.Access.WriteInPreOp-->
						</Parameter>
						<Parameter>-1<!--CheckEntryDescription.Expected.Access.WriteInSafeOp-->
						</Parameter>
						<Parameter>-1<!--CheckEntryDescription.Expected.Access.WriteInOp-->
						</Parameter>
						<Parameter>EmptyString<!--CheckEntryDescription.Expected.Category-->
						</Parameter>
						<Parameter>None<!--CheckEntryDescription.Expected.PdoMapping-->
						</Parameter>
						<Parameter>null<!--CheckEntryDescription.Expected.DefaultData-->
						</Parameter>
						<Parameter>null<!--CheckEntryDescription.Expected.MinData-->
						</Parameter>
						<Parameter>null<!--CheckEntryDescription.Expected.MaxData-->
						</Parameter>
						<Parameter>-1<!--CheckEntryDescription.Expected.Settings-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.Expected.Backup-->
						</Parameter>
						<Parameter>16<!--CheckEntryDescription.Expected.BitSize-->
						</Parameter>
						<Parameter>-1<!--CheckEntryDescription.Expected.BitOffs-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.AllowEnumDataType-->
						</Parameter>
						<OutParameter>CoeComm.bError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>CoeComm.bError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="CoeComm.bResult">false</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CheckSi_2">
					<SetVariable Target="CoeComm.EntryCount">2</SetVariable>
				</TestStep>
				<TestStep Name="CheckIfSubIndex2IsDefined">
					<CallTestFunction Name="IsEntryDefined">
						<Parameter>CoeComm.Dict</Parameter>
						<Parameter>CoeComm.Index</Parameter>
						<Parameter>CoeComm.EntryCount</Parameter>
						<OutParameter>CoeComm.TmpBool</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>CoeComm.TmpBool</Value1>
							<Value2>false</Value2>
							<GotoStep>CheckSi_3</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep>
					<Description Id="14" Param0="CoeComm.Index" Param1="CoeComm.EntryCount" Level="Output">0x{0:x4}.{1} Checking entry description...</Description>
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>CoeComm.Dict<!--CheckEntryDescription.ObjectDictionary-->
						</Parameter>
						<Parameter>online<!--CheckEntryDescription.DictionaryType-->
						</Parameter>
						<Parameter>CoeComm.Index<!--CheckEntryDescription.Index-->
						</Parameter>
						<Parameter>CoeComm.EntryCount<!--CheckEntryDescription.SubIndex-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.LevelWarning-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.CaseSensitive-->
						</Parameter>
						<Parameter>"Cycle Time"</Parameter>
						<!--CheckEntryDescription.Expected.Name-->
						<Parameter>7<!--CheckEntryDescription.Expected.Type-->
						</Parameter>
						<Parameter>true<!--CheckEntryDescription.Expected.Access.ReadInPreOp-->
						</Parameter>
						<Parameter>true<!--CheckEntryDescription.Expected.Access.ReadInSafeOp-->
						</Parameter>
						<Parameter>true<!--CheckEntryDescription.Expected.Access.ReadInOp-->
						</Parameter>
						<Parameter>-1<!--CheckEntryDescription.Expected.Access.WriteInPreOp-->
						</Parameter>
						<Parameter>-1<!--CheckEntryDescription.Expected.Access.WriteInSafeOp-->
						</Parameter>
						<Parameter>-1<!--CheckEntryDescription.Expected.Access.WriteInOp-->
						</Parameter>
						<Parameter>"o"</Parameter>
						<!--CheckEntryDescription.Expected.Category-->
						<Parameter>None<!--CheckEntryDescription.Expected.PdoMapping-->
						</Parameter>
						<Parameter>null<!--CheckEntryDescription.Expected.DefaultData-->
						</Parameter>
						<Parameter>null<!--CheckEntryDescription.Expected.MinData-->
						</Parameter>
						<Parameter>null<!--CheckEntryDescription.Expected.MaxData-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.Expected.Settings-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.Expected.Backup-->
						</Parameter>
						<Parameter>32<!--CheckEntryDescription.Expected.BitSize-->
						</Parameter>
						<Parameter>-1<!--CheckEntryDescription.Expected.BitOffs-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.AllowEnumDataType-->
						</Parameter>
						<OutParameter>CoeComm.bError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>CoeComm.bError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="CoeComm.bResult">false</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CheckSi_3">
					<SetVariable Target="CoeComm.EntryCount">3</SetVariable>
				</TestStep>
				<TestStep>
					<CallTestFunction Name="IsEntryDefined">
						<Parameter>CoeComm.Dict</Parameter>
						<Parameter>CoeComm.Index</Parameter>
						<Parameter>CoeComm.EntryCount</Parameter>
						<OutParameter>CoeComm.TmpBool</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>CoeComm.TmpBool</Value1>
							<Value2>false</Value2>
							<GotoStep>CheckSi_4</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep>
					<Description Id="15" Param0="CoeComm.Index" Param1="CoeComm.EntryCount" Level="Output">0x{0:x4}.{1} Checking entry description...</Description>
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>CoeComm.Dict<!--CheckEntryDescription.ObjectDictionary-->
						</Parameter>
						<Parameter>online<!--CheckEntryDescription.DictionaryType-->
						</Parameter>
						<Parameter>CoeComm.Index<!--CheckEntryDescription.Index-->
						</Parameter>
						<Parameter>CoeComm.EntryCount<!--CheckEntryDescription.SubIndex-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.LevelWarning-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.CaseSensitive-->
						</Parameter>
						<Parameter>"Shift Time"</Parameter>
						<!--CheckEntryDescription.Expected.Name-->
						<Parameter>7<!--CheckEntryDescription.Expected.Type-->
						</Parameter>
						<Parameter>true<!--CheckEntryDescription.Expected.Access.ReadInPreOp-->
						</Parameter>
						<Parameter>true<!--CheckEntryDescription.Expected.Access.ReadInSafeOp-->
						</Parameter>
						<Parameter>true<!--CheckEntryDescription.Expected.Access.ReadInOp-->
						</Parameter>
						<Parameter>-1<!--CheckEntryDescription.Expected.Access.WriteInPreOp-->
						</Parameter>
						<Parameter>-1<!--CheckEntryDescription.Expected.Access.WriteInSafeOp-->
						</Parameter>
						<Parameter>-1<!--CheckEntryDescription.Expected.Access.WriteInOp-->
						</Parameter>
						<Parameter>"o"</Parameter>
						<!--CheckEntryDescription.Expected.Category-->
						<Parameter>None<!--CheckEntryDescription.Expected.PdoMapping-->
						</Parameter>
						<Parameter>null<!--CheckEntryDescription.Expected.DefaultData-->
						</Parameter>
						<Parameter>null<!--CheckEntryDescription.Expected.MinData-->
						</Parameter>
						<Parameter>null<!--CheckEntryDescription.Expected.MaxData-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.Expected.Settings-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.Expected.Backup-->
						</Parameter>
						<Parameter>32<!--CheckEntryDescription.Expected.BitSize-->
						</Parameter>
						<Parameter>-1<!--CheckEntryDescription.Expected.BitOffs-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.AllowEnumDataType-->
						</Parameter>
						<OutParameter>CoeComm.bError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>CoeComm.bError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="CoeComm.bResult">false</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CheckSi_4">
					<SetVariable Target="CoeComm.EntryCount">4</SetVariable>
				</TestStep>
				<TestStep>
					<Description Id="16" Param0="CoeComm.Index" Param1="CoeComm.EntryCount" Level="Output">0x{0:x4}.{1} Checking entry description...</Description>
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>CoeComm.Dict<!--CheckEntryDescription.ObjectDictionary-->
						</Parameter>
						<Parameter>online<!--CheckEntryDescription.DictionaryType-->
						</Parameter>
						<Parameter>CoeComm.Index<!--CheckEntryDescription.Index-->
						</Parameter>
						<Parameter>CoeComm.EntryCount<!--CheckEntryDescription.SubIndex-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.LevelWarning-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.CaseSensitive-->
						</Parameter>
						<Parameter>"Synchronization Types supported","Sync modes supported"</Parameter>
						<!--CheckEntryDescription.Expected.Name-->
						<Parameter>6<!--CheckEntryDescription.Expected.Type-->
						</Parameter>
						<Parameter>true<!--CheckEntryDescription.Expected.Access.ReadInPreOp-->
						</Parameter>
						<Parameter>true<!--CheckEntryDescription.Expected.Access.ReadInSafeOp-->
						</Parameter>
						<Parameter>true<!--CheckEntryDescription.Expected.Access.ReadInOp-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.Expected.Access.WriteInPreOp-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.Expected.Access.WriteInSafeOp-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.Expected.Access.WriteInOp-->
						</Parameter>
						<Parameter>EmptyString<!--CheckEntryDescription.Expected.Category-->
						</Parameter>
						<Parameter>None<!--CheckEntryDescription.Expected.PdoMapping-->
						</Parameter>
						<Parameter>null<!--CheckEntryDescription.Expected.DefaultData-->
						</Parameter>
						<Parameter>null<!--CheckEntryDescription.Expected.MinData-->
						</Parameter>
						<Parameter>null<!--CheckEntryDescription.Expected.MaxData-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.Expected.Settings-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.Expected.Backup-->
						</Parameter>
						<Parameter>16<!--CheckEntryDescription.Expected.BitSize-->
						</Parameter>
						<Parameter>-1<!--CheckEntryDescription.Expected.BitOffs-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.AllowEnumDataType-->
						</Parameter>
						<OutParameter>CoeComm.bError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>CoeComm.bError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="CoeComm.bResult">false</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CheckSi_5">
					<SetVariable Target="CoeComm.EntryCount">5</SetVariable>
					<Compare>
						<Equal>
							<Value1>DeviceDescr.DC</Value1>
							<Value2>true</Value2>
							<GotoStep>VerifySi_5</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep>
					<CallTestFunction Name="CheckDistributedClocksSupport">
						<OutParameter>CoeComm.DutSupportsDc</OutParameter>
					</CallTestFunction>
				</TestStep>
				<TestStep>
					<CallTestFunction Name="IsEntryDefined">
						<Parameter>CoeComm.Dict</Parameter>
						<Parameter>CoeComm.Index</Parameter>
						<Parameter>CoeComm.EntryCount</Parameter>
						<OutParameter>CoeComm.TmpBool</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>CoeComm.TmpBool</Value1>
							<Value2>true</Value2>
							<GotoStep>VerifySi_5</GotoStep>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>CoeComm.DutSupportsDc</Value1>
							<Value2>false</Value2>
							<GotoStep>CheckSi_6</GotoStep>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Level="Error" Param0="CoeComm.Index" Param1="CoeComm.EntryCount">0x{0:x4}.{1} shall be defined if DC is supported.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<SetVariable Target="CoeComm.bResult">false</SetVariable>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>CheckSi_6</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="VerifySi_5">
					<Description Id="17" Param0="CoeComm.Index" Param1="CoeComm.EntryCount" Level="Output">0x{0:x4}.{1} Checking entry description...</Description>
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>CoeComm.Dict<!--CheckEntryDescription.ObjectDictionary-->
						</Parameter>
						<Parameter>online<!--CheckEntryDescription.DictionaryType-->
						</Parameter>
						<Parameter>CoeComm.Index<!--CheckEntryDescription.Index-->
						</Parameter>
						<Parameter>CoeComm.EntryCount<!--CheckEntryDescription.SubIndex-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.LevelWarning-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.CaseSensitive-->
						</Parameter>
						<Parameter>"Minimum Cycle Time"</Parameter>
						<!--CheckEntryDescription.Expected.Name-->
						<Parameter>7<!--CheckEntryDescription.Expected.Type-->
						</Parameter>
						<Parameter>true<!--CheckEntryDescription.Expected.Access.ReadInPreOp-->
						</Parameter>
						<Parameter>true<!--CheckEntryDescription.Expected.Access.ReadInSafeOp-->
						</Parameter>
						<Parameter>true<!--CheckEntryDescription.Expected.Access.ReadInOp-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.Expected.Access.WriteInPreOp-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.Expected.Access.WriteInSafeOp-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.Expected.Access.WriteInOp-->
						</Parameter>
						<Parameter>"o"</Parameter>
						<!--CheckEntryDescription.Expected.Category-->
						<Parameter>None<!--CheckEntryDescription.Expected.PdoMapping-->
						</Parameter>
						<Parameter>null<!--CheckEntryDescription.Expected.DefaultData-->
						</Parameter>
						<Parameter>null<!--CheckEntryDescription.Expected.MinData-->
						</Parameter>
						<Parameter>null<!--CheckEntryDescription.Expected.MaxData-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.Expected.Settings-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.Expected.Backup-->
						</Parameter>
						<Parameter>32<!--CheckEntryDescription.Expected.BitSize-->
						</Parameter>
						<Parameter>-1<!--CheckEntryDescription.Expected.BitOffs-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.AllowEnumDataType-->
						</Parameter>
						<OutParameter>CoeComm.bError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>CoeComm.bError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="CoeComm.bResult">false</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CheckSi_6">
					<SetVariable Target="CoeComm.EntryCount">6</SetVariable>
				</TestStep>
				<TestStep>
					<CallTestFunction Name="CheckDistributedClocksSupport">
						<OutParameter>CoeComm.DutSupportsDc</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>CoeComm.DutSupportsDc</Value1>
							<Value2>true</Value2>
							<WriteLine Level="Output" Param0="CoeComm.Index">DuT supports at least one DC mode 0x{0:X}.6 shall be supported.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>CoeComm.DutSupportsDc</Value1>
							<Value2>true</Value2>
							<GotoStep>VerifySi_6</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep>
					<CallTestFunction Name="IsEntryDefined">
						<Parameter>CoeComm.Dict</Parameter>
						<Parameter>CoeComm.Index</Parameter>
						<Parameter>CoeComm.EntryCount</Parameter>
						<OutParameter>CoeComm.TmpBool</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>CoeComm.TmpBool</Value1>
							<Value2>false</Value2>
							<GotoStep>CheckSi_7</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="VerifySi_6">
					<Description Id="18" Param0="CoeComm.Index" Param1="CoeComm.EntryCount" Level="Output">0x{0:x4}.{1} Checking entry description...</Description>
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>CoeComm.Dict<!--CheckEntryDescription.ObjectDictionary-->
						</Parameter>
						<Parameter>online<!--CheckEntryDescription.DictionaryType-->
						</Parameter>
						<Parameter>CoeComm.Index<!--CheckEntryDescription.Index-->
						</Parameter>
						<Parameter>CoeComm.EntryCount<!--CheckEntryDescription.SubIndex-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.LevelWarning-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.CaseSensitive-->
						</Parameter>
						<Parameter>"Calc and Copy Time"</Parameter>
						<!--CheckEntryDescription.Expected.Name-->
						<Parameter>7<!--CheckEntryDescription.Expected.Type-->
						</Parameter>
						<Parameter>true<!--CheckEntryDescription.Expected.Access.ReadInPreOp-->
						</Parameter>
						<Parameter>true<!--CheckEntryDescription.Expected.Access.ReadInSafeOp-->
						</Parameter>
						<Parameter>true<!--CheckEntryDescription.Expected.Access.ReadInOp-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.Expected.Access.WriteInPreOp-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.Expected.Access.WriteInSafeOp-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.Expected.Access.WriteInOp-->
						</Parameter>
						<Parameter>"o"</Parameter>
						<!--CheckEntryDescription.Expected.Category-->
						<Parameter>None<!--CheckEntryDescription.Expected.PdoMapping-->
						</Parameter>
						<Parameter>null<!--CheckEntryDescription.Expected.DefaultData-->
						</Parameter>
						<Parameter>null<!--CheckEntryDescription.Expected.MinData-->
						</Parameter>
						<Parameter>null<!--CheckEntryDescription.Expected.MaxData-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.Expected.Settings-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.Expected.Backup-->
						</Parameter>
						<Parameter>32<!--CheckEntryDescription.Expected.BitSize-->
						</Parameter>
						<Parameter>-1<!--CheckEntryDescription.Expected.BitOffs-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.AllowEnumDataType-->
						</Parameter>
						<OutParameter>CoeComm.bError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>CoeComm.bError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="CoeComm.bResult">false</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CheckSi_7">
					<SetVariable Target="CoeComm.EntryCount">7</SetVariable>
				</TestStep>
				<TestStep>
					<CallTestFunction Name="IsEntryDefined">
						<Parameter>CoeComm.Dict</Parameter>
						<Parameter>CoeComm.Index</Parameter>
						<Parameter>CoeComm.EntryCount</Parameter>
						<OutParameter>CoeComm.TmpBool</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>CoeComm.TmpBool</Value1>
							<Value2>false</Value2>
							<GotoStep>CheckSi_8</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="VerifySi_7">
					<Description Id="19" Param0="CoeComm.Index" Param1="CoeComm.EntryCount" Level="Output">0x{0:x4}.{1} Checking entry description...</Description>
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>CoeComm.Dict<!--CheckEntryDescription.ObjectDictionary-->
						</Parameter>
						<Parameter>online<!--CheckEntryDescription.DictionaryType-->
						</Parameter>
						<Parameter>CoeComm.Index<!--CheckEntryDescription.Index-->
						</Parameter>
						<Parameter>CoeComm.EntryCount<!--CheckEntryDescription.SubIndex-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.LevelWarning-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.CaseSensitive-->
						</Parameter>
						<Parameter>"Minimum Delay Time"</Parameter>
						<!--CheckEntryDescription.Expected.Name-->
						<Parameter>7<!--CheckEntryDescription.Expected.Type-->
						</Parameter>
						<Parameter>true<!--CheckEntryDescription.Expected.Access.ReadInPreOp-->
						</Parameter>
						<Parameter>true<!--CheckEntryDescription.Expected.Access.ReadInSafeOp-->
						</Parameter>
						<Parameter>true<!--CheckEntryDescription.Expected.Access.ReadInOp-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.Expected.Access.WriteInPreOp-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.Expected.Access.WriteInSafeOp-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.Expected.Access.WriteInOp-->
						</Parameter>
						<Parameter>"o"</Parameter>
						<!--CheckEntryDescription.Expected.Category-->
						<Parameter>None<!--CheckEntryDescription.Expected.PdoMapping-->
						</Parameter>
						<Parameter>null<!--CheckEntryDescription.Expected.DefaultData-->
						</Parameter>
						<Parameter>null<!--CheckEntryDescription.Expected.MinData-->
						</Parameter>
						<Parameter>null<!--CheckEntryDescription.Expected.MaxData-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.Expected.Settings-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.Expected.Backup-->
						</Parameter>
						<Parameter>32<!--CheckEntryDescription.Expected.BitSize-->
						</Parameter>
						<Parameter>-1<!--CheckEntryDescription.Expected.BitOffs-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.AllowEnumDataType-->
						</Parameter>
						<OutParameter>CoeComm.bError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>CoeComm.bError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="CoeComm.bResult">false</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CheckSi_8">
					<SetVariable Target="CoeComm.EntryCount">8</SetVariable>
				</TestStep>
				<TestStep>
					<CallTestFunction Name="IsEntryDefined">
						<Parameter>CoeComm.Dict</Parameter>
						<Parameter>CoeComm.Index</Parameter>
						<Parameter>CoeComm.EntryCount</Parameter>
						<OutParameter>CoeComm.TmpBool</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>CoeComm.TmpBool</Value1>
							<Value2>false</Value2>
							<GotoStep>CheckSi_9</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="VerifySi_8">
					<Description Id="20" Param0="CoeComm.Index" Param1="CoeComm.EntryCount" Level="Output">0x{0:x4}.{1} Checking entry description...</Description>
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>CoeComm.Dict<!--CheckEntryDescription.ObjectDictionary-->
						</Parameter>
						<Parameter>online<!--CheckEntryDescription.DictionaryType-->
						</Parameter>
						<Parameter>CoeComm.Index<!--CheckEntryDescription.Index-->
						</Parameter>
						<Parameter>CoeComm.EntryCount<!--CheckEntryDescription.SubIndex-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.LevelWarning-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.CaseSensitive-->
						</Parameter>
						<Parameter>"Get Cycle Time","Command"</Parameter>
						<!--CheckEntryDescription.Expected.Name-->
						<Parameter>6<!--CheckEntryDescription.Expected.Type-->
						</Parameter>
						<Parameter>-1<!--CheckEntryDescription.Expected.Access.ReadInPreOp-->
						</Parameter>
						<Parameter>-1<!--CheckEntryDescription.Expected.Access.ReadInSafeOp-->
						</Parameter>
						<Parameter>-1<!--CheckEntryDescription.Expected.Access.ReadInOp-->
						</Parameter>
						<Parameter>-1<!--CheckEntryDescription.Expected.Access.WriteInPreOp-->
						</Parameter>
						<Parameter>-1<!--CheckEntryDescription.Expected.Access.WriteInSafeOp-->
						</Parameter>
						<Parameter>-1<!--CheckEntryDescription.Expected.Access.WriteInOp-->
						</Parameter>
						<Parameter>"o"</Parameter>
						<!--CheckEntryDescription.Expected.Category-->
						<Parameter>None<!--CheckEntryDescription.Expected.PdoMapping-->
						</Parameter>
						<Parameter>null<!--CheckEntryDescription.Expected.DefaultData-->
						</Parameter>
						<Parameter>null<!--CheckEntryDescription.Expected.MinData-->
						</Parameter>
						<Parameter>null<!--CheckEntryDescription.Expected.MaxData-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.Expected.Settings-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.Expected.Backup-->
						</Parameter>
						<Parameter>16<!--CheckEntryDescription.Expected.BitSize-->
						</Parameter>
						<Parameter>-1<!--CheckEntryDescription.Expected.BitOffs-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.AllowEnumDataType-->
						</Parameter>
						<OutParameter>CoeComm.bError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>CoeComm.bError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="CoeComm.bResult">false</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CheckSi_9">
					<SetVariable Target="CoeComm.EntryCount">9</SetVariable>
				</TestStep>
				<TestStep>
					<CallTestFunction Name="IsEntryDefined">
						<Parameter>CoeComm.Dict</Parameter>
						<Parameter>CoeComm.Index</Parameter>
						<Parameter>CoeComm.EntryCount</Parameter>
						<OutParameter>CoeComm.TmpBool</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>CoeComm.TmpBool</Value1>
							<Value2>false</Value2>
							<GotoStep>CheckSi_10</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="VerifySi_9">
					<Description Id="21" Param0="CoeComm.Index" Param1="CoeComm.EntryCount" Level="Output">0x{0:x4}.{1} Checking entry description...</Description>
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>CoeComm.Dict<!--CheckEntryDescription.ObjectDictionary-->
						</Parameter>
						<Parameter>online<!--CheckEntryDescription.DictionaryType-->
						</Parameter>
						<Parameter>CoeComm.Index<!--CheckEntryDescription.Index-->
						</Parameter>
						<Parameter>CoeComm.EntryCount<!--CheckEntryDescription.SubIndex-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.LevelWarning-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.CaseSensitive-->
						</Parameter>
						<Parameter>"Delay Time","Maximum delay time"</Parameter>
						<!--CheckEntryDescription.Expected.Name-->
						<Parameter>7<!--CheckEntryDescription.Expected.Type-->
						</Parameter>
						<Parameter>true<!--CheckEntryDescription.Expected.Access.ReadInPreOp-->
						</Parameter>
						<Parameter>true<!--CheckEntryDescription.Expected.Access.ReadInSafeOp-->
						</Parameter>
						<Parameter>true<!--CheckEntryDescription.Expected.Access.ReadInOp-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.Expected.Access.WriteInPreOp-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.Expected.Access.WriteInSafeOp-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.Expected.Access.WriteInOp-->
						</Parameter>
						<Parameter>"o"</Parameter>
						<!--CheckEntryDescription.Expected.Category-->
						<Parameter>None<!--CheckEntryDescription.Expected.PdoMapping-->
						</Parameter>
						<Parameter>null<!--CheckEntryDescription.Expected.DefaultData-->
						</Parameter>
						<Parameter>null<!--CheckEntryDescription.Expected.MinData-->
						</Parameter>
						<Parameter>null<!--CheckEntryDescription.Expected.MaxData-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.Expected.Settings-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.Expected.Backup-->
						</Parameter>
						<Parameter>32<!--CheckEntryDescription.Expected.BitSize-->
						</Parameter>
						<Parameter>-1<!--CheckEntryDescription.Expected.BitOffs-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.AllowEnumDataType-->
						</Parameter>
						<OutParameter>CoeComm.bError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>CoeComm.bError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="CoeComm.bResult">false</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CheckSi_10">
					<SetVariable Target="CoeComm.EntryCount">10</SetVariable>
				</TestStep>
				<TestStep>
					<CallTestFunction Name="IsEntryDefined">
						<Parameter>CoeComm.Dict</Parameter>
						<Parameter>CoeComm.Index</Parameter>
						<Parameter>CoeComm.EntryCount</Parameter>
						<OutParameter>CoeComm.TmpBool</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>CoeComm.TmpBool</Value1>
							<Value2>false</Value2>
							<GotoStep>CheckSi_11</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="VerifySi_10">
					<Description Id="22" Param0="CoeComm.Index" Param1="CoeComm.EntryCount" Level="Output">0x{0:x4}.{1} Checking entry description...</Description>
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>CoeComm.Dict<!--CheckEntryDescription.ObjectDictionary-->
						</Parameter>
						<Parameter>online<!--CheckEntryDescription.DictionaryType-->
						</Parameter>
						<Parameter>CoeComm.Index<!--CheckEntryDescription.Index-->
						</Parameter>
						<Parameter>CoeComm.EntryCount<!--CheckEntryDescription.SubIndex-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.LevelWarning-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.CaseSensitive-->
						</Parameter>
						<Parameter>"Sync0 Cycle Time"</Parameter>
						<!--CheckEntryDescription.Expected.Name-->
						<Parameter>7<!--CheckEntryDescription.Expected.Type-->
						</Parameter>
						<Parameter>-1<!--CheckEntryDescription.Expected.Access.ReadInPreOp-->
						</Parameter>
						<Parameter>-1<!--CheckEntryDescription.Expected.Access.ReadInSafeOp-->
						</Parameter>
						<Parameter>-1<!--CheckEntryDescription.Expected.Access.ReadInOp-->
						</Parameter>
						<Parameter>-1<!--CheckEntryDescription.Expected.Access.WriteInPreOp-->
						</Parameter>
						<Parameter>-1<!--CheckEntryDescription.Expected.Access.WriteInSafeOp-->
						</Parameter>
						<Parameter>-1<!--CheckEntryDescription.Expected.Access.WriteInOp-->
						</Parameter>
						<Parameter>"o"</Parameter>
						<!--CheckEntryDescription.Expected.Category-->
						<Parameter>None<!--CheckEntryDescription.Expected.PdoMapping-->
						</Parameter>
						<Parameter>null<!--CheckEntryDescription.Expected.DefaultData-->
						</Parameter>
						<Parameter>null<!--CheckEntryDescription.Expected.MinData-->
						</Parameter>
						<Parameter>null<!--CheckEntryDescription.Expected.MaxData-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.Expected.Settings-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.Expected.Backup-->
						</Parameter>
						<Parameter>32<!--CheckEntryDescription.Expected.BitSize-->
						</Parameter>
						<Parameter>-1<!--CheckEntryDescription.Expected.BitOffs-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.AllowEnumDataType-->
						</Parameter>
						<OutParameter>CoeComm.bError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>CoeComm.bError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="CoeComm.bResult">false</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CheckSi_11">
					<SetVariable Target="CoeComm.EntryCount">11</SetVariable>
				</TestStep>
				<TestStep>
					<CallTestFunction Name="CheckDistributedClocksSupport">
						<OutParameter>CoeComm.DutSupportsDc</OutParameter>
					</CallTestFunction>
				</TestStep>
				<TestStep>
					<CallTestFunction Name="IsEntryDefined">
						<Parameter>CoeComm.Dict</Parameter>
						<Parameter>CoeComm.Index</Parameter>
						<Parameter>CoeComm.EntryCount</Parameter>
						<OutParameter>CoeComm.TmpBool</OutParameter>
					</CallTestFunction>
					<!--DC is not supported : skip Si11-->
					<Compare>
						<Equal>
							<Value1>CoeComm.DutSupportsDc</Value1>
							<Value2>false</Value2>
							<GotoStep>CheckSi_12</GotoStep>
						</Equal>
					</Compare>
					<!--Si 11 is defined and DC is supported : check entry description-->
					<Compare>
						<Equal>
							<Value1>CoeComm.TmpBool AND CoeComm.DutSupportsDc</Value1>
							<Value2>true</Value2>
							<GotoStep>VerifySi_11</GotoStep>
						</Equal>
					</Compare>
					<!--Si 11 is not defined and DC is supported : write warning and skip entry test-->
					<Compare>
						<Equal>
							<Value1>CoeComm.TmpBool</Value1>
							<Value2>false</Value2>
							<WriteLine Id="23" Level="Warning" Param0="CoeComm.Index">0x:{0:X}.11 should be defined because the DuT supports one DC synchonization mode.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>CoeComm.TmpBool</Value1>
							<Value2>false</Value2>
							<GotoStep>CheckSi_12</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="VerifySi_11">
					<Description Id="24" Param0="CoeComm.Index" Param1="CoeComm.EntryCount" Level="Output">0x{0:x4}.{1} Checking entry description...</Description>
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>CoeComm.Dict<!--CheckEntryDescription.ObjectDictionary-->
						</Parameter>
						<Parameter>online<!--CheckEntryDescription.DictionaryType-->
						</Parameter>
						<Parameter>CoeComm.Index<!--CheckEntryDescription.Index-->
						</Parameter>
						<Parameter>CoeComm.EntryCount<!--CheckEntryDescription.SubIndex-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.LevelWarning-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.CaseSensitive-->
						</Parameter>
						<Parameter>"SM-Event Missed","SM event missed counter"</Parameter>
						<!--CheckEntryDescription.Expected.Name-->
						<Parameter>6<!--CheckEntryDescription.Expected.Type-->
						</Parameter>
						<Parameter>true<!--CheckEntryDescription.Expected.Access.ReadInPreOp-->
						</Parameter>
						<Parameter>true<!--CheckEntryDescription.Expected.Access.ReadInSafeOp-->
						</Parameter>
						<Parameter>true<!--CheckEntryDescription.Expected.Access.ReadInOp-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.Expected.Access.WriteInPreOp-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.Expected.Access.WriteInSafeOp-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.Expected.Access.WriteInOp-->
						</Parameter>
						<Parameter>"o"</Parameter>
						<!--CheckEntryDescription.Expected.Category-->
						<Parameter>None<!--CheckEntryDescription.Expected.PdoMapping-->
						</Parameter>
						<Parameter>null<!--CheckEntryDescription.Expected.DefaultData-->
						</Parameter>
						<Parameter>null<!--CheckEntryDescription.Expected.MinData-->
						</Parameter>
						<Parameter>null<!--CheckEntryDescription.Expected.MaxData-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.Expected.Settings-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.Expected.Backup-->
						</Parameter>
						<Parameter>16<!--CheckEntryDescription.Expected.BitSize-->
						</Parameter>
						<Parameter>-1<!--CheckEntryDescription.Expected.BitOffs-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.AllowEnumDataType-->
						</Parameter>
						<OutParameter>CoeComm.bError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>CoeComm.bError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="CoeComm.bResult">false</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CheckSi_12">
					<SetVariable Target="CoeComm.EntryCount">12</SetVariable>
				</TestStep>
				<TestStep>
					<CallTestFunction Name="CheckDistributedClocksSupport">
						<OutParameter>CoeComm.DutSupportsDc</OutParameter>
					</CallTestFunction>
				</TestStep>
				<TestStep>
					<CallTestFunction Name="IsEntryDefined">
						<Parameter>CoeComm.Dict</Parameter>
						<Parameter>CoeComm.Index</Parameter>
						<Parameter>CoeComm.EntryCount</Parameter>
						<OutParameter>CoeComm.TmpBool</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>CoeComm.TmpBool</Value1>
							<Value2>true</Value2>
							<GotoStep>VerifySi_12</GotoStep>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>CoeComm.DutSupportsDc</Value1>
							<Value2>false</Value2>
							<GotoStep>CheckSi_13</GotoStep>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Level="Error" Param0="CoeComm.Index" Param1="CoeComm.EntryCount">0x{0:x4}.{1} shall be defined if DC is supported.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<SetVariable Target="CoeComm.bResult">false</SetVariable>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>CheckSi_13</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="VerifySi_12">
					<Description Id="25" Param0="CoeComm.Index" Param1="CoeComm.EntryCount" Level="Output">0x{0:x4}.{1} Checking entry description...</Description>
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>CoeComm.Dict<!--CheckEntryDescription.ObjectDictionary-->
						</Parameter>
						<Parameter>online<!--CheckEntryDescription.DictionaryType-->
						</Parameter>
						<Parameter>CoeComm.Index<!--CheckEntryDescription.Index-->
						</Parameter>
						<Parameter>CoeComm.EntryCount<!--CheckEntryDescription.SubIndex-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.LevelWarning-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.CaseSensitive-->
						</Parameter>
						<Parameter>"Cycle Time Too Small","Cycle exceeded counter"</Parameter>
						<!--CheckEntryDescription.Expected.Name-->
						<Parameter>6<!--CheckEntryDescription.Expected.Type-->
						</Parameter>
						<Parameter>true<!--CheckEntryDescription.Expected.Access.ReadInPreOp-->
						</Parameter>
						<Parameter>true<!--CheckEntryDescription.Expected.Access.ReadInSafeOp-->
						</Parameter>
						<Parameter>true<!--CheckEntryDescription.Expected.Access.ReadInOp-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.Expected.Access.WriteInPreOp-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.Expected.Access.WriteInSafeOp-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.Expected.Access.WriteInOp-->
						</Parameter>
						<Parameter>"o"</Parameter>
						<!--CheckEntryDescription.Expected.Category-->
						<Parameter>None<!--CheckEntryDescription.Expected.PdoMapping-->
						</Parameter>
						<Parameter>null<!--CheckEntryDescription.Expected.DefaultData-->
						</Parameter>
						<Parameter>null<!--CheckEntryDescription.Expected.MinData-->
						</Parameter>
						<Parameter>null<!--CheckEntryDescription.Expected.MaxData-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.Expected.Settings-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.Expected.Backup-->
						</Parameter>
						<Parameter>16<!--CheckEntryDescription.Expected.BitSize-->
						</Parameter>
						<Parameter>-1<!--CheckEntryDescription.Expected.BitOffs-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.AllowEnumDataType-->
						</Parameter>
						<OutParameter>CoeComm.bError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>CoeComm.bError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="CoeComm.bResult">false</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CheckSi_13">
					<SetVariable Target="CoeComm.EntryCount">13</SetVariable>
				</TestStep>
				<TestStep>
					<CallTestFunction Name="CheckDistributedClocksSupport">
						<OutParameter>CoeComm.DutSupportsDc</OutParameter>
					</CallTestFunction>
				</TestStep>
				<TestStep>
					<CallTestFunction Name="IsEntryDefined">
						<Parameter>CoeComm.Dict</Parameter>
						<Parameter>CoeComm.Index</Parameter>
						<Parameter>CoeComm.EntryCount</Parameter>
						<OutParameter>CoeComm.TmpBool</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>CoeComm.TmpBool</Value1>
							<Value2>false</Value2>
							<GotoStep>CheckSi_14</GotoStep>
						</Equal>
					</Compare>
					<!--Si 13 is defined and DC is supported : check entry description-->
					<Compare>
						<Equal>
							<Value1>CoeComm.TmpBool AND CoeComm.DutSupportsDc</Value1>
							<Value2>true</Value2>
							<GotoStep>VerifySi_13</GotoStep>
						</Equal>
					</Compare>
					<!--Si 13 is not defined and DC is supported : write warning and skip entry test-->
					<Compare>
						<Equal>
							<Value1>CoeComm.TmpBool</Value1>
							<Value2>false</Value2>
							<WriteLine Id="39" Level="Warning" Param0="CoeComm.Index">0x:{0:X}.11 should be defined because the DuT supports one DC synchonization mode.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>CoeComm.TmpBool</Value1>
							<Value2>false</Value2>
							<GotoStep>CheckSi_14</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="VerifySi_13">
					<Description Id="26" Param0="CoeComm.Index" Param1="CoeComm.EntryCount" Level="Output">0x{0:x4}.{1} Checking entry description...</Description>
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>CoeComm.Dict<!--CheckEntryDescription.ObjectDictionary-->
						</Parameter>
						<Parameter>online<!--CheckEntryDescription.DictionaryType-->
						</Parameter>
						<Parameter>CoeComm.Index<!--CheckEntryDescription.Index-->
						</Parameter>
						<Parameter>CoeComm.EntryCount<!--CheckEntryDescription.SubIndex-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.LevelWarning-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.CaseSensitive-->
						</Parameter>
						<Parameter>"Shift Time Too Short","Shift too short counter"</Parameter>
						<!--CheckEntryDescription.Expected.Name-->
						<Parameter>6<!--CheckEntryDescription.Expected.Type-->
						</Parameter>
						<Parameter>true<!--CheckEntryDescription.Expected.Access.ReadInPreOp-->
						</Parameter>
						<Parameter>true<!--CheckEntryDescription.Expected.Access.ReadInSafeOp-->
						</Parameter>
						<Parameter>true<!--CheckEntryDescription.Expected.Access.ReadInOp-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.Expected.Access.WriteInPreOp-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.Expected.Access.WriteInSafeOp-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.Expected.Access.WriteInOp-->
						</Parameter>
						<Parameter>"o"</Parameter>
						<!--CheckEntryDescription.Expected.Category-->
						<Parameter>None<!--CheckEntryDescription.Expected.PdoMapping-->
						</Parameter>
						<Parameter>null<!--CheckEntryDescription.Expected.DefaultData-->
						</Parameter>
						<Parameter>null<!--CheckEntryDescription.Expected.MinData-->
						</Parameter>
						<Parameter>null<!--CheckEntryDescription.Expected.MaxData-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.Expected.Settings-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.Expected.Backup-->
						</Parameter>
						<Parameter>16<!--CheckEntryDescription.Expected.BitSize-->
						</Parameter>
						<Parameter>-1<!--CheckEntryDescription.Expected.BitOffs-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.AllowEnumDataType-->
						</Parameter>
						<OutParameter>CoeComm.bError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>CoeComm.bError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="CoeComm.bResult">false</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CheckSi_14">
					<SetVariable Target="CoeComm.EntryCount">14</SetVariable>
				</TestStep>
				<TestStep>
					<CallTestFunction Name="IsEntryDefined">
						<Parameter>CoeComm.Dict</Parameter>
						<Parameter>CoeComm.Index</Parameter>
						<Parameter>CoeComm.EntryCount</Parameter>
						<OutParameter>CoeComm.TmpBool</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>CoeComm.TmpBool</Value1>
							<Value2>false</Value2>
							<GotoStep>CheckSi_15</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="VerifySi_14">
					<Description Id="27" Param0="CoeComm.Index" Param1="CoeComm.EntryCount" Level="Output">0x{0:x4}.{1} Checking entry description...</Description>
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>CoeComm.Dict<!--CheckEntryDescription.ObjectDictionary-->
						</Parameter>
						<Parameter>online<!--CheckEntryDescription.DictionaryType-->
						</Parameter>
						<Parameter>CoeComm.Index<!--CheckEntryDescription.Index-->
						</Parameter>
						<Parameter>CoeComm.EntryCount<!--CheckEntryDescription.SubIndex-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.LevelWarning-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.CaseSensitive-->
						</Parameter>
						<Parameter>"RxPDO Toggle Failed"</Parameter>
						<!--CheckEntryDescription.Expected.Name-->
						<Parameter>6<!--CheckEntryDescription.Expected.Type-->
						</Parameter>
						<Parameter>true<!--CheckEntryDescription.Expected.Access.ReadInPreOp-->
						</Parameter>
						<Parameter>true<!--CheckEntryDescription.Expected.Access.ReadInSafeOp-->
						</Parameter>
						<Parameter>true<!--CheckEntryDescription.Expected.Access.ReadInOp-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.Expected.Access.WriteInPreOp-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.Expected.Access.WriteInSafeOp-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.Expected.Access.WriteInOp-->
						</Parameter>
						<Parameter>"o"</Parameter>
						<!--CheckEntryDescription.Expected.Category-->
						<Parameter>None<!--CheckEntryDescription.Expected.PdoMapping-->
						</Parameter>
						<Parameter>null<!--CheckEntryDescription.Expected.DefaultData-->
						</Parameter>
						<Parameter>null<!--CheckEntryDescription.Expected.MinData-->
						</Parameter>
						<Parameter>null<!--CheckEntryDescription.Expected.MaxData-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.Expected.Settings-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.Expected.Backup-->
						</Parameter>
						<Parameter>16<!--CheckEntryDescription.Expected.BitSize-->
						</Parameter>
						<Parameter>-1<!--CheckEntryDescription.Expected.BitOffs-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.AllowEnumDataType-->
						</Parameter>
						<OutParameter>CoeComm.bError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>CoeComm.bError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="CoeComm.bResult">false</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CheckSi_15">
					<SetVariable Target="CoeComm.EntryCount">15</SetVariable>
				</TestStep>
				<TestStep>
					<CallTestFunction Name="IsEntryDefined">
						<Parameter>CoeComm.Dict</Parameter>
						<Parameter>CoeComm.Index</Parameter>
						<Parameter>CoeComm.EntryCount</Parameter>
						<OutParameter>CoeComm.TmpBool</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>CoeComm.TmpBool</Value1>
							<Value2>false</Value2>
							<GotoStep>CheckSi_16</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="VerifySi_15">
					<Description Id="28" Param0="CoeComm.Index" Param1="CoeComm.EntryCount" Level="Output">0x{0:x4}.{1} Checking entry description...</Description>
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>CoeComm.Dict<!--CheckEntryDescription.ObjectDictionary-->
						</Parameter>
						<Parameter>online<!--CheckEntryDescription.DictionaryType-->
						</Parameter>
						<Parameter>CoeComm.Index<!--CheckEntryDescription.Index-->
						</Parameter>
						<Parameter>CoeComm.EntryCount<!--CheckEntryDescription.SubIndex-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.LevelWarning-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.CaseSensitive-->
						</Parameter>
						<Parameter>"Minimum Cycle Distance"</Parameter>
						<!--CheckEntryDescription.Expected.Name-->
						<Parameter>7<!--CheckEntryDescription.Expected.Type-->
						</Parameter>
						<Parameter>true<!--CheckEntryDescription.Expected.Access.ReadInPreOp-->
						</Parameter>
						<Parameter>true<!--CheckEntryDescription.Expected.Access.ReadInSafeOp-->
						</Parameter>
						<Parameter>true<!--CheckEntryDescription.Expected.Access.ReadInOp-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.Expected.Access.WriteInPreOp-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.Expected.Access.WriteInSafeOp-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.Expected.Access.WriteInOp-->
						</Parameter>
						<Parameter>"o"</Parameter>
						<!--CheckEntryDescription.Expected.Category-->
						<Parameter>None<!--CheckEntryDescription.Expected.PdoMapping-->
						</Parameter>
						<Parameter>null<!--CheckEntryDescription.Expected.DefaultData-->
						</Parameter>
						<Parameter>null<!--CheckEntryDescription.Expected.MinData-->
						</Parameter>
						<Parameter>null<!--CheckEntryDescription.Expected.MaxData-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.Expected.Settings-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.Expected.Backup-->
						</Parameter>
						<Parameter>32<!--CheckEntryDescription.Expected.BitSize-->
						</Parameter>
						<Parameter>-1<!--CheckEntryDescription.Expected.BitOffs-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.AllowEnumDataType-->
						</Parameter>
						<OutParameter>CoeComm.bError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>CoeComm.bError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="CoeComm.bResult">false</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CheckSi_16">
					<SetVariable Target="CoeComm.EntryCount">16</SetVariable>
				</TestStep>
				<TestStep>
					<CallTestFunction Name="IsEntryDefined">
						<Parameter>CoeComm.Dict</Parameter>
						<Parameter>CoeComm.Index</Parameter>
						<Parameter>CoeComm.EntryCount</Parameter>
						<OutParameter>CoeComm.TmpBool</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>CoeComm.TmpBool</Value1>
							<Value2>false</Value2>
							<GotoStep>CheckSi_17</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="VerifySi_16">
					<Description Id="29" Param0="CoeComm.Index" Param1="CoeComm.EntryCount" Level="Output">0x{0:x4}.{1} Checking entry description...</Description>
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>CoeComm.Dict<!--CheckEntryDescription.ObjectDictionary-->
						</Parameter>
						<Parameter>online<!--CheckEntryDescription.DictionaryType-->
						</Parameter>
						<Parameter>CoeComm.Index<!--CheckEntryDescription.Index-->
						</Parameter>
						<Parameter>CoeComm.EntryCount<!--CheckEntryDescription.SubIndex-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.LevelWarning-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.CaseSensitive-->
						</Parameter>
						<Parameter>"Maximum Cycle Distance"</Parameter>
						<!--CheckEntryDescription.Expected.Name-->
						<Parameter>7<!--CheckEntryDescription.Expected.Type-->
						</Parameter>
						<Parameter>true<!--CheckEntryDescription.Expected.Access.ReadInPreOp-->
						</Parameter>
						<Parameter>true<!--CheckEntryDescription.Expected.Access.ReadInSafeOp-->
						</Parameter>
						<Parameter>true<!--CheckEntryDescription.Expected.Access.ReadInOp-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.Expected.Access.WriteInPreOp-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.Expected.Access.WriteInSafeOp-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.Expected.Access.WriteInOp-->
						</Parameter>
						<Parameter>"o"</Parameter>
						<!--CheckEntryDescription.Expected.Category-->
						<Parameter>None<!--CheckEntryDescription.Expected.PdoMapping-->
						</Parameter>
						<Parameter>null<!--CheckEntryDescription.Expected.DefaultData-->
						</Parameter>
						<Parameter>null<!--CheckEntryDescription.Expected.MinData-->
						</Parameter>
						<Parameter>null<!--CheckEntryDescription.Expected.MaxData-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.Expected.Settings-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.Expected.Backup-->
						</Parameter>
						<Parameter>32<!--CheckEntryDescription.Expected.BitSize-->
						</Parameter>
						<Parameter>-1<!--CheckEntryDescription.Expected.BitOffs-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.AllowEnumDataType-->
						</Parameter>
						<OutParameter>CoeComm.bError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>CoeComm.bError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="CoeComm.bResult">false</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CheckSi_17">
					<SetVariable Target="CoeComm.EntryCount">17</SetVariable>
				</TestStep>
				<TestStep>
					<CallTestFunction Name="IsEntryDefined">
						<Parameter>CoeComm.Dict</Parameter>
						<Parameter>CoeComm.Index</Parameter>
						<Parameter>CoeComm.EntryCount</Parameter>
						<OutParameter>CoeComm.TmpBool</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>CoeComm.TmpBool</Value1>
							<Value2>false</Value2>
							<GotoStep>CheckSi_18</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="VerifySi_17">
					<Description Id="30" Param0="CoeComm.Index" Param1="CoeComm.EntryCount" Level="Output">0x{0:x4}.{1} Checking entry description...</Description>
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>CoeComm.Dict<!--CheckEntryDescription.ObjectDictionary-->
						</Parameter>
						<Parameter>online<!--CheckEntryDescription.DictionaryType-->
						</Parameter>
						<Parameter>CoeComm.Index<!--CheckEntryDescription.Index-->
						</Parameter>
						<Parameter>CoeComm.EntryCount<!--CheckEntryDescription.SubIndex-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.LevelWarning-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.CaseSensitive-->
						</Parameter>
						<Parameter>"Minimum SM Sync Distance"</Parameter>
						<!--CheckEntryDescription.Expected.Name-->
						<Parameter>7<!--CheckEntryDescription.Expected.Type-->
						</Parameter>
						<Parameter>true<!--CheckEntryDescription.Expected.Access.ReadInPreOp-->
						</Parameter>
						<Parameter>true<!--CheckEntryDescription.Expected.Access.ReadInSafeOp-->
						</Parameter>
						<Parameter>true<!--CheckEntryDescription.Expected.Access.ReadInOp-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.Expected.Access.WriteInPreOp-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.Expected.Access.WriteInSafeOp-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.Expected.Access.WriteInOp-->
						</Parameter>
						<Parameter>"o"</Parameter>
						<!--CheckEntryDescription.Expected.Category-->
						<Parameter>None<!--CheckEntryDescription.Expected.PdoMapping-->
						</Parameter>
						<Parameter>null<!--CheckEntryDescription.Expected.DefaultData-->
						</Parameter>
						<Parameter>null<!--CheckEntryDescription.Expected.MinData-->
						</Parameter>
						<Parameter>null<!--CheckEntryDescription.Expected.MaxData-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.Expected.Settings-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.Expected.Backup-->
						</Parameter>
						<Parameter>32<!--CheckEntryDescription.Expected.BitSize-->
						</Parameter>
						<Parameter>-1<!--CheckEntryDescription.Expected.BitOffs-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.AllowEnumDataType-->
						</Parameter>
						<OutParameter>CoeComm.bError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>CoeComm.bError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="CoeComm.bResult">false</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CheckSi_18">
					<SetVariable Target="CoeComm.EntryCount">18</SetVariable>
				</TestStep>
				<TestStep>
					<CallTestFunction Name="IsEntryDefined">
						<Parameter>CoeComm.Dict</Parameter>
						<Parameter>CoeComm.Index</Parameter>
						<Parameter>CoeComm.EntryCount</Parameter>
						<OutParameter>CoeComm.TmpBool</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>CoeComm.TmpBool</Value1>
							<Value2>false</Value2>
							<GotoStep>CheckSi_19</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="VerifySi_18">
					<Description Id="31" Param0="CoeComm.Index" Param1="CoeComm.EntryCount" Level="Output">0x{0:x4}.{1} Checking entry description...</Description>
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>CoeComm.Dict<!--CheckEntryDescription.ObjectDictionary-->
						</Parameter>
						<Parameter>online<!--CheckEntryDescription.DictionaryType-->
						</Parameter>
						<Parameter>CoeComm.Index<!--CheckEntryDescription.Index-->
						</Parameter>
						<Parameter>CoeComm.EntryCount<!--CheckEntryDescription.SubIndex-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.LevelWarning-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.CaseSensitive-->
						</Parameter>
						<Parameter>"Maximum SM Sync Distance"</Parameter>
						<!--CheckEntryDescription.Expected.Name-->
						<Parameter>7<!--CheckEntryDescription.Expected.Type-->
						</Parameter>
						<Parameter>true<!--CheckEntryDescription.Expected.Access.ReadInPreOp-->
						</Parameter>
						<Parameter>true<!--CheckEntryDescription.Expected.Access.ReadInSafeOp-->
						</Parameter>
						<Parameter>true<!--CheckEntryDescription.Expected.Access.ReadInOp-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.Expected.Access.WriteInPreOp-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.Expected.Access.WriteInSafeOp-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.Expected.Access.WriteInOp-->
						</Parameter>
						<Parameter>"o"</Parameter>
						<!--CheckEntryDescription.Expected.Category-->
						<Parameter>None<!--CheckEntryDescription.Expected.PdoMapping-->
						</Parameter>
						<Parameter>null<!--CheckEntryDescription.Expected.DefaultData-->
						</Parameter>
						<Parameter>null<!--CheckEntryDescription.Expected.MinData-->
						</Parameter>
						<Parameter>null<!--CheckEntryDescription.Expected.MaxData-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.Expected.Settings-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.Expected.Backup-->
						</Parameter>
						<Parameter>32<!--CheckEntryDescription.Expected.BitSize-->
						</Parameter>
						<Parameter>-1<!--CheckEntryDescription.Expected.BitOffs-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.AllowEnumDataType-->
						</Parameter>
						<OutParameter>CoeComm.bError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>CoeComm.bError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="CoeComm.bResult">false</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CheckSi_19">
					<SetVariable Target="CoeComm.EntryCount">19</SetVariable>
				</TestStep>
				<TestStep>
					<CallTestFunction Name="IsEntryDefined">
						<Parameter>CoeComm.Dict</Parameter>
						<Parameter>CoeComm.Index</Parameter>
						<Parameter>CoeComm.EntryCount</Parameter>
						<OutParameter>CoeComm.TmpBool</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>CoeComm.TmpBool</Value1>
							<Value2>false</Value2>
							<GotoStep>CheckSi_20</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="VerifySi_19">
					<Description Id="32" Param0="CoeComm.Index" Param1="CoeComm.EntryCount" Level="Output">0x{0:x4}.{1} Checking entry description...</Description>
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>CoeComm.Dict<!--CheckEntryDescription.ObjectDictionary-->
						</Parameter>
						<Parameter>online<!--CheckEntryDescription.DictionaryType-->
						</Parameter>
						<Parameter>CoeComm.Index<!--CheckEntryDescription.Index-->
						</Parameter>
						<Parameter>CoeComm.EntryCount<!--CheckEntryDescription.SubIndex-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.LevelWarning-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.CaseSensitive-->
						</Parameter>
						<Parameter>"Application Cycle Exceed Counter","Application Cycle Exceeded Counter"</Parameter>
						<!--CheckEntryDescription.Expected.Name-->
						<Parameter>6<!--CheckEntryDescription.Expected.Type-->
						</Parameter>
						<Parameter>true<!--CheckEntryDescription.Expected.Access.ReadInPreOp-->
						</Parameter>
						<Parameter>true<!--CheckEntryDescription.Expected.Access.ReadInSafeOp-->
						</Parameter>
						<Parameter>true<!--CheckEntryDescription.Expected.Access.ReadInOp-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.Expected.Access.WriteInPreOp-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.Expected.Access.WriteInSafeOp-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.Expected.Access.WriteInOp-->
						</Parameter>
						<Parameter>"o"</Parameter>
						<!--CheckEntryDescription.Expected.Category-->
						<Parameter>None<!--CheckEntryDescription.Expected.PdoMapping-->
						</Parameter>
						<Parameter>null<!--CheckEntryDescription.Expected.DefaultData-->
						</Parameter>
						<Parameter>null<!--CheckEntryDescription.Expected.MinData-->
						</Parameter>
						<Parameter>null<!--CheckEntryDescription.Expected.MaxData-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.Expected.Settings-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.Expected.Backup-->
						</Parameter>
						<Parameter>16<!--CheckEntryDescription.Expected.BitSize-->
						</Parameter>
						<Parameter>-1<!--CheckEntryDescription.Expected.BitOffs-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.AllowEnumDataType-->
						</Parameter>
						<OutParameter>CoeComm.bError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>CoeComm.bError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="CoeComm.bResult">false</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CheckSi_20">
					<SetVariable Target="CoeComm.EntryCount">20</SetVariable>
				</TestStep>
				<TestStep>
					<CallTestFunction Name="IsEntryDefined">
						<Parameter>CoeComm.Dict</Parameter>
						<Parameter>CoeComm.Index</Parameter>
						<Parameter>CoeComm.EntryCount</Parameter>
						<OutParameter>CoeComm.TmpBool</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>CoeComm.TmpBool</Value1>
							<Value2>false</Value2>
							<GotoStep>CheckSi_ReservedRange</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="VerifySi_20">
					<Description Id="33" Param0="CoeComm.Index" Param1="CoeComm.EntryCount" Level="Output">0x{0:x4}.{1} Checking entry description...</Description>
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>CoeComm.Dict<!--CheckEntryDescription.ObjectDictionary-->
						</Parameter>
						<Parameter>online<!--CheckEntryDescription.DictionaryType-->
						</Parameter>
						<Parameter>CoeComm.Index<!--CheckEntryDescription.Index-->
						</Parameter>
						<Parameter>CoeComm.EntryCount<!--CheckEntryDescription.SubIndex-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.LevelWarning-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.CaseSensitive-->
						</Parameter>
						<Parameter>"Frame repeat time"</Parameter>
						<!--CheckEntryDescription.Expected.Name-->
						<Parameter>7<!--CheckEntryDescription.Expected.Type-->
						</Parameter>
						<Parameter>-1<!--CheckEntryDescription.Expected.Access.ReadInPreOp-->
						</Parameter>
						<Parameter>true<!--CheckEntryDescription.Expected.Access.ReadInSafeOp-->
						</Parameter>
						<Parameter>true<!--CheckEntryDescription.Expected.Access.ReadInOp-->
						</Parameter>
						<Parameter>-1<!--CheckEntryDescription.Expected.Access.WriteInPreOp-->
						</Parameter>
						<Parameter>-1<!--CheckEntryDescription.Expected.Access.WriteInSafeOp-->
						</Parameter>
						<Parameter>-1<!--CheckEntryDescription.Expected.Access.WriteInOp-->
						</Parameter>
						<Parameter>"o"</Parameter>
						<!--CheckEntryDescription.Expected.Category-->
						<Parameter>None<!--CheckEntryDescription.Expected.PdoMapping-->
						</Parameter>
						<Parameter>null<!--CheckEntryDescription.Expected.DefaultData-->
						</Parameter>
						<Parameter>null<!--CheckEntryDescription.Expected.MinData-->
						</Parameter>
						<Parameter>null<!--CheckEntryDescription.Expected.MaxData-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.Expected.Settings-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.Expected.Backup-->
						</Parameter>
						<Parameter>32<!--CheckEntryDescription.Expected.BitSize-->
						</Parameter>
						<Parameter>-1<!--CheckEntryDescription.Expected.BitOffs-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.AllowEnumDataType-->
						</Parameter>
						<OutParameter>CoeComm.bError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>CoeComm.bError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="CoeComm.bResult">false</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CheckSi_ReservedRange">
					<SetVariable Target="CoeComm.EntryCount">21</SetVariable>
				</TestStep>
				<TestStep Name="ReservedLoopSTART"></TestStep>
				<TestStep>
					<CallTestFunction Name="IsEntryDefined">
						<Parameter>CoeComm.Dict</Parameter>
						<Parameter>CoeComm.Index</Parameter>
						<Parameter>CoeComm.EntryCount</Parameter>
						<OutParameter>CoeComm.TmpBool</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>CoeComm.TmpBool</Value1>
							<Value2>true</Value2>
							<SetVariable Target="CoeComm.bResult">false</SetVariable>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>CoeComm.TmpBool</Value1>
							<Value2>true</Value2>
							<WriteLine Id="34" Level="Error" Param0="CoeComm.Index" Param1="CoeComm.EntryCount">0x{0:x4}.{1} shall not be defined (reserved entry)</WriteLine>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="ReservedLoopEND">
					<SetVariable Target="CoeComm.EntryCount">CoeComm.EntryCount + 1</SetVariable>
					<Compare>
						<Lower>
							<Value1>CoeComm.EntryCount</Value1>
							<Value2>32</Value2>
							<GotoStep>ReservedLoopSTART</GotoStep>
						</Lower>
					</Compare>
				</TestStep>
				<TestStep Name="CheckSi_32">
					<SetVariable Target="CoeComm.EntryCount">32</SetVariable>
				</TestStep>
				<TestStep>
					<CallTestFunction Name="IsEntryDefined">
						<Parameter>CoeComm.Dict</Parameter>
						<Parameter>CoeComm.Index</Parameter>
						<Parameter>CoeComm.EntryCount</Parameter>
						<OutParameter>CoeComm.TmpBool</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>CoeComm.TmpBool</Value1>
							<Value2>false</Value2>
							<GotoStep>ObjLoopEND</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="VerifySi_32">
					<Description Id="35" Param0="CoeComm.Index" Param1="CoeComm.EntryCount" Level="Output">0x{0:x4}.{1} Checking entry description...</Description>
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>CoeComm.Dict<!--CheckEntryDescription.ObjectDictionary-->
						</Parameter>
						<Parameter>online<!--CheckEntryDescription.DictionaryType-->
						</Parameter>
						<Parameter>CoeComm.Index<!--CheckEntryDescription.Index-->
						</Parameter>
						<Parameter>CoeComm.EntryCount<!--CheckEntryDescription.SubIndex-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.LevelWarning-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.CaseSensitive-->
						</Parameter>
						<Parameter>"Sync Error"</Parameter>
						<!--CheckEntryDescription.Expected.Name-->
						<Parameter>1<!--CheckEntryDescription.Expected.Type-->
						</Parameter>
						<Parameter>true<!--CheckEntryDescription.Expected.Access.ReadInPreOp-->
						</Parameter>
						<Parameter>true<!--CheckEntryDescription.Expected.Access.ReadInSafeOp-->
						</Parameter>
						<Parameter>true<!--CheckEntryDescription.Expected.Access.ReadInOp-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.Expected.Access.WriteInPreOp-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.Expected.Access.WriteInSafeOp-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.Expected.Access.WriteInOp-->
						</Parameter>
						<Parameter>EmptyString<!--CheckEntryDescription.Expected.Category-->
						</Parameter>
						<Parameter>null<!--CheckEntryDescription.Expected.PdoMapping-->
						</Parameter>
						<Parameter>null<!--CheckEntryDescription.Expected.DefaultData-->
						</Parameter>
						<Parameter>null<!--CheckEntryDescription.Expected.MinData-->
						</Parameter>
						<Parameter>null<!--CheckEntryDescription.Expected.MaxData-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.Expected.Settings-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.Expected.Backup-->
						</Parameter>
						<Parameter>1<!--CheckEntryDescription.Expected.BitSize-->
						</Parameter>
						<Parameter>-1<!--CheckEntryDescription.Expected.BitOffs-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.AllowEnumDataType-->
						</Parameter>
						<OutParameter>CoeComm.bError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>CoeComm.bError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="CoeComm.bResult">false</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="ObjLoopEND">
					<SetVariable Target="CoeComm.Index">CoeComm.Index + 1</SetVariable>
					<Compare>
						<LowerOrEqual>
							<Value1>CoeComm.Index</Value1>
							<Value2>#x1C4F</Value2>
							<GotoStep>ObjLoopSTART</GotoStep>
						</LowerOrEqual>
					</Compare>
				</TestStep>
				<TestStep Name="SetTestState">
					<Compare>
						<Equal>
							<Value1>CoeComm.bTestExecuted</Value1>
							<Value2>false</Value2>
							<SkipCase Id="36" Param0="CoeComm.TmpName">No '{0}' (0x1C30 to 0x1C4F) is defined.</SkipCase>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>CoeComm.bResult</Value1>
							<Value2>true</Value2>
							<ReturnSuccess Id="37" Param0="CoeComm.TmpName">{0} (0x1C30 to 0x1C4F) : the object structure is valid.</ReturnSuccess>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>CoeComm.bResult</Value1>
							<Value2>false</Value2>
							<RaiseError Id="38"></RaiseError>
						</Equal>
					</Compare>
				</TestStep>
			</TestCase>
		</TestGroup>
		<TestGroup Name="CoE Device Object Area | online" GroupId="6">
			<Comment>Checks the objects of the CoE device object area (0xf000-0xffff)</Comment>
			<TestCase Name="Device Command (0xFB00 .. 0xFBFF)" CaseId="10">
				<?MAX_OUTPUT_ID 14?>
				<Description>
					<Purpose>The test case ensures the correct object structure of the objects 0xFB00 - 0xFBFF (Device Command)</Purpose>
					<PreCondition>Device supports Mailbox communication via CoE protocol
The DuT provides an online object dictionary
The DuT supports the 5001 profile</PreCondition>
					<Action> Check :
	(Name)
	BitSize
	DataType
	Rx/Tx mappable
	Default Data
	MinData
	Flags</Action>
					<PostCondition>In case that the optional objects 0xFB00 to 0xFBFF is defined the object structure shall be as follows:
Index: 0xFB00 - 0xFBFF
Code: 'Record'
Subindex 000:
	Required: 'm'
	Name: 'SubIndex 000'
	Data type: 'UINT8'
	Flags: '0x7'
	Bitsize: '8'
Subindex 001 (Command ):
	Required: 'm'
	Data type: 'OCTET_STRING'
	Flags: '0x7'
	Bit size: '8'
Subindex 002 (Status):
	Required: 'm'
	Data type: 'UNSIGNED8'
	Flags: '0x7'
	Bit size: '8'
Subindex 003 (Response):
	Required: 'm'
	Data type: 'OCTET_STRING'
	Flags: '0x7'
	Bit size: '8'</PostCondition>
					<References>
						<Reference Chapter="19.2.2.2 Error Setting" Specification="ETG.1020"></Reference>
					</References>
					<Mandatory>true</Mandatory>
				</Description>
				<TestStep>
					<CallTestFunction Name="Reset"></CallTestFunction>
				</TestStep>
				<TestStep Name="CheckMbxCoeSupport">
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Mailbox</Value1>
							<Value2>false</Value2>
							<SkipCase Id="0">Device does not support mailbox communication</SkipCase>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Mailbox.CoE</Value1>
							<Value2>false</Value2>
							<SkipCase Id="1">Device does not support CoE</SkipCase>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Mailbox.CoE.SdoInfo</Value1>
							<Value2>false</Value2>
							<SkipCase Id="2">Device does not support SdoInfo</SkipCase>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="InitSlave">
					<CallTestFunction Name="Reset"></CallTestFunction>
				</TestStep>
				<TestStep Name="RunToSafeOP">
					<CallTestFunction Name="GetSafeOpOpTimeout">
						<OutParameter>CoeComm.PsTimeout</OutParameter>
					</CallTestFunction>
				</TestStep>
				<TestStep>
					<RunToState Timeout="CoeComm.PsTimeout">
						<State>SAFEOP</State>
					</RunToState>
				</TestStep>
				<TestStep Name="SetDefaultMandatoryValue">
					<SetVariable Target="CoeComm.IsMandatroy">false</SetVariable>
				</TestStep>
				<TestStep Name="InitTestRunIndication">
					<SetVariable Target="CoeComm.bTestExecuted">false</SetVariable>
				</TestStep>
				<TestStep Name="InitResult">
					<SetVariable Target="CoeComm.bResult">true</SetVariable>
				</TestStep>
				<TestStep Name="InitObjName">
					<SetVariable Target="CoeComm.TmpName">Device Command</SetVariable>
				</TestStep>
				<TestStep Name="InitIndex">
					<SetVariable Target="CoeComm.Index">#xFBFF</SetVariable>
				</TestStep>
				<TestStep Name="GetOD">
					<Description Id="3">Getting online dictionary from slave...</Description>
					<GetObjectDictionary Target="CoeComm.Dict">
						<DictionaryType>Online</DictionaryType>
					</GetObjectDictionary>
					<RaiseErrorOnFailure Id="4">Failed to get online dictionary.</RaiseErrorOnFailure>
				</TestStep>
				<TestStep Name="ObjLoopSTART"></TestStep>
				<TestStep Name="HandleDisabledObj">
					<CallTestFunction Name="IsObjectDefined">
						<Parameter>CoeComm.Dict</Parameter>
						<Parameter>CoeComm.Index</Parameter>
						<OutParameter>CoeComm.TmpBool</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>CoeComm.TmpBool</Value1>
							<Value2>false</Value2>
							<GotoStep>ObjLoopEND</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="StartTest">
					<SetVariable Target="CoeComm.bTestExecuted">true</SetVariable>
				</TestStep>
				<TestStep Name="VerifyObjDescr">
					<Description Id="5" Param0="CoeComm.Index" Level="Output">0x{0:x4} Checking object description...</Description>
					<CallTestFunction Name="CheckObjectDescription">
						<Parameter>CoeComm.Dict</Parameter>
						<Parameter>online</Parameter>
						<Parameter>CoeComm.Index<!--VerifyObjectDescription.Index-->
						</Parameter>
						<Parameter>false<!--VerifyObjectDescription.LevelWarning-->
						</Parameter>
						<Parameter>false</Parameter>
						<Parameter>null<!--VerifyObjectDescription.Expected.Names-->
						</Parameter>
						<Parameter>#x25<!--VerifyObjectDescription.Expected.Type-->
						</Parameter>
						<Parameter>9<!--VerifyObjectDescription.Expected.ObjectCode-->
						</Parameter>
						<Parameter>-1<!--VerifyObjectDescription.Expected.BitSize-->
						</Parameter>
						<OutParameter>CoeComm.bError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>CoeComm.bError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="CoeComm.bResult">false</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="VerifySi0Descr">
					<Description Id="6" Param0="CoeComm.Index" Level="Output">0x{0:x4}.0 Checking entry description...</Description>
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>CoeComm.Dict<!--CheckEntryDescription.ObjectDictionary-->
						</Parameter>
						<Parameter>online<!--CheckEntryDescription.DictionaryType-->
						</Parameter>
						<Parameter>CoeComm.Index<!--CheckEntryDescription.Index-->
						</Parameter>
						<Parameter>0<!--CheckEntryDescription.SubIndex-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.LevelWarning-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.CaseSensitive-->
						</Parameter>
						<Parameter>EmptyString<!--CheckEntryDescription.Expected.Name-->
						</Parameter>
						<Parameter>5<!--CheckEntryDescription.Expected.Type-->
						</Parameter>
						<Parameter>true<!--CheckEntryDescription.Expected.Access.ReadInPreOp-->
						</Parameter>
						<Parameter>true<!--CheckEntryDescription.Expected.Access.ReadInSafeOp-->
						</Parameter>
						<Parameter>true<!--CheckEntryDescription.Expected.Access.ReadInOp-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.Expected.Access.WriteInPreOp-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.Expected.Access.WriteInSafeOp-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.Expected.Access.WriteInOp-->
						</Parameter>
						<Parameter>EmptyString<!--CheckEntryDescription.Expected.Category-->
						</Parameter>
						<Parameter>None<!--CheckEntryDescription.Expected.PdoMapping-->
						</Parameter>
						<Parameter>null<!--CheckEntryDescription.Expected.DefaultData-->
						</Parameter>
						<Parameter>null<!--CheckEntryDescription.Expected.MinData-->
						</Parameter>
						<Parameter>null<!--CheckEntryDescription.Expected.MaxData-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.Expected.Settings-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.Expected.Backup-->
						</Parameter>
						<Parameter>8<!--CheckEntryDescription.Expected.BitSize-->
						</Parameter>
						<Parameter>0<!--CheckEntryDescription.Expected.BitOffs-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.AllowEnumDataType-->
						</Parameter>
						<OutParameter>CoeComm.bError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>CoeComm.bError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="CoeComm.bResult">false</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="VerifySi1Descr">
					<Description Id="7" Param0="CoeComm.Index" Level="Output">0x{0:x4}.1 Checking entry description...</Description>
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>CoeComm.Dict<!--CheckEntryDescription.ObjectDictionary-->
						</Parameter>
						<Parameter>online<!--CheckEntryDescription.DictionaryType-->
						</Parameter>
						<Parameter>CoeComm.Index<!--CheckEntryDescription.Index-->
						</Parameter>
						<Parameter>1<!--CheckEntryDescription.SubIndex-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.LevelWarning-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.CaseSensitive-->
						</Parameter>
						<Parameter>"Command"</Parameter>
						<!--CheckEntryDescription.Expected.Name-->
						<Parameter>10<!--CheckEntryDescription.Expected.Type-->
						</Parameter>
						<Parameter>true<!--CheckEntryDescription.Expected.Access.ReadInPreOp-->
						</Parameter>
						<Parameter>true<!--CheckEntryDescription.Expected.Access.ReadInSafeOp-->
						</Parameter>
						<Parameter>true<!--CheckEntryDescription.Expected.Access.ReadInOp-->
						</Parameter>
						<Parameter>true<!--CheckEntryDescription.Expected.Access.WriteInPreOp-->
						</Parameter>
						<Parameter>true<!--CheckEntryDescription.Expected.Access.WriteInSafeOp-->
						</Parameter>
						<Parameter>true<!--CheckEntryDescription.Expected.Access.WriteInOp-->
						</Parameter>
						<Parameter>EmptyString<!--CheckEntryDescription.Expected.Category-->
						</Parameter>
						<Parameter>None<!--CheckEntryDescription.Expected.PdoMapping-->
						</Parameter>
						<Parameter>null<!--CheckEntryDescription.Expected.DefaultData-->
						</Parameter>
						<Parameter>null<!--CheckEntryDescription.Expected.MinData-->
						</Parameter>
						<Parameter>null<!--CheckEntryDescription.Expected.MaxData-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.Expected.Settings-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.Expected.Backup-->
						</Parameter>
						<Parameter>-1<!--CheckEntryDescription.Expected.BitSize-->
						</Parameter>
						<Parameter>16<!--CheckEntryDescription.Expected.BitOffs-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.AllowEnumDataType-->
						</Parameter>
						<OutParameter>CoeComm.bError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>CoeComm.bError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="CoeComm.bResult">false</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="VerifySi2Descr">
					<Description Id="8" Param0="CoeComm.Index" Level="Output">0x{0:x4}.2 Checking entry description...</Description>
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>CoeComm.Dict<!--CheckEntryDescription.ObjectDictionary-->
						</Parameter>
						<Parameter>online<!--CheckEntryDescription.DictionaryType-->
						</Parameter>
						<Parameter>CoeComm.Index<!--CheckEntryDescription.Index-->
						</Parameter>
						<Parameter>2<!--CheckEntryDescription.SubIndex-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.LevelWarning-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.CaseSensitive-->
						</Parameter>
						<Parameter>"Status"</Parameter>
						<!--CheckEntryDescription.Expected.Name-->
						<Parameter>5<!--CheckEntryDescription.Expected.Type-->
						</Parameter>
						<Parameter>true<!--CheckEntryDescription.Expected.Access.ReadInPreOp-->
						</Parameter>
						<Parameter>true<!--CheckEntryDescription.Expected.Access.ReadInSafeOp-->
						</Parameter>
						<Parameter>true<!--CheckEntryDescription.Expected.Access.ReadInOp-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.Expected.Access.WriteInPreOp-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.Expected.Access.WriteInSafeOp-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.Expected.Access.WriteInOp-->
						</Parameter>
						<Parameter>EmptyString<!--CheckEntryDescription.Expected.Category-->
						</Parameter>
						<Parameter>None<!--CheckEntryDescription.Expected.PdoMapping-->
						</Parameter>
						<Parameter>null<!--CheckEntryDescription.Expected.DefaultData-->
						</Parameter>
						<Parameter>null<!--CheckEntryDescription.Expected.MinData-->
						</Parameter>
						<Parameter>null<!--CheckEntryDescription.Expected.MaxData-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.Expected.Settings-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.Expected.Backup-->
						</Parameter>
						<Parameter>8<!--CheckEntryDescription.Expected.BitSize-->
						</Parameter>
						<Parameter>-1<!--CheckEntryDescription.Expected.BitOffs-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.AllowEnumDataType-->
						</Parameter>
						<OutParameter>CoeComm.bError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>CoeComm.bError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="CoeComm.bResult">false</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="VerifySi3Descr">
					<Description Id="9" Param0="CoeComm.Index" Level="Output">0x{0:x4}.3 Checking entry description...</Description>
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>CoeComm.Dict<!--CheckEntryDescription.ObjectDictionary-->
						</Parameter>
						<Parameter>online<!--CheckEntryDescription.DictionaryType-->
						</Parameter>
						<Parameter>CoeComm.Index<!--CheckEntryDescription.Index-->
						</Parameter>
						<Parameter>3<!--CheckEntryDescription.SubIndex-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.LevelWarning-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.CaseSensitive-->
						</Parameter>
						<Parameter>"Response"</Parameter>
						<!--CheckEntryDescription.Expected.Name-->
						<Parameter>10<!--CheckEntryDescription.Expected.Type-->
						</Parameter>
						<Parameter>true<!--CheckEntryDescription.Expected.Access.ReadInPreOp-->
						</Parameter>
						<Parameter>true<!--CheckEntryDescription.Expected.Access.ReadInSafeOp-->
						</Parameter>
						<Parameter>true<!--CheckEntryDescription.Expected.Access.ReadInOp-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.Expected.Access.WriteInPreOp-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.Expected.Access.WriteInSafeOp-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.Expected.Access.WriteInOp-->
						</Parameter>
						<Parameter>EmptyString<!--CheckEntryDescription.Expected.Category-->
						</Parameter>
						<Parameter>None<!--CheckEntryDescription.Expected.PdoMapping-->
						</Parameter>
						<Parameter>null<!--CheckEntryDescription.Expected.DefaultData-->
						</Parameter>
						<Parameter>null<!--CheckEntryDescription.Expected.MinData-->
						</Parameter>
						<Parameter>null<!--CheckEntryDescription.Expected.MaxData-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.Expected.Settings-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.Expected.Backup-->
						</Parameter>
						<Parameter>-1<!--CheckEntryDescription.Expected.BitSize-->
						</Parameter>
						<Parameter>-1<!--CheckEntryDescription.Expected.BitOffs-->
						</Parameter>
						<Parameter>false<!--CheckEntryDescription.AllowEnumDataType-->
						</Parameter>
						<OutParameter>CoeComm.bError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>CoeComm.bError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="CoeComm.bResult">false</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="WriteSuccess">
					<Compare>
						<Equal>
							<Value1>CoeComm.bResult</Value1>
							<Value2>true</Value2>
							<ReturnSuccess Id="10" Param0="CoeComm.Index" Param1="CoeComm.TmpName">{1} (0x{0:x4}) : online object structure is valid.</ReturnSuccess>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>CoeComm.bResult</Value1>
							<Value2>false</Value2>
							<RaiseError Id="11"></RaiseError>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="ObjLoopEND">
					<SetVariable Target="CoeComm.Index">CoeComm.Index + 1</SetVariable>
					<Compare>
						<LowerOrEqual>
							<Value1>CoeComm.Index</Value1>
							<Value2>#xFBFF</Value2>
							<GotoStep>ObjLoopSTART</GotoStep>
						</LowerOrEqual>
					</Compare>
				</TestStep>
				<TestStep Name="SetTestState">
					<Compare>
						<Equal>
							<Value1>CoeComm.bTestExecuted</Value1>
							<Value2>false</Value2>
							<SkipCase Id="12" Param0="CoeComm.TmpName">No '{0}' (0xFB00 to 0xFBFF) is defined.</SkipCase>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>CoeComm.bResult</Value1>
							<Value2>true</Value2>
							<ReturnSuccess Id="13" Param0="CoeComm.TmpName">{0} (0xFB00 to 0xFBFF) : the object structure is valid.</ReturnSuccess>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>CoeComm.bResult</Value1>
							<Value2>false</Value2>
							<RaiseError Id="14"></RaiseError>
						</Equal>
					</Compare>
				</TestStep>
			</TestCase>
		</TestGroup>
	</TestGroups>
</EtherCATTest>