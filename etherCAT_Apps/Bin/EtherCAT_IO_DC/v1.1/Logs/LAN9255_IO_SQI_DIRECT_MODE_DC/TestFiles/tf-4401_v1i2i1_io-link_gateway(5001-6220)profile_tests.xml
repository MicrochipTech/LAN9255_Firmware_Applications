<?xml version="1.0" encoding="UTF-8" standalone="yes"?><EtherCATTest Name="TF-4401 IO-Link Gateway (5001-6220)" RealeaseState="Released" SchemaVersion="1.0.24" TestVendorId="1" TestId="17409" TestVersion="1.2.1" xsi:noNamespaceSchemaLocation="EtherCATTest.xsd" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
	<Comment>Test groups 1-99 automatically generated.
Test groups 100 and following manual added tests.</Comment>
	<History>
		<HistoryEntry TestVersion="0.0.0" Date="2017-11-15" Editor="R.H.">Date			: 2017.11.15
Based on file		: ETG5001_6220_IO-Link_OD.xlsx
File version		: 1.0.2
Device profile		: 5001
Module profile		: 6220
TableParser		: 1.5.0.0
TestFileHandler		: 1.4.1.0
</HistoryEntry>
		<HistoryEntry TestVersion="1.1.1" Date="2018-01-23" Editor="R.H.">Date			: 2018.01.23
Based on file		: ETG5001_6220_IO-Link_OD.xlsx
File version		: 1.0.2
Device profile		: 5001
Module profile		: 6220
TableParser		: 1.5.0.0
TestFileHandler		: 1.4.2.0
</HistoryEntry>
		<HistoryEntry TestVersion="1.1.2" Date="2018-09-25" Editor="R.H.">Add functionIDs and OutputIDs</HistoryEntry>
		<HistoryEntry Date="2019-05-02" Editor="FE" TestVersion="1.1.3" Type="Enhancement">Set version to 1.2.0 for release</HistoryEntry>
		<HistoryEntry Date="2019-05-21" Editor="RH" TestVersion="1.2.0" Type="Enhancement">Add missing variable</HistoryEntry>
	</History>
	<TestVariables>
		<TestVariable>
			<Name>bIgnoreProfileID</Name>
			<Type>Bool</Type>
			<DefaultValue xsi:type="xsd:boolean">false</DefaultValue>
			<Comment>If true the test is executed even if the Profile IDs does not match (automatic generated variable, will be overwritten when generating new test)</Comment>
		</TestVariable>
		<TestVariable>
			<Name>bDEBUG</Name>
			<Type>Bool</Type>
			<DefaultValue xsi:type="xsd:boolean">true</DefaultValue>
			<Comment>Development debug Variable (automatic generated variable, will be overwritten when generating new test)</Comment>
		</TestVariable>
		<TestVariable>
			<Name>bAbortTestCaseOnFirstError</Name>
			<Type>Bool</Type>
			<DefaultValue xsi:type="xsd:boolean">true</DefaultValue>
			<Comment>If true the object test case is abort after the first error in one module (automatic generated variable, will be overwritten when generating new test)</Comment>
		</TestVariable>
	</TestVariables>
	<Variables>
		<Variable>
			<Name>bTmp</Name>
			<Type>Bool</Type>
			<Comment></Comment>
		</Variable>
		<Variable>
			<Name>byteTmp</Name>
			<Type>Byte</Type>
			<Comment></Comment>
		</Variable>
		<Variable>
			<Name>strResult</Name>
			<Type>String</Type>
			<Comment>Test function result (automatic generated variable, will be overwritten when generating new test)</Comment>
		</Variable>
		<Variable>
			<Name>odDeviceObjectdictionary</Name>
			<Type>ObjectDictionary</Type>
			<Comment>Current device object dictionary to be tested. (automatic generated variable, will be overwritten when generating new test)</Comment>
		</Variable>
		<Variable>
			<Name>odDeviceObjectdictionaryList</Name>
			<Type>ObjectList</Type>
			<Comment>Tmp variable to get OD length (automatic generated variable, will be overwritten when generating new test)</Comment>
		</Variable>
		<Variable>
			<Name>u32Tmp</Name>
			<Type>UInt32</Type>
			<Comment>Tmp length of offline OD (automatic generated variable, will be overwritten when generating new test)</Comment>
		</Variable>
		<Variable>
			<Name>bAtLeastOneModuleMatch</Name>
			<Type>Bool</Type>
			<Comment>Indicates if at least one matching module was found (automatic generated variable, will be overwritten when generating new test)</Comment>
		</Variable>
		<Variable>
			<Name>arrCurrentProfiles</Name>
			<Type>ArrayOfString</Type>
			<Comment>List of current Profiles (automatic generated variable, will be overwritten when generating new test)</Comment>
		</Variable>
		<Variable>
			<Name>u32ProfileCounter</Name>
			<Type>UInt32</Type>
			<Comment>Counter of all Profile elements (automatic generated variable, will be overwritten when generating new test)</Comment>
		</Variable>
		<Variable>
			<Name>u32CurrentProfilesLength</Name>
			<Type>UInt32</Type>
			<Comment>Length of the Profile list (automatic generated variable, will be overwritten when generating new test)</Comment>
		</Variable>
		<Variable>
			<Name>strTmpString</Name>
			<Type>String</Type>
			<Comment> (automatic generated variable, will be overwritten when generating new test)</Comment>
		</Variable>
		<Variable>
			<Name>uint16CurDeviceProfile</Name>
			<Type>UInt16</Type>
			<Comment>Current Device Profile (automatic generated variable, will be overwritten when generating new test)</Comment>
		</Variable>
		<Variable>
			<Name>uint16CurModuleProfile</Name>
			<Type>UInt16</Type>
			<Comment>Current Module Profile (automatic generated variable, will be overwritten when generating new test)</Comment>
		</Variable>
		<Variable>
			<Name>uint16CurSubModuleProfile</Name>
			<Type>UInt16</Type>
			<Comment>Current SubModule Profile (automatic generated variable, will be overwritten when generating new test)</Comment>
		</Variable>
		<Variable>
			<Name>u16ObjectIndexInclOffset</Name>
			<Type>UInt16</Type>
			<Comment>Object index include the module specific offset (automatic generated variable, will be overwritten when generating new test)</Comment>
		</Variable>
		<Variable>
			<Name>bObjectEntryIsMandatory</Name>
			<Type>Bool</Type>
			<Comment>if true the object or entry shall be available (category 'm' or 'c' and the condition is fulfilled) (automatic generated variable, will be overwritten when generating new test)</Comment>
		</Variable>
		<Variable>
			<Name>VerifyDescriptionError</Name>
			<Type>Bool</Type>
			<Comment>Indicates if an error occured during verification of the object/entry description (automatic generated variable, will be overwritten when generating new test)</Comment>
		</Variable>
		<Variable>
			<Name>arrAllowedNames</Name>
			<Type>ArrayOfString</Type>
			<Comment>Contains all valid object/entry names (automatic generated variable, will be overwritten when generating new test)</Comment>
		</Variable>
		<Variable>
			<Name>i32CurrentBitOffset</Name>
			<Type>Int32</Type>
			<Comment>Bittoffset of the current entry (automatic generated variable, will be overwritten when generating new test)</Comment>
		</Variable>
		<Variable>
			<Name>u16DataType</Name>
			<Type>UInt16</Type>
			<Comment>Entry Datatype (automatic generated variable, will be overwritten when generating new test)</Comment>
		</Variable>
		<Variable>
			<Name>arrData</Name>
			<Type>ArrayOfBytes</Type>
			<Comment>Tmp variable to store the SDO data (automatic generated variable, will be overwritten when generating new test)</Comment>
		</Variable>
		<Variable>
			<Name>u32SdoAbort</Name>
			<Type>UInt32</Type>
			<Comment>SDO Abort Code (automatic generated variable, will be overwritten when generating new test)</Comment>
		</Variable>
		<Variable>
			<Name>strAbortMsg</Name>
			<Type>String</Type>
			<Comment>SDO Abort message (automatic generated variable, will be overwritten when generating new test)</Comment>
		</Variable>
		<Variable>
			<Name>u16NextDefObjectIndexInclOffset</Name>
			<Type>UInt16</Type>
			<Comment>Object index of the next defined object (required if a reserved object range shall be testetd) (automatic generated variable, will be overwritten when generating new test)</Comment>
		</Variable>
		<Variable>
			<Name>byteSubIndexInclOffset</Name>
			<Type>Byte</Type>
			<Comment>SubIndex incl. Module specific offset (automatic generated variable, will be overwritten when generating new test)</Comment>
		</Variable>
	</Variables>
	<EcatCmdGrps></EcatCmdGrps>
	<IncludedTestFunctions>
		<FileName>EcBaseFunctions_V1i0i0.xml</FileName>
		<FileName>BF-0040_V1i0i1_ProfileFunctions.xml</FileName>
	</IncludedTestFunctions>
	<TestFunctions>
		<TestFunction Name="CreateAllowedNames" FunctionId="32">
			<?MAX_OUTPUT_ID 3?>
			<Description>
				<Action>Note : (automatic generated function, will be overwritten when generating new test)</Action>
				<References>
					<Reference></Reference>
				</References>
			</Description>
			<Parameter>
				<Name>CreateAllowedNames.Names</Name>
				<Type>ArrayOfString</Type>
			</Parameter>
			<Parameter>
				<Name>CreateAllowedNames.Index</Name>
				<Type>UInt16</Type>
			</Parameter>
			<Parameter>
				<Name>CreateAllowedNames.SubIndex</Name>
				<Type>Byte</Type>
			</Parameter>
			<Parameter>
				<Name>CreateAllowedNames.ModuleCnt</Name>
				<Type>UInt32</Type>
			</Parameter>
			<LocalVariables>
				<Name>CreateAllowedNames.Length</Name>
				<Type>UInt32</Type>
			</LocalVariables>
			<LocalVariables>
				<Name>CreateAllowedNames.Cnt</Name>
				<Type>UInt32</Type>
				<DefaultValue>0</DefaultValue>
			</LocalVariables>
			<LocalVariables>
				<Name>CreateAllowedNames.curValue</Name>
				<Type>String</Type>
			</LocalVariables>
			<LocalVariables>
				<Name>CreateAllowedNames.match</Name>
				<Type>Bool</Type>
			</LocalVariables>
			<OutParameter>
				<Name>CreateAllowedNames.RetNames</Name>
				<Type>ArrayOfString</Type>
			</OutParameter>
			<TestStep Name="DebugOutput">
				<Compare>
					<Equal>
						<Value1>bDEBUG</Value1>
						<Value2>true</Value2>
						<WriteLine Id="0" Param0="CreateAllowedNames.Index" Param1="CreateAllowedNames.SubIndex" Param2="CreateAllowedNames.Names" Param3="CreateAllowedNames.ModuleCnt" Level="Verbose">DEBUG | CreateAllowedNames (Index 0x{0:X}; SubIndex {1}; BasicNames '{2}'; Modulecnt {3})</WriteLine>
					</Equal>
				</Compare>
			</TestStep>
			<TestStep>
				<SizeOf UInt32Var="CreateAllowedNames.Length">CreateAllowedNames.Names</SizeOf>
			</TestStep>
			<TestStep>
				<InitArray TargetArray="CreateAllowedNames.RetNames" Length="CreateAllowedNames.Length"></InitArray>
			</TestStep>
			<TestStep>
				<SetVariable Target="CreateAllowedNames.Cnt">0</SetVariable>
			</TestStep>
			<TestStep Name="LoopStart">
				<GetArrayItem SourceArray="CreateAllowedNames.Names" Target="CreateAllowedNames.curValue" Index="CreateAllowedNames.Cnt"></GetArrayItem>
				<Compare>
					<Equal>
						<Value1>bDEBUG</Value1>
						<Value2>true</Value2>
						<WriteLine Id="1" Param0="CreateAllowedNames.curValue" Level="Verbose">DEBUG | CreateAllowedNames '{0}'</WriteLine>
					</Equal>
				</Compare>
			</TestStep>
			<TestStep Name="CheckSiPlaceHolder">
				<RegexIsMatch ReturnValue="CreateAllowedNames.match">
					<Pattern>{_SI_:</Pattern>
					<InputString>CreateAllowedNames.curValue</InputString>
				</RegexIsMatch>
				<Compare>
					<Equal>
						<Value1>CreateAllowedNames.match</Value1>
						<Value2>false</Value2>
						<GotoStep>CheckModuleNumPlaceHolder</GotoStep>
					</Equal>
				</Compare>
			</TestStep>
			<TestStep Name="ReplaceSI">
				<RegexReplace OutputString="CreateAllowedNames.curValue">
					<Pattern>{_SI_:</Pattern>
					<InputString>CreateAllowedNames.curValue</InputString>
					<ReplacementString>{0:</ReplacementString>
				</RegexReplace>
				<Compare>
					<Equal>
						<Value1>bDEBUG</Value1>
						<Value2>true</Value2>
						<WriteLine Id="2" Param0="CreateAllowedNames.curValue" Level="Verbose">DEBUG | CreateAllowedNames '{0}'</WriteLine>
					</Equal>
				</Compare>
			</TestStep>
			<TestStep>
				<SetVariable Target="CreateAllowedNames.curValue" Param0="CreateAllowedNames.SubIndex">CreateAllowedNames.curValue</SetVariable>
				<Compare>
					<Equal>
						<Value1>true</Value1>
						<Value2>true</Value2>
						<GotoStep>LoopEnd</GotoStep>
					</Equal>
				</Compare>
			</TestStep>
			<TestStep Name="CheckModuleNumPlaceHolder">
				<RegexIsMatch ReturnValue="CreateAllowedNames.match">
					<Pattern>{_M#_:</Pattern>
					<InputString>CreateAllowedNames.curValue</InputString>
				</RegexIsMatch>
				<Compare>
					<Equal>
						<Value1>CreateAllowedNames.match</Value1>
						<Value2>false</Value2>
						<GotoStep>LoopEnd</GotoStep>
					</Equal>
				</Compare>
			</TestStep>
			<TestStep Name="ReplaceModuleCnt">
				<RegexReplace OutputString="CreateAllowedNames.curValue">
					<Pattern>{_M#_:</Pattern>
					<InputString>CreateAllowedNames.curValue</InputString>
					<ReplacementString>{0:</ReplacementString>
				</RegexReplace>
				<Compare>
					<Equal>
						<Value1>bDEBUG</Value1>
						<Value2>true</Value2>
						<WriteLine Id="3" Param0="CreateAllowedNames.curValue" Level="Verbose">DEBUG | CreateAllowedNames '{0}'</WriteLine>
					</Equal>
				</Compare>
			</TestStep>
			<TestStep>
				<SetVariable Target="CreateAllowedNames.curValue" Param0="CreateAllowedNames.ModuleCnt +1">CreateAllowedNames.curValue</SetVariable>
				<Compare>
					<Equal>
						<Value1>true</Value1>
						<Value2>true</Value2>
						<GotoStep>LoopEnd</GotoStep>
					</Equal>
				</Compare>
			</TestStep>
			<TestStep Name="LoopEnd">
				<SetArrayItem TargetArray="CreateAllowedNames.RetNames" Index="CreateAllowedNames.Cnt">CreateAllowedNames.curValue</SetArrayItem>
			</TestStep>
			<TestStep>
				<SetVariable Target="CreateAllowedNames.Cnt">CreateAllowedNames.Cnt + 1</SetVariable>
				<Compare>
					<Lower>
						<Value1>CreateAllowedNames.Cnt</Value1>
						<Value2>CreateAllowedNames.Length</Value2>
						<GotoStep>LoopStart</GotoStep>
					</Lower>
				</Compare>
			</TestStep>
		</TestFunction>
		<TestFunction Name="ModuleProfileMatch" FunctionId="6">
			<?MAX_OUTPUT_ID 5?>
			<Description>
				<Action>Note : (automatic generated function, will be overwritten when generating new test)</Action>
				<References>
					<Reference></Reference>
				</References>
			</Description>
			<Parameter>
				<Name>ModuleProfileMatch.i32DeviceProfile</Name>
				<Type>Int32</Type>
			</Parameter>
			<Parameter>
				<Name>ModuleProfileMatch.i32ModuleProfile</Name>
				<Type>Int32</Type>
			</Parameter>
			<Parameter>
				<Name>ModuleProfileMatch.i32SubModuleProfile</Name>
				<Type>Int32</Type>
			</Parameter>
			<Parameter>
				<Name>ModuleProfileMatch.arrProfiles</Name>
				<Type>ArrayOfString</Type>
			</Parameter>
			<Parameter>
				<Name>ModuleProfileMatch.ModuleIdx</Name>
				<Type>Int16</Type>
			</Parameter>
			<LocalVariables>
				<Name>ModuleProfileMatch.u32ListLength</Name>
				<Type>UInt32</Type>
			</LocalVariables>
			<LocalVariables>
				<Name>ModuleProfileMatch.ModuleProfileInfo</Name>
				<Type>String</Type>
			</LocalVariables>
			<LocalVariables>
				<Name>ModuleProfileMatch.u16Tmp</Name>
				<Type>UInt16</Type>
			</LocalVariables>
			<OutParameter>
				<Name>ModuleProfileMatch.Match</Name>
				<Type>Bool</Type>
			</OutParameter>
			<TestStep Name="DebugOutput">
				<Compare>
					<Equal>
						<Value1>bDEBUG</Value1>
						<Value2>true</Value2>
						<WriteLine Id="0" Param0="ModuleProfileMatch.i32DeviceProfile" Param1="ModuleProfileMatch.i32ModuleProfile" Param2="ModuleProfileMatch.i32SubModuleProfile" Level="Verbose">DEBUG | ModuleProfileMatch (DeviceProfile 0x{0:X}; ModuleProfile 0x{1:X}; SubModuleProfile 0x{2:X})</WriteLine>
					</Equal>
				</Compare>
				<Compare>
					<Equal>
						<Value1>bDEBUG</Value1>
						<Value2>true</Value2>
						<WriteLine Id="1" Param0="ModuleProfileMatch.ModuleIdx" Level="Verbose">DEBUG | ModuleProfileMatch (ModuleNumber {0})</WriteLine>
					</Equal>
				</Compare>
			</TestStep>
			<TestStep Name="InitResult">
				<SetVariable Target="ModuleProfileMatch.Match">false</SetVariable>
			</TestStep>
			<TestStep Name="CheckProfileListLength">
				<SizeOf UInt32Var="ModuleProfileMatch.u32ListLength">ModuleProfileMatch.arrProfiles</SizeOf>
				<Compare>
					<GreaterOrEqual>
						<Value1>ModuleProfileMatch.ModuleIdx</Value1>
						<Value2>ModuleProfileMatch.u32ListLength</Value2>
						<Return Id="2"></Return>
					</GreaterOrEqual>
				</Compare>
			</TestStep>
			<TestStep Name="GetModuleProfileInfo">
				<GetArrayItem SourceArray="ModuleProfileMatch.arrProfiles" Target="ModuleProfileMatch.ModuleProfileInfo" Index="ModuleProfileMatch.ModuleIdx"></GetArrayItem>
			</TestStep>
			<TestStep Name="GetDeviceProfile">
				<CallTestFunction Name="GetDeviceProfile">
					<Parameter>ModuleProfileMatch.ModuleProfileInfo</Parameter>
					<OutParameter>ModuleProfileMatch.u16Tmp</OutParameter>
				</CallTestFunction>
				<Compare>
					<Equal>
						<Value1>ModuleProfileMatch.i32DeviceProfile</Value1>
						<Value2>-1</Value2>
						<GotoStep>GetModuleProfile</GotoStep>
					</Equal>
				</Compare>
				<Compare>
					<NotEqual>
						<Value1>ModuleProfileMatch.i32DeviceProfile</Value1>
						<Value2>ModuleProfileMatch.u16Tmp</Value2>
						<Return Id="3"></Return>
					</NotEqual>
				</Compare>
			</TestStep>
			<TestStep Name="GetModuleProfile">
				<CallTestFunction Name="GetModuleProfile">
					<Parameter>ModuleProfileMatch.ModuleProfileInfo</Parameter>
					<OutParameter>ModuleProfileMatch.u16Tmp</OutParameter>
				</CallTestFunction>
				<Compare>
					<Equal>
						<Value1>ModuleProfileMatch.i32ModuleProfile</Value1>
						<Value2>-1</Value2>
						<GotoStep>GetSubModuleProfile</GotoStep>
					</Equal>
				</Compare>
				<Compare>
					<NotEqual>
						<Value1>ModuleProfileMatch.i32ModuleProfile</Value1>
						<Value2>ModuleProfileMatch.u16Tmp</Value2>
						<Return Id="4"></Return>
					</NotEqual>
				</Compare>
			</TestStep>
			<TestStep Name="GetSubModuleProfile">
				<CallTestFunction Name="GetSubModuleProfile">
					<Parameter>ModuleProfileMatch.ModuleProfileInfo</Parameter>
					<OutParameter>ModuleProfileMatch.u16Tmp</OutParameter>
				</CallTestFunction>
				<Compare>
					<Equal>
						<Value1>ModuleProfileMatch.i32SubModuleProfile</Value1>
						<Value2>-1</Value2>
						<GotoStep>END</GotoStep>
					</Equal>
				</Compare>
				<Compare>
					<NotEqual>
						<Value1>ModuleProfileMatch.i32SubModuleProfile</Value1>
						<Value2>ModuleProfileMatch.u16Tmp</Value2>
						<Return Id="5"></Return>
					</NotEqual>
				</Compare>
			</TestStep>
			<TestStep Name="END">
				<SetVariable Target="ModuleProfileMatch.Match">true</SetVariable>
			</TestStep>
		</TestFunction>
	</TestFunctions>
	<TestGroups>
		<TestGroup Name="Verify objects 0x8nn0 - 0x8nn7 (Configuration Data of the Module)" GroupId="1">
			<TestCase Name="offline | 0x8000 (Configuration Data)" CaseId="1">
				<?MAX_OUTPUT_ID 76?>
				<Description>
					<PreCondition>- The device profile is 5001
- The module profile is 6220
- The submodule profile is 0</PreCondition>
					<Action>- Iterate over all offline defined modules/channels and if the PreCondition matches the following operations are done:
- Get the offline description of object 0x8000(+module specific offset) 'Configuration Data' and all entries
 Check:
    (Name)
    BitSize
    DataType
    Rx / Tx mappable
    Default Data
    MinData
    Flags       </Action>
					<PostCondition>Error if
- mandatory object / entry is not defined
- an optional object exists and the entries are invalid
- Object / entry description does not match with the specification</PostCondition>
					<ProposalForSolution>- Define the missing objects
- correct object / entry description</ProposalForSolution>
					<References>
						<Reference Specification="ETG.5001.6220"></Reference>
					</References>
					<Mandatory>true</Mandatory>
				</Description>
				<TestStep Name="InitResult">
					<SetVariable Target="strResult">EmptyString</SetVariable>
				</TestStep>
				<TestStep Name="CheckIfOfflineOdAvailable">
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Mailbox</Value1>
							<Value2>false</Value2>
							<SkipCase Id="0">DuT does not support mailbox.</SkipCase>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Mailbox.CoE</Value1>
							<Value2>false</Value2>
							<SkipCase Id="1">DuT does not support CoE.</SkipCase>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep>
					<GetObjectDictionary Target="odDeviceObjectdictionary">
						<DictionaryType>Offline</DictionaryType>
					</GetObjectDictionary>
					<SkipOnFailure Id="2">No offline object dictionary defined.</SkipOnFailure>
				</TestStep>
				<TestStep>
					<GetObjectList Count="u32Tmp" Target="odDeviceObjectdictionaryList" SourceDict="odDeviceObjectdictionary"></GetObjectList>
					<Compare>
						<Equal>
							<Value1>u32Tmp</Value1>
							<Value2>0</Value2>
							<SkipCase Id="3">No offline object dictionary defined.</SkipCase>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="InitAtLeastOneProfileMatch">
					<SetVariable Target="bAtLeastOneModuleMatch">false</SetVariable>
				</TestStep>
				<TestStep Name="GetCurrentProfileList">
					<CallTestFunction Name="GetCurrentProfileList">
						<Parameter>"offline"</Parameter>
						<Parameter>"SafeOP"</Parameter>
						<OutParameter>arrCurrentProfiles</OutParameter>
					</CallTestFunction>
				</TestStep>
				<TestStep Name="InitProfileLoopCounter">
					<SetVariable Target="u32ProfileCounter">0</SetVariable>
				</TestStep>
				<TestStep Name="GetProfileArrayLength">
					<SizeOf UInt32Var="u32CurrentProfilesLength">arrCurrentProfiles</SizeOf>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="4" Param0="u32CurrentProfilesLength" Level="Verbose">'{0}' Profile(s) defined offline.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>u32CurrentProfilesLength</Value1>
							<Value2>0</Value2>
							<SkipCase Id="5">Skip case | no profile defined.</SkipCase>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="ProfileLoopStart">
					<GetArrayItem SourceArray="arrCurrentProfiles" Target="strTmpString" Index="u32ProfileCounter"></GetArrayItem>
				</TestStep>
				<TestStep Name="CheckProfileInformationString">
					<Compare>
						<Equal>
							<Value1>strTmpString</Value1>
							<Value2>null</Value2>
							<RaiseError Id="6" Param0="u32ProfileCounter">Profile Info element [{0}] is null.</RaiseError>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>strTmpString</Value1>
							<Value2>EmptyString</Value2>
							<RaiseError Id="7" Param0="u32ProfileCounter">Profile Info element [{0}] is an empty string.</RaiseError>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="GetDeviceProfile">
					<CallTestFunction Name="GetDeviceProfile">
						<Parameter>strTmpString</Parameter>
						<OutParameter>uint16CurDeviceProfile</OutParameter>
					</CallTestFunction>
				</TestStep>
				<TestStep Name="GetModuleProfile">
					<CallTestFunction Name="GetModuleProfile">
						<Parameter>strTmpString</Parameter>
						<OutParameter>uint16CurModuleProfile</OutParameter>
					</CallTestFunction>
				</TestStep>
				<TestStep Name="GetSubModuleProfile">
					<CallTestFunction Name="GetSubModuleProfile">
						<Parameter>strTmpString</Parameter>
						<OutParameter>uint16CurSubModuleProfile</OutParameter>
					</CallTestFunction>
				</TestStep>
				<TestStep Name="DumpProfileInfo">
					<Description Id="8" Param0="uint16CurDeviceProfile" Param1="uint16CurModuleProfile" Param2="uint16CurSubModuleProfile" Param3="u32ProfileCounter" Level="Output">Module[{3}] : DeviceProfile '{0}' ; ModuleProfile '{1}' ; SubModuleProfile '{2}'</Description>
					<Compare>
						<Equal>
							<Value1>bIgnoreProfileID</Value1>
							<Value2>true</Value2>
							<GotoStep>IndicateThatAtleastOneModuleMatch</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CompareDeviceProfile">
					<Compare>
						<NotEqual>
							<Value1>uint16CurDeviceProfile</Value1>
							<Value2>5001</Value2>
							<WriteLine Id="9" Param0="uint16CurDeviceProfile" Level="Output">Skip Profile  (Test Device Profile '5001' != Cur Device Profile '{0}')</WriteLine>
						</NotEqual>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>uint16CurDeviceProfile</Value1>
							<Value2>5001</Value2>
							<GotoStep>ProfileLoopEnd</GotoStep>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep Name="CompareModuleProfile">
					<Compare>
						<NotEqual>
							<Value1>uint16CurModuleProfile</Value1>
							<Value2>6220</Value2>
							<WriteLine Id="10" Param0="uint16CurModuleProfile" Level="Output">Skip Profile  (Test Module Profile '6220' != Cur Module Profile '{0}')</WriteLine>
						</NotEqual>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>uint16CurModuleProfile</Value1>
							<Value2>6220</Value2>
							<GotoStep>ProfileLoopEnd</GotoStep>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep Name="CompareSubModuleProfile">
					<Compare>
						<NotEqual>
							<Value1>uint16CurSubModuleProfile</Value1>
							<Value2>0</Value2>
							<WriteLine Id="11" Param0="uint16CurSubModuleProfile" Level="Output">Skip Profile  (Test SubModule Profile '0' != Cur SubModule Profile '{0}')</WriteLine>
						</NotEqual>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>uint16CurSubModuleProfile</Value1>
							<Value2>0</Value2>
							<GotoStep>ProfileLoopEnd</GotoStep>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep Name="IndicateThatAtleastOneModuleMatch">
					<SetVariable Target="bAtLeastOneModuleMatch">true</SetVariable>
				</TestStep>
				<TestStep Name="GetObjectIndexInlcOffset">
					<SetVariable Target="u16ObjectIndexInclOffset">#x8000 + (u32ProfileCounter * #x10)</SetVariable>
					<WriteLine Id="12" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : ObjectIndex '0x{0:X}'</WriteLine>
				</TestStep>
				<TestStep Name="SetObjectMandatoryIndication">
					<SetVariable Target="bObjectEntryIsMandatory">true</SetVariable>
					<WriteLine Id="13" Param0="u16ObjectIndexInclOffset" Level="Verbose">0x{0:X4}.0 'Configuration Data' shall be available</WriteLine>
				</TestStep>
				<TestStep Name="LoadDeviceObjectDictionary">
					<Description Id="14" Level="Verbose">VerifyObject : Load 'offline' object dictionary for testing.</Description>
					<GetObjectDictionary Target="odDeviceObjectdictionary">
						<DictionaryType>Offline</DictionaryType>
					</GetObjectDictionary>
					<RaiseErrorOnFailure Id="15">VerifyObject : failed to load offline object dictionary.</RaiseErrorOnFailure>
				</TestStep>
				<TestStep Name="CheckIfObjectExists">
					<GetObjectDescription SourceDictionary="odDeviceObjectdictionary" Index="u16ObjectIndexInclOffset" SubIndex="-1"></GetObjectDescription>
					<GotoOnSuccess>CallCheckObjectDescription</GotoOnSuccess>
				</TestStep>
				<TestStep Name="HandleNotExistingObject">
					<Compare>
						<Equal>
							<Value1>bObjectEntryIsMandatory</Value1>
							<Value2>true</Value2>
							<GotoStep>CallCheckObjectDescription</GotoStep>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="16" Param0="u16ObjectIndexInclOffset" Level="Output">The optional/conditional object 0x{0:X4} 'Configuration Data' does not exists.)</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>ProfileLoopEnd</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CallCheckObjectDescription">
					<Description Id="17" Param0="u16ObjectIndexInclOffset" Level="Output">Verify the object description 0x{0:X4} 'Configuration Data'.</Description>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<CallTestFunction Name="CreateAllowedNames">
								<Parameter>"Configuration Data" ; "IO Settings Ch.{_M#_:d}"</Parameter>
								<Parameter>u16ObjectIndexInclOffset</Parameter>
								<Parameter>0</Parameter>
								<Parameter>u32ProfileCounter</Parameter>
								<OutParameter>arrAllowedNames</OutParameter>
							</CallTestFunction>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<CallTestFunction Name="CheckObjectDescription">
								<Parameter>odDeviceObjectdictionary</Parameter>
								<Parameter>"offline"</Parameter>
								<Parameter>u16ObjectIndexInclOffset</Parameter>
								<Parameter>false</Parameter>
								<Parameter>false</Parameter>
								<Parameter>arrAllowedNames</Parameter>
								<Parameter>null</Parameter>
								<Parameter>9</Parameter>
								<Parameter>-1</Parameter>
								<OutParameter>VerifyDescriptionError</OutParameter>
							</CallTestFunction>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<GotoStep>ProfileLoopEnd</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="InitEntryBittOffset">
					<SetVariable Target="i32CurrentBitOffset">0</SetVariable>
				</TestStep>
				<TestStep Name="StartSi0">
					<Description Id="18" Level="Output">Start validate SubIndex0</Description>
					<WriteLine Id="19" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : Subindex '0x{0:X}.0'</WriteLine>
				</TestStep>
				<TestStep Name="SetSi0MandatoryIndication">
					<SetVariable Target="bObjectEntryIsMandatory">true</SetVariable>
					<WriteLine Id="20" Param0="u16ObjectIndexInclOffset" Level="Verbose">0x{0:X4}.0 'Configuration Data' shall be available</WriteLine>
				</TestStep>
				<TestStep Name="CallSi0CheckEntryDescription">
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"offline"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>0</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>null</Parameter>
						<Parameter>5</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>null</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>null</Parameter>
						<Parameter>null</Parameter>
						<Parameter>null</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>8</Parameter>
						<Parameter>i32CurrentBitOffset</Parameter>
						<Parameter>true</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="EndSi0">
					<SetVariable Target="i32CurrentBitOffset">16</SetVariable>
				</TestStep>
				<TestStep Name="CheckReservedEntryRange_1_to_3">
					<Description Id="21" Level="Output">Start check reserved entry range 1 to 3</Description>
					<CallTestFunction Name="CheckReservedEntryRange">
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>1</Parameter>
						<Parameter>4</Parameter>
						<Parameter>odDeviceObjectdictionary</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="StartSi4">
					<Description Id="22" Level="Output">Start validate SubIndex4</Description>
					<WriteLine Id="23" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : Subindex '0x{0:X}.4'</WriteLine>
				</TestStep>
				<TestStep Name="SetSi4MandatoryIndication">
					<SetVariable Target="bObjectEntryIsMandatory">true</SetVariable>
					<WriteLine Id="24" Param0="u16ObjectIndexInclOffset" Level="Verbose">0x{0:X4}.4 'Device ID' shall be available</WriteLine>
				</TestStep>
				<TestStep Name="CallSi4CheckEntryDescription">
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"offline"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>4</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>"Device ID"</Parameter>
						<Parameter>7</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>null</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>32</Parameter>
						<Parameter>i32CurrentBitOffset</Parameter>
						<Parameter>true</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="EndSi4">
					<SetVariable Target="i32CurrentBitOffset">i32CurrentBitOffset + 32</SetVariable>
				</TestStep>
				<TestStep Name="StartSi5">
					<Description Id="25" Level="Output">Start validate SubIndex5</Description>
					<WriteLine Id="26" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : Subindex '0x{0:X}.5'</WriteLine>
				</TestStep>
				<TestStep Name="SetSi5MandatoryIndication">
					<SetVariable Target="bObjectEntryIsMandatory">true</SetVariable>
					<WriteLine Id="27" Param0="u16ObjectIndexInclOffset" Level="Verbose">0x{0:X4}.5 'Vendor ID' shall be available</WriteLine>
				</TestStep>
				<TestStep Name="CallSi5CheckEntryDescription">
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"offline"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>5</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>"Vendor ID"</Parameter>
						<Parameter>7</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>null</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>32</Parameter>
						<Parameter>i32CurrentBitOffset</Parameter>
						<Parameter>true</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="EndSi5">
					<SetVariable Target="i32CurrentBitOffset">i32CurrentBitOffset + 32</SetVariable>
				</TestStep>
				<TestStep Name="CheckReservedEntryRange_6_to_31">
					<Description Id="28" Level="Output">Start check reserved entry range 6 to 31</Description>
					<CallTestFunction Name="CheckReservedEntryRange">
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>6</Parameter>
						<Parameter>32</Parameter>
						<Parameter>odDeviceObjectdictionary</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="StartSi32">
					<Description Id="29" Level="Output">Start validate SubIndex32</Description>
					<WriteLine Id="30" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : Subindex '0x{0:X}.32'</WriteLine>
				</TestStep>
				<TestStep Name="SetSi32MandatoryIndication">
					<SetVariable Target="bObjectEntryIsMandatory">true</SetVariable>
					<WriteLine Id="31" Param0="u16ObjectIndexInclOffset" Level="Verbose">0x{0:X4}.32 'IO-Link Revision' shall be available</WriteLine>
				</TestStep>
				<TestStep Name="CallSi32CheckEntryDescription">
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"offline"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>32</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>"IO-Link Revision"</Parameter>
						<Parameter>5</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>null</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>8</Parameter>
						<Parameter>i32CurrentBitOffset</Parameter>
						<Parameter>true</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="EndSi32">
					<SetVariable Target="i32CurrentBitOffset">i32CurrentBitOffset + 8</SetVariable>
				</TestStep>
				<TestStep Name="StartSi33">
					<Description Id="32" Level="Output">Start validate SubIndex33</Description>
					<WriteLine Id="33" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : Subindex '0x{0:X}.33'</WriteLine>
				</TestStep>
				<TestStep Name="SetSi33MandatoryIndication">
					<SetVariable Target="bObjectEntryIsMandatory">false</SetVariable>
					<WriteLine Id="34" Param0="u16ObjectIndexInclOffset" Level="Verbose">0x{0:X4}.33 'Frame Capability' may be available</WriteLine>
				</TestStep>
				<TestStep Name="CheckIfSi33Exists">
					<GetObjectDescription SourceDictionary="odDeviceObjectdictionary" Index="u16ObjectIndexInclOffset" SubIndex="33">
						<Type>u16DataType</Type>
					</GetObjectDescription>
					<GotoOnFailure>HandleNotExistingSi33</GotoOnFailure>
				</TestStep>
				<TestStep>
					<Compare>
						<NotEqual>
							<Value1>u16DataType</Value1>
							<Value2>0</Value2>
							<GotoStep>CallSi33CheckEntryDescription</GotoStep>
						</NotEqual>
					</Compare>
					<Compare>
						<Equal>
							<Value1>u16DataType</Value1>
							<Value2>0</Value2>
							<WriteLine Id="35" Param0="u16ObjectIndexInclOffset" Level="Verbose">The optional/conditional entriy 0x{0:X4}.33is defined as a padding entry.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>u16DataType</Value1>
							<Value2>0</Value2>
							<GotoStep>EndSi33</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="HandleNotExistingSi33">
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Mailbox.CoE.CompleteAccess</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult" Param0="u16ObjectIndexInclOffset">Complete access supported, the optional/conditional entry 0x{0:X4}.33 shall be defined or set to padding.</SetVariable>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Mailbox.CoE.CompleteAccess</Value1>
							<Value2>true</Value2>
							<WriteLine Id="36" Param0="strResult" Level="Error">{0}</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Mailbox.CoE.CompleteAccess</Value1>
							<Value2>false</Value2>
							<WriteLine Id="37" Param0="u16ObjectIndexInclOffset" Level="Output">The optional/conditional entry 0x{0:X4}.33 is not defined.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>EndSi33</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CallSi33CheckEntryDescription">
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"offline"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>33</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>"Frame Capability"</Parameter>
						<Parameter>5</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>null</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>8</Parameter>
						<Parameter>i32CurrentBitOffset</Parameter>
						<Parameter>true</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="EndSi33">
					<SetVariable Target="i32CurrentBitOffset">-1</SetVariable>
				</TestStep>
				<TestStep Name="StartSi34">
					<Description Id="38" Level="Output">Start validate SubIndex34</Description>
					<WriteLine Id="39" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : Subindex '0x{0:X}.34'</WriteLine>
				</TestStep>
				<TestStep Name="SetSi34MandatoryIndication">
					<SetVariable Target="bObjectEntryIsMandatory">false</SetVariable>
					<WriteLine Id="40" Param0="u16ObjectIndexInclOffset" Level="Verbose">0x{0:X4}.34 'Cycle Time' may be available</WriteLine>
				</TestStep>
				<TestStep Name="CheckIfSi34Exists">
					<GetObjectDescription SourceDictionary="odDeviceObjectdictionary" Index="u16ObjectIndexInclOffset" SubIndex="34">
						<Type>u16DataType</Type>
					</GetObjectDescription>
					<GotoOnFailure>HandleNotExistingSi34</GotoOnFailure>
				</TestStep>
				<TestStep>
					<Compare>
						<NotEqual>
							<Value1>u16DataType</Value1>
							<Value2>0</Value2>
							<GotoStep>CallSi34CheckEntryDescription</GotoStep>
						</NotEqual>
					</Compare>
					<Compare>
						<Equal>
							<Value1>u16DataType</Value1>
							<Value2>0</Value2>
							<WriteLine Id="41" Param0="u16ObjectIndexInclOffset" Level="Verbose">The optional/conditional entriy 0x{0:X4}.34is defined as a padding entry.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>u16DataType</Value1>
							<Value2>0</Value2>
							<GotoStep>EndSi34</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="HandleNotExistingSi34">
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Mailbox.CoE.CompleteAccess</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult" Param0="u16ObjectIndexInclOffset">Complete access supported, the optional/conditional entry 0x{0:X4}.34 shall be defined or set to padding.</SetVariable>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Mailbox.CoE.CompleteAccess</Value1>
							<Value2>true</Value2>
							<WriteLine Id="42" Param0="strResult" Level="Error">{0}</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Mailbox.CoE.CompleteAccess</Value1>
							<Value2>false</Value2>
							<WriteLine Id="43" Param0="u16ObjectIndexInclOffset" Level="Output">The optional/conditional entry 0x{0:X4}.34 is not defined.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>EndSi34</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CallSi34CheckEntryDescription">
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<CallTestFunction Name="CreateAllowedNames">
								<Parameter>"Cycle Time" ; "Min cycle time"</Parameter>
								<Parameter>u16ObjectIndexInclOffset</Parameter>
								<Parameter>34</Parameter>
								<Parameter>u32ProfileCounter</Parameter>
								<OutParameter>arrAllowedNames</OutParameter>
							</CallTestFunction>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<CallTestFunction Name="CheckEntryDescription">
								<Parameter>odDeviceObjectdictionary</Parameter>
								<Parameter>"offline"</Parameter>
								<Parameter>u16ObjectIndexInclOffset</Parameter>
								<Parameter>34</Parameter>
								<Parameter>false</Parameter>
								<Parameter>false</Parameter>
								<Parameter>arrAllowedNames</Parameter>
								<Parameter>5</Parameter>
								<Parameter>1</Parameter>
								<Parameter>1</Parameter>
								<Parameter>1</Parameter>
								<Parameter>1</Parameter>
								<Parameter>1</Parameter>
								<Parameter>1</Parameter>
								<Parameter>null</Parameter>
								<Parameter>EmptyString</Parameter>
								<Parameter>EmptyString</Parameter>
								<Parameter>EmptyString</Parameter>
								<Parameter>EmptyString</Parameter>
								<Parameter>1</Parameter>
								<Parameter>1</Parameter>
								<Parameter>8</Parameter>
								<Parameter>-1</Parameter>
								<Parameter>true</Parameter>
								<OutParameter>VerifyDescriptionError</OutParameter>
							</CallTestFunction>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="EndSi34"></TestStep>
				<TestStep Name="StartSi35">
					<Description Id="44" Level="Output">Start validate SubIndex35</Description>
					<WriteLine Id="45" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : Subindex '0x{0:X}.35'</WriteLine>
				</TestStep>
				<TestStep Name="SetSi35MandatoryIndication">
					<SetVariable Target="bObjectEntryIsMandatory">false</SetVariable>
					<WriteLine Id="46" Param0="u16ObjectIndexInclOffset" Level="Verbose">0x{0:X4}.35 'Offset Time' may be available</WriteLine>
				</TestStep>
				<TestStep Name="CheckIfSi35Exists">
					<GetObjectDescription SourceDictionary="odDeviceObjectdictionary" Index="u16ObjectIndexInclOffset" SubIndex="35">
						<Type>u16DataType</Type>
					</GetObjectDescription>
					<GotoOnFailure>HandleNotExistingSi35</GotoOnFailure>
				</TestStep>
				<TestStep>
					<Compare>
						<NotEqual>
							<Value1>u16DataType</Value1>
							<Value2>0</Value2>
							<GotoStep>CallSi35CheckEntryDescription</GotoStep>
						</NotEqual>
					</Compare>
					<Compare>
						<Equal>
							<Value1>u16DataType</Value1>
							<Value2>0</Value2>
							<WriteLine Id="47" Param0="u16ObjectIndexInclOffset" Level="Verbose">The optional/conditional entriy 0x{0:X4}.35is defined as a padding entry.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>u16DataType</Value1>
							<Value2>0</Value2>
							<GotoStep>EndSi35</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="HandleNotExistingSi35">
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Mailbox.CoE.CompleteAccess</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult" Param0="u16ObjectIndexInclOffset">Complete access supported, the optional/conditional entry 0x{0:X4}.35 shall be defined or set to padding.</SetVariable>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Mailbox.CoE.CompleteAccess</Value1>
							<Value2>true</Value2>
							<WriteLine Id="48" Param0="strResult" Level="Error">{0}</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Mailbox.CoE.CompleteAccess</Value1>
							<Value2>false</Value2>
							<WriteLine Id="49" Param0="u16ObjectIndexInclOffset" Level="Output">The optional/conditional entry 0x{0:X4}.35 is not defined.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>EndSi35</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CallSi35CheckEntryDescription">
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"offline"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>35</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>"Offset Time"</Parameter>
						<Parameter>5</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>null</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>8</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>true</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="EndSi35"></TestStep>
				<TestStep Name="StartSi36">
					<Description Id="50" Level="Output">Start validate SubIndex36</Description>
					<WriteLine Id="51" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : Subindex '0x{0:X}.36'</WriteLine>
				</TestStep>
				<TestStep Name="SetSi36MandatoryIndication">
					<SetVariable Target="bObjectEntryIsMandatory">true</SetVariable>
					<WriteLine Id="52" Param0="u16ObjectIndexInclOffset" Level="Verbose">0x{0:X4}.36 'Process Data In Length' shall be available</WriteLine>
				</TestStep>
				<TestStep Name="CallSi36CheckEntryDescription">
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"offline"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>36</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>"Process Data In Length"</Parameter>
						<Parameter>5</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>null</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>8</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>true</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="EndSi36"></TestStep>
				<TestStep Name="StartSi37">
					<Description Id="53" Level="Output">Start validate SubIndex37</Description>
					<WriteLine Id="54" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : Subindex '0x{0:X}.37'</WriteLine>
				</TestStep>
				<TestStep Name="SetSi37MandatoryIndication">
					<SetVariable Target="bObjectEntryIsMandatory">true</SetVariable>
					<WriteLine Id="55" Param0="u16ObjectIndexInclOffset" Level="Verbose">0x{0:X4}.37 'Process Data Out Length' shall be available</WriteLine>
				</TestStep>
				<TestStep Name="CallSi37CheckEntryDescription">
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"offline"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>37</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>"Process Data Out Length"</Parameter>
						<Parameter>5</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>null</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>8</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>true</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="EndSi37"></TestStep>
				<TestStep Name="StartSi38">
					<Description Id="56" Level="Output">Start validate SubIndex38</Description>
					<WriteLine Id="57" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : Subindex '0x{0:X}.38'</WriteLine>
				</TestStep>
				<TestStep Name="SetSi38MandatoryIndication">
					<SetVariable Target="bObjectEntryIsMandatory">false</SetVariable>
					<WriteLine Id="58" Param0="u16ObjectIndexInclOffset" Level="Verbose">0x{0:X4}.38 'Compatible ID' may be available</WriteLine>
				</TestStep>
				<TestStep Name="CheckIfSi38Exists">
					<GetObjectDescription SourceDictionary="odDeviceObjectdictionary" Index="u16ObjectIndexInclOffset" SubIndex="38">
						<Type>u16DataType</Type>
					</GetObjectDescription>
					<GotoOnFailure>HandleNotExistingSi38</GotoOnFailure>
				</TestStep>
				<TestStep>
					<Compare>
						<NotEqual>
							<Value1>u16DataType</Value1>
							<Value2>0</Value2>
							<GotoStep>CallSi38CheckEntryDescription</GotoStep>
						</NotEqual>
					</Compare>
					<Compare>
						<Equal>
							<Value1>u16DataType</Value1>
							<Value2>0</Value2>
							<WriteLine Id="59" Param0="u16ObjectIndexInclOffset" Level="Verbose">The optional/conditional entriy 0x{0:X4}.38is defined as a padding entry.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>u16DataType</Value1>
							<Value2>0</Value2>
							<GotoStep>EndSi38</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="HandleNotExistingSi38">
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Mailbox.CoE.CompleteAccess</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult" Param0="u16ObjectIndexInclOffset">Complete access supported, the optional/conditional entry 0x{0:X4}.38 shall be defined or set to padding.</SetVariable>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Mailbox.CoE.CompleteAccess</Value1>
							<Value2>true</Value2>
							<WriteLine Id="60" Param0="strResult" Level="Error">{0}</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Mailbox.CoE.CompleteAccess</Value1>
							<Value2>false</Value2>
							<WriteLine Id="61" Param0="u16ObjectIndexInclOffset" Level="Output">The optional/conditional entry 0x{0:X4}.38 is not defined.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>EndSi38</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CallSi38CheckEntryDescription">
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"offline"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>38</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>"Compatible ID"</Parameter>
						<Parameter>6</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>null</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>16</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>true</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="EndSi38"></TestStep>
				<TestStep Name="StartSi39">
					<Description Id="62" Level="Output">Start validate SubIndex39</Description>
					<WriteLine Id="63" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : Subindex '0x{0:X}.39'</WriteLine>
				</TestStep>
				<TestStep Name="SetSi39MandatoryIndication">
					<SetVariable Target="bObjectEntryIsMandatory">false</SetVariable>
					<WriteLine Id="64" Param0="u16ObjectIndexInclOffset" Level="Verbose">0x{0:X4}.39 may be available</WriteLine>
				</TestStep>
				<TestStep Name="CheckIfSi39Exists">
					<GetObjectDescription SourceDictionary="odDeviceObjectdictionary" Index="u16ObjectIndexInclOffset" SubIndex="39">
						<Type>u16DataType</Type>
					</GetObjectDescription>
					<GotoOnFailure>HandleNotExistingSi39</GotoOnFailure>
				</TestStep>
				<TestStep>
					<Compare>
						<NotEqual>
							<Value1>u16DataType</Value1>
							<Value2>0</Value2>
							<GotoStep>CallSi39CheckEntryDescription</GotoStep>
						</NotEqual>
					</Compare>
					<Compare>
						<Equal>
							<Value1>u16DataType</Value1>
							<Value2>0</Value2>
							<WriteLine Id="65" Param0="u16ObjectIndexInclOffset" Level="Verbose">The optional/conditional entriy 0x{0:X4}.39is defined as a padding entry.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>u16DataType</Value1>
							<Value2>0</Value2>
							<GotoStep>EndSi39</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="HandleNotExistingSi39">
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Mailbox.CoE.CompleteAccess</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult" Param0="u16ObjectIndexInclOffset">Complete access supported, the optional/conditional entry 0x{0:X4}.39 shall be defined or set to padding.</SetVariable>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Mailbox.CoE.CompleteAccess</Value1>
							<Value2>true</Value2>
							<WriteLine Id="66" Param0="strResult" Level="Error">{0}</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Mailbox.CoE.CompleteAccess</Value1>
							<Value2>false</Value2>
							<WriteLine Id="67" Param0="u16ObjectIndexInclOffset" Level="Output">The optional/conditional entry 0x{0:X4}.39 is not defined.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>EndSi39</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CallSi39CheckEntryDescription">
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"offline"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>39</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>null</Parameter>
						<Parameter>6</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>null</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>16</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>true</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="EndSi39"></TestStep>
				<TestStep Name="StartSi40">
					<Description Id="68" Level="Output">Start validate SubIndex40</Description>
					<WriteLine Id="69" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : Subindex '0x{0:X}.40'</WriteLine>
				</TestStep>
				<TestStep Name="SetSi40MandatoryIndication">
					<SetVariable Target="bObjectEntryIsMandatory">true</SetVariable>
					<WriteLine Id="70" Param0="u16ObjectIndexInclOffset" Level="Verbose">0x{0:X4}.40 'Master Control' shall be available</WriteLine>
				</TestStep>
				<TestStep Name="CallSi40CheckEntryDescription">
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"offline"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>40</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>"Master Control"</Parameter>
						<Parameter>6</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>null</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>16</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>true</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="EndSi40"></TestStep>
				<TestStep Name="CheckReservedEntryRange_41_to_255">
					<Description Id="71" Level="Output">Start check reserved entry range 41 to 255</Description>
					<CallTestFunction Name="CheckReservedEntryRange">
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>41</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>odDeviceObjectdictionary</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="ProfileLoopEnd">
					<Compare>
						<Equal>
							<Value1>bAtLeastOneModuleMatch</Value1>
							<Value2>false</Value2>
							<GotoStep>HandleAbortTestCaseOnFirstError</GotoStep>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>ProfileLoopIncrement</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="HandleAbortTestCaseOnFirstError">
					<Compare>
						<Equal>
							<Value1>bAbortTestCaseOnFirstError</Value1>
							<Value2>false</Value2>
							<GotoStep>ProfileLoopIncrement</GotoStep>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>strResult</Value1>
							<Value2>EmptyString</Value2>
							<GotoStep>ProfileLoopIncrement</GotoStep>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="72" Level="Output">Object verification for all following modules abort because an error was already detected for the current module.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>END</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="ProfileLoopIncrement">
					<SetVariable Target="u32ProfileCounter">u32ProfileCounter + 1</SetVariable>
					<Compare>
						<Greater>
							<Value1>u32CurrentProfilesLength</Value1>
							<Value2>u32ProfileCounter</Value2>
							<GotoStep>ProfileLoopStart</GotoStep>
						</Greater>
					</Compare>
				</TestStep>
				<TestStep Name="END">
					<Compare>
						<NotEqual>
							<Value1>bAtLeastOneModuleMatch</Value1>
							<Value2>true</Value2>
							<SkipCase Id="73">SKIP TEST</SkipCase>
						</NotEqual>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bDEBUG</Value1>
							<Value2>true</Value2>
							<WriteLine Id="74" Param0="strResult" Level="Verbose">DEBUG | Result : '{0}'.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>strResult</Value1>
							<Value2>EmptyString</Value2>
							<ReturnSuccess Id="75">Test succeed</ReturnSuccess>
						</Equal>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>strResult</Value1>
							<Value2>EmptyString</Value2>
							<RaiseError Id="76"></RaiseError>
						</NotEqual>
					</Compare>
				</TestStep>
			</TestCase>
			<TestCase Name="online | 0x8000 (Configuration Data)" CaseId="2">
				<?MAX_OUTPUT_ID 76?>
				<Description>
					<PreCondition>- The device profile is 5001
- The module profile is 6220
- The submodule profile is 0</PreCondition>
					<Action>- Iterate over all online defined modules/channels and if the PreCondition matches the following operations are done:
- Get the online description of object 0x8000(+module specific offset) 'Configuration Data' and all entries
 Check:
    (Name)
    BitSize
    DataType
    Rx / Tx mappable
    Default Data
    MinData
    Flags       </Action>
					<PostCondition>Error if
- mandatory object / entry is not defined
- an optional object exists and the entries are invalid
- Object / entry description does not match with the specification</PostCondition>
					<ProposalForSolution>- Define the missing objects
- correct object / entry description</ProposalForSolution>
					<References>
						<Reference Specification="ETG.5001.6220"></Reference>
					</References>
					<Mandatory>true</Mandatory>
				</Description>
				<TestStep Name="InitResult">
					<SetVariable Target="strResult">EmptyString</SetVariable>
				</TestStep>
				<TestStep Name="InitAtLeastOneProfileMatch">
					<SetVariable Target="bAtLeastOneModuleMatch">false</SetVariable>
				</TestStep>
				<TestStep Name="GetCurrentProfileList">
					<CallTestFunction Name="GetCurrentProfileList">
						<Parameter>"online"</Parameter>
						<Parameter>"SafeOP"</Parameter>
						<OutParameter>arrCurrentProfiles</OutParameter>
					</CallTestFunction>
				</TestStep>
				<TestStep Name="InitProfileLoopCounter">
					<SetVariable Target="u32ProfileCounter">0</SetVariable>
				</TestStep>
				<TestStep Name="GetProfileArrayLength">
					<SizeOf UInt32Var="u32CurrentProfilesLength">arrCurrentProfiles</SizeOf>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="0" Param0="u32CurrentProfilesLength" Level="Verbose">'{0}' Profile(s) defined online.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>u32CurrentProfilesLength</Value1>
							<Value2>0</Value2>
							<SkipCase Id="1">Skip case | no profile defined.</SkipCase>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="ProfileLoopStart">
					<GetArrayItem SourceArray="arrCurrentProfiles" Target="strTmpString" Index="u32ProfileCounter"></GetArrayItem>
				</TestStep>
				<TestStep Name="CheckProfileInformationString">
					<Compare>
						<Equal>
							<Value1>strTmpString</Value1>
							<Value2>null</Value2>
							<RaiseError Id="2" Param0="u32ProfileCounter">Profile Info element [{0}] is null.</RaiseError>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>strTmpString</Value1>
							<Value2>EmptyString</Value2>
							<RaiseError Id="3" Param0="u32ProfileCounter">Profile Info element [{0}] is an empty string.</RaiseError>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="GetDeviceProfile">
					<CallTestFunction Name="GetDeviceProfile">
						<Parameter>strTmpString</Parameter>
						<OutParameter>uint16CurDeviceProfile</OutParameter>
					</CallTestFunction>
				</TestStep>
				<TestStep Name="GetModuleProfile">
					<CallTestFunction Name="GetModuleProfile">
						<Parameter>strTmpString</Parameter>
						<OutParameter>uint16CurModuleProfile</OutParameter>
					</CallTestFunction>
				</TestStep>
				<TestStep Name="GetSubModuleProfile">
					<CallTestFunction Name="GetSubModuleProfile">
						<Parameter>strTmpString</Parameter>
						<OutParameter>uint16CurSubModuleProfile</OutParameter>
					</CallTestFunction>
				</TestStep>
				<TestStep Name="DumpProfileInfo">
					<Description Id="4" Param0="uint16CurDeviceProfile" Param1="uint16CurModuleProfile" Param2="uint16CurSubModuleProfile" Param3="u32ProfileCounter" Level="Output">Module[{3}] : DeviceProfile '{0}' ; ModuleProfile '{1}' ; SubModuleProfile '{2}'</Description>
					<Compare>
						<Equal>
							<Value1>bIgnoreProfileID</Value1>
							<Value2>true</Value2>
							<GotoStep>IndicateThatAtleastOneModuleMatch</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CompareDeviceProfile">
					<Compare>
						<NotEqual>
							<Value1>uint16CurDeviceProfile</Value1>
							<Value2>5001</Value2>
							<WriteLine Id="5" Param0="uint16CurDeviceProfile" Level="Output">Skip Profile  (Test Device Profile '5001' != Cur Device Profile '{0}')</WriteLine>
						</NotEqual>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>uint16CurDeviceProfile</Value1>
							<Value2>5001</Value2>
							<GotoStep>ProfileLoopEnd</GotoStep>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep Name="CompareModuleProfile">
					<Compare>
						<NotEqual>
							<Value1>uint16CurModuleProfile</Value1>
							<Value2>6220</Value2>
							<WriteLine Id="6" Param0="uint16CurModuleProfile" Level="Output">Skip Profile  (Test Module Profile '6220' != Cur Module Profile '{0}')</WriteLine>
						</NotEqual>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>uint16CurModuleProfile</Value1>
							<Value2>6220</Value2>
							<GotoStep>ProfileLoopEnd</GotoStep>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep Name="CompareSubModuleProfile">
					<Compare>
						<NotEqual>
							<Value1>uint16CurSubModuleProfile</Value1>
							<Value2>0</Value2>
							<WriteLine Id="7" Param0="uint16CurSubModuleProfile" Level="Output">Skip Profile  (Test SubModule Profile '0' != Cur SubModule Profile '{0}')</WriteLine>
						</NotEqual>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>uint16CurSubModuleProfile</Value1>
							<Value2>0</Value2>
							<GotoStep>ProfileLoopEnd</GotoStep>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep Name="IndicateThatAtleastOneModuleMatch">
					<SetVariable Target="bAtLeastOneModuleMatch">true</SetVariable>
				</TestStep>
				<TestStep Name="GetObjectIndexInlcOffset">
					<SetVariable Target="u16ObjectIndexInclOffset">#x8000 + (u32ProfileCounter * #x10)</SetVariable>
					<WriteLine Id="8" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : ObjectIndex '0x{0:X}'</WriteLine>
				</TestStep>
				<TestStep Name="SetObjectMandatoryIndication">
					<SetVariable Target="bObjectEntryIsMandatory">true</SetVariable>
					<WriteLine Id="9" Param0="u16ObjectIndexInclOffset" Level="Verbose">0x{0:X4}.0 'Configuration Data' shall be available</WriteLine>
				</TestStep>
				<TestStep Name="LoadDeviceObjectDictionary">
					<Description Id="10" Level="Verbose">VerifyObject : Load 'online' object dictionary for testing.</Description>
					<GetObjectDictionary Target="odDeviceObjectdictionary">
						<DictionaryType>Online</DictionaryType>
					</GetObjectDictionary>
					<RaiseErrorOnFailure Id="11">VerifyObject : failed to load online object dictionary.</RaiseErrorOnFailure>
				</TestStep>
				<TestStep Name="CheckIfObjectExists">
					<GetObjectDescription SourceDictionary="odDeviceObjectdictionary" Index="u16ObjectIndexInclOffset" SubIndex="-1"></GetObjectDescription>
					<GotoOnSuccess>CallCheckObjectDescription</GotoOnSuccess>
				</TestStep>
				<TestStep Name="HandleNotExistingObject">
					<Compare>
						<Equal>
							<Value1>bObjectEntryIsMandatory</Value1>
							<Value2>true</Value2>
							<GotoStep>CallCheckObjectDescription</GotoStep>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="12" Param0="u16ObjectIndexInclOffset" Level="Output">The optional/conditional object 0x{0:X4} 'Configuration Data' does not exists.)</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>ProfileLoopEnd</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CallCheckObjectDescription">
					<Description Id="13" Param0="u16ObjectIndexInclOffset" Level="Output">Verify the object description 0x{0:X4} 'Configuration Data'.</Description>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<CallTestFunction Name="CreateAllowedNames">
								<Parameter>"Configuration Data" ; "IO Settings Ch.{_M#_:d}"</Parameter>
								<Parameter>u16ObjectIndexInclOffset</Parameter>
								<Parameter>0</Parameter>
								<Parameter>u32ProfileCounter</Parameter>
								<OutParameter>arrAllowedNames</OutParameter>
							</CallTestFunction>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<CallTestFunction Name="CheckObjectDescription">
								<Parameter>odDeviceObjectdictionary</Parameter>
								<Parameter>"online"</Parameter>
								<Parameter>u16ObjectIndexInclOffset</Parameter>
								<Parameter>false</Parameter>
								<Parameter>false</Parameter>
								<Parameter>arrAllowedNames</Parameter>
								<Parameter>null</Parameter>
								<Parameter>9</Parameter>
								<Parameter>-1</Parameter>
								<OutParameter>VerifyDescriptionError</OutParameter>
							</CallTestFunction>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<GotoStep>ProfileLoopEnd</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="InitEntryBittOffset">
					<SetVariable Target="i32CurrentBitOffset">0</SetVariable>
				</TestStep>
				<TestStep Name="StartSi0">
					<Description Id="14" Level="Output">Start validate SubIndex0</Description>
					<WriteLine Id="15" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : Subindex '0x{0:X}.0'</WriteLine>
				</TestStep>
				<TestStep Name="SetSi0MandatoryIndication">
					<SetVariable Target="bObjectEntryIsMandatory">true</SetVariable>
					<WriteLine Id="16" Param0="u16ObjectIndexInclOffset" Level="Verbose">0x{0:X4}.0 'Configuration Data' shall be available</WriteLine>
				</TestStep>
				<TestStep Name="CallSi0CheckEntryDescription">
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"online"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>0</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>null</Parameter>
						<Parameter>5</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>null</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>null</Parameter>
						<Parameter>null</Parameter>
						<Parameter>null</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>8</Parameter>
						<Parameter>i32CurrentBitOffset</Parameter>
						<Parameter>true</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="EndSi0">
					<SetVariable Target="i32CurrentBitOffset">16</SetVariable>
				</TestStep>
				<TestStep Name="CheckReservedEntryRange_1_to_3">
					<Description Id="17" Level="Output">Start check reserved entry range 1 to 3</Description>
					<CallTestFunction Name="CheckReservedEntryRange">
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>1</Parameter>
						<Parameter>4</Parameter>
						<Parameter>odDeviceObjectdictionary</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="StartSi4">
					<Description Id="18" Level="Output">Start validate SubIndex4</Description>
					<WriteLine Id="19" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : Subindex '0x{0:X}.4'</WriteLine>
				</TestStep>
				<TestStep Name="SetSi4MandatoryIndication">
					<SetVariable Target="bObjectEntryIsMandatory">true</SetVariable>
					<WriteLine Id="20" Param0="u16ObjectIndexInclOffset" Level="Verbose">0x{0:X4}.4 'Device ID' shall be available</WriteLine>
				</TestStep>
				<TestStep Name="CallSi4CheckEntryDescription">
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"online"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>4</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>"Device ID"</Parameter>
						<Parameter>7</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>null</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>32</Parameter>
						<Parameter>i32CurrentBitOffset</Parameter>
						<Parameter>true</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="EndSi4">
					<SetVariable Target="i32CurrentBitOffset">i32CurrentBitOffset + 32</SetVariable>
				</TestStep>
				<TestStep Name="StartSi5">
					<Description Id="21" Level="Output">Start validate SubIndex5</Description>
					<WriteLine Id="22" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : Subindex '0x{0:X}.5'</WriteLine>
				</TestStep>
				<TestStep Name="SetSi5MandatoryIndication">
					<SetVariable Target="bObjectEntryIsMandatory">true</SetVariable>
					<WriteLine Id="23" Param0="u16ObjectIndexInclOffset" Level="Verbose">0x{0:X4}.5 'Vendor ID' shall be available</WriteLine>
				</TestStep>
				<TestStep Name="CallSi5CheckEntryDescription">
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"online"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>5</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>"Vendor ID"</Parameter>
						<Parameter>7</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>null</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>32</Parameter>
						<Parameter>i32CurrentBitOffset</Parameter>
						<Parameter>true</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="EndSi5">
					<SetVariable Target="i32CurrentBitOffset">i32CurrentBitOffset + 32</SetVariable>
				</TestStep>
				<TestStep Name="CheckReservedEntryRange_6_to_31">
					<Description Id="24" Level="Output">Start check reserved entry range 6 to 31</Description>
					<CallTestFunction Name="CheckReservedEntryRange">
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>6</Parameter>
						<Parameter>32</Parameter>
						<Parameter>odDeviceObjectdictionary</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="StartSi32">
					<Description Id="25" Level="Output">Start validate SubIndex32</Description>
					<WriteLine Id="26" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : Subindex '0x{0:X}.32'</WriteLine>
				</TestStep>
				<TestStep Name="SetSi32MandatoryIndication">
					<SetVariable Target="bObjectEntryIsMandatory">true</SetVariable>
					<WriteLine Id="27" Param0="u16ObjectIndexInclOffset" Level="Verbose">0x{0:X4}.32 'IO-Link Revision' shall be available</WriteLine>
				</TestStep>
				<TestStep Name="CallSi32CheckEntryDescription">
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"online"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>32</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>"IO-Link Revision"</Parameter>
						<Parameter>5</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>null</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>8</Parameter>
						<Parameter>i32CurrentBitOffset</Parameter>
						<Parameter>true</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="EndSi32">
					<SetVariable Target="i32CurrentBitOffset">i32CurrentBitOffset + 8</SetVariable>
				</TestStep>
				<TestStep Name="StartSi33">
					<Description Id="28" Level="Output">Start validate SubIndex33</Description>
					<WriteLine Id="29" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : Subindex '0x{0:X}.33'</WriteLine>
				</TestStep>
				<TestStep Name="SetSi33MandatoryIndication">
					<SetVariable Target="bObjectEntryIsMandatory">false</SetVariable>
					<WriteLine Id="30" Param0="u16ObjectIndexInclOffset" Level="Verbose">0x{0:X4}.33 'Frame Capability' may be available</WriteLine>
				</TestStep>
				<TestStep Name="CheckIfSi33Exists">
					<GetObjectDescription SourceDictionary="odDeviceObjectdictionary" Index="u16ObjectIndexInclOffset" SubIndex="33">
						<Type>u16DataType</Type>
					</GetObjectDescription>
					<GotoOnFailure>HandleNotExistingSi33</GotoOnFailure>
				</TestStep>
				<TestStep>
					<Compare>
						<NotEqual>
							<Value1>u16DataType</Value1>
							<Value2>0</Value2>
							<GotoStep>CallSi33CheckEntryDescription</GotoStep>
						</NotEqual>
					</Compare>
					<Compare>
						<Equal>
							<Value1>u16DataType</Value1>
							<Value2>0</Value2>
							<WriteLine Id="31" Param0="u16ObjectIndexInclOffset" Level="Verbose">The optional/conditional entriy 0x{0:X4}.33is defined as a padding entry.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>u16DataType</Value1>
							<Value2>0</Value2>
							<GotoStep>EndSi33</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="HandleNotExistingSi33">
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Mailbox.CoE.CompleteAccess</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult" Param0="u16ObjectIndexInclOffset">Complete access supported, the optional/conditional entry 0x{0:X4}.33 shall be defined or set to padding.</SetVariable>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Mailbox.CoE.CompleteAccess</Value1>
							<Value2>true</Value2>
							<WriteLine Id="32" Param0="strResult" Level="Error">{0}</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Mailbox.CoE.CompleteAccess</Value1>
							<Value2>false</Value2>
							<WriteLine Id="33" Param0="u16ObjectIndexInclOffset" Level="Output">The optional/conditional entry 0x{0:X4}.33 is not defined.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>EndSi33</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CallSi33CheckEntryDescription">
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"online"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>33</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>"Frame Capability"</Parameter>
						<Parameter>5</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>null</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>8</Parameter>
						<Parameter>i32CurrentBitOffset</Parameter>
						<Parameter>true</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="EndSi33">
					<SetVariable Target="i32CurrentBitOffset">-1</SetVariable>
				</TestStep>
				<TestStep Name="StartSi34">
					<Description Id="34" Level="Output">Start validate SubIndex34</Description>
					<WriteLine Id="35" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : Subindex '0x{0:X}.34'</WriteLine>
				</TestStep>
				<TestStep Name="SetSi34MandatoryIndication">
					<SetVariable Target="bObjectEntryIsMandatory">false</SetVariable>
					<WriteLine Id="36" Param0="u16ObjectIndexInclOffset" Level="Verbose">0x{0:X4}.34 'Cycle Time' may be available</WriteLine>
				</TestStep>
				<TestStep Name="CheckIfSi34Exists">
					<GetObjectDescription SourceDictionary="odDeviceObjectdictionary" Index="u16ObjectIndexInclOffset" SubIndex="34">
						<Type>u16DataType</Type>
					</GetObjectDescription>
					<GotoOnFailure>HandleNotExistingSi34</GotoOnFailure>
				</TestStep>
				<TestStep>
					<Compare>
						<NotEqual>
							<Value1>u16DataType</Value1>
							<Value2>0</Value2>
							<GotoStep>CallSi34CheckEntryDescription</GotoStep>
						</NotEqual>
					</Compare>
					<Compare>
						<Equal>
							<Value1>u16DataType</Value1>
							<Value2>0</Value2>
							<WriteLine Id="37" Param0="u16ObjectIndexInclOffset" Level="Verbose">The optional/conditional entriy 0x{0:X4}.34is defined as a padding entry.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>u16DataType</Value1>
							<Value2>0</Value2>
							<GotoStep>EndSi34</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="HandleNotExistingSi34">
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Mailbox.CoE.CompleteAccess</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult" Param0="u16ObjectIndexInclOffset">Complete access supported, the optional/conditional entry 0x{0:X4}.34 shall be defined or set to padding.</SetVariable>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Mailbox.CoE.CompleteAccess</Value1>
							<Value2>true</Value2>
							<WriteLine Id="38" Param0="strResult" Level="Error">{0}</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Mailbox.CoE.CompleteAccess</Value1>
							<Value2>false</Value2>
							<WriteLine Id="39" Param0="u16ObjectIndexInclOffset" Level="Output">The optional/conditional entry 0x{0:X4}.34 is not defined.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>EndSi34</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CallSi34CheckEntryDescription">
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<CallTestFunction Name="CreateAllowedNames">
								<Parameter>"Cycle Time" ; "Min cycle time"</Parameter>
								<Parameter>u16ObjectIndexInclOffset</Parameter>
								<Parameter>34</Parameter>
								<Parameter>u32ProfileCounter</Parameter>
								<OutParameter>arrAllowedNames</OutParameter>
							</CallTestFunction>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<CallTestFunction Name="CheckEntryDescription">
								<Parameter>odDeviceObjectdictionary</Parameter>
								<Parameter>"online"</Parameter>
								<Parameter>u16ObjectIndexInclOffset</Parameter>
								<Parameter>34</Parameter>
								<Parameter>false</Parameter>
								<Parameter>false</Parameter>
								<Parameter>arrAllowedNames</Parameter>
								<Parameter>5</Parameter>
								<Parameter>1</Parameter>
								<Parameter>1</Parameter>
								<Parameter>1</Parameter>
								<Parameter>1</Parameter>
								<Parameter>1</Parameter>
								<Parameter>1</Parameter>
								<Parameter>null</Parameter>
								<Parameter>EmptyString</Parameter>
								<Parameter>EmptyString</Parameter>
								<Parameter>EmptyString</Parameter>
								<Parameter>EmptyString</Parameter>
								<Parameter>1</Parameter>
								<Parameter>1</Parameter>
								<Parameter>8</Parameter>
								<Parameter>-1</Parameter>
								<Parameter>true</Parameter>
								<OutParameter>VerifyDescriptionError</OutParameter>
							</CallTestFunction>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="EndSi34"></TestStep>
				<TestStep Name="StartSi35">
					<Description Id="40" Level="Output">Start validate SubIndex35</Description>
					<WriteLine Id="41" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : Subindex '0x{0:X}.35'</WriteLine>
				</TestStep>
				<TestStep Name="SetSi35MandatoryIndication">
					<SetVariable Target="bObjectEntryIsMandatory">false</SetVariable>
					<WriteLine Id="42" Param0="u16ObjectIndexInclOffset" Level="Verbose">0x{0:X4}.35 'Offset Time' may be available</WriteLine>
				</TestStep>
				<TestStep Name="CheckIfSi35Exists">
					<GetObjectDescription SourceDictionary="odDeviceObjectdictionary" Index="u16ObjectIndexInclOffset" SubIndex="35">
						<Type>u16DataType</Type>
					</GetObjectDescription>
					<GotoOnFailure>HandleNotExistingSi35</GotoOnFailure>
				</TestStep>
				<TestStep>
					<Compare>
						<NotEqual>
							<Value1>u16DataType</Value1>
							<Value2>0</Value2>
							<GotoStep>CallSi35CheckEntryDescription</GotoStep>
						</NotEqual>
					</Compare>
					<Compare>
						<Equal>
							<Value1>u16DataType</Value1>
							<Value2>0</Value2>
							<WriteLine Id="43" Param0="u16ObjectIndexInclOffset" Level="Verbose">The optional/conditional entriy 0x{0:X4}.35is defined as a padding entry.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>u16DataType</Value1>
							<Value2>0</Value2>
							<GotoStep>EndSi35</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="HandleNotExistingSi35">
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Mailbox.CoE.CompleteAccess</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult" Param0="u16ObjectIndexInclOffset">Complete access supported, the optional/conditional entry 0x{0:X4}.35 shall be defined or set to padding.</SetVariable>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Mailbox.CoE.CompleteAccess</Value1>
							<Value2>true</Value2>
							<WriteLine Id="44" Param0="strResult" Level="Error">{0}</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Mailbox.CoE.CompleteAccess</Value1>
							<Value2>false</Value2>
							<WriteLine Id="45" Param0="u16ObjectIndexInclOffset" Level="Output">The optional/conditional entry 0x{0:X4}.35 is not defined.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>EndSi35</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CallSi35CheckEntryDescription">
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"online"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>35</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>"Offset Time"</Parameter>
						<Parameter>5</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>null</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>8</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>true</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="EndSi35"></TestStep>
				<TestStep Name="StartSi36">
					<Description Id="46" Level="Output">Start validate SubIndex36</Description>
					<WriteLine Id="47" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : Subindex '0x{0:X}.36'</WriteLine>
				</TestStep>
				<TestStep Name="SetSi36MandatoryIndication">
					<SetVariable Target="bObjectEntryIsMandatory">true</SetVariable>
					<WriteLine Id="48" Param0="u16ObjectIndexInclOffset" Level="Verbose">0x{0:X4}.36 'Process Data In Length' shall be available</WriteLine>
				</TestStep>
				<TestStep Name="CallSi36CheckEntryDescription">
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"online"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>36</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>"Process Data In Length"</Parameter>
						<Parameter>5</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>null</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>8</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>true</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="EndSi36"></TestStep>
				<TestStep Name="StartSi37">
					<Description Id="49" Level="Output">Start validate SubIndex37</Description>
					<WriteLine Id="50" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : Subindex '0x{0:X}.37'</WriteLine>
				</TestStep>
				<TestStep Name="SetSi37MandatoryIndication">
					<SetVariable Target="bObjectEntryIsMandatory">true</SetVariable>
					<WriteLine Id="51" Param0="u16ObjectIndexInclOffset" Level="Verbose">0x{0:X4}.37 'Process Data Out Length' shall be available</WriteLine>
				</TestStep>
				<TestStep Name="CallSi37CheckEntryDescription">
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"online"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>37</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>"Process Data Out Length"</Parameter>
						<Parameter>5</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>null</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>8</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>true</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="EndSi37"></TestStep>
				<TestStep Name="StartSi38">
					<Description Id="52" Level="Output">Start validate SubIndex38</Description>
					<WriteLine Id="53" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : Subindex '0x{0:X}.38'</WriteLine>
				</TestStep>
				<TestStep Name="SetSi38MandatoryIndication">
					<SetVariable Target="bObjectEntryIsMandatory">false</SetVariable>
					<WriteLine Id="54" Param0="u16ObjectIndexInclOffset" Level="Verbose">0x{0:X4}.38 'Compatible ID' may be available</WriteLine>
				</TestStep>
				<TestStep Name="CheckIfSi38Exists">
					<GetObjectDescription SourceDictionary="odDeviceObjectdictionary" Index="u16ObjectIndexInclOffset" SubIndex="38">
						<Type>u16DataType</Type>
					</GetObjectDescription>
					<GotoOnFailure>HandleNotExistingSi38</GotoOnFailure>
				</TestStep>
				<TestStep>
					<Compare>
						<NotEqual>
							<Value1>u16DataType</Value1>
							<Value2>0</Value2>
							<GotoStep>CallSi38CheckEntryDescription</GotoStep>
						</NotEqual>
					</Compare>
					<Compare>
						<Equal>
							<Value1>u16DataType</Value1>
							<Value2>0</Value2>
							<WriteLine Id="55" Param0="u16ObjectIndexInclOffset" Level="Verbose">The optional/conditional entriy 0x{0:X4}.38is defined as a padding entry.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>u16DataType</Value1>
							<Value2>0</Value2>
							<GotoStep>EndSi38</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="HandleNotExistingSi38">
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Mailbox.CoE.CompleteAccess</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult" Param0="u16ObjectIndexInclOffset">Complete access supported, the optional/conditional entry 0x{0:X4}.38 shall be defined or set to padding.</SetVariable>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Mailbox.CoE.CompleteAccess</Value1>
							<Value2>true</Value2>
							<WriteLine Id="56" Param0="strResult" Level="Error">{0}</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Mailbox.CoE.CompleteAccess</Value1>
							<Value2>false</Value2>
							<WriteLine Id="57" Param0="u16ObjectIndexInclOffset" Level="Output">The optional/conditional entry 0x{0:X4}.38 is not defined.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>EndSi38</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CallSi38CheckEntryDescription">
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"online"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>38</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>"Compatible ID"</Parameter>
						<Parameter>6</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>null</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>16</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>true</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="EndSi38"></TestStep>
				<TestStep Name="StartSi39">
					<Description Id="58" Level="Output">Start validate SubIndex39</Description>
					<WriteLine Id="59" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : Subindex '0x{0:X}.39'</WriteLine>
				</TestStep>
				<TestStep Name="SetSi39MandatoryIndication">
					<SetVariable Target="bObjectEntryIsMandatory">false</SetVariable>
					<WriteLine Id="60" Param0="u16ObjectIndexInclOffset" Level="Verbose">0x{0:X4}.39 may be available</WriteLine>
				</TestStep>
				<TestStep Name="CheckIfSi39Exists">
					<GetObjectDescription SourceDictionary="odDeviceObjectdictionary" Index="u16ObjectIndexInclOffset" SubIndex="39">
						<Type>u16DataType</Type>
					</GetObjectDescription>
					<GotoOnFailure>HandleNotExistingSi39</GotoOnFailure>
				</TestStep>
				<TestStep>
					<Compare>
						<NotEqual>
							<Value1>u16DataType</Value1>
							<Value2>0</Value2>
							<GotoStep>CallSi39CheckEntryDescription</GotoStep>
						</NotEqual>
					</Compare>
					<Compare>
						<Equal>
							<Value1>u16DataType</Value1>
							<Value2>0</Value2>
							<WriteLine Id="61" Param0="u16ObjectIndexInclOffset" Level="Verbose">The optional/conditional entriy 0x{0:X4}.39is defined as a padding entry.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>u16DataType</Value1>
							<Value2>0</Value2>
							<GotoStep>EndSi39</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="HandleNotExistingSi39">
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Mailbox.CoE.CompleteAccess</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult" Param0="u16ObjectIndexInclOffset">Complete access supported, the optional/conditional entry 0x{0:X4}.39 shall be defined or set to padding.</SetVariable>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Mailbox.CoE.CompleteAccess</Value1>
							<Value2>true</Value2>
							<WriteLine Id="62" Param0="strResult" Level="Error">{0}</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Mailbox.CoE.CompleteAccess</Value1>
							<Value2>false</Value2>
							<WriteLine Id="63" Param0="u16ObjectIndexInclOffset" Level="Output">The optional/conditional entry 0x{0:X4}.39 is not defined.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>EndSi39</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CallSi39CheckEntryDescription">
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"online"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>39</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>null</Parameter>
						<Parameter>6</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>null</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>16</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>true</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="EndSi39"></TestStep>
				<TestStep Name="StartSi40">
					<Description Id="64" Level="Output">Start validate SubIndex40</Description>
					<WriteLine Id="65" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : Subindex '0x{0:X}.40'</WriteLine>
				</TestStep>
				<TestStep Name="SetSi40MandatoryIndication">
					<SetVariable Target="bObjectEntryIsMandatory">true</SetVariable>
					<WriteLine Id="66" Param0="u16ObjectIndexInclOffset" Level="Verbose">0x{0:X4}.40 'Master Control' shall be available</WriteLine>
				</TestStep>
				<TestStep Name="CallSi40CheckEntryDescription">
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"online"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>40</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>"Master Control"</Parameter>
						<Parameter>6</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>null</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>16</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>true</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="EndSi40"></TestStep>
				<TestStep Name="CheckReservedEntryRange_41_to_255">
					<Description Id="67" Level="Output">Start check reserved entry range 41 to 255</Description>
					<CallTestFunction Name="CheckReservedEntryRange">
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>41</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>odDeviceObjectdictionary</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CheckIfCompleteAccessIsSupported">
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Mailbox</Value1>
							<Value2>false</Value2>
							<GotoStep>ProfileLoopEnd</GotoStep>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Mailbox.CoE</Value1>
							<Value2>false</Value2>
							<GotoStep>ProfileLoopEnd</GotoStep>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Mailbox.CoE.CompleteAccess</Value1>
							<Value2>false</Value2>
							<GotoStep>ProfileLoopEnd</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep>
					<UploadCoEObject>
						<Index>u16ObjectIndexInclOffset</Index>
						<SubIndex>1</SubIndex>
						<DataVar>arrData</DataVar>
						<AbortCode>u32SdoAbort</AbortCode>
						<AbortMessage>strAbortMsg</AbortMessage>
						<CompleteAccess>True</CompleteAccess>
					</UploadCoEObject>
					<Compare>
						<NotEqual>
							<Value1>strAbortMsg</Value1>
							<Value2>EmptyString</Value2>
							<WriteLine Id="68" Param0="strAbortMsg" Level="Warning">Complete access should be supported (abort info '{0}')</WriteLine>
						</NotEqual>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>strAbortMsg</Value1>
							<Value2>EmptyString</Value2>
							<GotoStep>ProfileLoopEnd</GotoStep>
						</NotEqual>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>u32SdoAbort</Value1>
							<Value2>0</Value2>
							<WriteLine Id="69" Param0="u32SdoAbort" Level="Warning">Complete access should be supported (abort code 0x{0:X})</WriteLine>
						</NotEqual>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>u32SdoAbort</Value1>
							<Value2>0</Value2>
							<GotoStep>ProfileLoopEnd</GotoStep>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep>
					<DownloadCoEObject>
						<Index>u16ObjectIndexInclOffset</Index>
						<SubIndex>1</SubIndex>
						<DataVar>arrData</DataVar>
						<AbortCode>u32SdoAbort</AbortCode>
						<AbortMessage>strAbortMsg</AbortMessage>
						<CompleteAccess>True</CompleteAccess>
					</DownloadCoEObject>
					<Compare>
						<NotEqual>
							<Value1>strAbortMsg</Value1>
							<Value2>EmptyString</Value2>
							<WriteLine Id="70" Param0="strAbortMsg" Level="Warning">Complete access should be supported (abort info '{0}')</WriteLine>
						</NotEqual>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>strAbortMsg</Value1>
							<Value2>EmptyString</Value2>
							<GotoStep>ProfileLoopEnd</GotoStep>
						</NotEqual>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>u32SdoAbort</Value1>
							<Value2>0</Value2>
							<WriteLine Id="71" Param0="u32SdoAbort" Level="Warning">Complete access should be supported (abort code 0x{0:X})</WriteLine>
						</NotEqual>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>u32SdoAbort</Value1>
							<Value2>0</Value2>
							<GotoStep>ProfileLoopEnd</GotoStep>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep Name="ProfileLoopEnd">
					<Compare>
						<Equal>
							<Value1>bAtLeastOneModuleMatch</Value1>
							<Value2>false</Value2>
							<GotoStep>HandleAbortTestCaseOnFirstError</GotoStep>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>ProfileLoopIncrement</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="HandleAbortTestCaseOnFirstError">
					<Compare>
						<Equal>
							<Value1>bAbortTestCaseOnFirstError</Value1>
							<Value2>false</Value2>
							<GotoStep>ProfileLoopIncrement</GotoStep>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>strResult</Value1>
							<Value2>EmptyString</Value2>
							<GotoStep>ProfileLoopIncrement</GotoStep>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="72" Level="Output">Object verification for all following modules abort because an error was already detected for the current module.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>END</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="ProfileLoopIncrement">
					<SetVariable Target="u32ProfileCounter">u32ProfileCounter + 1</SetVariable>
					<Compare>
						<Greater>
							<Value1>u32CurrentProfilesLength</Value1>
							<Value2>u32ProfileCounter</Value2>
							<GotoStep>ProfileLoopStart</GotoStep>
						</Greater>
					</Compare>
				</TestStep>
				<TestStep Name="END">
					<Compare>
						<NotEqual>
							<Value1>bAtLeastOneModuleMatch</Value1>
							<Value2>true</Value2>
							<SkipCase Id="73">SKIP TEST</SkipCase>
						</NotEqual>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bDEBUG</Value1>
							<Value2>true</Value2>
							<WriteLine Id="74" Param0="strResult" Level="Verbose">DEBUG | Result : '{0}'.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>strResult</Value1>
							<Value2>EmptyString</Value2>
							<ReturnSuccess Id="75">Test succeed</ReturnSuccess>
						</Equal>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>strResult</Value1>
							<Value2>EmptyString</Value2>
							<RaiseError Id="76"></RaiseError>
						</NotEqual>
					</Compare>
				</TestStep>
			</TestCase>
			<TestCase Name="offline | 0x8001 (Serial number)" CaseId="3">
				<?MAX_OUTPUT_ID 27?>
				<Description>
					<PreCondition>- The device profile is 5001
- The module profile is 6220
- The submodule profile is 0</PreCondition>
					<Action>- Iterate over all offline defined modules/channels and if the PreCondition matches the following operations are done:
- Get the offline description of object 0x8001(+module specific offset) 'Serial number' and all entries
 Check:
    (Name)
    BitSize
    DataType
    Rx / Tx mappable
    Default Data
    MinData
    Flags       </Action>
					<PostCondition>Error if
- mandatory object / entry is not defined
- an optional object exists and the entries are invalid
- Object / entry description does not match with the specification</PostCondition>
					<ProposalForSolution>- Define the missing objects
- correct object / entry description</ProposalForSolution>
					<References>
						<Reference Specification="ETG.5001.6220"></Reference>
					</References>
					<Mandatory>true</Mandatory>
				</Description>
				<TestStep Name="InitResult">
					<SetVariable Target="strResult">EmptyString</SetVariable>
				</TestStep>
				<TestStep Name="CheckIfOfflineOdAvailable">
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Mailbox</Value1>
							<Value2>false</Value2>
							<SkipCase Id="0">DuT does not support mailbox.</SkipCase>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Mailbox.CoE</Value1>
							<Value2>false</Value2>
							<SkipCase Id="1">DuT does not support CoE.</SkipCase>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep>
					<GetObjectDictionary Target="odDeviceObjectdictionary">
						<DictionaryType>Offline</DictionaryType>
					</GetObjectDictionary>
					<SkipOnFailure Id="2">No offline object dictionary defined.</SkipOnFailure>
				</TestStep>
				<TestStep>
					<GetObjectList Count="u32Tmp" Target="odDeviceObjectdictionaryList" SourceDict="odDeviceObjectdictionary"></GetObjectList>
					<Compare>
						<Equal>
							<Value1>u32Tmp</Value1>
							<Value2>0</Value2>
							<SkipCase Id="3">No offline object dictionary defined.</SkipCase>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="InitAtLeastOneProfileMatch">
					<SetVariable Target="bAtLeastOneModuleMatch">false</SetVariable>
				</TestStep>
				<TestStep Name="GetCurrentProfileList">
					<CallTestFunction Name="GetCurrentProfileList">
						<Parameter>"offline"</Parameter>
						<Parameter>"SafeOP"</Parameter>
						<OutParameter>arrCurrentProfiles</OutParameter>
					</CallTestFunction>
				</TestStep>
				<TestStep Name="InitProfileLoopCounter">
					<SetVariable Target="u32ProfileCounter">0</SetVariable>
				</TestStep>
				<TestStep Name="GetProfileArrayLength">
					<SizeOf UInt32Var="u32CurrentProfilesLength">arrCurrentProfiles</SizeOf>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="4" Param0="u32CurrentProfilesLength" Level="Verbose">'{0}' Profile(s) defined offline.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>u32CurrentProfilesLength</Value1>
							<Value2>0</Value2>
							<SkipCase Id="5">Skip case | no profile defined.</SkipCase>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="ProfileLoopStart">
					<GetArrayItem SourceArray="arrCurrentProfiles" Target="strTmpString" Index="u32ProfileCounter"></GetArrayItem>
				</TestStep>
				<TestStep Name="CheckProfileInformationString">
					<Compare>
						<Equal>
							<Value1>strTmpString</Value1>
							<Value2>null</Value2>
							<RaiseError Id="6" Param0="u32ProfileCounter">Profile Info element [{0}] is null.</RaiseError>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>strTmpString</Value1>
							<Value2>EmptyString</Value2>
							<RaiseError Id="7" Param0="u32ProfileCounter">Profile Info element [{0}] is an empty string.</RaiseError>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="GetDeviceProfile">
					<CallTestFunction Name="GetDeviceProfile">
						<Parameter>strTmpString</Parameter>
						<OutParameter>uint16CurDeviceProfile</OutParameter>
					</CallTestFunction>
				</TestStep>
				<TestStep Name="GetModuleProfile">
					<CallTestFunction Name="GetModuleProfile">
						<Parameter>strTmpString</Parameter>
						<OutParameter>uint16CurModuleProfile</OutParameter>
					</CallTestFunction>
				</TestStep>
				<TestStep Name="GetSubModuleProfile">
					<CallTestFunction Name="GetSubModuleProfile">
						<Parameter>strTmpString</Parameter>
						<OutParameter>uint16CurSubModuleProfile</OutParameter>
					</CallTestFunction>
				</TestStep>
				<TestStep Name="DumpProfileInfo">
					<Description Id="8" Param0="uint16CurDeviceProfile" Param1="uint16CurModuleProfile" Param2="uint16CurSubModuleProfile" Param3="u32ProfileCounter" Level="Output">Module[{3}] : DeviceProfile '{0}' ; ModuleProfile '{1}' ; SubModuleProfile '{2}'</Description>
					<Compare>
						<Equal>
							<Value1>bIgnoreProfileID</Value1>
							<Value2>true</Value2>
							<GotoStep>IndicateThatAtleastOneModuleMatch</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CompareDeviceProfile">
					<Compare>
						<NotEqual>
							<Value1>uint16CurDeviceProfile</Value1>
							<Value2>5001</Value2>
							<WriteLine Id="9" Param0="uint16CurDeviceProfile" Level="Output">Skip Profile  (Test Device Profile '5001' != Cur Device Profile '{0}')</WriteLine>
						</NotEqual>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>uint16CurDeviceProfile</Value1>
							<Value2>5001</Value2>
							<GotoStep>ProfileLoopEnd</GotoStep>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep Name="CompareModuleProfile">
					<Compare>
						<NotEqual>
							<Value1>uint16CurModuleProfile</Value1>
							<Value2>6220</Value2>
							<WriteLine Id="10" Param0="uint16CurModuleProfile" Level="Output">Skip Profile  (Test Module Profile '6220' != Cur Module Profile '{0}')</WriteLine>
						</NotEqual>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>uint16CurModuleProfile</Value1>
							<Value2>6220</Value2>
							<GotoStep>ProfileLoopEnd</GotoStep>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep Name="CompareSubModuleProfile">
					<Compare>
						<NotEqual>
							<Value1>uint16CurSubModuleProfile</Value1>
							<Value2>0</Value2>
							<WriteLine Id="11" Param0="uint16CurSubModuleProfile" Level="Output">Skip Profile  (Test SubModule Profile '0' != Cur SubModule Profile '{0}')</WriteLine>
						</NotEqual>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>uint16CurSubModuleProfile</Value1>
							<Value2>0</Value2>
							<GotoStep>ProfileLoopEnd</GotoStep>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep Name="IndicateThatAtleastOneModuleMatch">
					<SetVariable Target="bAtLeastOneModuleMatch">true</SetVariable>
				</TestStep>
				<TestStep Name="GetObjectIndexInlcOffset">
					<SetVariable Target="u16ObjectIndexInclOffset">#x8001 + (u32ProfileCounter * #x10)</SetVariable>
					<WriteLine Id="12" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : ObjectIndex '0x{0:X}'</WriteLine>
				</TestStep>
				<TestStep Name="SetObjectMandatoryIndication">
					<SetVariable Target="bObjectEntryIsMandatory">false</SetVariable>
					<WriteLine Id="13" Param0="u16ObjectIndexInclOffset" Level="Verbose">0x{0:X4}.0 'Serial number' may be available</WriteLine>
				</TestStep>
				<TestStep Name="LoadDeviceObjectDictionary">
					<Description Id="14" Level="Verbose">VerifyObject : Load 'offline' object dictionary for testing.</Description>
					<GetObjectDictionary Target="odDeviceObjectdictionary">
						<DictionaryType>Offline</DictionaryType>
					</GetObjectDictionary>
					<RaiseErrorOnFailure Id="15">VerifyObject : failed to load offline object dictionary.</RaiseErrorOnFailure>
				</TestStep>
				<TestStep Name="CheckIfObjectExists">
					<GetObjectDescription SourceDictionary="odDeviceObjectdictionary" Index="u16ObjectIndexInclOffset" SubIndex="-1"></GetObjectDescription>
					<GotoOnSuccess>CallCheckObjectDescription</GotoOnSuccess>
				</TestStep>
				<TestStep Name="HandleNotExistingObject">
					<Compare>
						<Equal>
							<Value1>bObjectEntryIsMandatory</Value1>
							<Value2>true</Value2>
							<GotoStep>CallCheckObjectDescription</GotoStep>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="16" Param0="u16ObjectIndexInclOffset" Level="Output">The optional/conditional object 0x{0:X4} 'Serial number' does not exists.)</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>ProfileLoopEnd</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CallCheckObjectDescription">
					<Description Id="17" Param0="u16ObjectIndexInclOffset" Level="Output">Verify the object description 0x{0:X4} 'Serial number'.</Description>
					<CallTestFunction Name="CheckObjectDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"offline"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>"Serial number"</Parameter>
						<Parameter>null</Parameter>
						<Parameter>7</Parameter>
						<Parameter>-1</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<GotoStep>ProfileLoopEnd</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="InitEntryBittOffset">
					<SetVariable Target="i32CurrentBitOffset">0</SetVariable>
				</TestStep>
				<TestStep Name="StartSi0">
					<Description Id="18" Level="Output">Start validate SubIndex0</Description>
					<WriteLine Id="19" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : Subindex '0x{0:X}.0'</WriteLine>
				</TestStep>
				<TestStep Name="SetSi0MandatoryIndication">
					<SetVariable Target="bObjectEntryIsMandatory">false</SetVariable>
					<WriteLine Id="20" Param0="u16ObjectIndexInclOffset" Level="Verbose">0x{0:X4}.0 'Serial number' may be available</WriteLine>
				</TestStep>
				<TestStep Name="CheckIfSi0Exists">
					<GetObjectDescription SourceDictionary="odDeviceObjectdictionary" Index="u16ObjectIndexInclOffset" SubIndex="0">
						<Type>u16DataType</Type>
					</GetObjectDescription>
					<GotoOnFailure>HandleNotExistingSi0</GotoOnFailure>
				</TestStep>
				<TestStep>
					<Compare>
						<NotEqual>
							<Value1>u16DataType</Value1>
							<Value2>0</Value2>
							<GotoStep>CallSi0CheckEntryDescription</GotoStep>
						</NotEqual>
					</Compare>
					<Compare>
						<Equal>
							<Value1>u16DataType</Value1>
							<Value2>0</Value2>
							<WriteLine Id="21" Param0="u16ObjectIndexInclOffset" Level="Verbose">The optional/conditional entriy 0x{0:X4}.0is defined as a padding entry.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>u16DataType</Value1>
							<Value2>0</Value2>
							<GotoStep>EndSi0</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="HandleNotExistingSi0">
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="22" Param0="u16ObjectIndexInclOffset" Level="Output">The optional/conditional entry 0x{0:X4}.0 is not defined.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>EndSi0</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CallSi0CheckEntryDescription">
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"offline"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>0</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>"Serial number"</Parameter>
						<Parameter>9</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>null</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>i32CurrentBitOffset</Parameter>
						<Parameter>true</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="EndSi0">
					<SetVariable Target="i32CurrentBitOffset">-1</SetVariable>
				</TestStep>
				<TestStep Name="ProfileLoopEnd">
					<Compare>
						<Equal>
							<Value1>bAtLeastOneModuleMatch</Value1>
							<Value2>false</Value2>
							<GotoStep>HandleAbortTestCaseOnFirstError</GotoStep>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>ProfileLoopIncrement</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="HandleAbortTestCaseOnFirstError">
					<Compare>
						<Equal>
							<Value1>bAbortTestCaseOnFirstError</Value1>
							<Value2>false</Value2>
							<GotoStep>ProfileLoopIncrement</GotoStep>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>strResult</Value1>
							<Value2>EmptyString</Value2>
							<GotoStep>ProfileLoopIncrement</GotoStep>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="23" Level="Output">Object verification for all following modules abort because an error was already detected for the current module.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>END</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="ProfileLoopIncrement">
					<SetVariable Target="u32ProfileCounter">u32ProfileCounter + 1</SetVariable>
					<Compare>
						<Greater>
							<Value1>u32CurrentProfilesLength</Value1>
							<Value2>u32ProfileCounter</Value2>
							<GotoStep>ProfileLoopStart</GotoStep>
						</Greater>
					</Compare>
				</TestStep>
				<TestStep Name="END">
					<Compare>
						<NotEqual>
							<Value1>bAtLeastOneModuleMatch</Value1>
							<Value2>true</Value2>
							<SkipCase Id="24">SKIP TEST</SkipCase>
						</NotEqual>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bDEBUG</Value1>
							<Value2>true</Value2>
							<WriteLine Id="25" Param0="strResult" Level="Verbose">DEBUG | Result : '{0}'.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>strResult</Value1>
							<Value2>EmptyString</Value2>
							<ReturnSuccess Id="26">Test succeed</ReturnSuccess>
						</Equal>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>strResult</Value1>
							<Value2>EmptyString</Value2>
							<RaiseError Id="27"></RaiseError>
						</NotEqual>
					</Compare>
				</TestStep>
			</TestCase>
			<TestCase Name="online | 0x8001 (Serial number)" CaseId="4">
				<?MAX_OUTPUT_ID 23?>
				<Description>
					<PreCondition>- The device profile is 5001
- The module profile is 6220
- The submodule profile is 0</PreCondition>
					<Action>- Iterate over all online defined modules/channels and if the PreCondition matches the following operations are done:
- Get the online description of object 0x8001(+module specific offset) 'Serial number' and all entries
 Check:
    (Name)
    BitSize
    DataType
    Rx / Tx mappable
    Default Data
    MinData
    Flags       </Action>
					<PostCondition>Error if
- mandatory object / entry is not defined
- an optional object exists and the entries are invalid
- Object / entry description does not match with the specification</PostCondition>
					<ProposalForSolution>- Define the missing objects
- correct object / entry description</ProposalForSolution>
					<References>
						<Reference Specification="ETG.5001.6220"></Reference>
					</References>
					<Mandatory>true</Mandatory>
				</Description>
				<TestStep Name="InitResult">
					<SetVariable Target="strResult">EmptyString</SetVariable>
				</TestStep>
				<TestStep Name="InitAtLeastOneProfileMatch">
					<SetVariable Target="bAtLeastOneModuleMatch">false</SetVariable>
				</TestStep>
				<TestStep Name="GetCurrentProfileList">
					<CallTestFunction Name="GetCurrentProfileList">
						<Parameter>"online"</Parameter>
						<Parameter>"SafeOP"</Parameter>
						<OutParameter>arrCurrentProfiles</OutParameter>
					</CallTestFunction>
				</TestStep>
				<TestStep Name="InitProfileLoopCounter">
					<SetVariable Target="u32ProfileCounter">0</SetVariable>
				</TestStep>
				<TestStep Name="GetProfileArrayLength">
					<SizeOf UInt32Var="u32CurrentProfilesLength">arrCurrentProfiles</SizeOf>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="0" Param0="u32CurrentProfilesLength" Level="Verbose">'{0}' Profile(s) defined online.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>u32CurrentProfilesLength</Value1>
							<Value2>0</Value2>
							<SkipCase Id="1">Skip case | no profile defined.</SkipCase>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="ProfileLoopStart">
					<GetArrayItem SourceArray="arrCurrentProfiles" Target="strTmpString" Index="u32ProfileCounter"></GetArrayItem>
				</TestStep>
				<TestStep Name="CheckProfileInformationString">
					<Compare>
						<Equal>
							<Value1>strTmpString</Value1>
							<Value2>null</Value2>
							<RaiseError Id="2" Param0="u32ProfileCounter">Profile Info element [{0}] is null.</RaiseError>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>strTmpString</Value1>
							<Value2>EmptyString</Value2>
							<RaiseError Id="3" Param0="u32ProfileCounter">Profile Info element [{0}] is an empty string.</RaiseError>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="GetDeviceProfile">
					<CallTestFunction Name="GetDeviceProfile">
						<Parameter>strTmpString</Parameter>
						<OutParameter>uint16CurDeviceProfile</OutParameter>
					</CallTestFunction>
				</TestStep>
				<TestStep Name="GetModuleProfile">
					<CallTestFunction Name="GetModuleProfile">
						<Parameter>strTmpString</Parameter>
						<OutParameter>uint16CurModuleProfile</OutParameter>
					</CallTestFunction>
				</TestStep>
				<TestStep Name="GetSubModuleProfile">
					<CallTestFunction Name="GetSubModuleProfile">
						<Parameter>strTmpString</Parameter>
						<OutParameter>uint16CurSubModuleProfile</OutParameter>
					</CallTestFunction>
				</TestStep>
				<TestStep Name="DumpProfileInfo">
					<Description Id="4" Param0="uint16CurDeviceProfile" Param1="uint16CurModuleProfile" Param2="uint16CurSubModuleProfile" Param3="u32ProfileCounter" Level="Output">Module[{3}] : DeviceProfile '{0}' ; ModuleProfile '{1}' ; SubModuleProfile '{2}'</Description>
					<Compare>
						<Equal>
							<Value1>bIgnoreProfileID</Value1>
							<Value2>true</Value2>
							<GotoStep>IndicateThatAtleastOneModuleMatch</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CompareDeviceProfile">
					<Compare>
						<NotEqual>
							<Value1>uint16CurDeviceProfile</Value1>
							<Value2>5001</Value2>
							<WriteLine Id="5" Param0="uint16CurDeviceProfile" Level="Output">Skip Profile  (Test Device Profile '5001' != Cur Device Profile '{0}')</WriteLine>
						</NotEqual>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>uint16CurDeviceProfile</Value1>
							<Value2>5001</Value2>
							<GotoStep>ProfileLoopEnd</GotoStep>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep Name="CompareModuleProfile">
					<Compare>
						<NotEqual>
							<Value1>uint16CurModuleProfile</Value1>
							<Value2>6220</Value2>
							<WriteLine Id="6" Param0="uint16CurModuleProfile" Level="Output">Skip Profile  (Test Module Profile '6220' != Cur Module Profile '{0}')</WriteLine>
						</NotEqual>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>uint16CurModuleProfile</Value1>
							<Value2>6220</Value2>
							<GotoStep>ProfileLoopEnd</GotoStep>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep Name="CompareSubModuleProfile">
					<Compare>
						<NotEqual>
							<Value1>uint16CurSubModuleProfile</Value1>
							<Value2>0</Value2>
							<WriteLine Id="7" Param0="uint16CurSubModuleProfile" Level="Output">Skip Profile  (Test SubModule Profile '0' != Cur SubModule Profile '{0}')</WriteLine>
						</NotEqual>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>uint16CurSubModuleProfile</Value1>
							<Value2>0</Value2>
							<GotoStep>ProfileLoopEnd</GotoStep>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep Name="IndicateThatAtleastOneModuleMatch">
					<SetVariable Target="bAtLeastOneModuleMatch">true</SetVariable>
				</TestStep>
				<TestStep Name="GetObjectIndexInlcOffset">
					<SetVariable Target="u16ObjectIndexInclOffset">#x8001 + (u32ProfileCounter * #x10)</SetVariable>
					<WriteLine Id="8" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : ObjectIndex '0x{0:X}'</WriteLine>
				</TestStep>
				<TestStep Name="SetObjectMandatoryIndication">
					<SetVariable Target="bObjectEntryIsMandatory">false</SetVariable>
					<WriteLine Id="9" Param0="u16ObjectIndexInclOffset" Level="Verbose">0x{0:X4}.0 'Serial number' may be available</WriteLine>
				</TestStep>
				<TestStep Name="LoadDeviceObjectDictionary">
					<Description Id="10" Level="Verbose">VerifyObject : Load 'online' object dictionary for testing.</Description>
					<GetObjectDictionary Target="odDeviceObjectdictionary">
						<DictionaryType>Online</DictionaryType>
					</GetObjectDictionary>
					<RaiseErrorOnFailure Id="11">VerifyObject : failed to load online object dictionary.</RaiseErrorOnFailure>
				</TestStep>
				<TestStep Name="CheckIfObjectExists">
					<GetObjectDescription SourceDictionary="odDeviceObjectdictionary" Index="u16ObjectIndexInclOffset" SubIndex="-1"></GetObjectDescription>
					<GotoOnSuccess>CallCheckObjectDescription</GotoOnSuccess>
				</TestStep>
				<TestStep Name="HandleNotExistingObject">
					<Compare>
						<Equal>
							<Value1>bObjectEntryIsMandatory</Value1>
							<Value2>true</Value2>
							<GotoStep>CallCheckObjectDescription</GotoStep>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="12" Param0="u16ObjectIndexInclOffset" Level="Output">The optional/conditional object 0x{0:X4} 'Serial number' does not exists.)</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>ProfileLoopEnd</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CallCheckObjectDescription">
					<Description Id="13" Param0="u16ObjectIndexInclOffset" Level="Output">Verify the object description 0x{0:X4} 'Serial number'.</Description>
					<CallTestFunction Name="CheckObjectDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"online"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>"Serial number"</Parameter>
						<Parameter>null</Parameter>
						<Parameter>7</Parameter>
						<Parameter>-1</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<GotoStep>ProfileLoopEnd</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="InitEntryBittOffset">
					<SetVariable Target="i32CurrentBitOffset">0</SetVariable>
				</TestStep>
				<TestStep Name="StartSi0">
					<Description Id="14" Level="Output">Start validate SubIndex0</Description>
					<WriteLine Id="15" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : Subindex '0x{0:X}.0'</WriteLine>
				</TestStep>
				<TestStep Name="SetSi0MandatoryIndication">
					<SetVariable Target="bObjectEntryIsMandatory">false</SetVariable>
					<WriteLine Id="16" Param0="u16ObjectIndexInclOffset" Level="Verbose">0x{0:X4}.0 'Serial number' may be available</WriteLine>
				</TestStep>
				<TestStep Name="CheckIfSi0Exists">
					<GetObjectDescription SourceDictionary="odDeviceObjectdictionary" Index="u16ObjectIndexInclOffset" SubIndex="0">
						<Type>u16DataType</Type>
					</GetObjectDescription>
					<GotoOnFailure>HandleNotExistingSi0</GotoOnFailure>
				</TestStep>
				<TestStep>
					<Compare>
						<NotEqual>
							<Value1>u16DataType</Value1>
							<Value2>0</Value2>
							<GotoStep>CallSi0CheckEntryDescription</GotoStep>
						</NotEqual>
					</Compare>
					<Compare>
						<Equal>
							<Value1>u16DataType</Value1>
							<Value2>0</Value2>
							<WriteLine Id="17" Param0="u16ObjectIndexInclOffset" Level="Verbose">The optional/conditional entriy 0x{0:X4}.0is defined as a padding entry.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>u16DataType</Value1>
							<Value2>0</Value2>
							<GotoStep>EndSi0</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="HandleNotExistingSi0">
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="18" Param0="u16ObjectIndexInclOffset" Level="Output">The optional/conditional entry 0x{0:X4}.0 is not defined.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>EndSi0</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CallSi0CheckEntryDescription">
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"online"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>0</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>"Serial number"</Parameter>
						<Parameter>9</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>null</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>i32CurrentBitOffset</Parameter>
						<Parameter>true</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="EndSi0">
					<SetVariable Target="i32CurrentBitOffset">-1</SetVariable>
				</TestStep>
				<TestStep Name="ProfileLoopEnd">
					<Compare>
						<Equal>
							<Value1>bAtLeastOneModuleMatch</Value1>
							<Value2>false</Value2>
							<GotoStep>HandleAbortTestCaseOnFirstError</GotoStep>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>ProfileLoopIncrement</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="HandleAbortTestCaseOnFirstError">
					<Compare>
						<Equal>
							<Value1>bAbortTestCaseOnFirstError</Value1>
							<Value2>false</Value2>
							<GotoStep>ProfileLoopIncrement</GotoStep>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>strResult</Value1>
							<Value2>EmptyString</Value2>
							<GotoStep>ProfileLoopIncrement</GotoStep>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="19" Level="Output">Object verification for all following modules abort because an error was already detected for the current module.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>END</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="ProfileLoopIncrement">
					<SetVariable Target="u32ProfileCounter">u32ProfileCounter + 1</SetVariable>
					<Compare>
						<Greater>
							<Value1>u32CurrentProfilesLength</Value1>
							<Value2>u32ProfileCounter</Value2>
							<GotoStep>ProfileLoopStart</GotoStep>
						</Greater>
					</Compare>
				</TestStep>
				<TestStep Name="END">
					<Compare>
						<NotEqual>
							<Value1>bAtLeastOneModuleMatch</Value1>
							<Value2>true</Value2>
							<SkipCase Id="20">SKIP TEST</SkipCase>
						</NotEqual>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bDEBUG</Value1>
							<Value2>true</Value2>
							<WriteLine Id="21" Param0="strResult" Level="Verbose">DEBUG | Result : '{0}'.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>strResult</Value1>
							<Value2>EmptyString</Value2>
							<ReturnSuccess Id="22">Test succeed</ReturnSuccess>
						</Equal>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>strResult</Value1>
							<Value2>EmptyString</Value2>
							<RaiseError Id="23"></RaiseError>
						</NotEqual>
					</Compare>
				</TestStep>
			</TestCase>
			<TestCase Name="offline | 0x8002 to 0x8007 (reserved range)" CaseId="5">
				<?MAX_OUTPUT_ID 21?>
				<Description>
					<PreCondition>- The device profile is 5001
- The module profile is 6220
- The submodule profile is 0</PreCondition>
					<Action>- Iterate over all offline defined modules/channels and if the PreCondition matches the check if one object in the reserved range is defined</Action>
					<PostCondition>- Error if at least one object is defined</PostCondition>
					<ProposalForSolution>- Remove the defined objects
</ProposalForSolution>
					<References>
						<Reference Specification="ETG.5001.6220"></Reference>
					</References>
					<Mandatory>true</Mandatory>
				</Description>
				<TestStep Name="InitResult">
					<SetVariable Target="strResult">EmptyString</SetVariable>
				</TestStep>
				<TestStep Name="CheckIfOfflineOdAvailable">
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Mailbox</Value1>
							<Value2>false</Value2>
							<SkipCase Id="0">DuT does not support mailbox.</SkipCase>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Mailbox.CoE</Value1>
							<Value2>false</Value2>
							<SkipCase Id="1">DuT does not support CoE.</SkipCase>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep>
					<GetObjectDictionary Target="odDeviceObjectdictionary">
						<DictionaryType>Offline</DictionaryType>
					</GetObjectDictionary>
					<SkipOnFailure Id="2">No offline object dictionary defined.</SkipOnFailure>
				</TestStep>
				<TestStep>
					<GetObjectList Count="u32Tmp" Target="odDeviceObjectdictionaryList" SourceDict="odDeviceObjectdictionary"></GetObjectList>
					<Compare>
						<Equal>
							<Value1>u32Tmp</Value1>
							<Value2>0</Value2>
							<SkipCase Id="3">No offline object dictionary defined.</SkipCase>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="InitAtLeastOneProfileMatch">
					<SetVariable Target="bAtLeastOneModuleMatch">false</SetVariable>
				</TestStep>
				<TestStep Name="GetCurrentProfileList">
					<CallTestFunction Name="GetCurrentProfileList">
						<Parameter>"offline"</Parameter>
						<Parameter>"SafeOP"</Parameter>
						<OutParameter>arrCurrentProfiles</OutParameter>
					</CallTestFunction>
				</TestStep>
				<TestStep Name="InitProfileLoopCounter">
					<SetVariable Target="u32ProfileCounter">0</SetVariable>
				</TestStep>
				<TestStep Name="GetProfileArrayLength">
					<SizeOf UInt32Var="u32CurrentProfilesLength">arrCurrentProfiles</SizeOf>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="4" Param0="u32CurrentProfilesLength" Level="Verbose">'{0}' Profile(s) defined offline.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>u32CurrentProfilesLength</Value1>
							<Value2>0</Value2>
							<SkipCase Id="5">Skip case | no profile defined.</SkipCase>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="ProfileLoopStart">
					<GetArrayItem SourceArray="arrCurrentProfiles" Target="strTmpString" Index="u32ProfileCounter"></GetArrayItem>
				</TestStep>
				<TestStep Name="CheckProfileInformationString">
					<Compare>
						<Equal>
							<Value1>strTmpString</Value1>
							<Value2>null</Value2>
							<RaiseError Id="6" Param0="u32ProfileCounter">Profile Info element [{0}] is null.</RaiseError>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>strTmpString</Value1>
							<Value2>EmptyString</Value2>
							<RaiseError Id="7" Param0="u32ProfileCounter">Profile Info element [{0}] is an empty string.</RaiseError>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="GetDeviceProfile">
					<CallTestFunction Name="GetDeviceProfile">
						<Parameter>strTmpString</Parameter>
						<OutParameter>uint16CurDeviceProfile</OutParameter>
					</CallTestFunction>
				</TestStep>
				<TestStep Name="GetModuleProfile">
					<CallTestFunction Name="GetModuleProfile">
						<Parameter>strTmpString</Parameter>
						<OutParameter>uint16CurModuleProfile</OutParameter>
					</CallTestFunction>
				</TestStep>
				<TestStep Name="GetSubModuleProfile">
					<CallTestFunction Name="GetSubModuleProfile">
						<Parameter>strTmpString</Parameter>
						<OutParameter>uint16CurSubModuleProfile</OutParameter>
					</CallTestFunction>
				</TestStep>
				<TestStep Name="DumpProfileInfo">
					<Description Id="8" Param0="uint16CurDeviceProfile" Param1="uint16CurModuleProfile" Param2="uint16CurSubModuleProfile" Param3="u32ProfileCounter" Level="Output">Module[{3}] : DeviceProfile '{0}' ; ModuleProfile '{1}' ; SubModuleProfile '{2}'</Description>
					<Compare>
						<Equal>
							<Value1>bIgnoreProfileID</Value1>
							<Value2>true</Value2>
							<GotoStep>IndicateThatAtleastOneModuleMatch</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CompareDeviceProfile">
					<Compare>
						<NotEqual>
							<Value1>uint16CurDeviceProfile</Value1>
							<Value2>5001</Value2>
							<WriteLine Id="9" Param0="uint16CurDeviceProfile" Level="Output">Skip Profile  (Test Device Profile '5001' != Cur Device Profile '{0}')</WriteLine>
						</NotEqual>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>uint16CurDeviceProfile</Value1>
							<Value2>5001</Value2>
							<GotoStep>ProfileLoopEnd</GotoStep>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep Name="CompareModuleProfile">
					<Compare>
						<NotEqual>
							<Value1>uint16CurModuleProfile</Value1>
							<Value2>6220</Value2>
							<WriteLine Id="10" Param0="uint16CurModuleProfile" Level="Output">Skip Profile  (Test Module Profile '6220' != Cur Module Profile '{0}')</WriteLine>
						</NotEqual>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>uint16CurModuleProfile</Value1>
							<Value2>6220</Value2>
							<GotoStep>ProfileLoopEnd</GotoStep>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep Name="CompareSubModuleProfile">
					<Compare>
						<NotEqual>
							<Value1>uint16CurSubModuleProfile</Value1>
							<Value2>0</Value2>
							<WriteLine Id="11" Param0="uint16CurSubModuleProfile" Level="Output">Skip Profile  (Test SubModule Profile '0' != Cur SubModule Profile '{0}')</WriteLine>
						</NotEqual>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>uint16CurSubModuleProfile</Value1>
							<Value2>0</Value2>
							<GotoStep>ProfileLoopEnd</GotoStep>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep Name="IndicateThatAtleastOneModuleMatch">
					<SetVariable Target="bAtLeastOneModuleMatch">true</SetVariable>
				</TestStep>
				<TestStep Name="GetFirstReservedObjectIndexInlcOffset">
					<SetVariable Target="u16ObjectIndexInclOffset">#x8002 + (u32ProfileCounter * #x10)</SetVariable>
					<WriteLine Id="12" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : First reserved object index '0x{0:X}'</WriteLine>
				</TestStep>
				<TestStep Name="GetNextDefinedObjectIndexInlcOffset">
					<SetVariable Target="u16NextDefObjectIndexInclOffset">#x8008 + (u32ProfileCounter * #x0010)</SetVariable>
					<WriteLine Id="13" Param0="u16NextDefObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : Next defined object index '0x{0:X}'</WriteLine>
				</TestStep>
				<TestStep Name="LoadDeviceObjectDictionary">
					<Description Id="14" Level="Verbose">VerifyObject : Load 'offline' object dictionary for testing.</Description>
					<GetObjectDictionary Target="odDeviceObjectdictionary">
						<DictionaryType>Offline</DictionaryType>
					</GetObjectDictionary>
					<RaiseErrorOnFailure Id="15">VerifyObject : failed to load offline object dictionary.</RaiseErrorOnFailure>
				</TestStep>
				<TestStep Name="CallCheckReservedObjectRange">
					<Description Id="16" Level="Verbose">VerifyObject : Load 'offline' object dictionary for testing.</Description>
					<CallTestFunction Name="CheckReservedObjectRange">
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>u16NextDefObjectIndexInclOffset</Parameter>
						<Parameter>odDeviceObjectdictionary</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<GotoStep>ProfileLoopEnd</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="ProfileLoopEnd">
					<Compare>
						<Equal>
							<Value1>bAtLeastOneModuleMatch</Value1>
							<Value2>false</Value2>
							<GotoStep>HandleAbortTestCaseOnFirstError</GotoStep>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>ProfileLoopIncrement</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="HandleAbortTestCaseOnFirstError">
					<Compare>
						<Equal>
							<Value1>bAbortTestCaseOnFirstError</Value1>
							<Value2>false</Value2>
							<GotoStep>ProfileLoopIncrement</GotoStep>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>strResult</Value1>
							<Value2>EmptyString</Value2>
							<GotoStep>ProfileLoopIncrement</GotoStep>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="17" Level="Output">Object verification for all following modules abort because an error was already detected for the current module.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>END</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="ProfileLoopIncrement">
					<SetVariable Target="u32ProfileCounter">u32ProfileCounter + 1</SetVariable>
					<Compare>
						<Greater>
							<Value1>u32CurrentProfilesLength</Value1>
							<Value2>u32ProfileCounter</Value2>
							<GotoStep>ProfileLoopStart</GotoStep>
						</Greater>
					</Compare>
				</TestStep>
				<TestStep Name="END">
					<Compare>
						<NotEqual>
							<Value1>bAtLeastOneModuleMatch</Value1>
							<Value2>true</Value2>
							<SkipCase Id="18">SKIP TEST</SkipCase>
						</NotEqual>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bDEBUG</Value1>
							<Value2>true</Value2>
							<WriteLine Id="19" Param0="strResult" Level="Verbose">DEBUG | Result : '{0}'.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>strResult</Value1>
							<Value2>EmptyString</Value2>
							<ReturnSuccess Id="20">Test succeed</ReturnSuccess>
						</Equal>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>strResult</Value1>
							<Value2>EmptyString</Value2>
							<RaiseError Id="21"></RaiseError>
						</NotEqual>
					</Compare>
				</TestStep>
			</TestCase>
			<TestCase Name="online | 0x8002 to 0x8007 (reserved range)" CaseId="6">
				<?MAX_OUTPUT_ID 17?>
				<Description>
					<PreCondition>- The device profile is 5001
- The module profile is 6220
- The submodule profile is 0</PreCondition>
					<Action>- Iterate over all online defined modules/channels and if the PreCondition matches the check if one object in the reserved range is defined</Action>
					<PostCondition>- Error if at least one object is defined</PostCondition>
					<ProposalForSolution>- Remove the defined objects
</ProposalForSolution>
					<References>
						<Reference Specification="ETG.5001.6220"></Reference>
					</References>
					<Mandatory>true</Mandatory>
				</Description>
				<TestStep Name="InitResult">
					<SetVariable Target="strResult">EmptyString</SetVariable>
				</TestStep>
				<TestStep Name="InitAtLeastOneProfileMatch">
					<SetVariable Target="bAtLeastOneModuleMatch">false</SetVariable>
				</TestStep>
				<TestStep Name="GetCurrentProfileList">
					<CallTestFunction Name="GetCurrentProfileList">
						<Parameter>"online"</Parameter>
						<Parameter>"SafeOP"</Parameter>
						<OutParameter>arrCurrentProfiles</OutParameter>
					</CallTestFunction>
				</TestStep>
				<TestStep Name="InitProfileLoopCounter">
					<SetVariable Target="u32ProfileCounter">0</SetVariable>
				</TestStep>
				<TestStep Name="GetProfileArrayLength">
					<SizeOf UInt32Var="u32CurrentProfilesLength">arrCurrentProfiles</SizeOf>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="0" Param0="u32CurrentProfilesLength" Level="Verbose">'{0}' Profile(s) defined online.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>u32CurrentProfilesLength</Value1>
							<Value2>0</Value2>
							<SkipCase Id="1">Skip case | no profile defined.</SkipCase>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="ProfileLoopStart">
					<GetArrayItem SourceArray="arrCurrentProfiles" Target="strTmpString" Index="u32ProfileCounter"></GetArrayItem>
				</TestStep>
				<TestStep Name="CheckProfileInformationString">
					<Compare>
						<Equal>
							<Value1>strTmpString</Value1>
							<Value2>null</Value2>
							<RaiseError Id="2" Param0="u32ProfileCounter">Profile Info element [{0}] is null.</RaiseError>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>strTmpString</Value1>
							<Value2>EmptyString</Value2>
							<RaiseError Id="3" Param0="u32ProfileCounter">Profile Info element [{0}] is an empty string.</RaiseError>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="GetDeviceProfile">
					<CallTestFunction Name="GetDeviceProfile">
						<Parameter>strTmpString</Parameter>
						<OutParameter>uint16CurDeviceProfile</OutParameter>
					</CallTestFunction>
				</TestStep>
				<TestStep Name="GetModuleProfile">
					<CallTestFunction Name="GetModuleProfile">
						<Parameter>strTmpString</Parameter>
						<OutParameter>uint16CurModuleProfile</OutParameter>
					</CallTestFunction>
				</TestStep>
				<TestStep Name="GetSubModuleProfile">
					<CallTestFunction Name="GetSubModuleProfile">
						<Parameter>strTmpString</Parameter>
						<OutParameter>uint16CurSubModuleProfile</OutParameter>
					</CallTestFunction>
				</TestStep>
				<TestStep Name="DumpProfileInfo">
					<Description Id="4" Param0="uint16CurDeviceProfile" Param1="uint16CurModuleProfile" Param2="uint16CurSubModuleProfile" Param3="u32ProfileCounter" Level="Output">Module[{3}] : DeviceProfile '{0}' ; ModuleProfile '{1}' ; SubModuleProfile '{2}'</Description>
					<Compare>
						<Equal>
							<Value1>bIgnoreProfileID</Value1>
							<Value2>true</Value2>
							<GotoStep>IndicateThatAtleastOneModuleMatch</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CompareDeviceProfile">
					<Compare>
						<NotEqual>
							<Value1>uint16CurDeviceProfile</Value1>
							<Value2>5001</Value2>
							<WriteLine Id="5" Param0="uint16CurDeviceProfile" Level="Output">Skip Profile  (Test Device Profile '5001' != Cur Device Profile '{0}')</WriteLine>
						</NotEqual>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>uint16CurDeviceProfile</Value1>
							<Value2>5001</Value2>
							<GotoStep>ProfileLoopEnd</GotoStep>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep Name="CompareModuleProfile">
					<Compare>
						<NotEqual>
							<Value1>uint16CurModuleProfile</Value1>
							<Value2>6220</Value2>
							<WriteLine Id="6" Param0="uint16CurModuleProfile" Level="Output">Skip Profile  (Test Module Profile '6220' != Cur Module Profile '{0}')</WriteLine>
						</NotEqual>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>uint16CurModuleProfile</Value1>
							<Value2>6220</Value2>
							<GotoStep>ProfileLoopEnd</GotoStep>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep Name="CompareSubModuleProfile">
					<Compare>
						<NotEqual>
							<Value1>uint16CurSubModuleProfile</Value1>
							<Value2>0</Value2>
							<WriteLine Id="7" Param0="uint16CurSubModuleProfile" Level="Output">Skip Profile  (Test SubModule Profile '0' != Cur SubModule Profile '{0}')</WriteLine>
						</NotEqual>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>uint16CurSubModuleProfile</Value1>
							<Value2>0</Value2>
							<GotoStep>ProfileLoopEnd</GotoStep>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep Name="IndicateThatAtleastOneModuleMatch">
					<SetVariable Target="bAtLeastOneModuleMatch">true</SetVariable>
				</TestStep>
				<TestStep Name="GetFirstReservedObjectIndexInlcOffset">
					<SetVariable Target="u16ObjectIndexInclOffset">#x8002 + (u32ProfileCounter * #x10)</SetVariable>
					<WriteLine Id="8" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : First reserved object index '0x{0:X}'</WriteLine>
				</TestStep>
				<TestStep Name="GetNextDefinedObjectIndexInlcOffset">
					<SetVariable Target="u16NextDefObjectIndexInclOffset">#x8008 + (u32ProfileCounter * #x0010)</SetVariable>
					<WriteLine Id="9" Param0="u16NextDefObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : Next defined object index '0x{0:X}'</WriteLine>
				</TestStep>
				<TestStep Name="LoadDeviceObjectDictionary">
					<Description Id="10" Level="Verbose">VerifyObject : Load 'online' object dictionary for testing.</Description>
					<GetObjectDictionary Target="odDeviceObjectdictionary">
						<DictionaryType>Online</DictionaryType>
					</GetObjectDictionary>
					<RaiseErrorOnFailure Id="11">VerifyObject : failed to load online object dictionary.</RaiseErrorOnFailure>
				</TestStep>
				<TestStep Name="CallCheckReservedObjectRange">
					<Description Id="12" Level="Verbose">VerifyObject : Load 'online' object dictionary for testing.</Description>
					<CallTestFunction Name="CheckReservedObjectRange">
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>u16NextDefObjectIndexInclOffset</Parameter>
						<Parameter>odDeviceObjectdictionary</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<GotoStep>ProfileLoopEnd</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="ProfileLoopEnd">
					<Compare>
						<Equal>
							<Value1>bAtLeastOneModuleMatch</Value1>
							<Value2>false</Value2>
							<GotoStep>HandleAbortTestCaseOnFirstError</GotoStep>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>ProfileLoopIncrement</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="HandleAbortTestCaseOnFirstError">
					<Compare>
						<Equal>
							<Value1>bAbortTestCaseOnFirstError</Value1>
							<Value2>false</Value2>
							<GotoStep>ProfileLoopIncrement</GotoStep>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>strResult</Value1>
							<Value2>EmptyString</Value2>
							<GotoStep>ProfileLoopIncrement</GotoStep>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="13" Level="Output">Object verification for all following modules abort because an error was already detected for the current module.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>END</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="ProfileLoopIncrement">
					<SetVariable Target="u32ProfileCounter">u32ProfileCounter + 1</SetVariable>
					<Compare>
						<Greater>
							<Value1>u32CurrentProfilesLength</Value1>
							<Value2>u32ProfileCounter</Value2>
							<GotoStep>ProfileLoopStart</GotoStep>
						</Greater>
					</Compare>
				</TestStep>
				<TestStep Name="END">
					<Compare>
						<NotEqual>
							<Value1>bAtLeastOneModuleMatch</Value1>
							<Value2>true</Value2>
							<SkipCase Id="14">SKIP TEST</SkipCase>
						</NotEqual>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bDEBUG</Value1>
							<Value2>true</Value2>
							<WriteLine Id="15" Param0="strResult" Level="Verbose">DEBUG | Result : '{0}'.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>strResult</Value1>
							<Value2>EmptyString</Value2>
							<ReturnSuccess Id="16">Test succeed</ReturnSuccess>
						</Equal>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>strResult</Value1>
							<Value2>EmptyString</Value2>
							<RaiseError Id="17"></RaiseError>
						</NotEqual>
					</Compare>
				</TestStep>
			</TestCase>
		</TestGroup>
		<TestGroup Name="Verify objects 0x9nn0 - 0x9nn7 (Information Data of the Module)" GroupId="2">
			<TestCase Name="offline | 0x9000 (Information Data)" CaseId="1">
				<?MAX_OUTPUT_ID 68?>
				<Description>
					<PreCondition>- The device profile is 5001
- The module profile is 6220
- The submodule profile is 0</PreCondition>
					<Action>- Iterate over all offline defined modules/channels and if the PreCondition matches the following operations are done:
- Get the offline description of object 0x9000(+module specific offset) 'Information Data' and all entries
 Check:
    (Name)
    BitSize
    DataType
    Rx / Tx mappable
    Default Data
    MinData
    Flags       </Action>
					<PostCondition>Error if
- mandatory object / entry is not defined
- an optional object exists and the entries are invalid
- Object / entry description does not match with the specification</PostCondition>
					<ProposalForSolution>- Define the missing objects
- correct object / entry description</ProposalForSolution>
					<References>
						<Reference Specification="ETG.5001.6220"></Reference>
					</References>
					<Mandatory>true</Mandatory>
				</Description>
				<TestStep Name="InitResult">
					<SetVariable Target="strResult">EmptyString</SetVariable>
				</TestStep>
				<TestStep Name="CheckIfOfflineOdAvailable">
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Mailbox</Value1>
							<Value2>false</Value2>
							<SkipCase Id="0">DuT does not support mailbox.</SkipCase>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Mailbox.CoE</Value1>
							<Value2>false</Value2>
							<SkipCase Id="1">DuT does not support CoE.</SkipCase>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep>
					<GetObjectDictionary Target="odDeviceObjectdictionary">
						<DictionaryType>Offline</DictionaryType>
					</GetObjectDictionary>
					<SkipOnFailure Id="2">No offline object dictionary defined.</SkipOnFailure>
				</TestStep>
				<TestStep>
					<GetObjectList Count="u32Tmp" Target="odDeviceObjectdictionaryList" SourceDict="odDeviceObjectdictionary"></GetObjectList>
					<Compare>
						<Equal>
							<Value1>u32Tmp</Value1>
							<Value2>0</Value2>
							<SkipCase Id="3">No offline object dictionary defined.</SkipCase>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="InitAtLeastOneProfileMatch">
					<SetVariable Target="bAtLeastOneModuleMatch">false</SetVariable>
				</TestStep>
				<TestStep Name="GetCurrentProfileList">
					<CallTestFunction Name="GetCurrentProfileList">
						<Parameter>"offline"</Parameter>
						<Parameter>"SafeOP"</Parameter>
						<OutParameter>arrCurrentProfiles</OutParameter>
					</CallTestFunction>
				</TestStep>
				<TestStep Name="InitProfileLoopCounter">
					<SetVariable Target="u32ProfileCounter">0</SetVariable>
				</TestStep>
				<TestStep Name="GetProfileArrayLength">
					<SizeOf UInt32Var="u32CurrentProfilesLength">arrCurrentProfiles</SizeOf>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="4" Param0="u32CurrentProfilesLength" Level="Verbose">'{0}' Profile(s) defined offline.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>u32CurrentProfilesLength</Value1>
							<Value2>0</Value2>
							<SkipCase Id="5">Skip case | no profile defined.</SkipCase>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="ProfileLoopStart">
					<GetArrayItem SourceArray="arrCurrentProfiles" Target="strTmpString" Index="u32ProfileCounter"></GetArrayItem>
				</TestStep>
				<TestStep Name="CheckProfileInformationString">
					<Compare>
						<Equal>
							<Value1>strTmpString</Value1>
							<Value2>null</Value2>
							<RaiseError Id="6" Param0="u32ProfileCounter">Profile Info element [{0}] is null.</RaiseError>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>strTmpString</Value1>
							<Value2>EmptyString</Value2>
							<RaiseError Id="7" Param0="u32ProfileCounter">Profile Info element [{0}] is an empty string.</RaiseError>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="GetDeviceProfile">
					<CallTestFunction Name="GetDeviceProfile">
						<Parameter>strTmpString</Parameter>
						<OutParameter>uint16CurDeviceProfile</OutParameter>
					</CallTestFunction>
				</TestStep>
				<TestStep Name="GetModuleProfile">
					<CallTestFunction Name="GetModuleProfile">
						<Parameter>strTmpString</Parameter>
						<OutParameter>uint16CurModuleProfile</OutParameter>
					</CallTestFunction>
				</TestStep>
				<TestStep Name="GetSubModuleProfile">
					<CallTestFunction Name="GetSubModuleProfile">
						<Parameter>strTmpString</Parameter>
						<OutParameter>uint16CurSubModuleProfile</OutParameter>
					</CallTestFunction>
				</TestStep>
				<TestStep Name="DumpProfileInfo">
					<Description Id="8" Param0="uint16CurDeviceProfile" Param1="uint16CurModuleProfile" Param2="uint16CurSubModuleProfile" Param3="u32ProfileCounter" Level="Output">Module[{3}] : DeviceProfile '{0}' ; ModuleProfile '{1}' ; SubModuleProfile '{2}'</Description>
					<Compare>
						<Equal>
							<Value1>bIgnoreProfileID</Value1>
							<Value2>true</Value2>
							<GotoStep>IndicateThatAtleastOneModuleMatch</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CompareDeviceProfile">
					<Compare>
						<NotEqual>
							<Value1>uint16CurDeviceProfile</Value1>
							<Value2>5001</Value2>
							<WriteLine Id="9" Param0="uint16CurDeviceProfile" Level="Output">Skip Profile  (Test Device Profile '5001' != Cur Device Profile '{0}')</WriteLine>
						</NotEqual>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>uint16CurDeviceProfile</Value1>
							<Value2>5001</Value2>
							<GotoStep>ProfileLoopEnd</GotoStep>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep Name="CompareModuleProfile">
					<Compare>
						<NotEqual>
							<Value1>uint16CurModuleProfile</Value1>
							<Value2>6220</Value2>
							<WriteLine Id="10" Param0="uint16CurModuleProfile" Level="Output">Skip Profile  (Test Module Profile '6220' != Cur Module Profile '{0}')</WriteLine>
						</NotEqual>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>uint16CurModuleProfile</Value1>
							<Value2>6220</Value2>
							<GotoStep>ProfileLoopEnd</GotoStep>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep Name="CompareSubModuleProfile">
					<Compare>
						<NotEqual>
							<Value1>uint16CurSubModuleProfile</Value1>
							<Value2>0</Value2>
							<WriteLine Id="11" Param0="uint16CurSubModuleProfile" Level="Output">Skip Profile  (Test SubModule Profile '0' != Cur SubModule Profile '{0}')</WriteLine>
						</NotEqual>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>uint16CurSubModuleProfile</Value1>
							<Value2>0</Value2>
							<GotoStep>ProfileLoopEnd</GotoStep>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep Name="IndicateThatAtleastOneModuleMatch">
					<SetVariable Target="bAtLeastOneModuleMatch">true</SetVariable>
				</TestStep>
				<TestStep Name="GetObjectIndexInlcOffset">
					<SetVariable Target="u16ObjectIndexInclOffset">#x9000 + (u32ProfileCounter * #x10)</SetVariable>
					<WriteLine Id="12" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : ObjectIndex '0x{0:X}'</WriteLine>
				</TestStep>
				<TestStep Name="SetObjectMandatoryIndication">
					<SetVariable Target="bObjectEntryIsMandatory">true</SetVariable>
					<WriteLine Id="13" Param0="u16ObjectIndexInclOffset" Level="Verbose">0x{0:X4}.0 'Information Data' shall be available</WriteLine>
				</TestStep>
				<TestStep Name="LoadDeviceObjectDictionary">
					<Description Id="14" Level="Verbose">VerifyObject : Load 'offline' object dictionary for testing.</Description>
					<GetObjectDictionary Target="odDeviceObjectdictionary">
						<DictionaryType>Offline</DictionaryType>
					</GetObjectDictionary>
					<RaiseErrorOnFailure Id="15">VerifyObject : failed to load offline object dictionary.</RaiseErrorOnFailure>
				</TestStep>
				<TestStep Name="CheckIfObjectExists">
					<GetObjectDescription SourceDictionary="odDeviceObjectdictionary" Index="u16ObjectIndexInclOffset" SubIndex="-1"></GetObjectDescription>
					<GotoOnSuccess>CallCheckObjectDescription</GotoOnSuccess>
				</TestStep>
				<TestStep Name="HandleNotExistingObject">
					<Compare>
						<Equal>
							<Value1>bObjectEntryIsMandatory</Value1>
							<Value2>true</Value2>
							<GotoStep>CallCheckObjectDescription</GotoStep>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="16" Param0="u16ObjectIndexInclOffset" Level="Output">The optional/conditional object 0x{0:X4} 'Information Data' does not exists.)</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>ProfileLoopEnd</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CallCheckObjectDescription">
					<Description Id="17" Param0="u16ObjectIndexInclOffset" Level="Output">Verify the object description 0x{0:X4} 'Information Data'.</Description>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<CallTestFunction Name="CreateAllowedNames">
								<Parameter>"Information Data" ; "IO Info data Ch.{_M#_:d}"</Parameter>
								<Parameter>u16ObjectIndexInclOffset</Parameter>
								<Parameter>0</Parameter>
								<Parameter>u32ProfileCounter</Parameter>
								<OutParameter>arrAllowedNames</OutParameter>
							</CallTestFunction>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<CallTestFunction Name="CheckObjectDescription">
								<Parameter>odDeviceObjectdictionary</Parameter>
								<Parameter>"offline"</Parameter>
								<Parameter>u16ObjectIndexInclOffset</Parameter>
								<Parameter>false</Parameter>
								<Parameter>false</Parameter>
								<Parameter>arrAllowedNames</Parameter>
								<Parameter>null</Parameter>
								<Parameter>9</Parameter>
								<Parameter>-1</Parameter>
								<OutParameter>VerifyDescriptionError</OutParameter>
							</CallTestFunction>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<GotoStep>ProfileLoopEnd</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="InitEntryBittOffset">
					<SetVariable Target="i32CurrentBitOffset">0</SetVariable>
				</TestStep>
				<TestStep Name="StartSi0">
					<Description Id="18" Level="Output">Start validate SubIndex0</Description>
					<WriteLine Id="19" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : Subindex '0x{0:X}.0'</WriteLine>
				</TestStep>
				<TestStep Name="SetSi0MandatoryIndication">
					<SetVariable Target="bObjectEntryIsMandatory">true</SetVariable>
					<WriteLine Id="20" Param0="u16ObjectIndexInclOffset" Level="Verbose">0x{0:X4}.0 'Information Data' shall be available</WriteLine>
				</TestStep>
				<TestStep Name="CallSi0CheckEntryDescription">
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"offline"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>0</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>null</Parameter>
						<Parameter>5</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>null</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>null</Parameter>
						<Parameter>null</Parameter>
						<Parameter>null</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>8</Parameter>
						<Parameter>i32CurrentBitOffset</Parameter>
						<Parameter>true</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="EndSi0">
					<SetVariable Target="i32CurrentBitOffset">16</SetVariable>
				</TestStep>
				<TestStep Name="CheckReservedEntryRange_1_to_3">
					<Description Id="21" Level="Output">Start check reserved entry range 1 to 3</Description>
					<CallTestFunction Name="CheckReservedEntryRange">
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>1</Parameter>
						<Parameter>4</Parameter>
						<Parameter>odDeviceObjectdictionary</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="StartSi4">
					<Description Id="22" Level="Output">Start validate SubIndex4</Description>
					<WriteLine Id="23" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : Subindex '0x{0:X}.4'</WriteLine>
				</TestStep>
				<TestStep Name="SetSi4MandatoryIndication">
					<SetVariable Target="bObjectEntryIsMandatory">true</SetVariable>
					<WriteLine Id="24" Param0="u16ObjectIndexInclOffset" Level="Verbose">0x{0:X4}.4 'Device ID' shall be available</WriteLine>
				</TestStep>
				<TestStep Name="CallSi4CheckEntryDescription">
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"offline"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>4</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>"Device ID"</Parameter>
						<Parameter>7</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>null</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>32</Parameter>
						<Parameter>i32CurrentBitOffset</Parameter>
						<Parameter>true</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="EndSi4">
					<SetVariable Target="i32CurrentBitOffset">i32CurrentBitOffset + 32</SetVariable>
				</TestStep>
				<TestStep Name="StartSi5">
					<Description Id="25" Level="Output">Start validate SubIndex5</Description>
					<WriteLine Id="26" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : Subindex '0x{0:X}.5'</WriteLine>
				</TestStep>
				<TestStep Name="SetSi5MandatoryIndication">
					<SetVariable Target="bObjectEntryIsMandatory">true</SetVariable>
					<WriteLine Id="27" Param0="u16ObjectIndexInclOffset" Level="Verbose">0x{0:X4}.5 'Vendor ID' shall be available</WriteLine>
				</TestStep>
				<TestStep Name="CallSi5CheckEntryDescription">
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"offline"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>5</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>"Vendor ID"</Parameter>
						<Parameter>7</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>null</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>32</Parameter>
						<Parameter>i32CurrentBitOffset</Parameter>
						<Parameter>true</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="EndSi5">
					<SetVariable Target="i32CurrentBitOffset">i32CurrentBitOffset + 32</SetVariable>
				</TestStep>
				<TestStep Name="CheckReservedEntryRange_6_to_31">
					<Description Id="28" Level="Output">Start check reserved entry range 6 to 31</Description>
					<CallTestFunction Name="CheckReservedEntryRange">
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>6</Parameter>
						<Parameter>32</Parameter>
						<Parameter>odDeviceObjectdictionary</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="StartSi32">
					<Description Id="29" Level="Output">Start validate SubIndex32</Description>
					<WriteLine Id="30" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : Subindex '0x{0:X}.32'</WriteLine>
				</TestStep>
				<TestStep Name="SetSi32MandatoryIndication">
					<SetVariable Target="bObjectEntryIsMandatory">true</SetVariable>
					<WriteLine Id="31" Param0="u16ObjectIndexInclOffset" Level="Verbose">0x{0:X4}.32 'IO-Link Revision' shall be available</WriteLine>
				</TestStep>
				<TestStep Name="CallSi32CheckEntryDescription">
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"offline"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>32</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>"IO-Link Revision"</Parameter>
						<Parameter>5</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>null</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>8</Parameter>
						<Parameter>i32CurrentBitOffset</Parameter>
						<Parameter>true</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="EndSi32">
					<SetVariable Target="i32CurrentBitOffset">i32CurrentBitOffset + 8</SetVariable>
				</TestStep>
				<TestStep Name="StartSi33">
					<Description Id="32" Level="Output">Start validate SubIndex33</Description>
					<WriteLine Id="33" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : Subindex '0x{0:X}.33'</WriteLine>
				</TestStep>
				<TestStep Name="SetSi33MandatoryIndication">
					<SetVariable Target="bObjectEntryIsMandatory">false</SetVariable>
					<WriteLine Id="34" Param0="u16ObjectIndexInclOffset" Level="Verbose">0x{0:X4}.33 'Frame Capability' may be available</WriteLine>
				</TestStep>
				<TestStep Name="CheckIfSi33Exists">
					<GetObjectDescription SourceDictionary="odDeviceObjectdictionary" Index="u16ObjectIndexInclOffset" SubIndex="33">
						<Type>u16DataType</Type>
					</GetObjectDescription>
					<GotoOnFailure>HandleNotExistingSi33</GotoOnFailure>
				</TestStep>
				<TestStep>
					<Compare>
						<NotEqual>
							<Value1>u16DataType</Value1>
							<Value2>0</Value2>
							<GotoStep>CallSi33CheckEntryDescription</GotoStep>
						</NotEqual>
					</Compare>
					<Compare>
						<Equal>
							<Value1>u16DataType</Value1>
							<Value2>0</Value2>
							<WriteLine Id="35" Param0="u16ObjectIndexInclOffset" Level="Verbose">The optional/conditional entriy 0x{0:X4}.33is defined as a padding entry.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>u16DataType</Value1>
							<Value2>0</Value2>
							<GotoStep>EndSi33</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="HandleNotExistingSi33">
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="36" Param0="u16ObjectIndexInclOffset" Level="Output">The optional/conditional entry 0x{0:X4}.33 is not defined.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>EndSi33</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CallSi33CheckEntryDescription">
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"offline"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>33</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>"Frame Capability"</Parameter>
						<Parameter>5</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>null</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>8</Parameter>
						<Parameter>i32CurrentBitOffset</Parameter>
						<Parameter>true</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="EndSi33">
					<SetVariable Target="i32CurrentBitOffset">-1</SetVariable>
				</TestStep>
				<TestStep Name="StartSi34">
					<Description Id="37" Level="Output">Start validate SubIndex34</Description>
					<WriteLine Id="38" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : Subindex '0x{0:X}.34'</WriteLine>
				</TestStep>
				<TestStep Name="SetSi34MandatoryIndication">
					<SetVariable Target="bObjectEntryIsMandatory">false</SetVariable>
					<WriteLine Id="39" Param0="u16ObjectIndexInclOffset" Level="Verbose">0x{0:X4}.34 'Cycle Time' may be available</WriteLine>
				</TestStep>
				<TestStep Name="CheckIfSi34Exists">
					<GetObjectDescription SourceDictionary="odDeviceObjectdictionary" Index="u16ObjectIndexInclOffset" SubIndex="34">
						<Type>u16DataType</Type>
					</GetObjectDescription>
					<GotoOnFailure>HandleNotExistingSi34</GotoOnFailure>
				</TestStep>
				<TestStep>
					<Compare>
						<NotEqual>
							<Value1>u16DataType</Value1>
							<Value2>0</Value2>
							<GotoStep>CallSi34CheckEntryDescription</GotoStep>
						</NotEqual>
					</Compare>
					<Compare>
						<Equal>
							<Value1>u16DataType</Value1>
							<Value2>0</Value2>
							<WriteLine Id="40" Param0="u16ObjectIndexInclOffset" Level="Verbose">The optional/conditional entriy 0x{0:X4}.34is defined as a padding entry.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>u16DataType</Value1>
							<Value2>0</Value2>
							<GotoStep>EndSi34</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="HandleNotExistingSi34">
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="41" Param0="u16ObjectIndexInclOffset" Level="Output">The optional/conditional entry 0x{0:X4}.34 is not defined.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>EndSi34</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CallSi34CheckEntryDescription">
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<CallTestFunction Name="CreateAllowedNames">
								<Parameter>"Cycle Time" ; "Min cycle time"</Parameter>
								<Parameter>u16ObjectIndexInclOffset</Parameter>
								<Parameter>34</Parameter>
								<Parameter>u32ProfileCounter</Parameter>
								<OutParameter>arrAllowedNames</OutParameter>
							</CallTestFunction>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<CallTestFunction Name="CheckEntryDescription">
								<Parameter>odDeviceObjectdictionary</Parameter>
								<Parameter>"offline"</Parameter>
								<Parameter>u16ObjectIndexInclOffset</Parameter>
								<Parameter>34</Parameter>
								<Parameter>false</Parameter>
								<Parameter>false</Parameter>
								<Parameter>arrAllowedNames</Parameter>
								<Parameter>5</Parameter>
								<Parameter>1</Parameter>
								<Parameter>1</Parameter>
								<Parameter>1</Parameter>
								<Parameter>0</Parameter>
								<Parameter>0</Parameter>
								<Parameter>0</Parameter>
								<Parameter>null</Parameter>
								<Parameter>EmptyString</Parameter>
								<Parameter>EmptyString</Parameter>
								<Parameter>EmptyString</Parameter>
								<Parameter>EmptyString</Parameter>
								<Parameter>-1</Parameter>
								<Parameter>-1</Parameter>
								<Parameter>8</Parameter>
								<Parameter>-1</Parameter>
								<Parameter>true</Parameter>
								<OutParameter>VerifyDescriptionError</OutParameter>
							</CallTestFunction>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="EndSi34"></TestStep>
				<TestStep Name="StartSi35">
					<Description Id="42" Level="Output">Start validate SubIndex35</Description>
					<WriteLine Id="43" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : Subindex '0x{0:X}.35'</WriteLine>
				</TestStep>
				<TestStep Name="SetSi35MandatoryIndication">
					<SetVariable Target="bObjectEntryIsMandatory">false</SetVariable>
					<WriteLine Id="44" Param0="u16ObjectIndexInclOffset" Level="Verbose">0x{0:X4}.35 'Offset Time' may be available</WriteLine>
				</TestStep>
				<TestStep Name="CheckIfSi35Exists">
					<GetObjectDescription SourceDictionary="odDeviceObjectdictionary" Index="u16ObjectIndexInclOffset" SubIndex="35">
						<Type>u16DataType</Type>
					</GetObjectDescription>
					<GotoOnFailure>HandleNotExistingSi35</GotoOnFailure>
				</TestStep>
				<TestStep>
					<Compare>
						<NotEqual>
							<Value1>u16DataType</Value1>
							<Value2>0</Value2>
							<GotoStep>CallSi35CheckEntryDescription</GotoStep>
						</NotEqual>
					</Compare>
					<Compare>
						<Equal>
							<Value1>u16DataType</Value1>
							<Value2>0</Value2>
							<WriteLine Id="45" Param0="u16ObjectIndexInclOffset" Level="Verbose">The optional/conditional entriy 0x{0:X4}.35is defined as a padding entry.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>u16DataType</Value1>
							<Value2>0</Value2>
							<GotoStep>EndSi35</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="HandleNotExistingSi35">
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="46" Param0="u16ObjectIndexInclOffset" Level="Output">The optional/conditional entry 0x{0:X4}.35 is not defined.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>EndSi35</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CallSi35CheckEntryDescription">
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"offline"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>35</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>"Offset Time"</Parameter>
						<Parameter>5</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>null</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>8</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>true</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="EndSi35"></TestStep>
				<TestStep Name="StartSi36">
					<Description Id="47" Level="Output">Start validate SubIndex36</Description>
					<WriteLine Id="48" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : Subindex '0x{0:X}.36'</WriteLine>
				</TestStep>
				<TestStep Name="SetSi36MandatoryIndication">
					<SetVariable Target="bObjectEntryIsMandatory">true</SetVariable>
					<WriteLine Id="49" Param0="u16ObjectIndexInclOffset" Level="Verbose">0x{0:X4}.36 'Process Data In Length' shall be available</WriteLine>
				</TestStep>
				<TestStep Name="CallSi36CheckEntryDescription">
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"offline"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>36</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>"Process Data In Length"</Parameter>
						<Parameter>5</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>null</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>8</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>true</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="EndSi36"></TestStep>
				<TestStep Name="StartSi37">
					<Description Id="50" Level="Output">Start validate SubIndex37</Description>
					<WriteLine Id="51" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : Subindex '0x{0:X}.37'</WriteLine>
				</TestStep>
				<TestStep Name="SetSi37MandatoryIndication">
					<SetVariable Target="bObjectEntryIsMandatory">true</SetVariable>
					<WriteLine Id="52" Param0="u16ObjectIndexInclOffset" Level="Verbose">0x{0:X4}.37 'Process Data Out Length' shall be available</WriteLine>
				</TestStep>
				<TestStep Name="CallSi37CheckEntryDescription">
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"offline"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>37</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>"Process Data Out Length"</Parameter>
						<Parameter>5</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>null</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>8</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>true</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="EndSi37"></TestStep>
				<TestStep Name="StartSi38">
					<Description Id="53" Level="Output">Start validate SubIndex38</Description>
					<WriteLine Id="54" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : Subindex '0x{0:X}.38'</WriteLine>
				</TestStep>
				<TestStep Name="SetSi38MandatoryIndication">
					<SetVariable Target="bObjectEntryIsMandatory">false</SetVariable>
					<WriteLine Id="55" Param0="u16ObjectIndexInclOffset" Level="Verbose">0x{0:X4}.38 may be available</WriteLine>
				</TestStep>
				<TestStep Name="CheckIfSi38Exists">
					<GetObjectDescription SourceDictionary="odDeviceObjectdictionary" Index="u16ObjectIndexInclOffset" SubIndex="38">
						<Type>u16DataType</Type>
					</GetObjectDescription>
					<GotoOnFailure>HandleNotExistingSi38</GotoOnFailure>
				</TestStep>
				<TestStep>
					<Compare>
						<NotEqual>
							<Value1>u16DataType</Value1>
							<Value2>0</Value2>
							<GotoStep>CallSi38CheckEntryDescription</GotoStep>
						</NotEqual>
					</Compare>
					<Compare>
						<Equal>
							<Value1>u16DataType</Value1>
							<Value2>0</Value2>
							<WriteLine Id="56" Param0="u16ObjectIndexInclOffset" Level="Verbose">The optional/conditional entriy 0x{0:X4}.38is defined as a padding entry.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>u16DataType</Value1>
							<Value2>0</Value2>
							<GotoStep>EndSi38</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="HandleNotExistingSi38">
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="57" Param0="u16ObjectIndexInclOffset" Level="Output">The optional/conditional entry 0x{0:X4}.38 is not defined.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>EndSi38</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CallSi38CheckEntryDescription">
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"offline"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>38</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>null</Parameter>
						<Parameter>6</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>null</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>16</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>true</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="EndSi38"></TestStep>
				<TestStep Name="StartSi39">
					<Description Id="58" Level="Output">Start validate SubIndex39</Description>
					<WriteLine Id="59" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : Subindex '0x{0:X}.39'</WriteLine>
				</TestStep>
				<TestStep Name="SetSi39MandatoryIndication">
					<SetVariable Target="bObjectEntryIsMandatory">false</SetVariable>
					<WriteLine Id="60" Param0="u16ObjectIndexInclOffset" Level="Verbose">0x{0:X4}.39 may be available</WriteLine>
				</TestStep>
				<TestStep Name="CheckIfSi39Exists">
					<GetObjectDescription SourceDictionary="odDeviceObjectdictionary" Index="u16ObjectIndexInclOffset" SubIndex="39">
						<Type>u16DataType</Type>
					</GetObjectDescription>
					<GotoOnFailure>HandleNotExistingSi39</GotoOnFailure>
				</TestStep>
				<TestStep>
					<Compare>
						<NotEqual>
							<Value1>u16DataType</Value1>
							<Value2>0</Value2>
							<GotoStep>CallSi39CheckEntryDescription</GotoStep>
						</NotEqual>
					</Compare>
					<Compare>
						<Equal>
							<Value1>u16DataType</Value1>
							<Value2>0</Value2>
							<WriteLine Id="61" Param0="u16ObjectIndexInclOffset" Level="Verbose">The optional/conditional entriy 0x{0:X4}.39is defined as a padding entry.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>u16DataType</Value1>
							<Value2>0</Value2>
							<GotoStep>EndSi39</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="HandleNotExistingSi39">
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="62" Param0="u16ObjectIndexInclOffset" Level="Output">The optional/conditional entry 0x{0:X4}.39 is not defined.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>EndSi39</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CallSi39CheckEntryDescription">
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"offline"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>39</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>null</Parameter>
						<Parameter>6</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>null</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>16</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>true</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="EndSi39"></TestStep>
				<TestStep Name="CheckReservedEntryRange_40_to_255">
					<Description Id="63" Level="Output">Start check reserved entry range 40 to 255</Description>
					<CallTestFunction Name="CheckReservedEntryRange">
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>40</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>odDeviceObjectdictionary</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="ProfileLoopEnd">
					<Compare>
						<Equal>
							<Value1>bAtLeastOneModuleMatch</Value1>
							<Value2>false</Value2>
							<GotoStep>HandleAbortTestCaseOnFirstError</GotoStep>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>ProfileLoopIncrement</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="HandleAbortTestCaseOnFirstError">
					<Compare>
						<Equal>
							<Value1>bAbortTestCaseOnFirstError</Value1>
							<Value2>false</Value2>
							<GotoStep>ProfileLoopIncrement</GotoStep>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>strResult</Value1>
							<Value2>EmptyString</Value2>
							<GotoStep>ProfileLoopIncrement</GotoStep>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="64" Level="Output">Object verification for all following modules abort because an error was already detected for the current module.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>END</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="ProfileLoopIncrement">
					<SetVariable Target="u32ProfileCounter">u32ProfileCounter + 1</SetVariable>
					<Compare>
						<Greater>
							<Value1>u32CurrentProfilesLength</Value1>
							<Value2>u32ProfileCounter</Value2>
							<GotoStep>ProfileLoopStart</GotoStep>
						</Greater>
					</Compare>
				</TestStep>
				<TestStep Name="END">
					<Compare>
						<NotEqual>
							<Value1>bAtLeastOneModuleMatch</Value1>
							<Value2>true</Value2>
							<SkipCase Id="65">SKIP TEST</SkipCase>
						</NotEqual>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bDEBUG</Value1>
							<Value2>true</Value2>
							<WriteLine Id="66" Param0="strResult" Level="Verbose">DEBUG | Result : '{0}'.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>strResult</Value1>
							<Value2>EmptyString</Value2>
							<ReturnSuccess Id="67">Test succeed</ReturnSuccess>
						</Equal>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>strResult</Value1>
							<Value2>EmptyString</Value2>
							<RaiseError Id="68"></RaiseError>
						</NotEqual>
					</Compare>
				</TestStep>
			</TestCase>
			<TestCase Name="online | 0x9000 (Information Data)" CaseId="2">
				<?MAX_OUTPUT_ID 64?>
				<Description>
					<PreCondition>- The device profile is 5001
- The module profile is 6220
- The submodule profile is 0</PreCondition>
					<Action>- Iterate over all online defined modules/channels and if the PreCondition matches the following operations are done:
- Get the online description of object 0x9000(+module specific offset) 'Information Data' and all entries
 Check:
    (Name)
    BitSize
    DataType
    Rx / Tx mappable
    Default Data
    MinData
    Flags       </Action>
					<PostCondition>Error if
- mandatory object / entry is not defined
- an optional object exists and the entries are invalid
- Object / entry description does not match with the specification</PostCondition>
					<ProposalForSolution>- Define the missing objects
- correct object / entry description</ProposalForSolution>
					<References>
						<Reference Specification="ETG.5001.6220"></Reference>
					</References>
					<Mandatory>true</Mandatory>
				</Description>
				<TestStep Name="InitResult">
					<SetVariable Target="strResult">EmptyString</SetVariable>
				</TestStep>
				<TestStep Name="InitAtLeastOneProfileMatch">
					<SetVariable Target="bAtLeastOneModuleMatch">false</SetVariable>
				</TestStep>
				<TestStep Name="GetCurrentProfileList">
					<CallTestFunction Name="GetCurrentProfileList">
						<Parameter>"online"</Parameter>
						<Parameter>"SafeOP"</Parameter>
						<OutParameter>arrCurrentProfiles</OutParameter>
					</CallTestFunction>
				</TestStep>
				<TestStep Name="InitProfileLoopCounter">
					<SetVariable Target="u32ProfileCounter">0</SetVariable>
				</TestStep>
				<TestStep Name="GetProfileArrayLength">
					<SizeOf UInt32Var="u32CurrentProfilesLength">arrCurrentProfiles</SizeOf>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="0" Param0="u32CurrentProfilesLength" Level="Verbose">'{0}' Profile(s) defined online.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>u32CurrentProfilesLength</Value1>
							<Value2>0</Value2>
							<SkipCase Id="1">Skip case | no profile defined.</SkipCase>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="ProfileLoopStart">
					<GetArrayItem SourceArray="arrCurrentProfiles" Target="strTmpString" Index="u32ProfileCounter"></GetArrayItem>
				</TestStep>
				<TestStep Name="CheckProfileInformationString">
					<Compare>
						<Equal>
							<Value1>strTmpString</Value1>
							<Value2>null</Value2>
							<RaiseError Id="2" Param0="u32ProfileCounter">Profile Info element [{0}] is null.</RaiseError>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>strTmpString</Value1>
							<Value2>EmptyString</Value2>
							<RaiseError Id="3" Param0="u32ProfileCounter">Profile Info element [{0}] is an empty string.</RaiseError>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="GetDeviceProfile">
					<CallTestFunction Name="GetDeviceProfile">
						<Parameter>strTmpString</Parameter>
						<OutParameter>uint16CurDeviceProfile</OutParameter>
					</CallTestFunction>
				</TestStep>
				<TestStep Name="GetModuleProfile">
					<CallTestFunction Name="GetModuleProfile">
						<Parameter>strTmpString</Parameter>
						<OutParameter>uint16CurModuleProfile</OutParameter>
					</CallTestFunction>
				</TestStep>
				<TestStep Name="GetSubModuleProfile">
					<CallTestFunction Name="GetSubModuleProfile">
						<Parameter>strTmpString</Parameter>
						<OutParameter>uint16CurSubModuleProfile</OutParameter>
					</CallTestFunction>
				</TestStep>
				<TestStep Name="DumpProfileInfo">
					<Description Id="4" Param0="uint16CurDeviceProfile" Param1="uint16CurModuleProfile" Param2="uint16CurSubModuleProfile" Param3="u32ProfileCounter" Level="Output">Module[{3}] : DeviceProfile '{0}' ; ModuleProfile '{1}' ; SubModuleProfile '{2}'</Description>
					<Compare>
						<Equal>
							<Value1>bIgnoreProfileID</Value1>
							<Value2>true</Value2>
							<GotoStep>IndicateThatAtleastOneModuleMatch</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CompareDeviceProfile">
					<Compare>
						<NotEqual>
							<Value1>uint16CurDeviceProfile</Value1>
							<Value2>5001</Value2>
							<WriteLine Id="5" Param0="uint16CurDeviceProfile" Level="Output">Skip Profile  (Test Device Profile '5001' != Cur Device Profile '{0}')</WriteLine>
						</NotEqual>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>uint16CurDeviceProfile</Value1>
							<Value2>5001</Value2>
							<GotoStep>ProfileLoopEnd</GotoStep>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep Name="CompareModuleProfile">
					<Compare>
						<NotEqual>
							<Value1>uint16CurModuleProfile</Value1>
							<Value2>6220</Value2>
							<WriteLine Id="6" Param0="uint16CurModuleProfile" Level="Output">Skip Profile  (Test Module Profile '6220' != Cur Module Profile '{0}')</WriteLine>
						</NotEqual>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>uint16CurModuleProfile</Value1>
							<Value2>6220</Value2>
							<GotoStep>ProfileLoopEnd</GotoStep>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep Name="CompareSubModuleProfile">
					<Compare>
						<NotEqual>
							<Value1>uint16CurSubModuleProfile</Value1>
							<Value2>0</Value2>
							<WriteLine Id="7" Param0="uint16CurSubModuleProfile" Level="Output">Skip Profile  (Test SubModule Profile '0' != Cur SubModule Profile '{0}')</WriteLine>
						</NotEqual>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>uint16CurSubModuleProfile</Value1>
							<Value2>0</Value2>
							<GotoStep>ProfileLoopEnd</GotoStep>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep Name="IndicateThatAtleastOneModuleMatch">
					<SetVariable Target="bAtLeastOneModuleMatch">true</SetVariable>
				</TestStep>
				<TestStep Name="GetObjectIndexInlcOffset">
					<SetVariable Target="u16ObjectIndexInclOffset">#x9000 + (u32ProfileCounter * #x10)</SetVariable>
					<WriteLine Id="8" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : ObjectIndex '0x{0:X}'</WriteLine>
				</TestStep>
				<TestStep Name="SetObjectMandatoryIndication">
					<SetVariable Target="bObjectEntryIsMandatory">true</SetVariable>
					<WriteLine Id="9" Param0="u16ObjectIndexInclOffset" Level="Verbose">0x{0:X4}.0 'Information Data' shall be available</WriteLine>
				</TestStep>
				<TestStep Name="LoadDeviceObjectDictionary">
					<Description Id="10" Level="Verbose">VerifyObject : Load 'online' object dictionary for testing.</Description>
					<GetObjectDictionary Target="odDeviceObjectdictionary">
						<DictionaryType>Online</DictionaryType>
					</GetObjectDictionary>
					<RaiseErrorOnFailure Id="11">VerifyObject : failed to load online object dictionary.</RaiseErrorOnFailure>
				</TestStep>
				<TestStep Name="CheckIfObjectExists">
					<GetObjectDescription SourceDictionary="odDeviceObjectdictionary" Index="u16ObjectIndexInclOffset" SubIndex="-1"></GetObjectDescription>
					<GotoOnSuccess>CallCheckObjectDescription</GotoOnSuccess>
				</TestStep>
				<TestStep Name="HandleNotExistingObject">
					<Compare>
						<Equal>
							<Value1>bObjectEntryIsMandatory</Value1>
							<Value2>true</Value2>
							<GotoStep>CallCheckObjectDescription</GotoStep>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="12" Param0="u16ObjectIndexInclOffset" Level="Output">The optional/conditional object 0x{0:X4} 'Information Data' does not exists.)</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>ProfileLoopEnd</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CallCheckObjectDescription">
					<Description Id="13" Param0="u16ObjectIndexInclOffset" Level="Output">Verify the object description 0x{0:X4} 'Information Data'.</Description>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<CallTestFunction Name="CreateAllowedNames">
								<Parameter>"Information Data" ; "IO Info data Ch.{_M#_:d}"</Parameter>
								<Parameter>u16ObjectIndexInclOffset</Parameter>
								<Parameter>0</Parameter>
								<Parameter>u32ProfileCounter</Parameter>
								<OutParameter>arrAllowedNames</OutParameter>
							</CallTestFunction>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<CallTestFunction Name="CheckObjectDescription">
								<Parameter>odDeviceObjectdictionary</Parameter>
								<Parameter>"online"</Parameter>
								<Parameter>u16ObjectIndexInclOffset</Parameter>
								<Parameter>false</Parameter>
								<Parameter>false</Parameter>
								<Parameter>arrAllowedNames</Parameter>
								<Parameter>null</Parameter>
								<Parameter>9</Parameter>
								<Parameter>-1</Parameter>
								<OutParameter>VerifyDescriptionError</OutParameter>
							</CallTestFunction>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<GotoStep>ProfileLoopEnd</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="InitEntryBittOffset">
					<SetVariable Target="i32CurrentBitOffset">0</SetVariable>
				</TestStep>
				<TestStep Name="StartSi0">
					<Description Id="14" Level="Output">Start validate SubIndex0</Description>
					<WriteLine Id="15" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : Subindex '0x{0:X}.0'</WriteLine>
				</TestStep>
				<TestStep Name="SetSi0MandatoryIndication">
					<SetVariable Target="bObjectEntryIsMandatory">true</SetVariable>
					<WriteLine Id="16" Param0="u16ObjectIndexInclOffset" Level="Verbose">0x{0:X4}.0 'Information Data' shall be available</WriteLine>
				</TestStep>
				<TestStep Name="CallSi0CheckEntryDescription">
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"online"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>0</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>null</Parameter>
						<Parameter>5</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>null</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>null</Parameter>
						<Parameter>null</Parameter>
						<Parameter>null</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>8</Parameter>
						<Parameter>i32CurrentBitOffset</Parameter>
						<Parameter>true</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="EndSi0">
					<SetVariable Target="i32CurrentBitOffset">16</SetVariable>
				</TestStep>
				<TestStep Name="CheckReservedEntryRange_1_to_3">
					<Description Id="17" Level="Output">Start check reserved entry range 1 to 3</Description>
					<CallTestFunction Name="CheckReservedEntryRange">
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>1</Parameter>
						<Parameter>4</Parameter>
						<Parameter>odDeviceObjectdictionary</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="StartSi4">
					<Description Id="18" Level="Output">Start validate SubIndex4</Description>
					<WriteLine Id="19" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : Subindex '0x{0:X}.4'</WriteLine>
				</TestStep>
				<TestStep Name="SetSi4MandatoryIndication">
					<SetVariable Target="bObjectEntryIsMandatory">true</SetVariable>
					<WriteLine Id="20" Param0="u16ObjectIndexInclOffset" Level="Verbose">0x{0:X4}.4 'Device ID' shall be available</WriteLine>
				</TestStep>
				<TestStep Name="CallSi4CheckEntryDescription">
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"online"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>4</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>"Device ID"</Parameter>
						<Parameter>7</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>null</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>32</Parameter>
						<Parameter>i32CurrentBitOffset</Parameter>
						<Parameter>true</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="EndSi4">
					<SetVariable Target="i32CurrentBitOffset">i32CurrentBitOffset + 32</SetVariable>
				</TestStep>
				<TestStep Name="StartSi5">
					<Description Id="21" Level="Output">Start validate SubIndex5</Description>
					<WriteLine Id="22" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : Subindex '0x{0:X}.5'</WriteLine>
				</TestStep>
				<TestStep Name="SetSi5MandatoryIndication">
					<SetVariable Target="bObjectEntryIsMandatory">true</SetVariable>
					<WriteLine Id="23" Param0="u16ObjectIndexInclOffset" Level="Verbose">0x{0:X4}.5 'Vendor ID' shall be available</WriteLine>
				</TestStep>
				<TestStep Name="CallSi5CheckEntryDescription">
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"online"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>5</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>"Vendor ID"</Parameter>
						<Parameter>7</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>null</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>32</Parameter>
						<Parameter>i32CurrentBitOffset</Parameter>
						<Parameter>true</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="EndSi5">
					<SetVariable Target="i32CurrentBitOffset">i32CurrentBitOffset + 32</SetVariable>
				</TestStep>
				<TestStep Name="CheckReservedEntryRange_6_to_31">
					<Description Id="24" Level="Output">Start check reserved entry range 6 to 31</Description>
					<CallTestFunction Name="CheckReservedEntryRange">
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>6</Parameter>
						<Parameter>32</Parameter>
						<Parameter>odDeviceObjectdictionary</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="StartSi32">
					<Description Id="25" Level="Output">Start validate SubIndex32</Description>
					<WriteLine Id="26" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : Subindex '0x{0:X}.32'</WriteLine>
				</TestStep>
				<TestStep Name="SetSi32MandatoryIndication">
					<SetVariable Target="bObjectEntryIsMandatory">true</SetVariable>
					<WriteLine Id="27" Param0="u16ObjectIndexInclOffset" Level="Verbose">0x{0:X4}.32 'IO-Link Revision' shall be available</WriteLine>
				</TestStep>
				<TestStep Name="CallSi32CheckEntryDescription">
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"online"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>32</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>"IO-Link Revision"</Parameter>
						<Parameter>5</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>null</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>8</Parameter>
						<Parameter>i32CurrentBitOffset</Parameter>
						<Parameter>true</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="EndSi32">
					<SetVariable Target="i32CurrentBitOffset">i32CurrentBitOffset + 8</SetVariable>
				</TestStep>
				<TestStep Name="StartSi33">
					<Description Id="28" Level="Output">Start validate SubIndex33</Description>
					<WriteLine Id="29" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : Subindex '0x{0:X}.33'</WriteLine>
				</TestStep>
				<TestStep Name="SetSi33MandatoryIndication">
					<SetVariable Target="bObjectEntryIsMandatory">false</SetVariable>
					<WriteLine Id="30" Param0="u16ObjectIndexInclOffset" Level="Verbose">0x{0:X4}.33 'Frame Capability' may be available</WriteLine>
				</TestStep>
				<TestStep Name="CheckIfSi33Exists">
					<GetObjectDescription SourceDictionary="odDeviceObjectdictionary" Index="u16ObjectIndexInclOffset" SubIndex="33">
						<Type>u16DataType</Type>
					</GetObjectDescription>
					<GotoOnFailure>HandleNotExistingSi33</GotoOnFailure>
				</TestStep>
				<TestStep>
					<Compare>
						<NotEqual>
							<Value1>u16DataType</Value1>
							<Value2>0</Value2>
							<GotoStep>CallSi33CheckEntryDescription</GotoStep>
						</NotEqual>
					</Compare>
					<Compare>
						<Equal>
							<Value1>u16DataType</Value1>
							<Value2>0</Value2>
							<WriteLine Id="31" Param0="u16ObjectIndexInclOffset" Level="Verbose">The optional/conditional entriy 0x{0:X4}.33is defined as a padding entry.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>u16DataType</Value1>
							<Value2>0</Value2>
							<GotoStep>EndSi33</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="HandleNotExistingSi33">
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="32" Param0="u16ObjectIndexInclOffset" Level="Output">The optional/conditional entry 0x{0:X4}.33 is not defined.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>EndSi33</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CallSi33CheckEntryDescription">
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"online"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>33</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>"Frame Capability"</Parameter>
						<Parameter>5</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>null</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>8</Parameter>
						<Parameter>i32CurrentBitOffset</Parameter>
						<Parameter>true</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="EndSi33">
					<SetVariable Target="i32CurrentBitOffset">-1</SetVariable>
				</TestStep>
				<TestStep Name="StartSi34">
					<Description Id="33" Level="Output">Start validate SubIndex34</Description>
					<WriteLine Id="34" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : Subindex '0x{0:X}.34'</WriteLine>
				</TestStep>
				<TestStep Name="SetSi34MandatoryIndication">
					<SetVariable Target="bObjectEntryIsMandatory">false</SetVariable>
					<WriteLine Id="35" Param0="u16ObjectIndexInclOffset" Level="Verbose">0x{0:X4}.34 'Cycle Time' may be available</WriteLine>
				</TestStep>
				<TestStep Name="CheckIfSi34Exists">
					<GetObjectDescription SourceDictionary="odDeviceObjectdictionary" Index="u16ObjectIndexInclOffset" SubIndex="34">
						<Type>u16DataType</Type>
					</GetObjectDescription>
					<GotoOnFailure>HandleNotExistingSi34</GotoOnFailure>
				</TestStep>
				<TestStep>
					<Compare>
						<NotEqual>
							<Value1>u16DataType</Value1>
							<Value2>0</Value2>
							<GotoStep>CallSi34CheckEntryDescription</GotoStep>
						</NotEqual>
					</Compare>
					<Compare>
						<Equal>
							<Value1>u16DataType</Value1>
							<Value2>0</Value2>
							<WriteLine Id="36" Param0="u16ObjectIndexInclOffset" Level="Verbose">The optional/conditional entriy 0x{0:X4}.34is defined as a padding entry.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>u16DataType</Value1>
							<Value2>0</Value2>
							<GotoStep>EndSi34</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="HandleNotExistingSi34">
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="37" Param0="u16ObjectIndexInclOffset" Level="Output">The optional/conditional entry 0x{0:X4}.34 is not defined.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>EndSi34</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CallSi34CheckEntryDescription">
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<CallTestFunction Name="CreateAllowedNames">
								<Parameter>"Cycle Time" ; "Min cycle time"</Parameter>
								<Parameter>u16ObjectIndexInclOffset</Parameter>
								<Parameter>34</Parameter>
								<Parameter>u32ProfileCounter</Parameter>
								<OutParameter>arrAllowedNames</OutParameter>
							</CallTestFunction>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<CallTestFunction Name="CheckEntryDescription">
								<Parameter>odDeviceObjectdictionary</Parameter>
								<Parameter>"online"</Parameter>
								<Parameter>u16ObjectIndexInclOffset</Parameter>
								<Parameter>34</Parameter>
								<Parameter>false</Parameter>
								<Parameter>false</Parameter>
								<Parameter>arrAllowedNames</Parameter>
								<Parameter>5</Parameter>
								<Parameter>1</Parameter>
								<Parameter>1</Parameter>
								<Parameter>1</Parameter>
								<Parameter>0</Parameter>
								<Parameter>0</Parameter>
								<Parameter>0</Parameter>
								<Parameter>null</Parameter>
								<Parameter>EmptyString</Parameter>
								<Parameter>EmptyString</Parameter>
								<Parameter>EmptyString</Parameter>
								<Parameter>EmptyString</Parameter>
								<Parameter>-1</Parameter>
								<Parameter>-1</Parameter>
								<Parameter>8</Parameter>
								<Parameter>-1</Parameter>
								<Parameter>true</Parameter>
								<OutParameter>VerifyDescriptionError</OutParameter>
							</CallTestFunction>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="EndSi34"></TestStep>
				<TestStep Name="StartSi35">
					<Description Id="38" Level="Output">Start validate SubIndex35</Description>
					<WriteLine Id="39" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : Subindex '0x{0:X}.35'</WriteLine>
				</TestStep>
				<TestStep Name="SetSi35MandatoryIndication">
					<SetVariable Target="bObjectEntryIsMandatory">false</SetVariable>
					<WriteLine Id="40" Param0="u16ObjectIndexInclOffset" Level="Verbose">0x{0:X4}.35 'Offset Time' may be available</WriteLine>
				</TestStep>
				<TestStep Name="CheckIfSi35Exists">
					<GetObjectDescription SourceDictionary="odDeviceObjectdictionary" Index="u16ObjectIndexInclOffset" SubIndex="35">
						<Type>u16DataType</Type>
					</GetObjectDescription>
					<GotoOnFailure>HandleNotExistingSi35</GotoOnFailure>
				</TestStep>
				<TestStep>
					<Compare>
						<NotEqual>
							<Value1>u16DataType</Value1>
							<Value2>0</Value2>
							<GotoStep>CallSi35CheckEntryDescription</GotoStep>
						</NotEqual>
					</Compare>
					<Compare>
						<Equal>
							<Value1>u16DataType</Value1>
							<Value2>0</Value2>
							<WriteLine Id="41" Param0="u16ObjectIndexInclOffset" Level="Verbose">The optional/conditional entriy 0x{0:X4}.35is defined as a padding entry.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>u16DataType</Value1>
							<Value2>0</Value2>
							<GotoStep>EndSi35</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="HandleNotExistingSi35">
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="42" Param0="u16ObjectIndexInclOffset" Level="Output">The optional/conditional entry 0x{0:X4}.35 is not defined.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>EndSi35</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CallSi35CheckEntryDescription">
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"online"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>35</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>"Offset Time"</Parameter>
						<Parameter>5</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>null</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>8</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>true</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="EndSi35"></TestStep>
				<TestStep Name="StartSi36">
					<Description Id="43" Level="Output">Start validate SubIndex36</Description>
					<WriteLine Id="44" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : Subindex '0x{0:X}.36'</WriteLine>
				</TestStep>
				<TestStep Name="SetSi36MandatoryIndication">
					<SetVariable Target="bObjectEntryIsMandatory">true</SetVariable>
					<WriteLine Id="45" Param0="u16ObjectIndexInclOffset" Level="Verbose">0x{0:X4}.36 'Process Data In Length' shall be available</WriteLine>
				</TestStep>
				<TestStep Name="CallSi36CheckEntryDescription">
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"online"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>36</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>"Process Data In Length"</Parameter>
						<Parameter>5</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>null</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>8</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>true</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="EndSi36"></TestStep>
				<TestStep Name="StartSi37">
					<Description Id="46" Level="Output">Start validate SubIndex37</Description>
					<WriteLine Id="47" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : Subindex '0x{0:X}.37'</WriteLine>
				</TestStep>
				<TestStep Name="SetSi37MandatoryIndication">
					<SetVariable Target="bObjectEntryIsMandatory">true</SetVariable>
					<WriteLine Id="48" Param0="u16ObjectIndexInclOffset" Level="Verbose">0x{0:X4}.37 'Process Data Out Length' shall be available</WriteLine>
				</TestStep>
				<TestStep Name="CallSi37CheckEntryDescription">
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"online"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>37</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>"Process Data Out Length"</Parameter>
						<Parameter>5</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>null</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>8</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>true</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="EndSi37"></TestStep>
				<TestStep Name="StartSi38">
					<Description Id="49" Level="Output">Start validate SubIndex38</Description>
					<WriteLine Id="50" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : Subindex '0x{0:X}.38'</WriteLine>
				</TestStep>
				<TestStep Name="SetSi38MandatoryIndication">
					<SetVariable Target="bObjectEntryIsMandatory">false</SetVariable>
					<WriteLine Id="51" Param0="u16ObjectIndexInclOffset" Level="Verbose">0x{0:X4}.38 may be available</WriteLine>
				</TestStep>
				<TestStep Name="CheckIfSi38Exists">
					<GetObjectDescription SourceDictionary="odDeviceObjectdictionary" Index="u16ObjectIndexInclOffset" SubIndex="38">
						<Type>u16DataType</Type>
					</GetObjectDescription>
					<GotoOnFailure>HandleNotExistingSi38</GotoOnFailure>
				</TestStep>
				<TestStep>
					<Compare>
						<NotEqual>
							<Value1>u16DataType</Value1>
							<Value2>0</Value2>
							<GotoStep>CallSi38CheckEntryDescription</GotoStep>
						</NotEqual>
					</Compare>
					<Compare>
						<Equal>
							<Value1>u16DataType</Value1>
							<Value2>0</Value2>
							<WriteLine Id="52" Param0="u16ObjectIndexInclOffset" Level="Verbose">The optional/conditional entriy 0x{0:X4}.38is defined as a padding entry.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>u16DataType</Value1>
							<Value2>0</Value2>
							<GotoStep>EndSi38</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="HandleNotExistingSi38">
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="53" Param0="u16ObjectIndexInclOffset" Level="Output">The optional/conditional entry 0x{0:X4}.38 is not defined.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>EndSi38</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CallSi38CheckEntryDescription">
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"online"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>38</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>null</Parameter>
						<Parameter>6</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>null</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>16</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>true</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="EndSi38"></TestStep>
				<TestStep Name="StartSi39">
					<Description Id="54" Level="Output">Start validate SubIndex39</Description>
					<WriteLine Id="55" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : Subindex '0x{0:X}.39'</WriteLine>
				</TestStep>
				<TestStep Name="SetSi39MandatoryIndication">
					<SetVariable Target="bObjectEntryIsMandatory">false</SetVariable>
					<WriteLine Id="56" Param0="u16ObjectIndexInclOffset" Level="Verbose">0x{0:X4}.39 may be available</WriteLine>
				</TestStep>
				<TestStep Name="CheckIfSi39Exists">
					<GetObjectDescription SourceDictionary="odDeviceObjectdictionary" Index="u16ObjectIndexInclOffset" SubIndex="39">
						<Type>u16DataType</Type>
					</GetObjectDescription>
					<GotoOnFailure>HandleNotExistingSi39</GotoOnFailure>
				</TestStep>
				<TestStep>
					<Compare>
						<NotEqual>
							<Value1>u16DataType</Value1>
							<Value2>0</Value2>
							<GotoStep>CallSi39CheckEntryDescription</GotoStep>
						</NotEqual>
					</Compare>
					<Compare>
						<Equal>
							<Value1>u16DataType</Value1>
							<Value2>0</Value2>
							<WriteLine Id="57" Param0="u16ObjectIndexInclOffset" Level="Verbose">The optional/conditional entriy 0x{0:X4}.39is defined as a padding entry.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>u16DataType</Value1>
							<Value2>0</Value2>
							<GotoStep>EndSi39</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="HandleNotExistingSi39">
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="58" Param0="u16ObjectIndexInclOffset" Level="Output">The optional/conditional entry 0x{0:X4}.39 is not defined.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>EndSi39</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CallSi39CheckEntryDescription">
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"online"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>39</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>null</Parameter>
						<Parameter>6</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>null</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>16</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>true</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="EndSi39"></TestStep>
				<TestStep Name="CheckReservedEntryRange_40_to_255">
					<Description Id="59" Level="Output">Start check reserved entry range 40 to 255</Description>
					<CallTestFunction Name="CheckReservedEntryRange">
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>40</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>odDeviceObjectdictionary</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="ProfileLoopEnd">
					<Compare>
						<Equal>
							<Value1>bAtLeastOneModuleMatch</Value1>
							<Value2>false</Value2>
							<GotoStep>HandleAbortTestCaseOnFirstError</GotoStep>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>ProfileLoopIncrement</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="HandleAbortTestCaseOnFirstError">
					<Compare>
						<Equal>
							<Value1>bAbortTestCaseOnFirstError</Value1>
							<Value2>false</Value2>
							<GotoStep>ProfileLoopIncrement</GotoStep>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>strResult</Value1>
							<Value2>EmptyString</Value2>
							<GotoStep>ProfileLoopIncrement</GotoStep>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="60" Level="Output">Object verification for all following modules abort because an error was already detected for the current module.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>END</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="ProfileLoopIncrement">
					<SetVariable Target="u32ProfileCounter">u32ProfileCounter + 1</SetVariable>
					<Compare>
						<Greater>
							<Value1>u32CurrentProfilesLength</Value1>
							<Value2>u32ProfileCounter</Value2>
							<GotoStep>ProfileLoopStart</GotoStep>
						</Greater>
					</Compare>
				</TestStep>
				<TestStep Name="END">
					<Compare>
						<NotEqual>
							<Value1>bAtLeastOneModuleMatch</Value1>
							<Value2>true</Value2>
							<SkipCase Id="61">SKIP TEST</SkipCase>
						</NotEqual>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bDEBUG</Value1>
							<Value2>true</Value2>
							<WriteLine Id="62" Param0="strResult" Level="Verbose">DEBUG | Result : '{0}'.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>strResult</Value1>
							<Value2>EmptyString</Value2>
							<ReturnSuccess Id="63">Test succeed</ReturnSuccess>
						</Equal>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>strResult</Value1>
							<Value2>EmptyString</Value2>
							<RaiseError Id="64"></RaiseError>
						</NotEqual>
					</Compare>
				</TestStep>
			</TestCase>
			<TestCase Name="offline | 0x9001 (Serial number)" CaseId="3">
				<?MAX_OUTPUT_ID 27?>
				<Description>
					<PreCondition>- The device profile is 5001
- The module profile is 6220
- The submodule profile is 0</PreCondition>
					<Action>- Iterate over all offline defined modules/channels and if the PreCondition matches the following operations are done:
- Get the offline description of object 0x9001(+module specific offset) 'Serial number' and all entries
 Check:
    (Name)
    BitSize
    DataType
    Rx / Tx mappable
    Default Data
    MinData
    Flags       </Action>
					<PostCondition>Error if
- mandatory object / entry is not defined
- an optional object exists and the entries are invalid
- Object / entry description does not match with the specification</PostCondition>
					<ProposalForSolution>- Define the missing objects
- correct object / entry description</ProposalForSolution>
					<References>
						<Reference Specification="ETG.5001.6220"></Reference>
					</References>
					<Mandatory>true</Mandatory>
				</Description>
				<TestStep Name="InitResult">
					<SetVariable Target="strResult">EmptyString</SetVariable>
				</TestStep>
				<TestStep Name="CheckIfOfflineOdAvailable">
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Mailbox</Value1>
							<Value2>false</Value2>
							<SkipCase Id="0">DuT does not support mailbox.</SkipCase>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Mailbox.CoE</Value1>
							<Value2>false</Value2>
							<SkipCase Id="1">DuT does not support CoE.</SkipCase>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep>
					<GetObjectDictionary Target="odDeviceObjectdictionary">
						<DictionaryType>Offline</DictionaryType>
					</GetObjectDictionary>
					<SkipOnFailure Id="2">No offline object dictionary defined.</SkipOnFailure>
				</TestStep>
				<TestStep>
					<GetObjectList Count="u32Tmp" Target="odDeviceObjectdictionaryList" SourceDict="odDeviceObjectdictionary"></GetObjectList>
					<Compare>
						<Equal>
							<Value1>u32Tmp</Value1>
							<Value2>0</Value2>
							<SkipCase Id="3">No offline object dictionary defined.</SkipCase>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="InitAtLeastOneProfileMatch">
					<SetVariable Target="bAtLeastOneModuleMatch">false</SetVariable>
				</TestStep>
				<TestStep Name="GetCurrentProfileList">
					<CallTestFunction Name="GetCurrentProfileList">
						<Parameter>"offline"</Parameter>
						<Parameter>"SafeOP"</Parameter>
						<OutParameter>arrCurrentProfiles</OutParameter>
					</CallTestFunction>
				</TestStep>
				<TestStep Name="InitProfileLoopCounter">
					<SetVariable Target="u32ProfileCounter">0</SetVariable>
				</TestStep>
				<TestStep Name="GetProfileArrayLength">
					<SizeOf UInt32Var="u32CurrentProfilesLength">arrCurrentProfiles</SizeOf>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="4" Param0="u32CurrentProfilesLength" Level="Verbose">'{0}' Profile(s) defined offline.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>u32CurrentProfilesLength</Value1>
							<Value2>0</Value2>
							<SkipCase Id="5">Skip case | no profile defined.</SkipCase>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="ProfileLoopStart">
					<GetArrayItem SourceArray="arrCurrentProfiles" Target="strTmpString" Index="u32ProfileCounter"></GetArrayItem>
				</TestStep>
				<TestStep Name="CheckProfileInformationString">
					<Compare>
						<Equal>
							<Value1>strTmpString</Value1>
							<Value2>null</Value2>
							<RaiseError Id="6" Param0="u32ProfileCounter">Profile Info element [{0}] is null.</RaiseError>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>strTmpString</Value1>
							<Value2>EmptyString</Value2>
							<RaiseError Id="7" Param0="u32ProfileCounter">Profile Info element [{0}] is an empty string.</RaiseError>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="GetDeviceProfile">
					<CallTestFunction Name="GetDeviceProfile">
						<Parameter>strTmpString</Parameter>
						<OutParameter>uint16CurDeviceProfile</OutParameter>
					</CallTestFunction>
				</TestStep>
				<TestStep Name="GetModuleProfile">
					<CallTestFunction Name="GetModuleProfile">
						<Parameter>strTmpString</Parameter>
						<OutParameter>uint16CurModuleProfile</OutParameter>
					</CallTestFunction>
				</TestStep>
				<TestStep Name="GetSubModuleProfile">
					<CallTestFunction Name="GetSubModuleProfile">
						<Parameter>strTmpString</Parameter>
						<OutParameter>uint16CurSubModuleProfile</OutParameter>
					</CallTestFunction>
				</TestStep>
				<TestStep Name="DumpProfileInfo">
					<Description Id="8" Param0="uint16CurDeviceProfile" Param1="uint16CurModuleProfile" Param2="uint16CurSubModuleProfile" Param3="u32ProfileCounter" Level="Output">Module[{3}] : DeviceProfile '{0}' ; ModuleProfile '{1}' ; SubModuleProfile '{2}'</Description>
					<Compare>
						<Equal>
							<Value1>bIgnoreProfileID</Value1>
							<Value2>true</Value2>
							<GotoStep>IndicateThatAtleastOneModuleMatch</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CompareDeviceProfile">
					<Compare>
						<NotEqual>
							<Value1>uint16CurDeviceProfile</Value1>
							<Value2>5001</Value2>
							<WriteLine Id="9" Param0="uint16CurDeviceProfile" Level="Output">Skip Profile  (Test Device Profile '5001' != Cur Device Profile '{0}')</WriteLine>
						</NotEqual>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>uint16CurDeviceProfile</Value1>
							<Value2>5001</Value2>
							<GotoStep>ProfileLoopEnd</GotoStep>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep Name="CompareModuleProfile">
					<Compare>
						<NotEqual>
							<Value1>uint16CurModuleProfile</Value1>
							<Value2>6220</Value2>
							<WriteLine Id="10" Param0="uint16CurModuleProfile" Level="Output">Skip Profile  (Test Module Profile '6220' != Cur Module Profile '{0}')</WriteLine>
						</NotEqual>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>uint16CurModuleProfile</Value1>
							<Value2>6220</Value2>
							<GotoStep>ProfileLoopEnd</GotoStep>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep Name="CompareSubModuleProfile">
					<Compare>
						<NotEqual>
							<Value1>uint16CurSubModuleProfile</Value1>
							<Value2>0</Value2>
							<WriteLine Id="11" Param0="uint16CurSubModuleProfile" Level="Output">Skip Profile  (Test SubModule Profile '0' != Cur SubModule Profile '{0}')</WriteLine>
						</NotEqual>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>uint16CurSubModuleProfile</Value1>
							<Value2>0</Value2>
							<GotoStep>ProfileLoopEnd</GotoStep>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep Name="IndicateThatAtleastOneModuleMatch">
					<SetVariable Target="bAtLeastOneModuleMatch">true</SetVariable>
				</TestStep>
				<TestStep Name="GetObjectIndexInlcOffset">
					<SetVariable Target="u16ObjectIndexInclOffset">#x9001 + (u32ProfileCounter * #x10)</SetVariable>
					<WriteLine Id="12" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : ObjectIndex '0x{0:X}'</WriteLine>
				</TestStep>
				<TestStep Name="SetObjectMandatoryIndication">
					<SetVariable Target="bObjectEntryIsMandatory">false</SetVariable>
					<WriteLine Id="13" Param0="u16ObjectIndexInclOffset" Level="Verbose">0x{0:X4}.0 'Serial number' may be available</WriteLine>
				</TestStep>
				<TestStep Name="LoadDeviceObjectDictionary">
					<Description Id="14" Level="Verbose">VerifyObject : Load 'offline' object dictionary for testing.</Description>
					<GetObjectDictionary Target="odDeviceObjectdictionary">
						<DictionaryType>Offline</DictionaryType>
					</GetObjectDictionary>
					<RaiseErrorOnFailure Id="15">VerifyObject : failed to load offline object dictionary.</RaiseErrorOnFailure>
				</TestStep>
				<TestStep Name="CheckIfObjectExists">
					<GetObjectDescription SourceDictionary="odDeviceObjectdictionary" Index="u16ObjectIndexInclOffset" SubIndex="-1"></GetObjectDescription>
					<GotoOnSuccess>CallCheckObjectDescription</GotoOnSuccess>
				</TestStep>
				<TestStep Name="HandleNotExistingObject">
					<Compare>
						<Equal>
							<Value1>bObjectEntryIsMandatory</Value1>
							<Value2>true</Value2>
							<GotoStep>CallCheckObjectDescription</GotoStep>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="16" Param0="u16ObjectIndexInclOffset" Level="Output">The optional/conditional object 0x{0:X4} 'Serial number' does not exists.)</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>ProfileLoopEnd</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CallCheckObjectDescription">
					<Description Id="17" Param0="u16ObjectIndexInclOffset" Level="Output">Verify the object description 0x{0:X4} 'Serial number'.</Description>
					<CallTestFunction Name="CheckObjectDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"offline"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>"Serial number"</Parameter>
						<Parameter>null</Parameter>
						<Parameter>7</Parameter>
						<Parameter>-1</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<GotoStep>ProfileLoopEnd</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="InitEntryBittOffset">
					<SetVariable Target="i32CurrentBitOffset">0</SetVariable>
				</TestStep>
				<TestStep Name="StartSi0">
					<Description Id="18" Level="Output">Start validate SubIndex0</Description>
					<WriteLine Id="19" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : Subindex '0x{0:X}.0'</WriteLine>
				</TestStep>
				<TestStep Name="SetSi0MandatoryIndication">
					<SetVariable Target="bObjectEntryIsMandatory">false</SetVariable>
					<WriteLine Id="20" Param0="u16ObjectIndexInclOffset" Level="Verbose">0x{0:X4}.0 'Serial number' may be available</WriteLine>
				</TestStep>
				<TestStep Name="CheckIfSi0Exists">
					<GetObjectDescription SourceDictionary="odDeviceObjectdictionary" Index="u16ObjectIndexInclOffset" SubIndex="0">
						<Type>u16DataType</Type>
					</GetObjectDescription>
					<GotoOnFailure>HandleNotExistingSi0</GotoOnFailure>
				</TestStep>
				<TestStep>
					<Compare>
						<NotEqual>
							<Value1>u16DataType</Value1>
							<Value2>0</Value2>
							<GotoStep>CallSi0CheckEntryDescription</GotoStep>
						</NotEqual>
					</Compare>
					<Compare>
						<Equal>
							<Value1>u16DataType</Value1>
							<Value2>0</Value2>
							<WriteLine Id="21" Param0="u16ObjectIndexInclOffset" Level="Verbose">The optional/conditional entriy 0x{0:X4}.0is defined as a padding entry.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>u16DataType</Value1>
							<Value2>0</Value2>
							<GotoStep>EndSi0</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="HandleNotExistingSi0">
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="22" Param0="u16ObjectIndexInclOffset" Level="Output">The optional/conditional entry 0x{0:X4}.0 is not defined.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>EndSi0</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CallSi0CheckEntryDescription">
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"offline"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>0</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>"Serial number"</Parameter>
						<Parameter>9</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>null</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>i32CurrentBitOffset</Parameter>
						<Parameter>true</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="EndSi0">
					<SetVariable Target="i32CurrentBitOffset">-1</SetVariable>
				</TestStep>
				<TestStep Name="ProfileLoopEnd">
					<Compare>
						<Equal>
							<Value1>bAtLeastOneModuleMatch</Value1>
							<Value2>false</Value2>
							<GotoStep>HandleAbortTestCaseOnFirstError</GotoStep>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>ProfileLoopIncrement</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="HandleAbortTestCaseOnFirstError">
					<Compare>
						<Equal>
							<Value1>bAbortTestCaseOnFirstError</Value1>
							<Value2>false</Value2>
							<GotoStep>ProfileLoopIncrement</GotoStep>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>strResult</Value1>
							<Value2>EmptyString</Value2>
							<GotoStep>ProfileLoopIncrement</GotoStep>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="23" Level="Output">Object verification for all following modules abort because an error was already detected for the current module.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>END</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="ProfileLoopIncrement">
					<SetVariable Target="u32ProfileCounter">u32ProfileCounter + 1</SetVariable>
					<Compare>
						<Greater>
							<Value1>u32CurrentProfilesLength</Value1>
							<Value2>u32ProfileCounter</Value2>
							<GotoStep>ProfileLoopStart</GotoStep>
						</Greater>
					</Compare>
				</TestStep>
				<TestStep Name="END">
					<Compare>
						<NotEqual>
							<Value1>bAtLeastOneModuleMatch</Value1>
							<Value2>true</Value2>
							<SkipCase Id="24">SKIP TEST</SkipCase>
						</NotEqual>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bDEBUG</Value1>
							<Value2>true</Value2>
							<WriteLine Id="25" Param0="strResult" Level="Verbose">DEBUG | Result : '{0}'.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>strResult</Value1>
							<Value2>EmptyString</Value2>
							<ReturnSuccess Id="26">Test succeed</ReturnSuccess>
						</Equal>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>strResult</Value1>
							<Value2>EmptyString</Value2>
							<RaiseError Id="27"></RaiseError>
						</NotEqual>
					</Compare>
				</TestStep>
			</TestCase>
			<TestCase Name="online | 0x9001 (Serial number)" CaseId="4">
				<?MAX_OUTPUT_ID 23?>
				<Description>
					<PreCondition>- The device profile is 5001
- The module profile is 6220
- The submodule profile is 0</PreCondition>
					<Action>- Iterate over all online defined modules/channels and if the PreCondition matches the following operations are done:
- Get the online description of object 0x9001(+module specific offset) 'Serial number' and all entries
 Check:
    (Name)
    BitSize
    DataType
    Rx / Tx mappable
    Default Data
    MinData
    Flags       </Action>
					<PostCondition>Error if
- mandatory object / entry is not defined
- an optional object exists and the entries are invalid
- Object / entry description does not match with the specification</PostCondition>
					<ProposalForSolution>- Define the missing objects
- correct object / entry description</ProposalForSolution>
					<References>
						<Reference Specification="ETG.5001.6220"></Reference>
					</References>
					<Mandatory>true</Mandatory>
				</Description>
				<TestStep Name="InitResult">
					<SetVariable Target="strResult">EmptyString</SetVariable>
				</TestStep>
				<TestStep Name="InitAtLeastOneProfileMatch">
					<SetVariable Target="bAtLeastOneModuleMatch">false</SetVariable>
				</TestStep>
				<TestStep Name="GetCurrentProfileList">
					<CallTestFunction Name="GetCurrentProfileList">
						<Parameter>"online"</Parameter>
						<Parameter>"SafeOP"</Parameter>
						<OutParameter>arrCurrentProfiles</OutParameter>
					</CallTestFunction>
				</TestStep>
				<TestStep Name="InitProfileLoopCounter">
					<SetVariable Target="u32ProfileCounter">0</SetVariable>
				</TestStep>
				<TestStep Name="GetProfileArrayLength">
					<SizeOf UInt32Var="u32CurrentProfilesLength">arrCurrentProfiles</SizeOf>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="0" Param0="u32CurrentProfilesLength" Level="Verbose">'{0}' Profile(s) defined online.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>u32CurrentProfilesLength</Value1>
							<Value2>0</Value2>
							<SkipCase Id="1">Skip case | no profile defined.</SkipCase>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="ProfileLoopStart">
					<GetArrayItem SourceArray="arrCurrentProfiles" Target="strTmpString" Index="u32ProfileCounter"></GetArrayItem>
				</TestStep>
				<TestStep Name="CheckProfileInformationString">
					<Compare>
						<Equal>
							<Value1>strTmpString</Value1>
							<Value2>null</Value2>
							<RaiseError Id="2" Param0="u32ProfileCounter">Profile Info element [{0}] is null.</RaiseError>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>strTmpString</Value1>
							<Value2>EmptyString</Value2>
							<RaiseError Id="3" Param0="u32ProfileCounter">Profile Info element [{0}] is an empty string.</RaiseError>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="GetDeviceProfile">
					<CallTestFunction Name="GetDeviceProfile">
						<Parameter>strTmpString</Parameter>
						<OutParameter>uint16CurDeviceProfile</OutParameter>
					</CallTestFunction>
				</TestStep>
				<TestStep Name="GetModuleProfile">
					<CallTestFunction Name="GetModuleProfile">
						<Parameter>strTmpString</Parameter>
						<OutParameter>uint16CurModuleProfile</OutParameter>
					</CallTestFunction>
				</TestStep>
				<TestStep Name="GetSubModuleProfile">
					<CallTestFunction Name="GetSubModuleProfile">
						<Parameter>strTmpString</Parameter>
						<OutParameter>uint16CurSubModuleProfile</OutParameter>
					</CallTestFunction>
				</TestStep>
				<TestStep Name="DumpProfileInfo">
					<Description Id="4" Param0="uint16CurDeviceProfile" Param1="uint16CurModuleProfile" Param2="uint16CurSubModuleProfile" Param3="u32ProfileCounter" Level="Output">Module[{3}] : DeviceProfile '{0}' ; ModuleProfile '{1}' ; SubModuleProfile '{2}'</Description>
					<Compare>
						<Equal>
							<Value1>bIgnoreProfileID</Value1>
							<Value2>true</Value2>
							<GotoStep>IndicateThatAtleastOneModuleMatch</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CompareDeviceProfile">
					<Compare>
						<NotEqual>
							<Value1>uint16CurDeviceProfile</Value1>
							<Value2>5001</Value2>
							<WriteLine Id="5" Param0="uint16CurDeviceProfile" Level="Output">Skip Profile  (Test Device Profile '5001' != Cur Device Profile '{0}')</WriteLine>
						</NotEqual>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>uint16CurDeviceProfile</Value1>
							<Value2>5001</Value2>
							<GotoStep>ProfileLoopEnd</GotoStep>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep Name="CompareModuleProfile">
					<Compare>
						<NotEqual>
							<Value1>uint16CurModuleProfile</Value1>
							<Value2>6220</Value2>
							<WriteLine Id="6" Param0="uint16CurModuleProfile" Level="Output">Skip Profile  (Test Module Profile '6220' != Cur Module Profile '{0}')</WriteLine>
						</NotEqual>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>uint16CurModuleProfile</Value1>
							<Value2>6220</Value2>
							<GotoStep>ProfileLoopEnd</GotoStep>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep Name="CompareSubModuleProfile">
					<Compare>
						<NotEqual>
							<Value1>uint16CurSubModuleProfile</Value1>
							<Value2>0</Value2>
							<WriteLine Id="7" Param0="uint16CurSubModuleProfile" Level="Output">Skip Profile  (Test SubModule Profile '0' != Cur SubModule Profile '{0}')</WriteLine>
						</NotEqual>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>uint16CurSubModuleProfile</Value1>
							<Value2>0</Value2>
							<GotoStep>ProfileLoopEnd</GotoStep>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep Name="IndicateThatAtleastOneModuleMatch">
					<SetVariable Target="bAtLeastOneModuleMatch">true</SetVariable>
				</TestStep>
				<TestStep Name="GetObjectIndexInlcOffset">
					<SetVariable Target="u16ObjectIndexInclOffset">#x9001 + (u32ProfileCounter * #x10)</SetVariable>
					<WriteLine Id="8" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : ObjectIndex '0x{0:X}'</WriteLine>
				</TestStep>
				<TestStep Name="SetObjectMandatoryIndication">
					<SetVariable Target="bObjectEntryIsMandatory">false</SetVariable>
					<WriteLine Id="9" Param0="u16ObjectIndexInclOffset" Level="Verbose">0x{0:X4}.0 'Serial number' may be available</WriteLine>
				</TestStep>
				<TestStep Name="LoadDeviceObjectDictionary">
					<Description Id="10" Level="Verbose">VerifyObject : Load 'online' object dictionary for testing.</Description>
					<GetObjectDictionary Target="odDeviceObjectdictionary">
						<DictionaryType>Online</DictionaryType>
					</GetObjectDictionary>
					<RaiseErrorOnFailure Id="11">VerifyObject : failed to load online object dictionary.</RaiseErrorOnFailure>
				</TestStep>
				<TestStep Name="CheckIfObjectExists">
					<GetObjectDescription SourceDictionary="odDeviceObjectdictionary" Index="u16ObjectIndexInclOffset" SubIndex="-1"></GetObjectDescription>
					<GotoOnSuccess>CallCheckObjectDescription</GotoOnSuccess>
				</TestStep>
				<TestStep Name="HandleNotExistingObject">
					<Compare>
						<Equal>
							<Value1>bObjectEntryIsMandatory</Value1>
							<Value2>true</Value2>
							<GotoStep>CallCheckObjectDescription</GotoStep>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="12" Param0="u16ObjectIndexInclOffset" Level="Output">The optional/conditional object 0x{0:X4} 'Serial number' does not exists.)</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>ProfileLoopEnd</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CallCheckObjectDescription">
					<Description Id="13" Param0="u16ObjectIndexInclOffset" Level="Output">Verify the object description 0x{0:X4} 'Serial number'.</Description>
					<CallTestFunction Name="CheckObjectDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"online"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>"Serial number"</Parameter>
						<Parameter>null</Parameter>
						<Parameter>7</Parameter>
						<Parameter>-1</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<GotoStep>ProfileLoopEnd</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="InitEntryBittOffset">
					<SetVariable Target="i32CurrentBitOffset">0</SetVariable>
				</TestStep>
				<TestStep Name="StartSi0">
					<Description Id="14" Level="Output">Start validate SubIndex0</Description>
					<WriteLine Id="15" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : Subindex '0x{0:X}.0'</WriteLine>
				</TestStep>
				<TestStep Name="SetSi0MandatoryIndication">
					<SetVariable Target="bObjectEntryIsMandatory">false</SetVariable>
					<WriteLine Id="16" Param0="u16ObjectIndexInclOffset" Level="Verbose">0x{0:X4}.0 'Serial number' may be available</WriteLine>
				</TestStep>
				<TestStep Name="CheckIfSi0Exists">
					<GetObjectDescription SourceDictionary="odDeviceObjectdictionary" Index="u16ObjectIndexInclOffset" SubIndex="0">
						<Type>u16DataType</Type>
					</GetObjectDescription>
					<GotoOnFailure>HandleNotExistingSi0</GotoOnFailure>
				</TestStep>
				<TestStep>
					<Compare>
						<NotEqual>
							<Value1>u16DataType</Value1>
							<Value2>0</Value2>
							<GotoStep>CallSi0CheckEntryDescription</GotoStep>
						</NotEqual>
					</Compare>
					<Compare>
						<Equal>
							<Value1>u16DataType</Value1>
							<Value2>0</Value2>
							<WriteLine Id="17" Param0="u16ObjectIndexInclOffset" Level="Verbose">The optional/conditional entriy 0x{0:X4}.0is defined as a padding entry.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>u16DataType</Value1>
							<Value2>0</Value2>
							<GotoStep>EndSi0</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="HandleNotExistingSi0">
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="18" Param0="u16ObjectIndexInclOffset" Level="Output">The optional/conditional entry 0x{0:X4}.0 is not defined.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>EndSi0</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CallSi0CheckEntryDescription">
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"online"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>0</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>"Serial number"</Parameter>
						<Parameter>9</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>null</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>i32CurrentBitOffset</Parameter>
						<Parameter>true</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="EndSi0">
					<SetVariable Target="i32CurrentBitOffset">-1</SetVariable>
				</TestStep>
				<TestStep Name="ProfileLoopEnd">
					<Compare>
						<Equal>
							<Value1>bAtLeastOneModuleMatch</Value1>
							<Value2>false</Value2>
							<GotoStep>HandleAbortTestCaseOnFirstError</GotoStep>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>ProfileLoopIncrement</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="HandleAbortTestCaseOnFirstError">
					<Compare>
						<Equal>
							<Value1>bAbortTestCaseOnFirstError</Value1>
							<Value2>false</Value2>
							<GotoStep>ProfileLoopIncrement</GotoStep>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>strResult</Value1>
							<Value2>EmptyString</Value2>
							<GotoStep>ProfileLoopIncrement</GotoStep>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="19" Level="Output">Object verification for all following modules abort because an error was already detected for the current module.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>END</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="ProfileLoopIncrement">
					<SetVariable Target="u32ProfileCounter">u32ProfileCounter + 1</SetVariable>
					<Compare>
						<Greater>
							<Value1>u32CurrentProfilesLength</Value1>
							<Value2>u32ProfileCounter</Value2>
							<GotoStep>ProfileLoopStart</GotoStep>
						</Greater>
					</Compare>
				</TestStep>
				<TestStep Name="END">
					<Compare>
						<NotEqual>
							<Value1>bAtLeastOneModuleMatch</Value1>
							<Value2>true</Value2>
							<SkipCase Id="20">SKIP TEST</SkipCase>
						</NotEqual>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bDEBUG</Value1>
							<Value2>true</Value2>
							<WriteLine Id="21" Param0="strResult" Level="Verbose">DEBUG | Result : '{0}'.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>strResult</Value1>
							<Value2>EmptyString</Value2>
							<ReturnSuccess Id="22">Test succeed</ReturnSuccess>
						</Equal>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>strResult</Value1>
							<Value2>EmptyString</Value2>
							<RaiseError Id="23"></RaiseError>
						</NotEqual>
					</Compare>
				</TestStep>
			</TestCase>
			<TestCase Name="offline | 0x9002 to 0x9007 (reserved range)" CaseId="5">
				<?MAX_OUTPUT_ID 21?>
				<Description>
					<PreCondition>- The device profile is 5001
- The module profile is 6220
- The submodule profile is 0</PreCondition>
					<Action>- Iterate over all offline defined modules/channels and if the PreCondition matches the check if one object in the reserved range is defined</Action>
					<PostCondition>- Error if at least one object is defined</PostCondition>
					<ProposalForSolution>- Remove the defined objects
</ProposalForSolution>
					<References>
						<Reference Specification="ETG.5001.6220"></Reference>
					</References>
					<Mandatory>true</Mandatory>
				</Description>
				<TestStep Name="InitResult">
					<SetVariable Target="strResult">EmptyString</SetVariable>
				</TestStep>
				<TestStep Name="CheckIfOfflineOdAvailable">
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Mailbox</Value1>
							<Value2>false</Value2>
							<SkipCase Id="0">DuT does not support mailbox.</SkipCase>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Mailbox.CoE</Value1>
							<Value2>false</Value2>
							<SkipCase Id="1">DuT does not support CoE.</SkipCase>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep>
					<GetObjectDictionary Target="odDeviceObjectdictionary">
						<DictionaryType>Offline</DictionaryType>
					</GetObjectDictionary>
					<SkipOnFailure Id="2">No offline object dictionary defined.</SkipOnFailure>
				</TestStep>
				<TestStep>
					<GetObjectList Count="u32Tmp" Target="odDeviceObjectdictionaryList" SourceDict="odDeviceObjectdictionary"></GetObjectList>
					<Compare>
						<Equal>
							<Value1>u32Tmp</Value1>
							<Value2>0</Value2>
							<SkipCase Id="3">No offline object dictionary defined.</SkipCase>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="InitAtLeastOneProfileMatch">
					<SetVariable Target="bAtLeastOneModuleMatch">false</SetVariable>
				</TestStep>
				<TestStep Name="GetCurrentProfileList">
					<CallTestFunction Name="GetCurrentProfileList">
						<Parameter>"offline"</Parameter>
						<Parameter>"SafeOP"</Parameter>
						<OutParameter>arrCurrentProfiles</OutParameter>
					</CallTestFunction>
				</TestStep>
				<TestStep Name="InitProfileLoopCounter">
					<SetVariable Target="u32ProfileCounter">0</SetVariable>
				</TestStep>
				<TestStep Name="GetProfileArrayLength">
					<SizeOf UInt32Var="u32CurrentProfilesLength">arrCurrentProfiles</SizeOf>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="4" Param0="u32CurrentProfilesLength" Level="Verbose">'{0}' Profile(s) defined offline.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>u32CurrentProfilesLength</Value1>
							<Value2>0</Value2>
							<SkipCase Id="5">Skip case | no profile defined.</SkipCase>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="ProfileLoopStart">
					<GetArrayItem SourceArray="arrCurrentProfiles" Target="strTmpString" Index="u32ProfileCounter"></GetArrayItem>
				</TestStep>
				<TestStep Name="CheckProfileInformationString">
					<Compare>
						<Equal>
							<Value1>strTmpString</Value1>
							<Value2>null</Value2>
							<RaiseError Id="6" Param0="u32ProfileCounter">Profile Info element [{0}] is null.</RaiseError>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>strTmpString</Value1>
							<Value2>EmptyString</Value2>
							<RaiseError Id="7" Param0="u32ProfileCounter">Profile Info element [{0}] is an empty string.</RaiseError>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="GetDeviceProfile">
					<CallTestFunction Name="GetDeviceProfile">
						<Parameter>strTmpString</Parameter>
						<OutParameter>uint16CurDeviceProfile</OutParameter>
					</CallTestFunction>
				</TestStep>
				<TestStep Name="GetModuleProfile">
					<CallTestFunction Name="GetModuleProfile">
						<Parameter>strTmpString</Parameter>
						<OutParameter>uint16CurModuleProfile</OutParameter>
					</CallTestFunction>
				</TestStep>
				<TestStep Name="GetSubModuleProfile">
					<CallTestFunction Name="GetSubModuleProfile">
						<Parameter>strTmpString</Parameter>
						<OutParameter>uint16CurSubModuleProfile</OutParameter>
					</CallTestFunction>
				</TestStep>
				<TestStep Name="DumpProfileInfo">
					<Description Id="8" Param0="uint16CurDeviceProfile" Param1="uint16CurModuleProfile" Param2="uint16CurSubModuleProfile" Param3="u32ProfileCounter" Level="Output">Module[{3}] : DeviceProfile '{0}' ; ModuleProfile '{1}' ; SubModuleProfile '{2}'</Description>
					<Compare>
						<Equal>
							<Value1>bIgnoreProfileID</Value1>
							<Value2>true</Value2>
							<GotoStep>IndicateThatAtleastOneModuleMatch</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CompareDeviceProfile">
					<Compare>
						<NotEqual>
							<Value1>uint16CurDeviceProfile</Value1>
							<Value2>5001</Value2>
							<WriteLine Id="9" Param0="uint16CurDeviceProfile" Level="Output">Skip Profile  (Test Device Profile '5001' != Cur Device Profile '{0}')</WriteLine>
						</NotEqual>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>uint16CurDeviceProfile</Value1>
							<Value2>5001</Value2>
							<GotoStep>ProfileLoopEnd</GotoStep>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep Name="CompareModuleProfile">
					<Compare>
						<NotEqual>
							<Value1>uint16CurModuleProfile</Value1>
							<Value2>6220</Value2>
							<WriteLine Id="10" Param0="uint16CurModuleProfile" Level="Output">Skip Profile  (Test Module Profile '6220' != Cur Module Profile '{0}')</WriteLine>
						</NotEqual>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>uint16CurModuleProfile</Value1>
							<Value2>6220</Value2>
							<GotoStep>ProfileLoopEnd</GotoStep>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep Name="CompareSubModuleProfile">
					<Compare>
						<NotEqual>
							<Value1>uint16CurSubModuleProfile</Value1>
							<Value2>0</Value2>
							<WriteLine Id="11" Param0="uint16CurSubModuleProfile" Level="Output">Skip Profile  (Test SubModule Profile '0' != Cur SubModule Profile '{0}')</WriteLine>
						</NotEqual>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>uint16CurSubModuleProfile</Value1>
							<Value2>0</Value2>
							<GotoStep>ProfileLoopEnd</GotoStep>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep Name="IndicateThatAtleastOneModuleMatch">
					<SetVariable Target="bAtLeastOneModuleMatch">true</SetVariable>
				</TestStep>
				<TestStep Name="GetFirstReservedObjectIndexInlcOffset">
					<SetVariable Target="u16ObjectIndexInclOffset">#x9002 + (u32ProfileCounter * #x10)</SetVariable>
					<WriteLine Id="12" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : First reserved object index '0x{0:X}'</WriteLine>
				</TestStep>
				<TestStep Name="GetNextDefinedObjectIndexInlcOffset">
					<SetVariable Target="u16NextDefObjectIndexInclOffset">#x9008 + (u32ProfileCounter * #x0010)</SetVariable>
					<WriteLine Id="13" Param0="u16NextDefObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : Next defined object index '0x{0:X}'</WriteLine>
				</TestStep>
				<TestStep Name="LoadDeviceObjectDictionary">
					<Description Id="14" Level="Verbose">VerifyObject : Load 'offline' object dictionary for testing.</Description>
					<GetObjectDictionary Target="odDeviceObjectdictionary">
						<DictionaryType>Offline</DictionaryType>
					</GetObjectDictionary>
					<RaiseErrorOnFailure Id="15">VerifyObject : failed to load offline object dictionary.</RaiseErrorOnFailure>
				</TestStep>
				<TestStep Name="CallCheckReservedObjectRange">
					<Description Id="16" Level="Verbose">VerifyObject : Load 'offline' object dictionary for testing.</Description>
					<CallTestFunction Name="CheckReservedObjectRange">
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>u16NextDefObjectIndexInclOffset</Parameter>
						<Parameter>odDeviceObjectdictionary</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<GotoStep>ProfileLoopEnd</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="ProfileLoopEnd">
					<Compare>
						<Equal>
							<Value1>bAtLeastOneModuleMatch</Value1>
							<Value2>false</Value2>
							<GotoStep>HandleAbortTestCaseOnFirstError</GotoStep>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>ProfileLoopIncrement</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="HandleAbortTestCaseOnFirstError">
					<Compare>
						<Equal>
							<Value1>bAbortTestCaseOnFirstError</Value1>
							<Value2>false</Value2>
							<GotoStep>ProfileLoopIncrement</GotoStep>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>strResult</Value1>
							<Value2>EmptyString</Value2>
							<GotoStep>ProfileLoopIncrement</GotoStep>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="17" Level="Output">Object verification for all following modules abort because an error was already detected for the current module.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>END</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="ProfileLoopIncrement">
					<SetVariable Target="u32ProfileCounter">u32ProfileCounter + 1</SetVariable>
					<Compare>
						<Greater>
							<Value1>u32CurrentProfilesLength</Value1>
							<Value2>u32ProfileCounter</Value2>
							<GotoStep>ProfileLoopStart</GotoStep>
						</Greater>
					</Compare>
				</TestStep>
				<TestStep Name="END">
					<Compare>
						<NotEqual>
							<Value1>bAtLeastOneModuleMatch</Value1>
							<Value2>true</Value2>
							<SkipCase Id="18">SKIP TEST</SkipCase>
						</NotEqual>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bDEBUG</Value1>
							<Value2>true</Value2>
							<WriteLine Id="19" Param0="strResult" Level="Verbose">DEBUG | Result : '{0}'.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>strResult</Value1>
							<Value2>EmptyString</Value2>
							<ReturnSuccess Id="20">Test succeed</ReturnSuccess>
						</Equal>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>strResult</Value1>
							<Value2>EmptyString</Value2>
							<RaiseError Id="21"></RaiseError>
						</NotEqual>
					</Compare>
				</TestStep>
			</TestCase>
			<TestCase Name="online | 0x9002 to 0x9007 (reserved range)" CaseId="6">
				<?MAX_OUTPUT_ID 17?>
				<Description>
					<PreCondition>- The device profile is 5001
- The module profile is 6220
- The submodule profile is 0</PreCondition>
					<Action>- Iterate over all online defined modules/channels and if the PreCondition matches the check if one object in the reserved range is defined</Action>
					<PostCondition>- Error if at least one object is defined</PostCondition>
					<ProposalForSolution>- Remove the defined objects
</ProposalForSolution>
					<References>
						<Reference Specification="ETG.5001.6220"></Reference>
					</References>
					<Mandatory>true</Mandatory>
				</Description>
				<TestStep Name="InitResult">
					<SetVariable Target="strResult">EmptyString</SetVariable>
				</TestStep>
				<TestStep Name="InitAtLeastOneProfileMatch">
					<SetVariable Target="bAtLeastOneModuleMatch">false</SetVariable>
				</TestStep>
				<TestStep Name="GetCurrentProfileList">
					<CallTestFunction Name="GetCurrentProfileList">
						<Parameter>"online"</Parameter>
						<Parameter>"SafeOP"</Parameter>
						<OutParameter>arrCurrentProfiles</OutParameter>
					</CallTestFunction>
				</TestStep>
				<TestStep Name="InitProfileLoopCounter">
					<SetVariable Target="u32ProfileCounter">0</SetVariable>
				</TestStep>
				<TestStep Name="GetProfileArrayLength">
					<SizeOf UInt32Var="u32CurrentProfilesLength">arrCurrentProfiles</SizeOf>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="0" Param0="u32CurrentProfilesLength" Level="Verbose">'{0}' Profile(s) defined online.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>u32CurrentProfilesLength</Value1>
							<Value2>0</Value2>
							<SkipCase Id="1">Skip case | no profile defined.</SkipCase>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="ProfileLoopStart">
					<GetArrayItem SourceArray="arrCurrentProfiles" Target="strTmpString" Index="u32ProfileCounter"></GetArrayItem>
				</TestStep>
				<TestStep Name="CheckProfileInformationString">
					<Compare>
						<Equal>
							<Value1>strTmpString</Value1>
							<Value2>null</Value2>
							<RaiseError Id="2" Param0="u32ProfileCounter">Profile Info element [{0}] is null.</RaiseError>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>strTmpString</Value1>
							<Value2>EmptyString</Value2>
							<RaiseError Id="3" Param0="u32ProfileCounter">Profile Info element [{0}] is an empty string.</RaiseError>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="GetDeviceProfile">
					<CallTestFunction Name="GetDeviceProfile">
						<Parameter>strTmpString</Parameter>
						<OutParameter>uint16CurDeviceProfile</OutParameter>
					</CallTestFunction>
				</TestStep>
				<TestStep Name="GetModuleProfile">
					<CallTestFunction Name="GetModuleProfile">
						<Parameter>strTmpString</Parameter>
						<OutParameter>uint16CurModuleProfile</OutParameter>
					</CallTestFunction>
				</TestStep>
				<TestStep Name="GetSubModuleProfile">
					<CallTestFunction Name="GetSubModuleProfile">
						<Parameter>strTmpString</Parameter>
						<OutParameter>uint16CurSubModuleProfile</OutParameter>
					</CallTestFunction>
				</TestStep>
				<TestStep Name="DumpProfileInfo">
					<Description Id="4" Param0="uint16CurDeviceProfile" Param1="uint16CurModuleProfile" Param2="uint16CurSubModuleProfile" Param3="u32ProfileCounter" Level="Output">Module[{3}] : DeviceProfile '{0}' ; ModuleProfile '{1}' ; SubModuleProfile '{2}'</Description>
					<Compare>
						<Equal>
							<Value1>bIgnoreProfileID</Value1>
							<Value2>true</Value2>
							<GotoStep>IndicateThatAtleastOneModuleMatch</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CompareDeviceProfile">
					<Compare>
						<NotEqual>
							<Value1>uint16CurDeviceProfile</Value1>
							<Value2>5001</Value2>
							<WriteLine Id="5" Param0="uint16CurDeviceProfile" Level="Output">Skip Profile  (Test Device Profile '5001' != Cur Device Profile '{0}')</WriteLine>
						</NotEqual>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>uint16CurDeviceProfile</Value1>
							<Value2>5001</Value2>
							<GotoStep>ProfileLoopEnd</GotoStep>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep Name="CompareModuleProfile">
					<Compare>
						<NotEqual>
							<Value1>uint16CurModuleProfile</Value1>
							<Value2>6220</Value2>
							<WriteLine Id="6" Param0="uint16CurModuleProfile" Level="Output">Skip Profile  (Test Module Profile '6220' != Cur Module Profile '{0}')</WriteLine>
						</NotEqual>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>uint16CurModuleProfile</Value1>
							<Value2>6220</Value2>
							<GotoStep>ProfileLoopEnd</GotoStep>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep Name="CompareSubModuleProfile">
					<Compare>
						<NotEqual>
							<Value1>uint16CurSubModuleProfile</Value1>
							<Value2>0</Value2>
							<WriteLine Id="7" Param0="uint16CurSubModuleProfile" Level="Output">Skip Profile  (Test SubModule Profile '0' != Cur SubModule Profile '{0}')</WriteLine>
						</NotEqual>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>uint16CurSubModuleProfile</Value1>
							<Value2>0</Value2>
							<GotoStep>ProfileLoopEnd</GotoStep>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep Name="IndicateThatAtleastOneModuleMatch">
					<SetVariable Target="bAtLeastOneModuleMatch">true</SetVariable>
				</TestStep>
				<TestStep Name="GetFirstReservedObjectIndexInlcOffset">
					<SetVariable Target="u16ObjectIndexInclOffset">#x9002 + (u32ProfileCounter * #x10)</SetVariable>
					<WriteLine Id="8" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : First reserved object index '0x{0:X}'</WriteLine>
				</TestStep>
				<TestStep Name="GetNextDefinedObjectIndexInlcOffset">
					<SetVariable Target="u16NextDefObjectIndexInclOffset">#x9008 + (u32ProfileCounter * #x0010)</SetVariable>
					<WriteLine Id="9" Param0="u16NextDefObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : Next defined object index '0x{0:X}'</WriteLine>
				</TestStep>
				<TestStep Name="LoadDeviceObjectDictionary">
					<Description Id="10" Level="Verbose">VerifyObject : Load 'online' object dictionary for testing.</Description>
					<GetObjectDictionary Target="odDeviceObjectdictionary">
						<DictionaryType>Online</DictionaryType>
					</GetObjectDictionary>
					<RaiseErrorOnFailure Id="11">VerifyObject : failed to load online object dictionary.</RaiseErrorOnFailure>
				</TestStep>
				<TestStep Name="CallCheckReservedObjectRange">
					<Description Id="12" Level="Verbose">VerifyObject : Load 'online' object dictionary for testing.</Description>
					<CallTestFunction Name="CheckReservedObjectRange">
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>u16NextDefObjectIndexInclOffset</Parameter>
						<Parameter>odDeviceObjectdictionary</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<GotoStep>ProfileLoopEnd</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="ProfileLoopEnd">
					<Compare>
						<Equal>
							<Value1>bAtLeastOneModuleMatch</Value1>
							<Value2>false</Value2>
							<GotoStep>HandleAbortTestCaseOnFirstError</GotoStep>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>ProfileLoopIncrement</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="HandleAbortTestCaseOnFirstError">
					<Compare>
						<Equal>
							<Value1>bAbortTestCaseOnFirstError</Value1>
							<Value2>false</Value2>
							<GotoStep>ProfileLoopIncrement</GotoStep>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>strResult</Value1>
							<Value2>EmptyString</Value2>
							<GotoStep>ProfileLoopIncrement</GotoStep>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="13" Level="Output">Object verification for all following modules abort because an error was already detected for the current module.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>END</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="ProfileLoopIncrement">
					<SetVariable Target="u32ProfileCounter">u32ProfileCounter + 1</SetVariable>
					<Compare>
						<Greater>
							<Value1>u32CurrentProfilesLength</Value1>
							<Value2>u32ProfileCounter</Value2>
							<GotoStep>ProfileLoopStart</GotoStep>
						</Greater>
					</Compare>
				</TestStep>
				<TestStep Name="END">
					<Compare>
						<NotEqual>
							<Value1>bAtLeastOneModuleMatch</Value1>
							<Value2>true</Value2>
							<SkipCase Id="14">SKIP TEST</SkipCase>
						</NotEqual>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bDEBUG</Value1>
							<Value2>true</Value2>
							<WriteLine Id="15" Param0="strResult" Level="Verbose">DEBUG | Result : '{0}'.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>strResult</Value1>
							<Value2>EmptyString</Value2>
							<ReturnSuccess Id="16">Test succeed</ReturnSuccess>
						</Equal>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>strResult</Value1>
							<Value2>EmptyString</Value2>
							<RaiseError Id="17"></RaiseError>
						</NotEqual>
					</Compare>
				</TestStep>
			</TestCase>
		</TestGroup>
		<TestGroup Name="Verify objects 0xAnn0 - 0xAnn7 (Diagnosis Data of the Module)" GroupId="3">
			<TestCase Name="offline | 0xA000 (Diagnosis Data)" CaseId="1">
				<?MAX_OUTPUT_ID 34?>
				<Description>
					<PreCondition>- The device profile is 5001
- The module profile is 6220
- The submodule profile is 0</PreCondition>
					<Action>- Iterate over all offline defined modules/channels and if the PreCondition matches the following operations are done:
- Get the offline description of object 0xA000(+module specific offset) 'Diagnosis Data' and all entries
 Check:
    (Name)
    BitSize
    DataType
    Rx / Tx mappable
    Default Data
    MinData
    Flags       </Action>
					<PostCondition>Error if
- mandatory object / entry is not defined
- an optional object exists and the entries are invalid
- Object / entry description does not match with the specification</PostCondition>
					<ProposalForSolution>- Define the missing objects
- correct object / entry description</ProposalForSolution>
					<References>
						<Reference Specification="ETG.5001.6220"></Reference>
					</References>
					<Mandatory>true</Mandatory>
				</Description>
				<TestStep Name="InitResult">
					<SetVariable Target="strResult">EmptyString</SetVariable>
				</TestStep>
				<TestStep Name="CheckIfOfflineOdAvailable">
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Mailbox</Value1>
							<Value2>false</Value2>
							<SkipCase Id="0">DuT does not support mailbox.</SkipCase>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Mailbox.CoE</Value1>
							<Value2>false</Value2>
							<SkipCase Id="1">DuT does not support CoE.</SkipCase>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep>
					<GetObjectDictionary Target="odDeviceObjectdictionary">
						<DictionaryType>Offline</DictionaryType>
					</GetObjectDictionary>
					<SkipOnFailure Id="2">No offline object dictionary defined.</SkipOnFailure>
				</TestStep>
				<TestStep>
					<GetObjectList Count="u32Tmp" Target="odDeviceObjectdictionaryList" SourceDict="odDeviceObjectdictionary"></GetObjectList>
					<Compare>
						<Equal>
							<Value1>u32Tmp</Value1>
							<Value2>0</Value2>
							<SkipCase Id="3">No offline object dictionary defined.</SkipCase>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="InitAtLeastOneProfileMatch">
					<SetVariable Target="bAtLeastOneModuleMatch">false</SetVariable>
				</TestStep>
				<TestStep Name="GetCurrentProfileList">
					<CallTestFunction Name="GetCurrentProfileList">
						<Parameter>"offline"</Parameter>
						<Parameter>"SafeOP"</Parameter>
						<OutParameter>arrCurrentProfiles</OutParameter>
					</CallTestFunction>
				</TestStep>
				<TestStep Name="InitProfileLoopCounter">
					<SetVariable Target="u32ProfileCounter">0</SetVariable>
				</TestStep>
				<TestStep Name="GetProfileArrayLength">
					<SizeOf UInt32Var="u32CurrentProfilesLength">arrCurrentProfiles</SizeOf>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="4" Param0="u32CurrentProfilesLength" Level="Verbose">'{0}' Profile(s) defined offline.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>u32CurrentProfilesLength</Value1>
							<Value2>0</Value2>
							<SkipCase Id="5">Skip case | no profile defined.</SkipCase>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="ProfileLoopStart">
					<GetArrayItem SourceArray="arrCurrentProfiles" Target="strTmpString" Index="u32ProfileCounter"></GetArrayItem>
				</TestStep>
				<TestStep Name="CheckProfileInformationString">
					<Compare>
						<Equal>
							<Value1>strTmpString</Value1>
							<Value2>null</Value2>
							<RaiseError Id="6" Param0="u32ProfileCounter">Profile Info element [{0}] is null.</RaiseError>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>strTmpString</Value1>
							<Value2>EmptyString</Value2>
							<RaiseError Id="7" Param0="u32ProfileCounter">Profile Info element [{0}] is an empty string.</RaiseError>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="GetDeviceProfile">
					<CallTestFunction Name="GetDeviceProfile">
						<Parameter>strTmpString</Parameter>
						<OutParameter>uint16CurDeviceProfile</OutParameter>
					</CallTestFunction>
				</TestStep>
				<TestStep Name="GetModuleProfile">
					<CallTestFunction Name="GetModuleProfile">
						<Parameter>strTmpString</Parameter>
						<OutParameter>uint16CurModuleProfile</OutParameter>
					</CallTestFunction>
				</TestStep>
				<TestStep Name="GetSubModuleProfile">
					<CallTestFunction Name="GetSubModuleProfile">
						<Parameter>strTmpString</Parameter>
						<OutParameter>uint16CurSubModuleProfile</OutParameter>
					</CallTestFunction>
				</TestStep>
				<TestStep Name="DumpProfileInfo">
					<Description Id="8" Param0="uint16CurDeviceProfile" Param1="uint16CurModuleProfile" Param2="uint16CurSubModuleProfile" Param3="u32ProfileCounter" Level="Output">Module[{3}] : DeviceProfile '{0}' ; ModuleProfile '{1}' ; SubModuleProfile '{2}'</Description>
					<Compare>
						<Equal>
							<Value1>bIgnoreProfileID</Value1>
							<Value2>true</Value2>
							<GotoStep>IndicateThatAtleastOneModuleMatch</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CompareDeviceProfile">
					<Compare>
						<NotEqual>
							<Value1>uint16CurDeviceProfile</Value1>
							<Value2>5001</Value2>
							<WriteLine Id="9" Param0="uint16CurDeviceProfile" Level="Output">Skip Profile  (Test Device Profile '5001' != Cur Device Profile '{0}')</WriteLine>
						</NotEqual>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>uint16CurDeviceProfile</Value1>
							<Value2>5001</Value2>
							<GotoStep>ProfileLoopEnd</GotoStep>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep Name="CompareModuleProfile">
					<Compare>
						<NotEqual>
							<Value1>uint16CurModuleProfile</Value1>
							<Value2>6220</Value2>
							<WriteLine Id="10" Param0="uint16CurModuleProfile" Level="Output">Skip Profile  (Test Module Profile '6220' != Cur Module Profile '{0}')</WriteLine>
						</NotEqual>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>uint16CurModuleProfile</Value1>
							<Value2>6220</Value2>
							<GotoStep>ProfileLoopEnd</GotoStep>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep Name="CompareSubModuleProfile">
					<Compare>
						<NotEqual>
							<Value1>uint16CurSubModuleProfile</Value1>
							<Value2>0</Value2>
							<WriteLine Id="11" Param0="uint16CurSubModuleProfile" Level="Output">Skip Profile  (Test SubModule Profile '0' != Cur SubModule Profile '{0}')</WriteLine>
						</NotEqual>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>uint16CurSubModuleProfile</Value1>
							<Value2>0</Value2>
							<GotoStep>ProfileLoopEnd</GotoStep>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep Name="IndicateThatAtleastOneModuleMatch">
					<SetVariable Target="bAtLeastOneModuleMatch">true</SetVariable>
				</TestStep>
				<TestStep Name="GetObjectIndexInlcOffset">
					<SetVariable Target="u16ObjectIndexInclOffset">#xA000 + (u32ProfileCounter * #x10)</SetVariable>
					<WriteLine Id="12" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : ObjectIndex '0x{0:X}'</WriteLine>
				</TestStep>
				<TestStep Name="SetObjectMandatoryIndication">
					<SetVariable Target="bObjectEntryIsMandatory">false</SetVariable>
					<WriteLine Id="13" Param0="u16ObjectIndexInclOffset" Level="Verbose">0x{0:X4}.0 'Diagnosis Data' may be available</WriteLine>
				</TestStep>
				<TestStep Name="LoadDeviceObjectDictionary">
					<Description Id="14" Level="Verbose">VerifyObject : Load 'offline' object dictionary for testing.</Description>
					<GetObjectDictionary Target="odDeviceObjectdictionary">
						<DictionaryType>Offline</DictionaryType>
					</GetObjectDictionary>
					<RaiseErrorOnFailure Id="15">VerifyObject : failed to load offline object dictionary.</RaiseErrorOnFailure>
				</TestStep>
				<TestStep Name="CheckIfObjectExists">
					<GetObjectDescription SourceDictionary="odDeviceObjectdictionary" Index="u16ObjectIndexInclOffset" SubIndex="-1"></GetObjectDescription>
					<GotoOnSuccess>CallCheckObjectDescription</GotoOnSuccess>
				</TestStep>
				<TestStep Name="HandleNotExistingObject">
					<Compare>
						<Equal>
							<Value1>bObjectEntryIsMandatory</Value1>
							<Value2>true</Value2>
							<GotoStep>CallCheckObjectDescription</GotoStep>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="16" Param0="u16ObjectIndexInclOffset" Level="Output">The optional/conditional object 0x{0:X4} 'Diagnosis Data' does not exists.)</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>ProfileLoopEnd</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CallCheckObjectDescription">
					<Description Id="17" Param0="u16ObjectIndexInclOffset" Level="Output">Verify the object description 0x{0:X4} 'Diagnosis Data'.</Description>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<CallTestFunction Name="CreateAllowedNames">
								<Parameter>"Diagnosis Data" ; "IO Diag data Ch.{_M#_:d}"</Parameter>
								<Parameter>u16ObjectIndexInclOffset</Parameter>
								<Parameter>0</Parameter>
								<Parameter>u32ProfileCounter</Parameter>
								<OutParameter>arrAllowedNames</OutParameter>
							</CallTestFunction>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<CallTestFunction Name="CheckObjectDescription">
								<Parameter>odDeviceObjectdictionary</Parameter>
								<Parameter>"offline"</Parameter>
								<Parameter>u16ObjectIndexInclOffset</Parameter>
								<Parameter>false</Parameter>
								<Parameter>false</Parameter>
								<Parameter>arrAllowedNames</Parameter>
								<Parameter>null</Parameter>
								<Parameter>9</Parameter>
								<Parameter>-1</Parameter>
								<OutParameter>VerifyDescriptionError</OutParameter>
							</CallTestFunction>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<GotoStep>ProfileLoopEnd</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="InitEntryBittOffset">
					<SetVariable Target="i32CurrentBitOffset">0</SetVariable>
				</TestStep>
				<TestStep Name="StartSi0">
					<Description Id="18" Level="Output">Start validate SubIndex0</Description>
					<WriteLine Id="19" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : Subindex '0x{0:X}.0'</WriteLine>
				</TestStep>
				<TestStep Name="SetSi0MandatoryIndication">
					<SetVariable Target="bObjectEntryIsMandatory">false</SetVariable>
					<WriteLine Id="20" Param0="u16ObjectIndexInclOffset" Level="Verbose">0x{0:X4}.0 'Diagnosis Data' may be available</WriteLine>
				</TestStep>
				<TestStep Name="CallSi0CheckEntryDescription">
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"offline"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>0</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>null</Parameter>
						<Parameter>5</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>null</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>null</Parameter>
						<Parameter>null</Parameter>
						<Parameter>null</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>8</Parameter>
						<Parameter>i32CurrentBitOffset</Parameter>
						<Parameter>true</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="EndSi0">
					<SetVariable Target="i32CurrentBitOffset">16</SetVariable>
				</TestStep>
				<TestStep Name="StartSi1">
					<Description Id="21" Level="Output">Start validate SubIndex1</Description>
					<WriteLine Id="22" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : Subindex '0x{0:X}.1'</WriteLine>
				</TestStep>
				<TestStep Name="SetSi1MandatoryIndication">
					<SetVariable Target="bObjectEntryIsMandatory">false</SetVariable>
					<WriteLine Id="23" Param0="u16ObjectIndexInclOffset" Level="Verbose">0x{0:X4}.1 'IO-Link State' may be available</WriteLine>
				</TestStep>
				<TestStep Name="CheckIfSi1Exists">
					<GetObjectDescription SourceDictionary="odDeviceObjectdictionary" Index="u16ObjectIndexInclOffset" SubIndex="1">
						<Type>u16DataType</Type>
					</GetObjectDescription>
					<GotoOnFailure>HandleNotExistingSi1</GotoOnFailure>
				</TestStep>
				<TestStep>
					<Compare>
						<NotEqual>
							<Value1>u16DataType</Value1>
							<Value2>0</Value2>
							<GotoStep>CallSi1CheckEntryDescription</GotoStep>
						</NotEqual>
					</Compare>
					<Compare>
						<Equal>
							<Value1>u16DataType</Value1>
							<Value2>0</Value2>
							<WriteLine Id="24" Param0="u16ObjectIndexInclOffset" Level="Verbose">The optional/conditional entriy 0x{0:X4}.1is defined as a padding entry.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>u16DataType</Value1>
							<Value2>0</Value2>
							<GotoStep>EndSi1</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="HandleNotExistingSi1">
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="25" Param0="u16ObjectIndexInclOffset" Level="Output">The optional/conditional entry 0x{0:X4}.1 is not defined.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>EndSi1</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CallSi1CheckEntryDescription">
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"offline"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>1</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>"IO-Link State"</Parameter>
						<Parameter>5</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>null</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>8</Parameter>
						<Parameter>i32CurrentBitOffset</Parameter>
						<Parameter>true</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="EndSi1">
					<SetVariable Target="i32CurrentBitOffset">-1</SetVariable>
				</TestStep>
				<TestStep Name="StartSi2">
					<Description Id="26" Level="Output">Start validate SubIndex2</Description>
					<WriteLine Id="27" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : Subindex '0x{0:X}.2'</WriteLine>
				</TestStep>
				<TestStep Name="SetSi2MandatoryIndication">
					<SetVariable Target="bObjectEntryIsMandatory">true</SetVariable>
					<WriteLine Id="28" Param0="u16ObjectIndexInclOffset" Level="Verbose">0x{0:X4}.2 'Lost Frames' shall be available</WriteLine>
				</TestStep>
				<TestStep Name="CallSi2CheckEntryDescription">
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"offline"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>2</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>"Lost Frames"</Parameter>
						<Parameter>5</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>null</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>8</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>true</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="EndSi2"></TestStep>
				<TestStep Name="CheckReservedEntryRange_3_to_255">
					<Description Id="29" Level="Output">Start check reserved entry range 3 to 255</Description>
					<CallTestFunction Name="CheckReservedEntryRange">
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>3</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>odDeviceObjectdictionary</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="ProfileLoopEnd">
					<Compare>
						<Equal>
							<Value1>bAtLeastOneModuleMatch</Value1>
							<Value2>false</Value2>
							<GotoStep>HandleAbortTestCaseOnFirstError</GotoStep>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>ProfileLoopIncrement</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="HandleAbortTestCaseOnFirstError">
					<Compare>
						<Equal>
							<Value1>bAbortTestCaseOnFirstError</Value1>
							<Value2>false</Value2>
							<GotoStep>ProfileLoopIncrement</GotoStep>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>strResult</Value1>
							<Value2>EmptyString</Value2>
							<GotoStep>ProfileLoopIncrement</GotoStep>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="30" Level="Output">Object verification for all following modules abort because an error was already detected for the current module.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>END</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="ProfileLoopIncrement">
					<SetVariable Target="u32ProfileCounter">u32ProfileCounter + 1</SetVariable>
					<Compare>
						<Greater>
							<Value1>u32CurrentProfilesLength</Value1>
							<Value2>u32ProfileCounter</Value2>
							<GotoStep>ProfileLoopStart</GotoStep>
						</Greater>
					</Compare>
				</TestStep>
				<TestStep Name="END">
					<Compare>
						<NotEqual>
							<Value1>bAtLeastOneModuleMatch</Value1>
							<Value2>true</Value2>
							<SkipCase Id="31">SKIP TEST</SkipCase>
						</NotEqual>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bDEBUG</Value1>
							<Value2>true</Value2>
							<WriteLine Id="32" Param0="strResult" Level="Verbose">DEBUG | Result : '{0}'.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>strResult</Value1>
							<Value2>EmptyString</Value2>
							<ReturnSuccess Id="33">Test succeed</ReturnSuccess>
						</Equal>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>strResult</Value1>
							<Value2>EmptyString</Value2>
							<RaiseError Id="34"></RaiseError>
						</NotEqual>
					</Compare>
				</TestStep>
			</TestCase>
			<TestCase Name="online | 0xA000 (Diagnosis Data)" CaseId="2">
				<?MAX_OUTPUT_ID 30?>
				<Description>
					<PreCondition>- The device profile is 5001
- The module profile is 6220
- The submodule profile is 0</PreCondition>
					<Action>- Iterate over all online defined modules/channels and if the PreCondition matches the following operations are done:
- Get the online description of object 0xA000(+module specific offset) 'Diagnosis Data' and all entries
 Check:
    (Name)
    BitSize
    DataType
    Rx / Tx mappable
    Default Data
    MinData
    Flags       </Action>
					<PostCondition>Error if
- mandatory object / entry is not defined
- an optional object exists and the entries are invalid
- Object / entry description does not match with the specification</PostCondition>
					<ProposalForSolution>- Define the missing objects
- correct object / entry description</ProposalForSolution>
					<References>
						<Reference Specification="ETG.5001.6220"></Reference>
					</References>
					<Mandatory>true</Mandatory>
				</Description>
				<TestStep Name="InitResult">
					<SetVariable Target="strResult">EmptyString</SetVariable>
				</TestStep>
				<TestStep Name="InitAtLeastOneProfileMatch">
					<SetVariable Target="bAtLeastOneModuleMatch">false</SetVariable>
				</TestStep>
				<TestStep Name="GetCurrentProfileList">
					<CallTestFunction Name="GetCurrentProfileList">
						<Parameter>"online"</Parameter>
						<Parameter>"SafeOP"</Parameter>
						<OutParameter>arrCurrentProfiles</OutParameter>
					</CallTestFunction>
				</TestStep>
				<TestStep Name="InitProfileLoopCounter">
					<SetVariable Target="u32ProfileCounter">0</SetVariable>
				</TestStep>
				<TestStep Name="GetProfileArrayLength">
					<SizeOf UInt32Var="u32CurrentProfilesLength">arrCurrentProfiles</SizeOf>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="0" Param0="u32CurrentProfilesLength" Level="Verbose">'{0}' Profile(s) defined online.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>u32CurrentProfilesLength</Value1>
							<Value2>0</Value2>
							<SkipCase Id="1">Skip case | no profile defined.</SkipCase>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="ProfileLoopStart">
					<GetArrayItem SourceArray="arrCurrentProfiles" Target="strTmpString" Index="u32ProfileCounter"></GetArrayItem>
				</TestStep>
				<TestStep Name="CheckProfileInformationString">
					<Compare>
						<Equal>
							<Value1>strTmpString</Value1>
							<Value2>null</Value2>
							<RaiseError Id="2" Param0="u32ProfileCounter">Profile Info element [{0}] is null.</RaiseError>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>strTmpString</Value1>
							<Value2>EmptyString</Value2>
							<RaiseError Id="3" Param0="u32ProfileCounter">Profile Info element [{0}] is an empty string.</RaiseError>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="GetDeviceProfile">
					<CallTestFunction Name="GetDeviceProfile">
						<Parameter>strTmpString</Parameter>
						<OutParameter>uint16CurDeviceProfile</OutParameter>
					</CallTestFunction>
				</TestStep>
				<TestStep Name="GetModuleProfile">
					<CallTestFunction Name="GetModuleProfile">
						<Parameter>strTmpString</Parameter>
						<OutParameter>uint16CurModuleProfile</OutParameter>
					</CallTestFunction>
				</TestStep>
				<TestStep Name="GetSubModuleProfile">
					<CallTestFunction Name="GetSubModuleProfile">
						<Parameter>strTmpString</Parameter>
						<OutParameter>uint16CurSubModuleProfile</OutParameter>
					</CallTestFunction>
				</TestStep>
				<TestStep Name="DumpProfileInfo">
					<Description Id="4" Param0="uint16CurDeviceProfile" Param1="uint16CurModuleProfile" Param2="uint16CurSubModuleProfile" Param3="u32ProfileCounter" Level="Output">Module[{3}] : DeviceProfile '{0}' ; ModuleProfile '{1}' ; SubModuleProfile '{2}'</Description>
					<Compare>
						<Equal>
							<Value1>bIgnoreProfileID</Value1>
							<Value2>true</Value2>
							<GotoStep>IndicateThatAtleastOneModuleMatch</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CompareDeviceProfile">
					<Compare>
						<NotEqual>
							<Value1>uint16CurDeviceProfile</Value1>
							<Value2>5001</Value2>
							<WriteLine Id="5" Param0="uint16CurDeviceProfile" Level="Output">Skip Profile  (Test Device Profile '5001' != Cur Device Profile '{0}')</WriteLine>
						</NotEqual>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>uint16CurDeviceProfile</Value1>
							<Value2>5001</Value2>
							<GotoStep>ProfileLoopEnd</GotoStep>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep Name="CompareModuleProfile">
					<Compare>
						<NotEqual>
							<Value1>uint16CurModuleProfile</Value1>
							<Value2>6220</Value2>
							<WriteLine Id="6" Param0="uint16CurModuleProfile" Level="Output">Skip Profile  (Test Module Profile '6220' != Cur Module Profile '{0}')</WriteLine>
						</NotEqual>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>uint16CurModuleProfile</Value1>
							<Value2>6220</Value2>
							<GotoStep>ProfileLoopEnd</GotoStep>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep Name="CompareSubModuleProfile">
					<Compare>
						<NotEqual>
							<Value1>uint16CurSubModuleProfile</Value1>
							<Value2>0</Value2>
							<WriteLine Id="7" Param0="uint16CurSubModuleProfile" Level="Output">Skip Profile  (Test SubModule Profile '0' != Cur SubModule Profile '{0}')</WriteLine>
						</NotEqual>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>uint16CurSubModuleProfile</Value1>
							<Value2>0</Value2>
							<GotoStep>ProfileLoopEnd</GotoStep>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep Name="IndicateThatAtleastOneModuleMatch">
					<SetVariable Target="bAtLeastOneModuleMatch">true</SetVariable>
				</TestStep>
				<TestStep Name="GetObjectIndexInlcOffset">
					<SetVariable Target="u16ObjectIndexInclOffset">#xA000 + (u32ProfileCounter * #x10)</SetVariable>
					<WriteLine Id="8" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : ObjectIndex '0x{0:X}'</WriteLine>
				</TestStep>
				<TestStep Name="SetObjectMandatoryIndication">
					<SetVariable Target="bObjectEntryIsMandatory">false</SetVariable>
					<WriteLine Id="9" Param0="u16ObjectIndexInclOffset" Level="Verbose">0x{0:X4}.0 'Diagnosis Data' may be available</WriteLine>
				</TestStep>
				<TestStep Name="LoadDeviceObjectDictionary">
					<Description Id="10" Level="Verbose">VerifyObject : Load 'online' object dictionary for testing.</Description>
					<GetObjectDictionary Target="odDeviceObjectdictionary">
						<DictionaryType>Online</DictionaryType>
					</GetObjectDictionary>
					<RaiseErrorOnFailure Id="11">VerifyObject : failed to load online object dictionary.</RaiseErrorOnFailure>
				</TestStep>
				<TestStep Name="CheckIfObjectExists">
					<GetObjectDescription SourceDictionary="odDeviceObjectdictionary" Index="u16ObjectIndexInclOffset" SubIndex="-1"></GetObjectDescription>
					<GotoOnSuccess>CallCheckObjectDescription</GotoOnSuccess>
				</TestStep>
				<TestStep Name="HandleNotExistingObject">
					<Compare>
						<Equal>
							<Value1>bObjectEntryIsMandatory</Value1>
							<Value2>true</Value2>
							<GotoStep>CallCheckObjectDescription</GotoStep>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="12" Param0="u16ObjectIndexInclOffset" Level="Output">The optional/conditional object 0x{0:X4} 'Diagnosis Data' does not exists.)</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>ProfileLoopEnd</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CallCheckObjectDescription">
					<Description Id="13" Param0="u16ObjectIndexInclOffset" Level="Output">Verify the object description 0x{0:X4} 'Diagnosis Data'.</Description>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<CallTestFunction Name="CreateAllowedNames">
								<Parameter>"Diagnosis Data" ; "IO Diag data Ch.{_M#_:d}"</Parameter>
								<Parameter>u16ObjectIndexInclOffset</Parameter>
								<Parameter>0</Parameter>
								<Parameter>u32ProfileCounter</Parameter>
								<OutParameter>arrAllowedNames</OutParameter>
							</CallTestFunction>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<CallTestFunction Name="CheckObjectDescription">
								<Parameter>odDeviceObjectdictionary</Parameter>
								<Parameter>"online"</Parameter>
								<Parameter>u16ObjectIndexInclOffset</Parameter>
								<Parameter>false</Parameter>
								<Parameter>false</Parameter>
								<Parameter>arrAllowedNames</Parameter>
								<Parameter>null</Parameter>
								<Parameter>9</Parameter>
								<Parameter>-1</Parameter>
								<OutParameter>VerifyDescriptionError</OutParameter>
							</CallTestFunction>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<GotoStep>ProfileLoopEnd</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="InitEntryBittOffset">
					<SetVariable Target="i32CurrentBitOffset">0</SetVariable>
				</TestStep>
				<TestStep Name="StartSi0">
					<Description Id="14" Level="Output">Start validate SubIndex0</Description>
					<WriteLine Id="15" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : Subindex '0x{0:X}.0'</WriteLine>
				</TestStep>
				<TestStep Name="SetSi0MandatoryIndication">
					<SetVariable Target="bObjectEntryIsMandatory">false</SetVariable>
					<WriteLine Id="16" Param0="u16ObjectIndexInclOffset" Level="Verbose">0x{0:X4}.0 'Diagnosis Data' may be available</WriteLine>
				</TestStep>
				<TestStep Name="CallSi0CheckEntryDescription">
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"online"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>0</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>null</Parameter>
						<Parameter>5</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>null</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>null</Parameter>
						<Parameter>null</Parameter>
						<Parameter>null</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>8</Parameter>
						<Parameter>i32CurrentBitOffset</Parameter>
						<Parameter>true</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="EndSi0">
					<SetVariable Target="i32CurrentBitOffset">16</SetVariable>
				</TestStep>
				<TestStep Name="StartSi1">
					<Description Id="17" Level="Output">Start validate SubIndex1</Description>
					<WriteLine Id="18" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : Subindex '0x{0:X}.1'</WriteLine>
				</TestStep>
				<TestStep Name="SetSi1MandatoryIndication">
					<SetVariable Target="bObjectEntryIsMandatory">false</SetVariable>
					<WriteLine Id="19" Param0="u16ObjectIndexInclOffset" Level="Verbose">0x{0:X4}.1 'IO-Link State' may be available</WriteLine>
				</TestStep>
				<TestStep Name="CheckIfSi1Exists">
					<GetObjectDescription SourceDictionary="odDeviceObjectdictionary" Index="u16ObjectIndexInclOffset" SubIndex="1">
						<Type>u16DataType</Type>
					</GetObjectDescription>
					<GotoOnFailure>HandleNotExistingSi1</GotoOnFailure>
				</TestStep>
				<TestStep>
					<Compare>
						<NotEqual>
							<Value1>u16DataType</Value1>
							<Value2>0</Value2>
							<GotoStep>CallSi1CheckEntryDescription</GotoStep>
						</NotEqual>
					</Compare>
					<Compare>
						<Equal>
							<Value1>u16DataType</Value1>
							<Value2>0</Value2>
							<WriteLine Id="20" Param0="u16ObjectIndexInclOffset" Level="Verbose">The optional/conditional entriy 0x{0:X4}.1is defined as a padding entry.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>u16DataType</Value1>
							<Value2>0</Value2>
							<GotoStep>EndSi1</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="HandleNotExistingSi1">
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="21" Param0="u16ObjectIndexInclOffset" Level="Output">The optional/conditional entry 0x{0:X4}.1 is not defined.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>EndSi1</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CallSi1CheckEntryDescription">
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"online"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>1</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>"IO-Link State"</Parameter>
						<Parameter>5</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>null</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>8</Parameter>
						<Parameter>i32CurrentBitOffset</Parameter>
						<Parameter>true</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="EndSi1">
					<SetVariable Target="i32CurrentBitOffset">-1</SetVariable>
				</TestStep>
				<TestStep Name="StartSi2">
					<Description Id="22" Level="Output">Start validate SubIndex2</Description>
					<WriteLine Id="23" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : Subindex '0x{0:X}.2'</WriteLine>
				</TestStep>
				<TestStep Name="SetSi2MandatoryIndication">
					<SetVariable Target="bObjectEntryIsMandatory">true</SetVariable>
					<WriteLine Id="24" Param0="u16ObjectIndexInclOffset" Level="Verbose">0x{0:X4}.2 'Lost Frames' shall be available</WriteLine>
				</TestStep>
				<TestStep Name="CallSi2CheckEntryDescription">
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"online"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>2</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>"Lost Frames"</Parameter>
						<Parameter>5</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>null</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>8</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>true</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="EndSi2"></TestStep>
				<TestStep Name="CheckReservedEntryRange_3_to_255">
					<Description Id="25" Level="Output">Start check reserved entry range 3 to 255</Description>
					<CallTestFunction Name="CheckReservedEntryRange">
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>3</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>odDeviceObjectdictionary</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="ProfileLoopEnd">
					<Compare>
						<Equal>
							<Value1>bAtLeastOneModuleMatch</Value1>
							<Value2>false</Value2>
							<GotoStep>HandleAbortTestCaseOnFirstError</GotoStep>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>ProfileLoopIncrement</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="HandleAbortTestCaseOnFirstError">
					<Compare>
						<Equal>
							<Value1>bAbortTestCaseOnFirstError</Value1>
							<Value2>false</Value2>
							<GotoStep>ProfileLoopIncrement</GotoStep>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>strResult</Value1>
							<Value2>EmptyString</Value2>
							<GotoStep>ProfileLoopIncrement</GotoStep>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="26" Level="Output">Object verification for all following modules abort because an error was already detected for the current module.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>END</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="ProfileLoopIncrement">
					<SetVariable Target="u32ProfileCounter">u32ProfileCounter + 1</SetVariable>
					<Compare>
						<Greater>
							<Value1>u32CurrentProfilesLength</Value1>
							<Value2>u32ProfileCounter</Value2>
							<GotoStep>ProfileLoopStart</GotoStep>
						</Greater>
					</Compare>
				</TestStep>
				<TestStep Name="END">
					<Compare>
						<NotEqual>
							<Value1>bAtLeastOneModuleMatch</Value1>
							<Value2>true</Value2>
							<SkipCase Id="27">SKIP TEST</SkipCase>
						</NotEqual>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bDEBUG</Value1>
							<Value2>true</Value2>
							<WriteLine Id="28" Param0="strResult" Level="Verbose">DEBUG | Result : '{0}'.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>strResult</Value1>
							<Value2>EmptyString</Value2>
							<ReturnSuccess Id="29">Test succeed</ReturnSuccess>
						</Equal>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>strResult</Value1>
							<Value2>EmptyString</Value2>
							<RaiseError Id="30"></RaiseError>
						</NotEqual>
					</Compare>
				</TestStep>
			</TestCase>
			<TestCase Name="offline | 0xA001 to 0xA007 (reserved range)" CaseId="3">
				<?MAX_OUTPUT_ID 21?>
				<Description>
					<PreCondition>- The device profile is 5001
- The module profile is 6220
- The submodule profile is 0</PreCondition>
					<Action>- Iterate over all offline defined modules/channels and if the PreCondition matches the check if one object in the reserved range is defined</Action>
					<PostCondition>- Error if at least one object is defined</PostCondition>
					<ProposalForSolution>- Remove the defined objects
</ProposalForSolution>
					<References>
						<Reference Specification="ETG.5001.6220"></Reference>
					</References>
					<Mandatory>true</Mandatory>
				</Description>
				<TestStep Name="InitResult">
					<SetVariable Target="strResult">EmptyString</SetVariable>
				</TestStep>
				<TestStep Name="CheckIfOfflineOdAvailable">
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Mailbox</Value1>
							<Value2>false</Value2>
							<SkipCase Id="0">DuT does not support mailbox.</SkipCase>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Mailbox.CoE</Value1>
							<Value2>false</Value2>
							<SkipCase Id="1">DuT does not support CoE.</SkipCase>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep>
					<GetObjectDictionary Target="odDeviceObjectdictionary">
						<DictionaryType>Offline</DictionaryType>
					</GetObjectDictionary>
					<SkipOnFailure Id="2">No offline object dictionary defined.</SkipOnFailure>
				</TestStep>
				<TestStep>
					<GetObjectList Count="u32Tmp" Target="odDeviceObjectdictionaryList" SourceDict="odDeviceObjectdictionary"></GetObjectList>
					<Compare>
						<Equal>
							<Value1>u32Tmp</Value1>
							<Value2>0</Value2>
							<SkipCase Id="3">No offline object dictionary defined.</SkipCase>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="InitAtLeastOneProfileMatch">
					<SetVariable Target="bAtLeastOneModuleMatch">false</SetVariable>
				</TestStep>
				<TestStep Name="GetCurrentProfileList">
					<CallTestFunction Name="GetCurrentProfileList">
						<Parameter>"offline"</Parameter>
						<Parameter>"SafeOP"</Parameter>
						<OutParameter>arrCurrentProfiles</OutParameter>
					</CallTestFunction>
				</TestStep>
				<TestStep Name="InitProfileLoopCounter">
					<SetVariable Target="u32ProfileCounter">0</SetVariable>
				</TestStep>
				<TestStep Name="GetProfileArrayLength">
					<SizeOf UInt32Var="u32CurrentProfilesLength">arrCurrentProfiles</SizeOf>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="4" Param0="u32CurrentProfilesLength" Level="Verbose">'{0}' Profile(s) defined offline.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>u32CurrentProfilesLength</Value1>
							<Value2>0</Value2>
							<SkipCase Id="5">Skip case | no profile defined.</SkipCase>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="ProfileLoopStart">
					<GetArrayItem SourceArray="arrCurrentProfiles" Target="strTmpString" Index="u32ProfileCounter"></GetArrayItem>
				</TestStep>
				<TestStep Name="CheckProfileInformationString">
					<Compare>
						<Equal>
							<Value1>strTmpString</Value1>
							<Value2>null</Value2>
							<RaiseError Id="6" Param0="u32ProfileCounter">Profile Info element [{0}] is null.</RaiseError>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>strTmpString</Value1>
							<Value2>EmptyString</Value2>
							<RaiseError Id="7" Param0="u32ProfileCounter">Profile Info element [{0}] is an empty string.</RaiseError>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="GetDeviceProfile">
					<CallTestFunction Name="GetDeviceProfile">
						<Parameter>strTmpString</Parameter>
						<OutParameter>uint16CurDeviceProfile</OutParameter>
					</CallTestFunction>
				</TestStep>
				<TestStep Name="GetModuleProfile">
					<CallTestFunction Name="GetModuleProfile">
						<Parameter>strTmpString</Parameter>
						<OutParameter>uint16CurModuleProfile</OutParameter>
					</CallTestFunction>
				</TestStep>
				<TestStep Name="GetSubModuleProfile">
					<CallTestFunction Name="GetSubModuleProfile">
						<Parameter>strTmpString</Parameter>
						<OutParameter>uint16CurSubModuleProfile</OutParameter>
					</CallTestFunction>
				</TestStep>
				<TestStep Name="DumpProfileInfo">
					<Description Id="8" Param0="uint16CurDeviceProfile" Param1="uint16CurModuleProfile" Param2="uint16CurSubModuleProfile" Param3="u32ProfileCounter" Level="Output">Module[{3}] : DeviceProfile '{0}' ; ModuleProfile '{1}' ; SubModuleProfile '{2}'</Description>
					<Compare>
						<Equal>
							<Value1>bIgnoreProfileID</Value1>
							<Value2>true</Value2>
							<GotoStep>IndicateThatAtleastOneModuleMatch</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CompareDeviceProfile">
					<Compare>
						<NotEqual>
							<Value1>uint16CurDeviceProfile</Value1>
							<Value2>5001</Value2>
							<WriteLine Id="9" Param0="uint16CurDeviceProfile" Level="Output">Skip Profile  (Test Device Profile '5001' != Cur Device Profile '{0}')</WriteLine>
						</NotEqual>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>uint16CurDeviceProfile</Value1>
							<Value2>5001</Value2>
							<GotoStep>ProfileLoopEnd</GotoStep>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep Name="CompareModuleProfile">
					<Compare>
						<NotEqual>
							<Value1>uint16CurModuleProfile</Value1>
							<Value2>6220</Value2>
							<WriteLine Id="10" Param0="uint16CurModuleProfile" Level="Output">Skip Profile  (Test Module Profile '6220' != Cur Module Profile '{0}')</WriteLine>
						</NotEqual>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>uint16CurModuleProfile</Value1>
							<Value2>6220</Value2>
							<GotoStep>ProfileLoopEnd</GotoStep>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep Name="CompareSubModuleProfile">
					<Compare>
						<NotEqual>
							<Value1>uint16CurSubModuleProfile</Value1>
							<Value2>0</Value2>
							<WriteLine Id="11" Param0="uint16CurSubModuleProfile" Level="Output">Skip Profile  (Test SubModule Profile '0' != Cur SubModule Profile '{0}')</WriteLine>
						</NotEqual>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>uint16CurSubModuleProfile</Value1>
							<Value2>0</Value2>
							<GotoStep>ProfileLoopEnd</GotoStep>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep Name="IndicateThatAtleastOneModuleMatch">
					<SetVariable Target="bAtLeastOneModuleMatch">true</SetVariable>
				</TestStep>
				<TestStep Name="GetFirstReservedObjectIndexInlcOffset">
					<SetVariable Target="u16ObjectIndexInclOffset">#xA001 + (u32ProfileCounter * #x10)</SetVariable>
					<WriteLine Id="12" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : First reserved object index '0x{0:X}'</WriteLine>
				</TestStep>
				<TestStep Name="GetNextDefinedObjectIndexInlcOffset">
					<SetVariable Target="u16NextDefObjectIndexInclOffset">#xA008 + (u32ProfileCounter * #x0010)</SetVariable>
					<WriteLine Id="13" Param0="u16NextDefObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : Next defined object index '0x{0:X}'</WriteLine>
				</TestStep>
				<TestStep Name="LoadDeviceObjectDictionary">
					<Description Id="14" Level="Verbose">VerifyObject : Load 'offline' object dictionary for testing.</Description>
					<GetObjectDictionary Target="odDeviceObjectdictionary">
						<DictionaryType>Offline</DictionaryType>
					</GetObjectDictionary>
					<RaiseErrorOnFailure Id="15">VerifyObject : failed to load offline object dictionary.</RaiseErrorOnFailure>
				</TestStep>
				<TestStep Name="CallCheckReservedObjectRange">
					<Description Id="16" Level="Verbose">VerifyObject : Load 'offline' object dictionary for testing.</Description>
					<CallTestFunction Name="CheckReservedObjectRange">
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>u16NextDefObjectIndexInclOffset</Parameter>
						<Parameter>odDeviceObjectdictionary</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<GotoStep>ProfileLoopEnd</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="ProfileLoopEnd">
					<Compare>
						<Equal>
							<Value1>bAtLeastOneModuleMatch</Value1>
							<Value2>false</Value2>
							<GotoStep>HandleAbortTestCaseOnFirstError</GotoStep>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>ProfileLoopIncrement</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="HandleAbortTestCaseOnFirstError">
					<Compare>
						<Equal>
							<Value1>bAbortTestCaseOnFirstError</Value1>
							<Value2>false</Value2>
							<GotoStep>ProfileLoopIncrement</GotoStep>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>strResult</Value1>
							<Value2>EmptyString</Value2>
							<GotoStep>ProfileLoopIncrement</GotoStep>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="17" Level="Output">Object verification for all following modules abort because an error was already detected for the current module.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>END</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="ProfileLoopIncrement">
					<SetVariable Target="u32ProfileCounter">u32ProfileCounter + 1</SetVariable>
					<Compare>
						<Greater>
							<Value1>u32CurrentProfilesLength</Value1>
							<Value2>u32ProfileCounter</Value2>
							<GotoStep>ProfileLoopStart</GotoStep>
						</Greater>
					</Compare>
				</TestStep>
				<TestStep Name="END">
					<Compare>
						<NotEqual>
							<Value1>bAtLeastOneModuleMatch</Value1>
							<Value2>true</Value2>
							<SkipCase Id="18">SKIP TEST</SkipCase>
						</NotEqual>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bDEBUG</Value1>
							<Value2>true</Value2>
							<WriteLine Id="19" Param0="strResult" Level="Verbose">DEBUG | Result : '{0}'.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>strResult</Value1>
							<Value2>EmptyString</Value2>
							<ReturnSuccess Id="20">Test succeed</ReturnSuccess>
						</Equal>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>strResult</Value1>
							<Value2>EmptyString</Value2>
							<RaiseError Id="21"></RaiseError>
						</NotEqual>
					</Compare>
				</TestStep>
			</TestCase>
			<TestCase Name="online | 0xA001 to 0xA007 (reserved range)" CaseId="4">
				<?MAX_OUTPUT_ID 17?>
				<Description>
					<PreCondition>- The device profile is 5001
- The module profile is 6220
- The submodule profile is 0</PreCondition>
					<Action>- Iterate over all online defined modules/channels and if the PreCondition matches the check if one object in the reserved range is defined</Action>
					<PostCondition>- Error if at least one object is defined</PostCondition>
					<ProposalForSolution>- Remove the defined objects
</ProposalForSolution>
					<References>
						<Reference Specification="ETG.5001.6220"></Reference>
					</References>
					<Mandatory>true</Mandatory>
				</Description>
				<TestStep Name="InitResult">
					<SetVariable Target="strResult">EmptyString</SetVariable>
				</TestStep>
				<TestStep Name="InitAtLeastOneProfileMatch">
					<SetVariable Target="bAtLeastOneModuleMatch">false</SetVariable>
				</TestStep>
				<TestStep Name="GetCurrentProfileList">
					<CallTestFunction Name="GetCurrentProfileList">
						<Parameter>"online"</Parameter>
						<Parameter>"SafeOP"</Parameter>
						<OutParameter>arrCurrentProfiles</OutParameter>
					</CallTestFunction>
				</TestStep>
				<TestStep Name="InitProfileLoopCounter">
					<SetVariable Target="u32ProfileCounter">0</SetVariable>
				</TestStep>
				<TestStep Name="GetProfileArrayLength">
					<SizeOf UInt32Var="u32CurrentProfilesLength">arrCurrentProfiles</SizeOf>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="0" Param0="u32CurrentProfilesLength" Level="Verbose">'{0}' Profile(s) defined online.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>u32CurrentProfilesLength</Value1>
							<Value2>0</Value2>
							<SkipCase Id="1">Skip case | no profile defined.</SkipCase>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="ProfileLoopStart">
					<GetArrayItem SourceArray="arrCurrentProfiles" Target="strTmpString" Index="u32ProfileCounter"></GetArrayItem>
				</TestStep>
				<TestStep Name="CheckProfileInformationString">
					<Compare>
						<Equal>
							<Value1>strTmpString</Value1>
							<Value2>null</Value2>
							<RaiseError Id="2" Param0="u32ProfileCounter">Profile Info element [{0}] is null.</RaiseError>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>strTmpString</Value1>
							<Value2>EmptyString</Value2>
							<RaiseError Id="3" Param0="u32ProfileCounter">Profile Info element [{0}] is an empty string.</RaiseError>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="GetDeviceProfile">
					<CallTestFunction Name="GetDeviceProfile">
						<Parameter>strTmpString</Parameter>
						<OutParameter>uint16CurDeviceProfile</OutParameter>
					</CallTestFunction>
				</TestStep>
				<TestStep Name="GetModuleProfile">
					<CallTestFunction Name="GetModuleProfile">
						<Parameter>strTmpString</Parameter>
						<OutParameter>uint16CurModuleProfile</OutParameter>
					</CallTestFunction>
				</TestStep>
				<TestStep Name="GetSubModuleProfile">
					<CallTestFunction Name="GetSubModuleProfile">
						<Parameter>strTmpString</Parameter>
						<OutParameter>uint16CurSubModuleProfile</OutParameter>
					</CallTestFunction>
				</TestStep>
				<TestStep Name="DumpProfileInfo">
					<Description Id="4" Param0="uint16CurDeviceProfile" Param1="uint16CurModuleProfile" Param2="uint16CurSubModuleProfile" Param3="u32ProfileCounter" Level="Output">Module[{3}] : DeviceProfile '{0}' ; ModuleProfile '{1}' ; SubModuleProfile '{2}'</Description>
					<Compare>
						<Equal>
							<Value1>bIgnoreProfileID</Value1>
							<Value2>true</Value2>
							<GotoStep>IndicateThatAtleastOneModuleMatch</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CompareDeviceProfile">
					<Compare>
						<NotEqual>
							<Value1>uint16CurDeviceProfile</Value1>
							<Value2>5001</Value2>
							<WriteLine Id="5" Param0="uint16CurDeviceProfile" Level="Output">Skip Profile  (Test Device Profile '5001' != Cur Device Profile '{0}')</WriteLine>
						</NotEqual>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>uint16CurDeviceProfile</Value1>
							<Value2>5001</Value2>
							<GotoStep>ProfileLoopEnd</GotoStep>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep Name="CompareModuleProfile">
					<Compare>
						<NotEqual>
							<Value1>uint16CurModuleProfile</Value1>
							<Value2>6220</Value2>
							<WriteLine Id="6" Param0="uint16CurModuleProfile" Level="Output">Skip Profile  (Test Module Profile '6220' != Cur Module Profile '{0}')</WriteLine>
						</NotEqual>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>uint16CurModuleProfile</Value1>
							<Value2>6220</Value2>
							<GotoStep>ProfileLoopEnd</GotoStep>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep Name="CompareSubModuleProfile">
					<Compare>
						<NotEqual>
							<Value1>uint16CurSubModuleProfile</Value1>
							<Value2>0</Value2>
							<WriteLine Id="7" Param0="uint16CurSubModuleProfile" Level="Output">Skip Profile  (Test SubModule Profile '0' != Cur SubModule Profile '{0}')</WriteLine>
						</NotEqual>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>uint16CurSubModuleProfile</Value1>
							<Value2>0</Value2>
							<GotoStep>ProfileLoopEnd</GotoStep>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep Name="IndicateThatAtleastOneModuleMatch">
					<SetVariable Target="bAtLeastOneModuleMatch">true</SetVariable>
				</TestStep>
				<TestStep Name="GetFirstReservedObjectIndexInlcOffset">
					<SetVariable Target="u16ObjectIndexInclOffset">#xA001 + (u32ProfileCounter * #x10)</SetVariable>
					<WriteLine Id="8" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : First reserved object index '0x{0:X}'</WriteLine>
				</TestStep>
				<TestStep Name="GetNextDefinedObjectIndexInlcOffset">
					<SetVariable Target="u16NextDefObjectIndexInclOffset">#xA008 + (u32ProfileCounter * #x0010)</SetVariable>
					<WriteLine Id="9" Param0="u16NextDefObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : Next defined object index '0x{0:X}'</WriteLine>
				</TestStep>
				<TestStep Name="LoadDeviceObjectDictionary">
					<Description Id="10" Level="Verbose">VerifyObject : Load 'online' object dictionary for testing.</Description>
					<GetObjectDictionary Target="odDeviceObjectdictionary">
						<DictionaryType>Online</DictionaryType>
					</GetObjectDictionary>
					<RaiseErrorOnFailure Id="11">VerifyObject : failed to load online object dictionary.</RaiseErrorOnFailure>
				</TestStep>
				<TestStep Name="CallCheckReservedObjectRange">
					<Description Id="12" Level="Verbose">VerifyObject : Load 'online' object dictionary for testing.</Description>
					<CallTestFunction Name="CheckReservedObjectRange">
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>u16NextDefObjectIndexInclOffset</Parameter>
						<Parameter>odDeviceObjectdictionary</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<GotoStep>ProfileLoopEnd</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="ProfileLoopEnd">
					<Compare>
						<Equal>
							<Value1>bAtLeastOneModuleMatch</Value1>
							<Value2>false</Value2>
							<GotoStep>HandleAbortTestCaseOnFirstError</GotoStep>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>ProfileLoopIncrement</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="HandleAbortTestCaseOnFirstError">
					<Compare>
						<Equal>
							<Value1>bAbortTestCaseOnFirstError</Value1>
							<Value2>false</Value2>
							<GotoStep>ProfileLoopIncrement</GotoStep>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>strResult</Value1>
							<Value2>EmptyString</Value2>
							<GotoStep>ProfileLoopIncrement</GotoStep>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="13" Level="Output">Object verification for all following modules abort because an error was already detected for the current module.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>END</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="ProfileLoopIncrement">
					<SetVariable Target="u32ProfileCounter">u32ProfileCounter + 1</SetVariable>
					<Compare>
						<Greater>
							<Value1>u32CurrentProfilesLength</Value1>
							<Value2>u32ProfileCounter</Value2>
							<GotoStep>ProfileLoopStart</GotoStep>
						</Greater>
					</Compare>
				</TestStep>
				<TestStep Name="END">
					<Compare>
						<NotEqual>
							<Value1>bAtLeastOneModuleMatch</Value1>
							<Value2>true</Value2>
							<SkipCase Id="14">SKIP TEST</SkipCase>
						</NotEqual>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bDEBUG</Value1>
							<Value2>true</Value2>
							<WriteLine Id="15" Param0="strResult" Level="Verbose">DEBUG | Result : '{0}'.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>strResult</Value1>
							<Value2>EmptyString</Value2>
							<ReturnSuccess Id="16">Test succeed</ReturnSuccess>
						</Equal>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>strResult</Value1>
							<Value2>EmptyString</Value2>
							<RaiseError Id="17"></RaiseError>
						</NotEqual>
					</Compare>
				</TestStep>
			</TestCase>
		</TestGroup>
		<TestGroup Name="Verify object 0xF100 (Device Status)" GroupId="4">
			<TestCase Name="offline | 0xF100 (Device Status)" CaseId="1">
				<?MAX_OUTPUT_ID 32?>
				<Description>
					<PreCondition>- The device profile is 5001
- The module profile is 6220
- The submodule profile is 0</PreCondition>
					<Action>- Iterate over all offline defined modules/channels and if the PreCondition matches the following operations are done:
- Get the offline description of object 0xF100(+module specific offset) 'Device Status' and all entries
 Check:
    (Name)
    BitSize
    DataType
    Rx / Tx mappable
    Default Data
    MinData
    Flags       </Action>
					<PostCondition>Error if
- mandatory object / entry is not defined
- an optional object exists and the entries are invalid
- Object / entry description does not match with the specification</PostCondition>
					<ProposalForSolution>- Define the missing objects
- correct object / entry description</ProposalForSolution>
					<References>
						<Reference Specification="ETG.5001.6220"></Reference>
					</References>
					<Mandatory>true</Mandatory>
				</Description>
				<TestStep Name="InitResult">
					<SetVariable Target="strResult">EmptyString</SetVariable>
				</TestStep>
				<TestStep Name="CheckIfOfflineOdAvailable">
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Mailbox</Value1>
							<Value2>false</Value2>
							<SkipCase Id="0">DuT does not support mailbox.</SkipCase>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Mailbox.CoE</Value1>
							<Value2>false</Value2>
							<SkipCase Id="1">DuT does not support CoE.</SkipCase>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep>
					<GetObjectDictionary Target="odDeviceObjectdictionary">
						<DictionaryType>Offline</DictionaryType>
					</GetObjectDictionary>
					<SkipOnFailure Id="2">No offline object dictionary defined.</SkipOnFailure>
				</TestStep>
				<TestStep>
					<GetObjectList Count="u32Tmp" Target="odDeviceObjectdictionaryList" SourceDict="odDeviceObjectdictionary"></GetObjectList>
					<Compare>
						<Equal>
							<Value1>u32Tmp</Value1>
							<Value2>0</Value2>
							<SkipCase Id="3">No offline object dictionary defined.</SkipCase>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="InitAtLeastOneProfileMatch">
					<SetVariable Target="bAtLeastOneModuleMatch">false</SetVariable>
				</TestStep>
				<TestStep Name="GetCurrentProfileList">
					<CallTestFunction Name="GetCurrentProfileList">
						<Parameter>"offline"</Parameter>
						<Parameter>"SafeOP"</Parameter>
						<OutParameter>arrCurrentProfiles</OutParameter>
					</CallTestFunction>
				</TestStep>
				<TestStep Name="IsProfileSupported">
					<CallTestFunction Name="DeviceAndModuleProfileDefined">
						<Parameter>arrCurrentProfiles</Parameter>
						<Parameter>5001</Parameter>
						<Parameter>6220</Parameter>
						<OutParameter>bAtLeastOneModuleMatch</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>bAtLeastOneModuleMatch</Value1>
							<Value2>false</Value2>
							<GotoStep>END</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="GetObjectIndexInlcOffset">
					<SetVariable Target="u16ObjectIndexInclOffset">#xF100</SetVariable>
					<WriteLine Id="4" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : ObjectIndex '0x{0:X}'</WriteLine>
				</TestStep>
				<TestStep Name="SetObjectMandatoryIndication">
					<SetVariable Target="bObjectEntryIsMandatory">true</SetVariable>
					<WriteLine Id="5" Param0="u16ObjectIndexInclOffset" Level="Verbose">0x{0:X4}.0 'Device Status' shall be available</WriteLine>
				</TestStep>
				<TestStep Name="LoadDeviceObjectDictionary">
					<Description Id="6" Level="Verbose">VerifyObject : Load 'offline' object dictionary for testing.</Description>
					<GetObjectDictionary Target="odDeviceObjectdictionary">
						<DictionaryType>Offline</DictionaryType>
					</GetObjectDictionary>
					<RaiseErrorOnFailure Id="7">VerifyObject : failed to load offline object dictionary.</RaiseErrorOnFailure>
				</TestStep>
				<TestStep Name="CheckIfObjectExists">
					<GetObjectDescription SourceDictionary="odDeviceObjectdictionary" Index="u16ObjectIndexInclOffset" SubIndex="-1"></GetObjectDescription>
					<GotoOnSuccess>CallCheckObjectDescription</GotoOnSuccess>
				</TestStep>
				<TestStep Name="HandleNotExistingObject">
					<Compare>
						<Equal>
							<Value1>bObjectEntryIsMandatory</Value1>
							<Value2>true</Value2>
							<GotoStep>CallCheckObjectDescription</GotoStep>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="8" Param0="u16ObjectIndexInclOffset" Level="Output">The optional/conditional object 0x{0:X4} 'Device Status' does not exists.)</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>END</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CallCheckObjectDescription">
					<Description Id="9" Param0="u16ObjectIndexInclOffset" Level="Output">Verify the object description 0x{0:X4} 'Device Status'.</Description>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<CallTestFunction Name="CreateAllowedNames">
								<Parameter>"Device Status" ; "Diagnosis Status data"</Parameter>
								<Parameter>u16ObjectIndexInclOffset</Parameter>
								<Parameter>0</Parameter>
								<Parameter>u32ProfileCounter</Parameter>
								<OutParameter>arrAllowedNames</OutParameter>
							</CallTestFunction>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<CallTestFunction Name="CheckObjectDescription">
								<Parameter>odDeviceObjectdictionary</Parameter>
								<Parameter>"offline"</Parameter>
								<Parameter>u16ObjectIndexInclOffset</Parameter>
								<Parameter>false</Parameter>
								<Parameter>false</Parameter>
								<Parameter>arrAllowedNames</Parameter>
								<Parameter>null</Parameter>
								<Parameter>0</Parameter>
								<Parameter>-1</Parameter>
								<OutParameter>VerifyDescriptionError</OutParameter>
							</CallTestFunction>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<GotoStep>END</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="InitEntryBittOffset">
					<SetVariable Target="i32CurrentBitOffset">0</SetVariable>
				</TestStep>
				<TestStep Name="StartSi0">
					<Description Id="10" Level="Output">Start validate SubIndex0</Description>
					<WriteLine Id="11" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : Subindex '0x{0:X}.0'</WriteLine>
				</TestStep>
				<TestStep Name="SetSi0MandatoryIndication">
					<SetVariable Target="bObjectEntryIsMandatory">true</SetVariable>
					<WriteLine Id="12" Param0="u16ObjectIndexInclOffset" Level="Verbose">0x{0:X4}.0 'Device Status' shall be available</WriteLine>
				</TestStep>
				<TestStep Name="CallSi0CheckEntryDescription">
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"offline"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>0</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>null</Parameter>
						<Parameter>5</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>null</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>null</Parameter>
						<Parameter>null</Parameter>
						<Parameter>null</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>8</Parameter>
						<Parameter>i32CurrentBitOffset</Parameter>
						<Parameter>true</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="EndSi0">
					<SetVariable Target="i32CurrentBitOffset">16</SetVariable>
				</TestStep>
				<TestStep Name="InitProfileLoopCounter">
					<SetVariable Target="u32ProfileCounter">0</SetVariable>
				</TestStep>
				<TestStep Name="GetProfileArrayLength">
					<SizeOf UInt32Var="u32CurrentProfilesLength">arrCurrentProfiles</SizeOf>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="13" Param0="u32CurrentProfilesLength" Level="Verbose">'{0}' Profile(s) defined offline.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>u32CurrentProfilesLength</Value1>
							<Value2>0</Value2>
							<SkipCase Id="14">Skip case | no profile defined.</SkipCase>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="ProfileLoopStart">
					<GetArrayItem SourceArray="arrCurrentProfiles" Target="strTmpString" Index="u32ProfileCounter"></GetArrayItem>
				</TestStep>
				<TestStep Name="CheckProfileInformationString">
					<Compare>
						<Equal>
							<Value1>strTmpString</Value1>
							<Value2>null</Value2>
							<RaiseError Id="15" Param0="u32ProfileCounter">Profile Info element [{0}] is null.</RaiseError>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>strTmpString</Value1>
							<Value2>EmptyString</Value2>
							<RaiseError Id="16" Param0="u32ProfileCounter">Profile Info element [{0}] is an empty string.</RaiseError>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="GetDeviceProfile">
					<CallTestFunction Name="GetDeviceProfile">
						<Parameter>strTmpString</Parameter>
						<OutParameter>uint16CurDeviceProfile</OutParameter>
					</CallTestFunction>
				</TestStep>
				<TestStep Name="GetModuleProfile">
					<CallTestFunction Name="GetModuleProfile">
						<Parameter>strTmpString</Parameter>
						<OutParameter>uint16CurModuleProfile</OutParameter>
					</CallTestFunction>
				</TestStep>
				<TestStep Name="GetSubModuleProfile">
					<CallTestFunction Name="GetSubModuleProfile">
						<Parameter>strTmpString</Parameter>
						<OutParameter>uint16CurSubModuleProfile</OutParameter>
					</CallTestFunction>
				</TestStep>
				<TestStep Name="DumpProfileInfo">
					<Description Id="17" Param0="uint16CurDeviceProfile" Param1="uint16CurModuleProfile" Param2="uint16CurSubModuleProfile" Param3="u32ProfileCounter" Level="Output">Module[{3}] : DeviceProfile '{0}' ; ModuleProfile '{1}' ; SubModuleProfile '{2}'</Description>
					<Compare>
						<Equal>
							<Value1>bIgnoreProfileID</Value1>
							<Value2>true</Value2>
							<GotoStep>IndicateThatAtleastOneModuleMatch</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CompareDeviceProfile">
					<Compare>
						<NotEqual>
							<Value1>uint16CurDeviceProfile</Value1>
							<Value2>5001</Value2>
							<WriteLine Id="18" Param0="uint16CurDeviceProfile" Level="Output">Skip Profile  (Test Device Profile '5001' != Cur Device Profile '{0}')</WriteLine>
						</NotEqual>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>uint16CurDeviceProfile</Value1>
							<Value2>5001</Value2>
							<GotoStep>ProfileLoopEnd</GotoStep>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep Name="CompareModuleProfile">
					<Compare>
						<NotEqual>
							<Value1>uint16CurModuleProfile</Value1>
							<Value2>6220</Value2>
							<WriteLine Id="19" Param0="uint16CurModuleProfile" Level="Output">Skip Profile  (Test Module Profile '6220' != Cur Module Profile '{0}')</WriteLine>
						</NotEqual>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>uint16CurModuleProfile</Value1>
							<Value2>6220</Value2>
							<GotoStep>ProfileLoopEnd</GotoStep>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep Name="CompareSubModuleProfile">
					<Compare>
						<NotEqual>
							<Value1>uint16CurSubModuleProfile</Value1>
							<Value2>0</Value2>
							<WriteLine Id="20" Param0="uint16CurSubModuleProfile" Level="Output">Skip Profile  (Test SubModule Profile '0' != Cur SubModule Profile '{0}')</WriteLine>
						</NotEqual>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>uint16CurSubModuleProfile</Value1>
							<Value2>0</Value2>
							<GotoStep>ProfileLoopEnd</GotoStep>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep Name="IndicateThatAtleastOneModuleMatch">
					<SetVariable Target="bAtLeastOneModuleMatch">true</SetVariable>
				</TestStep>
				<TestStep Name="StartSi1">
					<Description Id="21" Param0="1 + (u32ProfileCounter * 1)" Level="Output">Start validate SubIndex{0}</Description>
					<SetVariable Target="byteSubIndexInclOffset">1 + (u32ProfileCounter * 1)</SetVariable>
					<WriteLine Id="22" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Param2="byteSubIndexInclOffset" Level="Verbose">Module[{1}] : Subindex '0x{0:X}.{2}'</WriteLine>
				</TestStep>
				<TestStep Name="SetSi1MandatoryIndication">
					<CallTestFunction Name="ModuleProfileMatch">
						<Parameter>5001</Parameter>
						<Parameter>6220</Parameter>
						<Parameter>0</Parameter>
						<Parameter>arrCurrentProfiles</Parameter>
						<Parameter>byteSubIndexInclOffset</Parameter>
						<OutParameter>bObjectEntryIsMandatory</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>bObjectEntryIsMandatory</Value1>
							<Value2>true</Value2>
							<WriteLine Id="23" Param0="u16ObjectIndexInclOffset" Param1="byteSubIndexInclOffset" Level="Verbose">0x{0:X4}.{1} shall be available (the corresponding module is defined)</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bObjectEntryIsMandatory</Value1>
							<Value2>false</Value2>
							<WriteLine Id="24" Param0="u16ObjectIndexInclOffset" Param1="byteSubIndexInclOffset" Level="Verbose">0x{0:X4}.{1} may be available</WriteLine>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CheckIfSi1Exists">
					<GetObjectDescription SourceDictionary="odDeviceObjectdictionary" Index="u16ObjectIndexInclOffset" SubIndex="byteSubIndexInclOffset">
						<Type>u16DataType</Type>
					</GetObjectDescription>
					<GotoOnFailure>HandleNotExistingSi1</GotoOnFailure>
				</TestStep>
				<TestStep>
					<Compare>
						<Equal>
							<Value1>bObjectEntryIsMandatory</Value1>
							<Value2>true</Value2>
							<GotoStep>CallSi1CheckEntryDescription</GotoStep>
						</Equal>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>u16DataType</Value1>
							<Value2>0</Value2>
							<GotoStep>CallSi1CheckEntryDescription</GotoStep>
						</NotEqual>
					</Compare>
					<Compare>
						<Equal>
							<Value1>u16DataType</Value1>
							<Value2>0</Value2>
							<WriteLine Id="25" Param0="u16ObjectIndexInclOffset" Level="Verbose">The optional/conditional entriy 0x{0:X4}.1is defined as a padding entry.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>u16DataType</Value1>
							<Value2>0</Value2>
							<GotoStep>EndSi1</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="HandleNotExistingSi1">
					<Compare>
						<Equal>
							<Value1>bObjectEntryIsMandatory</Value1>
							<Value2>true</Value2>
							<GotoStep>CallSi1CheckEntryDescription</GotoStep>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="26" Param0="u16ObjectIndexInclOffset" Level="Output">The optional/conditional entry 0x{0:X4}.1 is not defined.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>EndSi1</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CallSi1CheckEntryDescription">
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"offline"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>byteSubIndexInclOffset</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>null</Parameter>
						<Parameter>5</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>null</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>8</Parameter>
						<Parameter>i32CurrentBitOffset</Parameter>
						<Parameter>true</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="EndSi1">
					<Compare>
						<Equal>
							<Value1>bObjectEntryIsMandatory</Value1>
							<Value2>true</Value2>
							<SetVariable Target="i32CurrentBitOffset">i32CurrentBitOffset + 8</SetVariable>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bObjectEntryIsMandatory</Value1>
							<Value2>false</Value2>
							<SetVariable Target="i32CurrentBitOffset">-1</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="ProfileLoopEnd">
					<Compare>
						<Equal>
							<Value1>bAtLeastOneModuleMatch</Value1>
							<Value2>false</Value2>
							<GotoStep>HandleAbortTestCaseOnFirstError</GotoStep>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="27" Level="Verbose">Skip testing all following modules because the object index increment and subindex increment are 0 .</WriteLine>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="HandleAbortTestCaseOnFirstError">
					<Compare>
						<Equal>
							<Value1>bAbortTestCaseOnFirstError</Value1>
							<Value2>false</Value2>
							<GotoStep>ProfileLoopIncrement</GotoStep>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>strResult</Value1>
							<Value2>EmptyString</Value2>
							<GotoStep>ProfileLoopIncrement</GotoStep>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="28" Level="Output">Object verification for all following modules abort because an error was already detected for the current module.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>END</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="ProfileLoopIncrement">
					<SetVariable Target="u32ProfileCounter">u32ProfileCounter + 1</SetVariable>
					<Compare>
						<Greater>
							<Value1>u32CurrentProfilesLength</Value1>
							<Value2>u32ProfileCounter</Value2>
							<GotoStep>ProfileLoopStart</GotoStep>
						</Greater>
					</Compare>
				</TestStep>
				<TestStep Name="END">
					<Compare>
						<NotEqual>
							<Value1>bAtLeastOneModuleMatch</Value1>
							<Value2>true</Value2>
							<SkipCase Id="29">SKIP TEST</SkipCase>
						</NotEqual>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bDEBUG</Value1>
							<Value2>true</Value2>
							<WriteLine Id="30" Param0="strResult" Level="Verbose">DEBUG | Result : '{0}'.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>strResult</Value1>
							<Value2>EmptyString</Value2>
							<ReturnSuccess Id="31">Test succeed</ReturnSuccess>
						</Equal>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>strResult</Value1>
							<Value2>EmptyString</Value2>
							<RaiseError Id="32"></RaiseError>
						</NotEqual>
					</Compare>
				</TestStep>
			</TestCase>
			<TestCase Name="online | 0xF100 (Device Status)" CaseId="2">
				<?MAX_OUTPUT_ID 28?>
				<Description>
					<PreCondition>- The device profile is 5001
- The module profile is 6220
- The submodule profile is 0</PreCondition>
					<Action>- Iterate over all online defined modules/channels and if the PreCondition matches the following operations are done:
- Get the online description of object 0xF100(+module specific offset) 'Device Status' and all entries
 Check:
    (Name)
    BitSize
    DataType
    Rx / Tx mappable
    Default Data
    MinData
    Flags       </Action>
					<PostCondition>Error if
- mandatory object / entry is not defined
- an optional object exists and the entries are invalid
- Object / entry description does not match with the specification</PostCondition>
					<ProposalForSolution>- Define the missing objects
- correct object / entry description</ProposalForSolution>
					<References>
						<Reference Specification="ETG.5001.6220"></Reference>
					</References>
					<Mandatory>true</Mandatory>
				</Description>
				<TestStep Name="InitResult">
					<SetVariable Target="strResult">EmptyString</SetVariable>
				</TestStep>
				<TestStep Name="InitAtLeastOneProfileMatch">
					<SetVariable Target="bAtLeastOneModuleMatch">false</SetVariable>
				</TestStep>
				<TestStep Name="GetCurrentProfileList">
					<CallTestFunction Name="GetCurrentProfileList">
						<Parameter>"online"</Parameter>
						<Parameter>"SafeOP"</Parameter>
						<OutParameter>arrCurrentProfiles</OutParameter>
					</CallTestFunction>
				</TestStep>
				<TestStep Name="IsProfileSupported">
					<CallTestFunction Name="DeviceAndModuleProfileDefined">
						<Parameter>arrCurrentProfiles</Parameter>
						<Parameter>5001</Parameter>
						<Parameter>6220</Parameter>
						<OutParameter>bAtLeastOneModuleMatch</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>bAtLeastOneModuleMatch</Value1>
							<Value2>false</Value2>
							<GotoStep>END</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="GetObjectIndexInlcOffset">
					<SetVariable Target="u16ObjectIndexInclOffset">#xF100</SetVariable>
					<WriteLine Id="0" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : ObjectIndex '0x{0:X}'</WriteLine>
				</TestStep>
				<TestStep Name="SetObjectMandatoryIndication">
					<SetVariable Target="bObjectEntryIsMandatory">true</SetVariable>
					<WriteLine Id="1" Param0="u16ObjectIndexInclOffset" Level="Verbose">0x{0:X4}.0 'Device Status' shall be available</WriteLine>
				</TestStep>
				<TestStep Name="LoadDeviceObjectDictionary">
					<Description Id="2" Level="Verbose">VerifyObject : Load 'online' object dictionary for testing.</Description>
					<GetObjectDictionary Target="odDeviceObjectdictionary">
						<DictionaryType>Online</DictionaryType>
					</GetObjectDictionary>
					<RaiseErrorOnFailure Id="3">VerifyObject : failed to load online object dictionary.</RaiseErrorOnFailure>
				</TestStep>
				<TestStep Name="CheckIfObjectExists">
					<GetObjectDescription SourceDictionary="odDeviceObjectdictionary" Index="u16ObjectIndexInclOffset" SubIndex="-1"></GetObjectDescription>
					<GotoOnSuccess>CallCheckObjectDescription</GotoOnSuccess>
				</TestStep>
				<TestStep Name="HandleNotExistingObject">
					<Compare>
						<Equal>
							<Value1>bObjectEntryIsMandatory</Value1>
							<Value2>true</Value2>
							<GotoStep>CallCheckObjectDescription</GotoStep>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="4" Param0="u16ObjectIndexInclOffset" Level="Output">The optional/conditional object 0x{0:X4} 'Device Status' does not exists.)</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>END</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CallCheckObjectDescription">
					<Description Id="5" Param0="u16ObjectIndexInclOffset" Level="Output">Verify the object description 0x{0:X4} 'Device Status'.</Description>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<CallTestFunction Name="CreateAllowedNames">
								<Parameter>"Device Status" ; "Diagnosis Status data"</Parameter>
								<Parameter>u16ObjectIndexInclOffset</Parameter>
								<Parameter>0</Parameter>
								<Parameter>u32ProfileCounter</Parameter>
								<OutParameter>arrAllowedNames</OutParameter>
							</CallTestFunction>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<CallTestFunction Name="CheckObjectDescription">
								<Parameter>odDeviceObjectdictionary</Parameter>
								<Parameter>"online"</Parameter>
								<Parameter>u16ObjectIndexInclOffset</Parameter>
								<Parameter>false</Parameter>
								<Parameter>false</Parameter>
								<Parameter>arrAllowedNames</Parameter>
								<Parameter>null</Parameter>
								<Parameter>0</Parameter>
								<Parameter>-1</Parameter>
								<OutParameter>VerifyDescriptionError</OutParameter>
							</CallTestFunction>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<GotoStep>END</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="InitEntryBittOffset">
					<SetVariable Target="i32CurrentBitOffset">0</SetVariable>
				</TestStep>
				<TestStep Name="StartSi0">
					<Description Id="6" Level="Output">Start validate SubIndex0</Description>
					<WriteLine Id="7" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Level="Verbose">Module[{1}] : Subindex '0x{0:X}.0'</WriteLine>
				</TestStep>
				<TestStep Name="SetSi0MandatoryIndication">
					<SetVariable Target="bObjectEntryIsMandatory">true</SetVariable>
					<WriteLine Id="8" Param0="u16ObjectIndexInclOffset" Level="Verbose">0x{0:X4}.0 'Device Status' shall be available</WriteLine>
				</TestStep>
				<TestStep Name="CallSi0CheckEntryDescription">
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"online"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>0</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>null</Parameter>
						<Parameter>5</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>null</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>null</Parameter>
						<Parameter>null</Parameter>
						<Parameter>null</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>8</Parameter>
						<Parameter>i32CurrentBitOffset</Parameter>
						<Parameter>true</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="EndSi0">
					<SetVariable Target="i32CurrentBitOffset">16</SetVariable>
				</TestStep>
				<TestStep Name="InitProfileLoopCounter">
					<SetVariable Target="u32ProfileCounter">0</SetVariable>
				</TestStep>
				<TestStep Name="GetProfileArrayLength">
					<SizeOf UInt32Var="u32CurrentProfilesLength">arrCurrentProfiles</SizeOf>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="9" Param0="u32CurrentProfilesLength" Level="Verbose">'{0}' Profile(s) defined online.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>u32CurrentProfilesLength</Value1>
							<Value2>0</Value2>
							<SkipCase Id="10">Skip case | no profile defined.</SkipCase>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="ProfileLoopStart">
					<GetArrayItem SourceArray="arrCurrentProfiles" Target="strTmpString" Index="u32ProfileCounter"></GetArrayItem>
				</TestStep>
				<TestStep Name="CheckProfileInformationString">
					<Compare>
						<Equal>
							<Value1>strTmpString</Value1>
							<Value2>null</Value2>
							<RaiseError Id="11" Param0="u32ProfileCounter">Profile Info element [{0}] is null.</RaiseError>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>strTmpString</Value1>
							<Value2>EmptyString</Value2>
							<RaiseError Id="12" Param0="u32ProfileCounter">Profile Info element [{0}] is an empty string.</RaiseError>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="GetDeviceProfile">
					<CallTestFunction Name="GetDeviceProfile">
						<Parameter>strTmpString</Parameter>
						<OutParameter>uint16CurDeviceProfile</OutParameter>
					</CallTestFunction>
				</TestStep>
				<TestStep Name="GetModuleProfile">
					<CallTestFunction Name="GetModuleProfile">
						<Parameter>strTmpString</Parameter>
						<OutParameter>uint16CurModuleProfile</OutParameter>
					</CallTestFunction>
				</TestStep>
				<TestStep Name="GetSubModuleProfile">
					<CallTestFunction Name="GetSubModuleProfile">
						<Parameter>strTmpString</Parameter>
						<OutParameter>uint16CurSubModuleProfile</OutParameter>
					</CallTestFunction>
				</TestStep>
				<TestStep Name="DumpProfileInfo">
					<Description Id="13" Param0="uint16CurDeviceProfile" Param1="uint16CurModuleProfile" Param2="uint16CurSubModuleProfile" Param3="u32ProfileCounter" Level="Output">Module[{3}] : DeviceProfile '{0}' ; ModuleProfile '{1}' ; SubModuleProfile '{2}'</Description>
					<Compare>
						<Equal>
							<Value1>bIgnoreProfileID</Value1>
							<Value2>true</Value2>
							<GotoStep>IndicateThatAtleastOneModuleMatch</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CompareDeviceProfile">
					<Compare>
						<NotEqual>
							<Value1>uint16CurDeviceProfile</Value1>
							<Value2>5001</Value2>
							<WriteLine Id="14" Param0="uint16CurDeviceProfile" Level="Output">Skip Profile  (Test Device Profile '5001' != Cur Device Profile '{0}')</WriteLine>
						</NotEqual>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>uint16CurDeviceProfile</Value1>
							<Value2>5001</Value2>
							<GotoStep>ProfileLoopEnd</GotoStep>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep Name="CompareModuleProfile">
					<Compare>
						<NotEqual>
							<Value1>uint16CurModuleProfile</Value1>
							<Value2>6220</Value2>
							<WriteLine Id="15" Param0="uint16CurModuleProfile" Level="Output">Skip Profile  (Test Module Profile '6220' != Cur Module Profile '{0}')</WriteLine>
						</NotEqual>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>uint16CurModuleProfile</Value1>
							<Value2>6220</Value2>
							<GotoStep>ProfileLoopEnd</GotoStep>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep Name="CompareSubModuleProfile">
					<Compare>
						<NotEqual>
							<Value1>uint16CurSubModuleProfile</Value1>
							<Value2>0</Value2>
							<WriteLine Id="16" Param0="uint16CurSubModuleProfile" Level="Output">Skip Profile  (Test SubModule Profile '0' != Cur SubModule Profile '{0}')</WriteLine>
						</NotEqual>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>uint16CurSubModuleProfile</Value1>
							<Value2>0</Value2>
							<GotoStep>ProfileLoopEnd</GotoStep>
						</NotEqual>
					</Compare>
				</TestStep>
				<TestStep Name="IndicateThatAtleastOneModuleMatch">
					<SetVariable Target="bAtLeastOneModuleMatch">true</SetVariable>
				</TestStep>
				<TestStep Name="StartSi1">
					<Description Id="17" Param0="1 + (u32ProfileCounter * 1)" Level="Output">Start validate SubIndex{0}</Description>
					<SetVariable Target="byteSubIndexInclOffset">1 + (u32ProfileCounter * 1)</SetVariable>
					<WriteLine Id="18" Param0="u16ObjectIndexInclOffset" Param1="u32ProfileCounter" Param2="byteSubIndexInclOffset" Level="Verbose">Module[{1}] : Subindex '0x{0:X}.{2}'</WriteLine>
				</TestStep>
				<TestStep Name="SetSi1MandatoryIndication">
					<CallTestFunction Name="ModuleProfileMatch">
						<Parameter>5001</Parameter>
						<Parameter>6220</Parameter>
						<Parameter>0</Parameter>
						<Parameter>arrCurrentProfiles</Parameter>
						<Parameter>byteSubIndexInclOffset</Parameter>
						<OutParameter>bObjectEntryIsMandatory</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>bObjectEntryIsMandatory</Value1>
							<Value2>true</Value2>
							<WriteLine Id="19" Param0="u16ObjectIndexInclOffset" Param1="byteSubIndexInclOffset" Level="Verbose">0x{0:X4}.{1} shall be available (the corresponding module is defined)</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bObjectEntryIsMandatory</Value1>
							<Value2>false</Value2>
							<WriteLine Id="20" Param0="u16ObjectIndexInclOffset" Param1="byteSubIndexInclOffset" Level="Verbose">0x{0:X4}.{1} may be available</WriteLine>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CheckIfSi1Exists">
					<GetObjectDescription SourceDictionary="odDeviceObjectdictionary" Index="u16ObjectIndexInclOffset" SubIndex="byteSubIndexInclOffset">
						<Type>u16DataType</Type>
					</GetObjectDescription>
					<GotoOnFailure>HandleNotExistingSi1</GotoOnFailure>
				</TestStep>
				<TestStep>
					<Compare>
						<Equal>
							<Value1>bObjectEntryIsMandatory</Value1>
							<Value2>true</Value2>
							<GotoStep>CallSi1CheckEntryDescription</GotoStep>
						</Equal>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>u16DataType</Value1>
							<Value2>0</Value2>
							<GotoStep>CallSi1CheckEntryDescription</GotoStep>
						</NotEqual>
					</Compare>
					<Compare>
						<Equal>
							<Value1>u16DataType</Value1>
							<Value2>0</Value2>
							<WriteLine Id="21" Param0="u16ObjectIndexInclOffset" Level="Verbose">The optional/conditional entriy 0x{0:X4}.1is defined as a padding entry.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>u16DataType</Value1>
							<Value2>0</Value2>
							<GotoStep>EndSi1</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="HandleNotExistingSi1">
					<Compare>
						<Equal>
							<Value1>bObjectEntryIsMandatory</Value1>
							<Value2>true</Value2>
							<GotoStep>CallSi1CheckEntryDescription</GotoStep>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="22" Param0="u16ObjectIndexInclOffset" Level="Output">The optional/conditional entry 0x{0:X4}.1 is not defined.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>EndSi1</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="CallSi1CheckEntryDescription">
					<CallTestFunction Name="CheckEntryDescription">
						<Parameter>odDeviceObjectdictionary</Parameter>
						<Parameter>"online"</Parameter>
						<Parameter>u16ObjectIndexInclOffset</Parameter>
						<Parameter>byteSubIndexInclOffset</Parameter>
						<Parameter>false</Parameter>
						<Parameter>false</Parameter>
						<Parameter>null</Parameter>
						<Parameter>5</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>1</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>0</Parameter>
						<Parameter>null</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>EmptyString</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>-1</Parameter>
						<Parameter>8</Parameter>
						<Parameter>i32CurrentBitOffset</Parameter>
						<Parameter>true</Parameter>
						<OutParameter>VerifyDescriptionError</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>VerifyDescriptionError</Value1>
							<Value2>true</Value2>
							<SetVariable Target="strResult">At least one error found.</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="EndSi1">
					<Compare>
						<Equal>
							<Value1>bObjectEntryIsMandatory</Value1>
							<Value2>true</Value2>
							<SetVariable Target="i32CurrentBitOffset">i32CurrentBitOffset + 8</SetVariable>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bObjectEntryIsMandatory</Value1>
							<Value2>false</Value2>
							<SetVariable Target="i32CurrentBitOffset">-1</SetVariable>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="ProfileLoopEnd">
					<Compare>
						<Equal>
							<Value1>bAtLeastOneModuleMatch</Value1>
							<Value2>false</Value2>
							<GotoStep>HandleAbortTestCaseOnFirstError</GotoStep>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="23" Level="Verbose">Skip testing all following modules because the object index increment and subindex increment are 0 .</WriteLine>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="HandleAbortTestCaseOnFirstError">
					<Compare>
						<Equal>
							<Value1>bAbortTestCaseOnFirstError</Value1>
							<Value2>false</Value2>
							<GotoStep>ProfileLoopIncrement</GotoStep>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>strResult</Value1>
							<Value2>EmptyString</Value2>
							<GotoStep>ProfileLoopIncrement</GotoStep>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<WriteLine Id="24" Level="Output">Object verification for all following modules abort because an error was already detected for the current module.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<GotoStep>END</GotoStep>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep Name="ProfileLoopIncrement">
					<SetVariable Target="u32ProfileCounter">u32ProfileCounter + 1</SetVariable>
					<Compare>
						<Greater>
							<Value1>u32CurrentProfilesLength</Value1>
							<Value2>u32ProfileCounter</Value2>
							<GotoStep>ProfileLoopStart</GotoStep>
						</Greater>
					</Compare>
				</TestStep>
				<TestStep Name="END">
					<Compare>
						<NotEqual>
							<Value1>bAtLeastOneModuleMatch</Value1>
							<Value2>true</Value2>
							<SkipCase Id="25">SKIP TEST</SkipCase>
						</NotEqual>
					</Compare>
					<Compare>
						<Equal>
							<Value1>bDEBUG</Value1>
							<Value2>true</Value2>
							<WriteLine Id="26" Param0="strResult" Level="Verbose">DEBUG | Result : '{0}'.</WriteLine>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>strResult</Value1>
							<Value2>EmptyString</Value2>
							<ReturnSuccess Id="27">Test succeed</ReturnSuccess>
						</Equal>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>strResult</Value1>
							<Value2>EmptyString</Value2>
							<RaiseError Id="28"></RaiseError>
						</NotEqual>
					</Compare>
				</TestStep>
			</TestCase>
		</TestGroup>
		<TestGroup Name="IO-Link gateway features" GroupId="100">
			<TestCase Name="Check AoE support" CaseId="1">
				<?MAX_OUTPUT_ID 2?>
				<Description>
					<PreCondition>- The device profile is 5001
- The module profile is 6220
- The submodule profile is 0</PreCondition>
					<Action>Check if the slave support AoE</Action>
					<PostCondition>The DuT should support AoE</PostCondition>
					<ProposalForSolution>Add AoE support</ProposalForSolution>
					<References>
						<Reference Specification="ETG.5001"></Reference>
					</References>
					<Mandatory>true</Mandatory>
				</Description>
				<TestStep>
					<CallTestFunction Name="DuTSupportDeviceAndModuleProfile">
						<Parameter>5001</Parameter>
						<Parameter>6220</Parameter>
						<OutParameter>bTmp</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>bTmp</Value1>
							<Value2>false</Value2>
							<SkipCase Id="0">The IO-Link Profile 5001.6220 is not supported.</SkipCase>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Mailbox.AoE</Value1>
							<Value2>true</Value2>
							<ReturnSuccess Id="1">The DuT supports AoE</ReturnSuccess>
						</Equal>
					</Compare>
					<Compare>
						<Equal>
							<Value1>DeviceDescr.Mailbox.AoE</Value1>
							<Value2>false</Value2>
							<RaiseWarning Id="2">The DuT should support AoE.</RaiseWarning>
						</Equal>
					</Compare>
				</TestStep>
			</TestCase>
			<TestCase Name="Check Diagnosis History supported support" CaseId="2">
				<?MAX_OUTPUT_ID 4?>
				<Description>
					<PreCondition>- The device profile is 5001
- The module profile is 6220
- The submodule profile is 0</PreCondition>
					<Action>Check if the slave support Diagnosis History Object (0x10F3)</Action>
					<PostCondition>The DuT should support Diagnosis History Object (0x10F3)</PostCondition>
					<ProposalForSolution>Add Diagnosis History Object (0x10F3) support</ProposalForSolution>
					<References>
						<Reference Specification="ETG.5001"></Reference>
					</References>
					<Mandatory>true</Mandatory>
				</Description>
				<TestStep>
					<CallTestFunction Name="DuTSupportDeviceAndModuleProfile">
						<Parameter>5001</Parameter>
						<Parameter>6220</Parameter>
						<OutParameter>bTmp</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>bTmp</Value1>
							<Value2>false</Value2>
							<SkipCase Id="0">The IO-Link Profile 5001.6220 is not supported.</SkipCase>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep>
					<CallTestFunction Name="Reset"></CallTestFunction>
				</TestStep>
				<TestStep Name="RunToPreOP">
					<RunToState Timeout="10000">
						<State>PREOP</State>
					</RunToState>
					<RaiseErrorOnFailure Id="1">Failed to run to PreOP</RaiseErrorOnFailure>
				</TestStep>
				<TestStep Name="TryToUpload10F3">
					<UploadCoEObject>
						<Index>#x10F3</Index>
						<SubIndex>0</SubIndex>
						<DataVar>byteTmp</DataVar>
						<AbortCode>u32SdoAbort</AbortCode>
						<AbortMessage>strAbortMsg</AbortMessage>
					</UploadCoEObject>
					<Compare>
						<NotEqual>
							<Value1>strAbortMsg</Value1>
							<Value2>EmptyString</Value2>
							<RaiseWarning Id="2" Param0="strAbortMsg">The Diagnosis history object 0x10F3 should be supported. (upload abort : {0})</RaiseWarning>
						</NotEqual>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>u32SdoAbort</Value1>
							<Value2>0</Value2>
							<RaiseWarning Id="3" Param0="u32SdoAbort">The Diagnosis history object 0x10F3 should be supported. (upload abort : 0x{0:X})</RaiseWarning>
						</NotEqual>
					</Compare>
					<Compare>
						<Equal>
							<Value1>true</Value1>
							<Value2>true</Value2>
							<ReturnSuccess Id="4">The Diagnosis History Object 0x10F3 is supported.</ReturnSuccess>
						</Equal>
					</Compare>
				</TestStep>
			</TestCase>
			<TestCase Name="Check Index offset" CaseId="3">
				<?MAX_OUTPUT_ID 5?>
				<Description>
					<PreCondition>- The device profile is 5001
- The module profile is 6220
- The submodule profile is 0</PreCondition>
					<Action>Read the value of 0xF000.1 (Index distance)</Action>
					<PostCondition>The value of 0xF000.1 shall be 0x10 </PostCondition>
					<ProposalForSolution>Change the Index distance</ProposalForSolution>
					<References>
						<Reference Specification="ETG.5001"></Reference>
					</References>
					<Mandatory>true</Mandatory>
				</Description>
				<TestStep>
					<CallTestFunction Name="DuTSupportDeviceAndModuleProfile">
						<Parameter>5001</Parameter>
						<Parameter>6220</Parameter>
						<OutParameter>bTmp</OutParameter>
					</CallTestFunction>
					<Compare>
						<Equal>
							<Value1>bTmp</Value1>
							<Value2>false</Value2>
							<SkipCase Id="0">The IO-Link Profile 5001.6220 is not supported.</SkipCase>
						</Equal>
					</Compare>
				</TestStep>
				<TestStep>
					<CallTestFunction Name="Reset"></CallTestFunction>
				</TestStep>
				<TestStep Name="RunToPreOP">
					<RunToState Timeout="10000">
						<State>PREOP</State>
					</RunToState>
					<RaiseErrorOnFailure Id="1">Failed to run to PreOP</RaiseErrorOnFailure>
				</TestStep>
				<TestStep Name="Read0xF000_1">
					<UploadCoEObject>
						<Index>#xF000</Index>
						<SubIndex>1</SubIndex>
						<DataVar>u16DataType</DataVar>
						<AbortCode>u32SdoAbort</AbortCode>
						<AbortMessage>strAbortMsg</AbortMessage>
					</UploadCoEObject>
					<Compare>
						<NotEqual>
							<Value1>strAbortMsg</Value1>
							<Value2>EmptyString</Value2>
							<RaiseError Id="2" Param0="strAbortMsg">The object 0xF000 (Modular Device Profile) shall be supported. (upload abort : {0})</RaiseError>
						</NotEqual>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>u32SdoAbort</Value1>
							<Value2>0</Value2>
							<RaiseError Id="3" Param0="u32SdoAbort">The object 0xF000 (Modular Device Profile) shall be supported. (upload abort : 0x{0:X})</RaiseError>
						</NotEqual>
					</Compare>
					<Compare>
						<NotEqual>
							<Value1>u16DataType</Value1>
							<Value2>16</Value2>
							<RaiseError Id="4" Param0="u16DataType">The object index distance (0xF000.1) shall be 0x10 (current distance is 0x{1:X}).</RaiseError>
						</NotEqual>
					</Compare>
					<Compare>
						<Equal>
							<Value1>u16DataType</Value1>
							<Value2>16</Value2>
							<ReturnSuccess Id="5">The object index distance (0xF000.1) is 0x10.</ReturnSuccess>
						</Equal>
					</Compare>
				</TestStep>
			</TestCase>
		</TestGroup>
	</TestGroups>
</EtherCATTest>