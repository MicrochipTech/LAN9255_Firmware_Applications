<?xml version="1.0" encoding="UTF-8"?>
<FSoETest xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="EtherCATTestSafety.xsd" Name="FSoE Slave State Machine Test" SchemaVersion="1.1.0" TestVersion="1.2.0.0" TestId="9730" TestType="Slave">
	<History>
		<HistoryEntry Editor="O.H." TestVersion="0.0.0.3" Date="2011-04-28"><![CDATA[Where: test function "GET_COMM_FAULT_REASON"
Reason: According to ETG 5100 table 28 new communication fault reasons must be added.
Solution: INVALID_COMPARA_LEN, INVALID_COMPARA, INVALID_USERPARA, INVALID_USERPARA_LEN added to the test function.]]></HistoryEntry>
		<HistoryEntry Editor="O.H." TestVersion="0.0.4.0" Date="2012-01-02"><![CDATA[Where: global
Reason: The test does not recognize different slave and master message length during the init phase.
Solution: Initialisation values for FSoEFrame type added]]></HistoryEntry>
		<HistoryEntry Editor="O.H." TestVersion="0.0.6.0" Date="2012-02-01"><![CDATA[Where: #4.18
Reason: Due to an incorrect calculation, the first two bytes of the application parameter are overidden and therefore invalid Application data is used in test case.
Solution: Correction of the SetVariable action in test step 3]]></HistoryEntry>
		<HistoryEntry Editor="O.H." TestVersion="0.0.7.0" Date="2012-02-01"><![CDATA[Where: #4.49
Reason: Due to an incorrect test function call, the DuT is forced to run to connection instead of parameter.
Solution: Test function RUN_DUT_TO_CONNECTION replaced with RUN_DUT_TO_PARAMETER in test step 4]]></HistoryEntry>
		<HistoryEntry Editor="O.H." TestVersion="0.0.7.0" Date="2012-02-02"><![CDATA[Where: #5.1, #5.2
Reason: The Dut shall stay in data until the max slave sequence number is exceeded.
Solution: Test cases changed to execute 257 safety cycles]]></HistoryEntry>
		<HistoryEntry Editor="O.H." TestVersion="0.0.13.0" Date="2012-03-16"><![CDATA[Where: Return Type
Reason: To determine an unique error Id
Solution: New Id element added]]></HistoryEntry>
		<HistoryEntry Editor="O.H." TestVersion="0.0.14.0" Date="2012-04-26"><![CDATA[Where: #1.4 RESET_OK
Reason: Obsolete ProposalForSolution element
Solution: Removed]]></HistoryEntry>
		<HistoryEntry Editor="O.H." TestVersion="1.0.0.0" Date="2013-11-21"><![CDATA[Where: #5.1 Data_Ok1
Change Request: 2013-05-06-003
Reason: Transition ends with a FailSafeData command although the test definition requiers a ProcessData command
Solution: Setting the ProcessData Cmd is moved from test step 2 to step 5]]></HistoryEntry>
		<HistoryEntry Editor="O.H." TestVersion="1.0.0.1" Date="2014-05-09"><![CDATA[Where: #3.17 CONN_Fail3, #3.18 CONN_Fail3, #3.19 CONN_Fail3
Change Request: 2015-11-03-001
Reason: Transition CONN FAIL3 of the slaves state machine requires that an invalid  ConnId was sent as part of the Connection Data or an invalid Frame.ConnId. The named test cases only falsify the Frame.ConnId.
Solution: The transmitted ConnectionData from FSoE master to the FSoE Slave has been changed with different values to produce the condition of Conn_FAIL3:
Condition: Frame.Command = Parameter AND BytesToBeSent = 0 AND Frame.ConnId = ConnectionId AND ConnectionData.ConnectionId <> ConnectionId]]></HistoryEntry>
		<HistoryEntry Editor="O.H." TestVersion="1.0.0.2" Date="2014-05-09"><![CDATA[Where: #5.1 Data_Ok1, #5.1 Data_Ok2,#5.46 Data_Ok_MAX_SeqNo
Change Request: 2015-11-03-003
Reason: Test cases #5.1 Data_Ok1 and #5.2 Data_Ok2 do not check a overflow of the max SequenceNo.
Solution: New test case added (#5.46 Data_Ok_MAX_SeqNo) to force the overflow of the SequenceNo]]></HistoryEntry>
		<HistoryEntry Editor="O.H." TestVersion="1.0.0.3" Date="2015-11-03"><![CDATA[Where: #4.1/4.3 Para_Ok1
Change Request: 2013-05-06-003
Reason: Transition ends with a FailSafeData command although the test definition requiers a ProcessData command
Solution: The new RUN_DUT_TO_PROCESSDATA is used instead of RUN_DUT_TO_DATA]]></HistoryEntry>
		<HistoryEntry Editor="O.H." TestVersion="1.0.0.4" Date="2015-11-03"><![CDATA[Where: #5.46 Data_Ok_MAX_SeqNo
Change Request: 2015-11-03-003
Reason: Test names and Ids shall apply the ETG7100_FSoETestCases.xlsx.
Solution: Rename #5.46 to #5.49]]></HistoryEntry>
		<HistoryEntry Editor="O.H." TestVersion="1.0.0.5" Date="2015-11-03"><![CDATA[Where: #5.45 Data_WD
Change Request: 2015-11-03-002
Reason: ETG7100_FSoETestCases.xlsx requiers to run the DuT to Data with ProcessData and not with a FailsafeData command
Solution: The new RUN_DUT_TO_PROCESSDATA test function is used instead of RUN_DUT_TO_DATA]]></HistoryEntry>
		<HistoryEntry Editor="O.H." TestVersion="1.0.0.5" Date="2015-11-03"><![CDATA[Where: #5.46 Data_WD
Change Request: 2015-11-03-002
Reason: ETG7100_FSoETestCases.xlsx defines a new test case that forces the expiration of the DuTs watchdog. The transition to Data shall be requested with FailsafeData.
Solution: New test case added.]]></HistoryEntry>
		<HistoryEntry Editor="O.H." TestVersion="1.0.0.6" Date="2015-11-03"><![CDATA[Where: #4.20
Change Request: 2013-05-06-001
Reason: FSoE Slave Test Case #4.20 checks with FSoE Watchdog time max+1 and expects the receive frame with Reset cmd and Invalid_ComPara = 0x09. But Watchdog time 0xFFFF is allowed according to FSoE specification ETG.5100.
This test case should be skipped if maximum value of FSoE Watchdog is 0xFFFF.
Solution: The current watchdog value is checked and the test case will be skipped if the value is 0xffff.]]></HistoryEntry>
		<HistoryEntry Editor="O.H." TestVersion="1.0.0.7" Date="2015-11-03"><![CDATA[Where: #5.1a, #5.1b, #5.1c, #5.1d, #5.45a...#5.45d
Change Request: 2015-11-05-001
Reason: Run to DATA  state should be tested with different parameter. (MinConnId, MaxConnId, MinWatchdog,MaxWatchdog, MinSessionId, MaxSessionId).
Solution: New Test Cases added.]]></HistoryEntry>
		<HistoryEntry Editor="O.H." TestVersion="1.0.0.8" Date="2015-11-12"><![CDATA[Where: #5.1a, #5.1b, #5.1c, #5.1d
Change Request: 2015-11-05-001
Reason: Run to DATA  state should be tested with different parameter. DuT should execute DATA_OK1
Solution: DATA_OK1 transition is forced.]]></HistoryEntry>
		<HistoryEntry Editor="O.H." TestVersion="1.0.0.8" Date="2015-11-12"><![CDATA[Where: #1.1...#1.21
Change Request: --
Reason: Comments on german.
Solution: Description improved and extended]]></HistoryEntry>
		<HistoryEntry Editor="O.H." TestVersion="1.0.0.8" Date="2015-11-12"><![CDATA[Where: #1.1...#1.21
Change Request: --
Reason: Comments on german.
Solution: Description improved and extended]]></HistoryEntry>
		<HistoryEntry Editor="O.H." TestVersion="1.0.0.8" Date="2015-12-17"><![CDATA[Where: #5.1a, #5.1b, #5.1c, #5.1d, #5.45a...#5.45d
Change Request: 2015-11-05-001
Reason: Test exception due to missing c_tmpByte test variable
Solution: Test variable added to testcases]]></HistoryEntry>
		<HistoryEntry Editor="O.H." TestVersion="1.0.0.9" Date="2015-12-22"><![CDATA[Where: #4.60, #5.44
Change Request: 2016-01-08-001
Reason: Test exception due to overflow of test variable c_byte for SafeDatalength greater than 256
Solution: Overflow prevented by checking the byte max value in each iteration.]]></HistoryEntry>
		<HistoryEntry Editor="O.H." TestVersion="1.0.0.9" Date="2015-12-22"><![CDATA[Where: RUN_DUT_TO_RESET
Change Request: 2016-01-07-001
Reason: The Reset test function shall check the responded CommFaultReason to determine the RESET_START state of the DUT and prevent an old SlaveContainter from a previous test case.
Solution: Expected CommFaultReason = 0.]]></HistoryEntry>
		<HistoryEntry Editor="O.H." TestVersion="1.0.0.9" Date="2016-01-11"><![CDATA[Where: #2.3 SessionStay2
Change Request: 2015-12-15-001
Reason: Test test case #2.3 re-calculates the CRC if it is equal to the old CRC (New = True). The Slave state machine specification defines that this should not be done in this transition (New = False). This only happens in the case that the calculated CRC = 0x0000.
Solution: "Calculate New" parameter of the IS_CRC_CORRECT macro is set to false. Requires FSoE version greater than 1.2.1.0]]></HistoryEntry>
		<HistoryEntry Editor="O.H." TestVersion="1.0.0.10" Date="2016-01-11"><![CDATA[Where: #2.9, #3.8, #4.14 and #4.15
Change Request: 2016-01-11-002
Reason: To generate an invalid masterSequenceNo the test cases #2.9, #3.8, #4.14 and #4.15 increment the value by one to falsify the sequenceNo. But this could be a valid value if the slave has to increment the sequenceNo if the old CRC is equal to the old one. Therefore the test case shall decrement the masterSequenceNo to ensure an invalid value.
Solution: The test cases changed to decrement the MasterSeqNo instead of incrementing the value by one.]]></HistoryEntry>
		<HistoryEntry Editor="O.H." TestVersion="1.0.0.11" Date="2016-01-12"><![CDATA[Where: #1.6 - #1.9, #2.4 - #2.7, #2.12, #2.13, #3.3 - #3.6, #3.21 - #3.22, #3.28 - #3.29, #4.4 - #4.11, #4.38, #4.39, #4.45, #4.46, #5.3 - #5.15, #5.32, #5.33
Change Request: 2016-01-11-001
Reason: All test cases that checks with CRC+1 fail, if the valid CRC is 0xFFFF, since the overflow is not handled correctly. Same for test cases with CRC-1 and a valid CRC of 0x0000.
Solution: The test cases changed to avoid an overflow of the falsified CRC.]]></HistoryEntry>
		<HistoryEntry Editor="O.H." TestVersion="1.0.0.12" Date="2016-01-12"><![CDATA[Where: #5.49
Change Request: 2016-01-12-001
Reason: Long-term test cases should be exported to a new test file.
Solution: Test case #5.49 moved to TF-2604.]]></HistoryEntry>
		<HistoryEntry Editor="O.H." TestVersion="1.0.0.13" Date="2016-01-12"><![CDATA[Where: RUN_DUT_TO_SESSION
Change Request: 2015-12-15-001
Reason: Test function RUN_DUT_TO_SESSION  re-calculates the CRC if it is equal to the old CRC (New = True). The Slave state machine specification defines that this should not be done in this transition (New = False). This only happens in the case that the calculated CRC = 0x0000.
Solution: "Calculate New" parameter of the IS_CRC_CORRECT macro is set to false for every Session transition. Requires FSoE version greater than 1.2.1.0]]></HistoryEntry>
		<HistoryEntry Editor="O.H." TestVersion="1.0.0.14" Date="2016-01-14"><![CDATA[Where: Test
Change Request: --
Reason: Minor version should be incremented for a working group review release.
Solution: Minor version incremented]]></HistoryEntry>
		<HistoryEntry Editor="O.H." TestVersion="1.0.1.0" Date="2016-01-28"><![CDATA[Where: #2.14
Change Request: 2016-01-28-001
Reason: According to ETG5100 the test case shall allow two CommFaultReasons (INVALID_CMD and INVALID_CRC).
Solution: Test case changed to allow both CommFaultReasons]]></HistoryEntry>
		<HistoryEntry Editor="O.H." TestVersion="1.0.1.1" Date="2016-02-04"><![CDATA[Where: #3.29, #4.46, #5.33
Change Request: 2016-02-04-001
Reason: According to ETG5100 the test case shall set OldCrc and LastCrc to 0 before sending the session command to reset the connection. Otherwise the crc is falsified twice and it may results in a valid crc.
Solution: Test case changed to set the values to 0.]]></HistoryEntry>
		<HistoryEntry Editor="O.H." TestVersion="1.0.1.2" Date="2016-02-15"><![CDATA[Where: Test
Change Request: --
Reason: Minor version should be incremented for a ETG review release.
Solution: Minor version incremented]]></HistoryEntry>
		<HistoryEntry Editor="O.H." TestVersion="1.0.2.0" Date="2016-03-03"><![CDATA[Where: #2.5, #2.15, #3.19, #3.28, #3.29 
Change Request: 2016-01-11-001
Reason: All test cases that checks with CRC+1 fail, if the valid CRC is 0xFFFF, since the overflow is not handled correctly. Same for test cases with CRC-1 and a valid CRC of 0x0000.
Solution: The named test cases were missing at the changes of the first CR.]]></HistoryEntry>
		<HistoryEntry Editor="O.H." TestVersion="1.0.2.1" Date="2016-04-19"><![CDATA[Where: #5.45b, #5.45d
Change Request: 2015-11-05-001
Reason: The runtime of these two test cases depends directly on the configured watchdog time.
Solution: Test cases moved to TF-2604]]></HistoryEntry>
		<HistoryEntry Editor="O.H." TestVersion="1.0.2.2" Date="2016-05-04"><![CDATA[Where: #5.45a, #5.45c
Change Request: 2015-11-05-001
Reason: Test cases shall execute at least one DATA_OK state
Solution: Test cases changed to run DATA_OK in DATA]]></HistoryEntry>
		<HistoryEntry Editor="O.H." TestVersion="1.0.2.2" Date="2016-05-04"><![CDATA[Where: #1.1-#1.23
Change Request: --
Reason: Test case description shall match to the xsd schema.
Solution: Attributes used in 'References' instead of a xml text node]]></HistoryEntry>
		<HistoryEntry Editor="O.H." TestVersion="1.1.0.0" Date="2016-10-20"><![CDATA[Where: #5.45.a
Change Request: 2016-10-20-001
Reason: Test case shall be moved to TF-2604 to allow an individual check of the min Watchdog against the possible cycle time of the test master.
Solution: Test case moved to TF-2604 ]]></HistoryEntry>
		<HistoryEntry Editor="O.H." TestVersion="1.1.1.0" Date="2017-02-22"><![CDATA[Where: Test functions: ResetOK, SESSION_STAY1, SESSION_STAY1, SESSION_STAY1_INCREMENTED_CRC0, SESSION_STAY1_DECREMENTED_CRC1; Test cases: #2.2, #2.3, #2.12, #2.13, #2.14, #2.44, #4.59, #5.43
Change Request: 2017-02-22-001
Reason: The 'SecondFrameSent' functionality was not tested correctly for DuTs with one byte initialisation data length.
Solution: Test functions and cases extended for a correct 'SecondFrameSent' behaviour.]]></HistoryEntry>
		<HistoryEntry Editor="O.H." TestVersion="1.1.2.0" Date="2017-02-22"><![CDATA[Where: #3.44, #4.59, #5.43
Change Request: 2017-02-22-002
Reason: The slave state table requiers in CONN_RESET2, PARA_RESET2 and DATA_RESET2 that a new SlaveSessionId is created by the slave. This two session Ids are not checked by the test cases and a reused SlaveSessionId is not detected.
Solution: Test cases changed to check for a new generated SaveSessionId and raise an error if SessionId 1 is equal to SessionId 2]]></HistoryEntry>
		<HistoryEntry Editor="O.H." TestVersion="1.1.3.0" Date="2017-04-20"><![CDATA[Where: Test
Change Request: --
Reason: Minor version should be incremented for ETG release.
Solution: Minor version incremented]]></HistoryEntry>
		<HistoryEntry Editor="O.H." TestVersion="1.1.4.0" Date="2017-03-02"><![CDATA[Where: Test functions: RESET_OK, Reset_OK, CONN_RESET1, DATA_RESET1, PARA_RESET1
Change Request: 2017-03-02-001
Reason: From the master state machine point of view the OldSlaveCrc contains the CRC0 of the last received slave frame and is used to validate the CRC of the next received slave frame. Until now this variable is only updated by the IS_CRC_CORRECT macro or it is reset (=0) by an action of a specific state of the master state machine. But the variable has to be set every time a new slave frame is received.
Solution: Test functions (named above) changed to set the OldSlaveCrc manually.]]></HistoryEntry>
	</History>
	<Comment>Depending on the communication procedure initiated by the FSoE Master (EtherCAT Conformance Test Tool), the FSoE Test Slave can have different states that are tested within this test. Each FSoE state (RESET, SESSION, CONNECTION, PARAMETER and DATA) is tested in its respective Test Group. All possible transitions (e.g. RESET_OK or SESSION_FAIL2) of the FSoE Slave states are checked in the Test Cases of a Test Group. All Test Cases referes to the ETG5100 and ETG7100.3 specifications.

Abbreviations:
DuT			Device under Test
SessionId		Randomly generated session ID (initialised with 0 on power-on)
DataCommand		Indicates whether the ProcessData or FailSafeData command is sent in the Data state. Initialised with FailSafeData
BytesToBeSent		If several Safety PDUs have to be sent in the Session, Connection or Parameter state, this variable indicates how many octets are still to be sent
ConnData		ConnData consist of the connection ID and the FSoE Slave Address. Initialised by the safety configurator on power-on according to the configuration
ConnData.ConnId		ConnectionId of the FSoE Connection
SafePara			The SafePara consist of the safety communication parameters and the safety application parameters. Initialised by the safety configurator on power-on according to the configuration
SafePara.Watchdog	FSoE watchdog 
SafeParaSize		Indicates the SafePara length. Initialised by the safety configurator on power-on according to the configuration data
SafeOutputs		Contains the process values of the safety outputs sent to the FSoE Slave. Initialised with FS_VALUE (Fail-safe Data = 0)
SafeInputs		Contains the process values of the safety inputs received by the FSoE Slave. Initialised with FS_VALUE (Fail-safe Data = 0)
CommFaultReason		Indicates the error code in the event of a communication error
</Comment>
	<TestVariables>
		<TestVariable>
			<Name>t_masterFrame(SafeOutputs.Length)</Name>
			<Type>FSoEFrame</Type>
			<Comment>MasterFrame</Comment>
		</TestVariable>
		<TestVariable>
			<Name>t_slaveFrame(SafeInputs.Length)</Name>
			<Type>FSoEFrame</Type>
			<Comment>SlaveFrame</Comment>
		</TestVariable>
		<TestVariable>
			<Name>LastCrc</Name>
			<Type>UInt16</Type>
			<Comment>Die CRC_0 des zuletzt gesendeten Master Frames.</Comment>
		</TestVariable>
		<TestVariable>
			<Name>OldMasterCrc</Name>
			<Type>UInt16</Type>
			<Comment>Die CRC_0 des zuletzt gesendeten Master Frames.</Comment>
		</TestVariable>
		<TestVariable>
			<Name>t_oldSlaveCrc</Name>
			<Type>UInt16</Type>
			<Comment>Die CRC_0 des zuletzt gesendeten Slave Frames.</Comment>
		</TestVariable>
		<TestVariable>
			<Name>t_masterSeqNo</Name>
			<Type>UInt16</Type>
		</TestVariable>
		<TestVariable>
			<Name>t_slaveSeqNo</Name>
			<Type>UInt16</Type>
		</TestVariable>
		<TestVariable>
			<Name>t_masterSessionId</Name>
			<Type>UInt16</Type>
			<Comment>Zufällig generierte Session ID</Comment>
		</TestVariable>
		<TestVariable>
			<Name>t_slaveSessionId</Name>
			<Type>UInt16</Type>
			<Comment>Vom Slave generierte Session ID</Comment>
		</TestVariable>
		<TestVariable>
			<Name>DataCommand</Name>
			<Type>DataCommand</Type>
			<Comment>Erlaubte Werte: FailSafeData, ProcessData</Comment>
		</TestVariable>
		<TestVariable>
			<Name>BytesToBeSent</Name>
			<Type>Int32</Type>
		</TestVariable>
		<TestVariable>
			<Name>crcCorrect</Name>
			<Type>Bool</Type>
			<Comment>Rückgabewert der IsCrcCorrect-Action</Comment>
		</TestVariable>
		<TestVariable>
			<Name>safeDataCorrect</Name>
			<Type>Bool</Type>
			<Comment>Rückgabewert der IsSafeDataCorrect-Action</Comment>
		</TestVariable>
		<TestVariable>
			<Name>t_expWdExpired</Name>
			<Type>Bool</Type>
		</TestVariable>
		<TestVariable>
			<Name>t_wdExpired</Name>
			<Type>Bool</Type>
		</TestVariable>
		<TestVariable>
			<Name>CommFaultReason</Name>
			<Type>Byte</Type>
			<Comment>Zeigt den Fehlercode bei einem Kommunikationsfehler an</Comment>
		</TestVariable>
		<TestVariable>
			<Name>t_index</Name>
			<Type>Int32</Type>
		</TestVariable>
		<TestVariable>
			<Name>t_safeDataIndex</Name>
			<Type>Int32</Type>
		</TestVariable>
		<TestVariable>
			<Name>t_tmpInt32</Name>
			<Type>Int32</Type>
		</TestVariable>
		<TestVariable>
			<Name>t_watchdogExpiredCount</Name>
			<Type>Int32</Type>
			<Comment>Zeigt an wie ob der Master Watchdog ausgelöst hat</Comment>
		</TestVariable>
		<TestVariable>
			<Name>t_connectionId</Name>
			<Type>UInt16</Type>
		</TestVariable>
		<TestVariable>
			<Name>t_slaveAddress</Name>
			<Type>UInt16</Type>
		</TestVariable>
		<TestVariable>
			<Name>t_commFaultReason</Name>
			<Type>String</Type>
		</TestVariable>
		<TestVariable>
			<Name>t_connData[4]</Name>
			<Type>ArrayOfBytes</Type>
		</TestVariable>
		<TestVariable>
			<Name>t_watchdog</Name>
			<Type>UInt16</Type>
		</TestVariable>
		<TestVariable>
			<Name>t_commParaLength</Name>
			<Type>UInt16</Type>
		</TestVariable>
		<TestVariable>
			<Name>t_applicationParaLength</Name>
			<Type>UInt16</Type>
		</TestVariable>
		<TestVariable>
			<Name>t_safeParaSize</Name>
			<Type>UInt16</Type>
		</TestVariable>
		<TestVariable>
			<Name>t_safePara[SafeParaSize]</Name>
			<Type>ArrayOfBytes</Type>
		</TestVariable>
		<TestVariable>
			<Name>t_safeData[SafeDataLength]</Name>
			<Type>ArrayOfBytes</Type>
		</TestVariable>
		<TestVariable>
			<Name>t_initUInt16</Name>
			<Type>UInt16</Type>
		</TestVariable>
		<TestVariable>
			<Name>t_expectedConnId</Name>
			<Type>UInt16</Type>
		</TestVariable>
		<TestVariable>
			<Name>t_resetSessionId</Name>
			<Type>UInt16</Type>
		</TestVariable>
		<TestVariable>
			<Name>t_maxUInt16</Name>
			<Type>UInt16</Type>
		</TestVariable>
		<TestVariable>
			<Name>SecondSessionFrameSent</Name>
			<Type>Bool</Type>
		</TestVariable>
		<TestVariable>
			<Name>t_minUInt16</Name>
			<Type>UInt16</Type>
		</TestVariable>
	</TestVariables>
	<TestFunctions>
		<TestFunction Name="CHECK_RESET_FAIL">
			<TestSteps>
				<TestStep Name="SetTempUint16">
					<Action>
						<SetVariables>
							<SetVariable>
								<Destination>t_initUInt16</Destination>
								<Source>0</Source>
							</SetVariable>
						</SetVariables>
					</Action>
				</TestStep>
				<TestStep Name="SetLastCrc">
					<Action>
						<SetVariables>
							<SetVariable>
								<Destination>LastCrc</Destination>
								<Source>t_masterFrame.Crc0</Source>
							</SetVariable>
						</SetVariables>
					</Action>
				</TestStep>
				<TestStep Name="StartWatchdog">
					<Action>
						<StartWd>
							<Watchdog>t_watchdog</Watchdog>
						</StartWd>
					</Action>
				</TestStep>
				<TestStep Name="ReceiveEvent">
					<Event>
						<ReceiveFrame>t_slaveFrame</ReceiveFrame>
					</Event>
					<Informations2>
						<Information>
							<Type>Verbose</Type>
							<Value Param0="t_slaveFrame.FrameData">Slave Frame: {0}</Value>
						</Information>
					</Informations2>
				</TestStep>
				<TestStep Name="CheckWatchdog">
					<Event>
						<WatchdogExpired>
							<SetVariables>
								<SetVariable>
									<Destination>t_wdExpired</Destination>
									<Source>true</Source>
								</SetVariable>
							</SetVariables>
						</WatchdogExpired>
					</Event>
					<Compares>
						<Compare>
							<Condition>
								<Value1>t_wdExpired</Value1>
								<Operator>Equal</Operator>
								<Value2>true</Value2>
							</Condition>
							<Condition>
								<Value1>t_expWdExpired</Value1>
								<Operator>Equal</Operator>
								<Value2>true</Value2>
							</Condition>
							<Statement>
								<SetVariables>
									<SetVariable>
										<Destination>t_wdExpired</Destination>
										<Source>false</Source>
									</SetVariable>
									<SetVariable>
										<Destination>t_expWdExpired</Destination>
										<Source>false</Source>
									</SetVariable>
								</SetVariables>
							</Statement>
							<Statement>
								<Information>
									<Type>Output</Type>
									<Value>Watchdog expired as expected</Value>
								</Information>
							</Statement>
							<Statement>
								<GotoStep>CheckCmdAndCommFaultReasonAndConnId</GotoStep>
							</Statement>
						</Compare>
						<Compare>
							<Condition>
								<Value1>t_wdExpired</Value1>
								<Operator>Equal</Operator>
								<Value2>true</Value2>
							</Condition>
							<Statement>
								<SetVariables>
									<SetVariable>
										<Destination>t_wdExpired</Destination>
										<Source>false</Source>
									</SetVariable>
								</SetVariables>
							</Statement>
							<Statement>
								<Return>
									<Type>Error</Type>
									<Value Param0="ElapsedWD">Watchdog expired! {0} ms </Value>
									<Id>5</Id>
								</Return>
							</Statement>
						</Compare>
					</Compares>
				</TestStep>
				<TestStep Name="CheckCmdAndCommFaultReasonAndConnId">
					<Compares>
						<Compare>
							<Condition>
								<Value1>t_slaveFrame.Command</Value1>
								<Operator>NotEqual</Operator>
								<Value2>Reset</Value2>
							</Condition>
							<Condition>
								<Value1>t_slaveFrame.Command</Value1>
								<Operator>NotEqual</Operator>
								<Value2>Session</Value2>
							</Condition>
							<Condition>
								<Value1>t_slaveFrame.Command</Value1>
								<Operator>NotEqual</Operator>
								<Value2>Connection</Value2>
							</Condition>
							<Condition>
								<Value1>t_slaveFrame.Command</Value1>
								<Operator>NotEqual</Operator>
								<Value2>Parameter</Value2>
							</Condition>
							<Condition>
								<Value1>t_slaveFrame.Command</Value1>
								<Operator>NotEqual</Operator>
								<Value2>ProcessData</Value2>
							</Condition>
							<Condition>
								<Value1>t_slaveFrame.Command</Value1>
								<Operator>NotEqual</Operator>
								<Value2>FailSafeData</Value2>
							</Condition>
							<Statement>
								<Return>
									<Type>Error</Type>
									<Value Param0="t_slaveFrame.Command">Unknown Cmd received: 0x{0:x2} || expected: 0x2a (Reset) </Value>
									<Id>2</Id>
								</Return>
							</Statement>
						</Compare>
						<Compare>
							<Condition>
								<Value1>t_slaveFrame.Command</Value1>
								<Operator>NotEqual</Operator>
								<Value2>Reset</Value2>
							</Condition>
							<Statement>
								<Return>
									<Type>Error</Type>
									<Value Param0="t_slaveFrame.Command">Invalid command received: 0x{0:x2} || expected: 0x2a (Reset) </Value>
									<Id>1</Id>
								</Return>
							</Statement>
						</Compare>
						<Compare>
							<Condition>
								<Value1>t_slaveFrame.Command</Value1>
								<Operator>Equal</Operator>
								<Value2>Reset</Value2>
							</Condition>
							<Statement>
								<Information>
									<Type>Verbose</Type>
									<Value Param0="t_slaveFrame.Command">Expected command received:  0x{0:x2}  (Reset) </Value>
								</Information>
							</Statement>
						</Compare>
						<Compare>
							<Condition>
								<Value1>t_slaveFrame.FrameData[1]</Value1>
								<Operator>NotEqual</Operator>
								<Value2>c_CommFaultReason</Value2>
							</Condition>
							<Statement>
								<Return>
									<Type>Error</Type>
									<Value Param0="t_slaveFrame.FrameData[1]" Param1="c_CommFaultReason">Invalid CommFaultReason received: {0} || expected: {1} </Value>
									<Id>7</Id>
								</Return>
							</Statement>
						</Compare>
						<Compare>
							<Condition>
								<Value1>t_slaveFrame.FrameData[1]</Value1>
								<Operator>Equal</Operator>
								<Value2>c_CommFaultReason</Value2>
							</Condition>
							<Statement>
								<Information>
									<Type>Verbose</Type>
									<Value Param0="t_slaveFrame.FrameData[1]" Param1="c_CommFaultReason">Expected CommFaultReason received: {0}</Value>
								</Information>
							</Statement>
						</Compare>
						<Compare>
							<Condition>
								<Value1>t_slaveFrame.ConnId</Value1>
								<Operator>NotEqual</Operator>
								<Value2>t_initUInt16</Value2>
							</Condition>
							<Statement>
								<Return>
									<Type>Error</Type>
									<Value>Invalid Connection Id received</Value>
									<Id>3</Id>
								</Return>
							</Statement>
						</Compare>
					</Compares>
				</TestStep>
				<TestStep Name="SetVars">
					<Action>
						<SetVariables>
							<SetVariable>
								<Destination>LastCrc</Destination>
								<Source>0</Source>
							</SetVariable>
							<SetVariable>
								<Destination>t_slaveSeqNo</Destination>
								<Source>1</Source>
							</SetVariable>
							<SetVariable>
								<Destination>t_oldSlaveCrc</Destination>
								<Source>0</Source>
							</SetVariable>
						</SetVariables>
					</Action>
				</TestStep>
				<TestStep Name="CheckReceivedCrcInReset">
					<Informations1>
						<Information>
							<Type>Verbose</Type>
							<Value Param0="t_slaveFrame.FrameData" Param1="LastCrc" Param2="t_slaveSeqNo" Param3="t_oldSlaveCrc" Param4="true">IsCrcCorrect(Frame {0}, LastCrc 0x{1:X4}, SeqNo {2}, OldCrc 0x{3:X4}, New {4})</Value>
						</Information>
					</Informations1>
					<Action>
						<IsCrcCorrect ReturnValue="crcCorrect">
							<Frame>t_slaveFrame</Frame>
							<LastCrc>LastCrc</LastCrc>
							<SequenceNo>t_slaveSeqNo</SequenceNo>
							<OldCrc>t_oldSlaveCrc</OldCrc>
							<New>true</New>
						</IsCrcCorrect>
					</Action>
					<Compares>
						<Compare>
							<Condition>
								<Value1>crcCorrect</Value1>
								<Operator>Equal</Operator>
								<Value2>false</Value2>
							</Condition>
							<Statement>
								<Return>
									<Type>Error</Type>
									<Value>Invalid Crc received</Value>
									<Id>4</Id>
								</Return>
							</Statement>
						</Compare>
						<Compare>
							<Condition>
								<Value1>SafeInputs.Length</Value1>
								<Operator>Equal</Operator>
								<Value2>1</Value2>
							</Condition>
							<Statement>
								<Return>
									<Type>Output</Type>
									<Value/>
								</Return>
							</Statement>
						</Compare>
					</Compares>
					<ReturnValue>
						<OnFailure>
							<Type>Error</Type>
							<Value Param0="t_slaveFrame.Crc0">Invalid Crc0 reveived ({0:x})</Value>
							<Id>4</Id>
						</OnFailure>
					</ReturnValue>
				</TestStep>
				<TestStep Name="SetVars">
					<Action>
						<SetVariables>
							<SetVariable>
								<Destination>c_tmpByte</Destination>
								<Source>0</Source>
							</SetVariable>
							<SetVariable>
								<Destination>t_index</Destination>
								<Source>1</Source>
							</SetVariable>
						</SetVariables>
					</Action>
				</TestStep>
				<TestStep Name="CheckRemainingSafeData">
					<Compares>
						<Compare>
							<Condition>
								<Value1>t_slaveFrame.SafeData[t_index]</Value1>
								<Operator>NotEqual</Operator>
								<Value2>c_tmpByte</Value2>
							</Condition>
							<Statement>
								<Return>
									<Type>Error</Type>
									<Value Param0="t_slaveFrame.SafeData[t_index]" Param1="t_index">SafeData[{1}]  = 0x{0:x2} (has to be unused (=0)) </Value>
									<Id>7</Id>
								</Return>
							</Statement>
						</Compare>
					</Compares>
				</TestStep>
				<TestStep Name="IncrementIndex">
					<Action>
						<SetVariables>
							<SetVariable>
								<Destination>t_index</Destination>
								<Source>t_index+1</Source>
							</SetVariable>
						</SetVariables>
					</Action>
				</TestStep>
				<TestStep Name="CheckIndex">
					<Compares>
						<Compare>
							<Condition>
								<Value1>t_index</Value1>
								<Operator>Lower</Operator>
								<Value2>SafeInputs.Length</Value2>
							</Condition>
							<Statement>
								<GotoStep>CheckRemainingSafeData</GotoStep>
							</Statement>
						</Compare>
					</Compares>
				</TestStep>
			</TestSteps>
		</TestFunction>
		<TestFunction Name="CHECK_RESET_FAIL5">
			<TestSteps>
				<TestStep Name="SetTempUint16">
					<Action>
						<SetVariables>
							<SetVariable>
								<Destination>t_initUInt16</Destination>
								<Source>0</Source>
							</SetVariable>
						</SetVariables>
					</Action>
				</TestStep>
				<TestStep Name="SetLastCrc">
					<Action>
						<SetVariables>
							<SetVariable>
								<Destination>LastCrc</Destination>
								<Source>t_masterFrame.Crc0</Source>
							</SetVariable>
						</SetVariables>
					</Action>
				</TestStep>
				<TestStep Name="StartWatchdog">
					<Action>
						<StartWd>
							<Watchdog>t_watchdog</Watchdog>
						</StartWd>
					</Action>
				</TestStep>
				<TestStep Name="ReceiveEvent">
					<Event>
						<ReceiveFrame>t_slaveFrame</ReceiveFrame>
					</Event>
					<Informations2>
						<Information>
							<Type>Verbose</Type>
							<Value Param0="t_slaveFrame.FrameData">Slave Frame: {0}</Value>
						</Information>
					</Informations2>
				</TestStep>
				<TestStep Name="CheckWatchdog">
					<Event>
						<WatchdogExpired>
							<SetVariables>
								<SetVariable>
									<Destination>t_wdExpired</Destination>
									<Source>true</Source>
								</SetVariable>
							</SetVariables>
						</WatchdogExpired>
					</Event>
					<Compares>
						<Compare>
							<Condition>
								<Value1>t_wdExpired</Value1>
								<Operator>Equal</Operator>
								<Value2>true</Value2>
							</Condition>
							<Condition>
								<Value1>t_expWdExpired</Value1>
								<Operator>Equal</Operator>
								<Value2>true</Value2>
							</Condition>
							<Statement>
								<SetVariables>
									<SetVariable>
										<Destination>t_wdExpired</Destination>
										<Source>false</Source>
									</SetVariable>
									<SetVariable>
										<Destination>t_expWdExpired</Destination>
										<Source>false</Source>
									</SetVariable>
								</SetVariables>
							</Statement>
							<Statement>
								<Information>
									<Type>Output</Type>
									<Value>Watchdog expired as expected</Value>
								</Information>
							</Statement>
							<Statement>
								<GotoStep>CheckCmdAndCommFaultReasonAndConnId</GotoStep>
							</Statement>
						</Compare>
						<Compare>
							<Condition>
								<Value1>t_wdExpired</Value1>
								<Operator>Equal</Operator>
								<Value2>true</Value2>
							</Condition>
							<Statement>
								<SetVariables>
									<SetVariable>
										<Destination>t_wdExpired</Destination>
										<Source>false</Source>
									</SetVariable>
								</SetVariables>
							</Statement>
							<Statement>
								<Return>
									<Type>Error</Type>
									<Value Param0="ElapsedWD">Watchdog expired! {0} ms </Value>
									<Id>5</Id>
								</Return>
							</Statement>
						</Compare>
					</Compares>
				</TestStep>
				<TestStep Name="CheckCmdAndCommFaultReasonAndConnId">
					<Compares>
						<Compare>
							<Condition>
								<Value1>t_slaveFrame.Command</Value1>
								<Operator>NotEqual</Operator>
								<Value2>Reset</Value2>
							</Condition>
							<Condition>
								<Value1>t_slaveFrame.Command</Value1>
								<Operator>NotEqual</Operator>
								<Value2>Session</Value2>
							</Condition>
							<Condition>
								<Value1>t_slaveFrame.Command</Value1>
								<Operator>NotEqual</Operator>
								<Value2>Connection</Value2>
							</Condition>
							<Condition>
								<Value1>t_slaveFrame.Command</Value1>
								<Operator>NotEqual</Operator>
								<Value2>Parameter</Value2>
							</Condition>
							<Condition>
								<Value1>t_slaveFrame.Command</Value1>
								<Operator>NotEqual</Operator>
								<Value2>ProcessData</Value2>
							</Condition>
							<Condition>
								<Value1>t_slaveFrame.Command</Value1>
								<Operator>NotEqual</Operator>
								<Value2>FailSafeData</Value2>
							</Condition>
							<Statement>
								<Return>
									<Type>Error</Type>
									<Value Param0="t_slaveFrame.Command">Unknown Cmd received: 0x{0:x2} || expected: 0x2a (Reset) </Value>
									<Id>2</Id>
								</Return>
							</Statement>
						</Compare>
						<Compare>
							<Condition>
								<Value1>t_slaveFrame.Command</Value1>
								<Operator>NotEqual</Operator>
								<Value2>Reset</Value2>
							</Condition>
							<Statement>
								<Return>
									<Type>Error</Type>
									<Value Param0="t_slaveFrame.Command">Invalid command received: 0x{0:x2} || expected: 0x2a (Reset) </Value>
									<Id>1</Id>
								</Return>
							</Statement>
						</Compare>
						<Compare>
							<Condition>
								<Value1>t_slaveFrame.Command</Value1>
								<Operator>Equal</Operator>
								<Value2>Reset</Value2>
							</Condition>
							<Statement>
								<Information>
									<Type>Verbose</Type>
									<Value Param0="t_slaveFrame.Command">Expected command received:  0x{0:x2}  (Reset) </Value>
								</Information>
							</Statement>
						</Compare>
						<Compare>
							<Condition>
								<Value1>t_slaveFrame.ConnId</Value1>
								<Operator>NotEqual</Operator>
								<Value2>t_initUInt16</Value2>
							</Condition>
							<Statement>
								<Return>
									<Type>Error</Type>
									<Value>Invalid Connection Id received</Value>
									<Id>3</Id>
								</Return>
							</Statement>
						</Compare>
						<Compare>
							<Condition>
								<Value1>t_slaveFrame.FrameData[1]</Value1>
								<Operator>Equal</Operator>
								<Value2>INVALID_CMD</Value2>
							</Condition>
							<Statement>
								<Information>
									<Type>Verbose</Type>
									<Value Param0="t_slaveFrame.FrameData[1]">Expected CommFaultReason received: {0} (INVALID_CMD)</Value>
								</Information>
							</Statement>
							<Statement>
								<GotoStep>SetVars</GotoStep>
							</Statement>
						</Compare>
						<Compare>
							<Condition>
								<Value1>t_slaveFrame.FrameData[1]</Value1>
								<Operator>Equal</Operator>
								<Value2>INVALID_CRC</Value2>
							</Condition>
							<Statement>
								<Information>
									<Type>Verbose</Type>
									<Value Param0="t_slaveFrame.FrameData[1]">Expected CommFaultReason received: {0} (INVALID_CRC)</Value>
								</Information>
							</Statement>
							<Statement>
								<GotoStep>SetVars</GotoStep>
							</Statement>
						</Compare>
						<Compare>
							<Condition>
								<Value1>0</Value1>
								<Operator>Equal</Operator>
								<Value2>0</Value2>
							</Condition>
							<Statement>
								<Return>
									<Type>Error</Type>
									<Value Param0="t_slaveFrame.FrameData[1]">Invalid CommFaultReason received: {0} || expected: INVALID_CMD or INVALID_CRC</Value>
									<Id>7</Id>
								</Return>
							</Statement>
						</Compare>
					</Compares>
				</TestStep>
				<TestStep Name="SetVars">
					<Action>
						<SetVariables>
							<SetVariable>
								<Destination>LastCrc</Destination>
								<Source>0</Source>
							</SetVariable>
							<SetVariable>
								<Destination>t_slaveSeqNo</Destination>
								<Source>1</Source>
							</SetVariable>
							<SetVariable>
								<Destination>t_oldSlaveCrc</Destination>
								<Source>0</Source>
							</SetVariable>
						</SetVariables>
					</Action>
				</TestStep>
				<TestStep Name="CheckReceivedCrcInReset">
					<Informations1>
						<Information>
							<Type>Verbose</Type>
							<Value Param0="t_slaveFrame.FrameData" Param1="LastCrc" Param2="t_slaveSeqNo" Param3="t_oldSlaveCrc" Param4="true">IsCrcCorrect(Frame {0}, LastCrc 0x{1:X4}, SeqNo {2}, OldCrc 0x{3:X4}, New {4})</Value>
						</Information>
					</Informations1>
					<Action>
						<IsCrcCorrect ReturnValue="crcCorrect">
							<Frame>t_slaveFrame</Frame>
							<LastCrc>LastCrc</LastCrc>
							<SequenceNo>t_slaveSeqNo</SequenceNo>
							<OldCrc>t_oldSlaveCrc</OldCrc>
							<New>true</New>
						</IsCrcCorrect>
					</Action>
					<Compares>
						<Compare>
							<Condition>
								<Value1>crcCorrect</Value1>
								<Operator>Equal</Operator>
								<Value2>false</Value2>
							</Condition>
							<Statement>
								<Return>
									<Type>Error</Type>
									<Value>Invalid Crc received</Value>
									<Id>4</Id>
								</Return>
							</Statement>
						</Compare>
						<Compare>
							<Condition>
								<Value1>SafeInputs.Length</Value1>
								<Operator>Equal</Operator>
								<Value2>1</Value2>
							</Condition>
							<Statement>
								<Return>
									<Type>Output</Type>
									<Value/>
								</Return>
							</Statement>
						</Compare>
					</Compares>
					<ReturnValue>
						<OnFailure>
							<Type>Error</Type>
							<Value Param0="t_slaveFrame.Crc0">Invalid Crc0 reveived ({0:x})</Value>
							<Id>4</Id>
						</OnFailure>
					</ReturnValue>
				</TestStep>
				<TestStep Name="SetVars">
					<Action>
						<SetVariables>
							<SetVariable>
								<Destination>c_tmpByte</Destination>
								<Source>0</Source>
							</SetVariable>
							<SetVariable>
								<Destination>t_index</Destination>
								<Source>1</Source>
							</SetVariable>
						</SetVariables>
					</Action>
				</TestStep>
				<TestStep Name="CheckRemainingSafeData">
					<Compares>
						<Compare>
							<Condition>
								<Value1>t_slaveFrame.SafeData[t_index]</Value1>
								<Operator>NotEqual</Operator>
								<Value2>c_tmpByte</Value2>
							</Condition>
							<Statement>
								<Return>
									<Type>Error</Type>
									<Value Param0="t_slaveFrame.SafeData[t_index]" Param1="t_index">SafeData[{1}]  = 0x{0:x2} (has to be unused (=0)) </Value>
									<Id>7</Id>
								</Return>
							</Statement>
						</Compare>
					</Compares>
				</TestStep>
				<TestStep Name="IncrementIndex">
					<Action>
						<SetVariables>
							<SetVariable>
								<Destination>t_index</Destination>
								<Source>t_index+1</Source>
							</SetVariable>
						</SetVariables>
					</Action>
				</TestStep>
				<TestStep Name="CheckIndex">
					<Compares>
						<Compare>
							<Condition>
								<Value1>t_index</Value1>
								<Operator>Lower</Operator>
								<Value2>SafeInputs.Length</Value2>
							</Condition>
							<Statement>
								<GotoStep>CheckRemainingSafeData</GotoStep>
							</Statement>
						</Compare>
					</Compares>
				</TestStep>
			</TestSteps>
		</TestFunction>
		<TestFunction Name="CHECK_REMAINING_SAFE_DATA_IN_SESSION">
			<TestSteps>
				<TestStep Name="SetStartIndex">
					<Compares>
						<Compare>
							<Condition>
								<Value1>SafeInputs.Length</Value1>
								<Operator>Equal</Operator>
								<Value2>1</Value2>
							</Condition>
							<Statement>
								<Return>
									<Type>Output</Type>
									<Value/>
								</Return>
							</Statement>
						</Compare>
						<Compare>
							<Condition>
								<Value1>SafeDataLength</Value1>
								<Operator>NotEqual</Operator>
								<Value2>1</Value2>
							</Condition>
							<Statement>
								<SetVariables>
									<SetVariable>
										<Destination>t_safeDataIndex</Destination>
										<Source>2</Source>
									</SetVariable>
								</SetVariables>
							</Statement>
						</Compare>
						<Compare>
							<Condition>
								<Value1>SafeDataLength</Value1>
								<Operator>Equal</Operator>
								<Value2>1</Value2>
							</Condition>
							<Statement>
								<SetVariables>
									<SetVariable>
										<Destination>t_safeDataIndex</Destination>
										<Source>1</Source>
									</SetVariable>
								</SetVariables>
							</Statement>
						</Compare>
						<Compare>
							<Condition>
								<Value1>SafeInputs.Length</Value1>
								<Operator>LowerOrEqual</Operator>
								<Value2>t_safeDataIndex</Value2>
							</Condition>
							<Statement>
								<Return>
									<Type>Output</Type>
									<Value/>
								</Return>
							</Statement>
						</Compare>
					</Compares>
				</TestStep>
				<TestStep Name="SetVars">
					<Action>
						<SetVariables>
							<SetVariable>
								<Destination>c_tmpByte</Destination>
								<Source>0</Source>
							</SetVariable>
						</SetVariables>
					</Action>
				</TestStep>
				<TestStep Name="CheckRemainingSafeData">
					<Compares>
						<Compare>
							<Condition>
								<Value1>t_slaveFrame.SafeData[t_safeDataIndex]</Value1>
								<Operator>NotEqual</Operator>
								<Value2>c_tmpByte</Value2>
							</Condition>
							<Statement>
								<Return>
									<Type>Error</Type>
									<Value Param0="t_slaveFrame.SafeData[t_safeDataIndex]" Param1="t_safeDataIndex">SafeData[{1}]  = 0x{0:x2} (shall be unused (=0)) </Value>
									<Id>7</Id>
								</Return>
							</Statement>
						</Compare>
					</Compares>
				</TestStep>
				<TestStep Name="IncrementIndex">
					<Action>
						<SetVariables>
							<SetVariable>
								<Destination>t_safeDataIndex</Destination>
								<Source>t_safeDataIndex+1</Source>
							</SetVariable>
						</SetVariables>
					</Action>
				</TestStep>
				<TestStep Name="CheckIndex">
					<Compares>
						<Compare>
							<Condition>
								<Value1>t_safeDataIndex</Value1>
								<Operator>Lower</Operator>
								<Value2>SafeInputs.Length</Value2>
							</Condition>
							<Statement>
								<GotoStep>CheckRemainingSafeData</GotoStep>
							</Statement>
						</Compare>
					</Compares>
				</TestStep>
			</TestSteps>
		</TestFunction>
		<TestFunction Name="CHECK_RESET_FAIL_WO_WD">
			<TestSteps>
				<TestStep Name="SetTempUint16">
					<Action>
						<SetVariables>
							<SetVariable>
								<Destination>t_initUInt16</Destination>
								<Source>0</Source>
							</SetVariable>
						</SetVariables>
					</Action>
				</TestStep>
				<TestStep Name="SetLastCrc">
					<Action>
						<SetVariables>
							<SetVariable>
								<Destination>LastCrc</Destination>
								<Source>t_masterFrame.Crc0</Source>
							</SetVariable>
						</SetVariables>
					</Action>
				</TestStep>
				<TestStep Name="ReceiveEvent">
					<Event>
						<ReceiveFrame>t_slaveFrame</ReceiveFrame>
					</Event>
					<Informations2>
						<Information>
							<Type>Verbose</Type>
							<Value Param0="t_slaveFrame.FrameData">Slave Frame in CheckCrc: {0}</Value>
						</Information>
					</Informations2>
				</TestStep>
				<TestStep Name="CheckCmdAndCommFaultReasonAndConnID">
					<Compares>
						<Compare>
							<Condition>
								<Value1>t_slaveFrame.Command</Value1>
								<Operator>NotEqual</Operator>
								<Value2>Reset</Value2>
							</Condition>
							<Condition>
								<Value1>t_slaveFrame.Command</Value1>
								<Operator>NotEqual</Operator>
								<Value2>Session</Value2>
							</Condition>
							<Condition>
								<Value1>t_slaveFrame.Command</Value1>
								<Operator>NotEqual</Operator>
								<Value2>Connection</Value2>
							</Condition>
							<Condition>
								<Value1>t_slaveFrame.Command</Value1>
								<Operator>NotEqual</Operator>
								<Value2>Parameter</Value2>
							</Condition>
							<Condition>
								<Value1>t_slaveFrame.Command</Value1>
								<Operator>NotEqual</Operator>
								<Value2>ProcessData</Value2>
							</Condition>
							<Condition>
								<Value1>t_slaveFrame.Command</Value1>
								<Operator>NotEqual</Operator>
								<Value2>FailSafeData</Value2>
							</Condition>
							<Statement>
								<Return>
									<Type>Error</Type>
									<Value Param0="t_slaveFrame.Command">Unknown Cmd received: 0x{0:x2} || expected: 0x2a (Reset) </Value>
									<Id>2</Id>
								</Return>
							</Statement>
						</Compare>
						<Compare>
							<Condition>
								<Value1>t_slaveFrame.Command</Value1>
								<Operator>NotEqual</Operator>
								<Value2>Reset</Value2>
							</Condition>
							<Statement>
								<Return>
									<Type>Error</Type>
									<Value Param0="t_slaveFrame.Command">Invalid command received: 0x{0:x2} || expected: 0x2a (Reset) </Value>
									<Id>1</Id>
								</Return>
							</Statement>
						</Compare>
						<Compare>
							<Condition>
								<Value1>t_slaveFrame.Command</Value1>
								<Operator>Equal</Operator>
								<Value2>Reset</Value2>
							</Condition>
							<Statement>
								<Information>
									<Type>Verbose</Type>
									<Value Param0="t_slaveFrame.Command">Expected command received:  0x{0:x2}  (Reset) </Value>
								</Information>
							</Statement>
						</Compare>
						<Compare>
							<Condition>
								<Value1>t_slaveFrame.FrameData[1]</Value1>
								<Operator>NotEqual</Operator>
								<Value2>c_CommFaultReason</Value2>
							</Condition>
							<Statement>
								<Return>
									<Type>Error</Type>
									<Value Param0="t_slaveFrame.FrameData[1]" Param1="c_CommFaultReason">Invalid CommFaultReason received: {0} || expected: {1} </Value>
									<Id>7</Id>
								</Return>
							</Statement>
						</Compare>
						<Compare>
							<Condition>
								<Value1>t_slaveFrame.FrameData[1]</Value1>
								<Operator>Equal</Operator>
								<Value2>c_CommFaultReason</Value2>
							</Condition>
							<Statement>
								<Information>
									<Type>Verbose</Type>
									<Value Param0="t_slaveFrame.FrameData[1]" Param1="c_CommFaultReason">Expected CommFaultReason received: {0}</Value>
								</Information>
							</Statement>
						</Compare>
						<Compare>
							<Condition>
								<Value1>t_slaveFrame.ConnId</Value1>
								<Operator>NotEqual</Operator>
								<Value2>t_initUInt16</Value2>
							</Condition>
							<Statement>
								<Return>
									<Type>Error</Type>
									<Value>Invalid Connection Id received</Value>
									<Id>3</Id>
								</Return>
							</Statement>
						</Compare>
					</Compares>
				</TestStep>
				<TestStep Name="SetVars">
					<Action>
						<SetVariables>
							<SetVariable>
								<Destination>LastCrc</Destination>
								<Source>0</Source>
							</SetVariable>
							<SetVariable>
								<Destination>t_slaveSeqNo</Destination>
								<Source>1</Source>
							</SetVariable>
							<SetVariable>
								<Destination>t_oldSlaveCrc</Destination>
								<Source>0</Source>
							</SetVariable>
						</SetVariables>
					</Action>
				</TestStep>
				<TestStep Name="CheckReceivedCrcInReset">
					<Informations1>
						<Information>
							<Type>Verbose</Type>
							<Value Param0="t_slaveFrame.FrameData" Param1="LastCrc" Param2="t_slaveSeqNo" Param3="t_oldSlaveCrc" Param4="true">IsCrcCorrect(Frame {0}, LastCrc 0x{1:X4}, SeqNo {2}, OldCrc 0x{3:X4}, New {4})</Value>
						</Information>
					</Informations1>
					<Action>
						<IsCrcCorrect ReturnValue="crcCorrect">
							<Frame>t_slaveFrame</Frame>
							<LastCrc>LastCrc</LastCrc>
							<SequenceNo>t_slaveSeqNo</SequenceNo>
							<OldCrc>t_oldSlaveCrc</OldCrc>
							<New>true</New>
						</IsCrcCorrect>
					</Action>
					<Compares>
						<Compare>
							<Condition>
								<Value1>crcCorrect</Value1>
								<Operator>Equal</Operator>
								<Value2>false</Value2>
							</Condition>
							<Statement>
								<Return>
									<Type>Error</Type>
									<Value>Invalid Crc received</Value>
									<Id>4</Id>
								</Return>
							</Statement>
						</Compare>
						<Compare>
							<Condition>
								<Value1>SafeInputs.Length</Value1>
								<Operator>Equal</Operator>
								<Value2>1</Value2>
							</Condition>
							<Statement>
								<Return>
									<Type>Output</Type>
									<Value/>
								</Return>
							</Statement>
						</Compare>
					</Compares>
					<ReturnValue>
						<OnFailure>
							<Type>Error</Type>
							<Value Param0="t_slaveFrame.Crc0">Invalid Crc0 reveived ({0:x})</Value>
							<Id>4</Id>
						</OnFailure>
					</ReturnValue>
				</TestStep>
				<TestStep Name="SetVars">
					<Action>
						<SetVariables>
							<SetVariable>
								<Destination>c_tmpByte</Destination>
								<Source>0</Source>
							</SetVariable>
							<SetVariable>
								<Destination>t_index</Destination>
								<Source>1</Source>
							</SetVariable>
						</SetVariables>
					</Action>
				</TestStep>
				<TestStep Name="CheckRemainingSafeData">
					<Compares>
						<Compare>
							<Condition>
								<Value1>t_slaveFrame.SafeData[t_index]</Value1>
								<Operator>NotEqual</Operator>
								<Value2>c_tmpByte</Value2>
							</Condition>
							<Statement>
								<Return>
									<Type>Error</Type>
									<Value Param0="t_slaveFrame.SafeData[t_index]" Param1="t_index">SafeData[{1}]  = 0x{0:x2} (has to be unused (=0)) </Value>
									<Id>7</Id>
								</Return>
							</Statement>
						</Compare>
					</Compares>
				</TestStep>
				<TestStep Name="IncrementIndex">
					<Action>
						<SetVariables>
							<SetVariable>
								<Destination>t_index</Destination>
								<Source>t_index+1</Source>
							</SetVariable>
						</SetVariables>
					</Action>
				</TestStep>
				<TestStep Name="CheckIndex">
					<Compares>
						<Compare>
							<Condition>
								<Value1>t_index</Value1>
								<Operator>Lower</Operator>
								<Value2>SafeInputs.Length</Value2>
							</Condition>
							<Statement>
								<GotoStep>CheckRemainingSafeData</GotoStep>
							</Statement>
						</Compare>
					</Compares>
				</TestStep>
			</TestSteps>
		</TestFunction>
		<TestFunction Name="CONN_FAIL1">
			<TestSteps>
				<TestStep Name="SetVars">
					<Action>
						<SetVariables>
							<SetVariable>
								<Destination>LastCrc</Destination>
								<Source>0</Source>
							</SetVariable>
							<SetVariable>
								<Destination>OldMasterCrc</Destination>
								<Source>0</Source>
							</SetVariable>
							<SetVariable>
								<Destination>t_oldSlaveCrc</Destination>
								<Source>0</Source>
							</SetVariable>
							<SetVariable>
								<Destination>t_masterSeqNo</Destination>
								<Source>1</Source>
							</SetVariable>
							<SetVariable>
								<Destination>t_slaveSeqNo</Destination>
								<Source>1</Source>
							</SetVariable>
							<SetVariable>
								<Destination>DataCommand</Destination>
								<Source>FailSafeData</Source>
							</SetVariable>
							<SetVariable>
								<Destination>CommFaultReason</Destination>
								<Source>INVALID_CRC</Source>
							</SetVariable>
						</SetVariables>
					</Action>
				</TestStep>
				<TestStep Name="SetFrame">
					<Action>
						<SetFrame Name="t_masterFrame">
							<Command>
								<CommandValue>Reset</CommandValue>
							</Command>
							<SafeData>
								<SafeDataVariable>CommFaultReason</SafeDataVariable>
							</SafeData>
							<LastCRC>LastCrc</LastCRC>
							<ConnectionID>
								<UshortValue>0</UshortValue>
							</ConnectionID>
							<SequenceNo>t_masterSeqNo</SequenceNo>
							<OldCRC>OldMasterCrc</OldCRC>
							<New>false</New>
						</SetFrame>
					</Action>
				</TestStep>
				<TestStep Name="SendFrame">
					<Action>
						<SendFrame Name="t_masterFrame"/>
					</Action>
					<ReturnValue>
						<OnFailure>
							<Type>Error</Type>
							<Value>Failed to send FSoE frame!</Value>
							<Id>256</Id>
						</OnFailure>
					</ReturnValue>
				</TestStep>
				<TestStep Name="SetMasterSeqNo">
					<Action>
						<SetVariables>
							<SetVariable>
								<Destination>t_masterSeqNo</Destination>
								<Source>1</Source>
							</SetVariable>
						</SetVariables>
					</Action>
				</TestStep>
				<TestStep Name="StartWatchdog">
					<Action>
						<StartWd>
							<Watchdog>t_watchdog</Watchdog>
						</StartWd>
					</Action>
				</TestStep>
			</TestSteps>
		</TestFunction>
		<TestFunction Name="CONN_FAIL2">
			<TestSteps>
				<TestStep Name="SetVars">
					<Action>
						<SetVariables>
							<SetVariable>
								<Destination>LastCrc</Destination>
								<Source>0</Source>
							</SetVariable>
							<SetVariable>
								<Destination>OldMasterCrc</Destination>
								<Source>0</Source>
							</SetVariable>
							<SetVariable>
								<Destination>t_oldSlaveCrc</Destination>
								<Source>0</Source>
							</SetVariable>
							<SetVariable>
								<Destination>t_masterSeqNo</Destination>
								<Source>1</Source>
							</SetVariable>
							<SetVariable>
								<Destination>t_slaveSeqNo</Destination>
								<Source>1</Source>
							</SetVariable>
							<SetVariable>
								<Destination>DataCommand</Destination>
								<Source>FailSafeData</Source>
							</SetVariable>
							<SetVariable>
								<Destination>CommFaultReason</Destination>
								<Source>INVALID_DATA</Source>
							</SetVariable>
						</SetVariables>
					</Action>
				</TestStep>
				<TestStep Name="SetFrame">
					<Action>
						<SetFrame Name="t_masterFrame">
							<Command>
								<CommandValue>Reset</CommandValue>
							</Command>
							<SafeData>
								<SafeDataVariable>CommFaultReason</SafeDataVariable>
							</SafeData>
							<LastCRC>LastCrc</LastCRC>
							<ConnectionID>
								<UshortValue>0</UshortValue>
							</ConnectionID>
							<SequenceNo>t_masterSeqNo</SequenceNo>
							<OldCRC>OldMasterCrc</OldCRC>
							<New>false</New>
						</SetFrame>
					</Action>
				</TestStep>
				<TestStep Name="SendFrame">
					<Action>
						<SendFrame Name="t_masterFrame"/>
					</Action>
					<ReturnValue>
						<OnFailure>
							<Type>Error</Type>
							<Value>Failed to send FSoE frame!</Value>
							<Id>256</Id>
						</OnFailure>
					</ReturnValue>
				</TestStep>
				<TestStep Name="SetMasterSeqNo">
					<Action>
						<SetVariables>
							<SetVariable>
								<Destination>t_masterSeqNo</Destination>
								<Source>1</Source>
							</SetVariable>
						</SetVariables>
					</Action>
				</TestStep>
				<TestStep Name="StartWatchdog">
					<Action>
						<StartWd>
							<Watchdog>t_watchdog</Watchdog>
						</StartWd>
					</Action>
				</TestStep>
			</TestSteps>
		</TestFunction>
		<TestFunction Name="CONN_FAIL3">
			<TestSteps>
				<TestStep Name="SetVars">
					<Action>
						<SetVariables>
							<SetVariable>
								<Destination>LastCrc</Destination>
								<Source>0</Source>
							</SetVariable>
							<SetVariable>
								<Destination>OldMasterCrc</Destination>
								<Source>0</Source>
							</SetVariable>
							<SetVariable>
								<Destination>t_oldSlaveCrc</Destination>
								<Source>0</Source>
							</SetVariable>
							<SetVariable>
								<Destination>t_masterSeqNo</Destination>
								<Source>1</Source>
							</SetVariable>
							<SetVariable>
								<Destination>t_slaveSeqNo</Destination>
								<Source>1</Source>
							</SetVariable>
							<SetVariable>
								<Destination>DataCommand</Destination>
								<Source>FailSafeData</Source>
							</SetVariable>
							<SetVariable>
								<Destination>CommFaultReason</Destination>
								<Source>INVALID_CONNID</Source>
							</SetVariable>
						</SetVariables>
					</Action>
				</TestStep>
				<TestStep Name="SetFrame">
					<Action>
						<SetFrame Name="t_masterFrame">
							<Command>
								<CommandValue>Reset</CommandValue>
							</Command>
							<SafeData>
								<SafeDataVariable>CommFaultReason</SafeDataVariable>
							</SafeData>
							<LastCRC>LastCrc</LastCRC>
							<ConnectionID>
								<UshortValue>0</UshortValue>
							</ConnectionID>
							<SequenceNo>t_masterSeqNo</SequenceNo>
							<OldCRC>OldMasterCrc</OldCRC>
							<New>false</New>
						</SetFrame>
					</Action>
				</TestStep>
				<TestStep Name="SendFrame">
					<Action>
						<SendFrame Name="t_masterFrame"/>
					</Action>
					<ReturnValue>
						<OnFailure>
							<Type>Error</Type>
							<Value>Failed to send FSoE frame!</Value>
							<Id>256</Id>
						</OnFailure>
					</ReturnValue>
				</TestStep>
				<TestStep Name="SetMasterSeqNo">
					<Action>
						<SetVariables>
							<SetVariable>
								<Destination>t_masterSeqNo</Destination>
								<Source>1</Source>
							</SetVariable>
						</SetVariables>
					</Action>
				</TestStep>
				<TestStep Name="StartWatchdog">
					<Action>
						<StartWd>
							<Watchdog>t_watchdog</Watchdog>
						</StartWd>
					</Action>
				</TestStep>
			</TestSteps>
		</TestFunction>
		<TestFunction Name="CONN_FAIL4">
			<TestSteps>
				<TestStep Name="SetVars">
					<Action>
						<SetVariables>
							<SetVariable>
								<Destination>LastCrc</Destination>
								<Source>0</Source>
							</SetVariable>
							<SetVariable>
								<Destination>OldMasterCrc</Destination>
								<Source>0</Source>
							</SetVariable>
							<SetVariable>
								<Destination>t_oldSlaveCrc</Destination>
								<Source>0</Source>
							</SetVariable>
							<SetVariable>
								<Destination>t_masterSeqNo</Destination>
								<Source>1</Source>
							</SetVariable>
							<SetVariable>
								<Destination>t_slaveSeqNo</Destination>
								<Source>1</Source>
							</SetVariable>
							<SetVariable>
								<Destination>DataCommand</Destination>
								<Source>FailSafeData</Source>
							</SetVariable>
							<SetVariable>
								<Destination>CommFaultReason</Destination>
								<Source>INVALID_CMD</Source>
							</SetVariable>
						</SetVariables>
					</Action>
				</TestStep>
				<TestStep Name="SetFrame">
					<Action>
						<SetFrame Name="t_masterFrame">
							<Command>
								<CommandValue>Reset</CommandValue>
							</Command>
							<SafeData>
								<SafeDataVariable>CommFaultReason</SafeDataVariable>
							</SafeData>
							<LastCRC>LastCrc</LastCRC>
							<ConnectionID>
								<UshortValue>0</UshortValue>
							</ConnectionID>
							<SequenceNo>t_masterSeqNo</SequenceNo>
							<OldCRC>OldMasterCrc</OldCRC>
							<New>false</New>
						</SetFrame>
					</Action>
				</TestStep>
				<TestStep Name="SendFrame">
					<Action>
						<SendFrame Name="t_masterFrame"/>
					</Action>
					<ReturnValue>
						<OnFailure>
							<Type>Error</Type>
							<Value>Failed to send FSoE frame!</Value>
							<Id>256</Id>
						</OnFailure>
					</ReturnValue>
				</TestStep>
				<TestStep Name="SetMasterSeqNo">
					<Action>
						<SetVariables>
							<SetVariable>
								<Destination>t_masterSeqNo</Destination>
								<Source>1</Source>
							</SetVariable>
						</SetVariables>
					</Action>
				</TestStep>
				<TestStep Name="StartWatchdog">
					<Action>
						<StartWd>
							<Watchdog>t_watchdog</Watchdog>
						</StartWd>
					</Action>
				</TestStep>
			</TestSteps>
		</TestFunction>
		<TestFunction Name="CONN_FAIL5">
			<TestSteps>
				<TestStep Name="SetVars">
					<Action>
						<SetVariables>
							<SetVariable>
								<Destination>LastCrc</Destination>
								<Source>0</Source>
							</SetVariable>
							<SetVariable>
								<Destination>OldMasterCrc</Destination>
								<Source>0</Source>
							</SetVariable>
							<SetVariable>
								<Destination>t_oldSlaveCrc</Destination>
								<Source>0</Source>
							</SetVariable>
							<SetVariable>
								<Destination>t_masterSeqNo</Destination>
								<Source>1</Source>
							</SetVariable>
							<SetVariable>
								<Destination>t_slaveSeqNo</Destination>
								<Source>1</Source>
							</SetVariable>
							<SetVariable>
								<Destination>DataCommand</Destination>
								<Source>FailSafeData</Source>
							</SetVariable>
							<SetVariable>
								<Destination>CommFaultReason</Destination>
								<Source>UNKNOWN_CMD</Source>
							</SetVariable>
						</SetVariables>
					</Action>
				</TestStep>
				<TestStep Name="SetFrame">
					<Action>
						<SetFrame Name="t_masterFrame">
							<Command>
								<CommandValue>Reset</CommandValue>
							</Command>
							<SafeData>
								<SafeDataVariable>CommFaultReason</SafeDataVariable>
							</SafeData>
							<LastCRC>LastCrc</LastCRC>
							<ConnectionID>
								<UshortValue>0</UshortValue>
							</ConnectionID>
							<SequenceNo>t_masterSeqNo</SequenceNo>
							<OldCRC>OldMasterCrc</OldCRC>
							<New>false</New>
						</SetFrame>
					</Action>
				</TestStep>
				<TestStep Name="SendFrame">
					<Action>
						<SendFrame Name="t_masterFrame"/>
					</Action>
					<ReturnValue>
						<OnFailure>
							<Type>Error</Type>
							<Value>Failed to send FSoE frame!</Value>
							<Id>256</Id>
						</OnFailure>
					</ReturnValue>
				</TestStep>
				<TestStep Name="SetMasterSeqNo">
					<Action>
						<SetVariables>
							<SetVariable>
								<Destination>t_masterSeqNo</Destination>
								<Source>1</Source>
							</SetVariable>
						</SetVariables>
					</Action>
				</TestStep>
				<TestStep Name="StartWatchdog">
					<Action>
						<StartWd>
							<Watchdog>t_watchdog</Watchdog>
						</StartWd>
					</Action>
				</TestStep>
			</TestSteps>
		</TestFunction>
		<TestFunction Name="CONN_OK">
			<TestSteps>
				<TestStep Name="SetVars">
					<Action>
						<SetVariables>
							<SetVariable>
								<Destination>LastCrc</Destination>
								<Source>t_slaveFrame.Crc0</Source>
							</SetVariable>
						</SetVariables>
					</Action>
				</TestStep>
				<TestStep Name="SetFrame">
					<Informations1>
						<Information>
							<Type>Verbose</Type>
							<Value Param0="t_safePara" Param1="LastCrc" Param2="t_masterSeqNo" Param3="OldMasterCrc" Param4="t_connectionId">SetFrame(Command Parameter, SafeData {0}, LastCrc 0x{1:x4}, ConnectionId 0x{4:x4},  SequenceNo 0x{2:x4}, OldCrc 0x{3:x4}, New true)</Value>
						</Information>
					</Informations1>
					<Action>
						<SetFrame Name="t_masterFrame">
							<Command>
								<CommandValue>Parameter</CommandValue>
							</Command>
							<SafeData>
								<SafeDataVariable>t_safePara</SafeDataVariable>
							</SafeData>
							<LastCRC>t_slaveFrame.Crc0</LastCRC>
							<ConnectionID>
								<ConnectionIdVariable>t_connectionId</ConnectionIdVariable>
							</ConnectionID>
							<SequenceNo>t_masterSeqNo</SequenceNo>
							<OldCRC>OldMasterCrc</OldCRC>
							<New>true</New>
						</SetFrame>
					</Action>
				</TestStep>
				<TestStep Name="SendFrame">
					<Action>
						<SendFrame Name="t_masterFrame"/>
					</Action>
					<Informations2>
						<Information>
							<Type>Verbose</Type>
							<Value Param0="t_masterFrame.FrameData">Master Frame: {0}</Value>
						</Information>
					</Informations2>
					<ReturnValue>
						<OnFailure>
							<Type>Error</Type>
							<Value>Failed to send FSoE frame!</Value>
							<Id>256</Id>
						</OnFailure>
					</ReturnValue>
				</TestStep>
				<TestStep Name="SetLastCrc">
					<Action>
						<SetVariables>
							<SetVariable>
								<Destination>LastCrc</Destination>
								<Source>t_masterFrame.Crc0</Source>
							</SetVariable>
						</SetVariables>
					</Action>
					<Informations2>
						<Information>
							<Type>Verbose</Type>
							<Value Param0="t_masterFrame.Crc0">LastCrc = 0x{0:x4}</Value>
						</Information>
					</Informations2>
				</TestStep>
				<TestStep Name="UpdateBytesToBeSend">
					<Action>
						<UpdateBytesToBeSent BytesToBeSent="BytesToBeSent">
							<BytesSent>SafeParaSize</BytesSent>
						</UpdateBytesToBeSent>
					</Action>
					<Informations2>
						<Information>
							<Type>Verbose</Type>
							<Value Param0="BytesToBeSent">BytesToBeSent = {0}</Value>
						</Information>
					</Informations2>
				</TestStep>
				<TestStep Name="StartWatchdog">
					<Informations1>
						<Information>
							<Type>Verbose</Type>
							<Value Param0="t_watchdog" Param1="ElapsedWD">Watchdog = {0} ms, elapsed time: {1} ms</Value>
						</Information>
					</Informations1>
					<Action>
						<StartWd>
							<Watchdog>t_watchdog</Watchdog>
						</StartWd>
					</Action>
				</TestStep>
			</TestSteps>
		</TestFunction>
		<TestFunction Name="CONN_RESET1">
			<TestSteps>
				<TestStep Name="SetVars">
					<Action>
						<SetVariables>
							<SetVariable>
								<Destination>LastCrc</Destination>
								<Source>0</Source>
							</SetVariable>
							<SetVariable>
								<Destination>OldMasterCrc</Destination>
								<Source>0</Source>
							</SetVariable>
							<SetVariable>
								<Destination>t_oldSlaveCrc</Destination>
								<Source>0</Source>
							</SetVariable>
							<SetVariable>
								<Destination>t_masterSeqNo</Destination>
								<Source>1</Source>
							</SetVariable>
							<SetVariable>
								<Destination>t_slaveSeqNo</Destination>
								<Source>1</Source>
							</SetVariable>
							<SetVariable>
								<Destination>DataCommand</Destination>
								<Source>FailSafeData</Source>
							</SetVariable>
						</SetVariables>
					</Action>
				</TestStep>
				<TestStep Name="SetFrame">
					<Informations1>
						<Information>
							<Type>Verbose</Type>
							<Value Param0="t_masterSessionId" Param1="LastCrc" Param2="t_masterSeqNo" Param3="OldMasterCrc" Param4="0">SetFrame(Command Session, SafeData {0}, LastCrc 0x{1:x4}, ConnectionId 0x{4:x4},  SequenceNo 0x{2:x4}, OldCrc 0x{3:x4}, New false</Value>
						</Information>
					</Informations1>
					<Action>
						<SetFrame Name="t_masterFrame">
							<Command>
								<CommandValue>Session</CommandValue>
							</Command>
							<SafeData>
								<SafeDataVariable>t_masterSessionId</SafeDataVariable>
							</SafeData>
							<LastCRC>LastCrc</LastCRC>
							<ConnectionID>
								<UshortValue>0</UshortValue>
							</ConnectionID>
							<SequenceNo>t_masterSeqNo</SequenceNo>
							<OldCRC>OldMasterCrc</OldCRC>
							<New>false</New>
						</SetFrame>
					</Action>
				</TestStep>
				<TestStep Name="SendFrame">
					<Action>
						<SendFrame Name="t_masterFrame"/>
					</Action>
					<Informations2>
						<Information>
							<Type>Verbose</Type>
							<Value Param0="t_masterFrame.FrameData">Master Frame: {0}</Value>
						</Information>
					</Informations2>
					<ReturnValue>
						<OnFailure>
							<Type>Error</Type>
							<Value>Failed to send FSoE frame!</Value>
							<Id>256</Id>
						</OnFailure>
					</ReturnValue>
				</TestStep>
				<TestStep Name="SetLastCrc">
					<Action>
						<SetVariables>
							<SetVariable>
								<Destination>LastCrc</Destination>
								<Source>t_masterFrame.Crc0</Source>
							</SetVariable>
						</SetVariables>
					</Action>
				</TestStep>
				<TestStep Name="SetOldCrc">
					<Action>
						<SetVariables>
							<SetVariable>
								<Destination>t_oldSlaveCrc</Destination>
								<Source>t_slaveFrame.Crc0</Source>
							</SetVariable>
						</SetVariables>
					</Action>
					<Informations2>
						<Information>
							<Type>Verbose</Type>
							<Value Param0="t_slaveFrame.Crc0">OldCrc = 0x{0:x4}</Value>
						</Information>
					</Informations2>
				</TestStep>
				<TestStep Name="UpdateBytesToBeSend">
					<Action>
						<UpdateBytesToBeSent BytesToBeSent="BytesToBeSent">
							<BytesSent>2</BytesSent>
						</UpdateBytesToBeSent>
					</Action>
				</TestStep>
				<TestStep Name="StartWatchdog">
					<Action>
						<StartWd>
							<Watchdog>t_watchdog</Watchdog>
						</StartWd>
					</Action>
				</TestStep>
			</TestSteps>
		</TestFunction>
		<TestFunction Name="CONN_RESET2">
			<TestSteps>
				<TestStep Name="SetVars">
					<Action>
						<SetVariables>
							<SetVariable>
								<Destination>LastCrc</Destination>
								<Source>0</Source>
							</SetVariable>
							<SetVariable>
								<Destination>OldMasterCrc</Destination>
								<Source>0</Source>
							</SetVariable>
							<SetVariable>
								<Destination>t_oldSlaveCrc</Destination>
								<Source>0</Source>
							</SetVariable>
							<SetVariable>
								<Destination>t_masterSeqNo</Destination>
								<Source>1</Source>
							</SetVariable>
							<SetVariable>
								<Destination>t_slaveSeqNo</Destination>
								<Source>1</Source>
							</SetVariable>
							<SetVariable>
								<Destination>DataCommand</Destination>
								<Source>FailSafeData</Source>
							</SetVariable>
							<SetVariable>
								<Destination>t_masterSessionId</Destination>
								<Source>1</Source>
							</SetVariable>
						</SetVariables>
					</Action>
				</TestStep>
				<TestStep Name="SetFrame">
					<Action>
						<SetFrame Name="t_masterFrame">
							<Command>
								<CommandValue>Session</CommandValue>
							</Command>
							<SafeData>
								<SafeDataVariable>t_masterSessionId</SafeDataVariable>
							</SafeData>
							<LastCRC>LastCrc</LastCRC>
							<ConnectionID>
								<UshortValue>0</UshortValue>
							</ConnectionID>
							<SequenceNo>t_masterSeqNo</SequenceNo>
							<OldCRC>OldMasterCrc</OldCRC>
							<New>false</New>
						</SetFrame>
					</Action>
				</TestStep>
				<TestStep Name="SendFrame">
					<Action>
						<SendFrame Name="t_masterFrame"/>
					</Action>
					<ReturnValue>
						<OnFailure>
							<Type>Error</Type>
							<Value>Failed to send FSoE frame!</Value>
							<Id>256</Id>
						</OnFailure>
					</ReturnValue>
				</TestStep>
				<TestStep Name="StartWatchdog">
					<Action>
						<StartWd>
							<Watchdog>t_watchdog</Watchdog>
						</StartWd>
					</Action>
				</TestStep>
			</TestSteps>
		</TestFunction>
		<TestFunction Name="CONN_STAY1">
			<TestSteps>
				<TestStep Name="SetVars">
					<Action>
						<SetVariables>
							<SetVariable>
								<Destination>LastCrc</Destination>
								<Source>t_slaveFrame.Crc0</Source>
							</SetVariable>
						</SetVariables>
					</Action>
				</TestStep>
				<TestStep Name="SetConnData">
					<Action>
						<SetVariables>
							<SetVariable>
								<Destination DestinationIndex="0">t_safeData</Destination>
								<Source SourceIndex="0">FailSafeValue</Source>
							</SetVariable>
							<SetVariable>
								<Destination DestinationIndex="0">t_safeData</Destination>
								<Source SourceIndex="4-BytesToBeSent">t_connData</Source>
							</SetVariable>
						</SetVariables>
					</Action>
				</TestStep>
				<TestStep Name="SetFrame">
					<Informations1>
						<Information>
							<Type>Verbose</Type>
							<Value Param0="t_safeData" Param1="LastCrc" Param2="t_masterSeqNo" Param3="OldMasterCrc" Param4="t_connectionId">SetFrame(Command Connection, SafeData {0}, LastCrc 0x{1:x4}, ConnectionId 0x{4:x4},  SequenceNo 0x{2:x4}, OldCrc 0x{3:x4}, New true)</Value>
						</Information>
					</Informations1>
					<Action>
						<SetFrame Name="t_masterFrame">
							<Command>
								<CommandValue>Connection</CommandValue>
							</Command>
							<SafeData>
								<SafeDataVariable>t_safeData</SafeDataVariable>
							</SafeData>
							<LastCRC>t_slaveFrame.Crc0</LastCRC>
							<ConnectionID>
								<ConnectionIdVariable>t_connectionId</ConnectionIdVariable>
							</ConnectionID>
							<SequenceNo>t_masterSeqNo</SequenceNo>
							<OldCRC>OldMasterCrc</OldCRC>
							<New>true</New>
						</SetFrame>
					</Action>
				</TestStep>
				<TestStep Name="SendFrame">
					<Action>
						<SendFrame Name="t_masterFrame"/>
					</Action>
					<Informations2>
						<Information>
							<Type>Verbose</Type>
							<Value Param0="t_masterFrame.FrameData">Master Frame: {0}</Value>
						</Information>
					</Informations2>
					<ReturnValue>
						<OnFailure>
							<Type>Error</Type>
							<Value>Failed to send FSoE frame!</Value>
							<Id>256</Id>
						</OnFailure>
					</ReturnValue>
				</TestStep>
				<TestStep Name="SetLastCrc">
					<Action>
						<SetVariables>
							<SetVariable>
								<Destination>LastCrc</Destination>
								<Source>t_masterFrame.Crc0</Source>
							</SetVariable>
						</SetVariables>
					</Action>
					<Informations2>
						<Information>
							<Type>Verbose</Type>
							<Value Param0="t_masterFrame.Crc0">LastCrc = 0x{0:x4}</Value>
						</Information>
					</Informations2>
				</TestStep>
				<TestStep Name="UpdateBytesToBeSend">
					<Action>
						<UpdateBytesToBeSent BytesToBeSent="BytesToBeSent">
							<BytesSent>BytesToBeSent</BytesSent>
						</UpdateBytesToBeSent>
					</Action>
					<Informations2>
						<Information>
							<Type>Verbose</Type>
							<Value Param0="BytesToBeSent">BytesToBeSent = {0}</Value>
						</Information>
					</Informations2>
				</TestStep>
				<TestStep Name="StartWatchdog">
					<Informations1>
						<Information>
							<Type>Verbose</Type>
							<Value Param0="t_watchdog" Param1="ElapsedWD">Watchdog = {0} ms, elapsed time: {1} ms</Value>
						</Information>
					</Informations1>
					<Action>
						<StartWd>
							<Watchdog>t_watchdog</Watchdog>
						</StartWd>
					</Action>
				</TestStep>
			</TestSteps>
		</TestFunction>
		<TestFunction Name="CONN_STAY1_INVALID_CONNID">
			<TestSteps>
				<TestStep Name="SetVars">
					<Action>
						<SetVariables>
							<SetVariable>
								<Destination>LastCrc</Destination>
								<Source>t_slaveFrame.Crc0</Source>
							</SetVariable>
						</SetVariables>
					</Action>
				</TestStep>
				<TestStep Name="SetInvalidConnId">
					<Informations1>
						<Information>
							<Type>Output</Type>
							<Value Param0="t_connectionId">Valid ConnId: 0x{0:x4}</Value>
						</Information>
					</Informations1>
					<Action>
						<SetVariables>
							<SetVariable>
								<Destination>t_connectionId</Destination>
								<Source>c_connId</Source>
							</SetVariable>
						</SetVariables>
					</Action>
					<Informations2>
						<Information>
							<Type>Output</Type>
							<Value Param0="t_connectionId">Falsified ConnId: 0x{0:x4}</Value>
						</Information>
					</Informations2>
				</TestStep>
				<TestStep Name="SetConnData">
					<Action>
						<SetVariables>
							<SetVariable>
								<Destination DestinationIndex="0">t_safeData</Destination>
								<Source SourceIndex="0">FailSafeValue</Source>
							</SetVariable>
							<SetVariable>
								<Destination DestinationIndex="0">t_safeData</Destination>
								<Source SourceIndex="4-BytesToBeSent">t_connData</Source>
							</SetVariable>
						</SetVariables>
					</Action>
				</TestStep>
				<TestStep Name="SetFrame">
					<Informations1>
						<Information>
							<Type>Verbose</Type>
							<Value Param0="t_safeData" Param1="LastCrc" Param2="t_masterSeqNo" Param3="OldMasterCrc" Param4="t_connectionId">SetFrame(Command Connection, SafeData {0}, LastCrc 0x{1:x4}, ConnectionId 0x{4:x4},  SequenceNo 0x{2:x4}, OldCrc 0x{3:x4}, New true)</Value>
						</Information>
					</Informations1>
					<Action>
						<SetFrame Name="t_masterFrame">
							<Command>
								<CommandValue>Connection</CommandValue>
							</Command>
							<SafeData>
								<SafeDataVariable>t_safeData</SafeDataVariable>
							</SafeData>
							<LastCRC>t_slaveFrame.Crc0</LastCRC>
							<ConnectionID>
								<ConnectionIdVariable>t_connectionId</ConnectionIdVariable>
							</ConnectionID>
							<SequenceNo>t_masterSeqNo</SequenceNo>
							<OldCRC>OldMasterCrc</OldCRC>
							<New>true</New>
						</SetFrame>
					</Action>
				</TestStep>
				<TestStep Name="SendFrame">
					<Action>
						<SendFrame Name="t_masterFrame"/>
					</Action>
					<Informations2>
						<Information>
							<Type>Verbose</Type>
							<Value Param0="t_masterFrame.FrameData">Master Frame: {0}</Value>
						</Information>
					</Informations2>
					<ReturnValue>
						<OnFailure>
							<Type>Error</Type>
							<Value>Failed to send FSoE frame!</Value>
							<Id>256</Id>
						</OnFailure>
					</ReturnValue>
				</TestStep>
				<TestStep Name="SetLastCrc">
					<Action>
						<SetVariables>
							<SetVariable>
								<Destination>LastCrc</Destination>
								<Source>t_masterFrame.Crc0</Source>
							</SetVariable>
						</SetVariables>
					</Action>
					<Informations2>
						<Information>
							<Type>Verbose</Type>
							<Value Param0="t_masterFrame.Crc0">LastCrc = 0x{0:x4}</Value>
						</Information>
					</Informations2>
				</TestStep>
				<TestStep Name="UpdateBytesToBeSend">
					<Action>
						<UpdateBytesToBeSent BytesToBeSent="BytesToBeSent">
							<BytesSent>BytesToBeSent</BytesSent>
						</UpdateBytesToBeSent>
					</Action>
					<Informations2>
						<Information>
							<Type>Verbose</Type>
							<Value Param0="BytesToBeSent">BytesToBeSent = {0}</Value>
						</Information>
					</Informations2>
				</TestStep>
				<TestStep Name="StartWatchdog">
					<Informations1>
						<Information>
							<Type>Verbose</Type>
							<Value Param0="t_watchdog" Param1="ElapsedWD">Watchdog = {0} ms, elapsed time: {1} ms</Value>
						</Information>
					</Informations1>
					<Action>
						<StartWd>
							<Watchdog>t_watchdog</Watchdog>
						</StartWd>
					</Action>
				</TestStep>
			</TestSteps>
		</TestFunction>
		<TestFunction Name="CONN_STAY1_INCREMENTED_CRC0">
			<TestSteps>
				<TestStep Name="SetVars">
					<Action>
						<SetVariables>
							<SetVariable>
								<Destination>LastCrc</Destination>
								<Source>t_slaveFrame.Crc0</Source>
							</SetVariable>
						</SetVariables>
					</Action>
				</TestStep>
				<TestStep Name="SetConnData">
					<Action>
						<SetVariables>
							<SetVariable>
								<Destination DestinationIndex="0">t_safeData</Destination>
								<Source SourceIndex="0">FailSafeValue</Source>
							</SetVariable>
							<SetVariable>
								<Destination DestinationIndex="0">t_safeData</Destination>
								<Source SourceIndex="4-BytesToBeSent">t_connData</Source>
							</SetVariable>
						</SetVariables>
					</Action>
				</TestStep>
				<TestStep Name="SetFrame">
					<Informations1>
						<Information>
							<Type>Verbose</Type>
							<Value Param0="t_safeData" Param1="LastCrc" Param2="t_masterSeqNo" Param3="OldMasterCrc" Param4="t_connectionId">SetFrame(Command Connection, SafeData {0}, LastCrc 0x{1:x4}, ConnectionId 0x{4:x4},  SequenceNo 0x{2:x4}, OldCrc 0x{3:x4}, New true)</Value>
						</Information>
					</Informations1>
					<Action>
						<SetFrame Name="t_masterFrame">
							<Command>
								<CommandValue>Connection</CommandValue>
							</Command>
							<SafeData>
								<SafeDataVariable>t_safeData</SafeDataVariable>
							</SafeData>
							<LastCRC>t_slaveFrame.Crc0</LastCRC>
							<ConnectionID>
								<ConnectionIdVariable>t_connectionId</ConnectionIdVariable>
							</ConnectionID>
							<SequenceNo>t_masterSeqNo</SequenceNo>
							<OldCRC>OldMasterCrc</OldCRC>
							<New>true</New>
						</SetFrame>
					</Action>
				</TestStep>
				<TestStep Name="SetInvalidCrc0">
					<Informations1>
						<Information>
							<Type>Output</Type>
							<Value Param0="t_masterFrame.Crc0">Valid Crc0 = 0x{0:x4}</Value>
						</Information>
					</Informations1>
					<Action>
						<CallFunction>
							<Reference>INCREMENT_CRC_0</Reference>
						</CallFunction>
					</Action>
					<Informations2>
						<Information>
							<Type>Output</Type>
							<Value Param0="t_masterFrame.Crc0">Falsified Crc0 = 0x{0:x4}</Value>
						</Information>
					</Informations2>
				</TestStep>
				<TestStep Name="SendFrame">
					<Action>
						<SendFrame Name="t_masterFrame"/>
					</Action>
					<Informations2>
						<Information>
							<Type>Verbose</Type>
							<Value Param0="t_masterFrame.FrameData">Master Frame: {0}</Value>
						</Information>
					</Informations2>
					<ReturnValue>
						<OnFailure>
							<Type>Error</Type>
							<Value>Failed to send FSoE frame!</Value>
							<Id>256</Id>
						</OnFailure>
					</ReturnValue>
				</TestStep>
				<TestStep Name="SetLastCrc">
					<Action>
						<SetVariables>
							<SetVariable>
								<Destination>LastCrc</Destination>
								<Source>t_masterFrame.Crc0</Source>
							</SetVariable>
						</SetVariables>
					</Action>
					<Informations2>
						<Information>
							<Type>Verbose</Type>
							<Value Param0="t_masterFrame.Crc0">LastCrc = 0x{0:x4}</Value>
						</Information>
					</Informations2>
				</TestStep>
				<TestStep Name="UpdateBytesToBeSend">
					<Action>
						<UpdateBytesToBeSent BytesToBeSent="BytesToBeSent">
							<BytesSent>BytesToBeSent</BytesSent>
						</UpdateBytesToBeSent>
					</Action>
					<Informations2>
						<Information>
							<Type>Verbose</Type>
							<Value Param0="BytesToBeSent">BytesToBeSent = {0}</Value>
						</Information>
					</Informations2>
				</TestStep>
				<TestStep Name="StartWatchdog">
					<Informations1>
						<Information>
							<Type>Verbose</Type>
							<Value Param0="t_watchdog" Param1="ElapsedWD">Watchdog = {0} ms, elapsed time: {1} ms</Value>
						</Information>
					</Informations1>
					<Action>
						<StartWd>
							<Watchdog>t_watchdog</Watchdog>
						</StartWd>
					</Action>
				</TestStep>
			</TestSteps>
		</TestFunction>
		<TestFunction Name="CONN_STAY1_DECREMENTED_CRC0">
			<TestSteps>
				<TestStep Name="SetVars">
					<Action>
						<SetVariables>
							<SetVariable>
								<Destination>LastCrc</Destination>
								<Source>t_slaveFrame.Crc0</Source>
							</SetVariable>
						</SetVariables>
					</Action>
				</TestStep>
				<TestStep Name="SetConnData">
					<Action>
						<SetVariables>
							<SetVariable>
								<Destination DestinationIndex="0">t_safeData</Destination>
								<Source SourceIndex="0">FailSafeValue</Source>
							</SetVariable>
							<SetVariable>
								<Destination DestinationIndex="0">t_safeData</Destination>
								<Source SourceIndex="4-BytesToBeSent">t_connData</Source>
							</SetVariable>
						</SetVariables>
					</Action>
				</TestStep>
				<TestStep Name="SetFrame">
					<Informations1>
						<Information>
							<Type>Verbose</Type>
							<Value Param0="t_safeData" Param1="LastCrc" Param2="t_masterSeqNo" Param3="OldMasterCrc" Param4="t_connectionId">SetFrame(Command Connection, SafeData {0}, LastCrc 0x{1:x4}, ConnectionId 0x{4:x4},  SequenceNo 0x{2:x4}, OldCrc 0x{3:x4}, New true)</Value>
						</Information>
					</Informations1>
					<Action>
						<SetFrame Name="t_masterFrame">
							<Command>
								<CommandValue>Connection</CommandValue>
							</Command>
							<SafeData>
								<SafeDataVariable>t_safeData</SafeDataVariable>
							</SafeData>
							<LastCRC>t_slaveFrame.Crc0</LastCRC>
							<ConnectionID>
								<ConnectionIdVariable>t_connectionId</ConnectionIdVariable>
							</ConnectionID>
							<SequenceNo>t_masterSeqNo</SequenceNo>
							<OldCRC>OldMasterCrc</OldCRC>
							<New>true</New>
						</SetFrame>
					</Action>
				</TestStep>
				<TestStep Name="SetInvalidCrc0">
					<Informations1>
						<Information>
							<Type>Output</Type>
							<Value Param0="t_masterFrame.Crc0">Valid Crc0 = 0x{0:x4}</Value>
						</Information>
					</Informations1>
					<Action>
						<CallFunction>
							<Reference>INCREMENT_CRC_0</Reference>
						</CallFunction>
					</Action>
					<Informations2>
						<Information>
							<Type>Output</Type>
							<Value Param0="t_masterFrame.Crc0">Falsified Crc0 = 0x{0:x4}</Value>
						</Information>
					</Informations2>
				</TestStep>
				<TestStep Name="SendFrame">
					<Action>
						<SendFrame Name="t_masterFrame"/>
					</Action>
					<Informations2>
						<Information>
							<Type>Verbose</Type>
							<Value Param0="t_masterFrame.FrameData">Master Frame: {0}</Value>
						</Information>
					</Informations2>
					<ReturnValue>
						<OnFailure>
							<Type>Error</Type>
							<Value>Failed to send FSoE frame!</Value>
							<Id>256</Id>
						</OnFailure>
					</ReturnValue>
				</TestStep>
				<TestStep Name="SetLastCrc">
					<Action>
						<SetVariables>
							<SetVariable>
								<Destination>LastCrc</Destination>
								<Source>t_masterFrame.Crc0</Source>
							</SetVariable>
						</SetVariables>
					</Action>
					<Informations2>
						<Information>
							<Type>Verbose</Type>
							<Value Param0="t_masterFrame.Crc0">LastCrc = 0x{0:x4}</Value>
						</Information>
					</Informations2>
				</TestStep>
				<TestStep Name="UpdateBytesToBeSend">
					<Action>
						<UpdateBytesToBeSent BytesToBeSent="BytesToBeSent">
							<BytesSent>BytesToBeSent</BytesSent>
						</UpdateBytesToBeSent>
					</Action>
					<Informations2>
						<Information>
							<Type>Verbose</Type>
							<Value Param0="BytesToBeSent">BytesToBeSent = {0}</Value>
						</Information>
					</Informations2>
				</TestStep>
				<TestStep Name="StartWatchdog">
					<Informations1>
						<Information>
							<Type>Verbose</Type>
							<Value Param0="t_watchdog" Param1="ElapsedWD">Watchdog = {0} ms, elapsed time: {1} ms</Value>
						</Information>
					</Informations1>
					<Action>
						<StartWd>
							<Watchdog>t_watchdog</Watchdog>
						</StartWd>
					</Action>
				</TestStep>
			</TestSteps>
		</TestFunction>
		<TestFunction Name="CONN_WD">
			<TestSteps>
				<TestStep Name="SetVars">
					<Action>
						<SetVariables>
							<SetVariable>
								<Destination>LastCrc</Destination>
								<Source>0</Source>
							</SetVariable>
							<SetVariable>
								<Destination>OldMasterCrc</Destination>
								<Source>0</Source>
							</SetVariable>
							<SetVariable>
								<Destination>t_oldSlaveCrc</Destination>
								<Source>0</Source>
							</SetVariable>
							<SetVariable>
								<Destination>t_masterSeqNo</Destination>
								<Source>1</Source>
							</SetVariable>
							<SetVariable>
								<Destination>t_slaveSeqNo</Destination>
								<Source>1</Source>
							</SetVariable>
							<SetVariable>
								<Destination>DataCommand</Destination>
								<Source>FailSafeData</Source>
							</SetVariable>
							<SetVariable>
								<Destination>commFaultReason</Destination>
								<Source>WD_EXPIRED</Source>
							</SetVariable>
						</SetVariables>
					</Action>
				</TestStep>
				<TestStep Name="SetFrame">
					<Action>
						<SetFrame Name="t_masterFrame">
							<Command>
								<CommandValue>Reset</CommandValue>
							</Command>
							<SafeData>
								<SafeDataVariable>commFaultReason</SafeDataVariable>
							</SafeData>
							<LastCRC>LastCrc</LastCRC>
							<ConnectionID>
								<UshortValue>0</UshortValue>
							</ConnectionID>
							<SequenceNo>t_masterSeqNo</SequenceNo>
							<OldCRC>OldMasterCrc</OldCRC>
							<New>false</New>
						</SetFrame>
					</Action>
				</TestStep>
				<TestStep Name="SendFrame">
					<Action>
						<SendFrame Name="t_masterFrame"/>
					</Action>
					<ReturnValue>
						<OnFailure>
							<Type>Error</Type>
							<Value>Failed to send FSoE frame!</Value>
							<Id>256</Id>
						</OnFailure>
					</ReturnValue>
				</TestStep>
				<TestStep Name="SetMasterSeqNo">
					<Action>
						<SetVariables>
							<SetVariable>
								<Destination>t_masterSeqNo</Destination>
								<Source>1</Source>
							</SetVariable>
						</SetVariables>
					</Action>
				</TestStep>
				<TestStep Name="StartWatchdog">
					<Action>
						<StartWd>
							<Watchdog>t_watchdog</Watchdog>
						</StartWd>
					</Action>
				</TestStep>
			</TestSteps>
		</TestFunction>
		<TestFunction Name="DATA_FAIL1">
			<TestSteps>
				<TestStep Name="SetVars">
					<Action>
						<SetVariables>
							<SetVariable>
								<Destination>LastCrc</Destination>
								<Source>0</Source>
							</SetVariable>
							<SetVariable>
								<Destination>OldMasterCrc</Destination>
								<Source>0</Source>
							</SetVariable>
							<SetVariable>
								<Destination>t_oldSlaveCrc</Destination>
								<Source>0</Source>
							</SetVariable>
							<SetVariable>
								<Destination>t_masterSeqNo</Destination>
								<Source>1</Source>
							</SetVariable>
							<SetVariable>
								<Destination>t_slaveSeqNo</Destination>
								<Source>1</Source>
							</SetVariable>
							<SetVariable>
								<Destination>DataCommand</Destination>
								<Source>FailSafeData</Source>
							</SetVariable>
							<SetVariable>
								<Destination>SafeInputs</Destination>
								<Source>FailSafeValue</Source>
							</SetVariable>
							<SetVariable>
								<Destination>CommFaultReason</Destination>
								<Source>INVALID_CRC</Source>
							</SetVariable>
						</SetVariables>
					</Action>
				</TestStep>
				<TestStep Name="SetFrame">
					<Action>
						<SetFrame Name="t_masterFrame">
							<Command>
								<CommandValue>Reset</CommandValue>
							</Command>
							<SafeData>
								<SafeDataVariable>CommFaultReason</SafeDataVariable>
							</SafeData>
							<LastCRC>LastCrc</LastCRC>
							<ConnectionID>
								<UshortValue>0</UshortValue>
							</ConnectionID>
							<SequenceNo>t_masterSeqNo</SequenceNo>
							<OldCRC>OldMasterCrc</OldCRC>
							<New>false</New>
						</SetFrame>
					</Action>
				</TestStep>
				<TestStep Name="SendFrame">
					<Action>
						<SendFrame Name="t_masterFrame"/>
					</Action>
					<ReturnValue>
						<OnFailure>
							<Type>Error</Type>
							<Value>Failed to send FSoE frame!</Value>
							<Id>256</Id>
						</OnFailure>
					</ReturnValue>
				</TestStep>
				<TestStep Name="SetMasterSeqNo">
					<Action>
						<SetVariables>
							<SetVariable>
								<Destination>t_masterSeqNo</Destination>
								<Source>1</Source>
							</SetVariable>
						</SetVariables>
					</Action>
				</TestStep>
				<TestStep Name="StartWatchdog">
					<Action>
						<StartWd>
							<Watchdog>t_watchdog</Watchdog>
						</StartWd>
					</Action>
				</TestStep>
			</TestSteps>
		</TestFunction>
		<TestFunction Name="DATA_FAIL2">
			<TestSteps>
				<TestStep Name="SetVars">
					<Action>
						<SetVariables>
							<SetVariable>
								<Destination>LastCrc</Destination>
								<Source>0</Source>
							</SetVariable>
							<SetVariable>
								<Destination>OldMasterCrc</Destination>
								<Source>0</Source>
							</SetVariable>
							<SetVariable>
								<Destination>t_oldSlaveCrc</Destination>
								<Source>0</Source>
							</SetVariable>
							<SetVariable>
								<Destination>t_masterSeqNo</Destination>
								<Source>1</Source>
							</SetVariable>
							<SetVariable>
								<Destination>t_slaveSeqNo</Destination>
								<Source>1</Source>
							</SetVariable>
							<SetVariable>
								<Destination>DataCommand</Destination>
								<Source>FailSafeData</Source>
							</SetVariable>
							<SetVariable>
								<Destination>SafeInputs</Destination>
								<Source>FailSafeValue</Source>
							</SetVariable>
							<SetVariable>
								<Destination>CommFaultReason</Destination>
								<Source>INVALID_CONNID</Source>
							</SetVariable>
						</SetVariables>
					</Action>
				</TestStep>
				<TestStep Name="SetFrame">
					<Action>
						<SetFrame Name="t_masterFrame">
							<Command>
								<CommandValue>Reset</CommandValue>
							</Command>
							<SafeData>
								<SafeDataVariable>CommFaultReason</SafeDataVariable>
							</SafeData>
							<LastCRC>LastCrc</LastCRC>
							<ConnectionID>
								<UshortValue>0</UshortValue>
							</ConnectionID>
							<SequenceNo>t_masterSeqNo</SequenceNo>
							<OldCRC>OldMasterCrc</OldCRC>
							<New>false</New>
						</SetFrame>
					</Action>
				</TestStep>
				<TestStep Name="SendFrame">
					<Action>
						<SendFrame Name="t_masterFrame"/>
					</Action>
					<ReturnValue>
						<OnFailure>
							<Type>Error</Type>
							<Value>Failed to send FSoE frame!</Value>
							<Id>256</Id>
						</OnFailure>
					</ReturnValue>
				</TestStep>
				<TestStep Name="SetMasterSeqNo">
					<Action>
						<SetVariables>
							<SetVariable>
								<Destination>t_masterSeqNo</Destination>
								<Source>1</Source>
							</SetVariable>
						</SetVariables>
					</Action>
				</TestStep>
				<TestStep Name="StartWatchdog">
					<Action>
						<StartWd>
							<Watchdog>t_watchdog</Watchdog>
						</StartWd>
					</Action>
				</TestStep>
			</TestSteps>
		</TestFunction>
		<TestFunction Name="DATA_FAIL3">
			<TestSteps>
				<TestStep Name="SetVars">
					<Action>
						<SetVariables>
							<SetVariable>
								<Destination>LastCrc</Destination>
								<Source>0</Source>
							</SetVariable>
							<SetVariable>
								<Destination>OldMasterCrc</Destination>
								<Source>0</Source>
							</SetVariable>
							<SetVariable>
								<Destination>t_oldSlaveCrc</Destination>
								<Source>0</Source>
							</SetVariable>
							<SetVariable>
								<Destination>t_masterSeqNo</Destination>
								<Source>1</Source>
							</SetVariable>
							<SetVariable>
								<Destination>t_slaveSeqNo</Destination>
								<Source>1</Source>
							</SetVariable>
							<SetVariable>
								<Destination>SafeInputs</Destination>
								<Source>FailSafeValue</Source>
							</SetVariable>
							<SetVariable>
								<Destination>DataCommand</Destination>
								<Source>FailSafeData</Source>
							</SetVariable>
							<SetVariable>
								<Destination>CommFaultReason</Destination>
								<Source>INVALID_CMD</Source>
							</SetVariable>
						</SetVariables>
					</Action>
				</TestStep>
				<TestStep Name="SetFrame">
					<Action>
						<SetFrame Name="t_masterFrame">
							<Command>
								<CommandValue>Reset</CommandValue>
							</Command>
							<SafeData>
								<SafeDataVariable>CommFaultReason</SafeDataVariable>
							</SafeData>
							<LastCRC>LastCrc</LastCRC>
							<ConnectionID>
								<UshortValue>0</UshortValue>
							</ConnectionID>
							<SequenceNo>t_masterSeqNo</SequenceNo>
							<OldCRC>OldMasterCrc</OldCRC>
							<New>false</New>
						</SetFrame>
					</Action>
				</TestStep>
				<TestStep Name="SendFrame">
					<Action>
						<SendFrame Name="t_masterFrame"/>
					</Action>
					<ReturnValue>
						<OnFailure>
							<Type>Error</Type>
							<Value>Failed to send FSoE frame!</Value>
							<Id>256</Id>
						</OnFailure>
					</ReturnValue>
				</TestStep>
				<TestStep Name="SetMasterSeqNo">
					<Action>
						<SetVariables>
							<SetVariable>
								<Destination>t_masterSeqNo</Destination>
								<Source>1</Source>
							</SetVariable>
						</SetVariables>
					</Action>
				</TestStep>
				<TestStep Name="StartWatchdog">
					<Action>
						<StartWd>
							<Watchdog>t_watchdog</Watchdog>
						</StartWd>
					</Action>
				</TestStep>
			</TestSteps>
		</TestFunction>
		<TestFunction Name="DATA_FAIL4">
			<TestSteps>
				<TestStep Name="SetVars">
					<Action>
						<SetVariables>
							<SetVariable>
								<Destination>LastCrc</Destination>
								<Source>0</Source>
							</SetVariable>
							<SetVariable>
								<Destination>OldMasterCrc</Destination>
								<Source>0</Source>
							</SetVariable>
							<SetVariable>
								<Destination>t_oldSlaveCrc</Destination>
								<Source>0</Source>
							</SetVariable>
							<SetVariable>
								<Destination>t_masterSeqNo</Destination>
								<Source>1</Source>
							</SetVariable>
							<SetVariable>
								<Destination>t_slaveSeqNo</Destination>
								<Source>1</Source>
							</SetVariable>
							<SetVariable>
								<Destination>SafeInputs</Destination>
								<Source>FailSafeValue</Source>
							</SetVariable>
							<SetVariable>
								<Destination>DataCommand</Destination>
								<Source>FailSafeData</Source>
							</SetVariable>
							<SetVariable>
								<Destination>CommFaultReason</Destination>
								<Source>UNKNOWN_CMD</Source>
							</SetVariable>
						</SetVariables>
					</Action>
				</TestStep>
				<TestStep Name="SetFrame">
					<Action>
						<SetFrame Name="t_masterFrame">
							<Command>
								<CommandValue>Reset</CommandValue>
							</Command>
							<SafeData>
								<SafeDataVariable>CommFaultReason</SafeDataVariable>
							</SafeData>
							<LastCRC>LastCrc</LastCRC>
							<ConnectionID>
								<UshortValue>0</UshortValue>
							</ConnectionID>
							<SequenceNo>t_masterSeqNo</SequenceNo>
							<OldCRC>OldMasterCrc</OldCRC>
							<New>false</New>
						</SetFrame>
					</Action>
				</TestStep>
				<TestStep Name="SendFrame">
					<Action>
						<SendFrame Name="t_masterFrame"/>
					</Action>
					<ReturnValue>
						<OnFailure>
							<Type>Error</Type>
							<Value>Failed to send FSoE frame!</Value>
							<Id>256</Id>
						</OnFailure>
					</ReturnValue>
				</TestStep>
				<TestStep Name="SetMasterSeqNo">
					<Action>
						<SetVariables>
							<SetVariable>
								<Destination>t_masterSeqNo</Destination>
								<Source>1</Source>
							</SetVariable>
						</SetVariables>
					</Action>
				</TestStep>
				<TestStep Name="StartWatchdog">
					<Action>
						<StartWd>
							<Watchdog>t_watchdog</Watchdog>
						</StartWd>
					</Action>
				</TestStep>
			</TestSteps>
		</TestFunction>
		<TestFunction Name="DATA_OK1">
			<TestSteps>
				<TestStep Name="SetVars">
					<Action>
						<SetVariables>
							<SetVariable>
								<Destination>SafeInputs</Destination>
								<Source>t_slaveFrame.SafeData</Source>
							</SetVariable>
							<SetVariable>
								<Destination>LastCrc</Destination>
								<Source>t_slaveFrame.Crc0</Source>
							</SetVariable>
						</SetVariables>
					</Action>
				</TestStep>
				<TestStep Name="SetFrame">
					<Informations1>
						<Information>
							<Type>Verbose</Type>
							<Value Param0="SafeOutputs" Param1="LastCrc" Param2="t_masterSeqNo" Param3="OldMasterCrc" Param4="t_connectionId" Param5="DataCommand">SetFrame(Command {5}, SafeData {0}, LastCrc 0x{1:x4}, ConnectionId 0x{4:x4},  SequenceNo 0x{2:x4}, OldCrc 0x{3:x4}, New true)</Value>
						</Information>
					</Informations1>
					<Action>
						<SetFrame Name="t_masterFrame">
							<Command>
								<CommandVariable>DataCommand</CommandVariable>
							</Command>
							<SafeData>
								<SafeDataVariable>SafeOutputs</SafeDataVariable>
							</SafeData>
							<LastCRC>LastCrc</LastCRC>
							<ConnectionID>
								<ConnectionIdVariable>t_connectionId</ConnectionIdVariable>
							</ConnectionID>
							<SequenceNo>t_masterSeqNo</SequenceNo>
							<OldCRC>OldMasterCrc</OldCRC>
							<New>true</New>
						</SetFrame>
					</Action>
					<ReturnValue>
						<OnFailure>
							<Type>Error</Type>
							<Value>Failed to set FSoE frame!</Value>
							<Id>256</Id>
						</OnFailure>
					</ReturnValue>
				</TestStep>
				<TestStep Name="SendFrame">
					<Action>
						<SendFrame Name="t_masterFrame"/>
					</Action>
					<Informations2>
						<Information>
							<Type>Verbose</Type>
							<Value Param0="t_masterFrame.FrameData">Master Frame: {0}</Value>
						</Information>
					</Informations2>
					<ReturnValue>
						<OnFailure>
							<Type>Error</Type>
							<Value>Failed to send FSoE frame!</Value>
							<Id>256</Id>
						</OnFailure>
					</ReturnValue>
				</TestStep>
				<TestStep Name="SetLastCrc">
					<Action>
						<SetVariables>
							<SetVariable>
								<Destination>LastCrc</Destination>
								<Source>t_masterFrame.Crc0</Source>
							</SetVariable>
						</SetVariables>
					</Action>
				</TestStep>
				<TestStep Name="StartWatchdog">
					<Informations1>
						<Information>
							<Type>Verbose</Type>
							<Value Param0="t_watchdog" Param1="ElapsedWD">Watchdog = {0} ms, elapsed time: {1} ms</Value>
						</Information>
					</Informations1>
					<Action>
						<StartWd>
							<Watchdog>t_watchdog</Watchdog>
						</StartWd>
					</Action>
				</TestStep>
			</TestSteps>
		</TestFunction>
		<TestFunction Name="DATA_OK2">
			<TestSteps>
				<TestStep Name="SetVars">
					<Action>
						<SetVariables>
							<SetVariable>
								<Destination>SafeInputs</Destination>
								<Source>FailSafeValue</Source>
							</SetVariable>
							<SetVariable>
								<Destination>LastCrc</Destination>
								<Source>t_slaveFrame.Crc0</Source>
							</SetVariable>
						</SetVariables>
					</Action>
				</TestStep>
				<TestStep Name="SetFrame">
					<Informations1>
						<Information>
							<Type>Verbose</Type>
							<Value Param0="SafeOutputs" Param1="LastCrc" Param2="t_masterSeqNo" Param3="OldMasterCrc" Param4="t_connectionId" Param5="DataCommand">SetFrame(Command {5}, SafeData {0}, LastCrc 0x{1:x4}, ConnectionId 0x{4:x4},  SequenceNo 0x{2:x4}, OldCrc 0x{3:x4}, New true)</Value>
						</Information>
					</Informations1>
					<Action>
						<SetFrame Name="t_masterFrame">
							<Command>
								<CommandVariable>DataCommand</CommandVariable>
							</Command>
							<SafeData>
								<SafeDataVariable>SafeOutputs</SafeDataVariable>
							</SafeData>
							<LastCRC>t_slaveFrame.Crc0</LastCRC>
							<ConnectionID>
								<ConnectionIdVariable>t_connectionId</ConnectionIdVariable>
							</ConnectionID>
							<SequenceNo>t_masterSeqNo</SequenceNo>
							<OldCRC>OldMasterCrc</OldCRC>
							<New>true</New>
						</SetFrame>
					</Action>
					<ReturnValue>
						<OnFailure>
							<Type>Error</Type>
							<Value>Failed to set FSoE frame!</Value>
							<Id>256</Id>
						</OnFailure>
					</ReturnValue>
				</TestStep>
				<TestStep Name="SendFrame">
					<Action>
						<SendFrame Name="t_masterFrame"/>
					</Action>
					<Informations2>
						<Information>
							<Type>Verbose</Type>
							<Value Param0="t_masterFrame.FrameData">Master Frame: {0}</Value>
						</Information>
					</Informations2>
					<ReturnValue>
						<OnFailure>
							<Type>Error</Type>
							<Value>Failed to send FSoE frame!</Value>
							<Id>256</Id>
						</OnFailure>
					</ReturnValue>
				</TestStep>
				<TestStep Name="SetLastCrc">
					<Action>
						<SetVariables>
							<SetVariable>
								<Destination>LastCrc</Destination>
								<Source>t_masterFrame.Crc0</Source>
							</SetVariable>
						</SetVariables>
					</Action>
				</TestStep>
				<TestStep Name="StartWatchdog">
					<Informations1>
						<Information>
							<Type>Verbose</Type>
							<Value Param0="t_watchdog" Param1="ElapsedWD">Watchdog = {0} ms, elapsed time: {1} ms</Value>
						</Information>
					</Informations1>
					<Action>
						<StartWd>
							<Watchdog>t_watchdog</Watchdog>
						</StartWd>
					</Action>
				</TestStep>
			</TestSteps>
		</TestFunction>
		<TestFunction Name="DATA_OK1_WO_MSG">
			<TestSteps>
				<TestStep Name="SetVars">
					<Action>
						<SetVariables>
							<SetVariable>
								<Destination>SafeInputs</Destination>
								<Source>t_slaveFrame.SafeData</Source>
							</SetVariable>
							<SetVariable>
								<Destination>LastCrc</Destination>
								<Source>t_slaveFrame.Crc0</Source>
							</SetVariable>
						</SetVariables>
					</Action>
				</TestStep>
				<TestStep Name="SetFrame">
					<Action>
						<SetFrame Name="t_masterFrame">
							<Command>
								<CommandVariable>DataCommand</CommandVariable>
							</Command>
							<SafeData>
								<SafeDataVariable>SafeOutputs</SafeDataVariable>
							</SafeData>
							<LastCRC>LastCrc</LastCRC>
							<ConnectionID>
								<ConnectionIdVariable>t_connectionId</ConnectionIdVariable>
							</ConnectionID>
							<SequenceNo>t_masterSeqNo</SequenceNo>
							<OldCRC>OldMasterCrc</OldCRC>
							<New>true</New>
						</SetFrame>
					</Action>
					<ReturnValue>
						<OnFailure>
							<Type>Error</Type>
							<Value>Failed to set FSoE frame!</Value>
							<Id>256</Id>
						</OnFailure>
					</ReturnValue>
				</TestStep>
				<TestStep Name="SendFrame">
					<Action>
						<SendFrame Name="t_masterFrame"/>
					</Action>
					<ReturnValue>
						<OnFailure>
							<Type>Error</Type>
							<Value>Failed to send FSoE frame!</Value>
							<Id>256</Id>
						</OnFailure>
					</ReturnValue>
				</TestStep>
				<TestStep Name="SetLastCrc">
					<Action>
						<SetVariables>
							<SetVariable>
								<Destination>LastCrc</Destination>
								<Source>t_masterFrame.Crc0</Source>
							</SetVariable>
						</SetVariables>
					</Action>
				</TestStep>
				<TestStep Name="StartWatchdog">
					<Action>
						<StartWd>
							<Watchdog>t_watchdog</Watchdog>
						</StartWd>
					</Action>
				</TestStep>
			</TestSteps>
		</TestFunction>
		<TestFunction Name="DATA_OK2_WO_MSG">
			<TestSteps>
				<TestStep Name="SetVars">
					<Action>
						<SetVariables>
							<SetVariable>
								<Destination>SafeInputs</Destination>
								<Source>FailSafeValue</Source>
							</SetVariable>
							<SetVariable>
								<Destination>LastCrc</Destination>
								<Source>t_slaveFrame.Crc0</Source>
							</SetVariable>
						</SetVariables>
					</Action>
				</TestStep>
				<TestStep Name="SetFrame">
					<Action>
						<SetFrame Name="t_masterFrame">
							<Command>
								<CommandVariable>DataCommand</CommandVariable>
							</Command>
							<SafeData>
								<SafeDataVariable>SafeOutputs</SafeDataVariable>
							</SafeData>
							<LastCRC>t_slaveFrame.Crc0</LastCRC>
							<ConnectionID>
								<ConnectionIdVariable>t_connectionId</ConnectionIdVariable>
							</ConnectionID>
							<SequenceNo>t_masterSeqNo</SequenceNo>
							<OldCRC>OldMasterCrc</OldCRC>
							<New>true</New>
						</SetFrame>
					</Action>
					<ReturnValue>
						<OnFailure>
							<Type>Error</Type>
							<Value>Failed to set FSoE frame!</Value>
							<Id>256</Id>
						</OnFailure>
					</ReturnValue>
				</TestStep>
				<TestStep Name="SendFrame">
					<Action>
						<SendFrame Name="t_masterFrame"/>
					</Action>
					<ReturnValue>
						<OnFailure>
							<Type>Error</Type>
							<Value>Failed to send FSoE frame!</Value>
							<Id>256</Id>
						</OnFailure>
					</ReturnValue>
				</TestStep>
				<TestStep Name="SetLastCrc">
					<Action>
						<SetVariables>
							<SetVariable>
								<Destination>LastCrc</Destination>
								<Source>t_masterFrame.Crc0</Source>
							</SetVariable>
						</SetVariables>
					</Action>
				</TestStep>
				<TestStep Name="StartWatchdog">
					<Action>
						<StartWd>
							<Watchdog>t_watchdog</Watchdog>
						</StartWd>
					</Action>
				</TestStep>
			</TestSteps>
		</TestFunction>
		<TestFunction Name="DATA_RESET1">
			<TestSteps>
				<TestStep Name="SetVars">
					<Action>
						<SetVariables>
							<SetVariable>
								<Destination>LastCrc</Destination>
								<Source>0</Source>
							</SetVariable>
							<SetVariable>
								<Destination>OldMasterCrc</Destination>
								<Source>0</Source>
							</SetVariable>
							<SetVariable>
								<Destination>t_oldSlaveCrc</Destination>
								<Source>0</Source>
							</SetVariable>
							<SetVariable>
								<Destination>t_masterSeqNo</Destination>
								<Source>1</Source>
							</SetVariable>
							<SetVariable>
								<Destination>t_slaveSeqNo</Destination>
								<Source>1</Source>
							</SetVariable>
							<SetVariable>
								<Destination>SafeInputs</Destination>
								<Source>FailSafeValue</Source>
							</SetVariable>
							<SetVariable>
								<Destination>DataCommand</Destination>
								<Source>FailSafeData</Source>
							</SetVariable>
						</SetVariables>
					</Action>
				</TestStep>
				<TestStep Name="SetFrame">
					<Informations1>
						<Information>
							<Type>Verbose</Type>
							<Value Param0="t_masterSessionId" Param1="LastCrc" Param2="t_masterSeqNo" Param3="OldMasterCrc" Param4="0">SetFrame(Command Session, SafeData {0}, LastCrc 0x{1:x4}, ConnectionId 0x{4:x4},  SequenceNo 0x{2:x4}, OldCrc 0x{3:x4}, New false</Value>
						</Information>
					</Informations1>
					<Action>
						<SetFrame Name="t_masterFrame">
							<Command>
								<CommandValue>Session</CommandValue>
							</Command>
							<SafeData>
								<SafeDataVariable>t_masterSessionId</SafeDataVariable>
							</SafeData>
							<LastCRC>LastCrc</LastCRC>
							<ConnectionID>
								<UshortValue>0</UshortValue>
							</ConnectionID>
							<SequenceNo>t_masterSeqNo</SequenceNo>
							<OldCRC>OldMasterCrc</OldCRC>
							<New>false</New>
						</SetFrame>
					</Action>
				</TestStep>
				<TestStep Name="SendFrame">
					<Action>
						<SendFrame Name="t_masterFrame"/>
					</Action>
					<Informations2>
						<Information>
							<Type>Verbose</Type>
							<Value Param0="t_masterFrame.FrameData">Master Frame: {0}</Value>
						</Information>
					</Informations2>
					<ReturnValue>
						<OnFailure>
							<Type>Error</Type>
							<Value>Failed to send FSoE frame!</Value>
							<Id>256</Id>
						</OnFailure>
					</ReturnValue>
				</TestStep>
				<TestStep Name="SetLastCrc">
					<Action>
						<SetVariables>
							<SetVariable>
								<Destination>LastCrc</Destination>
								<Source>t_masterFrame.Crc0</Source>
							</SetVariable>
						</SetVariables>
					</Action>
				</TestStep>
				<TestStep Name="SetOldCrc">
					<Action>
						<SetVariables>
							<SetVariable>
								<Destination>t_oldSlaveCrc</Destination>
								<Source>t_slaveFrame.Crc0</Source>
							</SetVariable>
						</SetVariables>
					</Action>
					<Informations2>
						<Information>
							<Type>Verbose</Type>
							<Value Param0="t_slaveFrame.Crc0">OldCrc = 0x{0:x4}</Value>
						</Information>
					</Informations2>
				</TestStep>
				<TestStep Name="UpdateBytesToBeSend">
					<Action>
						<UpdateBytesToBeSent BytesToBeSent="BytesToBeSent">
							<BytesSent>2</BytesSent>
						</UpdateBytesToBeSent>
					</Action>
				</TestStep>
				<TestStep Name="StartWatchdog">
					<Action>
						<StartWd>
							<Watchdog>t_watchdog</Watchdog>
						</StartWd>
					</Action>
				</TestStep>
			</TestSteps>
		</TestFunction>
		<TestFunction Name="DATA_RESET2">
			<TestSteps>
				<TestStep Name="SetVars">
					<Action>
						<SetVariables>
							<SetVariable>
								<Destination>LastCrc</Destination>
								<Source>0</Source>
							</SetVariable>
							<SetVariable>
								<Destination>OldMasterCrc</Destination>
								<Source>0</Source>
							</SetVariable>
							<SetVariable>
								<Destination>t_oldSlaveCrc</Destination>
								<Source>0</Source>
							</SetVariable>
							<SetVariable>
								<Destination>t_masterSeqNo</Destination>
								<Source>1</Source>
							</SetVariable>
							<SetVariable>
								<Destination>t_slaveSeqNo</Destination>
								<Source>1</Source>
							</SetVariable>
							<SetVariable>
								<Destination>SafeInputs</Destination>
								<Source>FailSafeValue</Source>
							</SetVariable>
							<SetVariable>
								<Destination>DataCommand</Destination>
								<Source>FailSafeData</Source>
							</SetVariable>
							<SetVariable>
								<Destination>CommFaultReason</Destination>
								<Source>0</Source>
							</SetVariable>
						</SetVariables>
					</Action>
				</TestStep>
				<TestStep Name="SetFrame">
					<Action>
						<SetFrame Name="t_masterFrame">
							<Command>
								<CommandValue>Reset</CommandValue>
							</Command>
							<SafeData>
								<SafeDataVariable>CommFaultReason</SafeDataVariable>
							</SafeData>
							<LastCRC>LastCrc</LastCRC>
							<ConnectionID>
								<UshortValue>0</UshortValue>
							</ConnectionID>
							<SequenceNo>t_masterSeqNo</SequenceNo>
							<OldCRC>OldMasterCrc</OldCRC>
							<New>false</New>
						</SetFrame>
					</Action>
				</TestStep>
				<TestStep Name="SendFrame">
					<Action>
						<SendFrame Name="t_masterFrame"/>
					</Action>
					<ReturnValue>
						<OnFailure>
							<Type>Error</Type>
							<Value>Failed to send FSoE frame!</Value>
							<Id>256</Id>
						</OnFailure>
					</ReturnValue>
				</TestStep>
				<TestStep Name="StartWatchdog">
					<Action>
						<StartWd>
							<Watchdog>t_watchdog</Watchdog>
						</StartWd>
					</Action>
				</TestStep>
			</TestSteps>
		</TestFunction>
		<TestFunction Name="DATA_WD">
			<TestSteps>
				<TestStep Name="SetVars">
					<Action>
						<SetVariables>
							<SetVariable>
								<Destination>LastCrc</Destination>
								<Source>0</Source>
							</SetVariable>
							<SetVariable>
								<Destination>OldMasterCrc</Destination>
								<Source>0</Source>
							</SetVariable>
							<SetVariable>
								<Destination>t_oldSlaveCrc</Destination>
								<Source>0</Source>
							</SetVariable>
							<SetVariable>
								<Destination>t_masterSeqNo</Destination>
								<Source>1</Source>
							</SetVariable>
							<SetVariable>
								<Destination>t_slaveSeqNo</Destination>
								<Source>1</Source>
							</SetVariable>
							<SetVariable>
								<Destination>SafeInputs</Destination>
								<Source>FailSafeValue</Source>
							</SetVariable>
							<SetVariable>
								<Destination>DataCommand</Destination>
								<Source>FailSafeData</Source>
							</SetVariable>
							<SetVariable>
								<Destination>commFaultReason</Destination>
								<Source>WD_EXPIRED</Source>
							</SetVariable>
						</SetVariables>
					</Action>
				</TestStep>
				<TestStep Name="SetFrame">
					<Action>
						<SetFrame Name="t_masterFrame">
							<Command>
								<CommandValue>Reset</CommandValue>
							</Command>
							<SafeData>
								<SafeDataVariable>commFaultReason</SafeDataVariable>
							</SafeData>
							<LastCRC>LastCrc</LastCRC>
							<ConnectionID>
								<UshortValue>0</UshortValue>
							</ConnectionID>
							<SequenceNo>t_masterSeqNo</SequenceNo>
							<OldCRC>OldMasterCrc</OldCRC>
							<New>false</New>
						</SetFrame>
					</Action>
				</TestStep>
				<TestStep Name="SendFrame">
					<Action>
						<SendFrame Name="t_masterFrame"/>
					</Action>
					<ReturnValue>
						<OnFailure>
							<Type>Error</Type>
							<Value>Failed to send FSoE frame!</Value>
							<Id>256</Id>
						</OnFailure>
					</ReturnValue>
				</TestStep>
				<TestStep Name="SetMasterSeqNo">
					<Action>
						<SetVariables>
							<SetVariable>
								<Destination>t_masterSeqNo</Destination>
								<Source>1</Source>
							</SetVariable>
						</SetVariables>
					</Action>
				</TestStep>
				<TestStep Name="StartWatchdog">
					<Action>
						<StartWd>
							<Watchdog>t_watchdog</Watchdog>
						</StartWd>
					</Action>
				</TestStep>
			</TestSteps>
		</TestFunction>
		<TestFunction Name="GET_COMM_FAULT_REASON">
			<TestSteps>
				<TestStep Name="SetString">
					<Compares>
						<Compare>
							<Condition>
								<Value1>t_slaveFrame.FrameData[1]</Value1>
								<Operator>Lower</Operator>
								<Value2>INVALID_CMD</Value2>
							</Condition>
							<Statement>
								<SetVariables>
									<SetVariable>
										<Destination>t_commFaultReason</Destination>
										<Source>None</Source>
									</SetVariable>
								</SetVariables>
							</Statement>
						</Compare>
						<Compare>
							<Condition>
								<Value1>t_slaveFrame.FrameData[1]</Value1>
								<Operator>Equal</Operator>
								<Value2>INVALID_CMD</Value2>
							</Condition>
							<Statement>
								<SetVariables>
									<SetVariable>
										<Destination>t_commFaultReason</Destination>
										<Source>INVALID_CMD</Source>
									</SetVariable>
								</SetVariables>
							</Statement>
						</Compare>
						<Compare>
							<Condition>
								<Value1>t_slaveFrame.FrameData[1]</Value1>
								<Operator>Equal</Operator>
								<Value2>UNKNOWN_CMD</Value2>
							</Condition>
							<Statement>
								<SetVariables>
									<SetVariable>
										<Destination>t_commFaultReason</Destination>
										<Source>UNKNOWN_CMD</Source>
									</SetVariable>
								</SetVariables>
							</Statement>
						</Compare>
						<Compare>
							<Condition>
								<Value1>t_slaveFrame.FrameData[1]</Value1>
								<Operator>Equal</Operator>
								<Value2>INVALID_CONNID</Value2>
							</Condition>
							<Statement>
								<SetVariables>
									<SetVariable>
										<Destination>t_commFaultReason</Destination>
										<Source>INVALID_CONNID</Source>
									</SetVariable>
								</SetVariables>
							</Statement>
						</Compare>
						<Compare>
							<Condition>
								<Value1>t_slaveFrame.FrameData[1]</Value1>
								<Operator>Equal</Operator>
								<Value2>INVALID_CRC</Value2>
							</Condition>
							<Statement>
								<SetVariables>
									<SetVariable>
										<Destination>t_commFaultReason</Destination>
										<Source>INVALID_CRC</Source>
									</SetVariable>
								</SetVariables>
							</Statement>
						</Compare>
						<Compare>
							<Condition>
								<Value1>t_slaveFrame.FrameData[1]</Value1>
								<Operator>Equal</Operator>
								<Value2>WD_EXPIRED</Value2>
							</Condition>
							<Statement>
								<SetVariables>
									<SetVariable>
										<Destination>t_commFaultReason</Destination>
										<Source>WD_EXPIRED</Source>
									</SetVariable>
								</SetVariables>
							</Statement>
						</Compare>
						<Compare>
							<Condition>
								<Value1>t_slaveFrame.FrameData[1]</Value1>
								<Operator>Equal</Operator>
								<Value2>INVALID_ADDRESS</Value2>
							</Condition>
							<Statement>
								<SetVariables>
									<SetVariable>
										<Destination>t_commFaultReason</Destination>
										<Source>INVALID_ADDRESS</Source>
									</SetVariable>
								</SetVariables>
							</Statement>
						</Compare>
						<Compare>
							<Condition>
								<Value1>t_slaveFrame.FrameData[1]</Value1>
								<Operator>Equal</Operator>
								<Value2>INVALID_DATA</Value2>
							</Condition>
							<Statement>
								<SetVariables>
									<SetVariable>
										<Destination>t_commFaultReason</Destination>
										<Source>INVALID_DATA</Source>
									</SetVariable>
								</SetVariables>
							</Statement>
						</Compare>
						<Compare>
							<Condition>
								<Value1>t_slaveFrame.FrameData[1]</Value1>
								<Operator>Equal</Operator>
								<Value2>INVALID_COMPARA_LEN</Value2>
							</Condition>
							<Statement>
								<SetVariables>
									<SetVariable>
										<Destination>t_commFaultReason</Destination>
										<Source>INVALID_COMPARA_LEN</Source>
									</SetVariable>
								</SetVariables>
							</Statement>
						</Compare>
						<Compare>
							<Condition>
								<Value1>t_slaveFrame.FrameData[1]</Value1>
								<Operator>Equal</Operator>
								<Value2>INVALID_COMPARA</Value2>
							</Condition>
							<Statement>
								<SetVariables>
									<SetVariable>
										<Destination>t_commFaultReason</Destination>
										<Source>INVALID_COMPARA</Source>
									</SetVariable>
								</SetVariables>
							</Statement>
						</Compare>
						<Compare>
							<Condition>
								<Value1>t_slaveFrame.FrameData[1]</Value1>
								<Operator>Equal</Operator>
								<Value2>INVALID_USERPARA_LEN</Value2>
							</Condition>
							<Statement>
								<SetVariables>
									<SetVariable>
										<Destination>t_commFaultReason</Destination>
										<Source>INVALID_USERPARA_LEN</Source>
									</SetVariable>
								</SetVariables>
							</Statement>
						</Compare>
						<Compare>
							<Condition>
								<Value1>t_slaveFrame.FrameData[1]</Value1>
								<Operator>Equal</Operator>
								<Value2>INVALID_USERPARA</Value2>
							</Condition>
							<Statement>
								<SetVariables>
									<SetVariable>
										<Destination>t_commFaultReason</Destination>
										<Source>INVALID_USERPARA</Source>
									</SetVariable>
								</SetVariables>
							</Statement>
						</Compare>
						<Compare>
							<Condition>
								<Value1>t_slaveFrame.FrameData[1]</Value1>
								<Operator>Greater</Operator>
								<Value2>INVALID_USERPARA</Value2>
							</Condition>
							<Condition>
								<Value1>t_slaveFrame.FrameData[1]</Value1>
								<Operator>Lower</Operator>
								<Value2>INVALID_SAFEPARA</Value2>
							</Condition>
							<Statement>
								<SetVariables>
									<SetVariable>
										<Destination>t_commFaultReason</Destination>
										<Source>UNDEFINED_COMM_FAULT_REASON</Source>
									</SetVariable>
								</SetVariables>
							</Statement>
						</Compare>
						<Compare>
							<Condition>
								<Value1>t_slaveFrame.FrameData[1]</Value1>
								<Operator>GreaterOrEqual</Operator>
								<Value2>INVALID_SAFEPARA</Value2>
							</Condition>
							<Statement>
								<SetVariables>
									<SetVariable>
										<Destination>t_commFaultReason</Destination>
										<Source>INVALID_SAFEPARA</Source>
									</SetVariable>
								</SetVariables>
							</Statement>
						</Compare>
					</Compares>
				</TestStep>
			</TestSteps>
		</TestFunction>
		<TestFunction Name="PARA_FAIL1">
			<TestSteps>
				<TestStep Name="SetVars">
					<Action>
						<SetVariables>
							<SetVariable>
								<Destination>LastCrc</Destination>
								<Source>0</Source>
							</SetVariable>
							<SetVariable>
								<Destination>OldMasterCrc</Destination>
								<Source>0</Source>
							</SetVariable>
							<SetVariable>
								<Destination>t_oldSlaveCrc</Destination>
								<Source>0</Source>
							</SetVariable>
							<SetVariable>
								<Destination>t_masterSeqNo</Destination>
								<Source>1</Source>
							</SetVariable>
							<SetVariable>
								<Destination>t_slaveSeqNo</Destination>
								<Source>1</Source>
							</SetVariable>
							<SetVariable>
								<Destination>DataCommand</Destination>
								<Source>FailSafeData</Source>
							</SetVariable>
							<SetVariable>
								<Destination>CommFaultReason</Destination>
								<Source>INVALID_CRC</Source>
							</SetVariable>
						</SetVariables>
					</Action>
				</TestStep>
				<TestStep Name="SetFrame">
					<Action>
						<SetFrame Name="t_masterFrame">
							<Command>
								<CommandValue>Reset</CommandValue>
							</Command>
							<SafeData>
								<SafeDataVariable>CommFaultReason</SafeDataVariable>
							</SafeData>
							<LastCRC>LastCrc</LastCRC>
							<ConnectionID>
								<UshortValue>0</UshortValue>
							</ConnectionID>
							<SequenceNo>t_masterSeqNo</SequenceNo>
							<OldCRC>OldMasterCrc</OldCRC>
							<New>false</New>
						</SetFrame>
					</Action>
				</TestStep>
				<TestStep Name="SendFrame">
					<Action>
						<SendFrame Name="t_masterFrame"/>
					</Action>
					<ReturnValue>
						<OnFailure>
							<Type>Error</Type>
							<Value>Failed to send FSoE frame!</Value>
							<Id>256</Id>
						</OnFailure>
					</ReturnValue>
				</TestStep>
				<TestStep Name="SetMasterSeqNo">
					<Action>
						<SetVariables>
							<SetVariable>
								<Destination>t_masterSeqNo</Destination>
								<Source>1</Source>
							</SetVariable>
						</SetVariables>
					</Action>
				</TestStep>
				<TestStep Name="StartWatchdog">
					<Action>
						<StartWd>
							<Watchdog>t_watchdog</Watchdog>
						</StartWd>
					</Action>
				</TestStep>
			</TestSteps>
		</TestFunction>
		<TestFunction Name="PARA_FAIL2">
			<TestSteps>
				<TestStep Name="SetVars">
					<Action>
						<SetVariables>
							<SetVariable>
								<Destination>LastCrc</Destination>
								<Source>0</Source>
							</SetVariable>
							<SetVariable>
								<Destination>OldMasterCrc</Destination>
								<Source>0</Source>
							</SetVariable>
							<SetVariable>
								<Destination>t_oldSlaveCrc</Destination>
								<Source>0</Source>
							</SetVariable>
							<SetVariable>
								<Destination>t_masterSeqNo</Destination>
								<Source>1</Source>
							</SetVariable>
							<SetVariable>
								<Destination>t_slaveSeqNo</Destination>
								<Source>1</Source>
							</SetVariable>
							<SetVariable>
								<Destination>DataCommand</Destination>
								<Source>FailSafeData</Source>
							</SetVariable>
							<SetVariable>
								<Destination>CommFaultReason</Destination>
								<Source>INVALID_DATA</Source>
							</SetVariable>
						</SetVariables>
					</Action>
				</TestStep>
				<TestStep Name="SetFrame">
					<Action>
						<SetFrame Name="t_masterFrame">
							<Command>
								<CommandValue>Reset</CommandValue>
							</Command>
							<SafeData>
								<SafeDataVariable>CommFaultReason</SafeDataVariable>
							</SafeData>
							<LastCRC>LastCrc</LastCRC>
							<ConnectionID>
								<UshortValue>0</UshortValue>
							</ConnectionID>
							<SequenceNo>t_masterSeqNo</SequenceNo>
							<OldCRC>OldMasterCrc</OldCRC>
							<New>false</New>
						</SetFrame>
					</Action>
				</TestStep>
				<TestStep Name="SendFrame">
					<Action>
						<SendFrame Name="t_masterFrame"/>
					</Action>
					<ReturnValue>
						<OnFailure>
							<Type>Error</Type>
							<Value>Failed to send FSoE frame!</Value>
							<Id>256</Id>
						</OnFailure>
					</ReturnValue>
				</TestStep>
				<TestStep Name="SetMasterSeqNo">
					<Action>
						<SetVariables>
							<SetVariable>
								<Destination>t_masterSeqNo</Destination>
								<Source>1</Source>
							</SetVariable>
						</SetVariables>
					</Action>
				</TestStep>
				<TestStep Name="StartWatchdog">
					<Action>
						<StartWd>
							<Watchdog>t_watchdog</Watchdog>
						</StartWd>
					</Action>
				</TestStep>
			</TestSteps>
		</TestFunction>
		<TestFunction Name="PARA_FAIL3">
			<TestSteps>
				<TestStep Name="SetVars">
					<Action>
						<SetVariables>
							<SetVariable>
								<Destination>LastCrc</Destination>
								<Source>0</Source>
							</SetVariable>
							<SetVariable>
								<Destination>OldMasterCrc</Destination>
								<Source>0</Source>
							</SetVariable>
							<SetVariable>
								<Destination>t_oldSlaveCrc</Destination>
								<Source>0</Source>
							</SetVariable>
							<SetVariable>
								<Destination>t_masterSeqNo</Destination>
								<Source>1</Source>
							</SetVariable>
							<SetVariable>
								<Destination>t_slaveSeqNo</Destination>
								<Source>1</Source>
							</SetVariable>
							<SetVariable>
								<Destination>DataCommand</Destination>
								<Source>FailSafeData</Source>
							</SetVariable>
							<SetVariable>
								<Destination>CommFaultReason</Destination>
								<Source>INVALID_CONNID</Source>
							</SetVariable>
						</SetVariables>
					</Action>
				</TestStep>
				<TestStep Name="SetFrame">
					<Action>
						<SetFrame Name="t_masterFrame">
							<Command>
								<CommandValue>Reset</CommandValue>
							</Command>
							<SafeData>
								<SafeDataVariable>CommFaultReason</SafeDataVariable>
							</SafeData>
							<LastCRC>LastCrc</LastCRC>
							<ConnectionID>
								<UshortValue>0</UshortValue>
							</ConnectionID>
							<SequenceNo>t_masterSeqNo</SequenceNo>
							<OldCRC>OldMasterCrc</OldCRC>
							<New>false</New>
						</SetFrame>
					</Action>
				</TestStep>
				<TestStep Name="SendFrame">
					<Action>
						<SendFrame Name="t_masterFrame"/>
					</Action>
					<ReturnValue>
						<OnFailure>
							<Type>Error</Type>
							<Value>Failed to send FSoE frame!</Value>
							<Id>256</Id>
						</OnFailure>
					</ReturnValue>
				</TestStep>
				<TestStep Name="SetMasterSeqNo">
					<Action>
						<SetVariables>
							<SetVariable>
								<Destination>t_masterSeqNo</Destination>
								<Source>1</Source>
							</SetVariable>
						</SetVariables>
					</Action>
				</TestStep>
				<TestStep Name="StartWatchdog">
					<Action>
						<StartWd>
							<Watchdog>t_watchdog</Watchdog>
						</StartWd>
					</Action>
				</TestStep>
			</TestSteps>
		</TestFunction>
		<TestFunction Name="PARA_FAIL4">
			<TestSteps>
				<TestStep Name="SetVars">
					<Action>
						<SetVariables>
							<SetVariable>
								<Destination>LastCrc</Destination>
								<Source>0</Source>
							</SetVariable>
							<SetVariable>
								<Destination>OldMasterCrc</Destination>
								<Source>0</Source>
							</SetVariable>
							<SetVariable>
								<Destination>t_oldSlaveCrc</Destination>
								<Source>0</Source>
							</SetVariable>
							<SetVariable>
								<Destination>t_masterSeqNo</Destination>
								<Source>1</Source>
							</SetVariable>
							<SetVariable>
								<Destination>t_slaveSeqNo</Destination>
								<Source>1</Source>
							</SetVariable>
							<SetVariable>
								<Destination>DataCommand</Destination>
								<Source>FailSafeData</Source>
							</SetVariable>
							<SetVariable>
								<Destination>CommFaultReason</Destination>
								<Source>INVALID_CMD</Source>
							</SetVariable>
						</SetVariables>
					</Action>
				</TestStep>
				<TestStep Name="SetFrame">
					<Action>
						<SetFrame Name="t_masterFrame">
							<Command>
								<CommandValue>Reset</CommandValue>
							</Command>
							<SafeData>
								<SafeDataVariable>CommFaultReason</SafeDataVariable>
							</SafeData>
							<LastCRC>LastCrc</LastCRC>
							<ConnectionID>
								<UshortValue>0</UshortValue>
							</ConnectionID>
							<SequenceNo>t_masterSeqNo</SequenceNo>
							<OldCRC>OldMasterCrc</OldCRC>
							<New>false</New>
						</SetFrame>
					</Action>
				</TestStep>
				<TestStep Name="SendFrame">
					<Action>
						<SendFrame Name="t_masterFrame"/>
					</Action>
					<ReturnValue>
						<OnFailure>
							<Type>Error</Type>
							<Value>Failed to send FSoE frame!</Value>
							<Id>256</Id>
						</OnFailure>
					</ReturnValue>
				</TestStep>
				<TestStep Name="SetMasterSeqNo">
					<Action>
						<SetVariables>
							<SetVariable>
								<Destination>t_masterSeqNo</Destination>
								<Source>1</Source>
							</SetVariable>
						</SetVariables>
					</Action>
				</TestStep>
				<TestStep Name="StartWatchdog">
					<Action>
						<StartWd>
							<Watchdog>t_watchdog</Watchdog>
						</StartWd>
					</Action>
				</TestStep>
			</TestSteps>
		</TestFunction>
		<TestFunction Name="PARA_FAIL5">
			<TestSteps>
				<TestStep Name="SetVars">
					<Action>
						<SetVariables>
							<SetVariable>
								<Destination>LastCrc</Destination>
								<Source>0</Source>
							</SetVariable>
							<SetVariable>
								<Destination>OldMasterCrc</Destination>
								<Source>0</Source>
							</SetVariable>
							<SetVariable>
								<Destination>t_oldSlaveCrc</Destination>
								<Source>0</Source>
							</SetVariable>
							<SetVariable>
								<Destination>t_masterSeqNo</Destination>
								<Source>1</Source>
							</SetVariable>
							<SetVariable>
								<Destination>t_slaveSeqNo</Destination>
								<Source>1</Source>
							</SetVariable>
							<SetVariable>
								<Destination>DataCommand</Destination>
								<Source>FailSafeData</Source>
							</SetVariable>
							<SetVariable>
								<Destination>CommFaultReason</Destination>
								<Source>UNKNOWN_CMD</Source>
							</SetVariable>
						</SetVariables>
					</Action>
				</TestStep>
				<TestStep Name="SetFrame">
					<Action>
						<SetFrame Name="t_masterFrame">
							<Command>
								<CommandValue>Reset</CommandValue>
							</Command>
							<SafeData>
								<SafeDataVariable>CommFaultReason</SafeDataVariable>
							</SafeData>
							<LastCRC>LastCrc</LastCRC>
							<ConnectionID>
								<UshortValue>0</UshortValue>
							</ConnectionID>
							<SequenceNo>t_masterSeqNo</SequenceNo>
							<OldCRC>OldMasterCrc</OldCRC>
							<New>false</New>
						</SetFrame>
					</Action>
				</TestStep>
				<TestStep Name="SendFrame">
					<Action>
						<SendFrame Name="t_masterFrame"/>
					</Action>
					<ReturnValue>
						<OnFailure>
							<Type>Error</Type>
							<Value>Failed to send FSoE frame!</Value>
							<Id>256</Id>
						</OnFailure>
					</ReturnValue>
				</TestStep>
				<TestStep Name="SetMasterSeqNo">
					<Action>
						<SetVariables>
							<SetVariable>
								<Destination>t_masterSeqNo</Destination>
								<Source>1</Source>
							</SetVariable>
						</SetVariables>
					</Action>
				</TestStep>
				<TestStep Name="StartWatchdog">
					<Action>
						<StartWd>
							<Watchdog>t_watchdog</Watchdog>
						</StartWd>
					</Action>
				</TestStep>
			</TestSteps>
		</TestFunction>
		<TestFunction Name="PARA_OK">
			<TestSteps>
				<TestStep Name="SetVars">
					<Action>
						<SetVariables>
							<SetVariable>
								<Destination>LastCrc</Destination>
								<Source>t_slaveFrame.Crc0</Source>
							</SetVariable>
						</SetVariables>
					</Action>
				</TestStep>
				<TestStep Name="SetFrame">
					<Informations1>
						<Information>
							<Type>Verbose</Type>
							<Value Param0="SafeOutputs" Param1="LastCrc" Param2="t_masterSeqNo" Param3="OldMasterCrc" Param4="t_connectionId" Param5="DataCommand">SetFrame(Command {5}, SafeData {0}, LastCrc 0x{1:x4}, ConnectionId 0x{4:x4},  SequenceNo 0x{2:x4}, OldCrc 0x{3:x4}, New true)</Value>
						</Information>
					</Informations1>
					<Action>
						<SetFrame Name="t_masterFrame">
							<Command>
								<CommandVariable>DataCommand</CommandVariable>
							</Command>
							<SafeData>
								<SafeDataVariable>SafeOutputs</SafeDataVariable>
							</SafeData>
							<LastCRC>LastCrc</LastCRC>
							<ConnectionID>
								<ConnectionIdVariable>t_connectionId</ConnectionIdVariable>
							</ConnectionID>
							<SequenceNo>t_masterSeqNo</SequenceNo>
							<OldCRC>OldMasterCrc</OldCRC>
							<New>true</New>
						</SetFrame>
					</Action>
					<ReturnValue>
						<OnFailure>
							<Type>Error</Type>
							<Value>Failed to set FSoE frame!</Value>
							<Id>256</Id>
						</OnFailure>
					</ReturnValue>
				</TestStep>
				<TestStep Name="SendFrame">
					<Action>
						<SendFrame Name="t_masterFrame"/>
					</Action>
					<Informations2>
						<Information>
							<Type>Verbose</Type>
							<Value Param0="t_masterFrame.FrameData">Master Frame: {0}</Value>
						</Information>
					</Informations2>
					<ReturnValue>
						<OnFailure>
							<Type>Error</Type>
							<Value>Failed to send FSoE frame!</Value>
							<Id>256</Id>
						</OnFailure>
					</ReturnValue>
				</TestStep>
				<TestStep Name="SetLastCrc">
					<Action>
						<SetVariables>
							<SetVariable>
								<Destination>LastCrc</Destination>
								<Source>t_masterFrame.Crc0</Source>
							</SetVariable>
						</SetVariables>
					</Action>
				</TestStep>
				<TestStep Name="StartWatchdog">
					<Informations1>
						<Information>
							<Type>Verbose</Type>
							<Value Param0="t_watchdog" Param1="ElapsedWD">Watchdog = {0} ms, elapsed time: {1} ms</Value>
						</Information>
					</Informations1>
					<Action>
						<StartWd>
							<Watchdog>t_watchdog</Watchdog>
						</StartWd>
					</Action>
				</TestStep>
			</TestSteps>
		</TestFunction>
		<TestFunction Name="PARA_RESET1">
			<TestSteps>
				<TestStep Name="SetVars">
					<Action>
						<SetVariables>
							<SetVariable>
								<Destination>LastCrc</Destination>
								<Source>0</Source>
							</SetVariable>
							<SetVariable>
								<Destination>OldMasterCrc</Destination>
								<Source>0</Source>
							</SetVariable>
							<SetVariable>
								<Destination>t_oldSlaveCrc</Destination>
								<Source>0</Source>
							</SetVariable>
							<SetVariable>
								<Destination>t_masterSeqNo</Destination>
								<Source>1</Source>
							</SetVariable>
							<SetVariable>
								<Destination>t_slaveSeqNo</Destination>
								<Source>1</Source>
							</SetVariable>
							<SetVariable>
								<Destination>DataCommand</Destination>
								<Source>FailSafeData</Source>
							</SetVariable>
						</SetVariables>
					</Action>
				</TestStep>
				<TestStep Name="SetFrame">
					<Informations1>
						<Information>
							<Type>Verbose</Type>
							<Value Param0="t_masterSessionId" Param1="LastCrc" Param2="t_masterSeqNo" Param3="OldMasterCrc" Param4="0">SetFrame(Command Session, SafeData {0}, LastCrc 0x{1:x4}, ConnectionId 0x{4:x4},  SequenceNo 0x{2:x4}, OldCrc 0x{3:x4}, New false</Value>
						</Information>
					</Informations1>
					<Action>
						<SetFrame Name="t_masterFrame">
							<Command>
								<CommandValue>Session</CommandValue>
							</Command>
							<SafeData>
								<SafeDataVariable>t_masterSessionId</SafeDataVariable>
							</SafeData>
							<LastCRC>LastCrc</LastCRC>
							<ConnectionID>
								<UshortValue>0</UshortValue>
							</ConnectionID>
							<SequenceNo>t_masterSeqNo</SequenceNo>
							<OldCRC>OldMasterCrc</OldCRC>
							<New>false</New>
						</SetFrame>
					</Action>
				</TestStep>
				<TestStep Name="SendFrame">
					<Action>
						<SendFrame Name="t_masterFrame"/>
					</Action>
					<Informations2>
						<Information>
							<Type>Verbose</Type>
							<Value Param0="t_masterFrame.FrameData">Master Frame: {0}</Value>
						</Information>
					</Informations2>
					<ReturnValue>
						<OnFailure>
							<Type>Error</Type>
							<Value>Failed to send FSoE frame!</Value>
							<Id>256</Id>
						</OnFailure>
					</ReturnValue>
				</TestStep>
				<TestStep Name="SetLastCrc">
					<Action>
						<SetVariables>
							<SetVariable>
								<Destination>LastCrc</Destination>
								<Source>t_masterFrame.Crc0</Source>
							</SetVariable>
						</SetVariables>
					</Action>
					<Informations2>
						<Information>
							<Type>Verbose</Type>
							<Value Param0="t_masterFrame.Crc0">LastCrc = 0x{0:x4}</Value>
						</Information>
					</Informations2>
				</TestStep>
				<TestStep Name="SetOldCrc">
					<Action>
						<SetVariables>
							<SetVariable>
								<Destination>t_oldSlaveCrc</Destination>
								<Source>t_slaveFrame.Crc0</Source>
							</SetVariable>
						</SetVariables>
					</Action>
					<Informations2>
						<Information>
							<Type>Verbose</Type>
							<Value Param0="t_slaveFrame.Crc0">OldCrc = 0x{0:x4}</Value>
						</Information>
					</Informations2>
				</TestStep>
				<TestStep Name="UpdateBytesToBeSend">
					<Action>
						<UpdateBytesToBeSent BytesToBeSent="BytesToBeSent">
							<BytesSent>2</BytesSent>
						</UpdateBytesToBeSent>
					</Action>
					<Informations2>
						<Information>
							<Type>Verbose</Type>
							<Value Param0="BytesToBeSent">BytesToBeSent = {0}</Value>
						</Information>
					</Informations2>
				</TestStep>
				<TestStep Name="StartWatchdog">
					<Action>
						<StartWd>
							<Watchdog>t_watchdog</Watchdog>
						</StartWd>
					</Action>
				</TestStep>
			</TestSteps>
		</TestFunction>
		<TestFunction Name="PARA_RESET2">
			<TestSteps>
				<TestStep Name="SetVars">
					<Action>
						<SetVariables>
							<SetVariable>
								<Destination>LastCrc</Destination>
								<Source>0</Source>
							</SetVariable>
							<SetVariable>
								<Destination>OldMasterCrc</Destination>
								<Source>0</Source>
							</SetVariable>
							<SetVariable>
								<Destination>t_oldSlaveCrc</Destination>
								<Source>0</Source>
							</SetVariable>
							<SetVariable>
								<Destination>t_masterSeqNo</Destination>
								<Source>1</Source>
							</SetVariable>
							<SetVariable>
								<Destination>t_slaveSeqNo</Destination>
								<Source>1</Source>
							</SetVariable>
							<SetVariable>
								<Destination>DataCommand</Destination>
								<Source>FailSafeData</Source>
							</SetVariable>
							<SetVariable>
								<Destination>CommFaultReason</Destination>
								<Source>0</Source>
							</SetVariable>
						</SetVariables>
					</Action>
				</TestStep>
				<TestStep Name="SetFrame">
					<Action>
						<SetFrame Name="t_masterFrame">
							<Command>
								<CommandValue>Reset</CommandValue>
							</Command>
							<SafeData>
								<SafeDataVariable>CommFaultReason</SafeDataVariable>
							</SafeData>
							<LastCRC>LastCrc</LastCRC>
							<ConnectionID>
								<UshortValue>0</UshortValue>
							</ConnectionID>
							<SequenceNo>t_masterSeqNo</SequenceNo>
							<OldCRC>OldMasterCrc</OldCRC>
							<New>false</New>
						</SetFrame>
					</Action>
				</TestStep>
				<TestStep Name="SendFrame">
					<Action>
						<SendFrame Name="t_masterFrame"/>
					</Action>
					<ReturnValue>
						<OnFailure>
							<Type>Error</Type>
							<Value>Failed to send FSoE frame!</Value>
							<Id>256</Id>
						</OnFailure>
					</ReturnValue>
				</TestStep>
				<TestStep Name="StartWatchdog">
					<Action>
						<StartWd>
							<Watchdog>t_watchdog</Watchdog>
						</StartWd>
					</Action>
				</TestStep>
			</TestSteps>
		</TestFunction>
		<TestFunction Name="PARA_STAY1">
			<TestSteps>
				<TestStep Name="SetVars">
					<Action>
						<SetVariables>
							<SetVariable>
								<Destination>LastCrc</Destination>
								<Source>t_slaveFrame.Crc0</Source>
							</SetVariable>
							<SetVariable>
								<Destination DestinationIndex="0">t_safeData</Destination>
								<Source SourceIndex="0">FailSafeValue</Source>
							</SetVariable>
							<SetVariable>
								<Destination DestinationIndex="0">t_safeData</Destination>
								<Source SourceIndex="SafeParaSize-BytesToBeSent">t_safePara</Source>
							</SetVariable>
						</SetVariables>
					</Action>
				</TestStep>
				<TestStep Name="SetFrame">
					<Informations1>
						<Information>
							<Type>Verbose</Type>
							<Value Param0="t_safeData" Param1="LastCrc" Param2="t_masterSeqNo" Param3="OldMasterCrc" Param4="t_connectionId">SetFrame(Command Parameter, SafeData {0:x}, LastCrc 0x{1:x4}, ConnectionId 0x{4:x4},  SequenceNo 0x{2:x4}, OldCrc 0x{3:x4}, New true)</Value>
						</Information>
					</Informations1>
					<Action>
						<SetFrame Name="t_masterFrame">
							<Command>
								<CommandValue>Parameter</CommandValue>
							</Command>
							<SafeData>
								<SafeDataVariable>t_safeData</SafeDataVariable>
							</SafeData>
							<LastCRC>t_slaveFrame.Crc0</LastCRC>
							<ConnectionID>
								<ConnectionIdVariable>t_connectionId</ConnectionIdVariable>
							</ConnectionID>
							<SequenceNo>t_masterSeqNo</SequenceNo>
							<OldCRC>OldMasterCrc</OldCRC>
							<New>true</New>
						</SetFrame>
					</Action>
				</TestStep>
				<TestStep Name="SendFrame">
					<Action>
						<SendFrame Name="t_masterFrame"/>
					</Action>
					<Informations2>
						<Information>
							<Type>Verbose</Type>
							<Value Param0="t_masterFrame.FrameData">Master Frame: {0}</Value>
						</Information>
					</Informations2>
					<ReturnValue>
						<OnFailure>
							<Type>Error</Type>
							<Value>Failed to send FSoE frame!</Value>
							<Id>256</Id>
						</OnFailure>
					</ReturnValue>
				</TestStep>
				<TestStep Name="SetLastCrc">
					<Action>
						<SetVariables>
							<SetVariable>
								<Destination>LastCrc</Destination>
								<Source>t_masterFrame.Crc0</Source>
							</SetVariable>
						</SetVariables>
					</Action>
					<Informations2>
						<Information>
							<Type>Verbose</Type>
							<Value Param0="t_masterFrame.Crc0">LastCrc = 0x{0:x4}</Value>
						</Information>
					</Informations2>
				</TestStep>
				<TestStep Name="UpdateBytesToBeSend">
					<Action>
						<UpdateBytesToBeSent BytesToBeSent="BytesToBeSent">
							<BytesSent>BytesToBeSent</BytesSent>
						</UpdateBytesToBeSent>
					</Action>
					<Informations2>
						<Information>
							<Type>Verbose</Type>
							<Value Param0="BytesToBeSent">BytesToBeSent = {0}</Value>
						</Information>
					</Informations2>
				</TestStep>
				<TestStep Name="StartWatchdog">
					<Informations1>
						<Information>
							<Type>Verbose</Type>
							<Value Param0="t_watchdog" Param1="ElapsedWD">Watchdog = {0} ms, elapsed time: {1} ms</Value>
						</Information>
					</Informations1>
					<Action>
						<StartWd>
							<Watchdog>t_watchdog</Watchdog>
						</StartWd>
					</Action>
				</TestStep>
			</TestSteps>
		</TestFunction>
		<TestFunction Name="PARA_STAY1_INVALID_CONNID">
			<TestSteps>
				<TestStep Name="SetVars">
					<Action>
						<SetVariables>
							<SetVariable>
								<Destination>LastCrc</Destination>
								<Source>t_slaveFrame.Crc0</Source>
							</SetVariable>
							<SetVariable>
								<Destination DestinationIndex="0">t_safeData</Destination>
								<Source SourceIndex="0">FailSafeValue</Source>
							</SetVariable>
							<SetVariable>
								<Destination DestinationIndex="0">t_safeData</Destination>
								<Source SourceIndex="SafeParaSize-BytesToBeSent">t_safePara</Source>
							</SetVariable>
						</SetVariables>
					</Action>
				</TestStep>
				<TestStep Name="SetInvalidConnId">
					<Informations1>
						<Information>
							<Type>Output</Type>
							<Value Param0="t_connectionId">Valid ConnId: 0x{0:x4}</Value>
						</Information>
					</Informations1>
					<Action>
						<SetVariables>
							<SetVariable>
								<Destination>t_connectionId</Destination>
								<Source>c_connId</Source>
							</SetVariable>
						</SetVariables>
					</Action>
					<Informations2>
						<Information>
							<Type>Output</Type>
							<Value Param0="t_connectionId">Falsified ConnId: 0x{0:x4}</Value>
						</Information>
					</Informations2>
				</TestStep>
				<TestStep Name="SetFrame">
					<Informations1>
						<Information>
							<Type>Verbose</Type>
							<Value Param0="t_safeData" Param1="LastCrc" Param2="t_masterSeqNo" Param3="OldMasterCrc" Param4="t_connectionId">SetFrame(Command Parameter, SafeData {0:x}, LastCrc 0x{1:x4}, ConnectionId 0x{4:x4},  SequenceNo 0x{2:x4}, OldCrc 0x{3:x4}, New true)</Value>
						</Information>
					</Informations1>
					<Action>
						<SetFrame Name="t_masterFrame">
							<Command>
								<CommandValue>Parameter</CommandValue>
							</Command>
							<SafeData>
								<SafeDataVariable>t_safeData</SafeDataVariable>
							</SafeData>
							<LastCRC>t_slaveFrame.Crc0</LastCRC>
							<ConnectionID>
								<ConnectionIdVariable>t_connectionId</ConnectionIdVariable>
							</ConnectionID>
							<SequenceNo>t_masterSeqNo</SequenceNo>
							<OldCRC>OldMasterCrc</OldCRC>
							<New>true</New>
						</SetFrame>
					</Action>
				</TestStep>
				<TestStep Name="SendFrame">
					<Action>
						<SendFrame Name="t_masterFrame"/>
					</Action>
					<Informations2>
						<Information>
							<Type>Verbose</Type>
							<Value Param0="t_masterFrame.FrameData">Master Frame: {0}</Value>
						</Information>
					</Informations2>
					<ReturnValue>
						<OnFailure>
							<Type>Error</Type>
							<Value>Failed to send FSoE frame!</Value>
							<Id>256</Id>
						</OnFailure>
					</ReturnValue>
				</TestStep>
				<TestStep Name="SetLastCrc">
					<Action>
						<SetVariables>
							<SetVariable>
								<Destination>LastCrc</Destination>
								<Source>t_masterFrame.Crc0</Source>
							</SetVariable>
						</SetVariables>
					</Action>
					<Informations2>
						<Information>
							<Type>Verbose</Type>
							<Value Param0="t_masterFrame.Crc0">LastCrc = 0x{0:x4}</Value>
						</Information>
					</Informations2>
				</TestStep>
				<TestStep Name="UpdateBytesToBeSend">
					<Action>
						<UpdateBytesToBeSent BytesToBeSent="BytesToBeSent">
							<BytesSent>BytesToBeSent</BytesSent>
						</UpdateBytesToBeSent>
					</Action>
					<Informations2>
						<Information>
							<Type>Verbose</Type>
							<Value Param0="BytesToBeSent">BytesToBeSent = {0}</Value>
						</Information>
					</Informations2>
				</TestStep>
				<TestStep Name="StartWatchdog">
					<Informations1>
						<Information>
							<Type>Verbose</Type>
							<Value Param0="t_watchdog" Param1="ElapsedWD">Watchdog = {0} ms, elapsed time: {1} ms</Value>
						</Information>
					</Informations1>
					<Action>
						<StartWd>
							<Watchdog>t_watchdog</Watchdog>
						</StartWd>
					</Action>
				</TestStep>
			</TestSteps>
		</TestFunction>
		<TestFunction Name="PARA_STAY1_INCREMENTED_CRC0">
			<TestSteps>
				<TestStep Name="SetVars">
					<Action>
						<SetVariables>
							<SetVariable>
								<Destination>LastCrc</Destination>
								<Source>t_slaveFrame.Crc0</Source>
							</SetVariable>
							<SetVariable>
								<Destination DestinationIndex="0">t_safeData</Destination>
								<Source SourceIndex="0">FailSafeValue</Source>
							</SetVariable>
							<SetVariable>
								<Destination DestinationIndex="0">t_safeData</Destination>
								<Source SourceIndex="SafeParaSize-BytesToBeSent">t_safePara</Source>
							</SetVariable>
						</SetVariables>
					</Action>
				</TestStep>
				<TestStep Name="SetFrame">
					<Informations1>
						<Information>
							<Type>Verbose</Type>
							<Value Param0="t_safeData" Param1="LastCrc" Param2="t_masterSeqNo" Param3="OldMasterCrc" Param4="t_connectionId">SetFrame(Command Parameter, SafeData {0:x}, LastCrc 0x{1:x4}, ConnectionId 0x{4:x4},  SequenceNo 0x{2:x4}, OldCrc 0x{3:x4}, New true)</Value>
						</Information>
					</Informations1>
					<Action>
						<SetFrame Name="t_masterFrame">
							<Command>
								<CommandValue>Parameter</CommandValue>
							</Command>
							<SafeData>
								<SafeDataVariable>t_safeData</SafeDataVariable>
							</SafeData>
							<LastCRC>t_slaveFrame.Crc0</LastCRC>
							<ConnectionID>
								<ConnectionIdVariable>t_connectionId</ConnectionIdVariable>
							</ConnectionID>
							<SequenceNo>t_masterSeqNo</SequenceNo>
							<OldCRC>OldMasterCrc</OldCRC>
							<New>true</New>
						</SetFrame>
					</Action>
				</TestStep>
				<TestStep Name="SetInvalidCrc0">
					<Informations1>
						<Information>
							<Type>Output</Type>
							<Value Param0="t_masterFrame.Crc0">Valid Crc0 = 0x{0:x4}</Value>
						</Information>
					</Informations1>
					<Action>
						<CallFunction>
							<Reference>INCREMENT_CRC_0</Reference>
						</CallFunction>
					</Action>
					<Informations2>
						<Information>
							<Type>Output</Type>
							<Value Param0="t_masterFrame.Crc0">Falsified Crc0 = 0x{0:x4}</Value>
						</Information>
					</Informations2>
				</TestStep>
				<TestStep Name="SendFrame">
					<Action>
						<SendFrame Name="t_masterFrame"/>
					</Action>
					<Informations2>
						<Information>
							<Type>Verbose</Type>
							<Value Param0="t_masterFrame.FrameData">Master Frame: {0}</Value>
						</Information>
					</Informations2>
					<ReturnValue>
						<OnFailure>
							<Type>Error</Type>
							<Value>Failed to send FSoE frame!</Value>
							<Id>256</Id>
						</OnFailure>
					</ReturnValue>
				</TestStep>
				<TestStep Name="SetLastCrc">
					<Action>
						<SetVariables>
							<SetVariable>
								<Destination>LastCrc</Destination>
								<Source>t_masterFrame.Crc0</Source>
							</SetVariable>
						</SetVariables>
					</Action>
					<Informations2>
						<Information>
							<Type>Verbose</Type>
							<Value Param0="t_masterFrame.Crc0">LastCrc = 0x{0:x4}</Value>
						</Information>
					</Informations2>
				</TestStep>
				<TestStep Name="UpdateBytesToBeSend">
					<Action>
						<UpdateBytesToBeSent BytesToBeSent="BytesToBeSent">
							<BytesSent>BytesToBeSent</BytesSent>
						</UpdateBytesToBeSent>
					</Action>
					<Informations2>
						<Information>
							<Type>Verbose</Type>
							<Value Param0="BytesToBeSent">BytesToBeSent = {0}</Value>
						</Information>
					</Informations2>
				</TestStep>
				<TestStep Name="StartWatchdog">
					<Informations1>
						<Information>
							<Type>Verbose</Type>
							<Value Param0="t_watchdog" Param1="ElapsedWD">Watchdog = {0} ms, elapsed time: {1} ms</Value>
						</Information>
					</Informations1>
					<Action>
						<StartWd>
							<Watchdog>t_watchdog</Watchdog>
						</StartWd>
					</Action>
				</TestStep>
			</TestSteps>
		</TestFunction>
		<TestFunction Name="PARA_STAY1_DECREMENTED_CRC0">
			<TestSteps>
				<TestStep Name="SetVars">
					<Action>
						<SetVariables>
							<SetVariable>
								<Destination>LastCrc</Destination>
								<Source>t_slaveFrame.Crc0</Source>
							</SetVariable>
							<SetVariable>
								<Destination DestinationIndex="0">t_safeData</Destination>
								<Source SourceIndex="0">FailSafeValue</Source>
							</SetVariable>
							<SetVariable>
								<Destination DestinationIndex="0">t_safeData</Destination>
								<Source SourceIndex="SafeParaSize-BytesToBeSent">t_safePara</Source>
							</SetVariable>
						</SetVariables>
					</Action>
				</TestStep>
				<TestStep Name="SetFrame">
					<Informations1>
						<Information>
							<Type>Verbose</Type>
							<Value Param0="t_safeData" Param1="LastCrc" Param2="t_masterSeqNo" Param3="OldMasterCrc" Param4="t_connectionId">SetFrame(Command Parameter, SafeData {0:x}, LastCrc 0x{1:x4}, ConnectionId 0x{4:x4},  SequenceNo 0x{2:x4}, OldCrc 0x{3:x4}, New true)</Value>
						</Information>
					</Informations1>
					<Action>
						<SetFrame Name="t_masterFrame">
							<Command>
								<CommandValue>Parameter</CommandValue>
							</Command>
							<SafeData>
								<SafeDataVariable>t_safeData</SafeDataVariable>
							</SafeData>
							<LastCRC>t_slaveFrame.Crc0</LastCRC>
							<ConnectionID>
								<ConnectionIdVariable>t_connectionId</ConnectionIdVariable>
							</ConnectionID>
							<SequenceNo>t_masterSeqNo</SequenceNo>
							<OldCRC>OldMasterCrc</OldCRC>
							<New>true</New>
						</SetFrame>
					</Action>
				</TestStep>
				<TestStep Name="SetInvalidCrc0">
					<Informations1>
						<Information>
							<Type>Output</Type>
							<Value Param0="t_masterFrame.Crc0">Valid Crc0 = 0x{0:x4}</Value>
						</Information>
					</Informations1>
					<Action>
						<CallFunction>
							<Reference>DECREMENT_CRC_0</Reference>
						</CallFunction>
					</Action>
					<Informations2>
						<Information>
							<Type>Output</Type>
							<Value Param0="t_masterFrame.Crc0">Falsified Crc0 = 0x{0:x4}</Value>
						</Information>
					</Informations2>
				</TestStep>
				<TestStep Name="SendFrame">
					<Action>
						<SendFrame Name="t_masterFrame"/>
					</Action>
					<Informations2>
						<Information>
							<Type>Verbose</Type>
							<Value Param0="t_masterFrame.FrameData">Master Frame: {0}</Value>
						</Information>
					</Informations2>
					<ReturnValue>
						<OnFailure>
							<Type>Error</Type>
							<Value>Failed to send FSoE frame!</Value>
							<Id>256</Id>
						</OnFailure>
					</ReturnValue>
				</TestStep>
				<TestStep Name="SetLastCrc">
					<Action>
						<SetVariables>
							<SetVariable>
								<Destination>LastCrc</Destination>
								<Source>t_masterFrame.Crc0</Source>
							</SetVariable>
						</SetVariables>
					</Action>
					<Informations2>
						<Information>
							<Type>Verbose</Type>
							<Value Param0="t_masterFrame.Crc0">LastCrc = 0x{0:x4}</Value>
						</Information>
					</Informations2>
				</TestStep>
				<TestStep Name="UpdateBytesToBeSend">
					<Action>
						<UpdateBytesToBeSent BytesToBeSent="BytesToBeSent">
							<BytesSent>BytesToBeSent</BytesSent>
						</UpdateBytesToBeSent>
					</Action>
					<Informations2>
						<Information>
							<Type>Verbose</Type>
							<Value Param0="BytesToBeSent">BytesToBeSent = {0}</Value>
						</Information>
					</Informations2>
				</TestStep>
				<TestStep Name="StartWatchdog">
					<Informations1>
						<Information>
							<Type>Verbose</Type>
							<Value Param0="t_watchdog" Param1="ElapsedWD">Watchdog = {0} ms, elapsed time: {1} ms</Value>
						</Information>
					</Informations1>
					<Action>
						<StartWd>
							<Watchdog>t_watchdog</Watchdog>
						</StartWd>
					</Action>
				</TestStep>
			</TestSteps>
		</TestFunction>
		<TestFunction Name="PARA_WD">
			<TestSteps>
				<TestStep Name="SetVars">
					<Action>
						<SetVariables>
							<SetVariable>
								<Destination>LastCrc</Destination>
								<Source>0</Source>
							</SetVariable>
							<SetVariable>
								<Destination>OldMasterCrc</Destination>
								<Source>0</Source>
							</SetVariable>
							<SetVariable>
								<Destination>t_oldSlaveCrc</Destination>
								<Source>0</Source>
							</SetVariable>
							<SetVariable>
								<Destination>t_masterSeqNo</Destination>
								<Source>1</Source>
							</SetVariable>
							<SetVariable>
								<Destination>t_slaveSeqNo</Destination>
								<Source>1</Source>
							</SetVariable>
							<SetVariable>
								<Destination>DataCommand</Destination>
								<Source>FailSafeData</Source>
							</SetVariable>
							<SetVariable>
								<Destination>commFaultReason</Destination>
								<Source>WD_EXPIRED</Source>
							</SetVariable>
						</SetVariables>
					</Action>
				</TestStep>
				<TestStep Name="SetFrame">
					<Action>
						<SetFrame Name="t_masterFrame">
							<Command>
								<CommandValue>Reset</CommandValue>
							</Command>
							<SafeData>
								<SafeDataVariable>commFaultReason</SafeDataVariable>
							</SafeData>
							<LastCRC>LastCrc</LastCRC>
							<ConnectionID>
								<UshortValue>0</UshortValue>
							</ConnectionID>
							<SequenceNo>t_masterSeqNo</SequenceNo>
							<OldCRC>OldMasterCrc</OldCRC>
							<New>false</New>
						</SetFrame>
					</Action>
				</TestStep>
				<TestStep Name="SendFrame">
					<Action>
						<SendFrame Name="t_masterFrame"/>
					</Action>
					<ReturnValue>
						<OnFailure>
							<Type>Error</Type>
							<Value>Failed to send FSoE frame!</Value>
							<Id>256</Id>
						</OnFailure>
					</ReturnValue>
				</TestStep>
				<TestStep Name="SetMasterSeqNo">
					<Action>
						<SetVariables>
							<SetVariable>
								<Destination>t_masterSeqNo</Destination>
								<Source>1</Source>
							</SetVariable>
						</SetVariables>
					</Action>
				</TestStep>
				<TestStep Name="StartWatchdog">
					<Action>
						<StartWd>
							<Watchdog>t_watchdog</Watchdog>
						</StartWd>
					</Action>
				</TestStep>
			</TestSteps>
		</TestFunction>
		<TestFunction Name="RESET_OK">
			<TestSteps>
				<TestStep Name="SetFrame">
					<Informations1>
						<Information>
							<Type>Verbose</Type>
							<Value Param0="t_masterSessionId" Param1="LastCrc" Param2="t_masterSeqNo" Param3="OldMasterCrc" Param4="false">SetFrame(Command Session, SafeData {0}, LastCrc 0x{1:x4}, ConnectionId 0,  SequenceNo 0x{2:x4}, OldCrc 0x{3:x4}, New {4})</Value>
						</Information>
					</Informations1>
					<Action>
						<SetFrame Name="t_masterFrame">
							<Command>
								<CommandValue>Session</CommandValue>
							</Command>
							<SafeData>
								<SafeDataVariable>t_masterSessionId</SafeDataVariable>
							</SafeData>
							<LastCRC>LastCrc</LastCRC>
							<ConnectionID>
								<UshortValue>0</UshortValue>
							</ConnectionID>
							<SequenceNo>t_masterSeqNo</SequenceNo>
							<OldCRC>OldMasterCrc</OldCRC>
							<New>false</New>
						</SetFrame>
					</Action>
				</TestStep>
				<TestStep Name="SendFrame">
					<Action>
						<SendFrame Name="t_masterFrame"/>
					</Action>
					<Informations2>
						<Information>
							<Type>Verbose</Type>
							<Value Param0="t_masterFrame.FrameData">Master Frame: {0}</Value>
						</Information>
					</Informations2>
					<ReturnValue>
						<OnFailure>
							<Type>Error</Type>
							<Value>Failed to send FSoE frame!</Value>
							<Id>256</Id>
						</OnFailure>
					</ReturnValue>
				</TestStep>
				<TestStep Name="SetLastCrc">
					<Action>
						<SetVariables>
							<SetVariable>
								<Destination>LastCrc</Destination>
								<Source>t_masterFrame.Crc0</Source>
							</SetVariable>
						</SetVariables>
					</Action>
					<Informations2>
						<Information>
							<Type>Verbose</Type>
							<Value Param0="t_masterFrame.Crc0">LastCrc = 0x{0:x4}</Value>
						</Information>
					</Informations2>
				</TestStep>
				<TestStep Name="SetOldCrc">
					<Action>
						<SetVariables>
							<SetVariable>
								<Destination>t_oldSlaveCrc</Destination>
								<Source>t_slaveFrame.Crc0</Source>
							</SetVariable>
						</SetVariables>
					</Action>
					<Informations2>
						<Information>
							<Type>Verbose</Type>
							<Value Param0="t_slaveFrame.Crc0">OldCrc = 0x{0:x4}</Value>
						</Information>
					</Informations2>
				</TestStep>
				<TestStep Name="UpdateBytesToBeSend">
					<Action>
						<UpdateBytesToBeSent BytesToBeSent="BytesToBeSent">
							<BytesSent>2</BytesSent>
						</UpdateBytesToBeSent>
					</Action>
					<Informations2>
						<Information>
							<Type>Verbose</Type>
							<Value Param0="BytesToBeSent">BytesToBeSent = {0}</Value>
						</Information>
					</Informations2>
				</TestStep>
				<TestStep Name="StartWatchdog">
					<Informations1>
						<Information>
							<Type>Verbose</Type>
							<Value Param0="SafePara.Watchdog" Param1="ElapsedWD">Watchdog = {0} ms, elapsed time: {1} ms</Value>
						</Information>
					</Informations1>
					<Action>
						<StartWd>
							<Watchdog>SafePara.Watchdog</Watchdog>
						</StartWd>
					</Action>
				</TestStep>
			</TestSteps>
		</TestFunction>
		<TestFunction Name="Reset_OK">
			<TestSteps>
				<TestStep Name="SetIndex">
					<Action>
						<SetVariables>
							<SetVariable>
								<Destination>SecondSessionFrameSent</Destination>
								<Source>false</Source>
							</SetVariable>
							<SetVariable>
								<Destination>t_index</Destination>
								<Source>0</Source>
							</SetVariable>
						</SetVariables>
					</Action>
					<Compares>
						<Compare>
							<Condition>
								<Value1>SafeDataLength</Value1>
								<Operator>NotEqual</Operator>
								<Value2>1</Value2>
							</Condition>
							<Statement>
								<SetVariables>
									<SetVariable>
										<Destination>SecondSessionFrameSent</Destination>
										<Source>true</Source>
									</SetVariable>
								</SetVariables>
							</Statement>
						</Compare>
					</Compares>
				</TestStep>
				<TestStep Name="SetFrame">
					<Informations1>
						<Information>
							<Type>Verbose</Type>
							<Value Param0="t_masterSessionId" Param1="LastCrc" Param2="t_masterSeqNo" Param3="OldMasterCrc" Param4="false">SetFrame(Command Session, SafeData {0}, LastCrc 0x{1:x4}, ConnectionId 0,  SequenceNo 0x{2:x4}, OldCrc 0x{3:x4}, New {4})</Value>
						</Information>
					</Informations1>
					<Action>
						<SetFrame Name="t_masterFrame">
							<Command>
								<CommandValue>Session</CommandValue>
							</Command>
							<SafeData>
								<SafeDataVariable>t_masterSessionId</SafeDataVariable>
							</SafeData>
							<LastCRC>LastCrc</LastCRC>
							<ConnectionID>
								<UshortValue>0</UshortValue>
							</ConnectionID>
							<SequenceNo>t_masterSeqNo</SequenceNo>
							<OldCRC>OldMasterCrc</OldCRC>
							<New>false</New>
						</SetFrame>
					</Action>
				</TestStep>
				<TestStep Name="SendFrame">
					<Action>
						<SendFrame Name="t_masterFrame"/>
					</Action>
					<Informations2>
						<Information>
							<Type>Verbose</Type>
							<Value Param0="t_masterFrame.FrameData">Master Frame: {0}</Value>
						</Information>
					</Informations2>
					<ReturnValue>
						<OnFailure>
							<Type>Error</Type>
							<Value>Failed to send FSoE frame!</Value>
							<Id>256</Id>
						</OnFailure>
					</ReturnValue>
				</TestStep>
				<TestStep Name="SetLastCrc">
					<Action>
						<SetVariables>
							<SetVariable>
								<Destination>LastCrc</Destination>
								<Source>t_masterFrame.Crc0</Source>
							</SetVariable>
						</SetVariables>
					</Action>
					<Informations2>
						<Information>
							<Type>Verbose</Type>
							<Value Param0="t_masterFrame.Crc0">LastCrc = 0x{0:x4}</Value>
						</Information>
					</Informations2>
				</TestStep>
				<TestStep Name="SetOldCrc">
					<Action>
						<SetVariables>
							<SetVariable>
								<Destination>t_oldSlaveCrc</Destination>
								<Source>t_slaveFrame.Crc0</Source>
							</SetVariable>
						</SetVariables>
					</Action>
					<Informations2>
						<Information>
							<Type>Verbose</Type>
							<Value Param0="t_slaveFrame.Crc0">OldCrc = 0x{0:x4}</Value>
						</Information>
					</Informations2>
				</TestStep>
				<TestStep Name="UpdateBytesToBeSend">
					<Action>
						<UpdateBytesToBeSent BytesToBeSent="BytesToBeSent">
							<BytesSent>2</BytesSent>
						</UpdateBytesToBeSent>
					</Action>
					<Informations2>
						<Information>
							<Type>Verbose</Type>
							<Value Param0="BytesToBeSent">BytesToBeSent = {0}</Value>
						</Information>
					</Informations2>
				</TestStep>
				<TestStep Name="StartWatchdog">
					<Informations1>
						<Information>
							<Type>Verbose</Type>
							<Value Param0="t_watchdog" Param1="ElapsedWD">Watchdog = {0} ms, elapsed time: {1} ms</Value>
						</Information>
					</Informations1>
					<Action>
						<StartWd>
							<Watchdog>SafePara.Watchdog</Watchdog>
						</StartWd>
					</Action>
				</TestStep>
				<TestStep Name="ReceiveEvent">
					<Event>
						<ReceiveFrame>t_slaveFrame</ReceiveFrame>
					</Event>
					<Informations2>
						<Information>
							<Type>Verbose</Type>
							<Value Param0="t_slaveFrame.FrameData">Slave Frame: {0}</Value>
						</Information>
					</Informations2>
				</TestStep>
				<TestStep Name="CheckWatchdog">
					<Event>
						<WatchdogExpired>
							<SetVariables>
								<SetVariable>
									<Destination>t_wdExpired</Destination>
									<Source>true</Source>
								</SetVariable>
							</SetVariables>
						</WatchdogExpired>
					</Event>
					<Compares>
						<Compare>
							<Condition>
								<Value1>t_wdExpired</Value1>
								<Operator>Equal</Operator>
								<Value2>true</Value2>
							</Condition>
							<Statement>
								<SetVariables>
									<SetVariable>
										<Destination>t_wdExpired</Destination>
										<Source>false</Source>
									</SetVariable>
								</SetVariables>
							</Statement>
							<Statement>
								<Return>
									<Type>Error</Type>
									<Value Param0="ElapsedWD">Watchdog expired! {0} ms </Value>
									<Id>5</Id>
								</Return>
							</Statement>
						</Compare>
					</Compares>
				</TestStep>
				<TestStep Name="CheckReceivedCrcInSession">
					<Informations1>
						<Information>
							<Type>Verbose</Type>
							<Value Param0="t_slaveFrame.FrameData" Param1="LastCrc" Param2="t_slaveSeqNo" Param3="t_oldSlaveCrc" Param4="true">IsCrcCorrect(Frame {0}, LastCrc 0x{1:X4}, SeqNo {2}, OldCrc 0x{3:X4}, New {4})</Value>
						</Information>
					</Informations1>
					<Action>
						<IsCrcCorrect ReturnValue="crcCorrect">
							<Frame>t_slaveFrame</Frame>
							<LastCrc>LastCrc</LastCrc>
							<SequenceNo>t_slaveSeqNo</SequenceNo>
							<OldCrc>t_oldSlaveCrc</OldCrc>
							<New>true</New>
						</IsCrcCorrect>
					</Action>
					<ReturnValue>
						<OnFailure>
							<Type>Error</Type>
							<Value Param0="t_slaveFrame.Crc0">Invalid Crc0 received ({0:x})</Value>
							<Id>4</Id>
						</OnFailure>
					</ReturnValue>
				</TestStep>
				<TestStep Name="CopySlaveSessionID">
					<Action>
						<SetVariables>
							<SetVariable>
								<Destination DestinationIndex="t_index">t_slaveSessionId</Destination>
								<Source>t_slaveFrame.SafeData</Source>
							</SetVariable>
						</SetVariables>
					</Action>
				</TestStep>
				<TestStep Name="CheckSessionConditions">
					<Compares>
						<Compare>
							<Condition>
								<Value1>t_slaveFrame.Command</Value1>
								<Operator>Equal</Operator>
								<Value2>Session</Value2>
							</Condition>
							<Condition>
								<Value1>BytesToBeSent</Value1>
								<Operator>Equal</Operator>
								<Value2>0</Value2>
							</Condition>
							<Condition>
								<Value1>crcCorrect</Value1>
								<Operator>Equal</Operator>
								<Value2>true</Value2>
							</Condition>
							<Condition>
								<Value1>t_slaveFrame.ConnId</Value1>
								<Operator>Equal</Operator>
								<Value2>t_initUInt16</Value2>
							</Condition>
							<Statement>
								<CallFunction>CHECK_REMAINING_SAFE_DATA_IN_SESSION</CallFunction>
							</Statement>
							<Statement>
								<Return>
									<Type>Success</Type>
									<Value/>
								</Return>
							</Statement>
						</Compare>
						<Compare>
							<Condition>
								<Value1>t_slaveFrame.Command</Value1>
								<Operator>Equal</Operator>
								<Value2>Session</Value2>
							</Condition>
							<Condition>
								<Value1>t_slaveFrame.ConnId</Value1>
								<Operator>NotEqual</Operator>
								<Value2>t_initUInt16</Value2>
							</Condition>
							<Statement>
								<Return>
									<Type>Error</Type>
									<Value>Invalid Connection Id received</Value>
									<Id>3</Id>
								</Return>
							</Statement>
						</Compare>
						<Compare>
							<Condition>
								<Value1>t_slaveFrame.Command</Value1>
								<Operator>Equal</Operator>
								<Value2>Session</Value2>
							</Condition>
							<Condition>
								<Value1>crcCorrect</Value1>
								<Operator>Equal</Operator>
								<Value2>false</Value2>
							</Condition>
							<Condition>
								<Value1>SecondSessionFrameSent</Value1>
								<Operator>Equal</Operator>
								<Value2>true</Value2>
							</Condition>
							<Statement>
								<Return>
									<Type>Error</Type>
									<Value>Invalid Crc received</Value>
									<Id>4</Id>
								</Return>
							</Statement>
						</Compare>
						<Compare>
							<Condition>
								<Value1>t_slaveFrame.Command</Value1>
								<Operator>Equal</Operator>
								<Value2>Session</Value2>
							</Condition>
							<Condition>
								<Value1>crcCorrect</Value1>
								<Operator>Equal</Operator>
								<Value2>false</Value2>
							</Condition>
							<Condition>
								<Value1>SecondSessionFrameSent</Value1>
								<Operator>Equal</Operator>
								<Value2>false</Value2>
							</Condition>
							<Statement>
								<CallFunction>SESSION_STAY2</CallFunction>
							</Statement>
							<Statement>
								<GotoStep>ReceiveEvent</GotoStep>
							</Statement>
						</Compare>
						<Compare>
							<Condition>
								<Value1>t_slaveFrame.Command</Value1>
								<Operator>Equal</Operator>
								<Value2>Session</Value2>
							</Condition>
							<Condition>
								<Value1>BytesToBeSent</Value1>
								<Operator>NotEqual</Operator>
								<Value2>0</Value2>
							</Condition>
							<Condition>
								<Value1>crcCorrect</Value1>
								<Operator>Equal</Operator>
								<Value2>true</Value2>
							</Condition>
							<Statement>
								<CallFunction>SESSION_STAY1</CallFunction>
							</Statement>
							<Statement>
								<SetVariables>
									<SetVariable>
										<Destination>t_index</Destination>
										<Source>t_index+SafeDataLength</Source>
									</SetVariable>
								</SetVariables>
							</Statement>
							<Statement>
								<CallFunction>CHECK_REMAINING_SAFE_DATA_IN_SESSION</CallFunction>
							</Statement>
							<Statement>
								<GotoStep>ReceiveEvent</GotoStep>
							</Statement>
						</Compare>
						<Compare>
							<Condition>
								<Value1>t_slaveFrame.Command</Value1>
								<Operator>Equal</Operator>
								<Value2>Reset</Value2>
							</Condition>
							<Statement>
								<Return>
									<Type>Error</Type>
									<Value>Invalid CMD(Reset) received</Value>
									<Id>1</Id>
								</Return>
							</Statement>
						</Compare>
						<Compare>
							<Condition>
								<Value1>t_slaveFrame.Command</Value1>
								<Operator>Equal</Operator>
								<Value2>Connection</Value2>
							</Condition>
							<Statement>
								<Return>
									<Type>Error</Type>
									<Value>Invalid CMD(Connection) received</Value>
									<Id>1</Id>
								</Return>
							</Statement>
						</Compare>
						<Compare>
							<Condition>
								<Value1>t_slaveFrame.Command</Value1>
								<Operator>Equal</Operator>
								<Value2>Parameter</Value2>
							</Condition>
							<Statement>
								<Return>
									<Type>Error</Type>
									<Value>Invalid CMD (Parameter) received</Value>
									<Id>1</Id>
								</Return>
							</Statement>
						</Compare>
						<Compare>
							<Condition>
								<Value1>t_slaveFrame.Command</Value1>
								<Operator>Equal</Operator>
								<Value2>ProcessData</Value2>
							</Condition>
							<Statement>
								<Return>
									<Type>Warning</Type>
									<Value>Invalid CMD (ProcessData) received</Value>
									<Id>1</Id>
								</Return>
							</Statement>
						</Compare>
						<Compare>
							<Condition>
								<Value1>t_slaveFrame.Command</Value1>
								<Operator>Equal</Operator>
								<Value2>FailSafeData</Value2>
							</Condition>
							<Statement>
								<Return>
									<Type>Error</Type>
									<Value>Invalid CMD (FailSafeData) received</Value>
									<Id>1</Id>
								</Return>
							</Statement>
						</Compare>
						<Compare>
							<Condition>
								<Value1>t_slaveFrame.Command</Value1>
								<Operator>NotEqual</Operator>
								<Value2>Reset</Value2>
							</Condition>
							<Condition>
								<Value1>t_slaveFrame.Command</Value1>
								<Operator>NotEqual</Operator>
								<Value2>Session</Value2>
							</Condition>
							<Condition>
								<Value1>t_slaveFrame.Command</Value1>
								<Operator>NotEqual</Operator>
								<Value2>Connection</Value2>
							</Condition>
							<Condition>
								<Value1>t_slaveFrame.Command</Value1>
								<Operator>NotEqual</Operator>
								<Value2>Parameter</Value2>
							</Condition>
							<Condition>
								<Value1>t_slaveFrame.Command</Value1>
								<Operator>NotEqual</Operator>
								<Value2>ProcessData</Value2>
							</Condition>
							<Condition>
								<Value1>t_slaveFrame.Command</Value1>
								<Operator>NotEqual</Operator>
								<Value2>FailSafeData</Value2>
							</Condition>
							<Statement>
								<Return>
									<Type>Error</Type>
									<Value Param0="t_slaveFrame.Command">Unknown Cmd received: 0x{0:x2} </Value>
									<Id>2</Id>
								</Return>
							</Statement>
						</Compare>
					</Compares>
				</TestStep>
			</TestSteps>
		</TestFunction>
		<TestFunction Name="RESET_START">
			<TestSteps>
				<TestStep Name="SetVars">
					<Action>
						<SetVariables>
							<SetVariable>
								<Destination>LastCrc</Destination>
								<Source>0</Source>
							</SetVariable>
							<SetVariable>
								<Destination>OldMasterCrc</Destination>
								<Source>0</Source>
							</SetVariable>
							<SetVariable>
								<Destination>t_oldSlaveCrc</Destination>
								<Source>0</Source>
							</SetVariable>
							<SetVariable>
								<Destination>t_masterSeqNo</Destination>
								<Source>1</Source>
							</SetVariable>
							<SetVariable>
								<Destination>t_slaveSeqNo</Destination>
								<Source>1</Source>
							</SetVariable>
							<SetVariable>
								<Destination>DataCommand</Destination>
								<Source>FailSafeData</Source>
							</SetVariable>
							<SetVariable>
								<Destination>CommFaultReason</Destination>
								<Source>0</Source>
							</SetVariable>
						</SetVariables>
					</Action>
				</TestStep>
				<TestStep Name="SetFrame">
					<Informations1>
						<Information>
							<Type>Verbose</Type>
							<Value Param0="CommFaultReason" Param1="LastCrc" Param2="t_masterSeqNo" Param3="OldMasterCrc" Param4="true">SetFrame(Command Reset, SafeData {0}, LastCrc 0x{1:x4}, ConnectionId 0,  SequenceNo 0x{2:x4}, OldCrc 0x{3:x4}, New {4})</Value>
						</Information>
					</Informations1>
					<Action>
						<SetFrame Name="t_masterFrame">
							<Command>
								<CommandValue>Reset</CommandValue>
							</Command>
							<SafeData>
								<SafeDataVariable>CommFaultReason</SafeDataVariable>
							</SafeData>
							<LastCRC>LastCrc</LastCRC>
							<ConnectionID>
								<UshortValue>0</UshortValue>
							</ConnectionID>
							<SequenceNo>t_masterSeqNo</SequenceNo>
							<OldCRC>OldMasterCrc</OldCRC>
							<New>true</New>
						</SetFrame>
					</Action>
					<ReturnValue>
						<OnFailure>
							<Type>Error</Type>
							<Value>Failed to set FSoE frame!</Value>
							<Id>256</Id>
						</OnFailure>
					</ReturnValue>
				</TestStep>
				<TestStep Name="SendFrame">
					<Informations1>
						<Information>
							<Type>Verbose</Type>
							<Value Param0="t_masterFrame.FrameData">Master Frame: {0}</Value>
						</Information>
					</Informations1>
					<Action>
						<SendFrame Name="t_masterFrame"/>
					</Action>
					<ReturnValue>
						<OnFailure>
							<Type>Error</Type>
							<Value>Failed to send FSoE frame!</Value>
							<Id>256</Id>
						</OnFailure>
					</ReturnValue>
				</TestStep>
				<TestStep Name="SetMasterSeqNo">
					<Action>
						<SetVariables>
							<SetVariable>
								<Destination>t_masterSeqNo</Destination>
								<Source>1</Source>
							</SetVariable>
						</SetVariables>
					</Action>
				</TestStep>
				<TestStep Name="StartWatchdog">
					<Informations1>
						<Information>
							<Type>Verbose</Type>
							<Value Param0="t_watchdog" Param1="ElapsedWD">Watchdog = {0} ms, elapsed time: {1} ms</Value>
						</Information>
					</Informations1>
					<Action>
						<StartWd>
							<Watchdog>t_watchdog</Watchdog>
						</StartWd>
					</Action>
				</TestStep>
			</TestSteps>
		</TestFunction>
		<TestFunction Name="RESET_STAY1">
			<TestSteps>
				<TestStep Name="SetVars">
					<Action>
						<SetVariables>
							<SetVariable>
								<Destination>LastCrc</Destination>
								<Source>0</Source>
							</SetVariable>
							<SetVariable>
								<Destination>OldMasterCrc</Destination>
								<Source>0</Source>
							</SetVariable>
							<SetVariable>
								<Destination>t_oldSlaveCrc</Destination>
								<Source>0</Source>
							</SetVariable>
							<SetVariable>
								<Destination>t_masterSeqNo</Destination>
								<Source>1</Source>
							</SetVariable>
							<SetVariable>
								<Destination>t_slaveSeqNo</Destination>
								<Source>1</Source>
							</SetVariable>
							<SetVariable>
								<Destination>DataCommand</Destination>
								<Source>FailSafeData</Source>
							</SetVariable>
							<SetVariable>
								<Destination>CommFaultReason</Destination>
								<Source>0</Source>
							</SetVariable>
						</SetVariables>
					</Action>
				</TestStep>
				<TestStep Name="SetFrame">
					<Action>
						<SetFrame Name="t_masterFrame">
							<Command>
								<CommandValue>Reset</CommandValue>
							</Command>
							<SafeData>
								<SafeDataVariable>CommFaultReason</SafeDataVariable>
							</SafeData>
							<LastCRC>LastCrc</LastCRC>
							<ConnectionID>
								<UshortValue>0</UshortValue>
							</ConnectionID>
							<SequenceNo>t_masterSeqNo</SequenceNo>
							<OldCRC>OldMasterCrc</OldCRC>
							<New>false</New>
						</SetFrame>
					</Action>
				</TestStep>
				<TestStep Name="SendFrame">
					<Action>
						<SendFrame Name="t_masterFrame"/>
					</Action>
					<ReturnValue>
						<OnFailure>
							<Type>Error</Type>
							<Value>Failed to send FSoE frame!</Value>
							<Id>256</Id>
						</OnFailure>
					</ReturnValue>
				</TestStep>
				<TestStep Name="SetMasterSeqNo">
					<Action>
						<SetVariables>
							<SetVariable>
								<Destination>t_masterSeqNo</Destination>
								<Source>1</Source>
							</SetVariable>
						</SetVariables>
					</Action>
				</TestStep>
			</TestSteps>
		</TestFunction>
		<TestFunction Name="RESET_WD">
			<TestSteps>
				<TestStep Name="SetResetSeqNo">
					<Action>
						<SetVariables>
							<SetVariable>
								<Destination>t_resetSessionId</Destination>
								<Source>47802</Source>
							</SetVariable>
						</SetVariables>
					</Action>
				</TestStep>
				<TestStep Name="SetFrame">
					<Informations1>
						<Information>
							<Type>Verbose</Type>
							<Value Param0="t_masterSessionId" Param1="LastCrc" Param2="t_masterSeqNo" Param3="OldMasterCrc" Param4="0">SetFrame(Command Session, SafeData {0}, LastCrc 0x{1:x4}, ConnectionId 0x{4:x4},  SequenceNo 0x{2:x4}, OldCrc 0x{3:x4}, New true</Value>
						</Information>
					</Informations1>
					<Action>
						<SetFrame Name="t_masterFrame">
							<Command>
								<CommandValue>Session</CommandValue>
							</Command>
							<SafeData>
								<SafeDataVariable>t_resetSessionId</SafeDataVariable>
							</SafeData>
							<LastCRC>LastCrc</LastCRC>
							<ConnectionID>
								<UshortValue>0</UshortValue>
							</ConnectionID>
							<SequenceNo>t_masterSeqNo</SequenceNo>
							<OldCRC>OldMasterCrc</OldCRC>
							<New>false</New>
						</SetFrame>
					</Action>
				</TestStep>
				<TestStep Name="SendFrame">
					<Action>
						<SendFrame Name="t_masterFrame"/>
					</Action>
					<Informations2>
						<Information>
							<Type>Verbose</Type>
							<Value Param0="t_masterFrame.FrameData">Master Frame: {0}</Value>
						</Information>
					</Informations2>
					<ReturnValue>
						<OnFailure>
							<Type>Error</Type>
							<Value>Failed to send FSoE frame!</Value>
							<Id>256</Id>
						</OnFailure>
					</ReturnValue>
				</TestStep>
				<TestStep Name="SetLastCrc">
					<Action>
						<SetVariables>
							<SetVariable>
								<Destination>LastCrc</Destination>
								<Source>t_masterFrame.Crc0</Source>
							</SetVariable>
						</SetVariables>
					</Action>
					<Informations2>
						<Information>
							<Type>Verbose</Type>
							<Value Param0="t_masterFrame.Crc0">LastCrc = 0x{0:x4}</Value>
						</Information>
					</Informations2>
				</TestStep>
				<TestStep Name="UpdateBytesToBeSend">
					<Action>
						<UpdateBytesToBeSent BytesToBeSent="BytesToBeSent">
							<BytesSent>2</BytesSent>
						</UpdateBytesToBeSent>
					</Action>
					<Informations2>
						<Information>
							<Type>Verbose</Type>
							<Value Param0="BytesToBeSent">BytesToBeSent = {0}</Value>
						</Information>
					</Informations2>
				</TestStep>
				<TestStep Name="StartWatchdog">
					<Informations1>
						<Information>
							<Type>Verbose</Type>
							<Value Param0="SafePara.Watchdog" Param1="ElapsedWD">Watchdog = {0} ms, elapsed {1} ms</Value>
						</Information>
					</Informations1>
					<Action>
						<StartWd>
							<Watchdog>SafePara.Watchdog</Watchdog>
						</StartWd>
					</Action>
				</TestStep>
			</TestSteps>
		</TestFunction>
		<TestFunction Name="RUN_DUT_TO_CONNECTION">
			<TestSteps>
				<TestStep Name="GoToSession">
					<Action>
						<CallFunction>
							<Reference>RUN_DUT_TO_SESSION</Reference>
						</CallFunction>
					</Action>
				</TestStep>
				<TestStep Name="CallSessionOk">
					<Action>
						<CallFunction>
							<Reference>SESSION_OK</Reference>
						</CallFunction>
					</Action>
				</TestStep>
				<TestStep Name="ReceiveEvent">
					<Event>
						<ReceiveFrame>t_slaveFrame</ReceiveFrame>
					</Event>
					<Informations2>
						<Information>
							<Type>Verbose</Type>
							<Value Param0="t_slaveFrame.FrameData">Slave Frame: {0}</Value>
						</Information>
					</Informations2>
				</TestStep>
				<TestStep Name="CheckWatchdog">
					<Event>
						<WatchdogExpired>
							<Return>
								<Type>Error</Type>
								<Value Param0="ElapsedWD">Watchdog expired! {0} ms </Value>
								<Id>5</Id>
							</Return>
						</WatchdogExpired>
					</Event>
				</TestStep>
				<TestStep Name="CheckSafeDataInConnection">
					<Action>
						<IsSafeDataCorrect ReturnValue="safeDataCorrect">
							<Frame>t_slaveFrame</Frame>
							<ExpectedData>t_connData</ExpectedData>
							<BytesSent>4-BytesToBeSent</BytesSent>
						</IsSafeDataCorrect>
					</Action>
				</TestStep>
				<TestStep Name="CheckReceivedCrcInConnection">
					<Informations1>
						<Information>
							<Type>Verbose</Type>
							<Value Param0="t_slaveFrame.FrameData" Param1="LastCrc" Param2="t_slaveSeqNo" Param3="t_oldSlaveCrc" Param4="true">IsCrcCorrect(Frame {0}, LastCrc 0x{1:X4}, SeqNo {2}, OldCrc 0x{3:X4}, New {4})</Value>
						</Information>
					</Informations1>
					<Action>
						<IsCrcCorrect ReturnValue="crcCorrect">
							<Frame>t_slaveFrame</Frame>
							<LastCrc>LastCrc</LastCrc>
							<SequenceNo>t_slaveSeqNo</SequenceNo>
							<OldCrc>t_oldSlaveCrc</OldCrc>
							<New>true</New>
						</IsCrcCorrect>
					</Action>
					<ReturnValue>
						<OnFailure>
							<Type>Error</Type>
							<Value Param0="t_slaveFrame.Crc0">Invalid Crc0 reveived ({0:x})</Value>
							<Id>4</Id>
						</OnFailure>
					</ReturnValue>
				</TestStep>
				<TestStep Name="CheckConnectionCondition">
					<Compares>
						<Compare>
							<Condition>
								<Value1>t_slaveFrame.Command</Value1>
								<Operator>Equal</Operator>
								<Value2>Connection</Value2>
							</Condition>
							<Condition>
								<Value1>BytesToBeSent</Value1>
								<Operator>Equal</Operator>
								<Value2>0</Value2>
							</Condition>
							<Condition>
								<Value1>t_slaveFrame.ConnId</Value1>
								<Operator>Equal</Operator>
								<Value2>t_connectionId</Value2>
							</Condition>
							<Condition>
								<Value1>safeDataCorrect</Value1>
								<Operator>Equal</Operator>
								<Value2>true</Value2>
							</Condition>
							<Condition>
								<Value1>crcCorrect</Value1>
								<Operator>Equal</Operator>
								<Value2>true</Value2>
							</Condition>
							<Statement>
								<Return>
									<Type>Output</Type>
									<Value>DUT State: Connection</Value>
								</Return>
							</Statement>
						</Compare>
						<Compare>
							<Condition>
								<Value1>t_slaveFrame.Command</Value1>
								<Operator>Equal</Operator>
								<Value2>Connection</Value2>
							</Condition>
							<Condition>
								<Value1>t_slaveFrame.ConnId</Value1>
								<Operator>Equal</Operator>
								<Value2>t_connectionId</Value2>
							</Condition>
							<Condition>
								<Value1>safeDataCorrect</Value1>
								<Operator>Equal</Operator>
								<Value2>true</Value2>
							</Condition>
							<Condition>
								<Value1>crcCorrect</Value1>
								<Operator>Equal</Operator>
								<Value2>false</Value2>
							</Condition>
							<Statement>
								<Return>
									<Type>Error</Type>
									<Value>Invalid Crc received</Value>
									<Id>4</Id>
								</Return>
							</Statement>
						</Compare>
						<Compare>
							<Condition>
								<Value1>t_slaveFrame.Command</Value1>
								<Operator>Equal</Operator>
								<Value2>Connection</Value2>
							</Condition>
							<Condition>
								<Value1>t_slaveFrame.ConnId</Value1>
								<Operator>Equal</Operator>
								<Value2>t_connectionId</Value2>
							</Condition>
							<Condition>
								<Value1>safeDataCorrect</Value1>
								<Operator>Equal</Operator>
								<Value2>false</Value2>
							</Condition>
							<Statement>
								<Return>
									<Type>Error</Type>
									<Value Param0="t_slaveFrame.ConnId" Param1="ConnData.ConnId">Invalid SafeData received, FrameConnId: {0:x4}, Connection Data{1:x4}</Value>
									<Id>7</Id>
								</Return>
							</Statement>
						</Compare>
						<Compare>
							<Condition>
								<Value1>t_slaveFrame.Command</Value1>
								<Operator>Equal</Operator>
								<Value2>Connection</Value2>
							</Condition>
							<Condition>
								<Value1>t_slaveFrame.ConnId</Value1>
								<Operator>NotEqual</Operator>
								<Value2>t_connectionId</Value2>
							</Condition>
							<Statement>
								<Return>
									<Type>Error</Type>
									<Value>Invalid Connection Id received</Value>
									<Id>3</Id>
								</Return>
							</Statement>
						</Compare>
						<Compare>
							<Condition>
								<Value1>t_slaveFrame.Command</Value1>
								<Operator>Equal</Operator>
								<Value2>Connection</Value2>
							</Condition>
							<Condition>
								<Value1>BytesToBeSent</Value1>
								<Operator>NotEqual</Operator>
								<Value2>0</Value2>
							</Condition>
							<Condition>
								<Value1>t_slaveFrame.ConnId</Value1>
								<Operator>Equal</Operator>
								<Value2>t_connectionId</Value2>
							</Condition>
							<Condition>
								<Value1>safeDataCorrect</Value1>
								<Operator>Equal</Operator>
								<Value2>true</Value2>
							</Condition>
							<Condition>
								<Value1>crcCorrect</Value1>
								<Operator>Equal</Operator>
								<Value2>true</Value2>
							</Condition>
							<Statement>
								<CallFunction>CONN_STAY1</CallFunction>
							</Statement>
							<Statement>
								<GotoStep>ReceiveEvent</GotoStep>
							</Statement>
						</Compare>
						<Compare>
							<Condition>
								<Value1>t_slaveFrame.Command</Value1>
								<Operator>Equal</Operator>
								<Value2>Reset</Value2>
							</Condition>
							<Statement>
								<CallFunction>GET_COMM_FAULT_REASON</CallFunction>
							</Statement>
							<Statement>
								<Return>
									<Type>Error</Type>
									<Value Param0="t_commFaultReason">Reset Cmd received , CommFaultReason: {0}</Value>
								</Return>
							</Statement>
						</Compare>
						<Compare>
							<Condition>
								<Value1>t_slaveFrame.Command</Value1>
								<Operator>Equal</Operator>
								<Value2>Session</Value2>
							</Condition>
							<Statement>
								<Return>
									<Type>Error</Type>
									<Value>Invalid CMD (Session) received</Value>
									<Id>1</Id>
								</Return>
							</Statement>
						</Compare>
						<Compare>
							<Condition>
								<Value1>t_slaveFrame.Command</Value1>
								<Operator>Equal</Operator>
								<Value2>Parameter</Value2>
							</Condition>
							<Statement>
								<Return>
									<Type>Error</Type>
									<Value>Invalid CMD (Parameter) received</Value>
									<Id>1</Id>
								</Return>
							</Statement>
						</Compare>
						<Compare>
							<Condition>
								<Value1>t_slaveFrame.Command</Value1>
								<Operator>Equal</Operator>
								<Value2>ProcessData</Value2>
							</Condition>
							<Statement>
								<Return>
									<Type>Error</Type>
									<Value>Invalid CMD (ProcessData) received</Value>
									<Id>1</Id>
								</Return>
							</Statement>
						</Compare>
						<Compare>
							<Condition>
								<Value1>t_slaveFrame.Command</Value1>
								<Operator>Equal</Operator>
								<Value2>FailSafeData</Value2>
							</Condition>
							<Statement>
								<Return>
									<Type>Error</Type>
									<Value>Invalid CMD (FailSafeData) received</Value>
									<Id>1</Id>
								</Return>
							</Statement>
						</Compare>
						<Compare>
							<Condition>
								<Value1>t_slaveFrame.Command</Value1>
								<Operator>NotEqual</Operator>
								<Value2>Reset</Value2>
							</Condition>
							<Condition>
								<Value1>t_slaveFrame.Command</Value1>
								<Operator>NotEqual</Operator>
								<Value2>Session</Value2>
							</Condition>
							<Condition>
								<Value1>t_slaveFrame.Command</Value1>
								<Operator>NotEqual</Operator>
								<Value2>Connection</Value2>
							</Condition>
							<Condition>
								<Value1>t_slaveFrame.Command</Value1>
								<Operator>NotEqual</Operator>
								<Value2>Parameter</Value2>
							</Condition>
							<Condition>
								<Value1>t_slaveFrame.Command</Value1>
								<Operator>NotEqual</Operator>
								<Value2>ProcessData</Value2>
							</Condition>
							<Condition>
								<Value1>t_slaveFrame.Command</Value1>
								<Operator>NotEqual</Operator>
								<Value2>FailSafeData</Value2>
							</Condition>
							<Statement>
								<Return>
									<Type>Error</Type>
									<Value>Unknown CMD received</Value>
									<Id>2</Id>
								</Return>
							</Statement>
						</Compare>
						<Compare>
							<Condition>
								<Value1>1</Value1>
								<Operator>Equal</Operator>
								<Value2>1</Value2>
							</Condition>
							<Statement>
								<Return>
									<Type>Error</Type>
									<Value>General state machine error!</Value>
								</Return>
							</Statement>
						</Compare>
					</Compares>
				</TestStep>
			</TestSteps>
		</TestFunction>
		<TestFunction Name="RUN_DUT_TO_DATA">
			<TestSteps>
				<TestStep Name="GoToParameter">
					<Action>
						<CallFunction>
							<Reference>RUN_DUT_TO_PARAMETER</Reference>
						</CallFunction>
					</Action>
				</TestStep>
				<TestStep Name="CallParaOk">
					<Action>
						<CallFunction>
							<Reference>PARA_OK</Reference>
						</CallFunction>
					</Action>
				</TestStep>
				<TestStep Name="ReceiveEvent">
					<Event>
						<ReceiveFrame>t_slaveFrame</ReceiveFrame>
					</Event>
					<Informations2>
						<Information>
							<Type>Verbose</Type>
							<Value Param0="t_slaveFrame.FrameData">Slave Frame: {0}</Value>
						</Information>
					</Informations2>
				</TestStep>
				<TestStep Name="CheckWatchdog">
					<Event>
						<WatchdogExpired>
							<Return>
								<Type>Error</Type>
								<Value Param0="ElapsedWD">Watchdog expired!  {0} ms</Value>
								<Id>5</Id>
							</Return>
						</WatchdogExpired>
					</Event>
				</TestStep>
				<TestStep Name="CheckReceivedCrc">
					<Informations1>
						<Information>
							<Type>Verbose</Type>
							<Value Param0="t_slaveFrame.FrameData" Param1="LastCrc" Param2="t_slaveSeqNo" Param3="t_oldSlaveCrc" Param4="true">IsCrcCorrect(Frame {0}, LastCrc 0x{1:X4}, SeqNo {2}, OldCrc 0x{3:X4}, New {4})</Value>
						</Information>
					</Informations1>
					<Action>
						<IsCrcCorrect ReturnValue="crcCorrect">
							<Frame>t_slaveFrame</Frame>
							<LastCrc>LastCrc</LastCrc>
							<SequenceNo>t_slaveSeqNo</SequenceNo>
							<OldCrc>t_oldSlaveCrc</OldCrc>
							<New>true</New>
						</IsCrcCorrect>
					</Action>
					<ReturnValue>
						<OnFailure>
							<Type>Error</Type>
							<Value Param0="t_slaveFrame.Crc0">Invalid Crc0 reveived ({0:x})</Value>
							<Id>4</Id>
						</OnFailure>
					</ReturnValue>
				</TestStep>
				<TestStep Name="CheckDataCondition">
					<Compares>
						<Compare>
							<Condition>
								<Value1>t_slaveFrame.Command</Value1>
								<Operator>Equal</Operator>
								<Value2>ProcessData</Value2>
							</Condition>
							<Condition>
								<Value1>t_slaveFrame.ConnId</Value1>
								<Operator>Equal</Operator>
								<Value2>t_connectionId</Value2>
							</Condition>
							<Condition>
								<Value1>crcCorrect</Value1>
								<Operator>Equal</Operator>
								<Value2>true</Value2>
							</Condition>
							<Statement>
								<Return>
									<Type>Output</Type>
									<Value>DUT State: ProcessData</Value>
								</Return>
							</Statement>
						</Compare>
						<Compare>
							<Condition>
								<Value1>t_slaveFrame.Command</Value1>
								<Operator>Equal</Operator>
								<Value2>FailSafeData</Value2>
							</Condition>
							<Condition>
								<Value1>t_slaveFrame.ConnId</Value1>
								<Operator>Equal</Operator>
								<Value2>t_connectionId</Value2>
							</Condition>
							<Condition>
								<Value1>crcCorrect</Value1>
								<Operator>Equal</Operator>
								<Value2>true</Value2>
							</Condition>
							<Statement>
								<Return>
									<Type>Output</Type>
									<Value>DUT State: FailSafeData</Value>
								</Return>
							</Statement>
						</Compare>
						<Compare>
							<Condition>
								<Value1>t_slaveFrame.Command</Value1>
								<Operator>Equal</Operator>
								<Value2>ProcessData</Value2>
							</Condition>
							<Condition>
								<Value1>t_slaveFrame.ConnId</Value1>
								<Operator>Equal</Operator>
								<Value2>t_connectionId</Value2>
							</Condition>
							<Condition>
								<Value1>crcCorrect</Value1>
								<Operator>Equal</Operator>
								<Value2>false</Value2>
							</Condition>
							<Statement>
								<Return>
									<Type>Error</Type>
									<Value>Invalid Crc received</Value>
									<Id>4</Id>
								</Return>
							</Statement>
						</Compare>
						<Compare>
							<Condition>
								<Value1>t_slaveFrame.Command</Value1>
								<Operator>Equal</Operator>
								<Value2>ProcessData</Value2>
							</Condition>
							<Condition>
								<Value1>t_slaveFrame.ConnId</Value1>
								<Operator>NotEqual</Operator>
								<Value2>t_connectionId</Value2>
							</Condition>
							<Statement>
								<Return>
									<Type>Error</Type>
									<Value>Invalid Connection Id received</Value>
									<Id>3</Id>
								</Return>
							</Statement>
						</Compare>
						<Compare>
							<Condition>
								<Value1>t_slaveFrame.Command</Value1>
								<Operator>Equal</Operator>
								<Value2>FailSafeData</Value2>
							</Condition>
							<Condition>
								<Value1>t_slaveFrame.ConnId</Value1>
								<Operator>NotEqual</Operator>
								<Value2>t_connectionId</Value2>
							</Condition>
							<Statement>
								<Return>
									<Type>Error</Type>
									<Value>Invalid Connection Id received||Back to Reset</Value>
								</Return>
							</Statement>
						</Compare>
						<Compare>
							<Condition>
								<Value1>t_slaveFrame.Command</Value1>
								<Operator>Equal</Operator>
								<Value2>Reset</Value2>
							</Condition>
							<Statement>
								<CallFunction>GET_COMM_FAULT_REASON</CallFunction>
							</Statement>
							<Statement>
								<Return>
									<Type>Error</Type>
									<Value Param0="t_commFaultReason">Reset Cmd received , CommFaultReason: {0}</Value>
								</Return>
							</Statement>
						</Compare>
						<Compare>
							<Condition>
								<Value1>t_slaveFrame.Command</Value1>
								<Operator>Equal</Operator>
								<Value2>Session</Value2>
							</Condition>
							<Statement>
								<Return>
									<Type>Error</Type>
									<Value>Invalid Session Cmd received</Value>
								</Return>
							</Statement>
						</Compare>
						<Compare>
							<Condition>
								<Value1>t_slaveFrame.Command</Value1>
								<Operator>Equal</Operator>
								<Value2>Connection</Value2>
							</Condition>
							<Statement>
								<Return>
									<Type>Error</Type>
									<Value>Invalid Connection Cmd received</Value>
								</Return>
							</Statement>
						</Compare>
						<Compare>
							<Condition>
								<Value1>t_slaveFrame.Command</Value1>
								<Operator>Equal</Operator>
								<Value2>Parameter</Value2>
							</Condition>
							<Statement>
								<Return>
									<Type>Error</Type>
									<Value>Invalid Parameter Cmd received</Value>
								</Return>
							</Statement>
						</Compare>
						<Compare>
							<Condition>
								<Value1>t_slaveFrame.Command</Value1>
								<Operator>NotEqual</Operator>
								<Value2>Reset</Value2>
							</Condition>
							<Condition>
								<Value1>t_slaveFrame.Command</Value1>
								<Operator>NotEqual</Operator>
								<Value2>Session</Value2>
							</Condition>
							<Condition>
								<Value1>t_slaveFrame.Command</Value1>
								<Operator>NotEqual</Operator>
								<Value2>Connection</Value2>
							</Condition>
							<Condition>
								<Value1>t_slaveFrame.Command</Value1>
								<Operator>NotEqual</Operator>
								<Value2>Parameter</Value2>
							</Condition>
							<Condition>
								<Value1>t_slaveFrame.Command</Value1>
								<Operator>NotEqual</Operator>
								<Value2>ProcessData</Value2>
							</Condition>
							<Condition>
								<Value1>t_slaveFrame.Command</Value1>
								<Operator>NotEqual</Operator>
								<Value2>FailSafeData</Value2>
							</Condition>
							<Statement>
								<Return>
									<Type>Error</Type>
									<Value>Unknown CMD received</Value>
									<Id>2</Id>
								</Return>
							</Statement>
						</Compare>
						<Compare>
							<Condition>
								<Value1>1</Value1>
								<Operator>Equal</Operator>
								<Value2>1</Value2>
							</Condition>
							<Statement>
								<Return>
									<Type>Error</Type>
									<Value>General state machine error!</Value>
								</Return>
							</Statement>
						</Compare>
					</Compares>
				</TestStep>
			</TestSteps>
		</TestFunction>
		<TestFunction Name="RUN_DUT_TO_PROCESSDATA">
			<TestSteps>
				<TestStep Name="GoToParameter">
					<Action>
						<CallFunction>
							<Reference>RUN_DUT_TO_PARAMETER</Reference>
						</CallFunction>
					</Action>
				</TestStep>
				<TestStep Name="SetDataCommand">
					<Action>
						<SetVariables>
							<SetVariable>
								<Destination>DataCommand</Destination>
								<Source>ProcessData</Source>
							</SetVariable>
						</SetVariables>
					</Action>
				</TestStep>
				<TestStep Name="CallParaOk">
					<Action>
						<CallFunction>
							<Reference>PARA_OK</Reference>
						</CallFunction>
					</Action>
				</TestStep>
				<TestStep Name="ReceiveEvent">
					<Event>
						<ReceiveFrame>t_slaveFrame</ReceiveFrame>
					</Event>
					<Informations2>
						<Information>
							<Type>Verbose</Type>
							<Value Param0="t_slaveFrame.FrameData">Slave Frame: {0}</Value>
						</Information>
					</Informations2>
				</TestStep>
				<TestStep Name="CheckWatchdog">
					<Event>
						<WatchdogExpired>
							<Return>
								<Type>Error</Type>
								<Value Param0="ElapsedWD">Watchdog expired!  {0} ms</Value>
								<Id>5</Id>
							</Return>
						</WatchdogExpired>
					</Event>
				</TestStep>
				<TestStep Name="CheckReceivedCrc">
					<Informations1>
						<Information>
							<Type>Verbose</Type>
							<Value Param0="t_slaveFrame.FrameData" Param1="LastCrc" Param2="t_slaveSeqNo" Param3="t_oldSlaveCrc" Param4="true">IsCrcCorrect(Frame {0}, LastCrc 0x{1:X4}, SeqNo {2}, OldCrc 0x{3:X4}, New {4})</Value>
						</Information>
					</Informations1>
					<Action>
						<IsCrcCorrect ReturnValue="crcCorrect">
							<Frame>t_slaveFrame</Frame>
							<LastCrc>LastCrc</LastCrc>
							<SequenceNo>t_slaveSeqNo</SequenceNo>
							<OldCrc>t_oldSlaveCrc</OldCrc>
							<New>true</New>
						</IsCrcCorrect>
					</Action>
					<ReturnValue>
						<OnFailure>
							<Type>Error</Type>
							<Value Param0="t_slaveFrame.Crc0">Invalid Crc0 reveived ({0:x})</Value>
							<Id>4</Id>
						</OnFailure>
					</ReturnValue>
				</TestStep>
				<TestStep Name="CheckDataCondition">
					<Compares>
						<Compare>
							<Condition>
								<Value1>t_slaveFrame.Command</Value1>
								<Operator>Equal</Operator>
								<Value2>ProcessData</Value2>
							</Condition>
							<Condition>
								<Value1>t_slaveFrame.ConnId</Value1>
								<Operator>Equal</Operator>
								<Value2>t_connectionId</Value2>
							</Condition>
							<Condition>
								<Value1>crcCorrect</Value1>
								<Operator>Equal</Operator>
								<Value2>true</Value2>
							</Condition>
							<Statement>
								<Return>
									<Type>Output</Type>
									<Value>DUT State: ProcessData</Value>
								</Return>
							</Statement>
						</Compare>
						<Compare>
							<Condition>
								<Value1>t_slaveFrame.Command</Value1>
								<Operator>Equal</Operator>
								<Value2>FailSafeData</Value2>
							</Condition>
							<Condition>
								<Value1>t_slaveFrame.ConnId</Value1>
								<Operator>Equal</Operator>
								<Value2>t_connectionId</Value2>
							</Condition>
							<Condition>
								<Value1>crcCorrect</Value1>
								<Operator>Equal</Operator>
								<Value2>true</Value2>
							</Condition>
							<Statement>
								<Return>
									<Type>Output</Type>
									<Value>DUT State: FailSafeData</Value>
								</Return>
							</Statement>
						</Compare>
						<Compare>
							<Condition>
								<Value1>t_slaveFrame.Command</Value1>
								<Operator>Equal</Operator>
								<Value2>ProcessData</Value2>
							</Condition>
							<Condition>
								<Value1>t_slaveFrame.ConnId</Value1>
								<Operator>Equal</Operator>
								<Value2>t_connectionId</Value2>
							</Condition>
							<Condition>
								<Value1>crcCorrect</Value1>
								<Operator>Equal</Operator>
								<Value2>false</Value2>
							</Condition>
							<Statement>
								<Return>
									<Type>Error</Type>
									<Value>Invalid Crc received</Value>
									<Id>4</Id>
								</Return>
							</Statement>
						</Compare>
						<Compare>
							<Condition>
								<Value1>t_slaveFrame.Command</Value1>
								<Operator>Equal</Operator>
								<Value2>ProcessData</Value2>
							</Condition>
							<Condition>
								<Value1>t_slaveFrame.ConnId</Value1>
								<Operator>NotEqual</Operator>
								<Value2>t_connectionId</Value2>
							</Condition>
							<Statement>
								<Return>
									<Type>Error</Type>
									<Value>Invalid Connection Id received</Value>
									<Id>3</Id>
								</Return>
							</Statement>
						</Compare>
						<Compare>
							<Condition>
								<Value1>t_slaveFrame.Command</Value1>
								<Operator>Equal</Operator>
								<Value2>FailSafeData</Value2>
							</Condition>
							<Condition>
								<Value1>t_slaveFrame.ConnId</Value1>
								<Operator>NotEqual</Operator>
								<Value2>t_connectionId</Value2>
							</Condition>
							<Statement>
								<Return>
									<Type>Error</Type>
									<Value>Invalid Connection Id received||Back to Reset</Value>
								</Return>
							</Statement>
						</Compare>
						<Compare>
							<Condition>
								<Value1>t_slaveFrame.Command</Value1>
								<Operator>Equal</Operator>
								<Value2>Reset</Value2>
							</Condition>
							<Statement>
								<CallFunction>GET_COMM_FAULT_REASON</CallFunction>
							</Statement>
							<Statement>
								<Return>
									<Type>Error</Type>
									<Value Param0="t_commFaultReason">Reset Cmd received , CommFaultReason: {0}</Value>
								</Return>
							</Statement>
						</Compare>
						<Compare>
							<Condition>
								<Value1>t_slaveFrame.Command</Value1>
								<Operator>Equal</Operator>
								<Value2>Session</Value2>
							</Condition>
							<Statement>
								<Return>
									<Type>Error</Type>
									<Value>Invalid Session Cmd received</Value>
								</Return>
							</Statement>
						</Compare>
						<Compare>
							<Condition>
								<Value1>t_slaveFrame.Command</Value1>
								<Operator>Equal</Operator>
								<Value2>Connection</Value2>
							</Condition>
							<Statement>
								<Return>
									<Type>Error</Type>
									<Value>Invalid Connection Cmd received</Value>
								</Return>
							</Statement>
						</Compare>
						<Compare>
							<Condition>
								<Value1>t_slaveFrame.Command</Value1>
								<Operator>Equal</Operator>
								<Value2>Parameter</Value2>
							</Condition>
							<Statement>
								<Return>
									<Type>Error</Type>
									<Value>Invalid Parameter Cmd received</Value>
								</Return>
							</Statement>
						</Compare>
						<Compare>
							<Condition>
								<Value1>t_slaveFrame.Command</Value1>
								<Operator>NotEqual</Operator>
								<Value2>Reset</Value2>
							</Condition>
							<Condition>
								<Value1>t_slaveFrame.Command</Value1>
								<Operator>NotEqual</Operator>
								<Value2>Session</Value2>
							</Condition>
							<Condition>
								<Value1>t_slaveFrame.Command</Value1>
								<Operator>NotEqual</Operator>
								<Value2>Connection</Value2>
							</Condition>
							<Condition>
								<Value1>t_slaveFrame.Command</Value1>
								<Operator>NotEqual</Operator>
								<Value2>Parameter</Value2>
							</Condition>
							<Condition>
								<Value1>t_slaveFrame.Command</Value1>
								<Operator>NotEqual</Operator>
								<Value2>ProcessData</Value2>
							</Condition>
							<Condition>
								<Value1>t_slaveFrame.Command</Value1>
								<Operator>NotEqual</Operator>
								<Value2>FailSafeData</Value2>
							</Condition>
							<Statement>
								<Return>
									<Type>Error</Type>
									<Value>Unknown CMD received</Value>
									<Id>2</Id>
								</Return>
							</Statement>
						</Compare>
						<Compare>
							<Condition>
								<Value1>1</Value1>
								<Operator>Equal</Operator>
								<Value2>1</Value2>
							</Condition>
							<Statement>
								<Return>
									<Type>Error</Type>
									<Value>General state machine error!</Value>
								</Return>
							</Statement>
						</Compare>
					</Compares>
				</TestStep>
			</TestSteps>
		</TestFunction>
		<TestFunction Name="RUN_DUT_TO_PARAMETER">
			<TestSteps>
				<TestStep Name="GoToConnection">
					<Action>
						<CallFunction>
							<Reference>RUN_DUT_TO_CONNECTION</Reference>
						</CallFunction>
					</Action>
				</TestStep>
				<TestStep Name="CallConnectionOk">
					<Action>
						<CallFunction>
							<Reference>CONN_OK</Reference>
						</CallFunction>
					</Action>
				</TestStep>
				<TestStep Name="ReceiveEvent">
					<Event>
						<ReceiveFrame>t_slaveFrame</ReceiveFrame>
					</Event>
					<Informations2>
						<Information>
							<Type>Verbose</Type>
							<Value Param0="t_slaveFrame.FrameData">Slave Frame: {0}</Value>
						</Information>
					</Informations2>
				</TestStep>
				<TestStep Name="CheckWatchdog">
					<Event>
						<WatchdogExpired>
							<Return>
								<Type>Error</Type>
								<Value Param0="ElapsedWD">Watchdog expired!  {0} ms</Value>
								<Id>5</Id>
							</Return>
						</WatchdogExpired>
					</Event>
				</TestStep>
				<TestStep Name="CheckSafeData">
					<Action>
						<IsSafeDataCorrect ReturnValue="safeDataCorrect">
							<Frame>t_slaveFrame</Frame>
							<ExpectedData>t_safePara</ExpectedData>
							<BytesSent>SafeParaSize-BytesToBeSent</BytesSent>
						</IsSafeDataCorrect>
					</Action>
				</TestStep>
				<TestStep Name="CheckReceivedCrc">
					<Informations1>
						<Information>
							<Type>Verbose</Type>
							<Value Param0="t_slaveFrame.FrameData" Param1="LastCrc" Param2="t_slaveSeqNo" Param3="t_oldSlaveCrc" Param4="true">IsCrcCorrect(Frame {0}, LastCrc 0x{1:X4}, SeqNo {2}, OldCrc 0x{3:X4}, New {4})</Value>
						</Information>
					</Informations1>
					<Action>
						<IsCrcCorrect ReturnValue="crcCorrect">
							<Frame>t_slaveFrame</Frame>
							<LastCrc>LastCrc</LastCrc>
							<SequenceNo>t_slaveSeqNo</SequenceNo>
							<OldCrc>t_oldSlaveCrc</OldCrc>
							<New>true</New>
						</IsCrcCorrect>
					</Action>
					<ReturnValue>
						<OnFailure>
							<Type>Error</Type>
							<Value Param0="t_slaveFrame.Crc0">Invalid Crc0 reveived ({0:x})</Value>
							<Id>4</Id>
						</OnFailure>
					</ReturnValue>
				</TestStep>
				<TestStep Name="CheckParameterCondition">
					<Compares>
						<Compare>
							<Condition>
								<Value1>t_slaveFrame.Command</Value1>
								<Operator>Equal</Operator>
								<Value2>Parameter</Value2>
							</Condition>
							<Condition>
								<Value1>BytesToBeSent</Value1>
								<Operator>Equal</Operator>
								<Value2>0</Value2>
							</Condition>
							<Condition>
								<Value1>t_slaveFrame.ConnId</Value1>
								<Operator>Equal</Operator>
								<Value2>t_connectionId</Value2>
							</Condition>
							<Condition>
								<Value1>safeDataCorrect</Value1>
								<Operator>Equal</Operator>
								<Value2>true</Value2>
							</Condition>
							<Condition>
								<Value1>crcCorrect</Value1>
								<Operator>Equal</Operator>
								<Value2>true</Value2>
							</Condition>
							<Statement>
								<Return>
									<Type>Output</Type>
									<Value>DUT State: Parameter</Value>
								</Return>
							</Statement>
						</Compare>
						<Compare>
							<Condition>
								<Value1>t_slaveFrame.Command</Value1>
								<Operator>Equal</Operator>
								<Value2>Parameter</Value2>
							</Condition>
							<Condition>
								<Value1>t_slaveFrame.ConnId</Value1>
								<Operator>Equal</Operator>
								<Value2>t_connectionId</Value2>
							</Condition>
							<Condition>
								<Value1>safeDataCorrect</Value1>
								<Operator>Equal</Operator>
								<Value2>true</Value2>
							</Condition>
							<Condition>
								<Value1>crcCorrect</Value1>
								<Operator>Equal</Operator>
								<Value2>false</Value2>
							</Condition>
							<Statement>
								<Return>
									<Type>Error</Type>
									<Value>Invalid Crc received</Value>
									<Id>4</Id>
								</Return>
							</Statement>
						</Compare>
						<Compare>
							<Condition>
								<Value1>t_slaveFrame.Command</Value1>
								<Operator>Equal</Operator>
								<Value2>Parameter</Value2>
							</Condition>
							<Condition>
								<Value1>t_slaveFrame.ConnId</Value1>
								<Operator>Equal</Operator>
								<Value2>t_connectionId</Value2>
							</Condition>
							<Condition>
								<Value1>safeDataCorrect</Value1>
								<Operator>Equal</Operator>
								<Value2>false</Value2>
							</Condition>
							<Statement>
								<Return>
									<Type>Error</Type>
									<Value>Invalid SafeData received</Value>
								</Return>
							</Statement>
						</Compare>
						<Compare>
							<Condition>
								<Value1>t_slaveFrame.Command</Value1>
								<Operator>Equal</Operator>
								<Value2>Parameter</Value2>
							</Condition>
							<Condition>
								<Value1>t_slaveFrame.ConnId</Value1>
								<Operator>NotEqual</Operator>
								<Value2>t_connectionId</Value2>
							</Condition>
							<Statement>
								<Return>
									<Type>Error</Type>
									<Value>Invalid Connection Id received</Value>
									<Id>3</Id>
								</Return>
							</Statement>
						</Compare>
						<Compare>
							<Condition>
								<Value1>t_slaveFrame.Command</Value1>
								<Operator>Equal</Operator>
								<Value2>Parameter</Value2>
							</Condition>
							<Condition>
								<Value1>BytesToBeSent</Value1>
								<Operator>NotEqual</Operator>
								<Value2>0</Value2>
							</Condition>
							<Condition>
								<Value1>t_slaveFrame.ConnId</Value1>
								<Operator>Equal</Operator>
								<Value2>t_connectionId</Value2>
							</Condition>
							<Condition>
								<Value1>safeDataCorrect</Value1>
								<Operator>Equal</Operator>
								<Value2>true</Value2>
							</Condition>
							<Condition>
								<Value1>crcCorrect</Value1>
								<Operator>Equal</Operator>
								<Value2>true</Value2>
							</Condition>
							<Statement>
								<CallFunction>PARA_STAY1</CallFunction>
							</Statement>
							<Statement>
								<GotoStep>ReceiveEvent</GotoStep>
							</Statement>
						</Compare>
						<Compare>
							<Condition>
								<Value1>t_slaveFrame.Command</Value1>
								<Operator>Equal</Operator>
								<Value2>Reset</Value2>
							</Condition>
							<Statement>
								<CallFunction>GET_COMM_FAULT_REASON</CallFunction>
							</Statement>
							<Statement>
								<Return>
									<Type>Error</Type>
									<Value Param0="t_commFaultReason">Reset Cmd received , CommFaultReason: {0}</Value>
								</Return>
							</Statement>
						</Compare>
						<Compare>
							<Condition>
								<Value1>t_slaveFrame.Command</Value1>
								<Operator>Equal</Operator>
								<Value2>Session</Value2>
							</Condition>
							<Statement>
								<Return>
									<Type>Error</Type>
									<Value>Session Cmd received</Value>
								</Return>
							</Statement>
						</Compare>
						<Compare>
							<Condition>
								<Value1>t_slaveFrame.Command</Value1>
								<Operator>Equal</Operator>
								<Value2>Connection</Value2>
							</Condition>
							<Statement>
								<Return>
									<Type>Error</Type>
									<Value>Connection Cmd received</Value>
								</Return>
							</Statement>
						</Compare>
						<Compare>
							<Condition>
								<Value1>t_slaveFrame.Command</Value1>
								<Operator>Equal</Operator>
								<Value2>ProcessData</Value2>
							</Condition>
							<Statement>
								<Return>
									<Type>Error</Type>
									<Value>ProcessData Cmd received</Value>
								</Return>
							</Statement>
						</Compare>
						<Compare>
							<Condition>
								<Value1>t_slaveFrame.Command</Value1>
								<Operator>Equal</Operator>
								<Value2>FailSafeData</Value2>
							</Condition>
							<Statement>
								<Return>
									<Type>Error</Type>
									<Value>FailSafeData Cmd received</Value>
								</Return>
							</Statement>
						</Compare>
						<Compare>
							<Condition>
								<Value1>t_slaveFrame.Command</Value1>
								<Operator>NotEqual</Operator>
								<Value2>Reset</Value2>
							</Condition>
							<Condition>
								<Value1>t_slaveFrame.Command</Value1>
								<Operator>NotEqual</Operator>
								<Value2>Session</Value2>
							</Condition>
							<Condition>
								<Value1>t_slaveFrame.Command</Value1>
								<Operator>NotEqual</Operator>
								<Value2>Connection</Value2>
							</Condition>
							<Condition>
								<Value1>t_slaveFrame.Command</Value1>
								<Operator>NotEqual</Operator>
								<Value2>Parameter</Value2>
							</Condition>
							<Condition>
								<Value1>t_slaveFrame.Command</Value1>
								<Operator>NotEqual</Operator>
								<Value2>ProcessData</Value2>
							</Condition>
							<Condition>
								<Value1>t_slaveFrame.Command</Value1>
								<Operator>NotEqual</Operator>
								<Value2>FailSafeData</Value2>
							</Condition>
							<Statement>
								<Return>
									<Type>Error</Type>
									<Value>Unknown CMD received</Value>
									<Id>2</Id>
								</Return>
							</Statement>
						</Compare>
						<Compare>
							<Condition>
								<Value1>1</Value1>
								<Operator>Equal</Operator>
								<Value2>1</Value2>
							</Condition>
							<Statement>
								<Return>
									<Type>Error</Type>
									<Value>General state machine error!</Value>
								</Return>
							</Statement>
						</Compare>
					</Compares>
				</TestStep>
			</TestSteps>
		</TestFunction>
		<TestFunction Name="RUN_DUT_TO_RESET">
			<TestSteps>
				<TestStep Name="SetTempUint16">
					<Action>
						<SetVariables>
							<SetVariable>
								<Destination>t_initUInt16</Destination>
								<Source>0</Source>
							</SetVariable>
						</SetVariables>
					</Action>
				</TestStep>
				<TestStep Name="Start">
					<Action>
						<CallFunction>
							<Reference>RESET_START</Reference>
						</CallFunction>
					</Action>
				</TestStep>
				<TestStep Name="ReceiveEvent">
					<Event>
						<ReceiveFrame>t_slaveFrame</ReceiveFrame>
					</Event>
					<Informations2>
						<Information>
							<Type>Verbose</Type>
							<Value Param0="t_slaveFrame.FrameData">Slave Frame: {0}</Value>
						</Information>
					</Informations2>
				</TestStep>
				<TestStep Name="CheckWatchdog">
					<Event>
						<WatchdogExpired>
							<SetVariables>
								<SetVariable>
									<Destination>t_wdExpired</Destination>
									<Source>true</Source>
								</SetVariable>
							</SetVariables>
						</WatchdogExpired>
					</Event>
				</TestStep>
				<TestStep Name="CheckResetConditions">
					<Compares>
						<Compare>
							<Condition>
								<Value1>t_watchdogExpiredCount</Value1>
								<Operator>GreaterOrEqual</Operator>
								<Value2>10</Value2>
							</Condition>
							<Statement>
								<SetVariables>
									<SetVariable>
										<Destination>t_wdExpired</Destination>
										<Source>false</Source>
									</SetVariable>
								</SetVariables>
							</Statement>
							<Statement>
								<Return>
									<Type>Error</Type>
									<Value>Failed to reset DUT</Value>
								</Return>
							</Statement>
						</Compare>
						<Compare>
							<Condition>
								<Value1>t_wdExpired</Value1>
								<Operator>Equal</Operator>
								<Value2>true</Value2>
							</Condition>
							<Statement>
								<SetVariables>
									<SetVariable>
										<Destination>t_wdExpired</Destination>
										<Source>false</Source>
									</SetVariable>
								</SetVariables>
							</Statement>
							<Statement>
								<SetVariables>
									<SetVariable>
										<Destination>t_watchdogExpiredCount</Destination>
										<Source>t_watchdogExpiredCount+1</Source>
									</SetVariable>
								</SetVariables>
							</Statement>
							<Statement>
								<Information>
									<Type>Output</Type>
									<Value Param0="ElapsedWD">Watchdog expired!({0} ms) ==> RESET_WD</Value>
								</Information>
							</Statement>
							<Statement>
								<CallFunction>RESET_WD</CallFunction>
							</Statement>
							<Statement>
								<GotoStep>ReceiveEvent</GotoStep>
							</Statement>
						</Compare>
						<Compare>
							<Condition>
								<Value1>t_slaveFrame.Command</Value1>
								<Operator>NotEqual</Operator>
								<Value2>Reset</Value2>
							</Condition>
							<Statement>
								<CallFunction>RESET_STAY1</CallFunction>
							</Statement>
							<Statement>
								<GotoStep>ReceiveEvent</GotoStep>
							</Statement>
						</Compare>
						<Compare>
							<Condition>
								<Value1>t_slaveFrame.ConnId</Value1>
								<Operator>NotEqual</Operator>
								<Value2>t_initUInt16</Value2>
							</Condition>
							<Statement>
								<Return>
									<Type>Error</Type>
									<Value>Invalid Connection Id received</Value>
									<Id>3</Id>
								</Return>
							</Statement>
						</Compare>
						<Compare>
							<Condition>
								<Value1>t_slaveFrame.SafeData[0]</Value1>
								<Operator>NotEqual</Operator>
								<Value2>c_tmpByte</Value2>
							</Condition>
							<Statement>
								<Information>
									<Type>Output</Type>
									<Value Param0="t_slaveFrame.SafeData">Invalid Data in Reset received: {0} ==> ReceivedEvent</Value>
								</Information>
							</Statement>
							<Statement>
								<GotoStep>ReceiveEvent</GotoStep>
							</Statement>
						</Compare>
						<Compare>
							<Condition>
								<Value1>t_slaveFrame.SafeData[0]</Value1>
								<Operator>Equal</Operator>
								<Value2>c_tmpByte</Value2>
							</Condition>
							<Statement>
								<Return>
									<Type>Output</Type>
									<Value>DUT State: Reset</Value>
								</Return>
							</Statement>
						</Compare>
					</Compares>
				</TestStep>
			</TestSteps>
		</TestFunction>
		<TestFunction Name="RUN_DUT_TO_SESSION">
			<TestSteps>
				<TestStep Name="GoToReset">
					<Action>
						<CallFunction>
							<Reference>RUN_DUT_TO_RESET</Reference>
						</CallFunction>
					</Action>
				</TestStep>
				<TestStep Name="SetIndex">
					<Action>
						<SetVariables>
							<SetVariable>
								<Destination>SecondSessionFrameSent</Destination>
								<Source>false</Source>
							</SetVariable>
							<SetVariable>
								<Destination>t_index</Destination>
								<Source>0</Source>
							</SetVariable>
						</SetVariables>
					</Action>
					<Compares>
						<Compare>
							<Condition>
								<Value1>SafeDataLength</Value1>
								<Operator>NotEqual</Operator>
								<Value2>1</Value2>
							</Condition>
							<Statement>
								<SetVariables>
									<SetVariable>
										<Destination>SecondSessionFrameSent</Destination>
										<Source>true</Source>
									</SetVariable>
								</SetVariables>
							</Statement>
						</Compare>
					</Compares>
				</TestStep>
				<TestStep Name="CallResetOk">
					<Action>
						<CallFunction>
							<Reference>RESET_OK</Reference>
						</CallFunction>
					</Action>
				</TestStep>
				<TestStep Name="ReceiveEvent">
					<Event>
						<ReceiveFrame>t_slaveFrame</ReceiveFrame>
					</Event>
					<Informations2>
						<Information>
							<Type>Verbose</Type>
							<Value Param0="t_slaveFrame.FrameData">Slave Frame: {0}</Value>
						</Information>
					</Informations2>
				</TestStep>
				<TestStep Name="CheckWatchdog">
					<Event>
						<WatchdogExpired>
							<SetVariables>
								<SetVariable>
									<Destination>t_wdExpired</Destination>
									<Source>true</Source>
								</SetVariable>
							</SetVariables>
						</WatchdogExpired>
					</Event>
					<Compares>
						<Compare>
							<Condition>
								<Value1>t_wdExpired</Value1>
								<Operator>Equal</Operator>
								<Value2>true</Value2>
							</Condition>
							<Statement>
								<SetVariables>
									<SetVariable>
										<Destination>t_wdExpired</Destination>
										<Source>false</Source>
									</SetVariable>
								</SetVariables>
							</Statement>
							<Statement>
								<Return>
									<Type>Error</Type>
									<Value Param0="ElapsedWD">Watchdog expired! {0} ms </Value>
									<Id>5</Id>
								</Return>
							</Statement>
						</Compare>
					</Compares>
				</TestStep>
				<TestStep Name="CheckReceivedCrc">
					<Informations1>
						<Information>
							<Type>Verbose</Type>
							<Value Param0="t_slaveFrame.FrameData" Param1="LastCrc" Param2="t_slaveSeqNo" Param3="t_oldSlaveCrc" Param4="true">IsCrcCorrect(Frame {0}, LastCrc 0x{1:X4}, SeqNo {2}, OldCrc 0x{3:X4}, New {4})</Value>
						</Information>
					</Informations1>
					<Action>
						<IsCrcCorrect ReturnValue="crcCorrect">
							<Frame>t_slaveFrame</Frame>
							<LastCrc>LastCrc</LastCrc>
							<SequenceNo>t_slaveSeqNo</SequenceNo>
							<OldCrc>t_oldSlaveCrc</OldCrc>
							<New>true</New>
						</IsCrcCorrect>
					</Action>
					<ReturnValue>
						<OnFailure>
							<Type>Error</Type>
							<Value Param0="t_slaveFrame.Crc0">Invalid Crc0 reveived ({0:x})</Value>
							<Id>4</Id>
						</OnFailure>
					</ReturnValue>
				</TestStep>
				<TestStep Name="CheckSessionConditions">
					<Compares>
						<Compare>
							<Condition>
								<Value1>t_slaveFrame.ConnId</Value1>
								<Operator>NotEqual</Operator>
								<Value2>t_expectedConnId</Value2>
							</Condition>
							<Statement>
								<Return>
									<Type>Error</Type>
									<Value Param0="t_slaveFrame.ConnId">Invalid ConnId received  {0}, expected 0</Value>
									<Id>3</Id>
								</Return>
							</Statement>
						</Compare>
						<Compare>
							<Condition>
								<Value1>t_slaveFrame.Command</Value1>
								<Operator>Equal</Operator>
								<Value2>Session</Value2>
							</Condition>
							<Condition>
								<Value1>BytesToBeSent</Value1>
								<Operator>Equal</Operator>
								<Value2>0</Value2>
							</Condition>
							<Condition>
								<Value1>crcCorrect</Value1>
								<Operator>Equal</Operator>
								<Value2>true</Value2>
							</Condition>
							<Statement>
								<SetVariables>
									<SetVariable>
										<Destination DestinationIndex="t_index">t_slaveSessionId</Destination>
										<Source>t_slaveFrame.SafeData</Source>
									</SetVariable>
								</SetVariables>
							</Statement>
							<Statement>
								<CallFunction>CHECK_REMAINING_SAFE_DATA_IN_SESSION</CallFunction>
							</Statement>
							<Statement>
								<Return>
									<Type>Output</Type>
									<Value>DUT State: Session</Value>
								</Return>
							</Statement>
						</Compare>
						<Compare>
							<Condition>
								<Value1>t_slaveFrame.Command</Value1>
								<Operator>Equal</Operator>
								<Value2>Session</Value2>
							</Condition>
							<Condition>
								<Value1>crcCorrect</Value1>
								<Operator>Equal</Operator>
								<Value2>false</Value2>
							</Condition>
							<Condition>
								<Value1>SecondSessionFrameSent</Value1>
								<Operator>Equal</Operator>
								<Value2>true</Value2>
							</Condition>
							<Statement>
								<Return>
									<Type>Error</Type>
									<Value Param0="t_slaveSeqNo" Param1="LastCrc" Param2="t_oldSlaveCrc">Invalid Crc received: SlaveSeqNo {0}, LastCrc 0x{1:X4}, OldCrc 0x{2:X4} </Value>
									<Id>4</Id>
								</Return>
							</Statement>
						</Compare>
						<Compare>
							<Condition>
								<Value1>t_slaveFrame.Command</Value1>
								<Operator>Equal</Operator>
								<Value2>Session</Value2>
							</Condition>
							<Condition>
								<Value1>crcCorrect</Value1>
								<Operator>Equal</Operator>
								<Value2>false</Value2>
							</Condition>
							<Condition>
								<Value1>SecondSessionFrameSent</Value1>
								<Operator>Equal</Operator>
								<Value2>false</Value2>
							</Condition>
							<Statement>
								<Information>
									<Type>Output</Type>
									<Value Param0="t_slaveSeqNo" Param1="LastCrc" Param2="t_oldSlaveCrc">Invalid Crc received: SlaveSeqNo {0}, LastCrc 0x{1:X4}, OldCrc 0x{2:X4} </Value>
								</Information>
							</Statement>
							<Statement>
								<CallFunction>SESSION_STAY2</CallFunction>
							</Statement>
							<Statement>
								<GotoStep>ReceiveEvent</GotoStep>
							</Statement>
						</Compare>
						<Compare>
							<Condition>
								<Value1>t_slaveFrame.Command</Value1>
								<Operator>Equal</Operator>
								<Value2>Session</Value2>
							</Condition>
							<Condition>
								<Value1>BytesToBeSent</Value1>
								<Operator>NotEqual</Operator>
								<Value2>0</Value2>
							</Condition>
							<Condition>
								<Value1>crcCorrect</Value1>
								<Operator>Equal</Operator>
								<Value2>true</Value2>
							</Condition>
							<Statement>
								<SetVariables>
									<SetVariable>
										<Destination DestinationIndex="t_index">t_slaveSessionId</Destination>
										<Source>t_slaveFrame.SafeData</Source>
									</SetVariable>
								</SetVariables>
							</Statement>
							<Statement>
								<CallFunction>SESSION_STAY1</CallFunction>
							</Statement>
							<Statement>
								<SetVariables>
									<SetVariable>
										<Destination>t_index</Destination>
										<Source>t_index+1</Source>
									</SetVariable>
								</SetVariables>
							</Statement>
							<Statement>
								<CallFunction>CHECK_REMAINING_SAFE_DATA_IN_SESSION</CallFunction>
							</Statement>
							<Statement>
								<GotoStep>ReceiveEvent</GotoStep>
							</Statement>
						</Compare>
						<Compare>
							<Condition>
								<Value1>t_slaveFrame.Command</Value1>
								<Operator>Equal</Operator>
								<Value2>Reset</Value2>
							</Condition>
							<Statement>
								<Return>
									<Type>Error</Type>
									<Value>Invalid CMD(Reset) received</Value>
									<Id>1</Id>
								</Return>
							</Statement>
						</Compare>
						<Compare>
							<Condition>
								<Value1>t_slaveFrame.Command</Value1>
								<Operator>Equal</Operator>
								<Value2>Connection</Value2>
							</Condition>
							<Statement>
								<Return>
									<Type>Error</Type>
									<Value>Invalid CMD(Connection) received</Value>
									<Id>1</Id>
								</Return>
							</Statement>
						</Compare>
						<Compare>
							<Condition>
								<Value1>t_slaveFrame.Command</Value1>
								<Operator>Equal</Operator>
								<Value2>Parameter</Value2>
							</Condition>
							<Statement>
								<Return>
									<Type>Error</Type>
									<Value>Invalid CMD (Parameter) received</Value>
									<Id>1</Id>
								</Return>
							</Statement>
						</Compare>
						<Compare>
							<Condition>
								<Value1>t_slaveFrame.Command</Value1>
								<Operator>Equal</Operator>
								<Value2>ProcessData</Value2>
							</Condition>
							<Statement>
								<Return>
									<Type>Error</Type>
									<Value>Invalid CMD (ProcessData) received</Value>
									<Id>1</Id>
								</Return>
							</Statement>
						</Compare>
						<Compare>
							<Condition>
								<Value1>t_slaveFrame.Command</Value1>
								<Operator>Equal</Operator>
								<Value2>FailSafeData</Value2>
							</Condition>
							<Statement>
								<Return>
									<Type>Error</Type>
									<Value>Invalid CMD (FailSafeData) received</Value>
									<Id>1</Id>
								</Return>
							</Statement>
						</Compare>
						<Compare>
							<Condition>
								<Value1>t_slaveFrame.Command</Value1>
								<Operator>NotEqual</Operator>
								<Value2>Reset</Value2>
							</Condition>
							<Condition>
								<Value1>t_slaveFrame.Command</Value1>
								<Operator>NotEqual</Operator>
								<Value2>Session</Value2>
							</Condition>
							<Condition>
								<Value1>t_slaveFrame.Command</Value1>
								<Operator>NotEqual</Operator>
								<Value2>Connection</Value2>
							</Condition>
							<Condition>
								<Value1>t_slaveFrame.Command</Value1>
								<Operator>NotEqual</Operator>
								<Value2>Parameter</Value2>
							</Condition>
							<Condition>
								<Value1>t_slaveFrame.Command</Value1>
								<Operator>NotEqual</Operator>
								<Value2>ProcessData</Value2>
							</Condition>
							<Condition>
								<Value1>t_slaveFrame.Command</Value1>
								<Operator>NotEqual</Operator>
								<Value2>FailSafeData</Value2>
							</Condition>
							<Statement>
								<Return>
									<Type>Error</Type>
									<Value>Unknown CMD received</Value>
									<Id>2</Id>
								</Return>
							</Statement>
						</Compare>
					</Compares>
				</TestStep>
			</TestSteps>
		</TestFunction>
		<TestFunction Name="SEND_MASTER_FRAME">
			<TestSteps>
				<TestStep Name="SetFrame">
					<Informations1>
						<Information>
							<Type>Verbose</Type>
							<Value Param0="c_safeData" Param1="LastCrc" Param2="t_masterSeqNo" Param3="OldMasterCrc" Param4="t_connectionId" Param5="c_cmd">SetFrame(Command 0x{5:x2}, SafeData {0}, LastCrc 0x{1:x4}, ConnectionId 0x{4:x4},  SequenceNo 0x{2:x4}, OldCrc 0x{3:x4}, New true)</Value>
						</Information>
					</Informations1>
					<Action>
						<SetFrame Name="t_masterFrame">
							<Command>
								<CommandVariable>c_cmd</CommandVariable>
							</Command>
							<SafeData>
								<SafeDataVariable>c_safeData</SafeDataVariable>
							</SafeData>
							<LastCRC>LastCrc</LastCRC>
							<ConnectionID>
								<ConnectionIdVariable>t_connectionId</ConnectionIdVariable>
							</ConnectionID>
							<SequenceNo>t_masterSeqNo</SequenceNo>
							<OldCRC>OldMasterCrc</OldCRC>
							<New>true</New>
						</SetFrame>
					</Action>
					<ReturnValue>
						<OnFailure>
							<Type>Error</Type>
							<Value>Failed to set FSoE frame!</Value>
							<Id>256</Id>
						</OnFailure>
					</ReturnValue>
				</TestStep>
				<TestStep Name="SendFrame">
					<Action>
						<SendFrame Name="t_masterFrame"/>
					</Action>
					<Informations2>
						<Information>
							<Type>Verbose</Type>
							<Value Param0="t_masterFrame.FrameData">Master Frame: {0}</Value>
						</Information>
					</Informations2>
					<ReturnValue>
						<OnFailure>
							<Type>Error</Type>
							<Value>Failed to send FSoE frame!</Value>
							<Id>256</Id>
						</OnFailure>
					</ReturnValue>
				</TestStep>
				<TestStep Name="SetLastCrc">
					<Action>
						<SetVariables>
							<SetVariable>
								<Destination>LastCrc</Destination>
								<Source>t_masterFrame.Crc0</Source>
							</SetVariable>
						</SetVariables>
					</Action>
					<Informations2>
						<Information>
							<Type>Verbose</Type>
							<Value Param0="t_masterFrame.Crc0">LastCrc = 0x{0:x4}</Value>
						</Information>
					</Informations2>
				</TestStep>
				<TestStep Name="UpdateBytesToBeSend">
					<Action>
						<UpdateBytesToBeSent BytesToBeSent="BytesToBeSent">
							<BytesSent>c_bytesToBeSent</BytesSent>
						</UpdateBytesToBeSent>
					</Action>
					<Informations2>
						<Information>
							<Type>Verbose</Type>
							<Value Param0="BytesToBeSent">BytesToBeSent = {0}</Value>
						</Information>
					</Informations2>
				</TestStep>
				<TestStep Name="StartWatchdog">
					<Informations1>
						<Information>
							<Type>Verbose</Type>
							<Value Param0="t_watchdog" Param1="ElapsedWD">Watchdog = {0} ms, elapsed time: {1} ms</Value>
						</Information>
					</Informations1>
					<Action>
						<StartWd>
							<Watchdog>t_watchdog</Watchdog>
						</StartWd>
					</Action>
				</TestStep>
			</TestSteps>
		</TestFunction>
		<TestFunction Name="SESSION_FAIL1">
			<TestSteps>
				<TestStep Name="SetVars">
					<Action>
						<SetVariables>
							<SetVariable>
								<Destination>LastCrc</Destination>
								<Source>0</Source>
							</SetVariable>
							<SetVariable>
								<Destination>OldMasterCrc</Destination>
								<Source>0</Source>
							</SetVariable>
							<SetVariable>
								<Destination>t_oldSlaveCrc</Destination>
								<Source>0</Source>
							</SetVariable>
							<SetVariable>
								<Destination>t_masterSeqNo</Destination>
								<Source>1</Source>
							</SetVariable>
							<SetVariable>
								<Destination>t_slaveSeqNo</Destination>
								<Source>1</Source>
							</SetVariable>
							<SetVariable>
								<Destination>DataCommand</Destination>
								<Source>FailSafeData</Source>
							</SetVariable>
							<SetVariable>
								<Destination>CommFaultReason</Destination>
								<Source>INVALID_CRC</Source>
							</SetVariable>
						</SetVariables>
					</Action>
				</TestStep>
				<TestStep Name="SetFrame">
					<Action>
						<SetFrame Name="t_masterFrame">
							<Command>
								<CommandValue>Session</CommandValue>
							</Command>
							<SafeData>
								<SafeDataVariable>CommFaultReason</SafeDataVariable>
							</SafeData>
							<LastCRC>LastCrc</LastCRC>
							<ConnectionID>
								<UshortValue>0</UshortValue>
							</ConnectionID>
							<SequenceNo>t_masterSeqNo</SequenceNo>
							<OldCRC>OldMasterCrc</OldCRC>
							<New>false</New>
						</SetFrame>
					</Action>
				</TestStep>
				<TestStep Name="SendFrame">
					<Action>
						<SendFrame Name="t_masterFrame"/>
					</Action>
					<ReturnValue>
						<OnFailure>
							<Type>Error</Type>
							<Value>Failed to send FSoE frame!</Value>
							<Id>256</Id>
						</OnFailure>
					</ReturnValue>
				</TestStep>
				<TestStep Name="SetMasterSeqNo">
					<Action>
						<SetVariables>
							<SetVariable>
								<Destination>t_masterSeqNo</Destination>
								<Source>1</Source>
							</SetVariable>
						</SetVariables>
					</Action>
				</TestStep>
				<TestStep Name="StartWatchdog">
					<Action>
						<StartWd>
							<Watchdog>t_watchdog</Watchdog>
						</StartWd>
					</Action>
				</TestStep>
			</TestSteps>
		</TestFunction>
		<TestFunction Name="SESSION_FAIL3">
			<TestSteps>
				<TestStep Name="SetVars">
					<Action>
						<SetVariables>
							<SetVariable>
								<Destination>LastCrc</Destination>
								<Source>0</Source>
							</SetVariable>
							<SetVariable>
								<Destination>OldMasterCrc</Destination>
								<Source>0</Source>
							</SetVariable>
							<SetVariable>
								<Destination>t_oldSlaveCrc</Destination>
								<Source>0</Source>
							</SetVariable>
							<SetVariable>
								<Destination>t_masterSeqNo</Destination>
								<Source>1</Source>
							</SetVariable>
							<SetVariable>
								<Destination>t_slaveSeqNo</Destination>
								<Source>1</Source>
							</SetVariable>
							<SetVariable>
								<Destination>DataCommand</Destination>
								<Source>FailSafeData</Source>
							</SetVariable>
							<SetVariable>
								<Destination>CommFaultReason</Destination>
								<Source>INVALID_CMD</Source>
							</SetVariable>
						</SetVariables>
					</Action>
				</TestStep>
				<TestStep Name="SetFrame">
					<Action>
						<SetFrame Name="t_masterFrame">
							<Command>
								<CommandValue>Reset</CommandValue>
							</Command>
							<SafeData>
								<SafeDataVariable>CommFaultReason</SafeDataVariable>
							</SafeData>
							<LastCRC>LastCrc</LastCRC>
							<ConnectionID>
								<UshortValue>0</UshortValue>
							</ConnectionID>
							<SequenceNo>t_masterSeqNo</SequenceNo>
							<OldCRC>OldMasterCrc</OldCRC>
							<New>false</New>
						</SetFrame>
					</Action>
				</TestStep>
				<TestStep Name="SendFrame">
					<Action>
						<SendFrame Name="t_masterFrame"/>
					</Action>
					<ReturnValue>
						<OnFailure>
							<Type>Error</Type>
							<Value>Failed to send FSoE frame!</Value>
							<Id>256</Id>
						</OnFailure>
					</ReturnValue>
				</TestStep>
				<TestStep Name="SetMasterSeqNo">
					<Action>
						<SetVariables>
							<SetVariable>
								<Destination>t_masterSeqNo</Destination>
								<Source>1</Source>
							</SetVariable>
						</SetVariables>
					</Action>
				</TestStep>
				<TestStep Name="StartWatchdog">
					<Action>
						<StartWd>
							<Watchdog>t_watchdog</Watchdog>
						</StartWd>
					</Action>
				</TestStep>
			</TestSteps>
		</TestFunction>
		<TestFunction Name="SESSION_FAIL4">
			<TestSteps>
				<TestStep Name="SetVars">
					<Action>
						<SetVariables>
							<SetVariable>
								<Destination>LastCrc</Destination>
								<Source>0</Source>
							</SetVariable>
							<SetVariable>
								<Destination>OldMasterCrc</Destination>
								<Source>0</Source>
							</SetVariable>
							<SetVariable>
								<Destination>t_oldSlaveCrc</Destination>
								<Source>0</Source>
							</SetVariable>
							<SetVariable>
								<Destination>t_masterSeqNo</Destination>
								<Source>1</Source>
							</SetVariable>
							<SetVariable>
								<Destination>t_slaveSeqNo</Destination>
								<Source>1</Source>
							</SetVariable>
							<SetVariable>
								<Destination>DataCommand</Destination>
								<Source>FailSafeData</Source>
							</SetVariable>
							<SetVariable>
								<Destination>CommFaultReason</Destination>
								<Source>UNKNOWN_CMD</Source>
							</SetVariable>
						</SetVariables>
					</Action>
				</TestStep>
				<TestStep Name="SetFrame">
					<Action>
						<SetFrame Name="t_masterFrame">
							<Command>
								<CommandValue>Reset</CommandValue>
							</Command>
							<SafeData>
								<SafeDataVariable>CommFaultReason</SafeDataVariable>
							</SafeData>
							<LastCRC>LastCrc</LastCRC>
							<ConnectionID>
								<UshortValue>0</UshortValue>
							</ConnectionID>
							<SequenceNo>t_masterSeqNo</SequenceNo>
							<OldCRC>OldMasterCrc</OldCRC>
							<New>false</New>
						</SetFrame>
					</Action>
				</TestStep>
				<TestStep Name="SendFrame">
					<Action>
						<SendFrame Name="t_masterFrame"/>
					</Action>
					<ReturnValue>
						<OnFailure>
							<Type>Error</Type>
							<Value>Failed to send FSoE frame!</Value>
							<Id>256</Id>
						</OnFailure>
					</ReturnValue>
				</TestStep>
				<TestStep Name="SetMasterSeqNo">
					<Action>
						<SetVariables>
							<SetVariable>
								<Destination>t_masterSeqNo</Destination>
								<Source>1</Source>
							</SetVariable>
						</SetVariables>
					</Action>
				</TestStep>
				<TestStep Name="StartWatchdog">
					<Action>
						<StartWd>
							<Watchdog>t_watchdog</Watchdog>
						</StartWd>
					</Action>
				</TestStep>
			</TestSteps>
		</TestFunction>
		<TestFunction Name="SESSION_OK">
			<TestSteps>
				<TestStep Name="SetVars">
					<Action>
						<SetVariables>
							<SetVariable>
								<Destination>LastCrc</Destination>
								<Source>t_slaveFrame.Crc0</Source>
							</SetVariable>
						</SetVariables>
					</Action>
				</TestStep>
				<TestStep Name="SetFrame">
					<Informations1>
						<Information>
							<Type>Verbose</Type>
							<Value Param0="t_connData" Param1="LastCrc" Param2="t_masterSeqNo" Param3="OldMasterCrc" Param4="t_connectionId">SetFrame(Command Connection, SafeData {0}, LastCrc 0x{1:x4}, ConnectionId 0x{4:x4},  SequenceNo 0x{2:x4}, OldCrc 0x{3:x4}, New true)</Value>
						</Information>
					</Informations1>
					<Action>
						<SetFrame Name="t_masterFrame">
							<Command>
								<CommandValue>Connection</CommandValue>
							</Command>
							<SafeData>
								<SafeDataVariable>t_connData</SafeDataVariable>
							</SafeData>
							<LastCRC>LastCrc</LastCRC>
							<ConnectionID>
								<ConnectionIdVariable>t_connectionId</ConnectionIdVariable>
							</ConnectionID>
							<SequenceNo>t_masterSeqNo</SequenceNo>
							<OldCRC>OldMasterCrc</OldCRC>
							<New>true</New>
						</SetFrame>
					</Action>
				</TestStep>
				<TestStep Name="SendFrame">
					<Action>
						<SendFrame Name="t_masterFrame"/>
					</Action>
					<Informations2>
						<Information>
							<Type>Verbose</Type>
							<Value Param0="t_masterFrame.FrameData">Master Frame: {0}</Value>
						</Information>
					</Informations2>
					<ReturnValue>
						<OnFailure>
							<Type>Error</Type>
							<Value>Failed to send FSoE frame!</Value>
							<Id>256</Id>
						</OnFailure>
					</ReturnValue>
				</TestStep>
				<TestStep Name="SetLastCrc">
					<Action>
						<SetVariables>
							<SetVariable>
								<Destination>LastCrc</Destination>
								<Source>t_masterFrame.Crc0</Source>
							</SetVariable>
						</SetVariables>
					</Action>
					<Informations2>
						<Information>
							<Type>Verbose</Type>
							<Value Param0="t_masterFrame.Crc0">LastCrc = 0x{0:x4}</Value>
						</Information>
					</Informations2>
				</TestStep>
				<TestStep Name="UpdateBytesToBeSend">
					<Action>
						<UpdateBytesToBeSent BytesToBeSent="BytesToBeSent">
							<BytesSent>4</BytesSent>
						</UpdateBytesToBeSent>
					</Action>
					<Informations2>
						<Information>
							<Type>Verbose</Type>
							<Value Param0="BytesToBeSent">BytesToBeSent = {0}</Value>
						</Information>
					</Informations2>
				</TestStep>
				<TestStep Name="StartWatchdog">
					<Informations1>
						<Information>
							<Type>Verbose</Type>
							<Value Param0="t_watchdog" Param1="ElapsedWD">Watchdog = {0} ms, elapsed time: {1} ms</Value>
						</Information>
					</Informations1>
					<Action>
						<StartWd>
							<Watchdog>t_watchdog</Watchdog>
						</StartWd>
					</Action>
				</TestStep>
			</TestSteps>
		</TestFunction>
		<TestFunction Name="SESSION_OK_INVALID">
			<TestSteps>
				<TestStep Name="SetVars">
					<Action>
						<SetVariables>
							<SetVariable>
								<Destination>LastCrc</Destination>
								<Source>t_slaveFrame.Crc0</Source>
							</SetVariable>
						</SetVariables>
					</Action>
				</TestStep>
				<TestStep Name="SetFrame">
					<Informations1>
						<Information>
							<Type>Verbose</Type>
							<Value Param0="t_connData" Param1="LastCrc" Param2="t_masterSeqNo" Param3="OldMasterCrc" Param4="t_connectionId" Param5="c_cmd">SetFrame(Command {5}, SafeData {0}, LastCrc 0x{1:x4}, ConnectionId 0x{4:x4},  SequenceNo 0x{2:x4}, OldCrc 0x{3:x4}, New true)</Value>
						</Information>
					</Informations1>
					<Action>
						<SetFrame Name="t_masterFrame">
							<Command>
								<CommandVariable>c_cmd</CommandVariable>
							</Command>
							<SafeData>
								<SafeDataVariable>t_connData</SafeDataVariable>
							</SafeData>
							<LastCRC>LastCrc</LastCRC>
							<ConnectionID>
								<ConnectionIdVariable>t_connectionId</ConnectionIdVariable>
							</ConnectionID>
							<SequenceNo>t_masterSeqNo</SequenceNo>
							<OldCRC>OldMasterCrc</OldCRC>
							<New>true</New>
						</SetFrame>
					</Action>
				</TestStep>
				<TestStep Name="SendFrame">
					<Action>
						<SendFrame Name="t_masterFrame"/>
					</Action>
					<Informations2>
						<Information>
							<Type>Verbose</Type>
							<Value Param0="t_masterFrame.FrameData">Master Frame: {0}</Value>
						</Information>
					</Informations2>
					<ReturnValue>
						<OnFailure>
							<Type>Error</Type>
							<Value>Failed to send FSoE frame!</Value>
							<Id>256</Id>
						</OnFailure>
					</ReturnValue>
				</TestStep>
				<TestStep Name="SetLastCrc">
					<Action>
						<SetVariables>
							<SetVariable>
								<Destination>LastCrc</Destination>
								<Source>t_masterFrame.Crc0</Source>
							</SetVariable>
						</SetVariables>
					</Action>
					<Informations2>
						<Information>
							<Type>Verbose</Type>
							<Value Param0="t_masterFrame.Crc0">LastCrc = 0x{0:x4}</Value>
						</Information>
					</Informations2>
				</TestStep>
				<TestStep Name="UpdateBytesToBeSend">
					<Action>
						<UpdateBytesToBeSent BytesToBeSent="BytesToBeSent">
							<BytesSent>4</BytesSent>
						</UpdateBytesToBeSent>
					</Action>
					<Informations2>
						<Information>
							<Type>Verbose</Type>
							<Value Param0="BytesToBeSent">BytesToBeSent = {0}</Value>
						</Information>
					</Informations2>
				</TestStep>
				<TestStep Name="StartWatchdog">
					<Informations1>
						<Information>
							<Type>Verbose</Type>
							<Value Param0="t_watchdog" Param1="ElapsedWD">Watchdog = {0} ms, elapsed time: {1} ms</Value>
						</Information>
					</Informations1>
					<Action>
						<StartWd>
							<Watchdog>t_watchdog</Watchdog>
						</StartWd>
					</Action>
				</TestStep>
			</TestSteps>
		</TestFunction>
		<TestFunction Name="SESSION_RESET1">
			<TestSteps>
				<TestStep Name="SetVars">
					<Action>
						<SetVariables>
							<SetVariable>
								<Destination>LastCrc</Destination>
								<Source>0</Source>
							</SetVariable>
							<SetVariable>
								<Destination>OldMasterCrc</Destination>
								<Source>0</Source>
							</SetVariable>
							<SetVariable>
								<Destination>t_oldSlaveCrc</Destination>
								<Source>0</Source>
							</SetVariable>
							<SetVariable>
								<Destination>t_masterSeqNo</Destination>
								<Source>1</Source>
							</SetVariable>
							<SetVariable>
								<Destination>t_slaveSeqNo</Destination>
								<Source>1</Source>
							</SetVariable>
							<SetVariable>
								<Destination>DataCommand</Destination>
								<Source>FailSafeData</Source>
							</SetVariable>
							<SetVariable>
								<Destination>t_masterSessionId</Destination>
								<Source>61183</Source>
							</SetVariable>
						</SetVariables>
					</Action>
				</TestStep>
				<TestStep Name="SetFrame">
					<Action>
						<SetFrame Name="t_masterFrame">
							<Command>
								<CommandValue>Session</CommandValue>
							</Command>
							<SafeData>
								<SafeDataVariable>t_masterSessionId</SafeDataVariable>
							</SafeData>
							<LastCRC>LastCrc</LastCRC>
							<ConnectionID>
								<UshortValue>0</UshortValue>
							</ConnectionID>
							<SequenceNo>t_masterSeqNo</SequenceNo>
							<OldCRC>OldMasterCrc</OldCRC>
							<New>false</New>
						</SetFrame>
					</Action>
				</TestStep>
				<TestStep Name="SendFrame">
					<Action>
						<SendFrame Name="t_masterFrame"/>
					</Action>
					<ReturnValue>
						<OnFailure>
							<Type>Error</Type>
							<Value>Failed to send FSoE frame!</Value>
							<Id>256</Id>
						</OnFailure>
					</ReturnValue>
				</TestStep>
				<TestStep Name="SetLastCrc">
					<Action>
						<SetVariables>
							<SetVariable>
								<Destination>LastCrc</Destination>
								<Source>t_masterFrame.Crc0</Source>
							</SetVariable>
						</SetVariables>
					</Action>
				</TestStep>
				<TestStep Name="UpdateBytesToBeSend">
					<Action>
						<UpdateBytesToBeSent BytesToBeSent="BytesToBeSent">
							<BytesSent>2</BytesSent>
						</UpdateBytesToBeSent>
					</Action>
				</TestStep>
				<TestStep Name="StartWatchdog">
					<Action>
						<StartWd>
							<Watchdog>t_watchdog</Watchdog>
						</StartWd>
					</Action>
				</TestStep>
			</TestSteps>
		</TestFunction>
		<TestFunction Name="SESSION_STAY1">
			<TestSteps>
				<TestStep Name="SetVars">
					<Action>
						<SetVariables>
							<SetVariable>
								<Destination>LastCrc</Destination>
								<Source>t_slaveFrame.Crc0</Source>
							</SetVariable>
						</SetVariables>
					</Action>
					<ReturnValue>
						<OnFailure>
							<Type>Error</Type>
							<Value>Failed to set LastCrc</Value>
						</OnFailure>
					</ReturnValue>
				</TestStep>
				<TestStep Name="SetFrame">
					<Informations1>
						<Information>
							<Type>Verbose</Type>
							<Value Param0="t_masterSessionId[2-BytesToBeSent]" Param1="LastCrc" Param2="t_masterSeqNo" Param3="OldMasterCrc" Param4="true">SetFrame(Command Session, SafeData {0}, LastCrc 0x{1:x4}, ConnectionId 0,  SequenceNo 0x{2:x4}, OldCrc 0x{3:x4}, New {4})</Value>
						</Information>
					</Informations1>
					<Action>
						<SetFrame Name="t_masterFrame">
							<Command>
								<CommandValue>Session</CommandValue>
							</Command>
							<SafeData>
								<SafeDataVariable>t_masterSessionId[2-BytesToBeSent]</SafeDataVariable>
							</SafeData>
							<LastCRC>LastCrc</LastCRC>
							<ConnectionID>
								<UshortValue>0</UshortValue>
							</ConnectionID>
							<SequenceNo>t_masterSeqNo</SequenceNo>
							<OldCRC>OldMasterCrc</OldCRC>
							<New>true</New>
						</SetFrame>
					</Action>
					<ReturnValue>
						<OnFailure>
							<Type>Error</Type>
							<Value>Failed to set FSoE frame!</Value>
							<Id>256</Id>
						</OnFailure>
					</ReturnValue>
				</TestStep>
				<TestStep Name="SendFrame">
					<Action>
						<SendFrame Name="t_masterFrame"/>
					</Action>
					<Informations2>
						<Information>
							<Type>Verbose</Type>
							<Value Param0="t_masterFrame.FrameData">Master Frame: {0}</Value>
						</Information>
					</Informations2>
					<ReturnValue>
						<OnFailure>
							<Type>Error</Type>
							<Value>Failed to send FSoE frame!</Value>
							<Id>256</Id>
						</OnFailure>
					</ReturnValue>
				</TestStep>
				<TestStep Name="SetLastCrc">
					<Action>
						<SetVariables>
							<SetVariable>
								<Destination>LastCrc</Destination>
								<Source>t_masterFrame.Crc0</Source>
							</SetVariable>
						</SetVariables>
					</Action>
					<Informations2>
						<Information>
							<Type>Verbose</Type>
							<Value Param0="t_masterFrame.Crc0">LastCrc = 0x{0:x4}</Value>
						</Information>
					</Informations2>
					<ReturnValue>
						<OnFailure>
							<Type>Error</Type>
							<Value>Failed to set LastCrc</Value>
						</OnFailure>
					</ReturnValue>
				</TestStep>
				<TestStep Name="UpdateBytesToBeSend">
					<Action>
						<UpdateBytesToBeSent BytesToBeSent="BytesToBeSent">
							<BytesSent>BytesToBeSent</BytesSent>
						</UpdateBytesToBeSent>
					</Action>
					<Informations2>
						<Information>
							<Type>Verbose</Type>
							<Value Param0="BytesToBeSent">BytesToBeSent = {0}</Value>
						</Information>
					</Informations2>
					<ReturnValue>
						<OnFailure>
							<Type>Error</Type>
							<Value>Failed to update bytes to be send</Value>
						</OnFailure>
					</ReturnValue>
				</TestStep>
				<TestStep Name="SetSecondFrameSent">
					<Action>
						<SetVariables>
							<SetVariable>
								<Destination>SecondSessionFrameSent</Destination>
								<Source>true</Source>
							</SetVariable>
						</SetVariables>
					</Action>
					<Informations2>
						<Information>
							<Type>Verbose</Type>
							<Value Param0="SecondSessionFrameSent">SecondSessionFrameSent = {0}</Value>
						</Information>
					</Informations2>
				</TestStep>
				<TestStep Name="StartWatchdog">
					<Informations1>
						<Information>
							<Type>Verbose</Type>
							<Value Param0="t_watchdog" Param1="ElapsedWD">SESSION_STAY1 StartWatchdog(Watchdog = {0} ms) elapsed time: {1} ms</Value>
						</Information>
					</Informations1>
					<Action>
						<StartWd>
							<Watchdog>t_watchdog</Watchdog>
						</StartWd>
					</Action>
					<ReturnValue>
						<OnFailure>
							<Type>Error</Type>
							<Value>Failed to start the watchdog</Value>
						</OnFailure>
					</ReturnValue>
				</TestStep>
			</TestSteps>
		</TestFunction>
		<TestFunction Name="SESSION_STAY2">
			<TestSteps>
				<TestStep Name="StartWatchdog">
					<Informations1>
						<Information>
							<Type>Verbose</Type>
							<Value Param0="t_watchdog" Param1="ElapsedWD">SESSION_STAY2 StartWatchdog(Watchdog = {0} ms) elapsed time: {1} ms</Value>
						</Information>
					</Informations1>
					<Action>
						<StartWd>
							<Watchdog>t_watchdog</Watchdog>
						</StartWd>
					</Action>
					<ReturnValue>
						<OnFailure>
							<Type>Error</Type>
							<Value>Failed to start the watchdog</Value>
						</OnFailure>
					</ReturnValue>
				</TestStep>
			</TestSteps>
		</TestFunction>
		<TestFunction Name="SESSION_STAY1_INCREMENTED_CRC0">
			<TestSteps>
				<TestStep Name="SetVars">
					<Action>
						<SetVariables>
							<SetVariable>
								<Destination>LastCrc</Destination>
								<Source>t_slaveFrame.Crc0</Source>
							</SetVariable>
						</SetVariables>
					</Action>
					<ReturnValue>
						<OnFailure>
							<Type>Error</Type>
							<Value>Failed to set LastCrc</Value>
						</OnFailure>
					</ReturnValue>
				</TestStep>
				<TestStep Name="SetFrame">
					<Informations1>
						<Information>
							<Type>Verbose</Type>
							<Value Param0="t_masterSessionId[2-BytesToBeSent]" Param1="LastCrc" Param2="t_masterSeqNo" Param3="OldMasterCrc" Param4="false">SetFrame(Command Session, SafeData {0}, LastCrc 0x{1:x4}, ConnectionId 0,  SequenceNo 0x{2:x4}, OldCrc 0x{3:x4}, New {4})</Value>
						</Information>
					</Informations1>
					<Action>
						<SetFrame Name="t_masterFrame">
							<Command>
								<CommandValue>Session</CommandValue>
							</Command>
							<SafeData>
								<SafeDataVariable>t_masterSessionId[2-BytesToBeSent]</SafeDataVariable>
							</SafeData>
							<LastCRC>LastCrc</LastCRC>
							<ConnectionID>
								<UshortValue>0</UshortValue>
							</ConnectionID>
							<SequenceNo>t_masterSeqNo</SequenceNo>
							<OldCRC>OldMasterCrc</OldCRC>
							<New>true</New>
						</SetFrame>
					</Action>
					<ReturnValue>
						<OnFailure>
							<Type>Error</Type>
							<Value>Failed to set FSoE frame!</Value>
							<Id>256</Id>
						</OnFailure>
					</ReturnValue>
				</TestStep>
				<TestStep Name="SetInvalidCrc0">
					<Informations1>
						<Information>
							<Type>Output</Type>
							<Value Param0="t_masterFrame.Crc0">Valid Crc0 = 0x{0:x4}</Value>
						</Information>
					</Informations1>
					<Action>
						<CallFunction>
							<Reference>INCREMENT_CRC_0</Reference>
						</CallFunction>
					</Action>
					<Informations2>
						<Information>
							<Type>Output</Type>
							<Value Param0="t_masterFrame.Crc0">Falsified Crc0 = 0x{0:x4}</Value>
						</Information>
					</Informations2>
				</TestStep>
				<TestStep Name="SendFrame">
					<Action>
						<SendFrame Name="t_masterFrame"/>
					</Action>
					<Informations2>
						<Information>
							<Type>Verbose</Type>
							<Value Param0="t_masterFrame.FrameData">Master Frame: {0}</Value>
						</Information>
					</Informations2>
					<ReturnValue>
						<OnFailure>
							<Type>Error</Type>
							<Value>Failed to send FSoE frame!</Value>
							<Id>256</Id>
						</OnFailure>
					</ReturnValue>
				</TestStep>
				<TestStep Name="SetLastCrc">
					<Action>
						<SetVariables>
							<SetVariable>
								<Destination>LastCrc</Destination>
								<Source>t_masterFrame.Crc0</Source>
							</SetVariable>
						</SetVariables>
					</Action>
					<Informations2>
						<Information>
							<Type>Verbose</Type>
							<Value Param0="t_masterFrame.Crc0">LastCrc = 0x{0:x4}</Value>
						</Information>
					</Informations2>
					<ReturnValue>
						<OnFailure>
							<Type>Error</Type>
							<Value>Failed to set LastCrc</Value>
						</OnFailure>
					</ReturnValue>
				</TestStep>
				<TestStep Name="UpdateBytesToBeSend">
					<Action>
						<UpdateBytesToBeSent BytesToBeSent="BytesToBeSent">
							<BytesSent>BytesToBeSent</BytesSent>
						</UpdateBytesToBeSent>
					</Action>
					<Informations2>
						<Information>
							<Type>Verbose</Type>
							<Value Param0="BytesToBeSent">BytesToBeSent = {0}</Value>
						</Information>
					</Informations2>
					<ReturnValue>
						<OnFailure>
							<Type>Error</Type>
							<Value>Failed to update bytes to be send</Value>
						</OnFailure>
					</ReturnValue>
				</TestStep>
				<TestStep Name="SetSecondFrameSent">
					<Action>
						<SetVariables>
							<SetVariable>
								<Destination>SecondSessionFrameSent</Destination>
								<Source>true</Source>
							</SetVariable>
						</SetVariables>
					</Action>
					<Informations2>
						<Information>
							<Type>Verbose</Type>
							<Value Param0="SecondSessionFrameSent">SecondSessionFrameSent = {0}</Value>
						</Information>
					</Informations2>
				</TestStep>
				<TestStep Name="StartWatchdog">
					<Informations1>
						<Information>
							<Type>Verbose</Type>
							<Value Param0="t_watchdog" Param1="ElapsedWD">Watchdog = {0} ms, elapsed time: {1} ms</Value>
						</Information>
					</Informations1>
					<Action>
						<StartWd>
							<Watchdog>t_watchdog</Watchdog>
						</StartWd>
					</Action>
					<ReturnValue>
						<OnFailure>
							<Type>Error</Type>
							<Value>Failed to start the watchdog</Value>
						</OnFailure>
					</ReturnValue>
				</TestStep>
			</TestSteps>
		</TestFunction>
		<TestFunction Name="SESSION_STAY1_DECREMENTED_CRC0">
			<TestSteps>
				<TestStep Name="SetVars">
					<Action>
						<SetVariables>
							<SetVariable>
								<Destination>LastCrc</Destination>
								<Source>t_slaveFrame.Crc0</Source>
							</SetVariable>
						</SetVariables>
					</Action>
					<ReturnValue>
						<OnFailure>
							<Type>Error</Type>
							<Value>Failed to set LastCrc</Value>
						</OnFailure>
					</ReturnValue>
				</TestStep>
				<TestStep Name="SetFrame">
					<Informations1>
						<Information>
							<Type>Verbose</Type>
							<Value Param0="t_masterSessionId[2-BytesToBeSent]" Param1="LastCrc" Param2="t_masterSeqNo" Param3="OldMasterCrc" Param4="false">SetFrame(Command Session, SafeData {0}, LastCrc 0x{1:x4}, ConnectionId 0,  SequenceNo 0x{2:x4}, OldCrc 0x{3:x4}, New {4})</Value>
						</Information>
					</Informations1>
					<Action>
						<SetFrame Name="t_masterFrame">
							<Command>
								<CommandValue>Session</CommandValue>
							</Command>
							<SafeData>
								<SafeDataVariable>t_masterSessionId[2-BytesToBeSent]</SafeDataVariable>
							</SafeData>
							<LastCRC>LastCrc</LastCRC>
							<ConnectionID>
								<UshortValue>0</UshortValue>
							</ConnectionID>
							<SequenceNo>t_masterSeqNo</SequenceNo>
							<OldCRC>OldMasterCrc</OldCRC>
							<New>true</New>
						</SetFrame>
					</Action>
					<ReturnValue>
						<OnFailure>
							<Type>Error</Type>
							<Value>Failed to set FSoE frame!</Value>
							<Id>256</Id>
						</OnFailure>
					</ReturnValue>
				</TestStep>
				<TestStep Name="SetInvalidCrc0">
					<Informations1>
						<Information>
							<Type>Output</Type>
							<Value Param0="t_masterFrame.Crc0">Valid Crc0 = 0x{0:x4}</Value>
						</Information>
					</Informations1>
					<Action>
						<CallFunction>
							<Reference>DECREMENT_CRC_0</Reference>
						</CallFunction>
					</Action>
					<Informations2>
						<Information>
							<Type>Output</Type>
							<Value Param0="t_masterFrame.Crc0">Falsified Crc0 = 0x{0:x4}</Value>
						</Information>
					</Informations2>
				</TestStep>
				<TestStep Name="SendFrame">
					<Action>
						<SendFrame Name="t_masterFrame"/>
					</Action>
					<Informations2>
						<Information>
							<Type>Verbose</Type>
							<Value Param0="t_masterFrame.FrameData">Master Frame: {0}</Value>
						</Information>
					</Informations2>
					<ReturnValue>
						<OnFailure>
							<Type>Error</Type>
							<Value>Failed to send FSoE frame!</Value>
							<Id>256</Id>
						</OnFailure>
					</ReturnValue>
				</TestStep>
				<TestStep Name="SetLastCrc">
					<Action>
						<SetVariables>
							<SetVariable>
								<Destination>LastCrc</Destination>
								<Source>t_masterFrame.Crc0</Source>
							</SetVariable>
						</SetVariables>
					</Action>
					<Informations2>
						<Information>
							<Type>Verbose</Type>
							<Value Param0="t_masterFrame.Crc0">LastCrc = 0x{0:x4}</Value>
						</Information>
					</Informations2>
					<ReturnValue>
						<OnFailure>
							<Type>Error</Type>
							<Value>Failed to set LastCrc</Value>
						</OnFailure>
					</ReturnValue>
				</TestStep>
				<TestStep Name="UpdateBytesToBeSend">
					<Action>
						<UpdateBytesToBeSent BytesToBeSent="BytesToBeSent">
							<BytesSent>BytesToBeSent</BytesSent>
						</UpdateBytesToBeSent>
					</Action>
					<Informations2>
						<Information>
							<Type>Verbose</Type>
							<Value Param0="BytesToBeSent">BytesToBeSent = {0}</Value>
						</Information>
					</Informations2>
					<ReturnValue>
						<OnFailure>
							<Type>Error</Type>
							<Value>Failed to update bytes to be send</Value>
						</OnFailure>
					</ReturnValue>
				</TestStep>
				<TestStep Name="SetSecondFrameSent">
					<Action>
						<SetVariables>
							<SetVariable>
								<Destination>SecondSessionFrameSent</Destination>
								<Source>true</Source>
							</SetVariable>
						</SetVariables>
					</Action>
					<Informations2>
						<Information>
							<Type>Verbose</Type>
							<Value Param0="SecondSessionFrameSent">SecondSessionFrameSent = {0}</Value>
						</Information>
					</Informations2>
				</TestStep>
				<TestStep Name="StartWatchdog">
					<Informations1>
						<Information>
							<Type>Verbose</Type>
							<Value Param0="t_watchdog" Param1="ElapsedWD">Watchdog = {0} ms, elapsed time: {1} ms</Value>
						</Information>
					</Informations1>
					<Action>
						<StartWd>
							<Watchdog>t_watchdog</Watchdog>
						</StartWd>
					</Action>
					<ReturnValue>
						<OnFailure>
							<Type>Error</Type>
							<Value>Failed to start the watchdog</Value>
						</OnFailure>
					</ReturnValue>
				</TestStep>
			</TestSteps>
		</TestFunction>
		<TestFunction Name="SESSION_WD">
			<TestSteps>
				<TestStep Name="SetVars">
					<Action>
						<SetVariables>
							<SetVariable>
								<Destination>LastCrc</Destination>
								<Source>0</Source>
							</SetVariable>
							<SetVariable>
								<Destination>OldMasterCrc</Destination>
								<Source>0</Source>
							</SetVariable>
							<SetVariable>
								<Destination>t_oldSlaveCrc</Destination>
								<Source>0</Source>
							</SetVariable>
							<SetVariable>
								<Destination>t_masterSeqNo</Destination>
								<Source>1</Source>
							</SetVariable>
							<SetVariable>
								<Destination>t_slaveSeqNo</Destination>
								<Source>1</Source>
							</SetVariable>
							<SetVariable>
								<Destination>DataCommand</Destination>
								<Source>FailSafeData</Source>
							</SetVariable>
							<SetVariable>
								<Destination>commFaultReason</Destination>
								<Source>WD_EXPIRED</Source>
							</SetVariable>
						</SetVariables>
					</Action>
				</TestStep>
				<TestStep Name="SetFrame">
					<Action>
						<SetFrame Name="t_masterFrame">
							<Command>
								<CommandValue>Reset</CommandValue>
							</Command>
							<SafeData>
								<SafeDataVariable>commFaultReason</SafeDataVariable>
							</SafeData>
							<LastCRC>LastCrc</LastCRC>
							<ConnectionID>
								<UshortValue>0</UshortValue>
							</ConnectionID>
							<SequenceNo>t_masterSeqNo</SequenceNo>
							<OldCRC>OldMasterCrc</OldCRC>
							<New>false</New>
						</SetFrame>
					</Action>
				</TestStep>
				<TestStep Name="SendFrame">
					<Action>
						<SendFrame Name="t_masterFrame"/>
					</Action>
					<ReturnValue>
						<OnFailure>
							<Type>Error</Type>
							<Value>Failed to send FSoE frame!</Value>
							<Id>256</Id>
						</OnFailure>
					</ReturnValue>
				</TestStep>
				<TestStep Name="SetMasterSeqNo">
					<Action>
						<SetVariables>
							<SetVariable>
								<Destination>t_masterSeqNo</Destination>
								<Source>1</Source>
							</SetVariable>
						</SetVariables>
					</Action>
				</TestStep>
				<TestStep Name="StartWatchdog">
					<Action>
						<StartWd>
							<Watchdog>t_watchdog</Watchdog>
						</StartWd>
					</Action>
				</TestStep>
			</TestSteps>
		</TestFunction>
		<TestFunction Name="INCREMENT_CRC_0">
			<TestSteps>
				<TestStep Name="SetLowerMaxValue">
					<Action>
						<SetVariables>
							<SetVariable>
								<Destination>t_maxUInt16</Destination>
								<Source>65535</Source>
							</SetVariable>
						</SetVariables>
					</Action>
					<Compares>
						<Compare>
							<Condition>
								<Value1>t_masterFrame.Crc0</Value1>
								<Operator>Lower</Operator>
								<Value2>t_maxUInt16</Value2>
							</Condition>
							<Statement>
								<SetVariables>
									<SetVariable>
										<Destination>t_masterFrame.Crc0</Destination>
										<Source>t_masterFrame.Crc0+1</Source>
									</SetVariable>
								</SetVariables>
							</Statement>
						</Compare>
						<Compare>
							<Condition>
								<Value1>t_masterFrame.Crc0</Value1>
								<Operator>Equal</Operator>
								<Value2>t_maxUInt16</Value2>
							</Condition>
							<Statement>
								<SetVariables>
									<SetVariable>
										<Destination>t_masterFrame.Crc0</Destination>
										<Source>0</Source>
									</SetVariable>
								</SetVariables>
							</Statement>
						</Compare>
					</Compares>
				</TestStep>
			</TestSteps>
		</TestFunction>
		<TestFunction Name="DECREMENT_CRC_0">
			<TestSteps>
				<TestStep Name="SetGreaterMinValue">
					<Action>
						<SetVariables>
							<SetVariable>
								<Destination>t_minUInt16</Destination>
								<Source>0</Source>
							</SetVariable>
						</SetVariables>
					</Action>
					<Compares>
						<Compare>
							<Condition>
								<Value1>t_masterFrame.Crc0</Value1>
								<Operator>Greater</Operator>
								<Value2>t_minUInt16</Value2>
							</Condition>
							<Statement>
								<SetVariables>
									<SetVariable>
										<Destination>t_masterFrame.Crc0</Destination>
										<Source>t_masterFrame.Crc0-1</Source>
									</SetVariable>
								</SetVariables>
							</Statement>
						</Compare>
						<Compare>
							<Condition>
								<Value1>t_masterFrame.Crc0</Value1>
								<Operator>Equal</Operator>
								<Value2>t_minUInt16</Value2>
							</Condition>
							<Statement>
								<SetVariables>
									<SetVariable>
										<Destination>t_masterFrame.Crc0</Destination>
										<Source>65535</Source>
									</SetVariable>
								</SetVariables>
							</Statement>
						</Compare>
					</Compares>
				</TestStep>
			</TestSteps>
		</TestFunction>
		<TestFunction Name="INCREMENT_CRC_N">
			<TestSteps>
				<TestStep Name="SetLowerMaxValue">
					<Action>
						<SetVariables>
							<SetVariable>
								<Destination>t_maxUInt16</Destination>
								<Source>65535</Source>
							</SetVariable>
							<SetVariable>
								<Destination>c_tmpCrcn</Destination>
								<Source SourceIndex="c_crcIndex">t_masterFrame.Crcs</Source>
							</SetVariable>
						</SetVariables>
					</Action>
					<Compares>
						<Compare>
							<Condition>
								<Value1>c_tmpCrcn</Value1>
								<Operator>Lower</Operator>
								<Value2>t_maxUInt16</Value2>
							</Condition>
							<Statement>
								<SetVariables>
									<SetVariable>
										<Destination DestinationIndex="c_crcIndex">t_masterFrame.Crcs</Destination>
										<Source>c_tmpCrcn+1</Source>
									</SetVariable>
								</SetVariables>
							</Statement>
						</Compare>
						<Compare>
							<Condition>
								<Value1>c_tmpCrcn</Value1>
								<Operator>Equal</Operator>
								<Value2>t_maxUInt16</Value2>
							</Condition>
							<Statement>
								<SetVariables>
									<SetVariable>
										<Destination DestinationIndex="c_crcIndex">t_masterFrame.Crcs</Destination>
										<Source>0</Source>
									</SetVariable>
								</SetVariables>
							</Statement>
						</Compare>
					</Compares>
				</TestStep>
			</TestSteps>
		</TestFunction>
		<TestFunction Name="DECREMENT_CRC_N">
			<TestSteps>
				<TestStep Name="SetGreaterMinValue">
					<Action>
						<SetVariables>
							<SetVariable>
								<Destination>t_minUInt16</Destination>
								<Source>0</Source>
							</SetVariable>
							<SetVariable>
								<Destination>c_tmpCrcn</Destination>
								<Source SourceIndex="c_crcIndex">t_masterFrame.Crcs</Source>
							</SetVariable>
						</SetVariables>
					</Action>
					<Compares>
						<Compare>
							<Condition>
								<Value1>c_tmpCrcn</Value1>
								<Operator>Greater</Operator>
								<Value2>t_minUInt16</Value2>
							</Condition>
							<Statement>
								<SetVariables>
									<SetVariable>
										<Destination DestinationIndex="c_crcIndex">t_masterFrame.Crcs</Destination>
										<Source>c_tmpCrcn-1</Source>
									</SetVariable>
								</SetVariables>
							</Statement>
						</Compare>
						<Compare>
							<Condition>
								<Value1>c_tmpCrcn</Value1>
								<Operator>Equal</Operator>
								<Value2>t_minUInt16</Value2>
							</Condition>
							<Statement>
								<SetVariables>
									<SetVariable>
										<Destination DestinationIndex="c_crcIndex">t_masterFrame.Crcs</Destination>
										<Source>65535</Source>
									</SetVariable>
								</SetVariables>
							</Statement>
						</Compare>
					</Compares>
				</TestStep>
			</TestSteps>
		</TestFunction>
	</TestFunctions>
	<TestGroups>
		<TestGroup Name="#1 Reset State" GroupId="1">
			<Comment>Tests the RESET state and its transitions. Therefore all transitions in RESET are triggered with  different parameters by the FSoE Test Master.</Comment>
			<TestCases>
				<TestCase Name="#1.1 RESET_OK" CaseId="1">
					<Description>
						<Purpose>DuT shall execute RESET_OK transition to SESSION with SessionId Master = 1</Purpose>
						<PreCondition>-DuT is in RESET</PreCondition>
						<Action>-FSoE Master runs the DuT to SESSION</Action>
						<PostCondition>-DuT shall reach Session state with a new SessionId
-Possible unused data of the slave frame shall be 0 </PostCondition>
						<ProposalForSolution>-Check the implementation of the RESET_OK and SESSION_STAY1</ProposalForSolution>
						<References>
							<Reference Chapter="Slave state machine RESET_OK" Specification="ETG5100"/>
							<Reference Chapter="FSoE Slave Test Case 1.1" Specification="ETG7100"/>
						</References>
						<Mandatory>true</Mandatory>
					</Description>
					<CaseVariables>
						<Variable>
							<Name>c_tmpByte</Name>
							<Type>Byte</Type>
						</Variable>
					</CaseVariables>
					<TestSteps>
						<TestStep Name="SetWD">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>t_watchdog</Destination>
										<Source>SafePara.Watchdog</Source>
									</SetVariable>
								</SetVariables>
							</Action>
						</TestStep>
						<TestStep Name="ResetDevice">
							<Action>
								<CallFunction>
									<Reference>RUN_DUT_TO_RESET</Reference>
								</CallFunction>
							</Action>
						</TestStep>
						<TestStep Name="SetSessionId">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>t_masterSessionId</Destination>
										<Source>1</Source>
									</SetVariable>
								</SetVariables>
							</Action>
							<Informations2>
								<Information>
									<Type>Output</Type>
									<Value Param0="t_masterSessionId">Master SessionId = {0} (0x{0:x4})</Value>
								</Information>
							</Informations2>
						</TestStep>
						<TestStep Name="GoToSession">
							<Action>
								<CallFunction>
									<Reference>Reset_OK</Reference>
								</CallFunction>
							</Action>
							<ReturnValue>
								<OnSuccess>
									<Type>Success</Type>
									<Value Param0="t_masterSessionId">Transition to Session succeeded (Master SessionId {0} (0x{0:x4}))</Value>
								</OnSuccess>
							</ReturnValue>
						</TestStep>
					</TestSteps>
				</TestCase>
				<TestCase Name="#1.2 RESET_OK" CaseId="2">
					<Description>
						<Purpose>DuT shall execute RESET_OK transition to SESSION with SessionId Master = 0</Purpose>
						<PreCondition>-DuT is in RESET</PreCondition>
						<Action>-FSoE Master runs the DuT to SESSION</Action>
						<PostCondition>-DuT shall reach Session state with a new SessionId
-Possible unused data of the slave frame shall be 0 </PostCondition>
						<ProposalForSolution>-Check the implementation of the RESET_OK and SESSION_STAY1</ProposalForSolution>
						<References>
							<Reference Chapter="Slave state machine RESET_OK" Specification="ETG5100"/>
							<Reference Chapter="FSoE Slave Test Case 1.2" Specification="ETG7100"/>
						</References>
						<Mandatory>true</Mandatory>
					</Description>
					<CaseVariables>
						<Variable>
							<Name>c_tmpByte</Name>
							<Type>Byte</Type>
						</Variable>
					</CaseVariables>
					<TestSteps>
						<TestStep Name="SetVars">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>t_watchdog</Destination>
										<Source>SafePara.Watchdog</Source>
									</SetVariable>
								</SetVariables>
							</Action>
						</TestStep>
						<TestStep Name="ResetDevice">
							<Action>
								<CallFunction>
									<Reference>RUN_DUT_TO_RESET</Reference>
								</CallFunction>
							</Action>
						</TestStep>
						<TestStep Name="SetSessionId">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>t_masterSessionId</Destination>
										<Source>0</Source>
									</SetVariable>
								</SetVariables>
							</Action>
							<Informations2>
								<Information>
									<Type>Output</Type>
									<Value Param0="t_masterSessionId">Master SessionId = {0} (0x{0:x4})</Value>
								</Information>
							</Informations2>
						</TestStep>
						<TestStep Name="GoToSession">
							<Action>
								<CallFunction>
									<Reference>Reset_OK</Reference>
								</CallFunction>
							</Action>
							<ReturnValue>
								<OnSuccess>
									<Type>Success</Type>
									<Value Param0="t_masterSessionId">Transition to Session succeeded (Master SessionId {0} (0x{0:x4}))</Value>
								</OnSuccess>
							</ReturnValue>
						</TestStep>
					</TestSteps>
				</TestCase>
				<TestCase Name="#1.3 RESET_OK" CaseId="3">
					<Description>
						<Purpose>DuT shall execute RESET_OK transition to SESSION with SessionId Master = 0xffff</Purpose>
						<PreCondition>-DuT is in RESET</PreCondition>
						<Action>-FSoE Master runs the DuT to SESSION</Action>
						<PostCondition>-DuT shall reach Session state with a new SessionId
-Possible unused data of the slave frame shall be 0</PostCondition>
						<ProposalForSolution>-Check the implementation of the RESET_OK and SESSION_STAY1</ProposalForSolution>
						<References>
							<Reference Chapter="Slave state machine RESET_OK" Specification="ETG5100"/>
							<Reference Chapter="FSoE Slave Test Case 1.3" Specification="ETG7100"/>
						</References>
						<Mandatory>true</Mandatory>
					</Description>
					<CaseVariables>
						<Variable>
							<Name>c_tmpByte</Name>
							<Type>Byte</Type>
						</Variable>
					</CaseVariables>
					<TestSteps>
						<TestStep Name="SetWD">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>t_watchdog</Destination>
										<Source>SafePara.Watchdog</Source>
									</SetVariable>
								</SetVariables>
							</Action>
						</TestStep>
						<TestStep Name="ResetDevice">
							<Action>
								<CallFunction>
									<Reference>RUN_DUT_TO_RESET</Reference>
								</CallFunction>
							</Action>
						</TestStep>
						<TestStep Name="SetSessionId">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>t_masterSessionId</Destination>
										<Source>65535</Source>
									</SetVariable>
								</SetVariables>
							</Action>
							<Informations2>
								<Information>
									<Type>Output</Type>
									<Value Param0="t_masterSessionId">Master SessionId = {0} (0x{0:x4})</Value>
								</Information>
							</Informations2>
						</TestStep>
						<TestStep Name="GoToSession">
							<Action>
								<CallFunction>
									<Reference>Reset_OK</Reference>
								</CallFunction>
							</Action>
							<ReturnValue>
								<OnSuccess>
									<Type>Success</Type>
									<Value Param0="t_masterSessionId">Transition to Session succeeded (Master SessionId {0} (0x{0:x4}))</Value>
								</OnSuccess>
							</ReturnValue>
						</TestStep>
					</TestSteps>
				</TestCase>
				<TestCase Name="#1.4 RESET_OK" CaseId="4">
					<Description>
						<Purpose>The DuT shall generate a new slave SessionId for each transition to SESSION</Purpose>
						<PreCondition>-DuT is in RESET</PreCondition>
						<Action>-Executes several transition to Session and the checks the SessionId generated by the slave.</Action>
						<PostCondition>-DuT shall run to Session state with a new SessionId
-Possible unused data of the slave frame shall be 0</PostCondition>
						<ProposalForSolution>-Check the implementation of the generation of the slave session Id(CREATE_SESSION_ID())</ProposalForSolution>
						<References>
							<Reference Chapter="Slave state machine RESET_OK" Specification="ETG5100"/>
							<Reference Chapter="FSoE Slave Test Case 1.4" Specification="ETG7100"/>
						</References>
						<Mandatory>true</Mandatory>
					</Description>
					<CaseVariables>
						<Variable>
							<Name>c_slaveSessionID1</Name>
							<Type>UInt16</Type>
							<Comment/>
						</Variable>
						<Variable>
							<Name>c_slaveSessionID2</Name>
							<Type>UInt16</Type>
							<Comment/>
						</Variable>
						<Variable>
							<Name>c_transitionCount</Name>
							<Type>Int32</Type>
							<Comment>Anzahl der Versuche</Comment>
						</Variable>
						<Variable>
							<Name>c_tmpByte</Name>
							<Type>Byte</Type>
						</Variable>
					</CaseVariables>
					<TestSteps>
						<TestStep Name="SetWD">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>t_watchdog</Destination>
										<Source>SafePara.Watchdog</Source>
									</SetVariable>
								</SetVariables>
							</Action>
						</TestStep>
						<TestStep Name="ResetDevice">
							<Action>
								<CallFunction>
									<Reference>RUN_DUT_TO_RESET</Reference>
								</CallFunction>
							</Action>
						</TestStep>
						<TestStep Name="SetSessionId">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>t_masterSessionId</Destination>
										<Source>1</Source>
									</SetVariable>
								</SetVariables>
							</Action>
							<Informations2>
								<Information>
									<Type>Output</Type>
									<Value Param0="t_masterSessionId">Master SessionId = {0} (0x{0:x4})</Value>
								</Information>
							</Informations2>
						</TestStep>
						<TestStep Name="GoToSession">
							<Action>
								<CallFunction>
									<Reference>Reset_OK</Reference>
								</CallFunction>
							</Action>
							<Informations2>
								<Information>
									<Type>Output</Type>
									<Value Param0="c_transitionCount" Param1="t_slaveSessionId" Param2="c_slaveSessionID2">Transition No. {0}  new SlaveSessionID:  0x{1:x4} || old SlaveSessionID: 0x{2:x4}</Value>
								</Information>
							</Informations2>
						</TestStep>
						<TestStep Name="StoreSlaveSessionId">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>c_slaveSessionID1</Destination>
										<Source>t_slaveSessionId</Source>
									</SetVariable>
								</SetVariables>
							</Action>
							<Compares>
								<Compare>
									<Condition>
										<Value1>c_slaveSessionID1</Value1>
										<Operator>Equal</Operator>
										<Value2>c_slaveSessionID2</Value2>
									</Condition>
									<Statement>
										<Return>
											<Type>Error</Type>
											<Value>SlaveSessionsIDs of two different state transitions to SESSION are equal</Value>
										</Return>
									</Statement>
								</Compare>
								<Compare>
									<Condition>
										<Value1>c_slaveSessionID1</Value1>
										<Operator>NotEqual</Operator>
										<Value2>c_slaveSessionID2</Value2>
									</Condition>
									<Statement>
										<Information>
											<Type>Output</Type>
											<Value Param0="c_slaveSessionID1" Param1="c_slaveSessionID2">New SessionID: 0x{0:x4}  Old SessionID: 0x{1:x4}</Value>
										</Information>
									</Statement>
									<Statement>
										<SetVariables>
											<SetVariable>
												<Destination>c_slaveSessionID2</Destination>
												<Source>c_slaveSessionID1</Source>
											</SetVariable>
										</SetVariables>
									</Statement>
								</Compare>
								<Compare>
									<Condition>
										<Value1>c_transitionCount</Value1>
										<Operator>Lower</Operator>
										<Value2>10</Value2>
									</Condition>
									<Statement>
										<SetVariables>
											<SetVariable>
												<Destination>c_transitionCount</Destination>
												<Source>c_transitionCount+1</Source>
											</SetVariable>
										</SetVariables>
									</Statement>
								</Compare>
								<Compare>
									<Condition>
										<Value1>c_transitionCount</Value1>
										<Operator>Lower</Operator>
										<Value2>10</Value2>
									</Condition>
									<Statement>
										<GotoStep>ResetDevice</GotoStep>
									</Statement>
								</Compare>
								<Compare>
									<Condition>
										<Value1>c_transitionCount</Value1>
										<Operator>Equal</Operator>
										<Value2>10</Value2>
									</Condition>
									<Statement>
										<Return>
											<Type>Success</Type>
											<Value>10 different Slave Session Ids received</Value>
										</Return>
									</Statement>
								</Compare>
							</Compares>
						</TestStep>
					</TestSteps>
				</TestCase>
				<TestCase Name="#1.5 RESET_Stay1" CaseId="5">
					<Description>
						<Purpose>The DuT shall execute the RESET_STAY1 transition if a newly Master Reset command is received in RESET.</Purpose>
						<PreCondition>-DuT is in RESET</PreCondition>
						<Action>-Master sends a reset command</Action>
						<PostCondition>-DuT shall stay in RESET with CommFaultReason = 0
-Possible unused data of the slave frame shall be 0
-Master watchdog shall expire</PostCondition>
						<ProposalForSolution>-Check implementation of RESET_STAY1</ProposalForSolution>
						<References>
							<Reference Chapter="Slave state machine RESET_STAY1" Specification="ETG5100"/>
							<Reference Chapter="FSoE Slave Test Case 1.5" Specification="ETG7100"/>
						</References>
						<Mandatory>true</Mandatory>
					</Description>
					<CaseVariables>
						<Variable>
							<Name>c_CommFaultReason</Name>
							<Type>Byte</Type>
						</Variable>
						<Variable>
							<Name>c_tmpByte</Name>
							<Type>Byte</Type>
						</Variable>
					</CaseVariables>
					<TestSteps>
						<TestStep Name="SetWD">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>t_watchdog</Destination>
										<Source>SafePara.Watchdog</Source>
									</SetVariable>
								</SetVariables>
							</Action>
						</TestStep>
						<TestStep Name="ResetDevice">
							<Action>
								<CallFunction>
									<Reference>RUN_DUT_TO_RESET</Reference>
								</CallFunction>
							</Action>
						</TestStep>
						<TestStep Name="SetVars">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>c_CommFaultReason</Destination>
										<Source>0</Source>
									</SetVariable>
									<SetVariable>
										<Destination>c_tmpByte</Destination>
										<Source>0</Source>
									</SetVariable>
									<SetVariable>
										<Destination>t_masterSessionId</Destination>
										<Source>1</Source>
									</SetVariable>
								</SetVariables>
							</Action>
						</TestStep>
						<TestStep Name="SetFrame">
							<Informations1>
								<Information>
									<Type>Verbose</Type>
									<Value Param0="t_masterSessionId">MasterSessionId = 0x{0:x4}</Value>
								</Information>
								<Information>
									<Type>Verbose</Type>
									<Value Param0="CommFaultReason" Param1="LastCrc" Param2="0" Param3="t_masterSeqNo" Param4="OldMasterCrc" Param5="false">SetFrame(Cmd Reset, SafeData  {0}, LastCrc 0x{1:x4}, ConnectionId 0x{2:x4}, MasterSeqNo 0x{3:x4},oldCrc 0x{4:x4}, new {5})</Value>
								</Information>
							</Informations1>
							<Action>
								<SetFrame Name="t_masterFrame">
									<Command>
										<CommandValue>Reset</CommandValue>
									</Command>
									<SafeData>
										<SafeDataVariable>CommFaultReason</SafeDataVariable>
									</SafeData>
									<LastCRC>LastCrc</LastCRC>
									<ConnectionID>
										<UshortValue>0</UshortValue>
									</ConnectionID>
									<SequenceNo>t_masterSeqNo</SequenceNo>
									<OldCRC>OldMasterCrc</OldCRC>
									<New>false</New>
								</SetFrame>
							</Action>
						</TestStep>
						<TestStep Name="SendFrame">
							<Action>
								<SendFrame Name="t_masterFrame"/>
							</Action>
							<Informations2>
								<Information>
									<Type>Verbose</Type>
									<Value Param0="t_masterFrame.FrameData">Master Frame: {0}</Value>
								</Information>
							</Informations2>
							<ReturnValue>
								<OnFailure>
									<Type>Error</Type>
									<Value>Failed to send FSoE frame!</Value>
									<Id>256</Id>
								</OnFailure>
							</ReturnValue>
						</TestStep>
						<TestStep Name="SetExpectWatchdogExpired">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>t_expWdExpired</Destination>
										<Source>true</Source>
									</SetVariable>
								</SetVariables>
							</Action>
						</TestStep>
						<TestStep Name="CheckReceivedSlaveFrame">
							<Action>
								<CallFunction>
									<Reference>CHECK_RESET_FAIL</Reference>
								</CallFunction>
							</Action>
							<ReturnValue>
								<OnSuccess>
									<Type>Success</Type>
									<Value>Watchdog expired as expected</Value>
								</OnSuccess>
							</ReturnValue>
						</TestStep>
					</TestSteps>
				</TestCase>
				<TestCase Name="#1.6 RESET_Fail1" CaseId="6">
					<Description>
						<Purpose>The DuT shall detect an invalid CRC_0 in RESET and execute the RESET_FAIL1 transition.</Purpose>
						<PreCondition>-DuT is in RESET</PreCondition>
						<Action>-Master sends a Session command with an invalid CRC_0 (+1)</Action>
						<PostCondition>-DuT shall execute the RESET_FAIL1 with CommFaultReason = INVALID_CRC
-Possible unused data of the slave frame shall be 0</PostCondition>
						<ProposalForSolution>-Check implementation of RESET_FAIL1</ProposalForSolution>
						<References>
							<Reference Chapter="Slave state machine RESET_FAIL1" Specification="ETG5100"/>
							<Reference Chapter="FSoE Slave Test Case 1.6" Specification="ETG7100"/>
						</References>
						<Mandatory>true</Mandatory>
					</Description>
					<CaseVariables>
						<Variable>
							<Name>c_crcIndex</Name>
							<Type>Int32</Type>
						</Variable>
						<Variable>
							<Name>c_CommFaultReason</Name>
							<Type>Byte</Type>
						</Variable>
						<Variable>
							<Name>c_tmpByte</Name>
							<Type>Byte</Type>
						</Variable>
					</CaseVariables>
					<TestSteps>
						<TestStep Name="SetWD">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>t_watchdog</Destination>
										<Source>SafePara.Watchdog</Source>
									</SetVariable>
								</SetVariables>
							</Action>
						</TestStep>
						<TestStep Name="ResetDevice">
							<Action>
								<CallFunction>
									<Reference>RUN_DUT_TO_RESET</Reference>
								</CallFunction>
							</Action>
						</TestStep>
						<TestStep Name="SetVars">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>t_masterSessionId</Destination>
										<Source>1</Source>
									</SetVariable>
									<SetVariable>
										<Destination>c_CommFaultReason</Destination>
										<Source>INVALID_CRC</Source>
									</SetVariable>
									<SetVariable>
										<Destination>c_tmpByte</Destination>
										<Source>0</Source>
									</SetVariable>
									<SetVariable>
										<Destination>t_wdExpired</Destination>
										<Source>false</Source>
									</SetVariable>
								</SetVariables>
							</Action>
							<Informations2>
								<Information>
									<Type>Verbose</Type>
									<Value Param0="t_masterSessionId">MasterSessionId = 0x{0:x4}</Value>
								</Information>
							</Informations2>
						</TestStep>
						<TestStep Name="SetFrame">
							<Informations1>
								<Information>
									<Type>Verbose</Type>
									<Value Param0="CommFaultReason" Param1="LastCrc" Param2="t_masterSeqNo" Param3="OldMasterCrc" Param4="false">SetFrame(Command Session, SafeData {0}, LastCrc 0x{1:x4}, ConnectionId 0,  SequenceNo 0x{2:x4}, OldCrc 0x{3:x4}, New {4})</Value>
								</Information>
							</Informations1>
							<Action>
								<SetFrame Name="t_masterFrame">
									<Command>
										<CommandValue>Session</CommandValue>
									</Command>
									<SafeData>
										<SafeDataVariable>CommFaultReason</SafeDataVariable>
									</SafeData>
									<LastCRC>LastCrc</LastCRC>
									<ConnectionID>
										<UshortValue>0</UshortValue>
									</ConnectionID>
									<SequenceNo>t_masterSeqNo</SequenceNo>
									<OldCRC>OldMasterCrc</OldCRC>
									<New>false</New>
								</SetFrame>
							</Action>
							<Informations2>
								<Information>
									<Type>Output</Type>
									<Value Param0="t_masterFrame.Crc0">Valid Crc0 = 0x{0:x4}</Value>
								</Information>
							</Informations2>
						</TestStep>
						<TestStep Name="SetInvalidCRC_0">
							<Action>
								<CallFunction>
									<Reference>INCREMENT_CRC_0</Reference>
								</CallFunction>
							</Action>
							<Informations2>
								<Information>
									<Type>Output</Type>
									<Value Param0="t_masterFrame.Crc0">Falsified Crc0 = 0x{0:x4}</Value>
								</Information>
							</Informations2>
						</TestStep>
						<TestStep Name="SendFrame">
							<Action>
								<SendFrame Name="t_masterFrame"/>
							</Action>
							<Informations2>
								<Information>
									<Type>Verbose</Type>
									<Value Param0="t_masterFrame.FrameData">Master Frame: {0}</Value>
								</Information>
							</Informations2>
							<ReturnValue>
								<OnFailure>
									<Type>Error</Type>
									<Value>Failed to send FSoE frame!</Value>
									<Id>256</Id>
								</OnFailure>
							</ReturnValue>
						</TestStep>
						<TestStep Name="CheckReceivedSlaveFrame">
							<Action>
								<CallFunction>
									<Reference>CHECK_RESET_FAIL</Reference>
								</CallFunction>
							</Action>
							<ReturnValue>
								<OnSuccess>
									<Type>Success</Type>
									<Value Param0="c_CommFaultReason">Expected CommFaultReason ({0}) received</Value>
								</OnSuccess>
							</ReturnValue>
						</TestStep>
					</TestSteps>
				</TestCase>
				<TestCase Name="#1.7 RESET_Fail1" CaseId="7">
					<Description>
						<Purpose>The DuT shall detect an invalid CRC_0 in RESET and execute the RESET_FAIL1 transition.</Purpose>
						<PreCondition>-DuT is in RESET</PreCondition>
						<Action>-Master sends a Session command with an invalid CRC_0 (-1)</Action>
						<PostCondition>-DuT shall execute the RESET_FAIL1 with CommFaultReason = INVALID_CRC
-Possible unused data of the slave frame shall be 0</PostCondition>
						<ProposalForSolution>-Check implementation of RESET_FAIL1</ProposalForSolution>
						<References>
							<Reference Chapter="Slave state machine RESET_FAIL1" Specification="ETG5100"/>
							<Reference Chapter="FSoE Slave Test Case 1.7" Specification="ETG7100"/>
						</References>
						<Mandatory>true</Mandatory>
					</Description>
					<CaseVariables>
						<Variable>
							<Name>c_crcIndex</Name>
							<Type>Int32</Type>
						</Variable>
						<Variable>
							<Name>c_CommFaultReason</Name>
							<Type>Byte</Type>
						</Variable>
						<Variable>
							<Name>c_tmpByte</Name>
							<Type>Byte</Type>
						</Variable>
					</CaseVariables>
					<TestSteps>
						<TestStep Name="SetWD">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>t_watchdog</Destination>
										<Source>SafePara.Watchdog</Source>
									</SetVariable>
								</SetVariables>
							</Action>
						</TestStep>
						<TestStep Name="ResetDevice">
							<Action>
								<CallFunction>
									<Reference>RUN_DUT_TO_RESET</Reference>
								</CallFunction>
							</Action>
						</TestStep>
						<TestStep Name="SetVars">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>c_CommFaultReason</Destination>
										<Source>INVALID_CRC</Source>
									</SetVariable>
									<SetVariable>
										<Destination>t_wdExpired</Destination>
										<Source>false</Source>
									</SetVariable>
									<SetVariable>
										<Destination>c_tmpByte</Destination>
										<Source>0</Source>
									</SetVariable>
									<SetVariable>
										<Destination>t_masterSessionId</Destination>
										<Source>1</Source>
									</SetVariable>
								</SetVariables>
							</Action>
							<Informations2>
								<Information>
									<Type>Verbose</Type>
									<Value Param0="t_masterSessionId">MasterSessionId = 0x{0:x4}</Value>
								</Information>
							</Informations2>
						</TestStep>
						<TestStep Name="SetFrame">
							<Informations1>
								<Information>
									<Type>Verbose</Type>
									<Value Param0="CommFaultReason" Param1="LastCrc" Param2="t_masterSeqNo" Param3="OldMasterCrc" Param4="false">SetFrame(Command Session, SafeData {0}, LastCrc 0x{1:x4}, ConnectionId 0,  SequenceNo 0x{2:x4}, OldCrc 0x{3:x4}, New {4})</Value>
								</Information>
							</Informations1>
							<Action>
								<SetFrame Name="t_masterFrame">
									<Command>
										<CommandValue>Session</CommandValue>
									</Command>
									<SafeData>
										<SafeDataVariable>CommFaultReason</SafeDataVariable>
									</SafeData>
									<LastCRC>LastCrc</LastCRC>
									<ConnectionID>
										<UshortValue>0</UshortValue>
									</ConnectionID>
									<SequenceNo>t_masterSeqNo</SequenceNo>
									<OldCRC>OldMasterCrc</OldCRC>
									<New>false</New>
								</SetFrame>
							</Action>
							<Informations2>
								<Information>
									<Type>Verbose</Type>
									<Value Param0="t_masterFrame.Crc0">Valid Crc0 = 0x{0:x4}</Value>
								</Information>
							</Informations2>
						</TestStep>
						<TestStep Name="SetInvalidCRC_0">
							<Action>
								<CallFunction>
									<Reference>DECREMENT_CRC_0</Reference>
								</CallFunction>
							</Action>
							<Informations2>
								<Information>
									<Type>Output</Type>
									<Value Param0="t_masterFrame.Crc0">Falsified Crc0 = 0x{0:x4}</Value>
								</Information>
							</Informations2>
						</TestStep>
						<TestStep Name="SendFrame">
							<Action>
								<SendFrame Name="t_masterFrame"/>
							</Action>
							<Informations2>
								<Information>
									<Type>Verbose</Type>
									<Value Param0="t_masterFrame.FrameData">Master Frame: {0}</Value>
								</Information>
							</Informations2>
							<ReturnValue>
								<OnFailure>
									<Type>Error</Type>
									<Value>Failed to send FSoE frame!</Value>
									<Id>256</Id>
								</OnFailure>
							</ReturnValue>
						</TestStep>
						<TestStep Name="CheckReceivedSlaveFrame">
							<Action>
								<CallFunction>
									<Reference>CHECK_RESET_FAIL</Reference>
								</CallFunction>
							</Action>
							<ReturnValue>
								<OnSuccess>
									<Type>Success</Type>
									<Value Param0="c_CommFaultReason">Expected CommFaultReason ({0}) received</Value>
								</OnSuccess>
							</ReturnValue>
						</TestStep>
					</TestSteps>
				</TestCase>
				<TestCase Name="#1.8 RESET_Fail1" CaseId="8">
					<Description>
						<Purpose>The DuT shall detect an invalid CRC_n in RESET and execute the RESET_FAIL1 transition.</Purpose>
						<PreCondition>-DuT is in RESET
-Initialisation Safe Outputs Length is greater than 2 </PreCondition>
						<Action>-Master sends a Session command with an invalid CRC_1 to CRC_n (+1)</Action>
						<PostCondition>-DuT shall execute the RESET_FAIL1 with CommFaultReason = INVALID_CRC
-Possible unused data of the slave frame shall be 0</PostCondition>
						<ProposalForSolution>-Check implementation of RESET_FAIL1</ProposalForSolution>
						<References>
							<Reference Chapter="Slave state machine RESET_FAIL1" Specification="ETG5100"/>
							<Reference Chapter="FSoE Slave Test Case 1.8" Specification="ETG7100"/>
						</References>
						<Mandatory>true</Mandatory>
					</Description>
					<CaseVariables>
						<Variable>
							<Name>c_crcIndex</Name>
							<Type>Int32</Type>
						</Variable>
						<Variable>
							<Name>c_tmpCrcn</Name>
							<Type>UInt16</Type>
						</Variable>
						<Variable>
							<Name>c_CommFaultReason</Name>
							<Type>Byte</Type>
						</Variable>
						<Variable>
							<Name>c_tmpByte</Name>
							<Type>Byte</Type>
						</Variable>
					</CaseVariables>
					<TestSteps>
						<TestStep Name="IsSafeDataLenGreater2">
							<Compares>
								<Compare>
									<Condition>
										<Value1>SafeOutputs.Length</Value1>
										<Operator>LowerOrEqual</Operator>
										<Value2>2</Value2>
									</Condition>
									<Statement>
										<Return>
											<Type>SkippedCase</Type>
											<Value>SafeDataLength lower or equal than 2 ==> Skip case</Value>
										</Return>
									</Statement>
								</Compare>
							</Compares>
						</TestStep>
						<TestStep Name="SetWD">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>t_watchdog</Destination>
										<Source>SafePara.Watchdog</Source>
									</SetVariable>
								</SetVariables>
							</Action>
						</TestStep>
						<TestStep Name="SetCrcIndex1">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>c_crcIndex</Destination>
										<Source>1</Source>
									</SetVariable>
								</SetVariables>
							</Action>
						</TestStep>
						<TestStep Name="ResetDevice">
							<Action>
								<CallFunction>
									<Reference>RUN_DUT_TO_RESET</Reference>
								</CallFunction>
							</Action>
						</TestStep>
						<TestStep Name="SetVars">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>c_CommFaultReason</Destination>
										<Source>INVALID_CRC</Source>
									</SetVariable>
									<SetVariable>
										<Destination>t_wdExpired</Destination>
										<Source>false</Source>
									</SetVariable>
									<SetVariable>
										<Destination>c_tmpByte</Destination>
										<Source>0</Source>
									</SetVariable>
									<SetVariable>
										<Destination>t_masterSessionId</Destination>
										<Source>1</Source>
									</SetVariable>
								</SetVariables>
							</Action>
							<Informations2>
								<Information>
									<Type>Verbose</Type>
									<Value Param0="t_masterSessionId">MasterSessionId = 0x{0:x4}</Value>
								</Information>
							</Informations2>
						</TestStep>
						<TestStep Name="SetFrame">
							<Informations1>
								<Information>
									<Type>Verbose</Type>
									<Value Param0="CommFaultReason" Param1="LastCrc" Param2="t_masterSeqNo" Param3="OldMasterCrc" Param4="false">SetFrame(Command Session, SafeData {0}, LastCrc 0x{1:x4}, ConnectionId 0,  SequenceNo 0x{2:x4}, OldCrc 0x{3:x4}, New {4})</Value>
								</Information>
							</Informations1>
							<Action>
								<SetFrame Name="t_masterFrame">
									<Command>
										<CommandValue>Session</CommandValue>
									</Command>
									<SafeData>
										<SafeDataVariable>CommFaultReason</SafeDataVariable>
									</SafeData>
									<LastCRC>LastCrc</LastCRC>
									<ConnectionID>
										<UshortValue>0</UshortValue>
									</ConnectionID>
									<SequenceNo>t_masterSeqNo</SequenceNo>
									<OldCRC>OldMasterCrc</OldCRC>
									<New>false</New>
								</SetFrame>
							</Action>
							<Informations2>
								<Information>
									<Type>Output</Type>
									<Value Param0="t_masterFrame.Crcs[c_crcIndex]" Param1="c_crcIndex">Valid Crc[{1}] = 0x{0:x4}</Value>
								</Information>
							</Informations2>
						</TestStep>
						<TestStep Name="SetInvalidCRC_n">
							<Action>
								<CallFunction>
									<Reference>INCREMENT_CRC_N</Reference>
								</CallFunction>
							</Action>
							<Informations2>
								<Information>
									<Type>Output</Type>
									<Value Param0="t_masterFrame.Crcs[c_crcIndex]" Param1="c_crcIndex">Falsified Crc[{1}] = 0x{0:x4}</Value>
								</Information>
							</Informations2>
						</TestStep>
						<TestStep Name="SendFrame">
							<Action>
								<SendFrame Name="t_masterFrame"/>
							</Action>
							<Informations2>
								<Information>
									<Type>Verbose</Type>
									<Value Param0="t_masterFrame.FrameData">Master Frame: {0}</Value>
								</Information>
							</Informations2>
							<ReturnValue>
								<OnFailure>
									<Type>Error</Type>
									<Value>Failed to send FSoE frame!</Value>
									<Id>256</Id>
								</OnFailure>
							</ReturnValue>
						</TestStep>
						<TestStep Name="SetCrcIndex">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>c_crcIndex</Destination>
										<Source>c_crcIndex+1</Source>
									</SetVariable>
								</SetVariables>
							</Action>
							<Informations2>
								<Information>
									<Type>Verbose</Type>
									<Value Param0="c_crcIndex">Index :{0}</Value>
								</Information>
							</Informations2>
						</TestStep>
						<TestStep Name="CheckReceivedSlaveFrame">
							<Action>
								<CallFunction>
									<Reference>CHECK_RESET_FAIL</Reference>
								</CallFunction>
							</Action>
							<Compares>
								<Compare>
									<Condition>
										<Value1>c_crcIndex</Value1>
										<Operator>Lower</Operator>
										<Value2>CrcLength</Value2>
									</Condition>
									<Statement>
										<GotoStep>ResetDevice</GotoStep>
									</Statement>
								</Compare>
								<Compare>
									<Condition>
										<Value1>c_crcIndex</Value1>
										<Operator>GreaterOrEqual</Operator>
										<Value2>CrcLength</Value2>
									</Condition>
									<Statement>
										<Return>
											<Type>Success</Type>
											<Value Param0="c_CommFaultReason">Expected CommFaultReason ({0}) received</Value>
										</Return>
									</Statement>
								</Compare>
							</Compares>
						</TestStep>
					</TestSteps>
				</TestCase>
				<TestCase Name="#1.9 RESET_Fail1" CaseId="9">
					<Description>
						<Purpose>The DuT shall detect an invalid CRC_n in RESET and execute the RESET_FAIL1 transition.</Purpose>
						<PreCondition>-DuT is in RESET
-Initialisation Safe Outputs Length is greater than 2 </PreCondition>
						<Action>-Master sends a Session command with an invalid CRC_1 to CRC_n (-1)</Action>
						<PostCondition>-DuT shall execute the RESET_FAIL1 with CommFaultReason = INVALID_CRC
-Possible unused data of the slave frame shall be 0</PostCondition>
						<ProposalForSolution>-Check implementation of RESET_FAIL1</ProposalForSolution>
						<References>
							<Reference Chapter="Slave state machine RESET_FAIL1" Specification="ETG5100"/>
							<Reference Chapter="FSoE Slave Test Case 1.9" Specification="ETG7100"/>
						</References>
						<Mandatory>true</Mandatory>
					</Description>
					<CaseVariables>
						<Variable>
							<Name>c_crcIndex</Name>
							<Type>Int32</Type>
						</Variable>
						<Variable>
							<Name>c_tmpCrcn</Name>
							<Type>UInt16</Type>
						</Variable>
						<Variable>
							<Name>c_CommFaultReason</Name>
							<Type>Byte</Type>
						</Variable>
						<Variable>
							<Name>c_tmpByte</Name>
							<Type>Byte</Type>
						</Variable>
					</CaseVariables>
					<TestSteps>
						<TestStep Name="IsSafeDataLenGreater2">
							<Compares>
								<Compare>
									<Condition>
										<Value1>SafeOutputs.Length</Value1>
										<Operator>LowerOrEqual</Operator>
										<Value2>2</Value2>
									</Condition>
									<Statement>
										<Return>
											<Type>SkippedCase</Type>
											<Value>SafeDatalength lower or equal than 2  ==> Skip case</Value>
										</Return>
									</Statement>
								</Compare>
							</Compares>
						</TestStep>
						<TestStep Name="SetWD">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>t_watchdog</Destination>
										<Source>SafePara.Watchdog</Source>
									</SetVariable>
								</SetVariables>
							</Action>
						</TestStep>
						<TestStep Name="SetCrcIndex1">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>c_crcIndex</Destination>
										<Source>1</Source>
									</SetVariable>
								</SetVariables>
							</Action>
						</TestStep>
						<TestStep Name="ResetDevice">
							<Action>
								<CallFunction>
									<Reference>RUN_DUT_TO_RESET</Reference>
								</CallFunction>
							</Action>
						</TestStep>
						<TestStep Name="SetVars">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>c_CommFaultReason</Destination>
										<Source>INVALID_CRC</Source>
									</SetVariable>
									<SetVariable>
										<Destination>t_wdExpired</Destination>
										<Source>false</Source>
									</SetVariable>
									<SetVariable>
										<Destination>t_masterSessionId</Destination>
										<Source>1</Source>
									</SetVariable>
									<SetVariable>
										<Destination>c_tmpByte</Destination>
										<Source>0</Source>
									</SetVariable>
								</SetVariables>
							</Action>
							<Informations2>
								<Information>
									<Type>Verbose</Type>
									<Value Param0="t_masterSessionId">MasterSessionId = 0x{0:x4}</Value>
								</Information>
							</Informations2>
						</TestStep>
						<TestStep Name="SetFrame">
							<Informations1>
								<Information>
									<Type>Verbose</Type>
									<Value Param0="CommFaultReason" Param1="LastCrc" Param2="t_masterSeqNo" Param3="OldMasterCrc" Param4="false">SetFrame(Command Session, SafeData {0}, LastCrc 0x{1:x4}, ConnectionId 0,  SequenceNo 0x{2:x4}, OldCrc 0x{3:x4}, New {4})</Value>
								</Information>
							</Informations1>
							<Action>
								<SetFrame Name="t_masterFrame">
									<Command>
										<CommandValue>Session</CommandValue>
									</Command>
									<SafeData>
										<SafeDataVariable>CommFaultReason</SafeDataVariable>
									</SafeData>
									<LastCRC>LastCrc</LastCRC>
									<ConnectionID>
										<UshortValue>0</UshortValue>
									</ConnectionID>
									<SequenceNo>t_masterSeqNo</SequenceNo>
									<OldCRC>OldMasterCrc</OldCRC>
									<New>false</New>
								</SetFrame>
							</Action>
							<Informations2>
								<Information>
									<Type>Output</Type>
									<Value Param0="t_masterFrame.Crcs[c_crcIndex]" Param1="c_crcIndex">Valid Crc[{1}] = 0x{0:x4}</Value>
								</Information>
							</Informations2>
						</TestStep>
						<TestStep Name="SetInvalidCRC_n">
							<Action>
								<CallFunction>
									<Reference>INCREMENT_CRC_N</Reference>
								</CallFunction>
							</Action>
							<Informations2>
								<Information>
									<Type>Output</Type>
									<Value Param0="t_masterFrame.Crcs[c_crcIndex]" Param1="c_crcIndex">Falsified Crc[{1}] = 0x{0:x4}</Value>
								</Information>
							</Informations2>
						</TestStep>
						<TestStep Name="SendFrame">
							<Action>
								<SendFrame Name="t_masterFrame"/>
							</Action>
							<Informations2>
								<Information>
									<Type>Verbose</Type>
									<Value Param0="t_masterFrame.FrameData">Master Frame: {0}</Value>
								</Information>
							</Informations2>
							<ReturnValue>
								<OnFailure>
									<Type>Error</Type>
									<Value>Failed to send FSoE frame!</Value>
									<Id>256</Id>
								</OnFailure>
							</ReturnValue>
						</TestStep>
						<TestStep Name="SetCrcIndex">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>c_crcIndex</Destination>
										<Source>c_crcIndex+1</Source>
									</SetVariable>
								</SetVariables>
							</Action>
						</TestStep>
						<TestStep Name="CheckReceivedSlaveFrame">
							<Action>
								<CallFunction>
									<Reference>CHECK_RESET_FAIL</Reference>
								</CallFunction>
							</Action>
							<Compares>
								<Compare>
									<Condition>
										<Value1>c_crcIndex</Value1>
										<Operator>Lower</Operator>
										<Value2>CrcLength</Value2>
									</Condition>
									<Statement>
										<GotoStep>ResetDevice</GotoStep>
									</Statement>
								</Compare>
								<Compare>
									<Condition>
										<Value1>c_crcIndex</Value1>
										<Operator>GreaterOrEqual</Operator>
										<Value2>CrcLength</Value2>
									</Condition>
									<Statement>
										<Return>
											<Type>Success</Type>
											<Value Param0="c_CommFaultReason">Expected CommFaultReason ({0}) received</Value>
										</Return>
									</Statement>
								</Compare>
							</Compares>
						</TestStep>
					</TestSteps>
				</TestCase>
				<TestCase Name="#1.10 RESET_Fail1" CaseId="10">
					<Description>
						<Purpose>The DuT shall detect an invalid Master SequenceNo in RESET and execute the RESET_FAIL1 transition.</Purpose>
						<PreCondition>-DuT is in RESET</PreCondition>
						<Action>-Master sends a Session frame whose CRCs are calculated with an invalid master SequenceNo(42)</Action>
						<PostCondition>-DuT shall execute the RESET_FAIL1 with CommFaultReason = INVALID_CRC
-Possible unused data of the slave frame shall be 0</PostCondition>
						<ProposalForSolution>-Check implementation of RESET_FAIL1</ProposalForSolution>
						<References>
							<Reference Chapter="Slave state machine RESET_FAIL1" Specification="ETG5100"/>
							<Reference Chapter="FSoE Slave Test Case 1.10" Specification="ETG7100"/>
						</References>
						<Mandatory>true</Mandatory>
					</Description>
					<CaseVariables>
						<Variable>
							<Name>c_invalidSeqNo</Name>
							<Type>UInt16</Type>
						</Variable>
						<Variable>
							<Name>c_tmpByte</Name>
							<Type>Byte</Type>
						</Variable>
						<Variable>
							<Name>c_CommFaultReason</Name>
							<Type>Byte</Type>
						</Variable>
					</CaseVariables>
					<TestSteps>
						<TestStep Name="SetWD">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>t_watchdog</Destination>
										<Source>SafePara.Watchdog</Source>
									</SetVariable>
								</SetVariables>
							</Action>
						</TestStep>
						<TestStep Name="ResetDevice">
							<Action>
								<CallFunction>
									<Reference>RUN_DUT_TO_RESET</Reference>
								</CallFunction>
							</Action>
						</TestStep>
						<TestStep Name="SetVars">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>c_CommFaultReason</Destination>
										<Source>INVALID_CRC</Source>
									</SetVariable>
									<SetVariable>
										<Destination>c_invalidSeqNo</Destination>
										<Source>42</Source>
									</SetVariable>
									<SetVariable>
										<Destination>t_wdExpired</Destination>
										<Source>false</Source>
									</SetVariable>
									<SetVariable>
										<Destination>t_masterSessionId</Destination>
										<Source>1</Source>
									</SetVariable>
								</SetVariables>
							</Action>
							<Informations2>
								<Information>
									<Type>Verbose</Type>
									<Value Param0="t_masterSessionId">MasterSessionId = 0x{0:x4}</Value>
								</Information>
							</Informations2>
						</TestStep>
						<TestStep Name="SetFrame">
							<Informations1>
								<Information>
									<Type>Verbose</Type>
									<Value Param0="t_masterSessionId" Param1="LastCrc" Param2="c_invalidSeqNo" Param3="OldMasterCrc" Param4="false">SetFrame(Command Session, SafeData {0}, LastCrc 0x{1:x4}, ConnectionId 0,  SequenceNo 0x{2:x4}, OldCrc 0x{3:x4}, New {4})</Value>
								</Information>
							</Informations1>
							<Action>
								<SetFrame Name="t_masterFrame">
									<Command>
										<CommandValue>Session</CommandValue>
									</Command>
									<SafeData>
										<SafeDataVariable>t_masterSessionId</SafeDataVariable>
									</SafeData>
									<LastCRC>LastCrc</LastCRC>
									<ConnectionID>
										<UshortValue>0</UshortValue>
									</ConnectionID>
									<SequenceNo>c_invalidSeqNo</SequenceNo>
									<OldCRC>OldMasterCrc</OldCRC>
									<New>false</New>
								</SetFrame>
							</Action>
							<Informations2>
								<Information>
									<Type>Output</Type>
									<Value Param0="t_masterSeqNo">Valid Master SeqNo = {0}</Value>
								</Information>
								<Information>
									<Type>Output</Type>
									<Value Param0="c_invalidSeqNo">Falsified Master SeqNo = {0}</Value>
								</Information>
							</Informations2>
						</TestStep>
						<TestStep Name="SendFrame">
							<Action>
								<SendFrame Name="t_masterFrame"/>
							</Action>
							<Informations2>
								<Information>
									<Type>Verbose</Type>
									<Value Param0="t_masterFrame.FrameData">Master Frame: {0}</Value>
								</Information>
							</Informations2>
							<ReturnValue>
								<OnFailure>
									<Type>Error</Type>
									<Value>Failed to send FSoE frame!</Value>
									<Id>256</Id>
								</OnFailure>
							</ReturnValue>
						</TestStep>
						<TestStep Name="CheckReceivedSlaveFrame">
							<Action>
								<CallFunction>
									<Reference>CHECK_RESET_FAIL</Reference>
								</CallFunction>
							</Action>
							<ReturnValue>
								<OnSuccess>
									<Type>Success</Type>
									<Value Param0="c_CommFaultReason">Expected CommFaultReason ({0}) received</Value>
								</OnSuccess>
							</ReturnValue>
						</TestStep>
					</TestSteps>
				</TestCase>
				<TestCase Name="#1.11 RESET_Fail2" CaseId="11">
					<Description>
						<Purpose>The DuT shall detect an invalid command at the Master message in RESET and execute the RESET_FAIL2 transition.</Purpose>
						<PreCondition>-DuT is in RESET</PreCondition>
						<Action>-Master sends a frame with an invalid command (Connection)</Action>
						<PostCondition>-DuT shall execute the RESET_FAIL2 with CommFaultReason = INVALID_CMD
-Possible unused data of the slave frame shall be 0</PostCondition>
						<ProposalForSolution>-Check implementation of RESET_FAIL2</ProposalForSolution>
						<References>
							<Reference Chapter="Slave state machine RESET_FAIL2" Specification="ETG5100"/>
							<Reference Chapter="FSoE Slave Test Case 1.11" Specification="ETG7100"/>
						</References>
						<Mandatory>true</Mandatory>
					</Description>
					<CaseVariables>
						<Variable>
							<Name>c_tmpByte</Name>
							<Type>Byte</Type>
						</Variable>
						<Variable>
							<Name>c_CommFaultReason</Name>
							<Type>Byte</Type>
						</Variable>
					</CaseVariables>
					<TestSteps>
						<TestStep Name="SetWD">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>t_watchdog</Destination>
										<Source>SafePara.Watchdog</Source>
									</SetVariable>
								</SetVariables>
							</Action>
						</TestStep>
						<TestStep Name="ResetDevice">
							<Action>
								<CallFunction>
									<Reference>RUN_DUT_TO_RESET</Reference>
								</CallFunction>
							</Action>
						</TestStep>
						<TestStep Name="SetVars">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>c_CommFaultReason</Destination>
										<Source>INVALID_CMD</Source>
									</SetVariable>
									<SetVariable>
										<Destination>t_wdExpired</Destination>
										<Source>false</Source>
									</SetVariable>
									<SetVariable>
										<Destination>t_masterSessionId</Destination>
										<Source>1</Source>
									</SetVariable>
								</SetVariables>
							</Action>
							<Informations2>
								<Information>
									<Type>Verbose</Type>
									<Value Param0="t_masterSessionId">MasterSessionId = 0x{0:x4}</Value>
								</Information>
							</Informations2>
						</TestStep>
						<TestStep Name="SetFrame">
							<Informations1>
								<Information>
									<Type>Verbose</Type>
									<Value Param0="t_masterSessionId" Param1="LastCrc" Param2="t_masterSeqNo" Param3="OldMasterCrc" Param4="false">SetFrame(Command Connection, SafeData {0}, LastCrc 0x{1:x4}, ConnectionId 0,  SequenceNo 0x{2:x4}, OldCrc 0x{3:x4}, New {4})</Value>
								</Information>
							</Informations1>
							<Action>
								<SetFrame Name="t_masterFrame">
									<Command>
										<CommandValue>Connection</CommandValue>
									</Command>
									<SafeData>
										<SafeDataVariable>t_masterSessionId</SafeDataVariable>
									</SafeData>
									<LastCRC>LastCrc</LastCRC>
									<ConnectionID>
										<UshortValue>0</UshortValue>
									</ConnectionID>
									<SequenceNo>t_masterSeqNo</SequenceNo>
									<OldCRC>OldMasterCrc</OldCRC>
									<New>false</New>
								</SetFrame>
							</Action>
						</TestStep>
						<TestStep Name="SendFrame">
							<Action>
								<SendFrame Name="t_masterFrame"/>
							</Action>
							<Informations2>
								<Information>
									<Type>Verbose</Type>
									<Value Param0="t_masterFrame.FrameData">Master Frame: {0}</Value>
								</Information>
							</Informations2>
							<ReturnValue>
								<OnFailure>
									<Type>Error</Type>
									<Value>Failed to send FSoE frame!</Value>
									<Id>256</Id>
								</OnFailure>
							</ReturnValue>
						</TestStep>
						<TestStep Name="CheckReceivedSlaveFrame">
							<Action>
								<CallFunction>
									<Reference>CHECK_RESET_FAIL</Reference>
								</CallFunction>
							</Action>
							<ReturnValue>
								<OnSuccess>
									<Type>Success</Type>
									<Value Param0="c_CommFaultReason">Expected CommFaultReason ({0}) received</Value>
								</OnSuccess>
							</ReturnValue>
						</TestStep>
					</TestSteps>
				</TestCase>
				<TestCase Name="#1.12 RESET_Fail2" CaseId="12">
					<Description>
						<Purpose>The DuT shall detect an invalid command at the Master message in RESET and execute the RESET_FAIL2 transition.</Purpose>
						<PreCondition>-DuT is in RESET</PreCondition>
						<Action>-Master sends a frame with an invalid command (Connection) and ConnData</Action>
						<PostCondition>-DuT shall execute the RESET_FAIL2 with CommFaultReason = INVALID_CMD
-Possible unused data of the slave frame shall be 0</PostCondition>
						<ProposalForSolution>-Check implementation of RESET_FAIL2</ProposalForSolution>
						<References>
							<Reference Chapter="Slave state machine RESET_FAIL2" Specification="ETG5100"/>
							<Reference Chapter="FSoE Slave Test Case 1.12" Specification="ETG7100"/>
						</References>
						<Mandatory>true</Mandatory>
					</Description>
					<CaseVariables>
						<Variable>
							<Name>c_tmpByte</Name>
							<Type>Byte</Type>
						</Variable>
						<Variable>
							<Name>c_CommFaultReason</Name>
							<Type>Byte</Type>
						</Variable>
					</CaseVariables>
					<TestSteps>
						<TestStep Name="SetWD">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>t_watchdog</Destination>
										<Source>SafePara.Watchdog</Source>
									</SetVariable>
								</SetVariables>
							</Action>
						</TestStep>
						<TestStep Name="ResetDevice">
							<Action>
								<CallFunction>
									<Reference>RUN_DUT_TO_RESET</Reference>
								</CallFunction>
							</Action>
						</TestStep>
						<TestStep Name="SetConnData">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>t_connectionId</Destination>
										<Source>ConnData.ConnId</Source>
									</SetVariable>
									<SetVariable>
										<Destination DestinationIndex="0">t_connData</Destination>
										<Source>t_connectionId</Source>
									</SetVariable>
									<SetVariable>
										<Destination DestinationIndex="2">t_connData</Destination>
										<Source>ConnData.SlaveAddress</Source>
									</SetVariable>
								</SetVariables>
							</Action>
							<Informations2>
								<Information>
									<Type>Output</Type>
									<Value Param0="t_connData">ConnectionData :{0}</Value>
								</Information>
							</Informations2>
						</TestStep>
						<TestStep Name="SetVars">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>c_CommFaultReason</Destination>
										<Source>INVALID_CMD</Source>
									</SetVariable>
									<SetVariable>
										<Destination>t_wdExpired</Destination>
										<Source>false</Source>
									</SetVariable>
									<SetVariable>
										<Destination>t_masterSessionId</Destination>
										<Source>1</Source>
									</SetVariable>
								</SetVariables>
							</Action>
							<Informations2>
								<Information>
									<Type>Verbose</Type>
									<Value Param0="t_masterSessionId">MasterSessionId = 0x{0:x4}</Value>
								</Information>
							</Informations2>
						</TestStep>
						<TestStep Name="SetFrame">
							<Informations1>
								<Information>
									<Type>Verbose</Type>
									<Value Param0="ConnData" Param1="LastCrc" Param2="t_masterSeqNo" Param3="OldMasterCrc" Param4="false" Param5="ConnData.ConnId">SetFrame(Command Connection, SafeData {0}, LastCrc 0x{1:x4}, ConnectionId 0x{5:x4},  SequenceNo 0x{2:x4}, OldCrc 0x{3:x4}, New {4})</Value>
								</Information>
							</Informations1>
							<Action>
								<SetFrame Name="t_masterFrame">
									<Command>
										<CommandValue>Connection</CommandValue>
									</Command>
									<SafeData>
										<SafeDataVariable>ConnData</SafeDataVariable>
									</SafeData>
									<LastCRC>LastCrc</LastCRC>
									<ConnectionID>
										<ConnectionIdVariable>ConnData.ConnId</ConnectionIdVariable>
									</ConnectionID>
									<SequenceNo>t_masterSeqNo</SequenceNo>
									<OldCRC>OldMasterCrc</OldCRC>
									<New>false</New>
								</SetFrame>
							</Action>
						</TestStep>
						<TestStep Name="SendFrame">
							<Action>
								<SendFrame Name="t_masterFrame"/>
							</Action>
							<Informations2>
								<Information>
									<Type>Verbose</Type>
									<Value Param0="t_masterFrame.FrameData">Master Frame: {0}</Value>
								</Information>
							</Informations2>
							<ReturnValue>
								<OnFailure>
									<Type>Error</Type>
									<Value>Failed to send FSoE frame!</Value>
									<Id>256</Id>
								</OnFailure>
							</ReturnValue>
						</TestStep>
						<TestStep Name="CheckReceivedSlaveFrame">
							<Action>
								<CallFunction>
									<Reference>CHECK_RESET_FAIL</Reference>
								</CallFunction>
							</Action>
							<ReturnValue>
								<OnSuccess>
									<Type>Success</Type>
									<Value Param0="c_CommFaultReason">Expected CommFaultReason ({0}) received</Value>
								</OnSuccess>
							</ReturnValue>
						</TestStep>
					</TestSteps>
				</TestCase>
				<TestCase Name="#1.13 RESET_Fail2" CaseId="13">
					<Description>
						<Purpose>The DuT shall detect an invalid command at the Master message in RESET and execute the RESET_FAIL2 transition.</Purpose>
						<PreCondition>-DuT is in RESET</PreCondition>
						<Action>-Master sends a frame with an invalid command (Parameter)</Action>
						<PostCondition>-DuT shall execute the RESET_FAIL2 with CommFaultReason = INVALID_CMD
-Possible unused data of the slave frame shall be 0</PostCondition>
						<ProposalForSolution>-Check implementation of RESET_FAIL2</ProposalForSolution>
						<References>
							<Reference Chapter="Slave state machine RESET_FAIL2" Specification="ETG5100"/>
							<Reference Chapter="FSoE Slave Test Case 1.13" Specification="ETG7100"/>
						</References>
						<Mandatory>true</Mandatory>
					</Description>
					<CaseVariables>
						<Variable>
							<Name>c_tmpByte</Name>
							<Type>Byte</Type>
						</Variable>
						<Variable>
							<Name>c_CommFaultReason</Name>
							<Type>Byte</Type>
						</Variable>
					</CaseVariables>
					<TestSteps>
						<TestStep Name="SetWD">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>t_watchdog</Destination>
										<Source>SafePara.Watchdog</Source>
									</SetVariable>
								</SetVariables>
							</Action>
						</TestStep>
						<TestStep Name="ResetDevice">
							<Action>
								<CallFunction>
									<Reference>RUN_DUT_TO_RESET</Reference>
								</CallFunction>
							</Action>
						</TestStep>
						<TestStep Name="SetVars">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>c_CommFaultReason</Destination>
										<Source>INVALID_CMD</Source>
									</SetVariable>
									<SetVariable>
										<Destination>t_wdExpired</Destination>
										<Source>false</Source>
									</SetVariable>
									<SetVariable>
										<Destination>t_masterSessionId</Destination>
										<Source>1</Source>
									</SetVariable>
								</SetVariables>
							</Action>
							<Informations2>
								<Information>
									<Type>Verbose</Type>
									<Value Param0="t_masterSessionId">MasterSessionId = 0x{0:x4}</Value>
								</Information>
							</Informations2>
						</TestStep>
						<TestStep Name="SetFrame">
							<Informations1>
								<Information>
									<Type>Verbose</Type>
									<Value Param0="t_masterSessionId" Param1="LastCrc" Param2="t_masterSeqNo" Param3="OldMasterCrc" Param4="false">SetFrame(Command Parameter, SafeData {0}, LastCrc 0x{1:x4}, ConnectionId 0,  SequenceNo 0x{2:x4}, OldCrc 0x{3:x4}, New {4})</Value>
								</Information>
							</Informations1>
							<Action>
								<SetFrame Name="t_masterFrame">
									<Command>
										<CommandValue>Parameter</CommandValue>
									</Command>
									<SafeData>
										<SafeDataVariable>t_masterSessionId</SafeDataVariable>
									</SafeData>
									<LastCRC>LastCrc</LastCRC>
									<ConnectionID>
										<UshortValue>0</UshortValue>
									</ConnectionID>
									<SequenceNo>t_masterSeqNo</SequenceNo>
									<OldCRC>OldMasterCrc</OldCRC>
									<New>false</New>
								</SetFrame>
							</Action>
						</TestStep>
						<TestStep Name="SendFrame">
							<Action>
								<SendFrame Name="t_masterFrame"/>
							</Action>
							<Informations2>
								<Information>
									<Type>Verbose</Type>
									<Value Param0="t_masterFrame.FrameData">Master Frame: {0}</Value>
								</Information>
							</Informations2>
							<ReturnValue>
								<OnFailure>
									<Type>Error</Type>
									<Value>Failed to send FSoE frame!</Value>
									<Id>256</Id>
								</OnFailure>
							</ReturnValue>
						</TestStep>
						<TestStep Name="CheckReceivedSlaveFrame">
							<Action>
								<CallFunction>
									<Reference>CHECK_RESET_FAIL</Reference>
								</CallFunction>
							</Action>
							<ReturnValue>
								<OnSuccess>
									<Type>Success</Type>
									<Value Param0="c_CommFaultReason">Expected CommFaultReason ({0}) received</Value>
								</OnSuccess>
							</ReturnValue>
						</TestStep>
					</TestSteps>
				</TestCase>
				<TestCase Name="#1.14 RESET_Fail2" CaseId="14">
					<Description>
						<Purpose>The DuT shall detect an invalid command at the Master message in RESET and execute the RESET_FAIL2 transition.</Purpose>
						<PreCondition>-DuT is in RESET</PreCondition>
						<Action>-Master sends a frame with an invalid command (Parameter) and SafeParameter</Action>
						<PostCondition>-DuT shall execute the RESET_FAIL2 with CommFaultReason = INVALID_CMD
-Possible unused data of the slave frame shall be 0</PostCondition>
						<ProposalForSolution>-Check implementation of RESET_FAIL2</ProposalForSolution>
						<References>
							<Reference Chapter="Slave state machine RESET_FAIL2" Specification="ETG5100"/>
							<Reference Chapter="FSoE Slave Test Case 1.14" Specification="ETG7100"/>
						</References>
						<Mandatory>true</Mandatory>
					</Description>
					<CaseVariables>
						<Variable>
							<Name>c_tmpByte</Name>
							<Type>Byte</Type>
						</Variable>
						<Variable>
							<Name>c_CommFaultReason</Name>
							<Type>Byte</Type>
						</Variable>
					</CaseVariables>
					<TestSteps>
						<TestStep Name="SetWD">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>t_watchdog</Destination>
										<Source>SafePara.Watchdog</Source>
									</SetVariable>
								</SetVariables>
							</Action>
						</TestStep>
						<TestStep Name="ResetDevice">
							<Action>
								<CallFunction>
									<Reference>RUN_DUT_TO_RESET</Reference>
								</CallFunction>
							</Action>
						</TestStep>
						<TestStep Name="SetVars">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>c_CommFaultReason</Destination>
										<Source>INVALID_CMD</Source>
									</SetVariable>
									<SetVariable>
										<Destination>t_wdExpired</Destination>
										<Source>false</Source>
									</SetVariable>
									<SetVariable>
										<Destination>t_masterSessionId</Destination>
										<Source>1</Source>
									</SetVariable>
								</SetVariables>
							</Action>
							<Informations2>
								<Information>
									<Type>Verbose</Type>
									<Value Param0="t_masterSessionId">MasterSessionId = 0x{0:x4}</Value>
								</Information>
							</Informations2>
						</TestStep>
						<TestStep Name="SetFrame">
							<Informations1>
								<Information>
									<Type>Verbose</Type>
									<Value Param0="SafePara" Param1="LastCrc" Param2="t_masterSeqNo" Param3="OldMasterCrc" Param4="false" Param5="ConnData.ConnId">SetFrame(Command Parameter, SafeData {0}, LastCrc 0x{1:x4}, ConnectionId 0x{5:x4},  SequenceNo 0x{2:x4}, OldCrc 0x{3:x4}, New {4})</Value>
								</Information>
							</Informations1>
							<Action>
								<SetFrame Name="t_masterFrame">
									<Command>
										<CommandValue>Parameter</CommandValue>
									</Command>
									<SafeData>
										<SafeDataVariable>SafePara</SafeDataVariable>
									</SafeData>
									<LastCRC>LastCrc</LastCRC>
									<ConnectionID>
										<ConnectionIdVariable>ConnData.ConnId</ConnectionIdVariable>
									</ConnectionID>
									<SequenceNo>t_masterSeqNo</SequenceNo>
									<OldCRC>OldMasterCrc</OldCRC>
									<New>false</New>
								</SetFrame>
							</Action>
						</TestStep>
						<TestStep Name="SendFrame">
							<Action>
								<SendFrame Name="t_masterFrame"/>
							</Action>
							<Informations2>
								<Information>
									<Type>Verbose</Type>
									<Value Param0="t_masterFrame.FrameData">Master Frame: {0}</Value>
								</Information>
							</Informations2>
							<ReturnValue>
								<OnFailure>
									<Type>Error</Type>
									<Value>Failed to send FSoE frame!</Value>
									<Id>256</Id>
								</OnFailure>
							</ReturnValue>
						</TestStep>
						<TestStep Name="CheckReceivedSlaveFrame">
							<Action>
								<CallFunction>
									<Reference>CHECK_RESET_FAIL</Reference>
								</CallFunction>
							</Action>
							<ReturnValue>
								<OnSuccess>
									<Type>Success</Type>
									<Value Param0="c_CommFaultReason">Expected CommFaultReason ({0}) received</Value>
								</OnSuccess>
							</ReturnValue>
						</TestStep>
					</TestSteps>
				</TestCase>
				<TestCase Name="#1.15 RESET_Fail2" CaseId="15">
					<Description>
						<Purpose>The DuT shall detect an invalid command at the Master message in RESET and execute the RESET_FAIL2 transition.</Purpose>
						<PreCondition>-DuT is in RESET</PreCondition>
						<Action>-Master sends a frame with an invalid command (ProcessData)</Action>
						<PostCondition>-DuT shall execute the RESET_FAIL2 with CommFaultReason = INVALID_CMD
-Possible unused data of the slave frame shall be 0</PostCondition>
						<ProposalForSolution>-Check implementation of RESET_FAIL2</ProposalForSolution>
						<References>
							<Reference Chapter="Slave state machine RESET_FAIL2" Specification="ETG5100"/>
							<Reference Chapter="FSoE Slave Test Case 1.15" Specification="ETG7100"/>
						</References>
						<Mandatory>true</Mandatory>
					</Description>
					<CaseVariables>
						<Variable>
							<Name>c_tmpByte</Name>
							<Type>Byte</Type>
						</Variable>
						<Variable>
							<Name>c_CommFaultReason</Name>
							<Type>Byte</Type>
						</Variable>
					</CaseVariables>
					<TestSteps>
						<TestStep Name="SetWD">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>t_watchdog</Destination>
										<Source>SafePara.Watchdog</Source>
									</SetVariable>
								</SetVariables>
							</Action>
						</TestStep>
						<TestStep Name="ResetDevice">
							<Action>
								<CallFunction>
									<Reference>RUN_DUT_TO_RESET</Reference>
								</CallFunction>
							</Action>
						</TestStep>
						<TestStep Name="SetVars">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>c_CommFaultReason</Destination>
										<Source>INVALID_CMD</Source>
									</SetVariable>
									<SetVariable>
										<Destination>t_wdExpired</Destination>
										<Source>false</Source>
									</SetVariable>
									<SetVariable>
										<Destination>t_masterSessionId</Destination>
										<Source>1</Source>
									</SetVariable>
								</SetVariables>
							</Action>
							<Informations2>
								<Information>
									<Type>Verbose</Type>
									<Value Param0="t_masterSessionId">MasterSessionId = 0x{0:x4}</Value>
								</Information>
							</Informations2>
						</TestStep>
						<TestStep Name="SetFrame">
							<Informations1>
								<Information>
									<Type>Verbose</Type>
									<Value Param0="t_masterSessionId" Param1="LastCrc" Param2="t_masterSeqNo" Param3="OldMasterCrc" Param4="false">SetFrame(Command Data, SafeData {0}, LastCrc 0x{1:x4}, ConnectionId 0,  SequenceNo 0x{2:x4}, OldCrc 0x{3:x4}, New {4})</Value>
								</Information>
							</Informations1>
							<Action>
								<SetFrame Name="t_masterFrame">
									<Command>
										<CommandValue>Data</CommandValue>
									</Command>
									<SafeData>
										<SafeDataVariable>t_masterSessionId</SafeDataVariable>
									</SafeData>
									<LastCRC>LastCrc</LastCRC>
									<ConnectionID>
										<UshortValue>0</UshortValue>
									</ConnectionID>
									<SequenceNo>t_masterSeqNo</SequenceNo>
									<OldCRC>OldMasterCrc</OldCRC>
									<New>false</New>
								</SetFrame>
							</Action>
						</TestStep>
						<TestStep Name="SendFrame">
							<Action>
								<SendFrame Name="t_masterFrame"/>
							</Action>
							<Informations2>
								<Information>
									<Type>Verbose</Type>
									<Value Param0="t_masterFrame.FrameData">Master Frame: {0}</Value>
								</Information>
							</Informations2>
							<ReturnValue>
								<OnFailure>
									<Type>Error</Type>
									<Value>Failed to send FSoE frame!</Value>
									<Id>256</Id>
								</OnFailure>
							</ReturnValue>
						</TestStep>
						<TestStep Name="CheckReceivedSlaveFrame">
							<Action>
								<CallFunction>
									<Reference>CHECK_RESET_FAIL</Reference>
								</CallFunction>
							</Action>
							<ReturnValue>
								<OnSuccess>
									<Type>Success</Type>
									<Value Param0="c_CommFaultReason">Expected CommFaultReason ({0}) received</Value>
								</OnSuccess>
							</ReturnValue>
						</TestStep>
					</TestSteps>
				</TestCase>
				<TestCase Name="#1.16 RESET_Fail2" CaseId="16">
					<Description>
						<Purpose>The DuT shall detect an invalid command at the Master message in RESET and execute the RESET_FAIL2 transition.</Purpose>
						<PreCondition>-DuT is in RESET</PreCondition>
						<Action>-Master sends a frame with an invalid command (ProcessData) and SafeOutputs</Action>
						<PostCondition>-DuT shall execute the RESET_FAIL2 with CommFaultReason = INVALID_CMD
-Possible unused data of the slave frame shall be 0</PostCondition>
						<ProposalForSolution>-Check implementation of RESET_FAIL2</ProposalForSolution>
						<References>
							<Reference Chapter="Slave state machine RESET_FAIL2" Specification="ETG5100"/>
							<Reference Chapter="FSoE Slave Test Case 1.16" Specification="ETG7100"/>
						</References>
						<Mandatory>true</Mandatory>
					</Description>
					<CaseVariables>
						<Variable>
							<Name>c_tmpByte</Name>
							<Type>Byte</Type>
						</Variable>
						<Variable>
							<Name>c_CommFaultReason</Name>
							<Type>Byte</Type>
						</Variable>
					</CaseVariables>
					<TestSteps>
						<TestStep Name="SetWD">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>t_watchdog</Destination>
										<Source>SafePara.Watchdog</Source>
									</SetVariable>
								</SetVariables>
							</Action>
						</TestStep>
						<TestStep Name="ResetDevice">
							<Action>
								<CallFunction>
									<Reference>RUN_DUT_TO_RESET</Reference>
								</CallFunction>
							</Action>
						</TestStep>
						<TestStep Name="SetVars">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>c_CommFaultReason</Destination>
										<Source>INVALID_CMD</Source>
									</SetVariable>
									<SetVariable>
										<Destination>t_wdExpired</Destination>
										<Source>false</Source>
									</SetVariable>
									<SetVariable>
										<Destination>t_masterSessionId</Destination>
										<Source>1</Source>
									</SetVariable>
								</SetVariables>
							</Action>
							<Informations2>
								<Information>
									<Type>Verbose</Type>
									<Value Param0="t_masterSessionId">MasterSessionId = 0x{0:x4}</Value>
								</Information>
							</Informations2>
						</TestStep>
						<TestStep Name="SetFrame">
							<Informations1>
								<Information>
									<Type>Verbose</Type>
									<Value Param0="SafeOutputs" Param1="LastCrc" Param2="t_masterSeqNo" Param3="OldMasterCrc" Param4="false" Param5="ConnData.ConnId">SetFrame(Command Data, SafeData {0}, LastCrc 0x{1:x4}, ConnectionId 0x{5:x4},  SequenceNo 0x{2:x4}, OldCrc 0x{3:x4}, New {4})</Value>
								</Information>
							</Informations1>
							<Action>
								<SetFrame Name="t_masterFrame">
									<Command>
										<CommandValue>Data</CommandValue>
									</Command>
									<SafeData>
										<SafeDataVariable>SafeOutputs</SafeDataVariable>
									</SafeData>
									<LastCRC>LastCrc</LastCRC>
									<ConnectionID>
										<ConnectionIdVariable>ConnData.ConnId</ConnectionIdVariable>
									</ConnectionID>
									<SequenceNo>t_masterSeqNo</SequenceNo>
									<OldCRC>OldMasterCrc</OldCRC>
									<New>false</New>
								</SetFrame>
							</Action>
						</TestStep>
						<TestStep Name="SendFrame">
							<Action>
								<SendFrame Name="t_masterFrame"/>
							</Action>
							<Informations2>
								<Information>
									<Type>Verbose</Type>
									<Value Param0="t_masterFrame.FrameData">Master Frame: {0}</Value>
								</Information>
							</Informations2>
							<ReturnValue>
								<OnFailure>
									<Type>Error</Type>
									<Value>Failed to send FSoE frame!</Value>
									<Id>256</Id>
								</OnFailure>
							</ReturnValue>
						</TestStep>
						<TestStep Name="CheckReceivedSlaveFrame">
							<Action>
								<CallFunction>
									<Reference>CHECK_RESET_FAIL</Reference>
								</CallFunction>
							</Action>
							<ReturnValue>
								<OnSuccess>
									<Type>Success</Type>
									<Value Param0="c_CommFaultReason">Expected CommFaultReason ({0}) received</Value>
								</OnSuccess>
							</ReturnValue>
						</TestStep>
					</TestSteps>
				</TestCase>
				<TestCase Name="#1.17 RESET_Fail2" CaseId="17">
					<Description>
						<Purpose>The DuT shall detect an invalid command at the Master message in RESET and execute the RESET_FAIL2 transition.</Purpose>
						<PreCondition>-DuT is in RESET</PreCondition>
						<Action>-Master sends a frame with an invalid command (FailSafeData)</Action>
						<PostCondition>-DuT shall execute the RESET_FAIL2 with CommFaultReason = INVALID_CMD
-Possible unused data of the slave frame shall be 0</PostCondition>
						<ProposalForSolution>-Check implementation of RESET_FAIL2</ProposalForSolution>
						<References>
							<Reference Chapter="Slave state machine RESET_FAIL2" Specification="ETG5100"/>
							<Reference Chapter="FSoE Slave Test Case 1.17" Specification="ETG7100"/>
						</References>
						<Mandatory>true</Mandatory>
					</Description>
					<CaseVariables>
						<Variable>
							<Name>c_tmpByte</Name>
							<Type>Byte</Type>
						</Variable>
						<Variable>
							<Name>c_CommFaultReason</Name>
							<Type>Byte</Type>
						</Variable>
					</CaseVariables>
					<TestSteps>
						<TestStep Name="SetWD">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>t_watchdog</Destination>
										<Source>SafePara.Watchdog</Source>
									</SetVariable>
								</SetVariables>
							</Action>
						</TestStep>
						<TestStep Name="ResetDevice">
							<Action>
								<CallFunction>
									<Reference>RUN_DUT_TO_RESET</Reference>
								</CallFunction>
							</Action>
						</TestStep>
						<TestStep Name="SetVars">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>c_CommFaultReason</Destination>
										<Source>INVALID_CMD</Source>
									</SetVariable>
									<SetVariable>
										<Destination>t_wdExpired</Destination>
										<Source>false</Source>
									</SetVariable>
									<SetVariable>
										<Destination>t_masterSessionId</Destination>
										<Source>1</Source>
									</SetVariable>
								</SetVariables>
							</Action>
							<Informations2>
								<Information>
									<Type>Verbose</Type>
									<Value Param0="t_masterSessionId">MasterSessionId = 0x{0:x4}</Value>
								</Information>
							</Informations2>
						</TestStep>
						<TestStep Name="SetFrame">
							<Informations1>
								<Information>
									<Type>Verbose</Type>
									<Value Param0="t_masterSessionId" Param1="LastCrc" Param2="t_masterSeqNo" Param3="OldMasterCrc" Param4="false" Param5="0">SetFrame(Command FailSafeData, SafeData {0}, LastCrc 0x{1:x4}, ConnectionId 0x{5:x4},  SequenceNo 0x{2:x4}, OldCrc 0x{3:x4}, New {4})</Value>
								</Information>
							</Informations1>
							<Action>
								<SetFrame Name="t_masterFrame">
									<Command>
										<CommandValue>FailSafeData</CommandValue>
									</Command>
									<SafeData>
										<SafeDataVariable>t_masterSessionId</SafeDataVariable>
									</SafeData>
									<LastCRC>LastCrc</LastCRC>
									<ConnectionID>
										<UshortValue>0</UshortValue>
									</ConnectionID>
									<SequenceNo>t_masterSeqNo</SequenceNo>
									<OldCRC>OldMasterCrc</OldCRC>
									<New>false</New>
								</SetFrame>
							</Action>
						</TestStep>
						<TestStep Name="SendFrame">
							<Action>
								<SendFrame Name="t_masterFrame"/>
							</Action>
							<Informations2>
								<Information>
									<Type>Verbose</Type>
									<Value Param0="t_masterFrame.FrameData">Master Frame: {0}</Value>
								</Information>
							</Informations2>
							<ReturnValue>
								<OnFailure>
									<Type>Error</Type>
									<Value>Failed to send FSoE frame!</Value>
									<Id>256</Id>
								</OnFailure>
							</ReturnValue>
						</TestStep>
						<TestStep Name="CheckReceivedSlaveFrame">
							<Action>
								<CallFunction>
									<Reference>CHECK_RESET_FAIL</Reference>
								</CallFunction>
							</Action>
							<ReturnValue>
								<OnSuccess>
									<Type>Success</Type>
									<Value Param0="c_CommFaultReason">Expected CommFaultReason ({0}) received</Value>
								</OnSuccess>
							</ReturnValue>
						</TestStep>
					</TestSteps>
				</TestCase>
				<TestCase Name="#1.18 RESET_Fail2" CaseId="18">
					<Description>
						<Purpose>The DuT shall detect an invalid command at the Master message in RESET and execute the RESET_FAIL2 transition.</Purpose>
						<PreCondition>-DuT is in RESET</PreCondition>
						<Action>-Master sends a frame with an invalid command (FailSafeData) and FailSafeOutputs</Action>
						<PostCondition>-DuT shall execute the RESET_FAIL2 with CommFaultReason = INVALID_CMD
-Possible unused data of the slave frame shall be 0</PostCondition>
						<ProposalForSolution>-Check implementation of RESET_FAIL2</ProposalForSolution>
						<References>
							<Reference Chapter="Slave state machine RESET_FAIL2" Specification="ETG5100"/>
							<Reference Chapter="FSoE Slave Test Case 1.18" Specification="ETG7100"/>
						</References>
						<Mandatory>true</Mandatory>
					</Description>
					<CaseVariables>
						<Variable>
							<Name>c_tmpByte</Name>
							<Type>Byte</Type>
						</Variable>
						<Variable>
							<Name>c_safeData[SafeDataLength]</Name>
							<Type>ArrayOfBytes</Type>
						</Variable>
						<Variable>
							<Name>c_CommFaultReason</Name>
							<Type>Byte</Type>
						</Variable>
					</CaseVariables>
					<TestSteps>
						<TestStep Name="SetWD">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>t_watchdog</Destination>
										<Source>SafePara.Watchdog</Source>
									</SetVariable>
								</SetVariables>
							</Action>
						</TestStep>
						<TestStep Name="ResetDevice">
							<Action>
								<CallFunction>
									<Reference>RUN_DUT_TO_RESET</Reference>
								</CallFunction>
							</Action>
						</TestStep>
						<TestStep Name="SetVars">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>c_CommFaultReason</Destination>
										<Source>INVALID_CMD</Source>
									</SetVariable>
									<SetVariable>
										<Destination>t_wdExpired</Destination>
										<Source>false</Source>
									</SetVariable>
									<SetVariable>
										<Destination>t_masterSessionId</Destination>
										<Source>1</Source>
									</SetVariable>
								</SetVariables>
							</Action>
							<Informations2>
								<Information>
									<Type>Verbose</Type>
									<Value Param0="t_masterSessionId">MasterSessionId = 0x{0:x4}</Value>
								</Information>
							</Informations2>
						</TestStep>
						<TestStep Name="SetFrame">
							<Informations1>
								<Information>
									<Type>Verbose</Type>
									<Value Param0="c_safeData" Param1="LastCrc" Param2="t_masterSeqNo" Param3="OldMasterCrc" Param4="false" Param5="ConnData.ConnId">SetFrame(Command Data, SafeData {0}, LastCrc 0x{1:x4}, ConnectionId 0x{5:x4},  SequenceNo 0x{2:x4}, OldCrc 0x{3:x4}, New {4})</Value>
								</Information>
							</Informations1>
							<Action>
								<SetFrame Name="t_masterFrame">
									<Command>
										<CommandValue>Data</CommandValue>
									</Command>
									<SafeData>
										<SafeDataVariable>c_safeData</SafeDataVariable>
									</SafeData>
									<LastCRC>LastCrc</LastCRC>
									<ConnectionID>
										<ConnectionIdVariable>ConnData.ConnId</ConnectionIdVariable>
									</ConnectionID>
									<SequenceNo>t_masterSeqNo</SequenceNo>
									<OldCRC>OldMasterCrc</OldCRC>
									<New>false</New>
								</SetFrame>
							</Action>
						</TestStep>
						<TestStep Name="SendFrame">
							<Action>
								<SendFrame Name="t_masterFrame"/>
							</Action>
							<Informations2>
								<Information>
									<Type>Verbose</Type>
									<Value Param0="t_masterFrame.FrameData">Master Frame: {0}</Value>
								</Information>
							</Informations2>
							<ReturnValue>
								<OnFailure>
									<Type>Error</Type>
									<Value>Failed to send FSoE frame!</Value>
									<Id>256</Id>
								</OnFailure>
							</ReturnValue>
						</TestStep>
						<TestStep Name="CheckReceivedSlaveFrame">
							<Action>
								<CallFunction>
									<Reference>CHECK_RESET_FAIL</Reference>
								</CallFunction>
							</Action>
							<ReturnValue>
								<OnSuccess>
									<Type>Success</Type>
									<Value Param0="c_CommFaultReason">Expected CommFaultReason ({0}) received</Value>
								</OnSuccess>
							</ReturnValue>
						</TestStep>
					</TestSteps>
				</TestCase>
				<TestCase Name="#1.19 RESET_Fail3" CaseId="19">
					<Description>
						<Purpose>The DuT shall detect an unknown command at the Master message in RESET and execute the RESET_FAIL3 transition.</Purpose>
						<PreCondition>-DuT is in RESET</PreCondition>
						<Action>-Master sends a frame with an unknown command (0x00)</Action>
						<PostCondition>-DuT shall execute the RESET_FAIL3 with CommFaultReason = INVALID_CMD
-Possible unused data of the slave frame shall be 0</PostCondition>
						<ProposalForSolution>-Check implementation of RESET_FAIL3</ProposalForSolution>
						<References>
							<Reference Chapter="Slave state machine RESET_FAIL3" Specification="ETG5100"/>
							<Reference Chapter="FSoE Slave Test Case 1.19" Specification="ETG7100"/>
						</References>
						<Mandatory>true</Mandatory>
					</Description>
					<CaseVariables>
						<Variable>
							<Name>c_tmpByte</Name>
							<Type>Byte</Type>
						</Variable>
						<Variable>
							<Name>c_unknownCmd</Name>
							<Type>Byte</Type>
						</Variable>
						<Variable>
							<Name>c_CommFaultReason</Name>
							<Type>Byte</Type>
						</Variable>
					</CaseVariables>
					<TestSteps>
						<TestStep Name="SetWD">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>t_watchdog</Destination>
										<Source>SafePara.Watchdog</Source>
									</SetVariable>
								</SetVariables>
							</Action>
						</TestStep>
						<TestStep Name="ResetDevice">
							<Action>
								<CallFunction>
									<Reference>RUN_DUT_TO_RESET</Reference>
								</CallFunction>
							</Action>
						</TestStep>
						<TestStep Name="SetVars">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>c_CommFaultReason</Destination>
										<Source>UNKNOWN_CMD</Source>
									</SetVariable>
									<SetVariable>
										<Destination>t_wdExpired</Destination>
										<Source>false</Source>
									</SetVariable>
									<SetVariable>
										<Destination>t_masterSessionId</Destination>
										<Source>1</Source>
									</SetVariable>
									<SetVariable>
										<Destination>c_unknownCmd</Destination>
										<Source>0</Source>
									</SetVariable>
								</SetVariables>
							</Action>
							<Informations2>
								<Information>
									<Type>Verbose</Type>
									<Value Param0="t_masterSessionId">MasterSessionId = 0x{0:x4}</Value>
								</Information>
								<Information>
									<Type>Output</Type>
									<Value Param0="c_unknownCmd">Unknown Command = 0x{0:x2}</Value>
								</Information>
							</Informations2>
						</TestStep>
						<TestStep Name="SetFrame">
							<Informations1>
								<Information>
									<Type>Verbose</Type>
									<Value Param0="t_masterSessionId" Param1="LastCrc" Param2="t_masterSeqNo" Param3="OldMasterCrc" Param4="c_unknownCmd" Param5="ConnData.ConnId">SetFrame(Command 0x{4:x2}, SafeData {0}, LastCrc 0x{1:x4}, ConnectionId 0x{5:x4},  SequenceNo 0x{2:x4}, OldCrc 0x{3:x4}, New {4})</Value>
								</Information>
							</Informations1>
							<Action>
								<SetFrame Name="t_masterFrame">
									<Command>
										<CommandVariable>c_unknownCmd</CommandVariable>
									</Command>
									<SafeData>
										<SafeDataVariable>t_masterSessionId</SafeDataVariable>
									</SafeData>
									<LastCRC>LastCrc</LastCRC>
									<ConnectionID>
										<ConnectionIdVariable>ConnData.ConnId</ConnectionIdVariable>
									</ConnectionID>
									<SequenceNo>t_masterSeqNo</SequenceNo>
									<OldCRC>OldMasterCrc</OldCRC>
									<New>false</New>
								</SetFrame>
							</Action>
						</TestStep>
						<TestStep Name="SendFrame">
							<Action>
								<SendFrame Name="t_masterFrame"/>
							</Action>
							<Informations2>
								<Information>
									<Type>Verbose</Type>
									<Value Param0="t_masterFrame.FrameData">Master Frame: {0}</Value>
								</Information>
							</Informations2>
							<ReturnValue>
								<OnFailure>
									<Type>Error</Type>
									<Value>Failed to send FSoE frame!</Value>
									<Id>256</Id>
								</OnFailure>
							</ReturnValue>
						</TestStep>
						<TestStep Name="CheckReceivedSlaveFrame">
							<Action>
								<CallFunction>
									<Reference>CHECK_RESET_FAIL</Reference>
								</CallFunction>
							</Action>
							<ReturnValue>
								<OnSuccess>
									<Type>Success</Type>
									<Value Param0="c_CommFaultReason">Expected CommFaultReason ({0}) received</Value>
								</OnSuccess>
							</ReturnValue>
						</TestStep>
					</TestSteps>
				</TestCase>
				<TestCase Name="#1.20 RESET_Fail3" CaseId="20">
					<Description>
						<Purpose>The DuT shall detect an unknown command at the Master message in RESET and execute the RESET_FAIL3 transition.</Purpose>
						<PreCondition>-DuT is in RESET</PreCondition>
						<Action>-Master sends a frame with an unknown command (0x2B)</Action>
						<PostCondition>-DuT shall execute the RESET_FAIL3 with CommFaultReason = INVALID_CMD
-Possible unused data of the slave frame shall be 0</PostCondition>
						<ProposalForSolution>-Check implementation of RESET_FAIL3</ProposalForSolution>
						<References>
							<Reference Chapter="Slave state machine RESET_FAIL3" Specification="ETG5100"/>
							<Reference Chapter="FSoE Slave Test Case 1.20" Specification="ETG7100"/>
						</References>
						<Mandatory>true</Mandatory>
					</Description>
					<CaseVariables>
						<Variable>
							<Name>c_tmpByte</Name>
							<Type>Byte</Type>
						</Variable>
						<Variable>
							<Name>c_unknownCmd</Name>
							<Type>Byte</Type>
						</Variable>
						<Variable>
							<Name>c_CommFaultReason</Name>
							<Type>Byte</Type>
						</Variable>
						<Variable>
							<Name>c_compareFrame</Name>
							<Type>FSoEFrame</Type>
						</Variable>
					</CaseVariables>
					<TestSteps>
						<TestStep Name="SetWD">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>t_watchdog</Destination>
										<Source>SafePara.Watchdog</Source>
									</SetVariable>
								</SetVariables>
							</Action>
						</TestStep>
						<TestStep Name="ResetDevice">
							<Action>
								<CallFunction>
									<Reference>RUN_DUT_TO_RESET</Reference>
								</CallFunction>
							</Action>
						</TestStep>
						<TestStep Name="SetVars">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>c_CommFaultReason</Destination>
										<Source>UNKNOWN_CMD</Source>
									</SetVariable>
									<SetVariable>
										<Destination>t_wdExpired</Destination>
										<Source>false</Source>
									</SetVariable>
									<SetVariable>
										<Destination>t_masterSessionId</Destination>
										<Source>1</Source>
									</SetVariable>
									<SetVariable>
										<Destination>c_unknownCmd</Destination>
										<Source>43</Source>
									</SetVariable>
								</SetVariables>
							</Action>
							<Informations2>
								<Information>
									<Type>Verbose</Type>
									<Value Param0="t_masterSessionId">MasterSessionId = 0x{0:x4}</Value>
								</Information>
								<Information>
									<Type>Output</Type>
									<Value Param0="c_unknownCmd">Unknown Command = 0x{0:x2}</Value>
								</Information>
							</Informations2>
						</TestStep>
						<TestStep Name="SetFrame">
							<Informations1>
								<Information>
									<Type>Verbose</Type>
									<Value Param0="t_masterSessionId" Param1="LastCrc" Param2="t_masterSeqNo" Param3="OldMasterCrc" Param4="c_unknownCmd" Param5="ConnData.ConnId">SetFrame(Command 0x{4:x2}, SafeData {0}, LastCrc 0x{1:x4}, ConnectionId 0x{5:x4},  SequenceNo 0x{2:x4}, OldCrc 0x{3:x4}, New {4})</Value>
								</Information>
							</Informations1>
							<Action>
								<SetFrame Name="t_masterFrame">
									<Command>
										<CommandVariable>c_unknownCmd</CommandVariable>
									</Command>
									<SafeData>
										<SafeDataVariable>t_masterSessionId</SafeDataVariable>
									</SafeData>
									<LastCRC>LastCrc</LastCRC>
									<ConnectionID>
										<ConnectionIdVariable>ConnData.ConnId</ConnectionIdVariable>
									</ConnectionID>
									<SequenceNo>t_masterSeqNo</SequenceNo>
									<OldCRC>OldMasterCrc</OldCRC>
									<New>false</New>
								</SetFrame>
							</Action>
						</TestStep>
						<TestStep Name="SendFrame">
							<Action>
								<SendFrame Name="t_masterFrame"/>
							</Action>
							<Informations2>
								<Information>
									<Type>Verbose</Type>
									<Value Param0="t_masterFrame.FrameData">Master Frame: {0}</Value>
								</Information>
							</Informations2>
							<ReturnValue>
								<OnFailure>
									<Type>Error</Type>
									<Value>Failed to send FSoE frame!</Value>
									<Id>256</Id>
								</OnFailure>
							</ReturnValue>
						</TestStep>
						<TestStep Name="CheckReceivedSlaveFrame">
							<Action>
								<CallFunction>
									<Reference>CHECK_RESET_FAIL</Reference>
								</CallFunction>
							</Action>
							<ReturnValue>
								<OnSuccess>
									<Type>Success</Type>
									<Value Param0="c_CommFaultReason">Expected CommFaultReason ({0}) received</Value>
								</OnSuccess>
							</ReturnValue>
						</TestStep>
					</TestSteps>
				</TestCase>
				<TestCase Name="#1.21 RESET_Fail3" CaseId="21">
					<Description>
						<Purpose>The DuT shall detect an unknown command at the Master message in RESET and execute the RESET_FAIL3 transition.</Purpose>
						<PreCondition>-DuT is in RESET</PreCondition>
						<Action>-Master sends a frame with an unknown command (0x37)</Action>
						<PostCondition>-DuT shall execute the RESET_FAIL3 with CommFaultReason = INVALID_CMD
-Possible unused data of the slave frame shall be 0</PostCondition>
						<ProposalForSolution>-Check implementation of RESET_FAIL3</ProposalForSolution>
						<References>
							<Reference Chapter="Slave state machine RESET_FAIL3" Specification="ETG5100"/>
							<Reference Chapter="FSoE Slave Test Case 1.21" Specification="ETG7100"/>
						</References>
						<Mandatory>true</Mandatory>
					</Description>
					<CaseVariables>
						<Variable>
							<Name>c_tmpByte</Name>
							<Type>Byte</Type>
						</Variable>
						<Variable>
							<Name>c_unknownCmd</Name>
							<Type>Byte</Type>
						</Variable>
						<Variable>
							<Name>c_CommFaultReason</Name>
							<Type>Byte</Type>
						</Variable>
						<Variable>
							<Name>c_compareFrame</Name>
							<Type>FSoEFrame</Type>
						</Variable>
					</CaseVariables>
					<TestSteps>
						<TestStep Name="SetWD">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>t_watchdog</Destination>
										<Source>SafePara.Watchdog</Source>
									</SetVariable>
								</SetVariables>
							</Action>
						</TestStep>
						<TestStep Name="ResetDevice">
							<Action>
								<CallFunction>
									<Reference>RUN_DUT_TO_RESET</Reference>
								</CallFunction>
							</Action>
						</TestStep>
						<TestStep Name="SetVars">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>c_CommFaultReason</Destination>
										<Source>UNKNOWN_CMD</Source>
									</SetVariable>
									<SetVariable>
										<Destination>t_wdExpired</Destination>
										<Source>false</Source>
									</SetVariable>
									<SetVariable>
										<Destination>t_masterSessionId</Destination>
										<Source>1</Source>
									</SetVariable>
									<SetVariable>
										<Destination>c_unknownCmd</Destination>
										<Source>55</Source>
									</SetVariable>
								</SetVariables>
							</Action>
							<Informations2>
								<Information>
									<Type>Verbose</Type>
									<Value Param0="t_masterSessionId">MasterSessionId = 0x{0:x4}</Value>
								</Information>
								<Information>
									<Type>Output</Type>
									<Value Param0="c_unknownCmd">Unknown Command = 0x{0:x2}</Value>
								</Information>
							</Informations2>
						</TestStep>
						<TestStep Name="SetFrame">
							<Informations1>
								<Information>
									<Type>Verbose</Type>
									<Value Param0="t_masterSessionId" Param1="LastCrc" Param2="t_masterSeqNo" Param3="OldMasterCrc" Param4="c_unknownCmd" Param5="ConnData.ConnId">SetFrame(Command 0x{4:x2}, SafeData {0}, LastCrc 0x{1:x4}, ConnectionId 0x{5:x4},  SequenceNo 0x{2:x4}, OldCrc 0x{3:x4}, New {4})</Value>
								</Information>
							</Informations1>
							<Action>
								<SetFrame Name="t_masterFrame">
									<Command>
										<CommandVariable>c_unknownCmd</CommandVariable>
									</Command>
									<SafeData>
										<SafeDataVariable>t_masterSessionId</SafeDataVariable>
									</SafeData>
									<LastCRC>LastCrc</LastCRC>
									<ConnectionID>
										<ConnectionIdVariable>ConnData.ConnId</ConnectionIdVariable>
									</ConnectionID>
									<SequenceNo>t_masterSeqNo</SequenceNo>
									<OldCRC>OldMasterCrc</OldCRC>
									<New>false</New>
								</SetFrame>
							</Action>
						</TestStep>
						<TestStep Name="SendFrame">
							<Action>
								<SendFrame Name="t_masterFrame"/>
							</Action>
							<Informations2>
								<Information>
									<Type>Verbose</Type>
									<Value Param0="t_masterFrame.FrameData">Master Frame: {0}</Value>
								</Information>
							</Informations2>
							<ReturnValue>
								<OnFailure>
									<Type>Error</Type>
									<Value>Failed to send FSoE frame!</Value>
									<Id>256</Id>
								</OnFailure>
							</ReturnValue>
						</TestStep>
						<TestStep Name="CheckReceivedSlaveFrame">
							<Action>
								<CallFunction>
									<Reference>CHECK_RESET_FAIL</Reference>
								</CallFunction>
							</Action>
							<ReturnValue>
								<OnSuccess>
									<Type>Success</Type>
									<Value Param0="c_CommFaultReason">Expected CommFaultReason ({0}) received</Value>
								</OnSuccess>
							</ReturnValue>
						</TestStep>
					</TestSteps>
				</TestCase>
				<TestCase Name="#1.22 RESET_Fail3" CaseId="22">
					<Description>
						<Purpose>The DuT shall detect an unknown command at the Master message in RESET and execute the RESET_FAIL3 transition.</Purpose>
						<PreCondition>-DuT is in RESET</PreCondition>
						<Action>-Master sends a frame with an unknown command (0x95)</Action>
						<PostCondition>-DuT shall execute the RESET_FAIL3 with CommFaultReason = INVALID_CMD
-Possible unused data of the slave frame shall be 0</PostCondition>
						<ProposalForSolution>-Check implementation of RESET_FAIL3</ProposalForSolution>
						<References>
							<Reference Chapter="Slave state machine RESET_FAIL3" Specification="ETG5100"/>
							<Reference Chapter="FSoE Slave Test Case 1.22" Specification="ETG7100"/>
						</References>
						<Mandatory>true</Mandatory>
					</Description>
					<CaseVariables>
						<Variable>
							<Name>c_tmpByte</Name>
							<Type>Byte</Type>
						</Variable>
						<Variable>
							<Name>c_unknownCmd</Name>
							<Type>Byte</Type>
						</Variable>
						<Variable>
							<Name>c_CommFaultReason</Name>
							<Type>Byte</Type>
						</Variable>
						<Variable>
							<Name>c_compareFrame</Name>
							<Type>FSoEFrame</Type>
						</Variable>
					</CaseVariables>
					<TestSteps>
						<TestStep Name="SetWD">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>t_watchdog</Destination>
										<Source>SafePara.Watchdog</Source>
									</SetVariable>
								</SetVariables>
							</Action>
						</TestStep>
						<TestStep Name="ResetDevice">
							<Action>
								<CallFunction>
									<Reference>RUN_DUT_TO_RESET</Reference>
								</CallFunction>
							</Action>
						</TestStep>
						<TestStep Name="SetVars">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>c_CommFaultReason</Destination>
										<Source>UNKNOWN_CMD</Source>
									</SetVariable>
									<SetVariable>
										<Destination>t_wdExpired</Destination>
										<Source>false</Source>
									</SetVariable>
									<SetVariable>
										<Destination>t_masterSessionId</Destination>
										<Source>1</Source>
									</SetVariable>
									<SetVariable>
										<Destination>c_unknownCmd</Destination>
										<Source>149</Source>
									</SetVariable>
								</SetVariables>
							</Action>
							<Informations2>
								<Information>
									<Type>Verbose</Type>
									<Value Param0="t_masterSessionId">MasterSessionId = 0x{0:x4}</Value>
								</Information>
								<Information>
									<Type>Output</Type>
									<Value Param0="c_unknownCmd">Unknown Command = 0x{0:x2}</Value>
								</Information>
							</Informations2>
						</TestStep>
						<TestStep Name="SetFrame">
							<Informations1>
								<Information>
									<Type>Verbose</Type>
									<Value Param0="t_masterSessionId" Param1="LastCrc" Param2="t_masterSeqNo" Param3="OldMasterCrc" Param4="c_unknownCmd" Param5="ConnData.ConnId">SetFrame(Command 0x{4:x2}, SafeData {0}, LastCrc 0x{1:x4}, ConnectionId 0x{5:x4},  SequenceNo 0x{2:x4}, OldCrc 0x{3:x4}, New {4})</Value>
								</Information>
							</Informations1>
							<Action>
								<SetFrame Name="t_masterFrame">
									<Command>
										<CommandVariable>c_unknownCmd</CommandVariable>
									</Command>
									<SafeData>
										<SafeDataVariable>t_masterSessionId</SafeDataVariable>
									</SafeData>
									<LastCRC>LastCrc</LastCRC>
									<ConnectionID>
										<ConnectionIdVariable>ConnData.ConnId</ConnectionIdVariable>
									</ConnectionID>
									<SequenceNo>t_masterSeqNo</SequenceNo>
									<OldCRC>OldMasterCrc</OldCRC>
									<New>false</New>
								</SetFrame>
							</Action>
						</TestStep>
						<TestStep Name="SendFrame">
							<Action>
								<SendFrame Name="t_masterFrame"/>
							</Action>
							<Informations2>
								<Information>
									<Type>Verbose</Type>
									<Value Param0="t_masterFrame.FrameData">Master Frame: {0}</Value>
								</Information>
							</Informations2>
							<ReturnValue>
								<OnFailure>
									<Type>Error</Type>
									<Value>Failed to send FSoE frame!</Value>
									<Id>256</Id>
								</OnFailure>
							</ReturnValue>
						</TestStep>
						<TestStep Name="CheckReceivedSlaveFrame">
							<Action>
								<CallFunction>
									<Reference>CHECK_RESET_FAIL</Reference>
								</CallFunction>
							</Action>
							<ReturnValue>
								<OnSuccess>
									<Type>Success</Type>
									<Value Param0="c_CommFaultReason">Expected CommFaultReason ({0}) received</Value>
								</OnSuccess>
							</ReturnValue>
						</TestStep>
					</TestSteps>
				</TestCase>
				<TestCase Name="#1.23 RESET_Fail3" CaseId="23">
					<Description>
						<Purpose>The DuT shall detect an unknown command at the Master message in RESET and execute the RESET_FAIL3 transition.</Purpose>
						<PreCondition>-DuT is in RESET</PreCondition>
						<Action>-Master sends a frame with an unknown command (0xFF)</Action>
						<PostCondition>-DuT shall execute the RESET_FAIL3 with CommFaultReason = INVALID_CMD
-Possible unused data of the slave frame shall be 0</PostCondition>
						<ProposalForSolution>-Check implementation of RESET_FAIL3</ProposalForSolution>
						<References>
							<Reference Chapter="Slave state machine RESET_FAIL3" Specification="ETG5100"/>
							<Reference Chapter="FSoE Slave Test Case 1.23" Specification="ETG7100"/>
						</References>
						<Mandatory>true</Mandatory>
					</Description>
					<CaseVariables>
						<Variable>
							<Name>c_tmpByte</Name>
							<Type>Byte</Type>
						</Variable>
						<Variable>
							<Name>c_unknownCmd</Name>
							<Type>Byte</Type>
						</Variable>
						<Variable>
							<Name>c_CommFaultReason</Name>
							<Type>Byte</Type>
						</Variable>
					</CaseVariables>
					<TestSteps>
						<TestStep Name="SetWD">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>t_watchdog</Destination>
										<Source>SafePara.Watchdog</Source>
									</SetVariable>
								</SetVariables>
							</Action>
						</TestStep>
						<TestStep Name="ResetDevice">
							<Action>
								<CallFunction>
									<Reference>RUN_DUT_TO_RESET</Reference>
								</CallFunction>
							</Action>
						</TestStep>
						<TestStep Name="SetVars">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>c_CommFaultReason</Destination>
										<Source>UNKNOWN_CMD</Source>
									</SetVariable>
									<SetVariable>
										<Destination>t_wdExpired</Destination>
										<Source>false</Source>
									</SetVariable>
									<SetVariable>
										<Destination>t_masterSessionId</Destination>
										<Source>1</Source>
									</SetVariable>
									<SetVariable>
										<Destination>c_unknownCmd</Destination>
										<Source>255</Source>
									</SetVariable>
								</SetVariables>
							</Action>
							<Informations2>
								<Information>
									<Type>Verbose</Type>
									<Value Param0="t_masterSessionId">MasterSessionId = 0x{0:x4}</Value>
								</Information>
								<Information>
									<Type>Output</Type>
									<Value Param0="c_unknownCmd">Unknown Command = 0x{0:x2}</Value>
								</Information>
							</Informations2>
						</TestStep>
						<TestStep Name="SetFrame">
							<Informations1>
								<Information>
									<Type>Verbose</Type>
									<Value Param0="t_masterSessionId" Param1="LastCrc" Param2="t_masterSeqNo" Param3="OldMasterCrc" Param4="c_unknownCmd" Param5="ConnData.ConnId">SetFrame(Command 0x{4:x2}, SafeData {0}, LastCrc 0x{1:x4}, ConnectionId 0x{5:x4},  SequenceNo 0x{2:x4}, OldCrc 0x{3:x4}, New {4})</Value>
								</Information>
							</Informations1>
							<Action>
								<SetFrame Name="t_masterFrame">
									<Command>
										<CommandVariable>c_unknownCmd</CommandVariable>
									</Command>
									<SafeData>
										<SafeDataVariable>t_masterSessionId</SafeDataVariable>
									</SafeData>
									<LastCRC>LastCrc</LastCRC>
									<ConnectionID>
										<ConnectionIdVariable>ConnData.ConnId</ConnectionIdVariable>
									</ConnectionID>
									<SequenceNo>t_masterSeqNo</SequenceNo>
									<OldCRC>OldMasterCrc</OldCRC>
									<New>false</New>
								</SetFrame>
							</Action>
						</TestStep>
						<TestStep Name="SendFrame">
							<Action>
								<SendFrame Name="t_masterFrame"/>
							</Action>
							<Informations2>
								<Information>
									<Type>Verbose</Type>
									<Value Param0="t_masterFrame.FrameData">Master Frame: {0}</Value>
								</Information>
							</Informations2>
							<ReturnValue>
								<OnFailure>
									<Type>Error</Type>
									<Value>Failed to send FSoE frame!</Value>
									<Id>256</Id>
								</OnFailure>
							</ReturnValue>
						</TestStep>
						<TestStep Name="CheckReceivedSlaveFrame">
							<Action>
								<CallFunction>
									<Reference>CHECK_RESET_FAIL</Reference>
								</CallFunction>
							</Action>
							<ReturnValue>
								<OnSuccess>
									<Type>Success</Type>
									<Value Param0="c_CommFaultReason">Expected CommFaultReason ({0}) received</Value>
								</OnSuccess>
							</ReturnValue>
						</TestStep>
					</TestSteps>
				</TestCase>
			</TestCases>
		</TestGroup>
		<TestGroup Name="#2 Session State" GroupId="2">
			<Comment>Tests the Session State</Comment>
			<TestCases>
				<TestCase Name="#2.1 SESSION_Ok" CaseId="1">
					<Comment>normaler Hochlauf</Comment>
					<CaseVariables>
						<Variable>
							<Name>c_tmpByte</Name>
							<Type>Byte</Type>
						</Variable>
					</CaseVariables>
					<TestSteps>
						<TestStep Name="SetWD">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>t_masterSessionId</Destination>
										<Source>1</Source>
									</SetVariable>
									<SetVariable>
										<Destination>t_watchdog</Destination>
										<Source>SafePara.Watchdog</Source>
									</SetVariable>
								</SetVariables>
							</Action>
						</TestStep>
						<TestStep Name="GotoSession">
							<Action>
								<CallFunction>
									<Reference>RUN_DUT_TO_SESSION</Reference>
								</CallFunction>
							</Action>
						</TestStep>
						<TestStep Name="SetConnectionData">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>t_connectionId</Destination>
										<Source>3</Source>
									</SetVariable>
									<SetVariable>
										<Destination DestinationIndex="0">t_connData</Destination>
										<Source>t_connectionId</Source>
									</SetVariable>
									<SetVariable>
										<Destination DestinationIndex="2">t_connData</Destination>
										<Source>ConnData.SlaveAddress</Source>
									</SetVariable>
								</SetVariables>
							</Action>
							<Informations2>
								<Information>
									<Type>Output</Type>
									<Value Param0="t_connectionId" Param1="ConnData.SlaveAddress" Param2="t_connData">ConnectionId: {0} (0x{0:x4}), Slave Address: {1} (0x{1:x4}), Connection Data {2}</Value>
								</Information>
							</Informations2>
						</TestStep>
						<TestStep Name="CallSessionOk">
							<Action>
								<CallFunction>
									<Reference>SESSION_OK</Reference>
								</CallFunction>
							</Action>
						</TestStep>
						<TestStep Name="ReceiveEvent">
							<Event>
								<ReceiveFrame>t_slaveFrame</ReceiveFrame>
							</Event>
							<Informations2>
								<Information>
									<Type>Verbose</Type>
									<Value Param0="t_slaveFrame.FrameData">Slave Frame: {0}</Value>
								</Information>
							</Informations2>
						</TestStep>
						<TestStep Name="CheckWatchdog">
							<Event>
								<WatchdogExpired>
									<Return>
										<Type>Error</Type>
										<Value Param0="ElapsedWD">Watchdog expired!  {0} ms</Value>
										<Id>5</Id>
									</Return>
								</WatchdogExpired>
							</Event>
						</TestStep>
						<TestStep Name="CheckSafeData">
							<Action>
								<IsSafeDataCorrect ReturnValue="safeDataCorrect">
									<Frame>t_slaveFrame</Frame>
									<ExpectedData>t_connData</ExpectedData>
									<BytesSent>4-BytesToBeSent</BytesSent>
								</IsSafeDataCorrect>
							</Action>
						</TestStep>
						<TestStep Name="CheckReceivedCrc">
							<Informations1>
								<Information>
									<Type>Verbose</Type>
									<Value Param0="t_slaveFrame.FrameData" Param1="LastCrc" Param2="t_slaveSeqNo" Param3="t_oldSlaveCrc" Param4="true">IsCrcCorrect(Frame {0}, LastCrc 0x{1:X4}, SeqNo {2}, OldCrc 0x{3:X4}, New {4})</Value>
								</Information>
							</Informations1>
							<Action>
								<IsCrcCorrect ReturnValue="crcCorrect">
									<Frame>t_slaveFrame</Frame>
									<LastCrc>LastCrc</LastCrc>
									<SequenceNo>t_slaveSeqNo</SequenceNo>
									<OldCrc>t_oldSlaveCrc</OldCrc>
									<New>true</New>
								</IsCrcCorrect>
							</Action>
							<ReturnValue>
								<OnFailure>
									<Type>Error</Type>
									<Value Param0="t_slaveFrame.Crc0">Invalid Crc0 reveived ({0:x})</Value>
									<Id>4</Id>
								</OnFailure>
							</ReturnValue>
						</TestStep>
						<TestStep Name="CheckConnectionCondition">
							<Compares>
								<Compare>
									<Condition>
										<Value1>t_slaveFrame.Command</Value1>
										<Operator>Equal</Operator>
										<Value2>Connection</Value2>
									</Condition>
									<Condition>
										<Value1>BytesToBeSent</Value1>
										<Operator>Equal</Operator>
										<Value2>0</Value2>
									</Condition>
									<Condition>
										<Value1>t_slaveFrame.ConnId</Value1>
										<Operator>Equal</Operator>
										<Value2>t_connectionId</Value2>
									</Condition>
									<Condition>
										<Value1>safeDataCorrect</Value1>
										<Operator>Equal</Operator>
										<Value2>true</Value2>
									</Condition>
									<Condition>
										<Value1>crcCorrect</Value1>
										<Operator>Equal</Operator>
										<Value2>true</Value2>
									</Condition>
									<Statement>
										<Return>
											<Type>Success</Type>
											<Value>DUT State: Connection</Value>
										</Return>
									</Statement>
								</Compare>
								<Compare>
									<Condition>
										<Value1>t_slaveFrame.Command</Value1>
										<Operator>Equal</Operator>
										<Value2>Connection</Value2>
									</Condition>
									<Condition>
										<Value1>t_slaveFrame.ConnId</Value1>
										<Operator>Equal</Operator>
										<Value2>t_connectionId</Value2>
									</Condition>
									<Condition>
										<Value1>safeDataCorrect</Value1>
										<Operator>Equal</Operator>
										<Value2>true</Value2>
									</Condition>
									<Condition>
										<Value1>crcCorrect</Value1>
										<Operator>Equal</Operator>
										<Value2>false</Value2>
									</Condition>
									<Statement>
										<Return>
											<Type>Error</Type>
											<Value Param0="t_slaveSeqNo" Param1="LastCrc" Param2="t_oldSlaveCrc">Invalid Crc received: SlaveSeqNo {0}, LastCrc 0x{1:X4}, OldCrc 0x{2:X4} </Value>
											<Id>4</Id>
										</Return>
									</Statement>
								</Compare>
								<Compare>
									<Condition>
										<Value1>t_slaveFrame.Command</Value1>
										<Operator>Equal</Operator>
										<Value2>Connection</Value2>
									</Condition>
									<Condition>
										<Value1>t_slaveFrame.ConnId</Value1>
										<Operator>Equal</Operator>
										<Value2>t_connectionId</Value2>
									</Condition>
									<Condition>
										<Value1>safeDataCorrect</Value1>
										<Operator>Equal</Operator>
										<Value2>false</Value2>
									</Condition>
									<Statement>
										<Return>
											<Type>Error</Type>
											<Value Param0="t_slaveFrame.ConnId" Param1="t_connectionId" Param2="safeDataCorrect">FrameConnId: {0:x4}, Connection Data{1:x4}, Safedata correct? {2}, Invalid SafeData received</Value>
											<Id>7</Id>
										</Return>
									</Statement>
								</Compare>
								<Compare>
									<Condition>
										<Value1>t_slaveFrame.Command</Value1>
										<Operator>Equal</Operator>
										<Value2>Connection</Value2>
									</Condition>
									<Condition>
										<Value1>t_slaveFrame.ConnId</Value1>
										<Operator>NotEqual</Operator>
										<Value2>t_connectionId</Value2>
									</Condition>
									<Statement>
										<Return>
											<Type>Error</Type>
											<Value>Invalid Connection Id received</Value>
											<Id>3</Id>
										</Return>
									</Statement>
								</Compare>
								<Compare>
									<Condition>
										<Value1>t_slaveFrame.Command</Value1>
										<Operator>Equal</Operator>
										<Value2>Connection</Value2>
									</Condition>
									<Condition>
										<Value1>BytesToBeSent</Value1>
										<Operator>NotEqual</Operator>
										<Value2>0</Value2>
									</Condition>
									<Condition>
										<Value1>t_slaveFrame.ConnId</Value1>
										<Operator>Equal</Operator>
										<Value2>t_connectionId</Value2>
									</Condition>
									<Condition>
										<Value1>safeDataCorrect</Value1>
										<Operator>Equal</Operator>
										<Value2>true</Value2>
									</Condition>
									<Condition>
										<Value1>crcCorrect</Value1>
										<Operator>Equal</Operator>
										<Value2>true</Value2>
									</Condition>
									<Statement>
										<CallFunction>CONN_STAY1</CallFunction>
									</Statement>
									<Statement>
										<GotoStep>ReceiveEvent</GotoStep>
									</Statement>
								</Compare>
								<Compare>
									<Condition>
										<Value1>t_slaveFrame.Command</Value1>
										<Operator>Equal</Operator>
										<Value2>Reset</Value2>
									</Condition>
									<Statement>
										<CallFunction>GET_COMM_FAULT_REASON</CallFunction>
									</Statement>
									<Statement>
										<Return>
											<Type>Error</Type>
											<Value Param0="t_commFaultReason">Reset Cmd received , CommFaultReason: {0}</Value>
										</Return>
									</Statement>
								</Compare>
								<Compare>
									<Condition>
										<Value1>t_slaveFrame.Command</Value1>
										<Operator>Equal</Operator>
										<Value2>Session</Value2>
									</Condition>
									<Statement>
										<Return>
											<Type>Error</Type>
											<Value>Invalid CMD (Session) received</Value>
											<Id>1</Id>
										</Return>
									</Statement>
								</Compare>
								<Compare>
									<Condition>
										<Value1>t_slaveFrame.Command</Value1>
										<Operator>Equal</Operator>
										<Value2>Parameter</Value2>
									</Condition>
									<Statement>
										<Return>
											<Type>Error</Type>
											<Value>Invalid CMD (Parameter) received</Value>
											<Id>1</Id>
										</Return>
									</Statement>
								</Compare>
								<Compare>
									<Condition>
										<Value1>t_slaveFrame.Command</Value1>
										<Operator>Equal</Operator>
										<Value2>ProcessData</Value2>
									</Condition>
									<Statement>
										<Return>
											<Type>Error</Type>
											<Value>Invalid CMD (ProcessData) received</Value>
											<Id>1</Id>
										</Return>
									</Statement>
								</Compare>
								<Compare>
									<Condition>
										<Value1>t_slaveFrame.Command</Value1>
										<Operator>Equal</Operator>
										<Value2>FailSafeData</Value2>
									</Condition>
									<Statement>
										<Return>
											<Type>Error</Type>
											<Value>Invalid CMD (FailSafeData) received</Value>
											<Id>1</Id>
										</Return>
									</Statement>
								</Compare>
								<Compare>
									<Condition>
										<Value1>t_slaveFrame.Command</Value1>
										<Operator>NotEqual</Operator>
										<Value2>Reset</Value2>
									</Condition>
									<Condition>
										<Value1>t_slaveFrame.Command</Value1>
										<Operator>NotEqual</Operator>
										<Value2>Session</Value2>
									</Condition>
									<Condition>
										<Value1>t_slaveFrame.Command</Value1>
										<Operator>NotEqual</Operator>
										<Value2>Connection</Value2>
									</Condition>
									<Condition>
										<Value1>t_slaveFrame.Command</Value1>
										<Operator>NotEqual</Operator>
										<Value2>Parameter</Value2>
									</Condition>
									<Condition>
										<Value1>t_slaveFrame.Command</Value1>
										<Operator>NotEqual</Operator>
										<Value2>ProcessData</Value2>
									</Condition>
									<Condition>
										<Value1>t_slaveFrame.Command</Value1>
										<Operator>NotEqual</Operator>
										<Value2>FailSafeData</Value2>
									</Condition>
									<Statement>
										<Return>
											<Type>Error</Type>
											<Value>Unknown CMD received</Value>
											<Id>2</Id>
										</Return>
									</Statement>
								</Compare>
								<Compare>
									<Condition>
										<Value1>1</Value1>
										<Operator>Equal</Operator>
										<Value2>1</Value2>
									</Condition>
									<Statement>
										<Return>
											<Type>Error</Type>
											<Value>General state machine error!</Value>
										</Return>
									</Statement>
								</Compare>
							</Compares>
						</TestStep>
					</TestSteps>
				</TestCase>
				<TestCase Name="#2.2 SESSION_Stay1" CaseId="2">
					<Comment>normaler Hochlauf, mehrere Zyklen</Comment>
					<CaseVariables>
						<Variable>
							<Name>c_tmpByte</Name>
							<Type>Byte</Type>
						</Variable>
					</CaseVariables>
					<TestSteps>
						<TestStep Name="CheckSafeDataLength">
							<Compares>
								<Compare>
									<Condition>
										<Value1>SafeDataLength</Value1>
										<Operator>GreaterOrEqual</Operator>
										<Value2>2</Value2>
									</Condition>
									<Statement>
										<Return>
											<Type>SkippedCase</Type>
											<Value>Length of SafeData >= 2 ==> skip TestCase </Value>
										</Return>
									</Statement>
								</Compare>
							</Compares>
						</TestStep>
						<TestStep Name="SetVariables">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>SecondSessionFrameSent</Destination>
										<Source>false</Source>
									</SetVariable>
									<SetVariable>
										<Destination>t_masterSessionId</Destination>
										<Source>1</Source>
									</SetVariable>
									<SetVariable>
										<Destination>t_watchdog</Destination>
										<Source>SafePara.Watchdog</Source>
									</SetVariable>
									<SetVariable>
										<Destination>t_expectedConnId</Destination>
										<Source>0</Source>
									</SetVariable>
									<SetVariable>
										<Destination>t_connectionId</Destination>
										<Source>3</Source>
									</SetVariable>
									<SetVariable>
										<Destination DestinationIndex="0">t_connData</Destination>
										<Source>t_connectionId</Source>
									</SetVariable>
									<SetVariable>
										<Destination DestinationIndex="2">t_connData</Destination>
										<Source>ConnData.SlaveAddress</Source>
									</SetVariable>
								</SetVariables>
							</Action>
							<Compares>
								<Compare>
									<Condition>
										<Value1>SafeDataLength</Value1>
										<Operator>NotEqual</Operator>
										<Value2>1</Value2>
									</Condition>
									<Statement>
										<SetVariables>
											<SetVariable>
												<Destination>SecondSessionFrameSent</Destination>
												<Source>true</Source>
											</SetVariable>
										</SetVariables>
									</Statement>
								</Compare>
							</Compares>
							<Informations2>
								<Information>
									<Type>Output</Type>
									<Value Param0="t_connectionId" Param1="ConnData.SlaveAddress" Param2="t_connData">ConnectionId: {0} (0x{0:x4}), Slave Address: {1} (0x{1:x4}), Connection Data {2}</Value>
								</Information>
							</Informations2>
						</TestStep>
						<TestStep Name="GoToReset">
							<Action>
								<CallFunction>
									<Reference>RUN_DUT_TO_RESET</Reference>
								</CallFunction>
							</Action>
						</TestStep>
						<TestStep Name="CallResetOk">
							<Action>
								<CallFunction>
									<Reference>RESET_OK</Reference>
								</CallFunction>
							</Action>
						</TestStep>
						<TestStep Name="ReceiveEvent">
							<Event>
								<ReceiveFrame>t_slaveFrame</ReceiveFrame>
							</Event>
							<Informations2>
								<Information>
									<Type>Verbose</Type>
									<Value Param0="t_slaveFrame.FrameData">Slave Frame: {0}</Value>
								</Information>
							</Informations2>
						</TestStep>
						<TestStep Name="CheckWatchdog">
							<Event>
								<WatchdogExpired>
									<Return>
										<Type>Error</Type>
										<Value Param0="ElapsedWD">Watchdog expired!  {0} ms</Value>
										<Id>5</Id>
									</Return>
								</WatchdogExpired>
							</Event>
						</TestStep>
						<TestStep Name="CheckReceivedCrc">
							<Informations1>
								<Information>
									<Type>Verbose</Type>
									<Value Param0="t_slaveFrame.FrameData" Param1="LastCrc" Param2="t_slaveSeqNo" Param3="t_oldSlaveCrc" Param4="true">IsCrcCorrect(Frame {0}, LastCrc 0x{1:X4}, SeqNo {2}, OldCrc 0x{3:X4}, New {4})</Value>
								</Information>
							</Informations1>
							<Action>
								<IsCrcCorrect ReturnValue="crcCorrect">
									<Frame>t_slaveFrame</Frame>
									<LastCrc>LastCrc</LastCrc>
									<SequenceNo>t_slaveSeqNo</SequenceNo>
									<OldCrc>t_oldSlaveCrc</OldCrc>
									<New>true</New>
								</IsCrcCorrect>
							</Action>
						</TestStep>
						<TestStep Name="CheckSessionConditions">
							<Compares>
								<Compare>
									<Condition>
										<Value1>t_slaveFrame.ConnId</Value1>
										<Operator>NotEqual</Operator>
										<Value2>t_expectedConnId</Value2>
									</Condition>
									<Statement>
										<Return>
											<Type>Error</Type>
											<Value Param0="t_slaveFrame.ConnId">Invalid ConnId received  {0}, expected 0</Value>
											<Id>3</Id>
										</Return>
									</Statement>
								</Compare>
								<Compare>
									<Condition>
										<Value1>t_slaveFrame.Command</Value1>
										<Operator>Equal</Operator>
										<Value2>Session</Value2>
									</Condition>
									<Condition>
										<Value1>BytesToBeSent</Value1>
										<Operator>Equal</Operator>
										<Value2>0</Value2>
									</Condition>
									<Condition>
										<Value1>crcCorrect</Value1>
										<Operator>Equal</Operator>
										<Value2>true</Value2>
									</Condition>
									<Statement>
										<CallFunction>CHECK_REMAINING_SAFE_DATA_IN_SESSION</CallFunction>
									</Statement>
									<Statement>
										<Return>
											<Type>Success</Type>
											<Value>DUT State: Session</Value>
										</Return>
									</Statement>
								</Compare>
								<Compare>
									<Condition>
										<Value1>t_slaveFrame.Command</Value1>
										<Operator>Equal</Operator>
										<Value2>Session</Value2>
									</Condition>
									<Condition>
										<Value1>crcCorrect</Value1>
										<Operator>Equal</Operator>
										<Value2>false</Value2>
									</Condition>
									<Condition>
										<Value1>SecondSessionFrameSent</Value1>
										<Operator>Equal</Operator>
										<Value2>true</Value2>
									</Condition>
									<Statement>
										<Return>
											<Type>Error</Type>
											<Value>Invalid Crc received</Value>
											<Id>4</Id>
										</Return>
									</Statement>
								</Compare>
								<Compare>
									<Condition>
										<Value1>t_slaveFrame.Command</Value1>
										<Operator>Equal</Operator>
										<Value2>Session</Value2>
									</Condition>
									<Condition>
										<Value1>crcCorrect</Value1>
										<Operator>Equal</Operator>
										<Value2>false</Value2>
									</Condition>
									<Condition>
										<Value1>SecondSessionFrameSent</Value1>
										<Operator>Equal</Operator>
										<Value2>false</Value2>
									</Condition>
									<Statement>
										<CallFunction>SESSION_STAY2</CallFunction>
									</Statement>
									<Statement>
										<GotoStep>ReceiveEvent</GotoStep>
									</Statement>
								</Compare>
								<Compare>
									<Condition>
										<Value1>t_slaveFrame.Command</Value1>
										<Operator>Equal</Operator>
										<Value2>Session</Value2>
									</Condition>
									<Condition>
										<Value1>BytesToBeSent</Value1>
										<Operator>NotEqual</Operator>
										<Value2>0</Value2>
									</Condition>
									<Condition>
										<Value1>crcCorrect</Value1>
										<Operator>Equal</Operator>
										<Value2>true</Value2>
									</Condition>
									<Statement>
										<CallFunction>SESSION_STAY1</CallFunction>
									</Statement>
									<Statement>
										<SetVariables>
											<SetVariable>
												<Destination>t_index</Destination>
												<Source>t_index+1</Source>
											</SetVariable>
										</SetVariables>
									</Statement>
									<Statement>
										<CallFunction>CHECK_REMAINING_SAFE_DATA_IN_SESSION</CallFunction>
									</Statement>
									<Statement>
										<GotoStep>ReceiveEvent</GotoStep>
									</Statement>
								</Compare>
								<Compare>
									<Condition>
										<Value1>t_slaveFrame.Command</Value1>
										<Operator>Equal</Operator>
										<Value2>Reset</Value2>
									</Condition>
									<Statement>
										<CallFunction>GET_COMM_FAULT_REASON</CallFunction>
									</Statement>
									<Statement>
										<Return>
											<Type>Error</Type>
											<Value Param0="t_commFaultReason">Reset Cmd received , CommFaultReason: {0}</Value>
										</Return>
									</Statement>
								</Compare>
								<Compare>
									<Condition>
										<Value1>t_slaveFrame.Command</Value1>
										<Operator>Equal</Operator>
										<Value2>Connection</Value2>
									</Condition>
									<Statement>
										<Return>
											<Type>Error</Type>
											<Value>Invalid CMD (Connection) received</Value>
										</Return>
									</Statement>
								</Compare>
								<Compare>
									<Condition>
										<Value1>t_slaveFrame.Command</Value1>
										<Operator>Equal</Operator>
										<Value2>Parameter</Value2>
									</Condition>
									<Statement>
										<Return>
											<Type>Error</Type>
											<Value>Invalid CMD (Parameter) received</Value>
											<Id>1</Id>
										</Return>
									</Statement>
								</Compare>
								<Compare>
									<Condition>
										<Value1>t_slaveFrame.Command</Value1>
										<Operator>Equal</Operator>
										<Value2>ProcessData</Value2>
									</Condition>
									<Statement>
										<Return>
											<Type>Error</Type>
											<Value>Invalid CMD (ProcessData) received</Value>
											<Id>1</Id>
										</Return>
									</Statement>
								</Compare>
								<Compare>
									<Condition>
										<Value1>t_slaveFrame.Command</Value1>
										<Operator>Equal</Operator>
										<Value2>FailSafeData</Value2>
									</Condition>
									<Statement>
										<Return>
											<Type>Error</Type>
											<Value>Invalid CMD (FailSafeData) received</Value>
											<Id>1</Id>
										</Return>
									</Statement>
								</Compare>
								<Compare>
									<Condition>
										<Value1>t_slaveFrame.Command</Value1>
										<Operator>NotEqual</Operator>
										<Value2>Reset</Value2>
									</Condition>
									<Condition>
										<Value1>t_slaveFrame.Command</Value1>
										<Operator>NotEqual</Operator>
										<Value2>Session</Value2>
									</Condition>
									<Condition>
										<Value1>t_slaveFrame.Command</Value1>
										<Operator>NotEqual</Operator>
										<Value2>Connection</Value2>
									</Condition>
									<Condition>
										<Value1>t_slaveFrame.Command</Value1>
										<Operator>NotEqual</Operator>
										<Value2>Parameter</Value2>
									</Condition>
									<Condition>
										<Value1>t_slaveFrame.Command</Value1>
										<Operator>NotEqual</Operator>
										<Value2>ProcessData</Value2>
									</Condition>
									<Condition>
										<Value1>t_slaveFrame.Command</Value1>
										<Operator>NotEqual</Operator>
										<Value2>FailSafeData</Value2>
									</Condition>
									<Statement>
										<Return>
											<Type>Error</Type>
											<Value>Unknown CMD received</Value>
											<Id>2</Id>
										</Return>
									</Statement>
								</Compare>
							</Compares>
						</TestStep>
					</TestSteps>
				</TestCase>
				<TestCase Name="#2.3 SESSION_Stay2" CaseId="3">
					<Comment>Rücksetzen vom Master in den gleichen State</Comment>
					<CaseVariables>
						<Variable>
							<Name>c_tmpByte</Name>
							<Type>Byte</Type>
						</Variable>
						<Variable>
							<Name>c_sessionId1_Slave</Name>
							<Type>UInt16</Type>
						</Variable>
					</CaseVariables>
					<TestSteps>
						<TestStep Name="SetIndex">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>t_index</Destination>
										<Source>0</Source>
									</SetVariable>
								</SetVariables>
							</Action>
						</TestStep>
						<TestStep Name="SetVariables">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>SecondSessionFrameSent</Destination>
										<Source>false</Source>
									</SetVariable>
									<SetVariable>
										<Destination>t_masterSessionId</Destination>
										<Source>1</Source>
									</SetVariable>
									<SetVariable>
										<Destination>t_watchdog</Destination>
										<Source>SafePara.Watchdog</Source>
									</SetVariable>
									<SetVariable>
										<Destination>t_expectedConnId</Destination>
										<Source>0</Source>
									</SetVariable>
									<SetVariable>
										<Destination>t_connectionId</Destination>
										<Source>3</Source>
									</SetVariable>
									<SetVariable>
										<Destination DestinationIndex="0">t_connData</Destination>
										<Source>t_connectionId</Source>
									</SetVariable>
									<SetVariable>
										<Destination DestinationIndex="2">t_connData</Destination>
										<Source>ConnData.SlaveAddress</Source>
									</SetVariable>
								</SetVariables>
							</Action>
							<Compares>
								<Compare>
									<Condition>
										<Value1>SafeDataLength</Value1>
										<Operator>NotEqual</Operator>
										<Value2>1</Value2>
									</Condition>
									<Statement>
										<SetVariables>
											<SetVariable>
												<Destination>SecondSessionFrameSent</Destination>
												<Source>true</Source>
											</SetVariable>
										</SetVariables>
									</Statement>
								</Compare>
							</Compares>
							<Informations2>
								<Information>
									<Type>Output</Type>
									<Value Param0="t_connectionId" Param1="ConnData.SlaveAddress" Param2="t_connData">ConnectionId: {0} (0x{0:x4}), Slave Address: {1} (0x{1:x4}), Connection Data {2}</Value>
								</Information>
							</Informations2>
						</TestStep>
						<TestStep Name="GoToSession">
							<Action>
								<CallFunction>
									<Reference>RUN_DUT_TO_SESSION</Reference>
								</CallFunction>
							</Action>
						</TestStep>
						<TestStep Name="StoreSlaveSessionId1">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>c_sessionId1_Slave</Destination>
										<Source>t_slaveSessionId</Source>
									</SetVariable>
									<SetVariable>
										<Destination>t_index</Destination>
										<Source>0</Source>
									</SetVariable>
								</SetVariables>
							</Action>
							<Informations2>
								<Information>
									<Type>Output</Type>
									<Value Param0="t_slaveSessionId">Slave SessionId1: 0x{0:x4}</Value>
								</Information>
							</Informations2>
						</TestStep>
						<TestStep Name="ResetSecondFrameSent">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>SecondSessionFrameSent</Destination>
										<Source>false</Source>
									</SetVariable>
								</SetVariables>
							</Action>
							<Compares>
								<Compare>
									<Condition>
										<Value1>SafeDataLength</Value1>
										<Operator>NotEqual</Operator>
										<Value2>1</Value2>
									</Condition>
									<Statement>
										<SetVariables>
											<SetVariable>
												<Destination>SecondSessionFrameSent</Destination>
												<Source>true</Source>
											</SetVariable>
										</SetVariables>
									</Statement>
								</Compare>
							</Compares>
						</TestStep>
						<TestStep Name="SetMasterSeqNo">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>t_masterSeqNo</Destination>
										<Source>1</Source>
									</SetVariable>
								</SetVariables>
							</Action>
						</TestStep>
						<TestStep Name="CreateNewSessionId">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>t_masterSessionId</Destination>
										<Source>2</Source>
									</SetVariable>
								</SetVariables>
							</Action>
							<Informations2>
								<Information>
									<Type>Output</Type>
									<Value Param0="t_masterSessionId">MasterSessionId: {0} (0x{0:x4})</Value>
								</Information>
							</Informations2>
						</TestStep>
						<TestStep Name="SetCrcs">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>LastCrc</Destination>
										<Source>0</Source>
									</SetVariable>
									<SetVariable>
										<Destination>OldMasterCrc</Destination>
										<Source>0</Source>
									</SetVariable>
									<SetVariable>
										<Destination>t_oldSlaveCrc</Destination>
										<Source>0</Source>
									</SetVariable>
									<SetVariable>
										<Destination>t_masterSeqNo</Destination>
										<Source>1</Source>
									</SetVariable>
									<SetVariable>
										<Destination>t_slaveSeqNo</Destination>
										<Source>1</Source>
									</SetVariable>
								</SetVariables>
							</Action>
							<Informations2>
								<Information>
									<Type>Output</Type>
									<Value Param0="LastCrc">LastCrc:  (0x{0:x4})</Value>
								</Information>
							</Informations2>
						</TestStep>
						<TestStep Name="CallResetOk">
							<Action>
								<CallFunction>
									<Reference>RESET_OK</Reference>
								</CallFunction>
							</Action>
						</TestStep>
						<TestStep Name="ReceiveEvent">
							<Event>
								<ReceiveFrame>t_slaveFrame</ReceiveFrame>
							</Event>
							<Informations2>
								<Information>
									<Type>Verbose</Type>
									<Value Param0="t_slaveFrame.FrameData">Slave Frame: {0}</Value>
								</Information>
							</Informations2>
						</TestStep>
						<TestStep Name="CheckWatchdog">
							<Event>
								<WatchdogExpired>
									<Return>
										<Type>Error</Type>
										<Value Param0="ElapsedWD">Watchdog expired!  {0} ms</Value>
										<Id>5</Id>
									</Return>
								</WatchdogExpired>
							</Event>
						</TestStep>
						<TestStep Name="CheckReceivedCrcInSession">
							<Informations1>
								<Information>
									<Type>Verbose</Type>
									<Value Param0="t_slaveFrame.FrameData" Param1="LastCrc" Param2="t_slaveSeqNo" Param3="t_oldSlaveCrc" Param4="true">IsCrcCorrect(Frame {0}, LastCrc 0x{1:X4}, SeqNo {2}, OldCrc 0x{3:X4}, New {4})</Value>
								</Information>
							</Informations1>
							<Action>
								<IsCrcCorrect ReturnValue="crcCorrect">
									<Frame>t_slaveFrame</Frame>
									<LastCrc>LastCrc</LastCrc>
									<SequenceNo>t_slaveSeqNo</SequenceNo>
									<OldCrc>t_oldSlaveCrc</OldCrc>
									<New>true</New>
								</IsCrcCorrect>
							</Action>
							<Informations2>
								<Information>
									<Type>Verbose</Type>
									<Value Param0="crcCorrect" Param1="LastCrc" Param2="t_slaveSeqNo" Param3="t_oldSlaveCrc">= {0}  LastCrc 0x{1:X4}, SeqNo {2}, OldCrc 0x{3:X4}</Value>
								</Information>
							</Informations2>
						</TestStep>
						<TestStep Name="CheckSessionConditions">
							<Compares>
								<Compare>
									<Condition>
										<Value1>t_slaveFrame.ConnId</Value1>
										<Operator>NotEqual</Operator>
										<Value2>t_expectedConnId</Value2>
									</Condition>
									<Statement>
										<Return>
											<Type>Error</Type>
											<Value Param0="t_slaveFrame.ConnId">Invalid ConnId received  {0}, expected 0</Value>
											<Id>3</Id>
										</Return>
									</Statement>
								</Compare>
								<Compare>
									<Condition>
										<Value1>t_slaveFrame.Command</Value1>
										<Operator>Equal</Operator>
										<Value2>Session</Value2>
									</Condition>
									<Condition>
										<Value1>BytesToBeSent</Value1>
										<Operator>Equal</Operator>
										<Value2>0</Value2>
									</Condition>
									<Condition>
										<Value1>crcCorrect</Value1>
										<Operator>Equal</Operator>
										<Value2>true</Value2>
									</Condition>
									<Statement>
										<SetVariables>
											<SetVariable>
												<Destination DestinationIndex="t_index">t_slaveSessionId</Destination>
												<Source>t_slaveFrame.SafeData</Source>
											</SetVariable>
										</SetVariables>
									</Statement>
									<Statement>
										<CallFunction>CHECK_REMAINING_SAFE_DATA_IN_SESSION</CallFunction>
									</Statement>
									<Statement>
										<GotoStep>CompareSlaveSessionIds</GotoStep>
									</Statement>
								</Compare>
								<Compare>
									<Condition>
										<Value1>t_slaveFrame.Command</Value1>
										<Operator>Equal</Operator>
										<Value2>Session</Value2>
									</Condition>
									<Condition>
										<Value1>crcCorrect</Value1>
										<Operator>Equal</Operator>
										<Value2>false</Value2>
									</Condition>
									<Condition>
										<Value1>SecondSessionFrameSent</Value1>
										<Operator>Equal</Operator>
										<Value2>true</Value2>
									</Condition>
									<Statement>
										<Return>
											<Type>Error</Type>
											<Value>Invalid Crc received</Value>
											<Id>4</Id>
										</Return>
									</Statement>
								</Compare>
								<Compare>
									<Condition>
										<Value1>t_slaveFrame.Command</Value1>
										<Operator>Equal</Operator>
										<Value2>Session</Value2>
									</Condition>
									<Condition>
										<Value1>crcCorrect</Value1>
										<Operator>Equal</Operator>
										<Value2>false</Value2>
									</Condition>
									<Condition>
										<Value1>SecondSessionFrameSent</Value1>
										<Operator>Equal</Operator>
										<Value2>false</Value2>
									</Condition>
									<Statement>
										<CallFunction>SESSION_STAY2</CallFunction>
									</Statement>
									<Statement>
										<GotoStep>ReceiveEvent</GotoStep>
									</Statement>
								</Compare>
								<Compare>
									<Condition>
										<Value1>t_slaveFrame.Command</Value1>
										<Operator>Equal</Operator>
										<Value2>Session</Value2>
									</Condition>
									<Condition>
										<Value1>BytesToBeSent</Value1>
										<Operator>NotEqual</Operator>
										<Value2>0</Value2>
									</Condition>
									<Condition>
										<Value1>crcCorrect</Value1>
										<Operator>Equal</Operator>
										<Value2>true</Value2>
									</Condition>
									<Statement>
										<SetVariables>
											<SetVariable>
												<Destination DestinationIndex="t_index">t_slaveSessionId</Destination>
												<Source>t_slaveFrame.SafeData</Source>
											</SetVariable>
										</SetVariables>
									</Statement>
									<Statement>
										<CallFunction>SESSION_STAY1</CallFunction>
									</Statement>
									<Statement>
										<SetVariables>
											<SetVariable>
												<Destination>t_index</Destination>
												<Source>t_index+1</Source>
											</SetVariable>
										</SetVariables>
									</Statement>
									<Statement>
										<CallFunction>CHECK_REMAINING_SAFE_DATA_IN_SESSION</CallFunction>
									</Statement>
									<Statement>
										<GotoStep>ReceiveEvent</GotoStep>
									</Statement>
								</Compare>
								<Compare>
									<Condition>
										<Value1>t_slaveFrame.Command</Value1>
										<Operator>Equal</Operator>
										<Value2>Reset</Value2>
									</Condition>
									<Statement>
										<CallFunction>GET_COMM_FAULT_REASON</CallFunction>
									</Statement>
									<Statement>
										<Return>
											<Type>Error</Type>
											<Value Param0="t_slaveFrame.FrameData[1]" Param1="t_commFaultReason">Invalid CMD(RESET) received, CommFaultReason: {1} </Value>
										</Return>
									</Statement>
								</Compare>
								<Compare>
									<Condition>
										<Value1>t_slaveFrame.Command</Value1>
										<Operator>Equal</Operator>
										<Value2>Connection</Value2>
									</Condition>
									<Statement>
										<Return>
											<Type>Error</Type>
											<Value>Invalid CMD (Connection) received</Value>
										</Return>
									</Statement>
								</Compare>
								<Compare>
									<Condition>
										<Value1>t_slaveFrame.Command</Value1>
										<Operator>Equal</Operator>
										<Value2>Parameter</Value2>
									</Condition>
									<Statement>
										<Return>
											<Type>Error</Type>
											<Value>Invalid CMD (Parameter) received</Value>
											<Id>1</Id>
										</Return>
									</Statement>
								</Compare>
								<Compare>
									<Condition>
										<Value1>t_slaveFrame.Command</Value1>
										<Operator>Equal</Operator>
										<Value2>ProcessData</Value2>
									</Condition>
									<Statement>
										<Return>
											<Type>Error</Type>
											<Value>Invalid CMD (ProcessData) received</Value>
											<Id>1</Id>
										</Return>
									</Statement>
								</Compare>
								<Compare>
									<Condition>
										<Value1>t_slaveFrame.Command</Value1>
										<Operator>Equal</Operator>
										<Value2>FailSafeData</Value2>
									</Condition>
									<Statement>
										<Return>
											<Type>Error</Type>
											<Value>Invalid CMD (FailSafeData) received</Value>
											<Id>1</Id>
										</Return>
									</Statement>
								</Compare>
								<Compare>
									<Condition>
										<Value1>t_slaveFrame.Command</Value1>
										<Operator>NotEqual</Operator>
										<Value2>Reset</Value2>
									</Condition>
									<Condition>
										<Value1>t_slaveFrame.Command</Value1>
										<Operator>NotEqual</Operator>
										<Value2>Session</Value2>
									</Condition>
									<Condition>
										<Value1>t_slaveFrame.Command</Value1>
										<Operator>NotEqual</Operator>
										<Value2>Connection</Value2>
									</Condition>
									<Condition>
										<Value1>t_slaveFrame.Command</Value1>
										<Operator>NotEqual</Operator>
										<Value2>Parameter</Value2>
									</Condition>
									<Condition>
										<Value1>t_slaveFrame.Command</Value1>
										<Operator>NotEqual</Operator>
										<Value2>ProcessData</Value2>
									</Condition>
									<Condition>
										<Value1>t_slaveFrame.Command</Value1>
										<Operator>NotEqual</Operator>
										<Value2>FailSafeData</Value2>
									</Condition>
									<Statement>
										<Return>
											<Type>Error</Type>
											<Value>Unknown CMD received</Value>
											<Id>2</Id>
										</Return>
									</Statement>
								</Compare>
							</Compares>
						</TestStep>
						<TestStep Name="CompareSlaveSessionIds">
							<Compares>
								<Compare>
									<Condition>
										<Value1>c_sessionId1_Slave</Value1>
										<Operator>NotEqual</Operator>
										<Value2>t_slaveSessionId</Value2>
									</Condition>
									<Statement>
										<Return>
											<Type>Success</Type>
											<Value>DUT State: Session</Value>
										</Return>
									</Statement>
								</Compare>
								<Compare>
									<Condition>
										<Value1>c_sessionId1_Slave</Value1>
										<Operator>Equal</Operator>
										<Value2>t_slaveSessionId</Value2>
									</Condition>
									<Statement>
										<Return>
											<Type>Error</Type>
											<Value Param0="c_sessionId1_Slave" Param1="t_slaveSessionId">Slave SessionId1 (0x{0:x4}) = Slave SessionId2 (0x{1:x4})</Value>
										</Return>
									</Statement>
								</Compare>
							</Compares>
							<Informations2>
								<Information>
									<Type>Output</Type>
									<Value Param0="t_slaveSessionId">Slave SessionId2: 0x{0:x4}</Value>
								</Information>
							</Informations2>
						</TestStep>
					</TestSteps>
				</TestCase>
				<TestCase Name="#2.4 SESSION_Fail1" CaseId="4">
					<Comment>Falsche CRC_0 (+1)</Comment>
					<CaseVariables>
						<Variable>
							<Name>c_crcIndex</Name>
							<Type>Int32</Type>
						</Variable>
						<Variable>
							<Name>c_CommFaultReason</Name>
							<Type>Byte</Type>
						</Variable>
						<Variable>
							<Name>c_tmpByte</Name>
							<Type>Byte</Type>
						</Variable>
					</CaseVariables>
					<TestSteps>
						<TestStep Name="SetVariables">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>c_CommFaultReason</Destination>
										<Source>INVALID_CRC</Source>
									</SetVariable>
									<SetVariable>
										<Destination>c_tmpByte</Destination>
										<Source>0</Source>
									</SetVariable>
									<SetVariable>
										<Destination>t_watchdog</Destination>
										<Source>SafePara.Watchdog</Source>
									</SetVariable>
									<SetVariable>
										<Destination>t_wdExpired</Destination>
										<Source>false</Source>
									</SetVariable>
									<SetVariable>
										<Destination>t_masterSessionId</Destination>
										<Source>1</Source>
									</SetVariable>
									<SetVariable>
										<Destination>t_connectionId</Destination>
										<Source>3</Source>
									</SetVariable>
									<SetVariable>
										<Destination DestinationIndex="0">t_connData</Destination>
										<Source>t_connectionId</Source>
									</SetVariable>
									<SetVariable>
										<Destination DestinationIndex="2">t_connData</Destination>
										<Source>ConnData.SlaveAddress</Source>
									</SetVariable>
								</SetVariables>
							</Action>
							<Informations2>
								<Information>
									<Type>Output</Type>
									<Value Param0="t_connectionId" Param1="ConnData.SlaveAddress" Param2="t_connData">ConnectionId: {0} (0x{0:x4}), Slave Address: {1} (0x{1:x4}), Connection Data {2}</Value>
								</Information>
							</Informations2>
						</TestStep>
						<TestStep Name="GotoSession">
							<Action>
								<CallFunction>
									<Reference>RUN_DUT_TO_SESSION</Reference>
								</CallFunction>
							</Action>
						</TestStep>
						<TestStep Name="SetVars">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>LastCrc</Destination>
										<Source>t_slaveFrame.Crc0</Source>
									</SetVariable>
								</SetVariables>
							</Action>
						</TestStep>
						<TestStep Name="SetFrame">
							<Informations1>
								<Information>
									<Type>Verbose</Type>
									<Value Param0="t_connData" Param1="LastCrc" Param2="t_masterSeqNo" Param3="OldMasterCrc" Param4="t_connectionId">SetFrame(Command Connection, SafeData {0}, LastCrc 0x{1:x4}, ConnectionId 0x{4:x4},  SequenceNo 0x{2:x4}, OldCrc 0x{3:x4}, New true</Value>
								</Information>
							</Informations1>
							<Action>
								<SetFrame Name="t_masterFrame">
									<Command>
										<CommandValue>Connection</CommandValue>
									</Command>
									<SafeData>
										<SafeDataVariable>t_connData</SafeDataVariable>
									</SafeData>
									<LastCRC>LastCrc</LastCRC>
									<ConnectionID>
										<ConnectionIdVariable>t_connectionId</ConnectionIdVariable>
									</ConnectionID>
									<SequenceNo>t_masterSeqNo</SequenceNo>
									<OldCRC>OldMasterCrc</OldCRC>
									<New>true</New>
								</SetFrame>
							</Action>
							<Informations2>
								<Information>
									<Type>Output</Type>
									<Value Param0="t_masterFrame.Crc0">Valid Crc0 = 0x{0:x4}</Value>
								</Information>
							</Informations2>
						</TestStep>
						<TestStep Name="SetInvalidCrc0">
							<Action>
								<CallFunction>
									<Reference>INCREMENT_CRC_0</Reference>
								</CallFunction>
							</Action>
							<Informations2>
								<Information>
									<Type>Output</Type>
									<Value Param0="t_masterFrame.Crc0">Falsified Crc0 = 0x{0:x4}</Value>
								</Information>
							</Informations2>
						</TestStep>
						<TestStep Name="SendFrame">
							<Action>
								<SendFrame Name="t_masterFrame"/>
							</Action>
							<Informations2>
								<Information>
									<Type>Verbose</Type>
									<Value Param0="t_masterFrame.FrameData">Master Frame: {0}</Value>
								</Information>
							</Informations2>
							<ReturnValue>
								<OnFailure>
									<Type>Error</Type>
									<Value>Failed to send FSoE frame!</Value>
									<Id>256</Id>
								</OnFailure>
							</ReturnValue>
						</TestStep>
						<TestStep Name="CheckReceivedSlaveFrame">
							<Action>
								<CallFunction>
									<Reference>CHECK_RESET_FAIL</Reference>
								</CallFunction>
							</Action>
							<ReturnValue>
								<OnSuccess>
									<Type>Success</Type>
									<Value Param0="c_CommFaultReason">Expected CommFaultReason ({0}) received</Value>
								</OnSuccess>
							</ReturnValue>
						</TestStep>
					</TestSteps>
				</TestCase>
				<TestCase Name="#2.5 SESSION_Fail1" CaseId="5">
					<Comment>Falsche CRC_0 (-1)</Comment>
					<CaseVariables>
						<Variable>
							<Name>c_crcIndex</Name>
							<Type>Int32</Type>
						</Variable>
						<Variable>
							<Name>c_CommFaultReason</Name>
							<Type>Byte</Type>
						</Variable>
						<Variable>
							<Name>c_tmpByte</Name>
							<Type>Byte</Type>
						</Variable>
					</CaseVariables>
					<TestSteps>
						<TestStep Name="SetVariables">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>c_CommFaultReason</Destination>
										<Source>INVALID_CRC</Source>
									</SetVariable>
									<SetVariable>
										<Destination>c_tmpByte</Destination>
										<Source>0</Source>
									</SetVariable>
									<SetVariable>
										<Destination>t_wdExpired</Destination>
										<Source>false</Source>
									</SetVariable>
									<SetVariable>
										<Destination>t_watchdog</Destination>
										<Source>SafePara.Watchdog</Source>
									</SetVariable>
									<SetVariable>
										<Destination>t_masterSessionId</Destination>
										<Source>1</Source>
									</SetVariable>
									<SetVariable>
										<Destination>t_connectionId</Destination>
										<Source>3</Source>
									</SetVariable>
									<SetVariable>
										<Destination DestinationIndex="0">t_connData</Destination>
										<Source>t_connectionId</Source>
									</SetVariable>
									<SetVariable>
										<Destination DestinationIndex="2">t_connData</Destination>
										<Source>ConnData.SlaveAddress</Source>
									</SetVariable>
								</SetVariables>
							</Action>
							<Informations2>
								<Information>
									<Type>Output</Type>
									<Value Param0="t_connectionId" Param1="ConnData.SlaveAddress" Param2="t_connData">ConnectionId: {0} (0x{0:x4}), Slave Address: {1} (0x{1:x4}), Connection Data {2}</Value>
								</Information>
							</Informations2>
						</TestStep>
						<TestStep Name="GotoSession">
							<Action>
								<CallFunction>
									<Reference>RUN_DUT_TO_SESSION</Reference>
								</CallFunction>
							</Action>
						</TestStep>
						<TestStep Name="SetVars">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>LastCrc</Destination>
										<Source>t_slaveFrame.Crc0</Source>
									</SetVariable>
								</SetVariables>
							</Action>
						</TestStep>
						<TestStep Name="SetFrame">
							<Informations1>
								<Information>
									<Type>Verbose</Type>
									<Value Param0="t_connData" Param1="LastCrc" Param2="t_masterSeqNo" Param3="OldMasterCrc" Param4="t_connectionId">SetFrame(Command Connection, SafeData {0}, LastCrc 0x{1:x4}, ConnectionId 0x{4:x4},  SequenceNo 0x{2:x4}, OldCrc 0x{3:x4}, New true</Value>
								</Information>
							</Informations1>
							<Action>
								<SetFrame Name="t_masterFrame">
									<Command>
										<CommandValue>Connection</CommandValue>
									</Command>
									<SafeData>
										<SafeDataVariable>t_connData</SafeDataVariable>
									</SafeData>
									<LastCRC>LastCrc</LastCRC>
									<ConnectionID>
										<ConnectionIdVariable>t_connectionId</ConnectionIdVariable>
									</ConnectionID>
									<SequenceNo>t_masterSeqNo</SequenceNo>
									<OldCRC>OldMasterCrc</OldCRC>
									<New>true</New>
								</SetFrame>
							</Action>
							<Informations2>
								<Information>
									<Type>Output</Type>
									<Value Param0="t_masterFrame.Crc0">Valid Crc0 = 0x{0:x4}</Value>
								</Information>
							</Informations2>
						</TestStep>
						<TestStep Name="SetInvalidCrc0">
							<Action>
								<CallFunction>
									<Reference>DECREMENT_CRC_0</Reference>
								</CallFunction>
							</Action>
							<Informations2>
								<Information>
									<Type>Output</Type>
									<Value Param0="t_masterFrame.Crc0">Falsified Crc0 = 0x{0:x4}</Value>
								</Information>
							</Informations2>
						</TestStep>
						<TestStep Name="SendFrame">
							<Action>
								<SendFrame Name="t_masterFrame"/>
							</Action>
							<Informations2>
								<Information>
									<Type>Verbose</Type>
									<Value Param0="t_masterFrame.FrameData">Master Frame: {0}</Value>
								</Information>
							</Informations2>
							<ReturnValue>
								<OnFailure>
									<Type>Error</Type>
									<Value>Failed to send FSoE frame!</Value>
									<Id>256</Id>
								</OnFailure>
							</ReturnValue>
						</TestStep>
						<TestStep Name="CheckReceivedSlaveFrame">
							<Action>
								<CallFunction>
									<Reference>CHECK_RESET_FAIL</Reference>
								</CallFunction>
							</Action>
							<ReturnValue>
								<OnSuccess>
									<Type>Success</Type>
									<Value Param0="c_CommFaultReason">Expected CommFaultReason ({0}) received</Value>
								</OnSuccess>
							</ReturnValue>
						</TestStep>
					</TestSteps>
				</TestCase>
				<TestCase Name="#2.6 SESSION_Fail1" CaseId="6">
					<Comment>Falsche CRC_1 bis CRC_n  (+1)</Comment>
					<CaseVariables>
						<Variable>
							<Name>c_CommFaultReason</Name>
							<Type>Byte</Type>
						</Variable>
						<Variable>
							<Name>c_tmpByte</Name>
							<Type>Byte</Type>
						</Variable>
						<Variable>
							<Name>c_crcIndex</Name>
							<Type>Int32</Type>
						</Variable>
						<Variable>
							<Name>c_tmpCrcn</Name>
							<Type>UInt16</Type>
						</Variable>
					</CaseVariables>
					<TestSteps>
						<TestStep Name="CheckCRCLength">
							<Compares>
								<Compare>
									<Condition>
										<Value1>SafeOutputs.Length</Value1>
										<Operator>LowerOrEqual</Operator>
										<Value2>2</Value2>
									</Condition>
									<Statement>
										<Return>
											<Type>SkippedCase</Type>
											<Value>Crc count ==1; ==> skip testcase</Value>
										</Return>
									</Statement>
								</Compare>
							</Compares>
						</TestStep>
						<TestStep Name="SetVariables">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>c_CommFaultReason</Destination>
										<Source>INVALID_CRC</Source>
									</SetVariable>
									<SetVariable>
										<Destination>c_tmpByte</Destination>
										<Source>0</Source>
									</SetVariable>
									<SetVariable>
										<Destination>t_wdExpired</Destination>
										<Source>false</Source>
									</SetVariable>
									<SetVariable>
										<Destination>t_watchdog</Destination>
										<Source>SafePara.Watchdog</Source>
									</SetVariable>
									<SetVariable>
										<Destination>t_masterSessionId</Destination>
										<Source>1</Source>
									</SetVariable>
									<SetVariable>
										<Destination>t_connectionId</Destination>
										<Source>3</Source>
									</SetVariable>
									<SetVariable>
										<Destination>c_crcIndex</Destination>
										<Source>1</Source>
									</SetVariable>
									<SetVariable>
										<Destination DestinationIndex="0">t_connData</Destination>
										<Source>t_connectionId</Source>
									</SetVariable>
									<SetVariable>
										<Destination DestinationIndex="2">t_connData</Destination>
										<Source>ConnData.SlaveAddress</Source>
									</SetVariable>
								</SetVariables>
							</Action>
							<Informations2>
								<Information>
									<Type>Output</Type>
									<Value Param0="t_connectionId" Param1="ConnData.SlaveAddress" Param2="t_connData">ConnectionId: {0} (0x{0:x4}), Slave Address: {1} (0x{1:x4}), Connection Data {2}</Value>
								</Information>
							</Informations2>
						</TestStep>
						<TestStep Name="GotoSession">
							<Action>
								<CallFunction>
									<Reference>RUN_DUT_TO_SESSION</Reference>
								</CallFunction>
							</Action>
						</TestStep>
						<TestStep Name="SetVars">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>LastCrc</Destination>
										<Source>t_slaveFrame.Crc0</Source>
									</SetVariable>
								</SetVariables>
							</Action>
						</TestStep>
						<TestStep Name="SetFrame">
							<Informations1>
								<Information>
									<Type>Verbose</Type>
									<Value Param0="t_connData" Param1="LastCrc" Param2="t_masterSeqNo" Param3="OldMasterCrc" Param4="t_connectionId">SetFrame(Command Connection, SafeData {0}, LastCrc 0x{1:x4}, ConnectionId 0x{4:x4},  SequenceNo 0x{2:x4}, OldCrc 0x{3:x4}, New true</Value>
								</Information>
							</Informations1>
							<Action>
								<SetFrame Name="t_masterFrame">
									<Command>
										<CommandValue>Connection</CommandValue>
									</Command>
									<SafeData>
										<SafeDataVariable>t_connData</SafeDataVariable>
									</SafeData>
									<LastCRC>LastCrc</LastCRC>
									<ConnectionID>
										<ConnectionIdVariable>t_connectionId</ConnectionIdVariable>
									</ConnectionID>
									<SequenceNo>t_masterSeqNo</SequenceNo>
									<OldCRC>OldMasterCrc</OldCRC>
									<New>true</New>
								</SetFrame>
							</Action>
							<Informations2>
								<Information>
									<Type>Output</Type>
									<Value Param0="c_crcIndex" Param1="t_masterFrame.Crcs[c_crcIndex]">Valid Crc[{0}]: 0x{1:x4}</Value>
								</Information>
							</Informations2>
						</TestStep>
						<TestStep Name="SetInvalidCrc_n">
							<Action>
								<CallFunction>
									<Reference>INCREMENT_CRC_N</Reference>
								</CallFunction>
							</Action>
							<Informations2>
								<Information>
									<Type>Output</Type>
									<Value Param0="c_crcIndex" Param1="t_masterFrame.Crcs[c_crcIndex]">Falsified Crc[{0}]: 0x{1:x4}</Value>
								</Information>
							</Informations2>
						</TestStep>
						<TestStep Name="SendFrame">
							<Action>
								<SendFrame Name="t_masterFrame"/>
							</Action>
							<Informations2>
								<Information>
									<Type>Verbose</Type>
									<Value Param0="t_masterFrame.FrameData">Master Frame: {0}</Value>
								</Information>
							</Informations2>
							<ReturnValue>
								<OnFailure>
									<Type>Error</Type>
									<Value>Failed to send FSoE frame!</Value>
									<Id>256</Id>
								</OnFailure>
							</ReturnValue>
						</TestStep>
						<TestStep Name="SetCrcIndex">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>c_crcIndex</Destination>
										<Source>c_crcIndex+1</Source>
									</SetVariable>
								</SetVariables>
							</Action>
							<Informations2>
								<Information>
									<Type>Verbose</Type>
									<Value Param0="c_crcIndex">Index :{0}</Value>
								</Information>
							</Informations2>
						</TestStep>
						<TestStep Name="CheckReceivedSlaveFrame">
							<Action>
								<CallFunction>
									<Reference>CHECK_RESET_FAIL</Reference>
								</CallFunction>
							</Action>
							<Compares>
								<Compare>
									<Condition>
										<Value1>c_crcIndex</Value1>
										<Operator>Lower</Operator>
										<Value2>CrcLength</Value2>
									</Condition>
									<Statement>
										<GotoStep>GotoSession</GotoStep>
									</Statement>
								</Compare>
								<Compare>
									<Condition>
										<Value1>c_crcIndex</Value1>
										<Operator>GreaterOrEqual</Operator>
										<Value2>CrcLength</Value2>
									</Condition>
									<Statement>
										<Return>
											<Type>Success</Type>
											<Value Param0="c_CommFaultReason">Expected CommFaultReason ({0}) received</Value>
										</Return>
									</Statement>
								</Compare>
							</Compares>
						</TestStep>
					</TestSteps>
				</TestCase>
				<TestCase Name="#2.7 SESSION_Fail1" CaseId="7">
					<Comment>Falsche CRC_1 bis CRC_n  (-1)</Comment>
					<CaseVariables>
						<Variable>
							<Name>c_CommFaultReason</Name>
							<Type>Byte</Type>
						</Variable>
						<Variable>
							<Name>c_tmpByte</Name>
							<Type>Byte</Type>
						</Variable>
						<Variable>
							<Name>c_crcIndex</Name>
							<Type>Int32</Type>
						</Variable>
						<Variable>
							<Name>c_tmpCrcn</Name>
							<Type>UInt16</Type>
						</Variable>
					</CaseVariables>
					<TestSteps>
						<TestStep Name="CheckCRCLength">
							<Compares>
								<Compare>
									<Condition>
										<Value1>SafeOutputs.Length</Value1>
										<Operator>LowerOrEqual</Operator>
										<Value2>2</Value2>
									</Condition>
									<Statement>
										<Return>
											<Type>SkippedCase</Type>
											<Value>Crc count ==1; ==> skip testcase</Value>
										</Return>
									</Statement>
								</Compare>
							</Compares>
						</TestStep>
						<TestStep Name="SetVariables">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>c_CommFaultReason</Destination>
										<Source>INVALID_CRC</Source>
									</SetVariable>
									<SetVariable>
										<Destination>c_tmpByte</Destination>
										<Source>0</Source>
									</SetVariable>
									<SetVariable>
										<Destination>t_wdExpired</Destination>
										<Source>false</Source>
									</SetVariable>
									<SetVariable>
										<Destination>t_watchdog</Destination>
										<Source>SafePara.Watchdog</Source>
									</SetVariable>
									<SetVariable>
										<Destination>t_masterSessionId</Destination>
										<Source>1</Source>
									</SetVariable>
									<SetVariable>
										<Destination>t_connectionId</Destination>
										<Source>3</Source>
									</SetVariable>
									<SetVariable>
										<Destination>c_crcIndex</Destination>
										<Source>1</Source>
									</SetVariable>
									<SetVariable>
										<Destination DestinationIndex="0">t_connData</Destination>
										<Source>t_connectionId</Source>
									</SetVariable>
									<SetVariable>
										<Destination DestinationIndex="2">t_connData</Destination>
										<Source>ConnData.SlaveAddress</Source>
									</SetVariable>
								</SetVariables>
							</Action>
							<Informations2>
								<Information>
									<Type>Output</Type>
									<Value Param0="t_connectionId" Param1="ConnData.SlaveAddress" Param2="t_connData">ConnectionId: {0} (0x{0:x4}), Slave Address: {1} (0x{1:x4}), Connection Data {2}</Value>
								</Information>
							</Informations2>
						</TestStep>
						<TestStep Name="GotoSession">
							<Action>
								<CallFunction>
									<Reference>RUN_DUT_TO_SESSION</Reference>
								</CallFunction>
							</Action>
						</TestStep>
						<TestStep Name="SetVars">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>LastCrc</Destination>
										<Source>t_slaveFrame.Crc0</Source>
									</SetVariable>
								</SetVariables>
							</Action>
						</TestStep>
						<TestStep Name="SetFrame">
							<Informations1>
								<Information>
									<Type>Verbose</Type>
									<Value Param0="t_connData" Param1="LastCrc" Param2="t_masterSeqNo" Param3="OldMasterCrc" Param4="t_connectionId">SetFrame(Command Connection, SafeData {0}, LastCrc 0x{1:x4}, ConnectionId 0x{4:x4},  SequenceNo 0x{2:x4}, OldCrc 0x{3:x4}, New true</Value>
								</Information>
							</Informations1>
							<Action>
								<SetFrame Name="t_masterFrame">
									<Command>
										<CommandValue>Connection</CommandValue>
									</Command>
									<SafeData>
										<SafeDataVariable>t_connData</SafeDataVariable>
									</SafeData>
									<LastCRC>LastCrc</LastCRC>
									<ConnectionID>
										<ConnectionIdVariable>t_connectionId</ConnectionIdVariable>
									</ConnectionID>
									<SequenceNo>t_masterSeqNo</SequenceNo>
									<OldCRC>OldMasterCrc</OldCRC>
									<New>true</New>
								</SetFrame>
							</Action>
							<Informations2>
								<Information>
									<Type>Output</Type>
									<Value Param0="c_crcIndex" Param1="t_masterFrame.Crcs[c_crcIndex]">Valid Crc[{0}]: 0x{1:x4}</Value>
								</Information>
							</Informations2>
						</TestStep>
						<TestStep Name="SetInvalidCrc_n">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>c_tmpCrcn</Destination>
										<Source SourceIndex="c_crcIndex">t_masterFrame.Crcs</Source>
									</SetVariable>
									<SetVariable>
										<Destination DestinationIndex="c_crcIndex">t_masterFrame.Crcs</Destination>
										<Source>c_tmpCrcn-1</Source>
									</SetVariable>
								</SetVariables>
							</Action>
							<Informations2>
								<Information>
									<Type>Output</Type>
									<Value Param0="c_crcIndex" Param1="t_masterFrame.Crcs[c_crcIndex]">Falsified Crc[{0}]: 0x{1:x4}</Value>
								</Information>
							</Informations2>
						</TestStep>
						<TestStep Name="SendFrame">
							<Action>
								<SendFrame Name="t_masterFrame"/>
							</Action>
							<Informations2>
								<Information>
									<Type>Verbose</Type>
									<Value Param0="t_masterFrame.FrameData">Master Frame: {0}</Value>
								</Information>
							</Informations2>
							<ReturnValue>
								<OnFailure>
									<Type>Error</Type>
									<Value>Failed to send FSoE frame!</Value>
									<Id>256</Id>
								</OnFailure>
							</ReturnValue>
						</TestStep>
						<TestStep Name="SetCrcIndex">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>c_crcIndex</Destination>
										<Source>c_crcIndex+1</Source>
									</SetVariable>
								</SetVariables>
							</Action>
							<Informations2>
								<Information>
									<Type>Verbose</Type>
									<Value Param0="c_crcIndex">Index :{0}</Value>
								</Information>
							</Informations2>
						</TestStep>
						<TestStep Name="CheckReceivedSlaveFrame">
							<Action>
								<CallFunction>
									<Reference>CHECK_RESET_FAIL</Reference>
								</CallFunction>
							</Action>
							<Compares>
								<Compare>
									<Condition>
										<Value1>c_crcIndex</Value1>
										<Operator>Lower</Operator>
										<Value2>CrcLength</Value2>
									</Condition>
									<Statement>
										<GotoStep>GotoSession</GotoStep>
									</Statement>
								</Compare>
								<Compare>
									<Condition>
										<Value1>c_crcIndex</Value1>
										<Operator>GreaterOrEqual</Operator>
										<Value2>CrcLength</Value2>
									</Condition>
									<Statement>
										<Return>
											<Type>Success</Type>
											<Value Param0="c_CommFaultReason">Expected CommFaultReason ({0}) received</Value>
										</Return>
									</Statement>
								</Compare>
							</Compares>
						</TestStep>
					</TestSteps>
				</TestCase>
				<TestCase Name="#2.8 SESSION_Fail1" CaseId="8">
					<Comment>CRC_0 und CRC1 vertauscht</Comment>
					<CaseVariables>
						<Variable>
							<Name>c_CommFaultReason</Name>
							<Type>Byte</Type>
						</Variable>
						<Variable>
							<Name>c_tmpByte</Name>
							<Type>Byte</Type>
						</Variable>
						<Variable>
							<Name>c_crcIndex</Name>
							<Type>Int32</Type>
						</Variable>
						<Variable>
							<Name>c_tmpCrc0</Name>
							<Type>UInt16</Type>
						</Variable>
						<Variable>
							<Name>c_tmpCrc1</Name>
							<Type>UInt16</Type>
						</Variable>
					</CaseVariables>
					<TestSteps>
						<TestStep Name="CheckCRCLength">
							<Compares>
								<Compare>
									<Condition>
										<Value1>CrcLength</Value1>
										<Operator>Equal</Operator>
										<Value2>1</Value2>
									</Condition>
									<Statement>
										<Return>
											<Type>SkippedCase</Type>
											<Value>Crc count ==1; ==> skip testcase</Value>
										</Return>
									</Statement>
								</Compare>
							</Compares>
						</TestStep>
						<TestStep Name="SetVariables">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>c_CommFaultReason</Destination>
										<Source>INVALID_CRC</Source>
									</SetVariable>
									<SetVariable>
										<Destination>c_tmpByte</Destination>
										<Source>0</Source>
									</SetVariable>
									<SetVariable>
										<Destination>t_watchdog</Destination>
										<Source>SafePara.Watchdog</Source>
									</SetVariable>
									<SetVariable>
										<Destination>t_wdExpired</Destination>
										<Source>false</Source>
									</SetVariable>
									<SetVariable>
										<Destination>t_masterSessionId</Destination>
										<Source>1</Source>
									</SetVariable>
									<SetVariable>
										<Destination>t_connectionId</Destination>
										<Source>3</Source>
									</SetVariable>
									<SetVariable>
										<Destination DestinationIndex="0">t_connData</Destination>
										<Source>t_connectionId</Source>
									</SetVariable>
									<SetVariable>
										<Destination DestinationIndex="2">t_connData</Destination>
										<Source>ConnData.SlaveAddress</Source>
									</SetVariable>
								</SetVariables>
							</Action>
							<Informations2>
								<Information>
									<Type>Output</Type>
									<Value Param0="t_connectionId" Param1="ConnData.SlaveAddress" Param2="t_connData">ConnectionId: {0} (0x{0:x4}), Slave Address: {1} (0x{1:x4}), Connection Data {2}</Value>
								</Information>
							</Informations2>
						</TestStep>
						<TestStep Name="GotoSession">
							<Action>
								<CallFunction>
									<Reference>RUN_DUT_TO_SESSION</Reference>
								</CallFunction>
							</Action>
						</TestStep>
						<TestStep Name="SetLastCrc">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>LastCrc</Destination>
										<Source>t_slaveFrame.Crc0</Source>
									</SetVariable>
								</SetVariables>
							</Action>
						</TestStep>
						<TestStep Name="SetFrame">
							<Informations1>
								<Information>
									<Type>Verbose</Type>
									<Value Param0="t_connData" Param1="LastCrc" Param2="t_masterSeqNo" Param3="OldMasterCrc" Param4="t_connectionId">SetFrame(Command Connection, SafeData {0}, LastCrc 0x{1:x4}, ConnectionId 0x{4:x4},  SequenceNo 0x{2:x4}, OldCrc 0x{3:x4}, New true</Value>
								</Information>
							</Informations1>
							<Action>
								<SetFrame Name="t_masterFrame">
									<Command>
										<CommandValue>Connection</CommandValue>
									</Command>
									<SafeData>
										<SafeDataVariable>t_connData</SafeDataVariable>
									</SafeData>
									<LastCRC>LastCrc</LastCRC>
									<ConnectionID>
										<ConnectionIdVariable>t_connectionId</ConnectionIdVariable>
									</ConnectionID>
									<SequenceNo>t_masterSeqNo</SequenceNo>
									<OldCRC>OldMasterCrc</OldCRC>
									<New>true</New>
								</SetFrame>
							</Action>
							<Informations2>
								<Information>
									<Type>Output</Type>
									<Value Param0="t_masterFrame.Crcs[0]" Param1="t_masterFrame.Crcs[1]">Valid Crc[0]: 0x{0:x4}, Valid Crc[1]: 0x{1:x4} </Value>
								</Information>
							</Informations2>
						</TestStep>
						<TestStep Name="SwapCrcs">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>c_tmpCrc0</Destination>
										<Source SourceIndex="0">t_masterFrame.Crcs</Source>
									</SetVariable>
									<SetVariable>
										<Destination>c_tmpCrc1</Destination>
										<Source SourceIndex="1">t_masterFrame.Crcs</Source>
									</SetVariable>
									<SetVariable>
										<Destination DestinationIndex="0">t_masterFrame.Crcs</Destination>
										<Source>c_tmpCrc1</Source>
									</SetVariable>
									<SetVariable>
										<Destination DestinationIndex="1">t_masterFrame.Crcs</Destination>
										<Source>c_tmpCrc0</Source>
									</SetVariable>
								</SetVariables>
							</Action>
							<Informations2>
								<Information>
									<Type>Output</Type>
									<Value Param0="t_masterFrame.Crcs[0]" Param1="t_masterFrame.Crcs[1]">Falsified Crc[0]: 0x{0:x4}, Falsified Crc[1]: 0x{1:x4} </Value>
								</Information>
							</Informations2>
						</TestStep>
						<TestStep Name="SendFrame">
							<Action>
								<SendFrame Name="t_masterFrame"/>
							</Action>
							<Informations2>
								<Information>
									<Type>Verbose</Type>
									<Value Param0="t_masterFrame.FrameData">Master Frame: {0}</Value>
								</Information>
							</Informations2>
							<ReturnValue>
								<OnFailure>
									<Type>Error</Type>
									<Value>Failed to send FSoE frame!</Value>
									<Id>256</Id>
								</OnFailure>
							</ReturnValue>
						</TestStep>
						<TestStep Name="CheckReceivedSlaveFrame">
							<Action>
								<CallFunction>
									<Reference>CHECK_RESET_FAIL</Reference>
								</CallFunction>
							</Action>
							<ReturnValue>
								<OnSuccess>
									<Type>Success</Type>
									<Value Param0="c_CommFaultReason">Expected CommFaultReason ({0}) received</Value>
								</OnSuccess>
							</ReturnValue>
						</TestStep>
					</TestSteps>
				</TestCase>
				<TestCase Name="#2.9 SESSION_Fail1" CaseId="9">
					<Comment>Falsche Master SequenceNo (-1) </Comment>
					<CaseVariables>
						<Variable>
							<Name>c_CommFaultReason</Name>
							<Type>Byte</Type>
						</Variable>
						<Variable>
							<Name>c_tmpByte</Name>
							<Type>Byte</Type>
						</Variable>
					</CaseVariables>
					<TestSteps>
						<TestStep Name="SetVariables">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>c_CommFaultReason</Destination>
										<Source>INVALID_CRC</Source>
									</SetVariable>
									<SetVariable>
										<Destination>c_tmpByte</Destination>
										<Source>0</Source>
									</SetVariable>
									<SetVariable>
										<Destination>t_watchdog</Destination>
										<Source>SafePara.Watchdog</Source>
									</SetVariable>
									<SetVariable>
										<Destination>t_masterSessionId</Destination>
										<Source>1</Source>
									</SetVariable>
									<SetVariable>
										<Destination>t_connectionId</Destination>
										<Source>3</Source>
									</SetVariable>
									<SetVariable>
										<Destination DestinationIndex="0">t_connData</Destination>
										<Source>t_connectionId</Source>
									</SetVariable>
									<SetVariable>
										<Destination DestinationIndex="2">t_connData</Destination>
										<Source>ConnData.SlaveAddress</Source>
									</SetVariable>
								</SetVariables>
							</Action>
							<Informations2>
								<Information>
									<Type>Output</Type>
									<Value Param0="t_connectionId" Param1="ConnData.SlaveAddress" Param2="t_connData">ConnectionId: {0} (0x{0:x4}), Slave Address: {1} (0x{1:x4}), Connection Data {2}</Value>
								</Information>
							</Informations2>
						</TestStep>
						<TestStep Name="GotoSession">
							<Action>
								<CallFunction>
									<Reference>RUN_DUT_TO_SESSION</Reference>
								</CallFunction>
							</Action>
						</TestStep>
						<TestStep Name="SetVars">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>LastCrc</Destination>
										<Source>t_slaveFrame.Crc0</Source>
									</SetVariable>
								</SetVariables>
							</Action>
						</TestStep>
						<TestStep Name="SetInvalidMasterSequenceNo">
							<Informations1>
								<Information>
									<Type>Output</Type>
									<Value Param0="t_masterSeqNo">Valid Master SequenceNo: {0}</Value>
								</Information>
							</Informations1>
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>t_masterSeqNo</Destination>
										<Source>t_masterSeqNo-1</Source>
									</SetVariable>
								</SetVariables>
							</Action>
							<Informations2>
								<Information>
									<Type>Output</Type>
									<Value Param0="t_masterSeqNo">Falsified Master SequenceNo: {0}</Value>
								</Information>
							</Informations2>
						</TestStep>
						<TestStep Name="SetFrame">
							<Informations1>
								<Information>
									<Type>Verbose</Type>
									<Value Param0="t_connData" Param1="LastCrc" Param2="t_masterSeqNo" Param3="OldMasterCrc" Param4="t_connectionId">SetFrame(Command Connection, SafeData {0}, LastCrc 0x{1:x4}, ConnectionId 0x{4:x4},  SequenceNo 0x{2:x4}, OldCrc 0x{3:x4}, New true</Value>
								</Information>
							</Informations1>
							<Action>
								<SetFrame Name="t_masterFrame">
									<Command>
										<CommandValue>Connection</CommandValue>
									</Command>
									<SafeData>
										<SafeDataVariable>t_connData</SafeDataVariable>
									</SafeData>
									<LastCRC>LastCrc</LastCRC>
									<ConnectionID>
										<ConnectionIdVariable>t_connectionId</ConnectionIdVariable>
									</ConnectionID>
									<SequenceNo>t_masterSeqNo</SequenceNo>
									<OldCRC>OldMasterCrc</OldCRC>
									<New>true</New>
								</SetFrame>
							</Action>
						</TestStep>
						<TestStep Name="SendFrame">
							<Action>
								<SendFrame Name="t_masterFrame"/>
							</Action>
							<Informations2>
								<Information>
									<Type>Verbose</Type>
									<Value Param0="t_masterFrame.FrameData">Master Frame: {0}</Value>
								</Information>
							</Informations2>
							<ReturnValue>
								<OnFailure>
									<Type>Error</Type>
									<Value>Failed to send FSoE frame!</Value>
									<Id>256</Id>
								</OnFailure>
							</ReturnValue>
						</TestStep>
						<TestStep Name="CheckReceivedSlaveFrame">
							<Action>
								<CallFunction>
									<Reference>CHECK_RESET_FAIL</Reference>
								</CallFunction>
							</Action>
							<ReturnValue>
								<OnSuccess>
									<Type>Success</Type>
									<Value Param0="c_CommFaultReason">Expected CommFaultReason ({0}) received</Value>
								</OnSuccess>
							</ReturnValue>
						</TestStep>
					</TestSteps>
				</TestCase>
				<TestCase Name="#2.10 SESSION_Fail2" CaseId="10">
					<Comment>ConnId == 0</Comment>
					<CaseVariables>
						<Variable>
							<Name>c_CommFaultReason</Name>
							<Type>Byte</Type>
						</Variable>
						<Variable>
							<Name>c_tmpByte</Name>
							<Type>Byte</Type>
						</Variable>
					</CaseVariables>
					<TestSteps>
						<TestStep Name="SetVariables">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>c_CommFaultReason</Destination>
										<Source>INVALID_CONNID</Source>
									</SetVariable>
									<SetVariable>
										<Destination>c_tmpByte</Destination>
										<Source>0</Source>
									</SetVariable>
									<SetVariable>
										<Destination>t_watchdog</Destination>
										<Source>SafePara.Watchdog</Source>
									</SetVariable>
									<SetVariable>
										<Destination>t_masterSessionId</Destination>
										<Source>1</Source>
									</SetVariable>
									<SetVariable>
										<Destination>t_connectionId</Destination>
										<Source>0</Source>
									</SetVariable>
									<SetVariable>
										<Destination DestinationIndex="0">t_connData</Destination>
										<Source>t_connectionId</Source>
									</SetVariable>
									<SetVariable>
										<Destination DestinationIndex="2">t_connData</Destination>
										<Source>ConnData.SlaveAddress</Source>
									</SetVariable>
								</SetVariables>
							</Action>
							<Informations2>
								<Information>
									<Type>Output</Type>
									<Value Param0="t_connectionId" Param1="ConnData.SlaveAddress" Param2="t_connData">ConnectionId: {0} (0x{0:x4}), Slave Address: {1} (0x{1:x4}), Connection Data {2}</Value>
								</Information>
							</Informations2>
						</TestStep>
						<TestStep Name="GotoSession">
							<Action>
								<CallFunction>
									<Reference>RUN_DUT_TO_SESSION</Reference>
								</CallFunction>
							</Action>
						</TestStep>
						<TestStep Name="SetVars">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>LastCrc</Destination>
										<Source>t_slaveFrame.Crc0</Source>
									</SetVariable>
								</SetVariables>
							</Action>
						</TestStep>
						<TestStep Name="SetFrame">
							<Informations1>
								<Information>
									<Type>Verbose</Type>
									<Value Param0="t_connData" Param1="LastCrc" Param2="t_masterSeqNo" Param3="OldMasterCrc" Param4="t_connectionId">SetFrame(Command Connection, SafeData {0}, LastCrc 0x{1:x4}, ConnectionId 0x{4:x4},  SequenceNo 0x{2:x4}, OldCrc 0x{3:x4}, New true</Value>
								</Information>
							</Informations1>
							<Action>
								<SetFrame Name="t_masterFrame">
									<Command>
										<CommandValue>Connection</CommandValue>
									</Command>
									<SafeData>
										<SafeDataVariable>t_connData</SafeDataVariable>
									</SafeData>
									<LastCRC>LastCrc</LastCRC>
									<ConnectionID>
										<ConnectionIdVariable>t_connectionId</ConnectionIdVariable>
									</ConnectionID>
									<SequenceNo>t_masterSeqNo</SequenceNo>
									<OldCRC>OldMasterCrc</OldCRC>
									<New>true</New>
								</SetFrame>
							</Action>
						</TestStep>
						<TestStep Name="SendFrame">
							<Action>
								<SendFrame Name="t_masterFrame"/>
							</Action>
							<Informations2>
								<Information>
									<Type>Verbose</Type>
									<Value Param0="t_masterFrame.FrameData">Master Frame: {0}</Value>
								</Information>
							</Informations2>
							<ReturnValue>
								<OnFailure>
									<Type>Error</Type>
									<Value>Failed to send FSoE frame!</Value>
									<Id>256</Id>
								</OnFailure>
							</ReturnValue>
						</TestStep>
						<TestStep Name="CheckReceivedSlaveFrame">
							<Action>
								<CallFunction>
									<Reference>CHECK_RESET_FAIL</Reference>
								</CallFunction>
							</Action>
							<ReturnValue>
								<OnSuccess>
									<Type>Success</Type>
									<Value Param0="c_CommFaultReason">Expected CommFaultReason ({0}) received</Value>
								</OnSuccess>
							</ReturnValue>
						</TestStep>
					</TestSteps>
				</TestCase>
				<TestCase Name="#2.11 SESSION_Fail3" CaseId="11">
					<Comment>Hochlauf mehrere Zyklen, 
Cmd = Connection bevor Übergang fertig ist</Comment>
					<CaseVariables>
						<Variable>
							<Name>c_CommFaultReason</Name>
							<Type>Byte</Type>
						</Variable>
						<Variable>
							<Name>c_tmpByte</Name>
							<Type>Byte</Type>
						</Variable>
					</CaseVariables>
					<TestSteps>
						<TestStep Name="CheckSafeDataLength">
							<Compares>
								<Compare>
									<Condition>
										<Value1>SafeDataLength</Value1>
										<Operator>NotEqual</Operator>
										<Value2>1</Value2>
									</Condition>
									<Statement>
										<Return>
											<Type>SkippedCase</Type>
											<Value>SafeDataLength != 1; ==> skip testcase</Value>
										</Return>
									</Statement>
								</Compare>
							</Compares>
						</TestStep>
						<TestStep Name="SetVariables">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>c_CommFaultReason</Destination>
										<Source>INVALID_CMD</Source>
									</SetVariable>
									<SetVariable>
										<Destination>c_tmpByte</Destination>
										<Source>0</Source>
									</SetVariable>
									<SetVariable>
										<Destination>t_watchdog</Destination>
										<Source>SafePara.Watchdog</Source>
									</SetVariable>
									<SetVariable>
										<Destination>t_masterSessionId</Destination>
										<Source>1</Source>
									</SetVariable>
									<SetVariable>
										<Destination>t_connectionId</Destination>
										<Source>3</Source>
									</SetVariable>
									<SetVariable>
										<Destination DestinationIndex="0">t_connData</Destination>
										<Source>t_connectionId</Source>
									</SetVariable>
									<SetVariable>
										<Destination DestinationIndex="2">t_connData</Destination>
										<Source>ConnData.SlaveAddress</Source>
									</SetVariable>
								</SetVariables>
							</Action>
							<Informations2>
								<Information>
									<Type>Output</Type>
									<Value Param0="t_connectionId" Param1="ConnData.SlaveAddress" Param2="t_connData">ConnectionId: {0} (0x{0:x4}), Slave Address: {1} (0x{1:x4}), Connection Data {2}</Value>
								</Information>
							</Informations2>
						</TestStep>
						<TestStep Name="Reset">
							<Action>
								<CallFunction>
									<Reference>RUN_DUT_TO_RESET</Reference>
								</CallFunction>
							</Action>
						</TestStep>
						<TestStep Name="CallResetOk">
							<Action>
								<CallFunction>
									<Reference>RESET_OK</Reference>
								</CallFunction>
							</Action>
						</TestStep>
						<TestStep Name="ReceiveEvent">
							<Event>
								<ReceiveFrame>t_slaveFrame</ReceiveFrame>
							</Event>
							<Informations2>
								<Information>
									<Type>Verbose</Type>
									<Value Param0="t_slaveFrame.FrameData">Slave Frame: {0}</Value>
								</Information>
							</Informations2>
						</TestStep>
						<TestStep Name="CheckWatchdog">
							<Event>
								<WatchdogExpired>
									<SetVariables>
										<SetVariable>
											<Destination>t_wdExpired</Destination>
											<Source>true</Source>
										</SetVariable>
									</SetVariables>
								</WatchdogExpired>
							</Event>
							<Compares>
								<Compare>
									<Condition>
										<Value1>t_wdExpired</Value1>
										<Operator>Equal</Operator>
										<Value2>true</Value2>
									</Condition>
									<Statement>
										<SetVariables>
											<SetVariable>
												<Destination>t_wdExpired</Destination>
												<Source>false</Source>
											</SetVariable>
										</SetVariables>
									</Statement>
									<Statement>
										<Return>
											<Type>Error</Type>
											<Value Param0="ElapsedWD">Watchdog expired! {0} ms </Value>
											<Id>5</Id>
										</Return>
									</Statement>
								</Compare>
							</Compares>
							<Informations2>
								<Information>
									<Type>Verbose</Type>
									<Value Param0="t_wdExpired">WD {0}</Value>
								</Information>
							</Informations2>
						</TestStep>
						<TestStep Name="CheckReceivedCrc">
							<Informations1>
								<Information>
									<Type>Verbose</Type>
									<Value Param0="t_slaveFrame.FrameData" Param1="LastCrc" Param2="t_slaveSeqNo" Param3="t_oldSlaveCrc" Param4="true">IsCrcCorrect(Frame {0}, LastCrc 0x{1:X4}, SeqNo {2}, OldCrc 0x{3:X4}, New {4})</Value>
								</Information>
							</Informations1>
							<Action>
								<IsCrcCorrect ReturnValue="crcCorrect">
									<Frame>t_slaveFrame</Frame>
									<LastCrc>LastCrc</LastCrc>
									<SequenceNo>t_slaveSeqNo</SequenceNo>
									<OldCrc>t_oldSlaveCrc</OldCrc>
									<New>true</New>
								</IsCrcCorrect>
							</Action>
							<ReturnValue>
								<OnFailure>
									<Type>Error</Type>
									<Value Param0="t_slaveFrame.Crc0">Invalid Crc0 reveived ({0:x})</Value>
									<Id>4</Id>
								</OnFailure>
							</ReturnValue>
						</TestStep>
						<TestStep Name="CheckSessionConditions">
							<Compares>
								<Compare>
									<Condition>
										<Value1>t_slaveFrame.Command</Value1>
										<Operator>Equal</Operator>
										<Value2>Session</Value2>
									</Condition>
									<Condition>
										<Value1>BytesToBeSent</Value1>
										<Operator>Equal</Operator>
										<Value2>0</Value2>
									</Condition>
									<Condition>
										<Value1>crcCorrect</Value1>
										<Operator>Equal</Operator>
										<Value2>true</Value2>
									</Condition>
									<Statement>
										<Return>
											<Type>Error</Type>
											<Value>BytesToBeSent == 0</Value>
											<Id>1</Id>
										</Return>
									</Statement>
								</Compare>
								<Compare>
									<Condition>
										<Value1>t_slaveFrame.Command</Value1>
										<Operator>Equal</Operator>
										<Value2>Session</Value2>
									</Condition>
									<Condition>
										<Value1>crcCorrect</Value1>
										<Operator>Equal</Operator>
										<Value2>false</Value2>
									</Condition>
									<Statement>
										<Return>
											<Type>Error</Type>
											<Value>Invalid Crc received</Value>
											<Id>4</Id>
										</Return>
									</Statement>
								</Compare>
								<Compare>
									<Condition>
										<Value1>t_slaveFrame.Command</Value1>
										<Operator>Equal</Operator>
										<Value2>Session</Value2>
									</Condition>
									<Condition>
										<Value1>BytesToBeSent</Value1>
										<Operator>NotEqual</Operator>
										<Value2>0</Value2>
									</Condition>
									<Condition>
										<Value1>crcCorrect</Value1>
										<Operator>Equal</Operator>
										<Value2>true</Value2>
									</Condition>
									<Statement>
										<Information>
											<Type>Output</Type>
											<Value>Invalid transition to Connection before BytesToBeSent = 0</Value>
										</Information>
									</Statement>
									<Statement>
										<CallFunction>SESSION_OK</CallFunction>
									</Statement>
								</Compare>
								<Compare>
									<Condition>
										<Value1>t_slaveFrame.Command</Value1>
										<Operator>Equal</Operator>
										<Value2>Reset</Value2>
									</Condition>
									<Statement>
										<Return>
											<Type>Error</Type>
											<Value>Invalid CMD(Reset) received</Value>
											<Id>1</Id>
										</Return>
									</Statement>
								</Compare>
								<Compare>
									<Condition>
										<Value1>t_slaveFrame.Command</Value1>
										<Operator>Equal</Operator>
										<Value2>Connection</Value2>
									</Condition>
									<Statement>
										<Return>
											<Type>Error</Type>
											<Value>Invalid CMD (Connection) received</Value>
										</Return>
									</Statement>
								</Compare>
								<Compare>
									<Condition>
										<Value1>t_slaveFrame.Command</Value1>
										<Operator>Equal</Operator>
										<Value2>Parameter</Value2>
									</Condition>
									<Statement>
										<Return>
											<Type>Error</Type>
											<Value>Invalid CMD (Parameter) received</Value>
											<Id>1</Id>
										</Return>
									</Statement>
								</Compare>
								<Compare>
									<Condition>
										<Value1>t_slaveFrame.Command</Value1>
										<Operator>Equal</Operator>
										<Value2>ProcessData</Value2>
									</Condition>
									<Statement>
										<Return>
											<Type>Error</Type>
											<Value>Invalid CMD (ProcessData) received</Value>
											<Id>1</Id>
										</Return>
									</Statement>
								</Compare>
								<Compare>
									<Condition>
										<Value1>t_slaveFrame.Command</Value1>
										<Operator>Equal</Operator>
										<Value2>FailSafeData</Value2>
									</Condition>
									<Statement>
										<Return>
											<Type>Error</Type>
											<Value>Invalid CMD (FailSafeData) received</Value>
											<Id>1</Id>
										</Return>
									</Statement>
								</Compare>
								<Compare>
									<Condition>
										<Value1>t_slaveFrame.Command</Value1>
										<Operator>NotEqual</Operator>
										<Value2>Reset</Value2>
									</Condition>
									<Condition>
										<Value1>t_slaveFrame.Command</Value1>
										<Operator>NotEqual</Operator>
										<Value2>Session</Value2>
									</Condition>
									<Condition>
										<Value1>t_slaveFrame.Command</Value1>
										<Operator>NotEqual</Operator>
										<Value2>Connection</Value2>
									</Condition>
									<Condition>
										<Value1>t_slaveFrame.Command</Value1>
										<Operator>NotEqual</Operator>
										<Value2>Parameter</Value2>
									</Condition>
									<Condition>
										<Value1>t_slaveFrame.Command</Value1>
										<Operator>NotEqual</Operator>
										<Value2>ProcessData</Value2>
									</Condition>
									<Condition>
										<Value1>t_slaveFrame.Command</Value1>
										<Operator>NotEqual</Operator>
										<Value2>FailSafeData</Value2>
									</Condition>
									<Statement>
										<Return>
											<Type>Error</Type>
											<Value>Unknown CMD received</Value>
											<Id>2</Id>
										</Return>
									</Statement>
								</Compare>
							</Compares>
						</TestStep>
						<TestStep Name="CheckReceivedSlaveFrame">
							<Action>
								<CallFunction>
									<Reference>CHECK_RESET_FAIL</Reference>
								</CallFunction>
							</Action>
							<ReturnValue>
								<OnSuccess>
									<Type>Success</Type>
									<Value Param0="c_CommFaultReason">Expected CommFaultReason ({0}) received</Value>
								</OnSuccess>
							</ReturnValue>
						</TestStep>
					</TestSteps>
				</TestCase>
				<TestCase Name="#2.12 SESSION_Fail4" CaseId="12">
					<Comment>Hochlauf mehrere Zyklen, falsche Crc0 (+1) im Übergang</Comment>
					<CaseVariables>
						<Variable>
							<Name>c_CommFaultReason</Name>
							<Type>Byte</Type>
						</Variable>
						<Variable>
							<Name>c_tmpByte</Name>
							<Type>Byte</Type>
						</Variable>
					</CaseVariables>
					<TestSteps>
						<TestStep Name="CheckSafeDataLength">
							<Compares>
								<Compare>
									<Condition>
										<Value1>SafeDataLength</Value1>
										<Operator>NotEqual</Operator>
										<Value2>1</Value2>
									</Condition>
									<Statement>
										<Return>
											<Type>SkippedCase</Type>
											<Value>SafeDataLength != 1; ==> skip testcase</Value>
										</Return>
									</Statement>
								</Compare>
							</Compares>
						</TestStep>
						<TestStep Name="SetVariables">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>SecondSessionFrameSent</Destination>
										<Source>false</Source>
									</SetVariable>
									<SetVariable>
										<Destination>c_CommFaultReason</Destination>
										<Source>INVALID_CRC</Source>
									</SetVariable>
									<SetVariable>
										<Destination>c_tmpByte</Destination>
										<Source>0</Source>
									</SetVariable>
									<SetVariable>
										<Destination>t_watchdog</Destination>
										<Source>SafePara.Watchdog</Source>
									</SetVariable>
									<SetVariable>
										<Destination>t_wdExpired</Destination>
										<Source>false</Source>
									</SetVariable>
									<SetVariable>
										<Destination>t_masterSessionId</Destination>
										<Source>1</Source>
									</SetVariable>
									<SetVariable>
										<Destination>t_connectionId</Destination>
										<Source>3</Source>
									</SetVariable>
									<SetVariable>
										<Destination DestinationIndex="0">t_connData</Destination>
										<Source>t_connectionId</Source>
									</SetVariable>
									<SetVariable>
										<Destination DestinationIndex="2">t_connData</Destination>
										<Source>ConnData.SlaveAddress</Source>
									</SetVariable>
								</SetVariables>
							</Action>
							<Compares>
								<Compare>
									<Condition>
										<Value1>SafeDataLength</Value1>
										<Operator>NotEqual</Operator>
										<Value2>1</Value2>
									</Condition>
									<Statement>
										<SetVariables>
											<SetVariable>
												<Destination>SecondSessionFrameSent</Destination>
												<Source>true</Source>
											</SetVariable>
										</SetVariables>
									</Statement>
								</Compare>
							</Compares>
						</TestStep>
						<TestStep Name="Reset">
							<Action>
								<CallFunction>
									<Reference>RUN_DUT_TO_RESET</Reference>
								</CallFunction>
							</Action>
						</TestStep>
						<TestStep Name="CallResetOk">
							<Action>
								<CallFunction>
									<Reference>RESET_OK</Reference>
								</CallFunction>
							</Action>
						</TestStep>
						<TestStep Name="ReceiveEvent">
							<Event>
								<ReceiveFrame>t_slaveFrame</ReceiveFrame>
							</Event>
							<Informations2>
								<Information>
									<Type>Verbose</Type>
									<Value Param0="t_slaveFrame.FrameData">Slave Frame: {0}</Value>
								</Information>
							</Informations2>
						</TestStep>
						<TestStep Name="CheckWatchdog">
							<Event>
								<WatchdogExpired>
									<SetVariables>
										<SetVariable>
											<Destination>t_wdExpired</Destination>
											<Source>true</Source>
										</SetVariable>
									</SetVariables>
								</WatchdogExpired>
							</Event>
							<Compares>
								<Compare>
									<Condition>
										<Value1>t_wdExpired</Value1>
										<Operator>Equal</Operator>
										<Value2>true</Value2>
									</Condition>
									<Statement>
										<SetVariables>
											<SetVariable>
												<Destination>t_wdExpired</Destination>
												<Source>false</Source>
											</SetVariable>
										</SetVariables>
									</Statement>
									<Statement>
										<Return>
											<Type>Error</Type>
											<Value Param0="ElapsedWD">Watchdog expired! {0} ms </Value>
											<Id>5</Id>
										</Return>
									</Statement>
								</Compare>
							</Compares>
							<Informations2>
								<Information>
									<Type>Verbose</Type>
									<Value Param0="t_wdExpired">WD {0}</Value>
								</Information>
							</Informations2>
						</TestStep>
						<TestStep Name="CheckReceivedCrc">
							<Informations1>
								<Information>
									<Type>Verbose</Type>
									<Value Param0="t_slaveFrame.FrameData" Param1="LastCrc" Param2="t_slaveSeqNo" Param3="t_oldSlaveCrc" Param4="true">IsCrcCorrect(Frame {0}, LastCrc 0x{1:X4}, SeqNo {2}, OldCrc 0x{3:X4}, New {4})</Value>
								</Information>
							</Informations1>
							<Action>
								<IsCrcCorrect ReturnValue="crcCorrect">
									<Frame>t_slaveFrame</Frame>
									<LastCrc>LastCrc</LastCrc>
									<SequenceNo>t_slaveSeqNo</SequenceNo>
									<OldCrc>t_oldSlaveCrc</OldCrc>
									<New>true</New>
								</IsCrcCorrect>
							</Action>
							<ReturnValue>
								<OnFailure>
									<Type>Error</Type>
									<Value Param0="t_slaveFrame.Crc0">Invalid Crc0 reveived ({0:x})</Value>
									<Id>4</Id>
								</OnFailure>
							</ReturnValue>
						</TestStep>
						<TestStep Name="CheckSessionConditions">
							<Compares>
								<Compare>
									<Condition>
										<Value1>t_slaveFrame.Command</Value1>
										<Operator>Equal</Operator>
										<Value2>Session</Value2>
									</Condition>
									<Condition>
										<Value1>BytesToBeSent</Value1>
										<Operator>Equal</Operator>
										<Value2>0</Value2>
									</Condition>
									<Condition>
										<Value1>crcCorrect</Value1>
										<Operator>Equal</Operator>
										<Value2>true</Value2>
									</Condition>
									<Statement>
										<Return>
											<Type>Error</Type>
											<Value>BytesToBeSent == 0</Value>
											<Id>1</Id>
										</Return>
									</Statement>
								</Compare>
								<Compare>
									<Condition>
										<Value1>t_slaveFrame.Command</Value1>
										<Operator>Equal</Operator>
										<Value2>Session</Value2>
									</Condition>
									<Condition>
										<Value1>crcCorrect</Value1>
										<Operator>Equal</Operator>
										<Value2>false</Value2>
									</Condition>
									<Condition>
										<Value1>SecondSessionFrameSent</Value1>
										<Operator>Equal</Operator>
										<Value2>true</Value2>
									</Condition>
									<Statement>
										<Return>
											<Type>Error</Type>
											<Value>Invalid Crc received</Value>
											<Id>4</Id>
										</Return>
									</Statement>
								</Compare>
								<Compare>
									<Condition>
										<Value1>t_slaveFrame.Command</Value1>
										<Operator>Equal</Operator>
										<Value2>Session</Value2>
									</Condition>
									<Condition>
										<Value1>crcCorrect</Value1>
										<Operator>Equal</Operator>
										<Value2>false</Value2>
									</Condition>
									<Condition>
										<Value1>SecondSessionFrameSent</Value1>
										<Operator>Equal</Operator>
										<Value2>false</Value2>
									</Condition>
									<Statement>
										<CallFunction>SESSION_STAY2</CallFunction>
									</Statement>
									<Statement>
										<GotoStep>ReceiveEvent</GotoStep>
									</Statement>
								</Compare>
								<Compare>
									<Condition>
										<Value1>t_slaveFrame.Command</Value1>
										<Operator>Equal</Operator>
										<Value2>Session</Value2>
									</Condition>
									<Condition>
										<Value1>BytesToBeSent</Value1>
										<Operator>NotEqual</Operator>
										<Value2>0</Value2>
									</Condition>
									<Condition>
										<Value1>crcCorrect</Value1>
										<Operator>Equal</Operator>
										<Value2>true</Value2>
									</Condition>
									<Statement>
										<CallFunction>SESSION_STAY1_INCREMENTED_CRC0</CallFunction>
									</Statement>
								</Compare>
								<Compare>
									<Condition>
										<Value1>t_slaveFrame.Command</Value1>
										<Operator>Equal</Operator>
										<Value2>Reset</Value2>
									</Condition>
									<Statement>
										<Return>
											<Type>Error</Type>
											<Value>Invalid CMD(Reset) received</Value>
											<Id>1</Id>
										</Return>
									</Statement>
								</Compare>
								<Compare>
									<Condition>
										<Value1>t_slaveFrame.Command</Value1>
										<Operator>Equal</Operator>
										<Value2>Connection</Value2>
									</Condition>
									<Statement>
										<Return>
											<Type>Error</Type>
											<Value>Invalid CMD (Connection) received</Value>
										</Return>
									</Statement>
								</Compare>
								<Compare>
									<Condition>
										<Value1>t_slaveFrame.Command</Value1>
										<Operator>Equal</Operator>
										<Value2>Parameter</Value2>
									</Condition>
									<Statement>
										<Return>
											<Type>Error</Type>
											<Value>Invalid CMD (Parameter) received</Value>
											<Id>1</Id>
										</Return>
									</Statement>
								</Compare>
								<Compare>
									<Condition>
										<Value1>t_slaveFrame.Command</Value1>
										<Operator>Equal</Operator>
										<Value2>ProcessData</Value2>
									</Condition>
									<Statement>
										<Return>
											<Type>Error</Type>
											<Value>Invalid CMD (ProcessData) received</Value>
											<Id>1</Id>
										</Return>
									</Statement>
								</Compare>
								<Compare>
									<Condition>
										<Value1>t_slaveFrame.Command</Value1>
										<Operator>Equal</Operator>
										<Value2>FailSafeData</Value2>
									</Condition>
									<Statement>
										<Return>
											<Type>Error</Type>
											<Value>Invalid CMD (FailSafeData) received</Value>
											<Id>1</Id>
										</Return>
									</Statement>
								</Compare>
								<Compare>
									<Condition>
										<Value1>t_slaveFrame.Command</Value1>
										<Operator>NotEqual</Operator>
										<Value2>Reset</Value2>
									</Condition>
									<Condition>
										<Value1>t_slaveFrame.Command</Value1>
										<Operator>NotEqual</Operator>
										<Value2>Session</Value2>
									</Condition>
									<Condition>
										<Value1>t_slaveFrame.Command</Value1>
										<Operator>NotEqual</Operator>
										<Value2>Connection</Value2>
									</Condition>
									<Condition>
										<Value1>t_slaveFrame.Command</Value1>
										<Operator>NotEqual</Operator>
										<Value2>Parameter</Value2>
									</Condition>
									<Condition>
										<Value1>t_slaveFrame.Command</Value1>
										<Operator>NotEqual</Operator>
										<Value2>ProcessData</Value2>
									</Condition>
									<Condition>
										<Value1>t_slaveFrame.Command</Value1>
										<Operator>NotEqual</Operator>
										<Value2>FailSafeData</Value2>
									</Condition>
									<Statement>
										<Return>
											<Type>Error</Type>
											<Value>Unknown CMD received</Value>
											<Id>2</Id>
										</Return>
									</Statement>
								</Compare>
							</Compares>
						</TestStep>
						<TestStep Name="CheckReceivedSlaveFrame">
							<Action>
								<CallFunction>
									<Reference>CHECK_RESET_FAIL</Reference>
								</CallFunction>
							</Action>
							<ReturnValue>
								<OnSuccess>
									<Type>Success</Type>
									<Value Param0="c_CommFaultReason">Expected CommFaultReason ({0}) received</Value>
								</OnSuccess>
							</ReturnValue>
						</TestStep>
					</TestSteps>
				</TestCase>
				<TestCase Name="#2.13 SESSION_Fail4" CaseId="13">
					<Comment>Hochlauf mehrere Zyklen, falsche Crc0 (-1) im Übergang</Comment>
					<CaseVariables>
						<Variable>
							<Name>c_CommFaultReason</Name>
							<Type>Byte</Type>
						</Variable>
						<Variable>
							<Name>c_tmpByte</Name>
							<Type>Byte</Type>
						</Variable>
					</CaseVariables>
					<TestSteps>
						<TestStep Name="CheckSafeDataLength">
							<Compares>
								<Compare>
									<Condition>
										<Value1>SafeDataLength</Value1>
										<Operator>NotEqual</Operator>
										<Value2>1</Value2>
									</Condition>
									<Statement>
										<Return>
											<Type>SkippedCase</Type>
											<Value>SafeDataLength != 1; ==> skip testcase</Value>
										</Return>
									</Statement>
								</Compare>
							</Compares>
						</TestStep>
						<TestStep Name="SetVariables">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>SecondSessionFrameSent</Destination>
										<Source>false</Source>
									</SetVariable>
									<SetVariable>
										<Destination>c_CommFaultReason</Destination>
										<Source>INVALID_CRC</Source>
									</SetVariable>
									<SetVariable>
										<Destination>c_tmpByte</Destination>
										<Source>0</Source>
									</SetVariable>
									<SetVariable>
										<Destination>t_watchdog</Destination>
										<Source>SafePara.Watchdog</Source>
									</SetVariable>
									<SetVariable>
										<Destination>t_wdExpired</Destination>
										<Source>false</Source>
									</SetVariable>
									<SetVariable>
										<Destination>t_masterSessionId</Destination>
										<Source>1</Source>
									</SetVariable>
									<SetVariable>
										<Destination>t_connectionId</Destination>
										<Source>3</Source>
									</SetVariable>
									<SetVariable>
										<Destination DestinationIndex="0">t_connData</Destination>
										<Source>t_connectionId</Source>
									</SetVariable>
									<SetVariable>
										<Destination DestinationIndex="2">t_connData</Destination>
										<Source>ConnData.SlaveAddress</Source>
									</SetVariable>
								</SetVariables>
							</Action>
							<Compares>
								<Compare>
									<Condition>
										<Value1>SafeDataLength</Value1>
										<Operator>NotEqual</Operator>
										<Value2>1</Value2>
									</Condition>
									<Statement>
										<SetVariables>
											<SetVariable>
												<Destination>SecondSessionFrameSent</Destination>
												<Source>true</Source>
											</SetVariable>
										</SetVariables>
									</Statement>
								</Compare>
							</Compares>
						</TestStep>
						<TestStep Name="Reset">
							<Action>
								<CallFunction>
									<Reference>RUN_DUT_TO_RESET</Reference>
								</CallFunction>
							</Action>
						</TestStep>
						<TestStep Name="CallResetOk">
							<Action>
								<CallFunction>
									<Reference>RESET_OK</Reference>
								</CallFunction>
							</Action>
						</TestStep>
						<TestStep Name="ReceiveEvent">
							<Event>
								<ReceiveFrame>t_slaveFrame</ReceiveFrame>
							</Event>
							<Informations2>
								<Information>
									<Type>Output</Type>
									<Value Param0="t_slaveFrame.FrameData">Slave Frame: {0}</Value>
								</Information>
							</Informations2>
						</TestStep>
						<TestStep Name="CheckWatchdog">
							<Event>
								<WatchdogExpired>
									<SetVariables>
										<SetVariable>
											<Destination>t_wdExpired</Destination>
											<Source>true</Source>
										</SetVariable>
									</SetVariables>
								</WatchdogExpired>
							</Event>
							<Compares>
								<Compare>
									<Condition>
										<Value1>t_wdExpired</Value1>
										<Operator>Equal</Operator>
										<Value2>true</Value2>
									</Condition>
									<Statement>
										<SetVariables>
											<SetVariable>
												<Destination>t_wdExpired</Destination>
												<Source>false</Source>
											</SetVariable>
										</SetVariables>
									</Statement>
									<Statement>
										<Return>
											<Type>Error</Type>
											<Value Param0="ElapsedWD">Watchdog expired! {0} ms </Value>
											<Id>5</Id>
										</Return>
									</Statement>
								</Compare>
							</Compares>
							<Informations2>
								<Information>
									<Type>Output</Type>
									<Value Param0="t_wdExpired">WD {0}</Value>
								</Information>
							</Informations2>
						</TestStep>
						<TestStep Name="CheckReceivedCrc">
							<Informations1>
								<Information>
									<Type>Verbose</Type>
									<Value Param0="t_slaveFrame.FrameData" Param1="LastCrc" Param2="t_slaveSeqNo" Param3="t_oldSlaveCrc" Param4="true">IsCrcCorrect(Frame {0}, LastCrc 0x{1:X4}, SeqNo {2}, OldCrc 0x{3:X4}, New {4})</Value>
								</Information>
							</Informations1>
							<Action>
								<IsCrcCorrect ReturnValue="crcCorrect">
									<Frame>t_slaveFrame</Frame>
									<LastCrc>LastCrc</LastCrc>
									<SequenceNo>t_slaveSeqNo</SequenceNo>
									<OldCrc>t_oldSlaveCrc</OldCrc>
									<New>true</New>
								</IsCrcCorrect>
							</Action>
							<ReturnValue>
								<OnFailure>
									<Type>Error</Type>
									<Value Param0="t_slaveFrame.Crc0">Invalid Crc0 reveived ({0:x})</Value>
									<Id>4</Id>
								</OnFailure>
							</ReturnValue>
						</TestStep>
						<TestStep Name="CheckSessionConditions">
							<Compares>
								<Compare>
									<Condition>
										<Value1>t_slaveFrame.Command</Value1>
										<Operator>Equal</Operator>
										<Value2>Session</Value2>
									</Condition>
									<Condition>
										<Value1>BytesToBeSent</Value1>
										<Operator>Equal</Operator>
										<Value2>0</Value2>
									</Condition>
									<Condition>
										<Value1>crcCorrect</Value1>
										<Operator>Equal</Operator>
										<Value2>true</Value2>
									</Condition>
									<Statement>
										<Return>
											<Type>Error</Type>
											<Value>BytesToBeSent == 0</Value>
											<Id>1</Id>
										</Return>
									</Statement>
								</Compare>
								<Compare>
									<Condition>
										<Value1>t_slaveFrame.Command</Value1>
										<Operator>Equal</Operator>
										<Value2>Session</Value2>
									</Condition>
									<Condition>
										<Value1>crcCorrect</Value1>
										<Operator>Equal</Operator>
										<Value2>false</Value2>
									</Condition>
									<Condition>
										<Value1>SecondSessionFrameSent</Value1>
										<Operator>Equal</Operator>
										<Value2>true</Value2>
									</Condition>
									<Statement>
										<Return>
											<Type>Error</Type>
											<Value>Invalid Crc received</Value>
											<Id>4</Id>
										</Return>
									</Statement>
								</Compare>
								<Compare>
									<Condition>
										<Value1>t_slaveFrame.Command</Value1>
										<Operator>Equal</Operator>
										<Value2>Session</Value2>
									</Condition>
									<Condition>
										<Value1>crcCorrect</Value1>
										<Operator>Equal</Operator>
										<Value2>false</Value2>
									</Condition>
									<Condition>
										<Value1>SecondSessionFrameSent</Value1>
										<Operator>Equal</Operator>
										<Value2>false</Value2>
									</Condition>
									<Statement>
										<CallFunction>SESSION_STAY2</CallFunction>
									</Statement>
									<Statement>
										<GotoStep>ReceiveEvent</GotoStep>
									</Statement>
								</Compare>
								<Compare>
									<Condition>
										<Value1>t_slaveFrame.Command</Value1>
										<Operator>Equal</Operator>
										<Value2>Session</Value2>
									</Condition>
									<Condition>
										<Value1>BytesToBeSent</Value1>
										<Operator>NotEqual</Operator>
										<Value2>0</Value2>
									</Condition>
									<Condition>
										<Value1>crcCorrect</Value1>
										<Operator>Equal</Operator>
										<Value2>true</Value2>
									</Condition>
									<Statement>
										<CallFunction>SESSION_STAY1_DECREMENTED_CRC0</CallFunction>
									</Statement>
								</Compare>
								<Compare>
									<Condition>
										<Value1>t_slaveFrame.Command</Value1>
										<Operator>Equal</Operator>
										<Value2>Reset</Value2>
									</Condition>
									<Statement>
										<Return>
											<Type>Error</Type>
											<Value>Invalid CMD(Reset) received</Value>
											<Id>1</Id>
										</Return>
									</Statement>
								</Compare>
								<Compare>
									<Condition>
										<Value1>t_slaveFrame.Command</Value1>
										<Operator>Equal</Operator>
										<Value2>Connection</Value2>
									</Condition>
									<Statement>
										<Return>
											<Type>Error</Type>
											<Value>Invalid CMD (Connection) received</Value>
										</Return>
									</Statement>
								</Compare>
								<Compare>
									<Condition>
										<Value1>t_slaveFrame.Command</Value1>
										<Operator>Equal</Operator>
										<Value2>Parameter</Value2>
									</Condition>
									<Statement>
										<Return>
											<Type>Error</Type>
											<Value>Invalid CMD (Parameter) received</Value>
											<Id>1</Id>
										</Return>
									</Statement>
								</Compare>
								<Compare>
									<Condition>
										<Value1>t_slaveFrame.Command</Value1>
										<Operator>Equal</Operator>
										<Value2>ProcessData</Value2>
									</Condition>
									<Statement>
										<Return>
											<Type>Error</Type>
											<Value>Invalid CMD (ProcessData) received</Value>
											<Id>1</Id>
										</Return>
									</Statement>
								</Compare>
								<Compare>
									<Condition>
										<Value1>t_slaveFrame.Command</Value1>
										<Operator>Equal</Operator>
										<Value2>FailSafeData</Value2>
									</Condition>
									<Statement>
										<Return>
											<Type>Error</Type>
											<Value>Invalid CMD (FailSafeData) received</Value>
											<Id>1</Id>
										</Return>
									</Statement>
								</Compare>
								<Compare>
									<Condition>
										<Value1>t_slaveFrame.Command</Value1>
										<Operator>NotEqual</Operator>
										<Value2>Reset</Value2>
									</Condition>
									<Condition>
										<Value1>t_slaveFrame.Command</Value1>
										<Operator>NotEqual</Operator>
										<Value2>Session</Value2>
									</Condition>
									<Condition>
										<Value1>t_slaveFrame.Command</Value1>
										<Operator>NotEqual</Operator>
										<Value2>Connection</Value2>
									</Condition>
									<Condition>
										<Value1>t_slaveFrame.Command</Value1>
										<Operator>NotEqual</Operator>
										<Value2>Parameter</Value2>
									</Condition>
									<Condition>
										<Value1>t_slaveFrame.Command</Value1>
										<Operator>NotEqual</Operator>
										<Value2>ProcessData</Value2>
									</Condition>
									<Condition>
										<Value1>t_slaveFrame.Command</Value1>
										<Operator>NotEqual</Operator>
										<Value2>FailSafeData</Value2>
									</Condition>
									<Statement>
										<Return>
											<Type>Error</Type>
											<Value>Unknown CMD received</Value>
											<Id>2</Id>
										</Return>
									</Statement>
								</Compare>
							</Compares>
						</TestStep>
						<TestStep Name="CheckReceivedSlaveFrame">
							<Action>
								<CallFunction>
									<Reference>CHECK_RESET_FAIL</Reference>
								</CallFunction>
							</Action>
							<ReturnValue>
								<OnSuccess>
									<Type>Success</Type>
									<Value Param0="c_CommFaultReason">Expected CommFaultReason ({0}) received</Value>
								</OnSuccess>
							</ReturnValue>
						</TestStep>
					</TestSteps>
				</TestCase>
				<TestCase Name="#2.14 SESSION_Fail5" CaseId="14">
					<Comment>BytesToBeSent == 0, Cmd == Session obwohl Connection erwartet </Comment>
					<CaseVariables>
						<Variable>
							<Name>c_CommFaultReason</Name>
							<Type>Byte</Type>
						</Variable>
						<Variable>
							<Name>c_tmpByte</Name>
							<Type>Byte</Type>
						</Variable>
						<Variable>
							<Name>c_cmd</Name>
							<Type>Byte</Type>
						</Variable>
					</CaseVariables>
					<TestSteps>
						<TestStep Name="SetVariables">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>SecondSessionFrameSent</Destination>
										<Source>false</Source>
									</SetVariable>
									<SetVariable>
										<Destination>c_CommFaultReason</Destination>
										<Source>INVALID_CMD</Source>
									</SetVariable>
									<SetVariable>
										<Destination>c_tmpByte</Destination>
										<Source>0</Source>
									</SetVariable>
									<SetVariable>
										<Destination>t_watchdog</Destination>
										<Source>SafePara.Watchdog</Source>
									</SetVariable>
									<SetVariable>
										<Destination>t_wdExpired</Destination>
										<Source>false</Source>
									</SetVariable>
									<SetVariable>
										<Destination>t_masterSessionId</Destination>
										<Source>1</Source>
									</SetVariable>
									<SetVariable>
										<Destination>t_watchdog</Destination>
										<Source>SafePara.Watchdog</Source>
									</SetVariable>
									<SetVariable>
										<Destination>t_connectionId</Destination>
										<Source>3</Source>
									</SetVariable>
									<SetVariable>
										<Destination DestinationIndex="0">t_connData</Destination>
										<Source>t_connectionId</Source>
									</SetVariable>
									<SetVariable>
										<Destination DestinationIndex="2">t_connData</Destination>
										<Source>ConnData.SlaveAddress</Source>
									</SetVariable>
								</SetVariables>
							</Action>
							<Compares>
								<Compare>
									<Condition>
										<Value1>SafeDataLength</Value1>
										<Operator>NotEqual</Operator>
										<Value2>1</Value2>
									</Condition>
									<Statement>
										<SetVariables>
											<SetVariable>
												<Destination>SecondSessionFrameSent</Destination>
												<Source>true</Source>
											</SetVariable>
										</SetVariables>
									</Statement>
								</Compare>
							</Compares>
						</TestStep>
						<TestStep Name="Reset">
							<Action>
								<CallFunction>
									<Reference>RUN_DUT_TO_RESET</Reference>
								</CallFunction>
							</Action>
						</TestStep>
						<TestStep Name="CallResetOk">
							<Action>
								<CallFunction>
									<Reference>RESET_OK</Reference>
								</CallFunction>
							</Action>
						</TestStep>
						<TestStep Name="ReceiveEvent">
							<Event>
								<ReceiveFrame>t_slaveFrame</ReceiveFrame>
							</Event>
							<Informations2>
								<Information>
									<Type>Verbose</Type>
									<Value Param0="t_slaveFrame.FrameData">Slave Frame: {0}</Value>
								</Information>
							</Informations2>
						</TestStep>
						<TestStep Name="CheckWatchdog">
							<Event>
								<WatchdogExpired>
									<SetVariables>
										<SetVariable>
											<Destination>t_wdExpired</Destination>
											<Source>true</Source>
										</SetVariable>
									</SetVariables>
								</WatchdogExpired>
							</Event>
							<Compares>
								<Compare>
									<Condition>
										<Value1>t_wdExpired</Value1>
										<Operator>Equal</Operator>
										<Value2>true</Value2>
									</Condition>
									<Statement>
										<SetVariables>
											<SetVariable>
												<Destination>t_wdExpired</Destination>
												<Source>false</Source>
											</SetVariable>
										</SetVariables>
									</Statement>
									<Statement>
										<Return>
											<Type>Error</Type>
											<Value Param0="ElapsedWD">Watchdog expired! {0} ms </Value>
											<Id>5</Id>
										</Return>
									</Statement>
								</Compare>
							</Compares>
							<Informations2>
								<Information>
									<Type>Verbose</Type>
									<Value Param0="t_wdExpired">WD {0}</Value>
								</Information>
							</Informations2>
						</TestStep>
						<TestStep Name="CheckReceivedCrc">
							<Informations1>
								<Information>
									<Type>Verbose</Type>
									<Value Param0="t_slaveFrame.FrameData" Param1="LastCrc" Param2="t_slaveSeqNo" Param3="t_oldSlaveCrc" Param4="true">IsCrcCorrect(Frame {0}, LastCrc 0x{1:X4}, SeqNo {2}, OldCrc 0x{3:X4}, New {4})</Value>
								</Information>
							</Informations1>
							<Action>
								<IsCrcCorrect ReturnValue="crcCorrect">
									<Frame>t_slaveFrame</Frame>
									<LastCrc>LastCrc</LastCrc>
									<SequenceNo>t_slaveSeqNo</SequenceNo>
									<OldCrc>t_oldSlaveCrc</OldCrc>
									<New>true</New>
								</IsCrcCorrect>
							</Action>
							<ReturnValue>
								<OnFailure>
									<Type>Error</Type>
									<Value Param0="t_slaveFrame.Crc0">Invalid Crc0 reveived ({0:x})</Value>
									<Id>4</Id>
								</OnFailure>
							</ReturnValue>
						</TestStep>
						<TestStep Name="CheckSessionConditions">
							<Compares>
								<Compare>
									<Condition>
										<Value1>t_slaveFrame.Command</Value1>
										<Operator>Equal</Operator>
										<Value2>Session</Value2>
									</Condition>
									<Condition>
										<Value1>BytesToBeSent</Value1>
										<Operator>Equal</Operator>
										<Value2>0</Value2>
									</Condition>
									<Condition>
										<Value1>crcCorrect</Value1>
										<Operator>Equal</Operator>
										<Value2>true</Value2>
									</Condition>
									<Statement>
										<Information>
											<Type>Output</Type>
											<Value>Set invalid Command (Session) of the SlaveFrame</Value>
										</Information>
									</Statement>
									<Statement>
										<SetVariables>
											<SetVariable>
												<Destination>c_cmd</Destination>
												<Source>Session</Source>
											</SetVariable>
										</SetVariables>
									</Statement>
									<Statement>
										<CallFunction>SESSION_OK_INVALID</CallFunction>
									</Statement>
									<Statement>
										<GotoStep>CheckReceivedSlaveFrame</GotoStep>
									</Statement>
								</Compare>
								<Compare>
									<Condition>
										<Value1>t_slaveFrame.Command</Value1>
										<Operator>Equal</Operator>
										<Value2>Session</Value2>
									</Condition>
									<Condition>
										<Value1>crcCorrect</Value1>
										<Operator>Equal</Operator>
										<Value2>false</Value2>
									</Condition>
									<Condition>
										<Value1>SecondSessionFrameSent</Value1>
										<Operator>Equal</Operator>
										<Value2>true</Value2>
									</Condition>
									<Statement>
										<Return>
											<Type>Error</Type>
											<Value>Invalid Crc received</Value>
											<Id>4</Id>
										</Return>
									</Statement>
								</Compare>
								<Compare>
									<Condition>
										<Value1>t_slaveFrame.Command</Value1>
										<Operator>Equal</Operator>
										<Value2>Session</Value2>
									</Condition>
									<Condition>
										<Value1>crcCorrect</Value1>
										<Operator>Equal</Operator>
										<Value2>false</Value2>
									</Condition>
									<Condition>
										<Value1>SecondSessionFrameSent</Value1>
										<Operator>Equal</Operator>
										<Value2>false</Value2>
									</Condition>
									<Statement>
										<CallFunction>SESSION_STAY2</CallFunction>
									</Statement>
									<Statement>
										<GotoStep>ReceiveEvent</GotoStep>
									</Statement>
								</Compare>
								<Compare>
									<Condition>
										<Value1>t_slaveFrame.Command</Value1>
										<Operator>Equal</Operator>
										<Value2>Session</Value2>
									</Condition>
									<Condition>
										<Value1>BytesToBeSent</Value1>
										<Operator>NotEqual</Operator>
										<Value2>0</Value2>
									</Condition>
									<Condition>
										<Value1>crcCorrect</Value1>
										<Operator>Equal</Operator>
										<Value2>true</Value2>
									</Condition>
									<Statement>
										<CallFunction>SESSION_STAY1</CallFunction>
									</Statement>
									<Statement>
										<SetVariables>
											<SetVariable>
												<Destination>t_index</Destination>
												<Source>t_index+1</Source>
											</SetVariable>
										</SetVariables>
									</Statement>
									<Statement>
										<CallFunction>CHECK_REMAINING_SAFE_DATA_IN_SESSION</CallFunction>
									</Statement>
									<Statement>
										<GotoStep>ReceiveEvent</GotoStep>
									</Statement>
								</Compare>
								<Compare>
									<Condition>
										<Value1>t_slaveFrame.Command</Value1>
										<Operator>Equal</Operator>
										<Value2>Reset</Value2>
									</Condition>
									<Statement>
										<Return>
											<Type>Error</Type>
											<Value>Invalid CMD(Reset) received</Value>
											<Id>1</Id>
										</Return>
									</Statement>
								</Compare>
								<Compare>
									<Condition>
										<Value1>t_slaveFrame.Command</Value1>
										<Operator>Equal</Operator>
										<Value2>Connection</Value2>
									</Condition>
									<Statement>
										<Return>
											<Type>Error</Type>
											<Value>Invalid CMD (Connection) received</Value>
										</Return>
									</Statement>
								</Compare>
								<Compare>
									<Condition>
										<Value1>t_slaveFrame.Command</Value1>
										<Operator>Equal</Operator>
										<Value2>Parameter</Value2>
									</Condition>
									<Statement>
										<Return>
											<Type>Error</Type>
											<Value>Invalid CMD (Parameter) received</Value>
											<Id>1</Id>
										</Return>
									</Statement>
								</Compare>
								<Compare>
									<Condition>
										<Value1>t_slaveFrame.Command</Value1>
										<Operator>Equal</Operator>
										<Value2>ProcessData</Value2>
									</Condition>
									<Statement>
										<Return>
											<Type>Error</Type>
											<Value>Invalid CMD (ProcessData) received</Value>
											<Id>1</Id>
										</Return>
									</Statement>
								</Compare>
								<Compare>
									<Condition>
										<Value1>t_slaveFrame.Command</Value1>
										<Operator>Equal</Operator>
										<Value2>FailSafeData</Value2>
									</Condition>
									<Statement>
										<Return>
											<Type>Error</Type>
											<Value>Invalid CMD (FailSafeData) received</Value>
											<Id>1</Id>
										</Return>
									</Statement>
								</Compare>
								<Compare>
									<Condition>
										<Value1>t_slaveFrame.Command</Value1>
										<Operator>NotEqual</Operator>
										<Value2>Reset</Value2>
									</Condition>
									<Condition>
										<Value1>t_slaveFrame.Command</Value1>
										<Operator>NotEqual</Operator>
										<Value2>Session</Value2>
									</Condition>
									<Condition>
										<Value1>t_slaveFrame.Command</Value1>
										<Operator>NotEqual</Operator>
										<Value2>Connection</Value2>
									</Condition>
									<Condition>
										<Value1>t_slaveFrame.Command</Value1>
										<Operator>NotEqual</Operator>
										<Value2>Parameter</Value2>
									</Condition>
									<Condition>
										<Value1>t_slaveFrame.Command</Value1>
										<Operator>NotEqual</Operator>
										<Value2>ProcessData</Value2>
									</Condition>
									<Condition>
										<Value1>t_slaveFrame.Command</Value1>
										<Operator>NotEqual</Operator>
										<Value2>FailSafeData</Value2>
									</Condition>
									<Statement>
										<Return>
											<Type>Error</Type>
											<Value>Unknown CMD received</Value>
											<Id>2</Id>
										</Return>
									</Statement>
								</Compare>
							</Compares>
						</TestStep>
						<TestStep Name="CheckReceivedSlaveFrame">
							<Action>
								<CallFunction>
									<Reference>CHECK_RESET_FAIL5</Reference>
								</CallFunction>
							</Action>
							<ReturnValue>
								<OnSuccess>
									<Type>Success</Type>
									<Value Param0="t_slaveFrame.FrameData[1]">One of the expected CommFaultReason ({0}) received</Value>
								</OnSuccess>
							</ReturnValue>
						</TestStep>
					</TestSteps>
				</TestCase>
				<TestCase Name="#2.15 SESSION_Fail6" CaseId="15">
					<Comment>Reset Commando vom Master mit falscher Crc0</Comment>
					<CaseVariables>
						<Variable>
							<Name>c_CommFaultReason</Name>
							<Type>Byte</Type>
						</Variable>
						<Variable>
							<Name>c_tmpByte</Name>
							<Type>Byte</Type>
						</Variable>
						<Variable>
							<Name>c_safeData[SafeDataLength]</Name>
							<Type>ArrayOfBytes</Type>
						</Variable>
					</CaseVariables>
					<TestSteps>
						<TestStep Name="SetVariables">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>c_CommFaultReason</Destination>
										<Source>INVALID_CRC</Source>
									</SetVariable>
									<SetVariable>
										<Destination>c_tmpByte</Destination>
										<Source>0</Source>
									</SetVariable>
									<SetVariable>
										<Destination>t_watchdog</Destination>
										<Source>SafePara.Watchdog</Source>
									</SetVariable>
									<SetVariable>
										<Destination>t_masterSessionId</Destination>
										<Source>1</Source>
									</SetVariable>
									<SetVariable>
										<Destination>t_connectionId</Destination>
										<Source>0</Source>
									</SetVariable>
									<SetVariable>
										<Destination DestinationIndex="0">t_connData</Destination>
										<Source>t_connectionId</Source>
									</SetVariable>
									<SetVariable>
										<Destination DestinationIndex="2">t_connData</Destination>
										<Source>ConnData.SlaveAddress</Source>
									</SetVariable>
								</SetVariables>
							</Action>
							<Informations2>
								<Information>
									<Type>Output</Type>
									<Value Param0="t_connectionId" Param1="ConnData.SlaveAddress" Param2="t_connData">ConnectionId: {0} (0x{0:x4}), Slave Address: {1} (0x{1:x4}), Connection Data {2}</Value>
								</Information>
							</Informations2>
						</TestStep>
						<TestStep Name="GotoSession">
							<Action>
								<CallFunction>
									<Reference>RUN_DUT_TO_SESSION</Reference>
								</CallFunction>
							</Action>
						</TestStep>
						<TestStep Name="SetVars">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>LastCrc</Destination>
										<Source>t_slaveFrame.Crc0</Source>
									</SetVariable>
									<SetVariable>
										<Destination DestinationIndex="0">c_safeData</Destination>
										<Source>INVALID_CMD</Source>
									</SetVariable>
								</SetVariables>
							</Action>
						</TestStep>
						<TestStep Name="SetFrame">
							<Informations1>
								<Information>
									<Type>Verbose</Type>
									<Value Param0="c_safeData" Param1="LastCrc" Param2="t_masterSeqNo" Param3="OldMasterCrc" Param4="0">SetFrame(Command Reset, SafeData {0}, LastCrc 0x{1:x4}, ConnectionId 0x{4:x4},  SequenceNo 0x{2:x4}, OldCrc 0x{3:x4}, New true</Value>
								</Information>
							</Informations1>
							<Action>
								<SetFrame Name="t_masterFrame">
									<Command>
										<CommandValue>Reset</CommandValue>
									</Command>
									<SafeData>
										<SafeDataVariable>c_safeData</SafeDataVariable>
									</SafeData>
									<LastCRC>LastCrc</LastCRC>
									<ConnectionID>
										<UshortValue>0</UshortValue>
									</ConnectionID>
									<SequenceNo>t_masterSeqNo</SequenceNo>
									<OldCRC>OldMasterCrc</OldCRC>
									<New>true</New>
								</SetFrame>
							</Action>
							<Informations2>
								<Information>
									<Type>Output</Type>
									<Value Param0="t_masterFrame.Crc0">Valid Crc0 = 0x{0:x4}</Value>
								</Information>
							</Informations2>
						</TestStep>
						<TestStep Name="SetInvalidCrc0">
							<Action>
								<CallFunction>
									<Reference>INCREMENT_CRC_0</Reference>
								</CallFunction>
							</Action>
							<Informations2>
								<Information>
									<Type>Output</Type>
									<Value Param0="t_masterFrame.Crc0">Falsified Crc0 = 0x{0:x4}</Value>
								</Information>
							</Informations2>
						</TestStep>
						<TestStep Name="SendFrame">
							<Action>
								<SendFrame Name="t_masterFrame"/>
							</Action>
							<Informations2>
								<Information>
									<Type>Verbose</Type>
									<Value Param0="t_masterFrame.FrameData">Master Frame: {0}</Value>
								</Information>
							</Informations2>
							<ReturnValue>
								<OnFailure>
									<Type>Error</Type>
									<Value>Failed to send FSoE frame!</Value>
									<Id>256</Id>
								</OnFailure>
							</ReturnValue>
						</TestStep>
						<TestStep Name="CheckReceivedSlaveFrame">
							<Action>
								<CallFunction>
									<Reference>CHECK_RESET_FAIL</Reference>
								</CallFunction>
							</Action>
							<ReturnValue>
								<OnSuccess>
									<Type>Success</Type>
									<Value Param0="c_CommFaultReason">Expected CommFaultReason ({0}) received</Value>
								</OnSuccess>
							</ReturnValue>
						</TestStep>
					</TestSteps>
				</TestCase>
				<TestCase Name="#2.16 SESSION_Fail7" CaseId="16">
					<Comment>Falsches Kommando(Parameter), mit ConnectionId und SlaveAddress</Comment>
					<CaseVariables>
						<Variable>
							<Name>c_CommFaultReason</Name>
							<Type>Byte</Type>
						</Variable>
						<Variable>
							<Name>c_tmpByte</Name>
							<Type>Byte</Type>
						</Variable>
						<Variable>
							<Name>c_cmd</Name>
							<Type>Byte</Type>
						</Variable>
					</CaseVariables>
					<TestSteps>
						<TestStep Name="SetVariables">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>c_CommFaultReason</Destination>
										<Source>INVALID_CMD</Source>
									</SetVariable>
									<SetVariable>
										<Destination>c_tmpByte</Destination>
										<Source>0</Source>
									</SetVariable>
									<SetVariable>
										<Destination>t_watchdog</Destination>
										<Source>SafePara.Watchdog</Source>
									</SetVariable>
									<SetVariable>
										<Destination>t_masterSessionId</Destination>
										<Source>1</Source>
									</SetVariable>
									<SetVariable>
										<Destination>t_connectionId</Destination>
										<Source>3</Source>
									</SetVariable>
									<SetVariable>
										<Destination DestinationIndex="0">t_connData</Destination>
										<Source>t_connectionId</Source>
									</SetVariable>
									<SetVariable>
										<Destination DestinationIndex="2">t_connData</Destination>
										<Source>ConnData.SlaveAddress</Source>
									</SetVariable>
								</SetVariables>
							</Action>
							<Informations2>
								<Information>
									<Type>Output</Type>
									<Value Param0="t_connectionId" Param1="ConnData.SlaveAddress" Param2="t_connData">ConnectionId: {0} (0x{0:x4}), Slave Address: {1} (0x{1:x4}), Connection Data {2}</Value>
								</Information>
							</Informations2>
						</TestStep>
						<TestStep Name="GotoSession">
							<Action>
								<CallFunction>
									<Reference>RUN_DUT_TO_SESSION</Reference>
								</CallFunction>
							</Action>
						</TestStep>
						<TestStep Name="SetVars">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>c_cmd</Destination>
										<Source>Parameter</Source>
									</SetVariable>
								</SetVariables>
							</Action>
							<Informations2>
								<Information>
									<Type>Output</Type>
									<Value Param0="c_cmd">Set invalid Master Frame Command {0} (Parameter)</Value>
								</Information>
							</Informations2>
						</TestStep>
						<TestStep Name="SetFrame">
							<Action>
								<CallFunction>
									<Reference>SESSION_OK_INVALID</Reference>
								</CallFunction>
							</Action>
						</TestStep>
						<TestStep Name="CheckReceivedSlaveFrame">
							<Action>
								<CallFunction>
									<Reference>CHECK_RESET_FAIL</Reference>
								</CallFunction>
							</Action>
							<ReturnValue>
								<OnSuccess>
									<Type>Success</Type>
									<Value Param0="c_CommFaultReason">Expected CommFaultReason ({0}) received</Value>
								</OnSuccess>
							</ReturnValue>
						</TestStep>
					</TestSteps>
				</TestCase>
				<TestCase Name="#2.17 SESSION_Fail7" CaseId="17">
					<Comment>Falsches Kommando(Parameter), mit SafePara</Comment>
					<CaseVariables>
						<Variable>
							<Name>c_CommFaultReason</Name>
							<Type>Byte</Type>
						</Variable>
						<Variable>
							<Name>c_tmpByte</Name>
							<Type>Byte</Type>
						</Variable>
						<Variable>
							<Name>c_cmd</Name>
							<Type>Byte</Type>
						</Variable>
						<Variable>
							<Name>c_bytesToBeSent</Name>
							<Type>Int32</Type>
						</Variable>
						<Variable>
							<Name>c_safeData[SafeParaSize]</Name>
							<Type>ArrayOfBytes</Type>
						</Variable>
					</CaseVariables>
					<TestSteps>
						<TestStep Name="SetVariables">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>c_CommFaultReason</Destination>
										<Source>INVALID_CMD</Source>
									</SetVariable>
									<SetVariable>
										<Destination>c_tmpByte</Destination>
										<Source>0</Source>
									</SetVariable>
									<SetVariable>
										<Destination>t_watchdog</Destination>
										<Source>SafePara.Watchdog</Source>
									</SetVariable>
									<SetVariable>
										<Destination>t_masterSessionId</Destination>
										<Source>1</Source>
									</SetVariable>
									<SetVariable>
										<Destination>t_connectionId</Destination>
										<Source>3</Source>
									</SetVariable>
									<SetVariable>
										<Destination DestinationIndex="0">t_connData</Destination>
										<Source>t_connectionId</Source>
									</SetVariable>
									<SetVariable>
										<Destination DestinationIndex="2">t_connData</Destination>
										<Source>ConnData.SlaveAddress</Source>
									</SetVariable>
								</SetVariables>
							</Action>
							<Informations2>
								<Information>
									<Type>Output</Type>
									<Value Param0="t_connectionId" Param1="ConnData.SlaveAddress" Param2="t_connData">ConnectionId: {0} (0x{0:x4}), Slave Address: {1} (0x{1:x4}), Connection Data {2}</Value>
								</Information>
							</Informations2>
						</TestStep>
						<TestStep Name="GotoSession">
							<Action>
								<CallFunction>
									<Reference>RUN_DUT_TO_SESSION</Reference>
								</CallFunction>
							</Action>
						</TestStep>
						<TestStep Name="SetMasterFrameData">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>SafePara.Watchdog</Destination>
										<Source>500</Source>
									</SetVariable>
									<SetVariable>
										<Destination>c_safeData</Destination>
										<Source>SafePara</Source>
									</SetVariable>
									<SetVariable>
										<Destination>c_cmd</Destination>
										<Source>Parameter</Source>
									</SetVariable>
									<SetVariable>
										<Destination>LastCrc</Destination>
										<Source>t_slaveFrame.Crc0</Source>
									</SetVariable>
									<SetVariable>
										<Destination>c_bytesToBeSent</Destination>
										<Source>SafeParaSize</Source>
									</SetVariable>
								</SetVariables>
							</Action>
							<Informations2>
								<Information>
									<Type>Output</Type>
									<Value Param0="c_cmd">Set invalid Command {0} (Parameter)</Value>
								</Information>
								<Information>
									<Type>Output</Type>
									<Value Param0="c_safeData">Set invalid SafeParameter {0} </Value>
								</Information>
							</Informations2>
						</TestStep>
						<TestStep Name="CallInvalidSessionOk">
							<Action>
								<CallFunction>
									<Reference>SEND_MASTER_FRAME</Reference>
								</CallFunction>
							</Action>
						</TestStep>
						<TestStep Name="CheckReceivedSlaveFrame">
							<Action>
								<CallFunction>
									<Reference>CHECK_RESET_FAIL</Reference>
								</CallFunction>
							</Action>
							<ReturnValue>
								<OnSuccess>
									<Type>Success</Type>
									<Value Param0="c_CommFaultReason">Expected CommFaultReason ({0}) received</Value>
								</OnSuccess>
							</ReturnValue>
						</TestStep>
					</TestSteps>
				</TestCase>
				<TestCase Name="#2.18 SESSION_Fail7" CaseId="18">
					<Comment>Falsches Kommando(ProcessData), mit ConnectionID und SlaveAddress</Comment>
					<CaseVariables>
						<Variable>
							<Name>c_CommFaultReason</Name>
							<Type>Byte</Type>
						</Variable>
						<Variable>
							<Name>c_tmpByte</Name>
							<Type>Byte</Type>
						</Variable>
						<Variable>
							<Name>c_cmd</Name>
							<Type>Byte</Type>
						</Variable>
						<Variable>
							<Name>c_bytesToBeSent</Name>
							<Type>Int32</Type>
						</Variable>
						<Variable>
							<Name>c_safeData[4]</Name>
							<Type>ArrayOfBytes</Type>
						</Variable>
					</CaseVariables>
					<TestSteps>
						<TestStep Name="SetVariables">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>c_CommFaultReason</Destination>
										<Source>INVALID_CMD</Source>
									</SetVariable>
									<SetVariable>
										<Destination>c_tmpByte</Destination>
										<Source>0</Source>
									</SetVariable>
									<SetVariable>
										<Destination>t_watchdog</Destination>
										<Source>SafePara.Watchdog</Source>
									</SetVariable>
									<SetVariable>
										<Destination>t_masterSessionId</Destination>
										<Source>1</Source>
									</SetVariable>
									<SetVariable>
										<Destination>t_connectionId</Destination>
										<Source>3</Source>
									</SetVariable>
									<SetVariable>
										<Destination DestinationIndex="0">t_connData</Destination>
										<Source>t_connectionId</Source>
									</SetVariable>
									<SetVariable>
										<Destination DestinationIndex="2">t_connData</Destination>
										<Source>ConnData.SlaveAddress</Source>
									</SetVariable>
								</SetVariables>
							</Action>
							<Informations2>
								<Information>
									<Type>Output</Type>
									<Value Param0="t_connectionId" Param1="ConnData.SlaveAddress" Param2="t_connData">ConnectionId: {0} (0x{0:x4}), Slave Address: {1} (0x{1:x4}), Connection Data {2}</Value>
								</Information>
							</Informations2>
						</TestStep>
						<TestStep Name="GotoSession">
							<Action>
								<CallFunction>
									<Reference>RUN_DUT_TO_SESSION</Reference>
								</CallFunction>
							</Action>
						</TestStep>
						<TestStep Name="SetMasterFrameData">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>c_safeData</Destination>
										<Source>t_connData</Source>
									</SetVariable>
									<SetVariable>
										<Destination>c_cmd</Destination>
										<Source>ProcessData</Source>
									</SetVariable>
									<SetVariable>
										<Destination>LastCrc</Destination>
										<Source>t_slaveFrame.Crc0</Source>
									</SetVariable>
									<SetVariable>
										<Destination>c_bytesToBeSent</Destination>
										<Source>4</Source>
									</SetVariable>
								</SetVariables>
							</Action>
							<Informations2>
								<Information>
									<Type>Output</Type>
									<Value Param0="c_cmd">Set invalid Command {0}</Value>
								</Information>
							</Informations2>
						</TestStep>
						<TestStep Name="CallInvalidSessionOk">
							<Action>
								<CallFunction>
									<Reference>SEND_MASTER_FRAME</Reference>
								</CallFunction>
							</Action>
						</TestStep>
						<TestStep Name="CheckReceivedSlaveFrame">
							<Action>
								<CallFunction>
									<Reference>CHECK_RESET_FAIL</Reference>
								</CallFunction>
							</Action>
							<ReturnValue>
								<OnSuccess>
									<Type>Success</Type>
									<Value Param0="c_CommFaultReason">Expected CommFaultReason ({0}) received</Value>
								</OnSuccess>
							</ReturnValue>
						</TestStep>
					</TestSteps>
				</TestCase>
				<TestCase Name="#2.19 SESSION_Fail7" CaseId="19">
					<Comment>Falsches Kommando(ProcessData), mit Outputs</Comment>
					<CaseVariables>
						<Variable>
							<Name>c_CommFaultReason</Name>
							<Type>Byte</Type>
						</Variable>
						<Variable>
							<Name>c_tmpByte</Name>
							<Type>Byte</Type>
						</Variable>
						<Variable>
							<Name>c_cmd</Name>
							<Type>Byte</Type>
						</Variable>
						<Variable>
							<Name>c_bytesToBeSent</Name>
							<Type>Int32</Type>
						</Variable>
						<Variable>
							<Name>c_safeData[SafeDataLength]</Name>
							<Type>ArrayOfBytes</Type>
						</Variable>
					</CaseVariables>
					<TestSteps>
						<TestStep Name="SetVariables">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>c_CommFaultReason</Destination>
										<Source>INVALID_CMD</Source>
									</SetVariable>
									<SetVariable>
										<Destination>t_watchdog</Destination>
										<Source>SafePara.Watchdog</Source>
									</SetVariable>
									<SetVariable>
										<Destination>c_tmpByte</Destination>
										<Source>0</Source>
									</SetVariable>
									<SetVariable>
										<Destination>t_masterSessionId</Destination>
										<Source>1</Source>
									</SetVariable>
									<SetVariable>
										<Destination>t_connectionId</Destination>
										<Source>3</Source>
									</SetVariable>
									<SetVariable>
										<Destination DestinationIndex="0">t_connData</Destination>
										<Source>t_connectionId</Source>
									</SetVariable>
									<SetVariable>
										<Destination DestinationIndex="2">t_connData</Destination>
										<Source>ConnData.SlaveAddress</Source>
									</SetVariable>
								</SetVariables>
							</Action>
							<Informations2>
								<Information>
									<Type>Output</Type>
									<Value Param0="t_connectionId" Param1="ConnData.SlaveAddress" Param2="t_connData">ConnectionId: {0} (0x{0:x4}), Slave Address: {1} (0x{1:x4}), Connection Data {2}</Value>
								</Information>
							</Informations2>
						</TestStep>
						<TestStep Name="GotoSession">
							<Action>
								<CallFunction>
									<Reference>RUN_DUT_TO_SESSION</Reference>
								</CallFunction>
							</Action>
						</TestStep>
						<TestStep Name="SetMasterFrameData">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>c_cmd</Destination>
										<Source>ProcessData</Source>
									</SetVariable>
									<SetVariable>
										<Destination>LastCrc</Destination>
										<Source>t_slaveFrame.Crc0</Source>
									</SetVariable>
									<SetVariable>
										<Destination>c_bytesToBeSent</Destination>
										<Source>SafeDataLength</Source>
									</SetVariable>
								</SetVariables>
							</Action>
							<Informations2>
								<Information>
									<Type>Output</Type>
									<Value Param0="c_cmd">Set invalid Command {0}</Value>
								</Information>
							</Informations2>
						</TestStep>
						<TestStep Name="CallInvalidSessionOk">
							<Action>
								<CallFunction>
									<Reference>SEND_MASTER_FRAME</Reference>
								</CallFunction>
							</Action>
						</TestStep>
						<TestStep Name="CheckReceivedSlaveFrame">
							<Action>
								<CallFunction>
									<Reference>CHECK_RESET_FAIL</Reference>
								</CallFunction>
							</Action>
							<ReturnValue>
								<OnSuccess>
									<Type>Success</Type>
									<Value Param0="c_CommFaultReason">Expected CommFaultReason ({0}) received</Value>
								</OnSuccess>
							</ReturnValue>
						</TestStep>
					</TestSteps>
				</TestCase>
				<TestCase Name="#2.20 SESSION_Fail7" CaseId="20">
					<Comment>Falsches Kommando(FailSafeData), mit ConnectionID und SlaveAddress</Comment>
					<CaseVariables>
						<Variable>
							<Name>c_CommFaultReason</Name>
							<Type>Byte</Type>
						</Variable>
						<Variable>
							<Name>c_tmpByte</Name>
							<Type>Byte</Type>
						</Variable>
						<Variable>
							<Name>c_cmd</Name>
							<Type>Byte</Type>
						</Variable>
						<Variable>
							<Name>c_bytesToBeSent</Name>
							<Type>Int32</Type>
						</Variable>
						<Variable>
							<Name>c_safeData[4]</Name>
							<Type>ArrayOfBytes</Type>
						</Variable>
					</CaseVariables>
					<TestSteps>
						<TestStep Name="SetVariables">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>c_CommFaultReason</Destination>
										<Source>INVALID_CMD</Source>
									</SetVariable>
									<SetVariable>
										<Destination>c_tmpByte</Destination>
										<Source>0</Source>
									</SetVariable>
									<SetVariable>
										<Destination>t_watchdog</Destination>
										<Source>SafePara.Watchdog</Source>
									</SetVariable>
									<SetVariable>
										<Destination>t_masterSessionId</Destination>
										<Source>1</Source>
									</SetVariable>
									<SetVariable>
										<Destination>t_connectionId</Destination>
										<Source>3</Source>
									</SetVariable>
									<SetVariable>
										<Destination DestinationIndex="0">t_connData</Destination>
										<Source>t_connectionId</Source>
									</SetVariable>
									<SetVariable>
										<Destination DestinationIndex="2">t_connData</Destination>
										<Source>ConnData.SlaveAddress</Source>
									</SetVariable>
								</SetVariables>
							</Action>
							<Informations2>
								<Information>
									<Type>Output</Type>
									<Value Param0="t_connectionId" Param1="ConnData.SlaveAddress" Param2="t_connData">ConnectionId: {0} (0x{0:x4}), Slave Address: {1} (0x{1:x4}), Connection Data {2}</Value>
								</Information>
							</Informations2>
						</TestStep>
						<TestStep Name="GotoSession">
							<Action>
								<CallFunction>
									<Reference>RUN_DUT_TO_SESSION</Reference>
								</CallFunction>
							</Action>
						</TestStep>
						<TestStep Name="SetMasterFrameData">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>c_safeData</Destination>
										<Source>t_connData</Source>
									</SetVariable>
									<SetVariable>
										<Destination>c_cmd</Destination>
										<Source>FailSafeData</Source>
									</SetVariable>
									<SetVariable>
										<Destination>LastCrc</Destination>
										<Source>t_slaveFrame.Crc0</Source>
									</SetVariable>
									<SetVariable>
										<Destination>c_bytesToBeSent</Destination>
										<Source>4</Source>
									</SetVariable>
								</SetVariables>
							</Action>
							<Informations2>
								<Information>
									<Type>Output</Type>
									<Value Param0="c_cmd">Set invalid Command {0}</Value>
								</Information>
							</Informations2>
						</TestStep>
						<TestStep Name="CallInvalidSessionOk">
							<Action>
								<CallFunction>
									<Reference>SEND_MASTER_FRAME</Reference>
								</CallFunction>
							</Action>
						</TestStep>
						<TestStep Name="CheckReceivedSlaveFrame">
							<Action>
								<CallFunction>
									<Reference>CHECK_RESET_FAIL</Reference>
								</CallFunction>
							</Action>
							<ReturnValue>
								<OnSuccess>
									<Type>Success</Type>
									<Value Param0="c_CommFaultReason">Expected CommFaultReason ({0}) received</Value>
								</OnSuccess>
							</ReturnValue>
						</TestStep>
					</TestSteps>
				</TestCase>
				<TestCase Name="#2.21 SESSION_Fail7" CaseId="21">
					<Comment>Falsches Kommando(FailSafeData)</Comment>
					<CaseVariables>
						<Variable>
							<Name>c_CommFaultReason</Name>
							<Type>Byte</Type>
						</Variable>
						<Variable>
							<Name>c_tmpByte</Name>
							<Type>Byte</Type>
						</Variable>
						<Variable>
							<Name>c_cmd</Name>
							<Type>Byte</Type>
						</Variable>
						<Variable>
							<Name>c_bytesToBeSent</Name>
							<Type>Int32</Type>
						</Variable>
						<Variable>
							<Name>c_safeData[SafeDataLength]</Name>
							<Type>ArrayOfBytes</Type>
						</Variable>
					</CaseVariables>
					<TestSteps>
						<TestStep Name="SetVariables">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>c_CommFaultReason</Destination>
										<Source>INVALID_CMD</Source>
									</SetVariable>
									<SetVariable>
										<Destination>c_tmpByte</Destination>
										<Source>0</Source>
									</SetVariable>
									<SetVariable>
										<Destination>t_watchdog</Destination>
										<Source>SafePara.Watchdog</Source>
									</SetVariable>
									<SetVariable>
										<Destination>t_masterSessionId</Destination>
										<Source>1</Source>
									</SetVariable>
									<SetVariable>
										<Destination>t_connectionId</Destination>
										<Source>3</Source>
									</SetVariable>
									<SetVariable>
										<Destination DestinationIndex="0">t_connData</Destination>
										<Source>t_connectionId</Source>
									</SetVariable>
									<SetVariable>
										<Destination DestinationIndex="2">t_connData</Destination>
										<Source>ConnData.SlaveAddress</Source>
									</SetVariable>
								</SetVariables>
							</Action>
							<Informations2>
								<Information>
									<Type>Output</Type>
									<Value Param0="t_connectionId" Param1="ConnData.SlaveAddress" Param2="t_connData">ConnectionId: {0} (0x{0:x4}), Slave Address: {1} (0x{1:x4}), Connection Data {2}</Value>
								</Information>
							</Informations2>
						</TestStep>
						<TestStep Name="GotoSession">
							<Action>
								<CallFunction>
									<Reference>RUN_DUT_TO_SESSION</Reference>
								</CallFunction>
							</Action>
						</TestStep>
						<TestStep Name="SetMasterFrameData">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>t_masterSeqNo</Destination>
										<Source>1</Source>
									</SetVariable>
									<SetVariable>
										<Destination>c_cmd</Destination>
										<Source>FailSafeData</Source>
									</SetVariable>
									<SetVariable>
										<Destination>LastCrc</Destination>
										<Source>t_slaveFrame.Crc0</Source>
									</SetVariable>
									<SetVariable>
										<Destination>c_bytesToBeSent</Destination>
										<Source>SafeDataLength</Source>
									</SetVariable>
								</SetVariables>
							</Action>
							<Informations2>
								<Information>
									<Type>Output</Type>
									<Value Param0="c_cmd">Set invalid Command {0}</Value>
								</Information>
							</Informations2>
						</TestStep>
						<TestStep Name="CallInvalidSessionOk">
							<Action>
								<CallFunction>
									<Reference>SEND_MASTER_FRAME</Reference>
								</CallFunction>
							</Action>
						</TestStep>
						<TestStep Name="CheckReceivedSlaveFrame">
							<Action>
								<CallFunction>
									<Reference>CHECK_RESET_FAIL</Reference>
								</CallFunction>
							</Action>
							<ReturnValue>
								<OnSuccess>
									<Type>Success</Type>
									<Value Param0="c_CommFaultReason">Expected CommFaultReason ({0}) received</Value>
								</OnSuccess>
							</ReturnValue>
						</TestStep>
					</TestSteps>
				</TestCase>
				<TestCase Name="#2.22 SESSION_Fail8" CaseId="22">
					<Comment>Unbekanntes Kommando(0x00), mit ConnectionID und SlaveAddress</Comment>
					<CaseVariables>
						<Variable>
							<Name>c_CommFaultReason</Name>
							<Type>Byte</Type>
						</Variable>
						<Variable>
							<Name>c_tmpByte</Name>
							<Type>Byte</Type>
						</Variable>
						<Variable>
							<Name>c_cmd</Name>
							<Type>Byte</Type>
						</Variable>
						<Variable>
							<Name>c_bytesToBeSent</Name>
							<Type>Int32</Type>
						</Variable>
						<Variable>
							<Name>c_safeData[4]</Name>
							<Type>ArrayOfBytes</Type>
						</Variable>
					</CaseVariables>
					<TestSteps>
						<TestStep Name="SetVariables">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>c_CommFaultReason</Destination>
										<Source>UNKNOWN_CMD</Source>
									</SetVariable>
									<SetVariable>
										<Destination>t_watchdog</Destination>
										<Source>SafePara.Watchdog</Source>
									</SetVariable>
									<SetVariable>
										<Destination>c_tmpByte</Destination>
										<Source>0</Source>
									</SetVariable>
									<SetVariable>
										<Destination>t_masterSessionId</Destination>
										<Source>1</Source>
									</SetVariable>
									<SetVariable>
										<Destination>t_connectionId</Destination>
										<Source>3</Source>
									</SetVariable>
									<SetVariable>
										<Destination DestinationIndex="0">t_connData</Destination>
										<Source>t_connectionId</Source>
									</SetVariable>
									<SetVariable>
										<Destination DestinationIndex="2">t_connData</Destination>
										<Source>ConnData.SlaveAddress</Source>
									</SetVariable>
								</SetVariables>
							</Action>
							<Informations2>
								<Information>
									<Type>Output</Type>
									<Value Param0="t_connectionId" Param1="ConnData.SlaveAddress" Param2="t_connData">ConnectionId: {0} (0x{0:x4}), Slave Address: {1} (0x{1:x4}), Connection Data {2}</Value>
								</Information>
							</Informations2>
						</TestStep>
						<TestStep Name="GotoSession">
							<Action>
								<CallFunction>
									<Reference>RUN_DUT_TO_SESSION</Reference>
								</CallFunction>
							</Action>
						</TestStep>
						<TestStep Name="SetMasterFrameData">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>c_safeData</Destination>
										<Source>t_connData</Source>
									</SetVariable>
									<SetVariable>
										<Destination>LastCrc</Destination>
										<Source>t_slaveFrame.Crc0</Source>
									</SetVariable>
									<SetVariable>
										<Destination>c_cmd</Destination>
										<Source>0</Source>
									</SetVariable>
									<SetVariable>
										<Destination>c_bytesToBeSent</Destination>
										<Source>4</Source>
									</SetVariable>
								</SetVariables>
							</Action>
							<Informations2>
								<Information>
									<Type>Output</Type>
									<Value Param0="c_cmd">Set invalid Command {0}</Value>
								</Information>
							</Informations2>
						</TestStep>
						<TestStep Name="CallInvalidSessionOk">
							<Action>
								<CallFunction>
									<Reference>SEND_MASTER_FRAME</Reference>
								</CallFunction>
							</Action>
						</TestStep>
						<TestStep Name="CheckReceivedSlaveFrame">
							<Action>
								<CallFunction>
									<Reference>CHECK_RESET_FAIL</Reference>
								</CallFunction>
							</Action>
							<ReturnValue>
								<OnSuccess>
									<Type>Success</Type>
									<Value Param0="c_CommFaultReason">Expected CommFaultReason ({0}) received</Value>
								</OnSuccess>
							</ReturnValue>
						</TestStep>
					</TestSteps>
				</TestCase>
				<TestCase Name="#2.23 SESSION_Fail8" CaseId="23">
					<Comment>Unbekanntes Kommando(0x2b), mit ConnectionID und SlaveAddress</Comment>
					<CaseVariables>
						<Variable>
							<Name>c_CommFaultReason</Name>
							<Type>Byte</Type>
						</Variable>
						<Variable>
							<Name>c_tmpByte</Name>
							<Type>Byte</Type>
						</Variable>
						<Variable>
							<Name>c_cmd</Name>
							<Type>Byte</Type>
						</Variable>
						<Variable>
							<Name>c_bytesToBeSent</Name>
							<Type>Int32</Type>
						</Variable>
						<Variable>
							<Name>c_safeData[4]</Name>
							<Type>ArrayOfBytes</Type>
						</Variable>
					</CaseVariables>
					<TestSteps>
						<TestStep Name="SetVariables">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>c_CommFaultReason</Destination>
										<Source>UNKNOWN_CMD</Source>
									</SetVariable>
									<SetVariable>
										<Destination>t_watchdog</Destination>
										<Source>SafePara.Watchdog</Source>
									</SetVariable>
									<SetVariable>
										<Destination>c_tmpByte</Destination>
										<Source>0</Source>
									</SetVariable>
									<SetVariable>
										<Destination>t_masterSessionId</Destination>
										<Source>1</Source>
									</SetVariable>
									<SetVariable>
										<Destination>t_connectionId</Destination>
										<Source>3</Source>
									</SetVariable>
									<SetVariable>
										<Destination DestinationIndex="0">t_connData</Destination>
										<Source>t_connectionId</Source>
									</SetVariable>
									<SetVariable>
										<Destination DestinationIndex="2">t_connData</Destination>
										<Source>ConnData.SlaveAddress</Source>
									</SetVariable>
								</SetVariables>
							</Action>
							<Informations2>
								<Information>
									<Type>Output</Type>
									<Value Param0="t_connectionId" Param1="ConnData.SlaveAddress" Param2="t_connData">ConnectionId: {0} (0x{0:x4}), Slave Address: {1} (0x{1:x4}), Connection Data {2}</Value>
								</Information>
							</Informations2>
						</TestStep>
						<TestStep Name="GotoSession">
							<Action>
								<CallFunction>
									<Reference>RUN_DUT_TO_SESSION</Reference>
								</CallFunction>
							</Action>
						</TestStep>
						<TestStep Name="SetMasterFrameData">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>c_safeData</Destination>
										<Source>t_connData</Source>
									</SetVariable>
									<SetVariable>
										<Destination>c_cmd</Destination>
										<Source>43</Source>
									</SetVariable>
									<SetVariable>
										<Destination>LastCrc</Destination>
										<Source>t_slaveFrame.Crc0</Source>
									</SetVariable>
									<SetVariable>
										<Destination>c_bytesToBeSent</Destination>
										<Source>4</Source>
									</SetVariable>
								</SetVariables>
							</Action>
							<Informations2>
								<Information>
									<Type>Output</Type>
									<Value Param0="c_cmd">Set invalid Command 0x{0:x2}</Value>
								</Information>
							</Informations2>
						</TestStep>
						<TestStep Name="CallInvalidSessionOk">
							<Action>
								<CallFunction>
									<Reference>SEND_MASTER_FRAME</Reference>
								</CallFunction>
							</Action>
						</TestStep>
						<TestStep Name="CheckReceivedSlaveFrame">
							<Action>
								<CallFunction>
									<Reference>CHECK_RESET_FAIL</Reference>
								</CallFunction>
							</Action>
							<ReturnValue>
								<OnSuccess>
									<Type>Success</Type>
									<Value Param0="c_CommFaultReason">Expected CommFaultReason ({0}) received</Value>
								</OnSuccess>
							</ReturnValue>
						</TestStep>
					</TestSteps>
				</TestCase>
				<TestCase Name="#2.24 SESSION_Fail8" CaseId="24">
					<Comment>Unbekanntes Kommando(0x37), mit ConnectionID und SlaveAddress</Comment>
					<CaseVariables>
						<Variable>
							<Name>c_CommFaultReason</Name>
							<Type>Byte</Type>
						</Variable>
						<Variable>
							<Name>c_tmpByte</Name>
							<Type>Byte</Type>
						</Variable>
						<Variable>
							<Name>c_cmd</Name>
							<Type>Byte</Type>
						</Variable>
						<Variable>
							<Name>c_bytesToBeSent</Name>
							<Type>Int32</Type>
						</Variable>
						<Variable>
							<Name>c_safeData[4]</Name>
							<Type>ArrayOfBytes</Type>
						</Variable>
					</CaseVariables>
					<TestSteps>
						<TestStep Name="SetVariables">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>c_CommFaultReason</Destination>
										<Source>UNKNOWN_CMD</Source>
									</SetVariable>
									<SetVariable>
										<Destination>t_watchdog</Destination>
										<Source>SafePara.Watchdog</Source>
									</SetVariable>
									<SetVariable>
										<Destination>c_tmpByte</Destination>
										<Source>0</Source>
									</SetVariable>
									<SetVariable>
										<Destination>t_masterSessionId</Destination>
										<Source>1</Source>
									</SetVariable>
									<SetVariable>
										<Destination>t_connectionId</Destination>
										<Source>3</Source>
									</SetVariable>
									<SetVariable>
										<Destination DestinationIndex="0">t_connData</Destination>
										<Source>t_connectionId</Source>
									</SetVariable>
									<SetVariable>
										<Destination DestinationIndex="2">t_connData</Destination>
										<Source>ConnData.SlaveAddress</Source>
									</SetVariable>
								</SetVariables>
							</Action>
							<Informations2>
								<Information>
									<Type>Output</Type>
									<Value Param0="t_connectionId" Param1="ConnData.SlaveAddress" Param2="t_connData">ConnectionId: {0} (0x{0:x4}), Slave Address: {1} (0x{1:x4}), Connection Data {2}</Value>
								</Information>
							</Informations2>
						</TestStep>
						<TestStep Name="GotoSession">
							<Action>
								<CallFunction>
									<Reference>RUN_DUT_TO_SESSION</Reference>
								</CallFunction>
							</Action>
						</TestStep>
						<TestStep Name="SetMasterFrameData">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>c_safeData</Destination>
										<Source>t_connData</Source>
									</SetVariable>
									<SetVariable>
										<Destination>c_cmd</Destination>
										<Source>55</Source>
									</SetVariable>
									<SetVariable>
										<Destination>LastCrc</Destination>
										<Source>t_slaveFrame.Crc0</Source>
									</SetVariable>
									<SetVariable>
										<Destination>c_bytesToBeSent</Destination>
										<Source>4</Source>
									</SetVariable>
								</SetVariables>
							</Action>
							<Informations2>
								<Information>
									<Type>Output</Type>
									<Value Param0="c_cmd">Set invalid Command 0x{0:x2}</Value>
								</Information>
							</Informations2>
						</TestStep>
						<TestStep Name="CallInvalidSessionOk">
							<Action>
								<CallFunction>
									<Reference>SEND_MASTER_FRAME</Reference>
								</CallFunction>
							</Action>
						</TestStep>
						<TestStep Name="CheckReceivedSlaveFrame">
							<Action>
								<CallFunction>
									<Reference>CHECK_RESET_FAIL</Reference>
								</CallFunction>
							</Action>
							<ReturnValue>
								<OnSuccess>
									<Type>Success</Type>
									<Value Param0="c_CommFaultReason">Expected CommFaultReason ({0}) received</Value>
								</OnSuccess>
							</ReturnValue>
						</TestStep>
					</TestSteps>
				</TestCase>
				<TestCase Name="#2.25 SESSION_Fail8" CaseId="25">
					<Comment>Unbekanntes Kommando(0x95), mit ConnectionID und SlaveAddress</Comment>
					<CaseVariables>
						<Variable>
							<Name>c_CommFaultReason</Name>
							<Type>Byte</Type>
						</Variable>
						<Variable>
							<Name>c_tmpByte</Name>
							<Type>Byte</Type>
						</Variable>
						<Variable>
							<Name>c_cmd</Name>
							<Type>Byte</Type>
						</Variable>
						<Variable>
							<Name>c_bytesToBeSent</Name>
							<Type>Int32</Type>
						</Variable>
						<Variable>
							<Name>c_safeData[4]</Name>
							<Type>ArrayOfBytes</Type>
						</Variable>
					</CaseVariables>
					<TestSteps>
						<TestStep Name="SetVariables">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>c_CommFaultReason</Destination>
										<Source>UNKNOWN_CMD</Source>
									</SetVariable>
									<SetVariable>
										<Destination>t_watchdog</Destination>
										<Source>SafePara.Watchdog</Source>
									</SetVariable>
									<SetVariable>
										<Destination>c_tmpByte</Destination>
										<Source>0</Source>
									</SetVariable>
									<SetVariable>
										<Destination>t_masterSessionId</Destination>
										<Source>1</Source>
									</SetVariable>
									<SetVariable>
										<Destination>t_connectionId</Destination>
										<Source>3</Source>
									</SetVariable>
									<SetVariable>
										<Destination DestinationIndex="0">t_connData</Destination>
										<Source>t_connectionId</Source>
									</SetVariable>
									<SetVariable>
										<Destination DestinationIndex="2">t_connData</Destination>
										<Source>ConnData.SlaveAddress</Source>
									</SetVariable>
								</SetVariables>
							</Action>
							<Informations2>
								<Information>
									<Type>Output</Type>
									<Value Param0="t_connectionId" Param1="ConnData.SlaveAddress" Param2="t_connData">ConnectionId: {0} (0x{0:x4}), Slave Address: {1} (0x{1:x4}), Connection Data {2}</Value>
								</Information>
							</Informations2>
						</TestStep>
						<TestStep Name="GotoSession">
							<Action>
								<CallFunction>
									<Reference>RUN_DUT_TO_SESSION</Reference>
								</CallFunction>
							</Action>
						</TestStep>
						<TestStep Name="SetMasterFrameData">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>c_safeData</Destination>
										<Source>t_connData</Source>
									</SetVariable>
									<SetVariable>
										<Destination>c_cmd</Destination>
										<Source>149</Source>
									</SetVariable>
									<SetVariable>
										<Destination>LastCrc</Destination>
										<Source>t_slaveFrame.Crc0</Source>
									</SetVariable>
									<SetVariable>
										<Destination>c_bytesToBeSent</Destination>
										<Source>4</Source>
									</SetVariable>
								</SetVariables>
							</Action>
							<Informations2>
								<Information>
									<Type>Output</Type>
									<Value Param0="c_cmd">Set invalid Command 0x{0:x2}</Value>
								</Information>
							</Informations2>
						</TestStep>
						<TestStep Name="CallInvalidSessionOk">
							<Action>
								<CallFunction>
									<Reference>SEND_MASTER_FRAME</Reference>
								</CallFunction>
							</Action>
						</TestStep>
						<TestStep Name="CheckReceivedSlaveFrame">
							<Action>
								<CallFunction>
									<Reference>CHECK_RESET_FAIL</Reference>
								</CallFunction>
							</Action>
							<ReturnValue>
								<OnSuccess>
									<Type>Success</Type>
									<Value Param0="c_CommFaultReason">Expected CommFaultReason ({0}) received</Value>
								</OnSuccess>
							</ReturnValue>
						</TestStep>
					</TestSteps>
				</TestCase>
				<TestCase Name="#2.26 SESSION_Fail8" CaseId="26">
					<Comment>Unbekanntes Kommando(0xff), mit ConnectionID und SlaveAddress</Comment>
					<CaseVariables>
						<Variable>
							<Name>c_CommFaultReason</Name>
							<Type>Byte</Type>
						</Variable>
						<Variable>
							<Name>c_tmpByte</Name>
							<Type>Byte</Type>
						</Variable>
						<Variable>
							<Name>c_cmd</Name>
							<Type>Byte</Type>
						</Variable>
						<Variable>
							<Name>c_bytesToBeSent</Name>
							<Type>Int32</Type>
						</Variable>
						<Variable>
							<Name>c_safeData[4]</Name>
							<Type>ArrayOfBytes</Type>
						</Variable>
					</CaseVariables>
					<TestSteps>
						<TestStep Name="SetVariables">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>c_CommFaultReason</Destination>
										<Source>UNKNOWN_CMD</Source>
									</SetVariable>
									<SetVariable>
										<Destination>t_watchdog</Destination>
										<Source>SafePara.Watchdog</Source>
									</SetVariable>
									<SetVariable>
										<Destination>c_tmpByte</Destination>
										<Source>0</Source>
									</SetVariable>
									<SetVariable>
										<Destination>t_masterSessionId</Destination>
										<Source>1</Source>
									</SetVariable>
									<SetVariable>
										<Destination>t_connectionId</Destination>
										<Source>3</Source>
									</SetVariable>
									<SetVariable>
										<Destination DestinationIndex="0">t_connData</Destination>
										<Source>t_connectionId</Source>
									</SetVariable>
									<SetVariable>
										<Destination DestinationIndex="2">t_connData</Destination>
										<Source>ConnData.SlaveAddress</Source>
									</SetVariable>
								</SetVariables>
							</Action>
							<Informations2>
								<Information>
									<Type>Output</Type>
									<Value Param0="t_connectionId" Param1="ConnData.SlaveAddress" Param2="t_connData">ConnectionId: {0} (0x{0:x4}), Slave Address: {1} (0x{1:x4}), Connection Data {2}</Value>
								</Information>
							</Informations2>
						</TestStep>
						<TestStep Name="GotoSession">
							<Action>
								<CallFunction>
									<Reference>RUN_DUT_TO_SESSION</Reference>
								</CallFunction>
							</Action>
						</TestStep>
						<TestStep Name="SetMasterFrameData">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>c_safeData</Destination>
										<Source>t_connData</Source>
									</SetVariable>
									<SetVariable>
										<Destination>c_cmd</Destination>
										<Source>255</Source>
									</SetVariable>
									<SetVariable>
										<Destination>LastCrc</Destination>
										<Source>t_slaveFrame.Crc0</Source>
									</SetVariable>
									<SetVariable>
										<Destination>c_bytesToBeSent</Destination>
										<Source>4</Source>
									</SetVariable>
								</SetVariables>
							</Action>
							<Informations2>
								<Information>
									<Type>Output</Type>
									<Value Param0="c_cmd">Set invalid Command 0x{0:x2}</Value>
								</Information>
							</Informations2>
						</TestStep>
						<TestStep Name="CallInvalidSessionOk">
							<Action>
								<CallFunction>
									<Reference>SEND_MASTER_FRAME</Reference>
								</CallFunction>
							</Action>
						</TestStep>
						<TestStep Name="CheckReceivedSlaveFrame">
							<Action>
								<CallFunction>
									<Reference>CHECK_RESET_FAIL</Reference>
								</CallFunction>
							</Action>
							<ReturnValue>
								<OnSuccess>
									<Type>Success</Type>
									<Value Param0="c_CommFaultReason">Expected CommFaultReason ({0}) received</Value>
								</OnSuccess>
							</ReturnValue>
						</TestStep>
					</TestSteps>
				</TestCase>
				<TestCase Name="#2.27 SESSION_Ok1" CaseId="27">
					<Comment>Normaler Hochlauf ConnID = 1</Comment>
					<CaseVariables>
						<Variable>
							<Name>c_tmpByte</Name>
							<Type>Byte</Type>
						</Variable>
					</CaseVariables>
					<TestSteps>
						<TestStep Name="SetWD">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>t_masterSessionId</Destination>
										<Source>1</Source>
									</SetVariable>
									<SetVariable>
										<Destination>t_watchdog</Destination>
										<Source>SafePara.Watchdog</Source>
									</SetVariable>
								</SetVariables>
							</Action>
						</TestStep>
						<TestStep Name="GotoSession">
							<Action>
								<CallFunction>
									<Reference>RUN_DUT_TO_SESSION</Reference>
								</CallFunction>
							</Action>
						</TestStep>
						<TestStep Name="SetConnectionData">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>t_connectionId</Destination>
										<Source>1</Source>
									</SetVariable>
									<SetVariable>
										<Destination DestinationIndex="0">t_connData</Destination>
										<Source>t_connectionId</Source>
									</SetVariable>
									<SetVariable>
										<Destination DestinationIndex="2">t_connData</Destination>
										<Source>ConnData.SlaveAddress</Source>
									</SetVariable>
								</SetVariables>
							</Action>
							<Informations2>
								<Information>
									<Type>Output</Type>
									<Value Param0="t_connectionId" Param1="ConnData.SlaveAddress" Param2="t_connData">ConnectionId: {0} (0x{0:x4}), Slave Address: {1} (0x{1:x4}), Connection Data {2}</Value>
								</Information>
							</Informations2>
						</TestStep>
						<TestStep Name="CallSessionOk">
							<Action>
								<CallFunction>
									<Reference>SESSION_OK</Reference>
								</CallFunction>
							</Action>
						</TestStep>
						<TestStep Name="ReceiveEvent">
							<Event>
								<ReceiveFrame>t_slaveFrame</ReceiveFrame>
							</Event>
							<Informations2>
								<Information>
									<Type>Verbose</Type>
									<Value Param0="t_slaveFrame.FrameData">Slave Frame: {0}</Value>
								</Information>
							</Informations2>
						</TestStep>
						<TestStep Name="CheckWatchdog">
							<Event>
								<WatchdogExpired>
									<Return>
										<Type>Error</Type>
										<Value Param0="ElapsedWD">Watchdog expired!  {0} ms</Value>
										<Id>5</Id>
									</Return>
								</WatchdogExpired>
							</Event>
						</TestStep>
						<TestStep Name="CheckSafeData">
							<Action>
								<IsSafeDataCorrect ReturnValue="safeDataCorrect">
									<Frame>t_slaveFrame</Frame>
									<ExpectedData>t_connData</ExpectedData>
									<BytesSent>4-BytesToBeSent</BytesSent>
								</IsSafeDataCorrect>
							</Action>
						</TestStep>
						<TestStep Name="CheckReceivedCrc">
							<Informations1>
								<Information>
									<Type>Verbose</Type>
									<Value Param0="t_slaveFrame.FrameData" Param1="LastCrc" Param2="t_slaveSeqNo" Param3="t_oldSlaveCrc" Param4="true">IsCrcCorrect(Frame {0}, LastCrc 0x{1:X4}, SeqNo {2}, OldCrc 0x{3:X4}, New {4})</Value>
								</Information>
							</Informations1>
							<Action>
								<IsCrcCorrect ReturnValue="crcCorrect">
									<Frame>t_slaveFrame</Frame>
									<LastCrc>LastCrc</LastCrc>
									<SequenceNo>t_slaveSeqNo</SequenceNo>
									<OldCrc>t_oldSlaveCrc</OldCrc>
									<New>true</New>
								</IsCrcCorrect>
							</Action>
							<ReturnValue>
								<OnFailure>
									<Type>Error</Type>
									<Value Param0="t_slaveFrame.Crc0">Invalid Crc0 reveived ({0:x})</Value>
									<Id>4</Id>
								</OnFailure>
							</ReturnValue>
						</TestStep>
						<TestStep Name="CheckConnectionCondition">
							<Compares>
								<Compare>
									<Condition>
										<Value1>t_slaveFrame.Command</Value1>
										<Operator>Equal</Operator>
										<Value2>Connection</Value2>
									</Condition>
									<Condition>
										<Value1>BytesToBeSent</Value1>
										<Operator>Equal</Operator>
										<Value2>0</Value2>
									</Condition>
									<Condition>
										<Value1>t_slaveFrame.ConnId</Value1>
										<Operator>Equal</Operator>
										<Value2>t_connectionId</Value2>
									</Condition>
									<Condition>
										<Value1>safeDataCorrect</Value1>
										<Operator>Equal</Operator>
										<Value2>true</Value2>
									</Condition>
									<Condition>
										<Value1>crcCorrect</Value1>
										<Operator>Equal</Operator>
										<Value2>true</Value2>
									</Condition>
									<Statement>
										<Return>
											<Type>Success</Type>
											<Value>DUT State: Connection</Value>
										</Return>
									</Statement>
								</Compare>
								<Compare>
									<Condition>
										<Value1>t_slaveFrame.Command</Value1>
										<Operator>Equal</Operator>
										<Value2>Connection</Value2>
									</Condition>
									<Condition>
										<Value1>t_slaveFrame.ConnId</Value1>
										<Operator>Equal</Operator>
										<Value2>t_connectionId</Value2>
									</Condition>
									<Condition>
										<Value1>safeDataCorrect</Value1>
										<Operator>Equal</Operator>
										<Value2>true</Value2>
									</Condition>
									<Condition>
										<Value1>crcCorrect</Value1>
										<Operator>Equal</Operator>
										<Value2>false</Value2>
									</Condition>
									<Statement>
										<Return>
											<Type>Error</Type>
											<Value>Invalid Crc received</Value>
											<Id>4</Id>
										</Return>
									</Statement>
								</Compare>
								<Compare>
									<Condition>
										<Value1>t_slaveFrame.Command</Value1>
										<Operator>Equal</Operator>
										<Value2>Connection</Value2>
									</Condition>
									<Condition>
										<Value1>t_slaveFrame.ConnId</Value1>
										<Operator>Equal</Operator>
										<Value2>t_connectionId</Value2>
									</Condition>
									<Condition>
										<Value1>safeDataCorrect</Value1>
										<Operator>Equal</Operator>
										<Value2>false</Value2>
									</Condition>
									<Statement>
										<Return>
											<Type>Error</Type>
											<Value Param0="t_slaveFrame.ConnId" Param1="t_connectionId" Param2="safeDataCorrect">FrameConnId: {0:x4}, Connection Data{1:x4}, Safedata correct? {2}, Invalid SafeData received</Value>
											<Id>7</Id>
										</Return>
									</Statement>
								</Compare>
								<Compare>
									<Condition>
										<Value1>t_slaveFrame.Command</Value1>
										<Operator>Equal</Operator>
										<Value2>Connection</Value2>
									</Condition>
									<Condition>
										<Value1>t_slaveFrame.ConnId</Value1>
										<Operator>NotEqual</Operator>
										<Value2>t_connectionId</Value2>
									</Condition>
									<Statement>
										<Return>
											<Type>Error</Type>
											<Value>Invalid Connection Id received</Value>
											<Id>3</Id>
										</Return>
									</Statement>
								</Compare>
								<Compare>
									<Condition>
										<Value1>t_slaveFrame.Command</Value1>
										<Operator>Equal</Operator>
										<Value2>Connection</Value2>
									</Condition>
									<Condition>
										<Value1>BytesToBeSent</Value1>
										<Operator>NotEqual</Operator>
										<Value2>0</Value2>
									</Condition>
									<Condition>
										<Value1>t_slaveFrame.ConnId</Value1>
										<Operator>Equal</Operator>
										<Value2>t_connectionId</Value2>
									</Condition>
									<Condition>
										<Value1>safeDataCorrect</Value1>
										<Operator>Equal</Operator>
										<Value2>true</Value2>
									</Condition>
									<Condition>
										<Value1>crcCorrect</Value1>
										<Operator>Equal</Operator>
										<Value2>true</Value2>
									</Condition>
									<Statement>
										<CallFunction>CONN_STAY1</CallFunction>
									</Statement>
									<Statement>
										<GotoStep>ReceiveEvent</GotoStep>
									</Statement>
								</Compare>
								<Compare>
									<Condition>
										<Value1>t_slaveFrame.Command</Value1>
										<Operator>Equal</Operator>
										<Value2>Reset</Value2>
									</Condition>
									<Statement>
										<Return>
											<Type>Error</Type>
											<Value>Reset Cmd received</Value>
											<Id>2</Id>
										</Return>
									</Statement>
								</Compare>
								<Compare>
									<Condition>
										<Value1>t_slaveFrame.Command</Value1>
										<Operator>Equal</Operator>
										<Value2>Session</Value2>
									</Condition>
									<Statement>
										<Return>
											<Type>Error</Type>
											<Value>Invalid CMD (Session) received</Value>
											<Id>1</Id>
										</Return>
									</Statement>
								</Compare>
								<Compare>
									<Condition>
										<Value1>t_slaveFrame.Command</Value1>
										<Operator>Equal</Operator>
										<Value2>Parameter</Value2>
									</Condition>
									<Statement>
										<Return>
											<Type>Error</Type>
											<Value>Invalid CMD (Parameter) received</Value>
											<Id>1</Id>
										</Return>
									</Statement>
								</Compare>
								<Compare>
									<Condition>
										<Value1>t_slaveFrame.Command</Value1>
										<Operator>Equal</Operator>
										<Value2>ProcessData</Value2>
									</Condition>
									<Statement>
										<Return>
											<Type>Error</Type>
											<Value>Invalid CMD (ProcessData) received</Value>
											<Id>1</Id>
										</Return>
									</Statement>
								</Compare>
								<Compare>
									<Condition>
										<Value1>t_slaveFrame.Command</Value1>
										<Operator>Equal</Operator>
										<Value2>FailSafeData</Value2>
									</Condition>
									<Statement>
										<Return>
											<Type>Error</Type>
											<Value>Invalid CMD (FailSafeData) received</Value>
											<Id>1</Id>
										</Return>
									</Statement>
								</Compare>
								<Compare>
									<Condition>
										<Value1>t_slaveFrame.Command</Value1>
										<Operator>NotEqual</Operator>
										<Value2>Reset</Value2>
									</Condition>
									<Condition>
										<Value1>t_slaveFrame.Command</Value1>
										<Operator>NotEqual</Operator>
										<Value2>Session</Value2>
									</Condition>
									<Condition>
										<Value1>t_slaveFrame.Command</Value1>
										<Operator>NotEqual</Operator>
										<Value2>Connection</Value2>
									</Condition>
									<Condition>
										<Value1>t_slaveFrame.Command</Value1>
										<Operator>NotEqual</Operator>
										<Value2>Parameter</Value2>
									</Condition>
									<Condition>
										<Value1>t_slaveFrame.Command</Value1>
										<Operator>NotEqual</Operator>
										<Value2>ProcessData</Value2>
									</Condition>
									<Condition>
										<Value1>t_slaveFrame.Command</Value1>
										<Operator>NotEqual</Operator>
										<Value2>FailSafeData</Value2>
									</Condition>
									<Statement>
										<Return>
											<Type>Error</Type>
											<Value>Unknown CMD received</Value>
											<Id>2</Id>
										</Return>
									</Statement>
								</Compare>
								<Compare>
									<Condition>
										<Value1>1</Value1>
										<Operator>Equal</Operator>
										<Value2>1</Value2>
									</Condition>
									<Statement>
										<Return>
											<Type>Error</Type>
											<Value>General state machine error!</Value>
										</Return>
									</Statement>
								</Compare>
							</Compares>
						</TestStep>
					</TestSteps>
				</TestCase>
				<TestCase Name="#2.28 SESSION_Ok1" CaseId="28">
					<Comment>Normaler Hochlauf ConnID = Ok+1</Comment>
					<CaseVariables>
						<Variable>
							<Name>c_tmpByte</Name>
							<Type>Byte</Type>
						</Variable>
					</CaseVariables>
					<TestSteps>
						<TestStep Name="SetWD">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>t_masterSessionId</Destination>
										<Source>1</Source>
									</SetVariable>
									<SetVariable>
										<Destination>t_watchdog</Destination>
										<Source>SafePara.Watchdog</Source>
									</SetVariable>
								</SetVariables>
							</Action>
						</TestStep>
						<TestStep Name="GotoSession">
							<Action>
								<CallFunction>
									<Reference>RUN_DUT_TO_SESSION</Reference>
								</CallFunction>
							</Action>
						</TestStep>
						<TestStep Name="SetConnectionData">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>t_connectionId</Destination>
										<Source>ConnData.ConnId</Source>
									</SetVariable>
									<SetVariable>
										<Destination>t_connectionId</Destination>
										<Source>t_connectionId+1</Source>
									</SetVariable>
									<SetVariable>
										<Destination DestinationIndex="0">t_connData</Destination>
										<Source>t_connectionId</Source>
									</SetVariable>
									<SetVariable>
										<Destination DestinationIndex="2">t_connData</Destination>
										<Source>ConnData.SlaveAddress</Source>
									</SetVariable>
								</SetVariables>
							</Action>
							<Informations2>
								<Information>
									<Type>Output</Type>
									<Value Param0="t_connectionId" Param1="ConnData.SlaveAddress" Param2="t_connData">ConnectionId: {0} (0x{0:x4}), Slave Address: {1} (0x{1:x4}), Connection Data {2}</Value>
								</Information>
							</Informations2>
						</TestStep>
						<TestStep Name="CallSessionOk">
							<Action>
								<CallFunction>
									<Reference>SESSION_OK</Reference>
								</CallFunction>
							</Action>
						</TestStep>
						<TestStep Name="ReceiveEvent">
							<Event>
								<ReceiveFrame>t_slaveFrame</ReceiveFrame>
							</Event>
							<Informations2>
								<Information>
									<Type>Verbose</Type>
									<Value Param0="t_slaveFrame.FrameData">Slave Frame: {0}</Value>
								</Information>
							</Informations2>
						</TestStep>
						<TestStep Name="CheckWatchdog">
							<Event>
								<WatchdogExpired>
									<Return>
										<Type>Error</Type>
										<Value Param0="ElapsedWD">Watchdog expired!  {0} ms</Value>
										<Id>5</Id>
									</Return>
								</WatchdogExpired>
							</Event>
						</TestStep>
						<TestStep Name="CheckSafeData">
							<Action>
								<IsSafeDataCorrect ReturnValue="safeDataCorrect">
									<Frame>t_slaveFrame</Frame>
									<ExpectedData>t_connData</ExpectedData>
									<BytesSent>4-BytesToBeSent</BytesSent>
								</IsSafeDataCorrect>
							</Action>
						</TestStep>
						<TestStep Name="CheckReceivedCrc">
							<Informations1>
								<Information>
									<Type>Verbose</Type>
									<Value Param0="t_slaveFrame.FrameData" Param1="LastCrc" Param2="t_slaveSeqNo" Param3="t_oldSlaveCrc" Param4="true">IsCrcCorrect(Frame {0}, LastCrc 0x{1:X4}, SeqNo {2}, OldCrc 0x{3:X4}, New {4})</Value>
								</Information>
							</Informations1>
							<Action>
								<IsCrcCorrect ReturnValue="crcCorrect">
									<Frame>t_slaveFrame</Frame>
									<LastCrc>LastCrc</LastCrc>
									<SequenceNo>t_slaveSeqNo</SequenceNo>
									<OldCrc>t_oldSlaveCrc</OldCrc>
									<New>true</New>
								</IsCrcCorrect>
							</Action>
							<ReturnValue>
								<OnFailure>
									<Type>Error</Type>
									<Value Param0="t_slaveFrame.Crc0">Invalid Crc0 reveived ({0:x})</Value>
									<Id>4</Id>
								</OnFailure>
							</ReturnValue>
						</TestStep>
						<TestStep Name="CheckConnectionCondition">
							<Compares>
								<Compare>
									<Condition>
										<Value1>t_slaveFrame.Command</Value1>
										<Operator>Equal</Operator>
										<Value2>Connection</Value2>
									</Condition>
									<Condition>
										<Value1>BytesToBeSent</Value1>
										<Operator>Equal</Operator>
										<Value2>0</Value2>
									</Condition>
									<Condition>
										<Value1>t_slaveFrame.ConnId</Value1>
										<Operator>Equal</Operator>
										<Value2>t_connectionId</Value2>
									</Condition>
									<Condition>
										<Value1>safeDataCorrect</Value1>
										<Operator>Equal</Operator>
										<Value2>true</Value2>
									</Condition>
									<Condition>
										<Value1>crcCorrect</Value1>
										<Operator>Equal</Operator>
										<Value2>true</Value2>
									</Condition>
									<Statement>
										<Return>
											<Type>Success</Type>
											<Value>DUT State: Connection</Value>
										</Return>
									</Statement>
								</Compare>
								<Compare>
									<Condition>
										<Value1>t_slaveFrame.Command</Value1>
										<Operator>Equal</Operator>
										<Value2>Connection</Value2>
									</Condition>
									<Condition>
										<Value1>t_slaveFrame.ConnId</Value1>
										<Operator>Equal</Operator>
										<Value2>t_connectionId</Value2>
									</Condition>
									<Condition>
										<Value1>safeDataCorrect</Value1>
										<Operator>Equal</Operator>
										<Value2>true</Value2>
									</Condition>
									<Condition>
										<Value1>crcCorrect</Value1>
										<Operator>Equal</Operator>
										<Value2>false</Value2>
									</Condition>
									<Statement>
										<Return>
											<Type>Error</Type>
											<Value>Invalid Crc received</Value>
											<Id>4</Id>
										</Return>
									</Statement>
								</Compare>
								<Compare>
									<Condition>
										<Value1>t_slaveFrame.Command</Value1>
										<Operator>Equal</Operator>
										<Value2>Connection</Value2>
									</Condition>
									<Condition>
										<Value1>t_slaveFrame.ConnId</Value1>
										<Operator>Equal</Operator>
										<Value2>t_connectionId</Value2>
									</Condition>
									<Condition>
										<Value1>safeDataCorrect</Value1>
										<Operator>Equal</Operator>
										<Value2>false</Value2>
									</Condition>
									<Statement>
										<Return>
											<Type>Error</Type>
											<Value Param0="t_slaveFrame.ConnId" Param1="t_connectionId" Param2="safeDataCorrect">FrameConnId: {0:x4}, Connection Data{1:x4}, Safedata correct? {2}, Invalid SafeData received</Value>
											<Id>7</Id>
										</Return>
									</Statement>
								</Compare>
								<Compare>
									<Condition>
										<Value1>t_slaveFrame.Command</Value1>
										<Operator>Equal</Operator>
										<Value2>Connection</Value2>
									</Condition>
									<Condition>
										<Value1>t_slaveFrame.ConnId</Value1>
										<Operator>NotEqual</Operator>
										<Value2>t_connectionId</Value2>
									</Condition>
									<Statement>
										<Return>
											<Type>Error</Type>
											<Value>Invalid Connection Id received</Value>
											<Id>3</Id>
										</Return>
									</Statement>
								</Compare>
								<Compare>
									<Condition>
										<Value1>t_slaveFrame.Command</Value1>
										<Operator>Equal</Operator>
										<Value2>Connection</Value2>
									</Condition>
									<Condition>
										<Value1>BytesToBeSent</Value1>
										<Operator>NotEqual</Operator>
										<Value2>0</Value2>
									</Condition>
									<Condition>
										<Value1>t_slaveFrame.ConnId</Value1>
										<Operator>Equal</Operator>
										<Value2>t_connectionId</Value2>
									</Condition>
									<Condition>
										<Value1>safeDataCorrect</Value1>
										<Operator>Equal</Operator>
										<Value2>true</Value2>
									</Condition>
									<Condition>
										<Value1>crcCorrect</Value1>
										<Operator>Equal</Operator>
										<Value2>true</Value2>
									</Condition>
									<Statement>
										<CallFunction>CONN_STAY1</CallFunction>
									</Statement>
									<Statement>
										<GotoStep>ReceiveEvent</GotoStep>
									</Statement>
								</Compare>
								<Compare>
									<Condition>
										<Value1>t_slaveFrame.Command</Value1>
										<Operator>Equal</Operator>
										<Value2>Reset</Value2>
									</Condition>
									<Statement>
										<Return>
											<Type>Error</Type>
											<Value>Reset Cmd received</Value>
											<Id>2</Id>
										</Return>
									</Statement>
								</Compare>
								<Compare>
									<Condition>
										<Value1>t_slaveFrame.Command</Value1>
										<Operator>Equal</Operator>
										<Value2>Session</Value2>
									</Condition>
									<Statement>
										<Return>
											<Type>Error</Type>
											<Value>Invalid CMD (Session) received</Value>
											<Id>1</Id>
										</Return>
									</Statement>
								</Compare>
								<Compare>
									<Condition>
										<Value1>t_slaveFrame.Command</Value1>
										<Operator>Equal</Operator>
										<Value2>Parameter</Value2>
									</Condition>
									<Statement>
										<Return>
											<Type>Error</Type>
											<Value>Invalid CMD (Parameter) received</Value>
											<Id>1</Id>
										</Return>
									</Statement>
								</Compare>
								<Compare>
									<Condition>
										<Value1>t_slaveFrame.Command</Value1>
										<Operator>Equal</Operator>
										<Value2>ProcessData</Value2>
									</Condition>
									<Statement>
										<Return>
											<Type>Error</Type>
											<Value>Invalid CMD (ProcessData) received</Value>
											<Id>1</Id>
										</Return>
									</Statement>
								</Compare>
								<Compare>
									<Condition>
										<Value1>t_slaveFrame.Command</Value1>
										<Operator>Equal</Operator>
										<Value2>FailSafeData</Value2>
									</Condition>
									<Statement>
										<Return>
											<Type>Error</Type>
											<Value>Invalid CMD (FailSafeData) received</Value>
											<Id>1</Id>
										</Return>
									</Statement>
								</Compare>
								<Compare>
									<Condition>
										<Value1>t_slaveFrame.Command</Value1>
										<Operator>NotEqual</Operator>
										<Value2>Reset</Value2>
									</Condition>
									<Condition>
										<Value1>t_slaveFrame.Command</Value1>
										<Operator>NotEqual</Operator>
										<Value2>Session</Value2>
									</Condition>
									<Condition>
										<Value1>t_slaveFrame.Command</Value1>
										<Operator>NotEqual</Operator>
										<Value2>Connection</Value2>
									</Condition>
									<Condition>
										<Value1>t_slaveFrame.Command</Value1>
										<Operator>NotEqual</Operator>
										<Value2>Parameter</Value2>
									</Condition>
									<Condition>
										<Value1>t_slaveFrame.Command</Value1>
										<Operator>NotEqual</Operator>
										<Value2>ProcessData</Value2>
									</Condition>
									<Condition>
										<Value1>t_slaveFrame.Command</Value1>
										<Operator>NotEqual</Operator>
										<Value2>FailSafeData</Value2>
									</Condition>
									<Statement>
										<Return>
											<Type>Error</Type>
											<Value>Unknown CMD received</Value>
											<Id>2</Id>
										</Return>
									</Statement>
								</Compare>
								<Compare>
									<Condition>
										<Value1>1</Value1>
										<Operator>Equal</Operator>
										<Value2>1</Value2>
									</Condition>
									<Statement>
										<Return>
											<Type>Error</Type>
											<Value>General state machine error!</Value>
										</Return>
									</Statement>
								</Compare>
							</Compares>
						</TestStep>
					</TestSteps>
				</TestCase>
				<TestCase Name="#2.29 SESSION_Ok1" CaseId="29">
					<Comment>Normaler Hochlauf ConnID = 0xffff</Comment>
					<CaseVariables>
						<Variable>
							<Name>c_tmpByte</Name>
							<Type>Byte</Type>
						</Variable>
					</CaseVariables>
					<TestSteps>
						<TestStep Name="SetWD">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>t_masterSessionId</Destination>
										<Source>1</Source>
									</SetVariable>
									<SetVariable>
										<Destination>t_watchdog</Destination>
										<Source>SafePara.Watchdog</Source>
									</SetVariable>
								</SetVariables>
							</Action>
						</TestStep>
						<TestStep Name="GotoSession">
							<Action>
								<CallFunction>
									<Reference>RUN_DUT_TO_SESSION</Reference>
								</CallFunction>
							</Action>
						</TestStep>
						<TestStep Name="SetConnectionData">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>t_connectionId</Destination>
										<Source>65535</Source>
									</SetVariable>
									<SetVariable>
										<Destination DestinationIndex="0">t_connData</Destination>
										<Source>t_connectionId</Source>
									</SetVariable>
									<SetVariable>
										<Destination DestinationIndex="2">t_connData</Destination>
										<Source>ConnData.SlaveAddress</Source>
									</SetVariable>
								</SetVariables>
							</Action>
							<Informations2>
								<Information>
									<Type>Output</Type>
									<Value Param0="t_connectionId" Param1="ConnData.SlaveAddress" Param2="t_connData">ConnectionId: {0} (0x{0:x4}), Slave Address: {1} (0x{1:x4}), Connection Data {2}</Value>
								</Information>
							</Informations2>
						</TestStep>
						<TestStep Name="CallSessionOk">
							<Action>
								<CallFunction>
									<Reference>SESSION_OK</Reference>
								</CallFunction>
							</Action>
						</TestStep>
						<TestStep Name="ReceiveEvent">
							<Event>
								<ReceiveFrame>t_slaveFrame</ReceiveFrame>
							</Event>
							<Informations2>
								<Information>
									<Type>Verbose</Type>
									<Value Param0="t_slaveFrame.FrameData">Slave Frame: {0}</Value>
								</Information>
							</Informations2>
						</TestStep>
						<TestStep Name="CheckWatchdog">
							<Event>
								<WatchdogExpired>
									<Return>
										<Type>Error</Type>
										<Value Param0="ElapsedWD">Watchdog expired!  {0} ms</Value>
										<Id>5</Id>
									</Return>
								</WatchdogExpired>
							</Event>
						</TestStep>
						<TestStep Name="CheckSafeData">
							<Action>
								<IsSafeDataCorrect ReturnValue="safeDataCorrect">
									<Frame>t_slaveFrame</Frame>
									<ExpectedData>t_connData</ExpectedData>
									<BytesSent>4-BytesToBeSent</BytesSent>
								</IsSafeDataCorrect>
							</Action>
						</TestStep>
						<TestStep Name="CheckReceivedCrc">
							<Informations1>
								<Information>
									<Type>Verbose</Type>
									<Value Param0="t_slaveFrame.FrameData" Param1="LastCrc" Param2="t_slaveSeqNo" Param3="t_oldSlaveCrc" Param4="true">IsCrcCorrect(Frame {0}, LastCrc 0x{1:X4}, SeqNo {2}, OldCrc 0x{3:X4}, New {4})</Value>
								</Information>
							</Informations1>
							<Action>
								<IsCrcCorrect ReturnValue="crcCorrect">
									<Frame>t_slaveFrame</Frame>
									<LastCrc>LastCrc</LastCrc>
									<SequenceNo>t_slaveSeqNo</SequenceNo>
									<OldCrc>t_oldSlaveCrc</OldCrc>
									<New>true</New>
								</IsCrcCorrect>
							</Action>
							<ReturnValue>
								<OnFailure>
									<Type>Error</Type>
									<Value Param0="t_slaveFrame.Crc0">Invalid Crc0 reveived ({0:x})</Value>
									<Id>4</Id>
								</OnFailure>
							</ReturnValue>
						</TestStep>
						<TestStep Name="CheckConnectionCondition">
							<Compares>
								<Compare>
									<Condition>
										<Value1>t_slaveFrame.Command</Value1>
										<Operator>Equal</Operator>
										<Value2>Connection</Value2>
									</Condition>
									<Condition>
										<Value1>BytesToBeSent</Value1>
										<Operator>Equal</Operator>
										<Value2>0</Value2>
									</Condition>
									<Condition>
										<Value1>t_slaveFrame.ConnId</Value1>
										<Operator>Equal</Operator>
										<Value2>t_connectionId</Value2>
									</Condition>
									<Condition>
										<Value1>safeDataCorrect</Value1>
										<Operator>Equal</Operator>
										<Value2>true</Value2>
									</Condition>
									<Condition>
										<Value1>crcCorrect</Value1>
										<Operator>Equal</Operator>
										<Value2>true</Value2>
									</Condition>
									<Statement>
										<Return>
											<Type>Success</Type>
											<Value>DUT State: Connection</Value>
										</Return>
									</Statement>
								</Compare>
								<Compare>
									<Condition>
										<Value1>t_slaveFrame.Command</Value1>
										<Operator>Equal</Operator>
										<Value2>Connection</Value2>
									</Condition>
									<Condition>
										<Value1>t_slaveFrame.ConnId</Value1>
										<Operator>Equal</Operator>
										<Value2>t_connectionId</Value2>
									</Condition>
									<Condition>
										<Value1>safeDataCorrect</Value1>
										<Operator>Equal</Operator>
										<Value2>true</Value2>
									</Condition>
									<Condition>
										<Value1>crcCorrect</Value1>
										<Operator>Equal</Operator>
										<Value2>false</Value2>
									</Condition>
									<Statement>
										<Return>
											<Type>Error</Type>
											<Value>Invalid Crc received</Value>
											<Id>4</Id>
										</Return>
									</Statement>
								</Compare>
								<Compare>
									<Condition>
										<Value1>t_slaveFrame.Command</Value1>
										<Operator>Equal</Operator>
										<Value2>Connection</Value2>
									</Condition>
									<Condition>
										<Value1>t_slaveFrame.ConnId</Value1>
										<Operator>Equal</Operator>
										<Value2>t_connectionId</Value2>
									</Condition>
									<Condition>
										<Value1>safeDataCorrect</Value1>
										<Operator>Equal</Operator>
										<Value2>false</Value2>
									</Condition>
									<Statement>
										<Return>
											<Type>Error</Type>
											<Value Param0="t_slaveFrame.ConnId" Param1="t_connectionId" Param2="safeDataCorrect">FrameConnId: {0:x4}, Connection Data{1:x4}, Safedata correct? {2}, Invalid SafeData received</Value>
											<Id>7</Id>
										</Return>
									</Statement>
								</Compare>
								<Compare>
									<Condition>
										<Value1>t_slaveFrame.Command</Value1>
										<Operator>Equal</Operator>
										<Value2>Connection</Value2>
									</Condition>
									<Condition>
										<Value1>t_slaveFrame.ConnId</Value1>
										<Operator>NotEqual</Operator>
										<Value2>t_connectionId</Value2>
									</Condition>
									<Statement>
										<Return>
											<Type>Error</Type>
											<Value>Invalid Connection Id received</Value>
											<Id>3</Id>
										</Return>
									</Statement>
								</Compare>
								<Compare>
									<Condition>
										<Value1>t_slaveFrame.Command</Value1>
										<Operator>Equal</Operator>
										<Value2>Connection</Value2>
									</Condition>
									<Condition>
										<Value1>BytesToBeSent</Value1>
										<Operator>NotEqual</Operator>
										<Value2>0</Value2>
									</Condition>
									<Condition>
										<Value1>t_slaveFrame.ConnId</Value1>
										<Operator>Equal</Operator>
										<Value2>t_connectionId</Value2>
									</Condition>
									<Condition>
										<Value1>safeDataCorrect</Value1>
										<Operator>Equal</Operator>
										<Value2>true</Value2>
									</Condition>
									<Condition>
										<Value1>crcCorrect</Value1>
										<Operator>Equal</Operator>
										<Value2>true</Value2>
									</Condition>
									<Statement>
										<CallFunction>CONN_STAY1</CallFunction>
									</Statement>
									<Statement>
										<GotoStep>ReceiveEvent</GotoStep>
									</Statement>
								</Compare>
								<Compare>
									<Condition>
										<Value1>t_slaveFrame.Command</Value1>
										<Operator>Equal</Operator>
										<Value2>Reset</Value2>
									</Condition>
									<Statement>
										<Return>
											<Type>Error</Type>
											<Value>Reset Cmd received</Value>
											<Id>2</Id>
										</Return>
									</Statement>
								</Compare>
								<Compare>
									<Condition>
										<Value1>t_slaveFrame.Command</Value1>
										<Operator>Equal</Operator>
										<Value2>Session</Value2>
									</Condition>
									<Statement>
										<Return>
											<Type>Error</Type>
											<Value>Invalid CMD (Session) received</Value>
											<Id>1</Id>
										</Return>
									</Statement>
								</Compare>
								<Compare>
									<Condition>
										<Value1>t_slaveFrame.Command</Value1>
										<Operator>Equal</Operator>
										<Value2>Parameter</Value2>
									</Condition>
									<Statement>
										<Return>
											<Type>Error</Type>
											<Value>Invalid CMD (Parameter) received</Value>
											<Id>1</Id>
										</Return>
									</Statement>
								</Compare>
								<Compare>
									<Condition>
										<Value1>t_slaveFrame.Command</Value1>
										<Operator>Equal</Operator>
										<Value2>ProcessData</Value2>
									</Condition>
									<Statement>
										<Return>
											<Type>Error</Type>
											<Value>Invalid CMD (ProcessData) received</Value>
											<Id>1</Id>
										</Return>
									</Statement>
								</Compare>
								<Compare>
									<Condition>
										<Value1>t_slaveFrame.Command</Value1>
										<Operator>Equal</Operator>
										<Value2>FailSafeData</Value2>
									</Condition>
									<Statement>
										<Return>
											<Type>Error</Type>
											<Value>Invalid CMD (FailSafeData) received</Value>
											<Id>1</Id>
										</Return>
									</Statement>
								</Compare>
								<Compare>
									<Condition>
										<Value1>t_slaveFrame.Command</Value1>
										<Operator>NotEqual</Operator>
										<Value2>Reset</Value2>
									</Condition>
									<Condition>
										<Value1>t_slaveFrame.Command</Value1>
										<Operator>NotEqual</Operator>
										<Value2>Session</Value2>
									</Condition>
									<Condition>
										<Value1>t_slaveFrame.Command</Value1>
										<Operator>NotEqual</Operator>
										<Value2>Connection</Value2>
									</Condition>
									<Condition>
										<Value1>t_slaveFrame.Command</Value1>
										<Operator>NotEqual</Operator>
										<Value2>Parameter</Value2>
									</Condition>
									<Condition>
										<Value1>t_slaveFrame.Command</Value1>
										<Operator>NotEqual</Operator>
										<Value2>ProcessData</Value2>
									</Condition>
									<Condition>
										<Value1>t_slaveFrame.Command</Value1>
										<Operator>NotEqual</Operator>
										<Value2>FailSafeData</Value2>
									</Condition>
									<Statement>
										<Return>
											<Type>Error</Type>
											<Value>Unknown CMD received</Value>
											<Id>2</Id>
										</Return>
									</Statement>
								</Compare>
								<Compare>
									<Condition>
										<Value1>1</Value1>
										<Operator>Equal</Operator>
										<Value2>1</Value2>
									</Condition>
									<Statement>
										<Return>
											<Type>Error</Type>
											<Value>General state machine error!</Value>
										</Return>
									</Statement>
								</Compare>
							</Compares>
						</TestStep>
					</TestSteps>
				</TestCase>
				<TestCase Name="#2.30 SESSION_Reset1" CaseId="30">
					<Comment>Reset Kommando vom Master mit ComFaultReason = 0</Comment>
					<CaseVariables>
						<Variable>
							<Name>c_CommFaultReason</Name>
							<Type>Byte</Type>
						</Variable>
						<Variable>
							<Name>c_tmpByte</Name>
							<Type>Byte</Type>
						</Variable>
						<Variable>
							<Name>c_cmd</Name>
							<Type>Byte</Type>
						</Variable>
						<Variable>
							<Name>c_bytesToBeSent</Name>
							<Type>Int32</Type>
						</Variable>
						<Variable>
							<Name>c_safeData[SafeDataLength]</Name>
							<Type>ArrayOfBytes</Type>
						</Variable>
					</CaseVariables>
					<TestSteps>
						<TestStep Name="SetVariables">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>c_CommFaultReason</Destination>
										<Source>0</Source>
									</SetVariable>
									<SetVariable>
										<Destination>t_watchdog</Destination>
										<Source>SafePara.Watchdog</Source>
									</SetVariable>
									<SetVariable>
										<Destination>c_tmpByte</Destination>
										<Source>0</Source>
									</SetVariable>
									<SetVariable>
										<Destination>t_masterSessionId</Destination>
										<Source>1</Source>
									</SetVariable>
									<SetVariable>
										<Destination>t_connectionId</Destination>
										<Source>3</Source>
									</SetVariable>
									<SetVariable>
										<Destination DestinationIndex="0">t_connData</Destination>
										<Source>t_connectionId</Source>
									</SetVariable>
									<SetVariable>
										<Destination DestinationIndex="2">t_connData</Destination>
										<Source>ConnData.SlaveAddress</Source>
									</SetVariable>
								</SetVariables>
							</Action>
							<Informations2>
								<Information>
									<Type>Output</Type>
									<Value Param0="t_connectionId" Param1="ConnData.SlaveAddress" Param2="t_connData">ConnectionId: {0} (0x{0:x4}), Slave Address: {1} (0x{1:x4}), Connection Data {2}</Value>
								</Information>
							</Informations2>
						</TestStep>
						<TestStep Name="GotoSession">
							<Action>
								<CallFunction>
									<Reference>RUN_DUT_TO_SESSION</Reference>
								</CallFunction>
							</Action>
						</TestStep>
						<TestStep Name="SetMasterFrameData">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>t_masterSeqNo</Destination>
										<Source>1</Source>
									</SetVariable>
									<SetVariable>
										<Destination>LastCrc</Destination>
										<Source>0</Source>
									</SetVariable>
									<SetVariable>
										<Destination>OldMasterCrc</Destination>
										<Source>0</Source>
									</SetVariable>
									<SetVariable>
										<Destination>c_cmd</Destination>
										<Source>Reset</Source>
									</SetVariable>
									<SetVariable>
										<Destination>t_connectionId</Destination>
										<Source>0</Source>
									</SetVariable>
									<SetVariable>
										<Destination>c_bytesToBeSent</Destination>
										<Source>1</Source>
									</SetVariable>
								</SetVariables>
							</Action>
						</TestStep>
						<TestStep Name="CallReset">
							<Action>
								<CallFunction>
									<Reference>SEND_MASTER_FRAME</Reference>
								</CallFunction>
							</Action>
						</TestStep>
						<TestStep Name="CheckReceivedSlaveFrame">
							<Action>
								<CallFunction>
									<Reference>CHECK_RESET_FAIL</Reference>
								</CallFunction>
							</Action>
							<ReturnValue>
								<OnSuccess>
									<Type>Success</Type>
									<Value Param0="c_CommFaultReason">Expected CommFaultReason ({0}) received</Value>
								</OnSuccess>
							</ReturnValue>
						</TestStep>
					</TestSteps>
				</TestCase>
				<TestCase Name="#2.31 SESSION_Reset1" CaseId="31">
					<Comment>Reset Kommando vom Master mit ComFaultReason = 1</Comment>
					<CaseVariables>
						<Variable>
							<Name>c_CommFaultReason</Name>
							<Type>Byte</Type>
						</Variable>
						<Variable>
							<Name>c_tmpByte</Name>
							<Type>Byte</Type>
						</Variable>
						<Variable>
							<Name>c_tmpCommFaultReason</Name>
							<Type>Byte</Type>
						</Variable>
						<Variable>
							<Name>c_cmd</Name>
							<Type>Byte</Type>
						</Variable>
						<Variable>
							<Name>c_bytesToBeSent</Name>
							<Type>Int32</Type>
						</Variable>
						<Variable>
							<Name>c_safeData[SafeDataLength]</Name>
							<Type>ArrayOfBytes</Type>
						</Variable>
					</CaseVariables>
					<TestSteps>
						<TestStep Name="SetVariables">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>t_watchdog</Destination>
										<Source>SafePara.Watchdog</Source>
									</SetVariable>
									<SetVariable>
										<Destination>c_CommFaultReason</Destination>
										<Source>0</Source>
									</SetVariable>
									<SetVariable>
										<Destination>c_tmpByte</Destination>
										<Source>0</Source>
									</SetVariable>
									<SetVariable>
										<Destination>t_masterSessionId</Destination>
										<Source>1</Source>
									</SetVariable>
									<SetVariable>
										<Destination>t_connectionId</Destination>
										<Source>0</Source>
									</SetVariable>
									<SetVariable>
										<Destination DestinationIndex="0">t_connData</Destination>
										<Source>t_connectionId</Source>
									</SetVariable>
									<SetVariable>
										<Destination DestinationIndex="2">t_connData</Destination>
										<Source>ConnData.SlaveAddress</Source>
									</SetVariable>
								</SetVariables>
							</Action>
							<Informations2>
								<Information>
									<Type>Output</Type>
									<Value Param0="t_connectionId" Param1="ConnData.SlaveAddress" Param2="t_connData">ConnectionId: {0} (0x{0:x4}), Slave Address: {1} (0x{1:x4}), Connection Data {2}</Value>
								</Information>
							</Informations2>
						</TestStep>
						<TestStep Name="GotoSession">
							<Action>
								<CallFunction>
									<Reference>RUN_DUT_TO_SESSION</Reference>
								</CallFunction>
							</Action>
						</TestStep>
						<TestStep Name="SetMasterFrameData">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>t_masterSeqNo</Destination>
										<Source>1</Source>
									</SetVariable>
									<SetVariable>
										<Destination>t_connectionId</Destination>
										<Source>0</Source>
									</SetVariable>
									<SetVariable>
										<Destination>LastCrc</Destination>
										<Source>0</Source>
									</SetVariable>
									<SetVariable>
										<Destination>OldMasterCrc</Destination>
										<Source>0</Source>
									</SetVariable>
									<SetVariable>
										<Destination>c_cmd</Destination>
										<Source>Reset</Source>
									</SetVariable>
									<SetVariable>
										<Destination>c_tmpCommFaultReason</Destination>
										<Source>INVALID_CMD</Source>
									</SetVariable>
									<SetVariable>
										<Destination DestinationIndex="0">c_safeData</Destination>
										<Source>c_tmpCommFaultReason</Source>
									</SetVariable>
									<SetVariable>
										<Destination>c_bytesToBeSent</Destination>
										<Source>1</Source>
									</SetVariable>
								</SetVariables>
							</Action>
						</TestStep>
						<TestStep Name="CallReset">
							<Action>
								<CallFunction>
									<Reference>SEND_MASTER_FRAME</Reference>
								</CallFunction>
							</Action>
						</TestStep>
						<TestStep Name="CheckReceivedSlaveFrame">
							<Action>
								<CallFunction>
									<Reference>CHECK_RESET_FAIL</Reference>
								</CallFunction>
							</Action>
							<ReturnValue>
								<OnSuccess>
									<Type>Success</Type>
									<Value Param0="c_CommFaultReason">Expected CommFaultReason ({0}) received</Value>
								</OnSuccess>
							</ReturnValue>
						</TestStep>
					</TestSteps>
				</TestCase>
				<TestCase Name="#2.32 SESSION_Reset1" CaseId="32">
					<Comment>Reset Kommando vom Master mit ComFaultReason = 14</Comment>
					<CaseVariables>
						<Variable>
							<Name>c_CommFaultReason</Name>
							<Type>Byte</Type>
						</Variable>
						<Variable>
							<Name>c_tmpByte</Name>
							<Type>Byte</Type>
						</Variable>
						<Variable>
							<Name>c_tmpCommFaultReason</Name>
							<Type>Byte</Type>
						</Variable>
						<Variable>
							<Name>c_cmd</Name>
							<Type>Byte</Type>
						</Variable>
						<Variable>
							<Name>c_bytesToBeSent</Name>
							<Type>Int32</Type>
						</Variable>
						<Variable>
							<Name>c_safeData[SafeDataLength]</Name>
							<Type>ArrayOfBytes</Type>
						</Variable>
					</CaseVariables>
					<TestSteps>
						<TestStep Name="SetVariables">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>t_watchdog</Destination>
										<Source>SafePara.Watchdog</Source>
									</SetVariable>
									<SetVariable>
										<Destination>c_CommFaultReason</Destination>
										<Source>0</Source>
									</SetVariable>
									<SetVariable>
										<Destination>c_tmpByte</Destination>
										<Source>0</Source>
									</SetVariable>
									<SetVariable>
										<Destination>t_masterSessionId</Destination>
										<Source>1</Source>
									</SetVariable>
									<SetVariable>
										<Destination>t_connectionId</Destination>
										<Source>0</Source>
									</SetVariable>
									<SetVariable>
										<Destination DestinationIndex="0">t_connData</Destination>
										<Source>t_connectionId</Source>
									</SetVariable>
									<SetVariable>
										<Destination DestinationIndex="2">t_connData</Destination>
										<Source>ConnData.SlaveAddress</Source>
									</SetVariable>
								</SetVariables>
							</Action>
							<Informations2>
								<Information>
									<Type>Output</Type>
									<Value Param0="t_connectionId" Param1="ConnData.SlaveAddress" Param2="t_connData">ConnectionId: {0} (0x{0:x4}), Slave Address: {1} (0x{1:x4}), Connection Data {2}</Value>
								</Information>
							</Informations2>
						</TestStep>
						<TestStep Name="GotoSession">
							<Action>
								<CallFunction>
									<Reference>RUN_DUT_TO_SESSION</Reference>
								</CallFunction>
							</Action>
						</TestStep>
						<TestStep Name="SetMasterFrameData">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>t_masterSeqNo</Destination>
										<Source>1</Source>
									</SetVariable>
									<SetVariable>
										<Destination>LastCrc</Destination>
										<Source>0</Source>
									</SetVariable>
									<SetVariable>
										<Destination>t_connectionId</Destination>
										<Source>0</Source>
									</SetVariable>
									<SetVariable>
										<Destination>OldMasterCrc</Destination>
										<Source>0</Source>
									</SetVariable>
									<SetVariable>
										<Destination>c_cmd</Destination>
										<Source>Reset</Source>
									</SetVariable>
									<SetVariable>
										<Destination>c_tmpCommFaultReason</Destination>
										<Source>14</Source>
									</SetVariable>
									<SetVariable>
										<Destination DestinationIndex="0">c_safeData</Destination>
										<Source>c_tmpCommFaultReason</Source>
									</SetVariable>
									<SetVariable>
										<Destination>c_bytesToBeSent</Destination>
										<Source>1</Source>
									</SetVariable>
								</SetVariables>
							</Action>
						</TestStep>
						<TestStep Name="CallReset">
							<Action>
								<CallFunction>
									<Reference>SEND_MASTER_FRAME</Reference>
								</CallFunction>
							</Action>
						</TestStep>
						<TestStep Name="CheckReceivedSlaveFrame">
							<Action>
								<CallFunction>
									<Reference>CHECK_RESET_FAIL</Reference>
								</CallFunction>
							</Action>
							<ReturnValue>
								<OnSuccess>
									<Type>Success</Type>
									<Value Param0="c_CommFaultReason">Expected CommFaultReason ({0}) received</Value>
								</OnSuccess>
							</ReturnValue>
						</TestStep>
					</TestSteps>
				</TestCase>
				<TestCase Name="#2.33 SESSION_Reset1" CaseId="33">
					<Comment>Reset Kommando vom Master mit ComFaultReason = 15</Comment>
					<CaseVariables>
						<Variable>
							<Name>c_CommFaultReason</Name>
							<Type>Byte</Type>
						</Variable>
						<Variable>
							<Name>c_tmpByte</Name>
							<Type>Byte</Type>
						</Variable>
						<Variable>
							<Name>c_tmpCommFaultReason</Name>
							<Type>Byte</Type>
						</Variable>
						<Variable>
							<Name>c_cmd</Name>
							<Type>Byte</Type>
						</Variable>
						<Variable>
							<Name>c_bytesToBeSent</Name>
							<Type>Int32</Type>
						</Variable>
						<Variable>
							<Name>c_safeData[SafeDataLength]</Name>
							<Type>ArrayOfBytes</Type>
						</Variable>
					</CaseVariables>
					<TestSteps>
						<TestStep Name="SetVariables">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>t_watchdog</Destination>
										<Source>SafePara.Watchdog</Source>
									</SetVariable>
									<SetVariable>
										<Destination>c_CommFaultReason</Destination>
										<Source>0</Source>
									</SetVariable>
									<SetVariable>
										<Destination>c_tmpByte</Destination>
										<Source>0</Source>
									</SetVariable>
									<SetVariable>
										<Destination>t_masterSessionId</Destination>
										<Source>1</Source>
									</SetVariable>
									<SetVariable>
										<Destination>t_connectionId</Destination>
										<Source>0</Source>
									</SetVariable>
									<SetVariable>
										<Destination DestinationIndex="0">t_connData</Destination>
										<Source>t_connectionId</Source>
									</SetVariable>
									<SetVariable>
										<Destination DestinationIndex="2">t_connData</Destination>
										<Source>ConnData.SlaveAddress</Source>
									</SetVariable>
								</SetVariables>
							</Action>
							<Informations2>
								<Information>
									<Type>Output</Type>
									<Value Param0="t_connectionId" Param1="ConnData.SlaveAddress" Param2="t_connData">ConnectionId: {0} (0x{0:x4}), Slave Address: {1} (0x{1:x4}), Connection Data {2}</Value>
								</Information>
							</Informations2>
						</TestStep>
						<TestStep Name="GotoSession">
							<Action>
								<CallFunction>
									<Reference>RUN_DUT_TO_SESSION</Reference>
								</CallFunction>
							</Action>
						</TestStep>
						<TestStep Name="SetMasterFrameData">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>t_masterSeqNo</Destination>
										<Source>1</Source>
									</SetVariable>
									<SetVariable>
										<Destination>LastCrc</Destination>
										<Source>0</Source>
									</SetVariable>
									<SetVariable>
										<Destination>OldMasterCrc</Destination>
										<Source>0</Source>
									</SetVariable>
									<SetVariable>
										<Destination>t_connectionId</Destination>
										<Source>0</Source>
									</SetVariable>
									<SetVariable>
										<Destination>c_cmd</Destination>
										<Source>Reset</Source>
									</SetVariable>
									<SetVariable>
										<Destination>c_tmpCommFaultReason</Destination>
										<Source>15</Source>
									</SetVariable>
									<SetVariable>
										<Destination DestinationIndex="0">c_safeData</Destination>
										<Source>c_tmpCommFaultReason</Source>
									</SetVariable>
									<SetVariable>
										<Destination>c_bytesToBeSent</Destination>
										<Source>1</Source>
									</SetVariable>
								</SetVariables>
							</Action>
						</TestStep>
						<TestStep Name="CallReset">
							<Action>
								<CallFunction>
									<Reference>SEND_MASTER_FRAME</Reference>
								</CallFunction>
							</Action>
						</TestStep>
						<TestStep Name="CheckReceivedSlaveFrame">
							<Action>
								<CallFunction>
									<Reference>CHECK_RESET_FAIL</Reference>
								</CallFunction>
							</Action>
							<ReturnValue>
								<OnSuccess>
									<Type>Success</Type>
									<Value Param0="c_CommFaultReason">Expected CommFaultReason ({0}) received</Value>
								</OnSuccess>
							</ReturnValue>
						</TestStep>
					</TestSteps>
				</TestCase>
				<TestCase Name="#2.34 SESSION_Reset1" CaseId="34">
					<Comment>Reset Kommando vom Master mit ComFaultReason = 255</Comment>
					<CaseVariables>
						<Variable>
							<Name>c_CommFaultReason</Name>
							<Type>Byte</Type>
						</Variable>
						<Variable>
							<Name>c_tmpByte</Name>
							<Type>Byte</Type>
						</Variable>
						<Variable>
							<Name>c_tmpCommFaultReason</Name>
							<Type>Byte</Type>
						</Variable>
						<Variable>
							<Name>c_cmd</Name>
							<Type>Byte</Type>
						</Variable>
						<Variable>
							<Name>c_bytesToBeSent</Name>
							<Type>Int32</Type>
						</Variable>
						<Variable>
							<Name>c_safeData[SafeDataLength]</Name>
							<Type>ArrayOfBytes</Type>
						</Variable>
					</CaseVariables>
					<TestSteps>
						<TestStep Name="SetVariables">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>t_watchdog</Destination>
										<Source>SafePara.Watchdog</Source>
									</SetVariable>
									<SetVariable>
										<Destination>c_CommFaultReason</Destination>
										<Source>0</Source>
									</SetVariable>
									<SetVariable>
										<Destination>c_tmpByte</Destination>
										<Source>0</Source>
									</SetVariable>
									<SetVariable>
										<Destination>t_masterSessionId</Destination>
										<Source>1</Source>
									</SetVariable>
									<SetVariable>
										<Destination>t_connectionId</Destination>
										<Source>0</Source>
									</SetVariable>
									<SetVariable>
										<Destination DestinationIndex="0">t_connData</Destination>
										<Source>t_connectionId</Source>
									</SetVariable>
									<SetVariable>
										<Destination DestinationIndex="2">t_connData</Destination>
										<Source>ConnData.SlaveAddress</Source>
									</SetVariable>
								</SetVariables>
							</Action>
							<Informations2>
								<Information>
									<Type>Output</Type>
									<Value Param0="t_connectionId" Param1="ConnData.SlaveAddress" Param2="t_connData">ConnectionId: {0} (0x{0:x4}), Slave Address: {1} (0x{1:x4}), Connection Data {2}</Value>
								</Information>
							</Informations2>
						</TestStep>
						<TestStep Name="GotoSession">
							<Action>
								<CallFunction>
									<Reference>RUN_DUT_TO_SESSION</Reference>
								</CallFunction>
							</Action>
						</TestStep>
						<TestStep Name="SetMasterFrameData">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>t_masterSeqNo</Destination>
										<Source>1</Source>
									</SetVariable>
									<SetVariable>
										<Destination>LastCrc</Destination>
										<Source>0</Source>
									</SetVariable>
									<SetVariable>
										<Destination>OldMasterCrc</Destination>
										<Source>0</Source>
									</SetVariable>
									<SetVariable>
										<Destination>c_cmd</Destination>
										<Source>Reset</Source>
									</SetVariable>
									<SetVariable>
										<Destination>t_connectionId</Destination>
										<Source>0</Source>
									</SetVariable>
									<SetVariable>
										<Destination DestinationIndex="0">c_safeData</Destination>
										<Source>c_tmpCommFaultReason</Source>
									</SetVariable>
									<SetVariable>
										<Destination>c_bytesToBeSent</Destination>
										<Source>1</Source>
									</SetVariable>
								</SetVariables>
							</Action>
						</TestStep>
						<TestStep Name="CallReset">
							<Action>
								<CallFunction>
									<Reference>SEND_MASTER_FRAME</Reference>
								</CallFunction>
							</Action>
						</TestStep>
						<TestStep Name="CheckReceivedSlaveFrame">
							<Action>
								<CallFunction>
									<Reference>CHECK_RESET_FAIL</Reference>
								</CallFunction>
							</Action>
							<ReturnValue>
								<OnSuccess>
									<Type>Success</Type>
									<Value Param0="c_CommFaultReason">Expected CommFaultReason ({0}) received</Value>
								</OnSuccess>
							</ReturnValue>
						</TestStep>
					</TestSteps>
				</TestCase>
			</TestCases>
		</TestGroup>
		<TestGroup Name="#3 Connection State" GroupId="3">
			<Comment>Tests the Connection State</Comment>
			<TestCases>
				<TestCase Name="#3.1/3.2 CONNECTION_Ok" CaseId="1">
					<Comment>normaler Hochlauf</Comment>
					<CaseVariables>
						<Variable>
							<Name>c_tmpByte</Name>
							<Type>Byte</Type>
						</Variable>
					</CaseVariables>
					<TestSteps>
						<TestStep Name="SetSessionId">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>t_masterSessionId</Destination>
										<Source>1</Source>
									</SetVariable>
								</SetVariables>
							</Action>
						</TestStep>
						<TestStep Name="SetConnectionData">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>t_connectionId</Destination>
										<Source>3</Source>
									</SetVariable>
									<SetVariable>
										<Destination DestinationIndex="0">t_connData</Destination>
										<Source>t_connectionId</Source>
									</SetVariable>
									<SetVariable>
										<Destination DestinationIndex="2">t_connData</Destination>
										<Source>ConnData.SlaveAddress</Source>
									</SetVariable>
								</SetVariables>
							</Action>
							<Informations2>
								<Information>
									<Type>Output</Type>
									<Value Param0="t_connectionId" Param1="ConnData.SlaveAddress" Param2="t_connData">ConnectionId: {0} (0x{0:x4}), Slave Address: {1} (0x{1:x4}), Connection Data {2}</Value>
								</Information>
							</Informations2>
						</TestStep>
						<TestStep Name="SetParameterData">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>t_safePara</Destination>
										<Source>SafePara</Source>
									</SetVariable>
									<SetVariable>
										<Destination>t_watchdog</Destination>
										<Source>SafePara.Watchdog</Source>
									</SetVariable>
								</SetVariables>
							</Action>
							<Informations2>
								<Information>
									<Type>Output</Type>
									<Value Param0="t_watchdog" Param1="SafeParaSize" Param2="t_safePara">Watchdog: {0} ms, SafeParaSize: {1}, Safe Parameter {2}</Value>
								</Information>
							</Informations2>
						</TestStep>
						<TestStep Name="GotoConnection">
							<Action>
								<CallFunction>
									<Reference>RUN_DUT_TO_CONNECTION</Reference>
								</CallFunction>
							</Action>
						</TestStep>
						<TestStep Name="CallConnectionOk">
							<Action>
								<CallFunction>
									<Reference>CONN_OK</Reference>
								</CallFunction>
							</Action>
						</TestStep>
						<TestStep Name="ReceiveEvent">
							<Event>
								<ReceiveFrame>t_slaveFrame</ReceiveFrame>
							</Event>
							<Informations2>
								<Information>
									<Type>Verbose</Type>
									<Value Param0="t_slaveFrame.FrameData">Slave Frame: {0}</Value>
								</Information>
							</Informations2>
						</TestStep>
						<TestStep Name="CheckWatchdog">
							<Event>
								<WatchdogExpired>
									<Return>
										<Type>Error</Type>
										<Value Param0="ElapsedWD">Watchdog expired!  {0} ms</Value>
										<Id>5</Id>
									</Return>
								</WatchdogExpired>
							</Event>
						</TestStep>
						<TestStep Name="CheckSafeData">
							<Action>
								<IsSafeDataCorrect ReturnValue="safeDataCorrect">
									<Frame>t_slaveFrame</Frame>
									<ExpectedData>t_safePara</ExpectedData>
									<BytesSent>SafeParaSize-BytesToBeSent</BytesSent>
								</IsSafeDataCorrect>
							</Action>
						</TestStep>
						<TestStep Name="CheckReceivedCrc">
							<Informations1>
								<Information>
									<Type>Verbose</Type>
									<Value Param0="t_slaveFrame.FrameData" Param1="LastCrc" Param2="t_slaveSeqNo" Param3="t_oldSlaveCrc" Param4="true">IsCrcCorrect(Frame {0}, LastCrc 0x{1:X4}, SeqNo {2}, OldCrc 0x{3:X4}, New {4})</Value>
								</Information>
							</Informations1>
							<Action>
								<IsCrcCorrect ReturnValue="crcCorrect">
									<Frame>t_slaveFrame</Frame>
									<LastCrc>LastCrc</LastCrc>
									<SequenceNo>t_slaveSeqNo</SequenceNo>
									<OldCrc>t_oldSlaveCrc</OldCrc>
									<New>true</New>
								</IsCrcCorrect>
							</Action>
							<ReturnValue>
								<OnFailure>
									<Type>Error</Type>
									<Value Param0="t_slaveFrame.Crc0">Invalid Crc0 reveived ({0:x})</Value>
									<Id>4</Id>
								</OnFailure>
							</ReturnValue>
						</TestStep>
						<TestStep Name="CheckParameterCondition">
							<Compares>
								<Compare>
									<Condition>
										<Value1>t_slaveFrame.Command</Value1>
										<Operator>Equal</Operator>
										<Value2>Parameter</Value2>
									</Condition>
									<Condition>
										<Value1>BytesToBeSent</Value1>
										<Operator>Equal</Operator>
										<Value2>0</Value2>
									</Condition>
									<Condition>
										<Value1>t_slaveFrame.ConnId</Value1>
										<Operator>Equal</Operator>
										<Value2>t_connectionId</Value2>
									</Condition>
									<Condition>
										<Value1>safeDataCorrect</Value1>
										<Operator>Equal</Operator>
										<Value2>true</Value2>
									</Condition>
									<Condition>
										<Value1>crcCorrect</Value1>
										<Operator>Equal</Operator>
										<Value2>true</Value2>
									</Condition>
									<Statement>
										<Return>
											<Type>Success</Type>
											<Value>DUT State: Parameter</Value>
										</Return>
									</Statement>
								</Compare>
								<Compare>
									<Condition>
										<Value1>t_slaveFrame.Command</Value1>
										<Operator>Equal</Operator>
										<Value2>Parameter</Value2>
									</Condition>
									<Condition>
										<Value1>t_slaveFrame.ConnId</Value1>
										<Operator>Equal</Operator>
										<Value2>t_connectionId</Value2>
									</Condition>
									<Condition>
										<Value1>safeDataCorrect</Value1>
										<Operator>Equal</Operator>
										<Value2>true</Value2>
									</Condition>
									<Condition>
										<Value1>crcCorrect</Value1>
										<Operator>Equal</Operator>
										<Value2>false</Value2>
									</Condition>
									<Statement>
										<Return>
											<Type>Error</Type>
											<Value>Invalid Crc received</Value>
											<Id>4</Id>
										</Return>
									</Statement>
								</Compare>
								<Compare>
									<Condition>
										<Value1>t_slaveFrame.Command</Value1>
										<Operator>Equal</Operator>
										<Value2>Parameter</Value2>
									</Condition>
									<Condition>
										<Value1>t_slaveFrame.ConnId</Value1>
										<Operator>Equal</Operator>
										<Value2>t_connectionId</Value2>
									</Condition>
									<Condition>
										<Value1>safeDataCorrect</Value1>
										<Operator>Equal</Operator>
										<Value2>false</Value2>
									</Condition>
									<Statement>
										<Return>
											<Type>Error</Type>
											<Value Param0="t_slaveFrame.ConnId" Param1="t_connectionId" Param2="t_slaveFrame.SafeData">FrameConnId: {0:x4}, ConnectionId{1:x4},  Invalid SafeData received {2}</Value>
											<Id>7</Id>
										</Return>
									</Statement>
								</Compare>
								<Compare>
									<Condition>
										<Value1>t_slaveFrame.Command</Value1>
										<Operator>Equal</Operator>
										<Value2>Parameter</Value2>
									</Condition>
									<Condition>
										<Value1>t_slaveFrame.ConnId</Value1>
										<Operator>NotEqual</Operator>
										<Value2>t_connectionId</Value2>
									</Condition>
									<Statement>
										<Return>
											<Type>Error</Type>
											<Value>Invalid Connection Id received</Value>
											<Id>3</Id>
										</Return>
									</Statement>
								</Compare>
								<Compare>
									<Condition>
										<Value1>t_slaveFrame.Command</Value1>
										<Operator>Equal</Operator>
										<Value2>Parameter</Value2>
									</Condition>
									<Condition>
										<Value1>BytesToBeSent</Value1>
										<Operator>NotEqual</Operator>
										<Value2>0</Value2>
									</Condition>
									<Condition>
										<Value1>t_slaveFrame.ConnId</Value1>
										<Operator>Equal</Operator>
										<Value2>t_connectionId</Value2>
									</Condition>
									<Condition>
										<Value1>safeDataCorrect</Value1>
										<Operator>Equal</Operator>
										<Value2>true</Value2>
									</Condition>
									<Condition>
										<Value1>crcCorrect</Value1>
										<Operator>Equal</Operator>
										<Value2>true</Value2>
									</Condition>
									<Statement>
										<CallFunction>PARA_STAY1</CallFunction>
									</Statement>
									<Statement>
										<GotoStep>ReceiveEvent</GotoStep>
									</Statement>
								</Compare>
								<Compare>
									<Condition>
										<Value1>t_slaveFrame.Command</Value1>
										<Operator>Equal</Operator>
										<Value2>Reset</Value2>
									</Condition>
									<Statement>
										<CallFunction>GET_COMM_FAULT_REASON</CallFunction>
									</Statement>
									<Statement>
										<Return>
											<Type>Error</Type>
											<Value Param0="t_commFaultReason">Reset Cmd received , CommFaultReason: {0}</Value>
										</Return>
									</Statement>
								</Compare>
								<Compare>
									<Condition>
										<Value1>t_slaveFrame.Command</Value1>
										<Operator>Equal</Operator>
										<Value2>Session</Value2>
									</Condition>
									<Statement>
										<Return>
											<Type>Error</Type>
											<Value>Invalid CMD (Session) received</Value>
											<Id>1</Id>
										</Return>
									</Statement>
								</Compare>
								<Compare>
									<Condition>
										<Value1>t_slaveFrame.Command</Value1>
										<Operator>Equal</Operator>
										<Value2>Connection</Value2>
									</Condition>
									<Statement>
										<Return>
											<Type>Error</Type>
											<Value>Invalid CMD (Connection) received</Value>
										</Return>
									</Statement>
								</Compare>
								<Compare>
									<Condition>
										<Value1>t_slaveFrame.Command</Value1>
										<Operator>Equal</Operator>
										<Value2>ProcessData</Value2>
									</Condition>
									<Statement>
										<Return>
											<Type>Error</Type>
											<Value>Invalid CMD (ProcessData) received</Value>
											<Id>1</Id>
										</Return>
									</Statement>
								</Compare>
								<Compare>
									<Condition>
										<Value1>t_slaveFrame.Command</Value1>
										<Operator>Equal</Operator>
										<Value2>FailSafeData</Value2>
									</Condition>
									<Statement>
										<Return>
											<Type>Error</Type>
											<Value>Invalid CMD (FailSafeData) received</Value>
											<Id>1</Id>
										</Return>
									</Statement>
								</Compare>
								<Compare>
									<Condition>
										<Value1>t_slaveFrame.Command</Value1>
										<Operator>NotEqual</Operator>
										<Value2>Reset</Value2>
									</Condition>
									<Condition>
										<Value1>t_slaveFrame.Command</Value1>
										<Operator>NotEqual</Operator>
										<Value2>Session</Value2>
									</Condition>
									<Condition>
										<Value1>t_slaveFrame.Command</Value1>
										<Operator>NotEqual</Operator>
										<Value2>Connection</Value2>
									</Condition>
									<Condition>
										<Value1>t_slaveFrame.Command</Value1>
										<Operator>NotEqual</Operator>
										<Value2>Parameter</Value2>
									</Condition>
									<Condition>
										<Value1>t_slaveFrame.Command</Value1>
										<Operator>NotEqual</Operator>
										<Value2>ProcessData</Value2>
									</Condition>
									<Condition>
										<Value1>t_slaveFrame.Command</Value1>
										<Operator>NotEqual</Operator>
										<Value2>FailSafeData</Value2>
									</Condition>
									<Statement>
										<Return>
											<Type>Error</Type>
											<Value>Unknown CMD received</Value>
											<Id>2</Id>
										</Return>
									</Statement>
								</Compare>
								<Compare>
									<Condition>
										<Value1>1</Value1>
										<Operator>Equal</Operator>
										<Value2>1</Value2>
									</Condition>
									<Statement>
										<Return>
											<Type>Error</Type>
											<Value>General state machine error!</Value>
										</Return>
									</Statement>
								</Compare>
							</Compares>
						</TestStep>
					</TestSteps>
				</TestCase>
				<TestCase Name="#3.3 CONN_Fail1" CaseId="3">
					<Comment>Falsche CRC_0 (+1)</Comment>
					<CaseVariables>
						<Variable>
							<Name>c_crcIndex</Name>
							<Type>Int32</Type>
						</Variable>
						<Variable>
							<Name>c_CommFaultReason</Name>
							<Type>Byte</Type>
						</Variable>
						<Variable>
							<Name>c_tmpByte</Name>
							<Type>Byte</Type>
						</Variable>
					</CaseVariables>
					<TestSteps>
						<TestStep Name="SetVariables">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>c_CommFaultReason</Destination>
										<Source>INVALID_CRC</Source>
									</SetVariable>
									<SetVariable>
										<Destination>c_tmpByte</Destination>
										<Source>0</Source>
									</SetVariable>
									<SetVariable>
										<Destination>t_wdExpired</Destination>
										<Source>false</Source>
									</SetVariable>
									<SetVariable>
										<Destination>t_masterSessionId</Destination>
										<Source>1</Source>
									</SetVariable>
								</SetVariables>
							</Action>
						</TestStep>
						<TestStep Name="SetConnectionData">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>t_connectionId</Destination>
										<Source>3</Source>
									</SetVariable>
									<SetVariable>
										<Destination DestinationIndex="0">t_connData</Destination>
										<Source>t_connectionId</Source>
									</SetVariable>
									<SetVariable>
										<Destination DestinationIndex="2">t_connData</Destination>
										<Source>ConnData.SlaveAddress</Source>
									</SetVariable>
								</SetVariables>
							</Action>
							<Informations2>
								<Information>
									<Type>Output</Type>
									<Value Param0="t_connectionId" Param1="ConnData.SlaveAddress" Param2="t_connData">ConnectionId: {0} (0x{0:x4}), Slave Address: {1} (0x{1:x4}), Connection Data {2}</Value>
								</Information>
							</Informations2>
						</TestStep>
						<TestStep Name="SetParameterData">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>t_safePara</Destination>
										<Source>SafePara</Source>
									</SetVariable>
									<SetVariable>
										<Destination>t_watchdog</Destination>
										<Source>SafePara.Watchdog</Source>
									</SetVariable>
								</SetVariables>
							</Action>
							<Informations2>
								<Information>
									<Type>Output</Type>
									<Value Param0="t_watchdog" Param1="SafeParaSize" Param2="t_safePara">Watchdog: {0} ms, SafeParaSize: {1}, Safe Parameter {2}</Value>
								</Information>
							</Informations2>
						</TestStep>
						<TestStep Name="GotoConnection">
							<Action>
								<CallFunction>
									<Reference>RUN_DUT_TO_CONNECTION</Reference>
								</CallFunction>
							</Action>
						</TestStep>
						<TestStep Name="SetLastCrc">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>LastCrc</Destination>
										<Source>t_slaveFrame.Crc0</Source>
									</SetVariable>
								</SetVariables>
							</Action>
						</TestStep>
						<TestStep Name="SetFrame">
							<Informations1>
								<Information>
									<Type>Verbose</Type>
									<Value Param0="t_connData" Param1="LastCrc" Param2="t_masterSeqNo" Param3="OldMasterCrc" Param4="t_connectionId">SetFrame(Command Parameter, SafeData {0}, LastCrc 0x{1:x4}, ConnectionId 0x{4:x4},  SequenceNo 0x{2:x4}, OldCrc 0x{3:x4}, New true</Value>
								</Information>
							</Informations1>
							<Action>
								<SetFrame Name="t_masterFrame">
									<Command>
										<CommandValue>Parameter</CommandValue>
									</Command>
									<SafeData>
										<SafeDataVariable>t_connData</SafeDataVariable>
									</SafeData>
									<LastCRC>LastCrc</LastCRC>
									<ConnectionID>
										<ConnectionIdVariable>t_connectionId</ConnectionIdVariable>
									</ConnectionID>
									<SequenceNo>t_masterSeqNo</SequenceNo>
									<OldCRC>OldMasterCrc</OldCRC>
									<New>true</New>
								</SetFrame>
							</Action>
							<Informations2>
								<Information>
									<Type>Output</Type>
									<Value Param0="t_masterFrame.Crc0">Valid Crc0 = 0x{0:x4}</Value>
								</Information>
							</Informations2>
						</TestStep>
						<TestStep Name="SetInvalidCrc0">
							<Action>
								<CallFunction>
									<Reference>INCREMENT_CRC_0</Reference>
								</CallFunction>
							</Action>
							<Informations2>
								<Information>
									<Type>Output</Type>
									<Value Param0="t_masterFrame.Crc0">Falsified Crc0 = 0x{0:x4}</Value>
								</Information>
							</Informations2>
						</TestStep>
						<TestStep Name="SendFrame">
							<Action>
								<SendFrame Name="t_masterFrame"/>
							</Action>
							<Informations2>
								<Information>
									<Type>Verbose</Type>
									<Value Param0="t_masterFrame.FrameData">Master Frame: {0}</Value>
								</Information>
							</Informations2>
							<ReturnValue>
								<OnFailure>
									<Type>Error</Type>
									<Value>Failed to send FSoE frame!</Value>
									<Id>256</Id>
								</OnFailure>
							</ReturnValue>
						</TestStep>
						<TestStep Name="CheckReceivedSlaveFrame">
							<Action>
								<CallFunction>
									<Reference>CHECK_RESET_FAIL</Reference>
								</CallFunction>
							</Action>
							<ReturnValue>
								<OnSuccess>
									<Type>Success</Type>
									<Value Param0="c_CommFaultReason">Expected CommFaultReason ({0}) received</Value>
								</OnSuccess>
							</ReturnValue>
						</TestStep>
					</TestSteps>
				</TestCase>
				<TestCase Name="#3.4 CONN_Fail1" CaseId="4">
					<Comment>Falsche CRC_0 (-1)</Comment>
					<CaseVariables>
						<Variable>
							<Name>c_crcIndex</Name>
							<Type>Int32</Type>
						</Variable>
						<Variable>
							<Name>c_CommFaultReason</Name>
							<Type>Byte</Type>
						</Variable>
						<Variable>
							<Name>c_tmpByte</Name>
							<Type>Byte</Type>
						</Variable>
					</CaseVariables>
					<TestSteps>
						<TestStep Name="SetVariables">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>c_CommFaultReason</Destination>
										<Source>INVALID_CRC</Source>
									</SetVariable>
									<SetVariable>
										<Destination>c_tmpByte</Destination>
										<Source>0</Source>
									</SetVariable>
									<SetVariable>
										<Destination>t_wdExpired</Destination>
										<Source>false</Source>
									</SetVariable>
									<SetVariable>
										<Destination>t_masterSessionId</Destination>
										<Source>1</Source>
									</SetVariable>
								</SetVariables>
							</Action>
						</TestStep>
						<TestStep Name="SetConnectionData">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>t_connectionId</Destination>
										<Source>3</Source>
									</SetVariable>
									<SetVariable>
										<Destination DestinationIndex="0">t_connData</Destination>
										<Source>t_connectionId</Source>
									</SetVariable>
									<SetVariable>
										<Destination DestinationIndex="2">t_connData</Destination>
										<Source>ConnData.SlaveAddress</Source>
									</SetVariable>
								</SetVariables>
							</Action>
							<Informations2>
								<Information>
									<Type>Output</Type>
									<Value Param0="t_connectionId" Param1="ConnData.SlaveAddress" Param2="t_connData">ConnectionId: {0} (0x{0:x4}), Slave Address: {1} (0x{1:x4}), Connection Data {2}</Value>
								</Information>
							</Informations2>
						</TestStep>
						<TestStep Name="SetParameterData">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>t_safePara</Destination>
										<Source>SafePara</Source>
									</SetVariable>
									<SetVariable>
										<Destination>t_watchdog</Destination>
										<Source>SafePara.Watchdog</Source>
									</SetVariable>
								</SetVariables>
							</Action>
							<Informations2>
								<Information>
									<Type>Output</Type>
									<Value Param0="t_watchdog" Param1="SafeParaSize" Param2="t_safePara">Watchdog: {0} ms, SafeParaSize: {1}, Safe Parameter {2}</Value>
								</Information>
							</Informations2>
						</TestStep>
						<TestStep Name="GotoConnection">
							<Action>
								<CallFunction>
									<Reference>RUN_DUT_TO_CONNECTION</Reference>
								</CallFunction>
							</Action>
						</TestStep>
						<TestStep Name="SetLastCrc">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>LastCrc</Destination>
										<Source>t_slaveFrame.Crc0</Source>
									</SetVariable>
								</SetVariables>
							</Action>
						</TestStep>
						<TestStep Name="SetFrame">
							<Informations1>
								<Information>
									<Type>Verbose</Type>
									<Value Param0="t_connData" Param1="LastCrc" Param2="t_masterSeqNo" Param3="OldMasterCrc" Param4="t_connectionId">SetFrame(Command Parameter, SafeData {0}, LastCrc 0x{1:x4}, ConnectionId 0x{4:x4},  SequenceNo 0x{2:x4}, OldCrc 0x{3:x4}, New true</Value>
								</Information>
							</Informations1>
							<Action>
								<SetFrame Name="t_masterFrame">
									<Command>
										<CommandValue>Parameter</CommandValue>
									</Command>
									<SafeData>
										<SafeDataVariable>t_connData</SafeDataVariable>
									</SafeData>
									<LastCRC>LastCrc</LastCRC>
									<ConnectionID>
										<ConnectionIdVariable>t_connectionId</ConnectionIdVariable>
									</ConnectionID>
									<SequenceNo>t_masterSeqNo</SequenceNo>
									<OldCRC>OldMasterCrc</OldCRC>
									<New>true</New>
								</SetFrame>
							</Action>
						</TestStep>
						<TestStep Name="SetInvalidCrc0">
							<Informations1>
								<Information>
									<Type>Output</Type>
									<Value Param0="t_masterFrame.Crc0">Valid Crc0 = 0x{0:x4}</Value>
								</Information>
							</Informations1>
							<Action>
								<CallFunction>
									<Reference>DECREMENT_CRC_0</Reference>
								</CallFunction>
							</Action>
							<Informations2>
								<Information>
									<Type>Output</Type>
									<Value Param0="t_masterFrame.Crc0">Falsified Crc0 = 0x{0:x4}</Value>
								</Information>
							</Informations2>
						</TestStep>
						<TestStep Name="SendFrame">
							<Action>
								<SendFrame Name="t_masterFrame"/>
							</Action>
							<Informations2>
								<Information>
									<Type>Verbose</Type>
									<Value Param0="t_masterFrame.FrameData">Master Frame: {0}</Value>
								</Information>
							</Informations2>
							<ReturnValue>
								<OnFailure>
									<Type>Error</Type>
									<Value>Failed to send FSoE frame!</Value>
									<Id>256</Id>
								</OnFailure>
							</ReturnValue>
						</TestStep>
						<TestStep Name="CheckReceivedSlaveFrame">
							<Action>
								<CallFunction>
									<Reference>CHECK_RESET_FAIL</Reference>
								</CallFunction>
							</Action>
							<ReturnValue>
								<OnSuccess>
									<Type>Success</Type>
									<Value Param0="c_CommFaultReason">Expected CommFaultReason ({0}) received</Value>
								</OnSuccess>
							</ReturnValue>
						</TestStep>
					</TestSteps>
				</TestCase>
				<TestCase Name="#3.5 CONN_Fail1" CaseId="5">
					<Comment>Falsche CRC_1 bis CRC_n  (+1)</Comment>
					<CaseVariables>
						<Variable>
							<Name>c_CommFaultReason</Name>
							<Type>Byte</Type>
						</Variable>
						<Variable>
							<Name>c_tmpByte</Name>
							<Type>Byte</Type>
						</Variable>
						<Variable>
							<Name>c_crcIndex</Name>
							<Type>Int32</Type>
						</Variable>
						<Variable>
							<Name>c_tmpCrcn</Name>
							<Type>UInt16</Type>
						</Variable>
					</CaseVariables>
					<TestSteps>
						<TestStep Name="CheckCRCLength">
							<Compares>
								<Compare>
									<Condition>
										<Value1>CrcLength</Value1>
										<Operator>Equal</Operator>
										<Value2>1</Value2>
									</Condition>
									<Statement>
										<Return>
											<Type>SkippedCase</Type>
											<Value>Crc count ==1; ==> skip testcase</Value>
										</Return>
									</Statement>
								</Compare>
							</Compares>
						</TestStep>
						<TestStep Name="SetVariables">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>c_CommFaultReason</Destination>
										<Source>INVALID_CRC</Source>
									</SetVariable>
									<SetVariable>
										<Destination>c_tmpByte</Destination>
										<Source>0</Source>
									</SetVariable>
									<SetVariable>
										<Destination>t_wdExpired</Destination>
										<Source>false</Source>
									</SetVariable>
									<SetVariable>
										<Destination>t_masterSessionId</Destination>
										<Source>1</Source>
									</SetVariable>
									<SetVariable>
										<Destination>c_crcIndex</Destination>
										<Source>1</Source>
									</SetVariable>
								</SetVariables>
							</Action>
						</TestStep>
						<TestStep Name="SetConnectionData">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>t_connectionId</Destination>
										<Source>3</Source>
									</SetVariable>
									<SetVariable>
										<Destination DestinationIndex="0">t_connData</Destination>
										<Source>t_connectionId</Source>
									</SetVariable>
									<SetVariable>
										<Destination DestinationIndex="2">t_connData</Destination>
										<Source>ConnData.SlaveAddress</Source>
									</SetVariable>
								</SetVariables>
							</Action>
							<Informations2>
								<Information>
									<Type>Output</Type>
									<Value Param0="t_connectionId" Param1="ConnData.SlaveAddress" Param2="t_connData">ConnectionId: {0} (0x{0:x4}), Slave Address: {1} (0x{1:x4}), Connection Data {2}</Value>
								</Information>
							</Informations2>
						</TestStep>
						<TestStep Name="SetParameterData">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>t_safePara</Destination>
										<Source>SafePara</Source>
									</SetVariable>
									<SetVariable>
										<Destination>t_watchdog</Destination>
										<Source>SafePara.Watchdog</Source>
									</SetVariable>
								</SetVariables>
							</Action>
							<Informations2>
								<Information>
									<Type>Output</Type>
									<Value Param0="t_watchdog" Param1="SafeParaSize" Param2="t_safePara">Watchdog: {0} ms, SafeParaSize: {1}, Safe Parameter {2}</Value>
								</Information>
							</Informations2>
						</TestStep>
						<TestStep Name="GotoConnection">
							<Action>
								<CallFunction>
									<Reference>RUN_DUT_TO_CONNECTION</Reference>
								</CallFunction>
							</Action>
						</TestStep>
						<TestStep Name="SetLastCrc">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>LastCrc</Destination>
										<Source>t_slaveFrame.Crc0</Source>
									</SetVariable>
								</SetVariables>
							</Action>
						</TestStep>
						<TestStep Name="SetFrame">
							<Informations1>
								<Information>
									<Type>Verbose</Type>
									<Value Param0="t_safePara" Param1="LastCrc" Param2="t_masterSeqNo" Param3="OldMasterCrc" Param4="t_connectionId">SetFrame(Command Parameter, SafeData {0}, LastCrc 0x{1:x4}, ConnectionId 0x{4:x4},  SequenceNo 0x{2:x4}, OldCrc 0x{3:x4}, New true</Value>
								</Information>
							</Informations1>
							<Action>
								<SetFrame Name="t_masterFrame">
									<Command>
										<CommandValue>Parameter</CommandValue>
									</Command>
									<SafeData>
										<SafeDataVariable>t_safePara</SafeDataVariable>
									</SafeData>
									<LastCRC>LastCrc</LastCRC>
									<ConnectionID>
										<ConnectionIdVariable>t_connectionId</ConnectionIdVariable>
									</ConnectionID>
									<SequenceNo>t_masterSeqNo</SequenceNo>
									<OldCRC>OldMasterCrc</OldCRC>
									<New>true</New>
								</SetFrame>
							</Action>
						</TestStep>
						<TestStep Name="SetInvalidCrc_n">
							<Informations1>
								<Information>
									<Type>Output</Type>
									<Value Param0="c_crcIndex" Param1="t_masterFrame.Crcs[c_crcIndex]">Valid Crc[{0}]: 0x{1:x4}</Value>
								</Information>
							</Informations1>
							<Action>
								<CallFunction>
									<Reference>INCREMENT_CRC_N</Reference>
								</CallFunction>
							</Action>
							<Informations2>
								<Information>
									<Type>Output</Type>
									<Value Param0="c_crcIndex" Param1="t_masterFrame.Crcs[c_crcIndex]">Falsified Crc[{0}]: 0x{1:x4}</Value>
								</Information>
							</Informations2>
						</TestStep>
						<TestStep Name="SendFrame">
							<Action>
								<SendFrame Name="t_masterFrame"/>
							</Action>
							<Informations2>
								<Information>
									<Type>Verbose</Type>
									<Value Param0="t_masterFrame.FrameData">Master Frame: {0}</Value>
								</Information>
							</Informations2>
							<ReturnValue>
								<OnFailure>
									<Type>Error</Type>
									<Value>Failed to send FSoE frame!</Value>
									<Id>256</Id>
								</OnFailure>
							</ReturnValue>
						</TestStep>
						<TestStep Name="SetCrcIndex">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>c_crcIndex</Destination>
										<Source>c_crcIndex+1</Source>
									</SetVariable>
								</SetVariables>
							</Action>
							<Informations2>
								<Information>
									<Type>Verbose</Type>
									<Value Param0="c_crcIndex">Index :{0}</Value>
								</Information>
							</Informations2>
						</TestStep>
						<TestStep Name="CheckReceivedSlaveFrame">
							<Action>
								<CallFunction>
									<Reference>CHECK_RESET_FAIL</Reference>
								</CallFunction>
							</Action>
							<Compares>
								<Compare>
									<Condition>
										<Value1>c_crcIndex</Value1>
										<Operator>Lower</Operator>
										<Value2>CrcLength</Value2>
									</Condition>
									<Statement>
										<GotoStep>GotoConnection</GotoStep>
									</Statement>
								</Compare>
								<Compare>
									<Condition>
										<Value1>c_crcIndex</Value1>
										<Operator>GreaterOrEqual</Operator>
										<Value2>CrcLength</Value2>
									</Condition>
									<Statement>
										<Return>
											<Type>Success</Type>
											<Value Param0="c_CommFaultReason">Expected CommFaultReason ({0}) received</Value>
										</Return>
									</Statement>
								</Compare>
							</Compares>
						</TestStep>
					</TestSteps>
				</TestCase>
				<TestCase Name="#3.6 CONN_Fail1" CaseId="6">
					<Comment>Falsche CRC_1 bis CRC_n  (-1)</Comment>
					<CaseVariables>
						<Variable>
							<Name>c_CommFaultReason</Name>
							<Type>Byte</Type>
						</Variable>
						<Variable>
							<Name>c_tmpByte</Name>
							<Type>Byte</Type>
						</Variable>
						<Variable>
							<Name>c_crcIndex</Name>
							<Type>Int32</Type>
						</Variable>
						<Variable>
							<Name>c_tmpCrcn</Name>
							<Type>UInt16</Type>
						</Variable>
					</CaseVariables>
					<TestSteps>
						<TestStep Name="CheckCRCLength">
							<Compares>
								<Compare>
									<Condition>
										<Value1>CrcLength</Value1>
										<Operator>Equal</Operator>
										<Value2>1</Value2>
									</Condition>
									<Statement>
										<Return>
											<Type>SkippedCase</Type>
											<Value>Crc count ==1; ==> skip testcase</Value>
										</Return>
									</Statement>
								</Compare>
							</Compares>
						</TestStep>
						<TestStep Name="SetVariables">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>c_CommFaultReason</Destination>
										<Source>INVALID_CRC</Source>
									</SetVariable>
									<SetVariable>
										<Destination>c_tmpByte</Destination>
										<Source>0</Source>
									</SetVariable>
									<SetVariable>
										<Destination>t_wdExpired</Destination>
										<Source>false</Source>
									</SetVariable>
									<SetVariable>
										<Destination>t_masterSessionId</Destination>
										<Source>1</Source>
									</SetVariable>
									<SetVariable>
										<Destination>c_crcIndex</Destination>
										<Source>1</Source>
									</SetVariable>
								</SetVariables>
							</Action>
						</TestStep>
						<TestStep Name="SetConnectionData">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>t_connectionId</Destination>
										<Source>3</Source>
									</SetVariable>
									<SetVariable>
										<Destination DestinationIndex="0">t_connData</Destination>
										<Source>t_connectionId</Source>
									</SetVariable>
									<SetVariable>
										<Destination DestinationIndex="2">t_connData</Destination>
										<Source>ConnData.SlaveAddress</Source>
									</SetVariable>
								</SetVariables>
							</Action>
							<Informations2>
								<Information>
									<Type>Output</Type>
									<Value Param0="t_connectionId" Param1="ConnData.SlaveAddress" Param2="t_connData">ConnectionId: {0} (0x{0:x4}), Slave Address: {1} (0x{1:x4}), Connection Data {2}</Value>
								</Information>
							</Informations2>
						</TestStep>
						<TestStep Name="SetParameterData">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>t_safePara</Destination>
										<Source>SafePara</Source>
									</SetVariable>
									<SetVariable>
										<Destination>t_watchdog</Destination>
										<Source>SafePara.Watchdog</Source>
									</SetVariable>
								</SetVariables>
							</Action>
							<Informations2>
								<Information>
									<Type>Output</Type>
									<Value Param0="t_watchdog" Param1="SafeParaSize" Param2="t_safePara">Watchdog: {0} ms, SafeParaSize: {1}, Safe Parameter {2}</Value>
								</Information>
							</Informations2>
						</TestStep>
						<TestStep Name="GotoConnection">
							<Action>
								<CallFunction>
									<Reference>RUN_DUT_TO_CONNECTION</Reference>
								</CallFunction>
							</Action>
						</TestStep>
						<TestStep Name="SetLastCrc">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>LastCrc</Destination>
										<Source>t_slaveFrame.Crc0</Source>
									</SetVariable>
								</SetVariables>
							</Action>
						</TestStep>
						<TestStep Name="SetFrame">
							<Informations1>
								<Information>
									<Type>Verbose</Type>
									<Value Param0="t_safePara" Param1="LastCrc" Param2="t_masterSeqNo" Param3="OldMasterCrc" Param4="t_connectionId">SetFrame(Command Parameter, SafeData {0}, LastCrc 0x{1:x4}, ConnectionId 0x{4:x4},  SequenceNo 0x{2:x4}, OldCrc 0x{3:x4}, New true</Value>
								</Information>
							</Informations1>
							<Action>
								<SetFrame Name="t_masterFrame">
									<Command>
										<CommandValue>Parameter</CommandValue>
									</Command>
									<SafeData>
										<SafeDataVariable>t_safePara</SafeDataVariable>
									</SafeData>
									<LastCRC>LastCrc</LastCRC>
									<ConnectionID>
										<ConnectionIdVariable>t_connectionId</ConnectionIdVariable>
									</ConnectionID>
									<SequenceNo>t_masterSeqNo</SequenceNo>
									<OldCRC>OldMasterCrc</OldCRC>
									<New>true</New>
								</SetFrame>
							</Action>
						</TestStep>
						<TestStep Name="SetInvalidCrc_n">
							<Informations1>
								<Information>
									<Type>Output</Type>
									<Value Param0="c_crcIndex" Param1="t_masterFrame.Crcs[c_crcIndex]">Valid Crc[{0}]: 0x{1:x4}</Value>
								</Information>
							</Informations1>
							<Action>
								<CallFunction>
									<Reference>DECREMENT_CRC_N</Reference>
								</CallFunction>
							</Action>
							<Informations2>
								<Information>
									<Type>Output</Type>
									<Value Param0="c_crcIndex" Param1="t_masterFrame.Crcs[c_crcIndex]">Falsified Crc[{0}]: 0x{1:x4}</Value>
								</Information>
							</Informations2>
						</TestStep>
						<TestStep Name="SendFrame">
							<Action>
								<SendFrame Name="t_masterFrame"/>
							</Action>
							<Informations2>
								<Information>
									<Type>Verbose</Type>
									<Value Param0="t_masterFrame.FrameData">Master Frame: {0}</Value>
								</Information>
							</Informations2>
							<ReturnValue>
								<OnFailure>
									<Type>Error</Type>
									<Value>Failed to send FSoE frame!</Value>
									<Id>256</Id>
								</OnFailure>
							</ReturnValue>
						</TestStep>
						<TestStep Name="SetCrcIndex">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>c_crcIndex</Destination>
										<Source>c_crcIndex+1</Source>
									</SetVariable>
								</SetVariables>
							</Action>
							<Informations2>
								<Information>
									<Type>Verbose</Type>
									<Value Param0="c_crcIndex">Index :{0}</Value>
								</Information>
							</Informations2>
						</TestStep>
						<TestStep Name="CheckReceivedSlaveFrame">
							<Action>
								<CallFunction>
									<Reference>CHECK_RESET_FAIL</Reference>
								</CallFunction>
							</Action>
							<Compares>
								<Compare>
									<Condition>
										<Value1>c_crcIndex</Value1>
										<Operator>Lower</Operator>
										<Value2>CrcLength</Value2>
									</Condition>
									<Statement>
										<GotoStep>GotoConnection</GotoStep>
									</Statement>
								</Compare>
								<Compare>
									<Condition>
										<Value1>c_crcIndex</Value1>
										<Operator>GreaterOrEqual</Operator>
										<Value2>CrcLength</Value2>
									</Condition>
									<Statement>
										<Return>
											<Type>Success</Type>
											<Value Param0="c_CommFaultReason">Expected CommFaultReason ({0}) received</Value>
										</Return>
									</Statement>
								</Compare>
							</Compares>
						</TestStep>
					</TestSteps>
				</TestCase>
				<TestCase Name="#3.7 CONN_Fail1" CaseId="7">
					<Comment>CRC_0 und CRC1 vertauscht</Comment>
					<CaseVariables>
						<Variable>
							<Name>c_CommFaultReason</Name>
							<Type>Byte</Type>
						</Variable>
						<Variable>
							<Name>c_tmpByte</Name>
							<Type>Byte</Type>
						</Variable>
						<Variable>
							<Name>c_crcIndex</Name>
							<Type>Int32</Type>
						</Variable>
						<Variable>
							<Name>c_tmpCrc0</Name>
							<Type>UInt16</Type>
						</Variable>
						<Variable>
							<Name>c_tmpCrc1</Name>
							<Type>UInt16</Type>
						</Variable>
					</CaseVariables>
					<TestSteps>
						<TestStep Name="CheckCRCLength">
							<Compares>
								<Compare>
									<Condition>
										<Value1>CrcLength</Value1>
										<Operator>Equal</Operator>
										<Value2>1</Value2>
									</Condition>
									<Statement>
										<Return>
											<Type>SkippedCase</Type>
											<Value>Crc count ==1; ==> skip testcase</Value>
										</Return>
									</Statement>
								</Compare>
							</Compares>
						</TestStep>
						<TestStep Name="SetVariables">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>c_CommFaultReason</Destination>
										<Source>INVALID_CRC</Source>
									</SetVariable>
									<SetVariable>
										<Destination>c_tmpByte</Destination>
										<Source>0</Source>
									</SetVariable>
									<SetVariable>
										<Destination>t_wdExpired</Destination>
										<Source>false</Source>
									</SetVariable>
									<SetVariable>
										<Destination>t_masterSessionId</Destination>
										<Source>1</Source>
									</SetVariable>
								</SetVariables>
							</Action>
						</TestStep>
						<TestStep Name="SetConnectionData">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>t_connectionId</Destination>
										<Source>3</Source>
									</SetVariable>
									<SetVariable>
										<Destination DestinationIndex="0">t_connData</Destination>
										<Source>t_connectionId</Source>
									</SetVariable>
									<SetVariable>
										<Destination DestinationIndex="2">t_connData</Destination>
										<Source>ConnData.SlaveAddress</Source>
									</SetVariable>
								</SetVariables>
							</Action>
							<Informations2>
								<Information>
									<Type>Output</Type>
									<Value Param0="t_connectionId" Param1="ConnData.SlaveAddress" Param2="t_connData">ConnectionId: {0} (0x{0:x4}), Slave Address: {1} (0x{1:x4}), Connection Data {2}</Value>
								</Information>
							</Informations2>
						</TestStep>
						<TestStep Name="SetParameterData">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>t_safePara</Destination>
										<Source>SafePara</Source>
									</SetVariable>
									<SetVariable>
										<Destination>t_watchdog</Destination>
										<Source>SafePara.Watchdog</Source>
									</SetVariable>
								</SetVariables>
							</Action>
							<Informations2>
								<Information>
									<Type>Output</Type>
									<Value Param0="t_watchdog" Param1="SafeParaSize" Param2="t_safePara">Watchdog: {0} ms, SafeParaSize: {1}, Safe Parameter {2}</Value>
								</Information>
							</Informations2>
						</TestStep>
						<TestStep Name="GotoConnection">
							<Action>
								<CallFunction>
									<Reference>RUN_DUT_TO_CONNECTION</Reference>
								</CallFunction>
							</Action>
						</TestStep>
						<TestStep Name="SetLastCrc">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>LastCrc</Destination>
										<Source>t_slaveFrame.Crc0</Source>
									</SetVariable>
								</SetVariables>
							</Action>
						</TestStep>
						<TestStep Name="SetFrame">
							<Informations1>
								<Information>
									<Type>Verbose</Type>
									<Value Param0="t_connData" Param1="LastCrc" Param2="t_masterSeqNo" Param3="OldMasterCrc" Param4="t_connectionId">SetFrame(Command Parameter, SafeData {0}, LastCrc 0x{1:x4}, ConnectionId 0x{4:x4},  SequenceNo 0x{2:x4}, OldCrc 0x{3:x4}, New true</Value>
								</Information>
							</Informations1>
							<Action>
								<SetFrame Name="t_masterFrame">
									<Command>
										<CommandValue>Parameter</CommandValue>
									</Command>
									<SafeData>
										<SafeDataVariable>t_connData</SafeDataVariable>
									</SafeData>
									<LastCRC>LastCrc</LastCRC>
									<ConnectionID>
										<ConnectionIdVariable>t_connectionId</ConnectionIdVariable>
									</ConnectionID>
									<SequenceNo>t_masterSeqNo</SequenceNo>
									<OldCRC>OldMasterCrc</OldCRC>
									<New>true</New>
								</SetFrame>
							</Action>
						</TestStep>
						<TestStep Name="SwapCrcs">
							<Informations1>
								<Information>
									<Type>Output</Type>
									<Value Param0="t_masterFrame.Crcs[0]" Param1="t_masterFrame.Crcs[1]">Valid Crc[0]: 0x{0:x4}, Valid Crc[1]: 0x{1:x4} </Value>
								</Information>
							</Informations1>
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>c_tmpCrc0</Destination>
										<Source SourceIndex="0">t_masterFrame.Crcs</Source>
									</SetVariable>
									<SetVariable>
										<Destination>c_tmpCrc1</Destination>
										<Source SourceIndex="1">t_masterFrame.Crcs</Source>
									</SetVariable>
									<SetVariable>
										<Destination DestinationIndex="0">t_masterFrame.Crcs</Destination>
										<Source>c_tmpCrc1</Source>
									</SetVariable>
									<SetVariable>
										<Destination DestinationIndex="1">t_masterFrame.Crcs</Destination>
										<Source>c_tmpCrc0</Source>
									</SetVariable>
								</SetVariables>
							</Action>
							<Informations2>
								<Information>
									<Type>Output</Type>
									<Value Param0="t_masterFrame.Crcs[0]" Param1="t_masterFrame.Crcs[1]">Falsified Crc[0]: 0x{0:x4}, Falsified Crc[1]: 0x{1:x4} </Value>
								</Information>
							</Informations2>
						</TestStep>
						<TestStep Name="SendFrame">
							<Action>
								<SendFrame Name="t_masterFrame"/>
							</Action>
							<Informations2>
								<Information>
									<Type>Verbose</Type>
									<Value Param0="t_masterFrame.FrameData">Master Frame: {0}</Value>
								</Information>
							</Informations2>
							<ReturnValue>
								<OnFailure>
									<Type>Error</Type>
									<Value>Failed to send FSoE frame!</Value>
									<Id>256</Id>
								</OnFailure>
							</ReturnValue>
						</TestStep>
						<TestStep Name="CheckReceivedSlaveFrame">
							<Action>
								<CallFunction>
									<Reference>CHECK_RESET_FAIL</Reference>
								</CallFunction>
							</Action>
							<ReturnValue>
								<OnSuccess>
									<Type>Success</Type>
									<Value Param0="c_CommFaultReason">Expected CommFaultReason ({0}) received</Value>
								</OnSuccess>
							</ReturnValue>
						</TestStep>
					</TestSteps>
				</TestCase>
				<TestCase Name="#3.8 CONN_Fail1" CaseId="8">
					<Comment>Falsche Master SequenceNo (-1) </Comment>
					<CaseVariables>
						<Variable>
							<Name>c_CommFaultReason</Name>
							<Type>Byte</Type>
						</Variable>
						<Variable>
							<Name>c_tmpByte</Name>
							<Type>Byte</Type>
						</Variable>
					</CaseVariables>
					<TestSteps>
						<TestStep Name="SetVariables">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>c_CommFaultReason</Destination>
										<Source>INVALID_CRC</Source>
									</SetVariable>
									<SetVariable>
										<Destination>c_tmpByte</Destination>
										<Source>0</Source>
									</SetVariable>
									<SetVariable>
										<Destination>t_wdExpired</Destination>
										<Source>false</Source>
									</SetVariable>
									<SetVariable>
										<Destination>t_masterSessionId</Destination>
										<Source>1</Source>
									</SetVariable>
								</SetVariables>
							</Action>
						</TestStep>
						<TestStep Name="SetConnectionData">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>t_connectionId</Destination>
										<Source>3</Source>
									</SetVariable>
									<SetVariable>
										<Destination DestinationIndex="0">t_connData</Destination>
										<Source>t_connectionId</Source>
									</SetVariable>
									<SetVariable>
										<Destination DestinationIndex="2">t_connData</Destination>
										<Source>ConnData.SlaveAddress</Source>
									</SetVariable>
								</SetVariables>
							</Action>
							<Informations2>
								<Information>
									<Type>Output</Type>
									<Value Param0="t_connectionId" Param1="ConnData.SlaveAddress" Param2="t_connData">ConnectionId: {0} (0x{0:x4}), Slave Address: {1} (0x{1:x4}), Connection Data {2}</Value>
								</Information>
							</Informations2>
						</TestStep>
						<TestStep Name="SetParameterData">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>t_safePara</Destination>
										<Source>SafePara</Source>
									</SetVariable>
									<SetVariable>
										<Destination>t_watchdog</Destination>
										<Source>SafePara.Watchdog</Source>
									</SetVariable>
								</SetVariables>
							</Action>
							<Informations2>
								<Information>
									<Type>Output</Type>
									<Value Param0="t_watchdog" Param1="SafeParaSize" Param2="t_safePara">Watchdog: {0} ms, SafeParaSize: {1}, Safe Parameter {2}</Value>
								</Information>
							</Informations2>
						</TestStep>
						<TestStep Name="GotoConnection">
							<Action>
								<CallFunction>
									<Reference>RUN_DUT_TO_CONNECTION</Reference>
								</CallFunction>
							</Action>
						</TestStep>
						<TestStep Name="SetLastCrc">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>LastCrc</Destination>
										<Source>t_slaveFrame.Crc0</Source>
									</SetVariable>
								</SetVariables>
							</Action>
						</TestStep>
						<TestStep Name="SetInvalidMasterSequenceNo">
							<Informations1>
								<Information>
									<Type>Output</Type>
									<Value Param0="t_masterSeqNo">Valid Master SequenceNo: {0}</Value>
								</Information>
							</Informations1>
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>t_masterSeqNo</Destination>
										<Source>t_masterSeqNo-1</Source>
									</SetVariable>
								</SetVariables>
							</Action>
							<Informations2>
								<Information>
									<Type>Output</Type>
									<Value Param0="t_masterSeqNo">Falsified Master SequenceNo: {0}</Value>
								</Information>
							</Informations2>
						</TestStep>
						<TestStep Name="SetFrame">
							<Informations1>
								<Information>
									<Type>Verbose</Type>
									<Value Param0="t_connData" Param1="LastCrc" Param2="t_masterSeqNo" Param3="OldMasterCrc" Param4="t_connectionId">SetFrame(Command Parameter, SafeData {0}, LastCrc 0x{1:x4}, ConnectionId 0x{4:x4},  SequenceNo 0x{2:x4}, OldCrc 0x{3:x4}, New true</Value>
								</Information>
							</Informations1>
							<Action>
								<SetFrame Name="t_masterFrame">
									<Command>
										<CommandValue>Parameter</CommandValue>
									</Command>
									<SafeData>
										<SafeDataVariable>t_connData</SafeDataVariable>
									</SafeData>
									<LastCRC>LastCrc</LastCRC>
									<ConnectionID>
										<ConnectionIdVariable>t_connectionId</ConnectionIdVariable>
									</ConnectionID>
									<SequenceNo>t_masterSeqNo</SequenceNo>
									<OldCRC>OldMasterCrc</OldCRC>
									<New>true</New>
								</SetFrame>
							</Action>
						</TestStep>
						<TestStep Name="SendFrame">
							<Action>
								<SendFrame Name="t_masterFrame"/>
							</Action>
							<Informations2>
								<Information>
									<Type>Verbose</Type>
									<Value Param0="t_masterFrame.FrameData">Master Frame: {0}</Value>
								</Information>
							</Informations2>
							<ReturnValue>
								<OnFailure>
									<Type>Error</Type>
									<Value>Failed to send FSoE frame!</Value>
									<Id>256</Id>
								</OnFailure>
							</ReturnValue>
						</TestStep>
						<TestStep Name="CheckReceivedSlaveFrame">
							<Action>
								<CallFunction>
									<Reference>CHECK_RESET_FAIL</Reference>
								</CallFunction>
							</Action>
							<ReturnValue>
								<OnSuccess>
									<Type>Success</Type>
									<Value Param0="c_CommFaultReason">Expected CommFaultReason ({0}) received</Value>
								</OnSuccess>
							</ReturnValue>
						</TestStep>
					</TestSteps>
				</TestCase>
				<TestCase Name="#3.9 CONN_Fail2" CaseId="9">
					<Description>
						<Purpose>Slave shall recognize an invalid address transmitted by the master.</Purpose>
						<PreCondition>-DuT is in Connection state
-The address of the DuT is set to 10</PreCondition>
						<Action>-The FSoE Master transmits an invalid address '0' to the slave in connection state </Action>
						<PostCondition>-The slave shall return to Reset state with CommFault reason 'INVALID_ADDRESS' </PostCondition>
						<References>
							<Reference Specification="ETG 5100" Chapter="8.5.4.1"/>
						</References>
						<Mandatory>true</Mandatory>
					</Description>
					<CaseVariables>
						<Variable>
							<Name>c_CommFaultReason</Name>
							<Type>Byte</Type>
						</Variable>
						<Variable>
							<Name>c_tmpByte</Name>
							<Type>Byte</Type>
						</Variable>
					</CaseVariables>
					<TestSteps>
						<TestStep Name="SetVariables">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>c_CommFaultReason</Destination>
										<Source>INVALID_ADDRESS</Source>
									</SetVariable>
									<SetVariable>
										<Destination>c_tmpByte</Destination>
										<Source>0</Source>
									</SetVariable>
									<SetVariable>
										<Destination>t_wdExpired</Destination>
										<Source>false</Source>
									</SetVariable>
									<SetVariable>
										<Destination>t_masterSessionId</Destination>
										<Source>1</Source>
									</SetVariable>
								</SetVariables>
							</Action>
						</TestStep>
						<TestStep Name="SetConnectionData">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>t_connectionId</Destination>
										<Source>3</Source>
									</SetVariable>
									<SetVariable>
										<Destination>t_slaveAddress</Destination>
										<Source>0</Source>
									</SetVariable>
									<SetVariable>
										<Destination DestinationIndex="0">t_connData</Destination>
										<Source>t_connectionId</Source>
									</SetVariable>
									<SetVariable>
										<Destination DestinationIndex="2">t_connData</Destination>
										<Source>t_slaveAddress</Source>
									</SetVariable>
								</SetVariables>
							</Action>
							<Informations2>
								<Information>
									<Type>Output</Type>
									<Value Param0="t_connectionId" Param1="t_slaveAddress" Param2="t_connData">ConnectionId: {0} (0x{0:x4}), Slave Address: {1} (0x{1:x4}), Connection Data {2}</Value>
								</Information>
							</Informations2>
						</TestStep>
						<TestStep Name="SetParameterData">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>t_safePara</Destination>
										<Source>SafePara</Source>
									</SetVariable>
									<SetVariable>
										<Destination>t_watchdog</Destination>
										<Source>SafePara.Watchdog</Source>
									</SetVariable>
								</SetVariables>
							</Action>
							<Informations2>
								<Information>
									<Type>Output</Type>
									<Value Param0="t_watchdog" Param1="SafeParaSize" Param2="t_safePara">Watchdog: {0} ms, SafeParaSize: {1}, Safe Parameter {2}</Value>
								</Information>
							</Informations2>
						</TestStep>
						<TestStep Name="GotoConnection">
							<Action>
								<CallFunction>
									<Reference>RUN_DUT_TO_CONNECTION</Reference>
								</CallFunction>
							</Action>
						</TestStep>
						<TestStep Name="SetLastCrc">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>LastCrc</Destination>
										<Source>t_slaveFrame.Crc0</Source>
									</SetVariable>
								</SetVariables>
							</Action>
						</TestStep>
						<TestStep Name="SetFrame">
							<Informations1>
								<Information>
									<Type>Verbose</Type>
									<Value Param0="t_connData" Param1="LastCrc" Param2="t_masterSeqNo" Param3="OldMasterCrc" Param4="t_connectionId">SetFrame(Command Parameter, SafeData {0}, LastCrc 0x{1:x4}, ConnectionId 0x{4:x4},  SequenceNo 0x{2:x4}, OldCrc 0x{3:x4}, New true</Value>
								</Information>
							</Informations1>
							<Action>
								<SetFrame Name="t_masterFrame">
									<Command>
										<CommandValue>Parameter</CommandValue>
									</Command>
									<SafeData>
										<SafeDataVariable>t_connData</SafeDataVariable>
									</SafeData>
									<LastCRC>LastCrc</LastCRC>
									<ConnectionID>
										<ConnectionIdVariable>t_connectionId</ConnectionIdVariable>
									</ConnectionID>
									<SequenceNo>t_masterSeqNo</SequenceNo>
									<OldCRC>OldMasterCrc</OldCRC>
									<New>true</New>
								</SetFrame>
							</Action>
						</TestStep>
						<TestStep Name="SendFrame">
							<Action>
								<SendFrame Name="t_masterFrame"/>
							</Action>
							<Informations2>
								<Information>
									<Type>Verbose</Type>
									<Value Param0="t_masterFrame.FrameData">Master Frame: {0}</Value>
								</Information>
							</Informations2>
							<ReturnValue>
								<OnFailure>
									<Type>Error</Type>
									<Value>Failed to send FSoE frame!</Value>
									<Id>256</Id>
								</OnFailure>
							</ReturnValue>
						</TestStep>
						<TestStep Name="CheckReceivedSlaveFrame">
							<Action>
								<CallFunction>
									<Reference>CHECK_RESET_FAIL</Reference>
								</CallFunction>
							</Action>
							<ReturnValue>
								<OnSuccess>
									<Type>Success</Type>
									<Value Param0="c_CommFaultReason">Expected CommFaultReason ({0}) received</Value>
								</OnSuccess>
							</ReturnValue>
						</TestStep>
					</TestSteps>
				</TestCase>
				<TestCase Name="#3.10 CONN_Fail2" CaseId="10">
					<Description>
						<Purpose>Slave shall recognize an invalid address transmitted by the master.</Purpose>
						<PreCondition>-DuT is in Connection state
-The address of the DuT is set to 10</PreCondition>
						<Action>-The FSoE Master transmits an invalid address 'SlaveAddress+1' to the slave in connection state </Action>
						<PostCondition>-The slave shall return to Reset state with CommFault reason 'INVALID_ADDRESS' </PostCondition>
						<References>
							<Reference Specification="ETG 5100" Chapter="8.5.4.1"/>
						</References>
						<Mandatory>true</Mandatory>
					</Description>
					<CaseVariables>
						<Variable>
							<Name>c_CommFaultReason</Name>
							<Type>Byte</Type>
						</Variable>
						<Variable>
							<Name>c_tmpByte</Name>
							<Type>Byte</Type>
						</Variable>
					</CaseVariables>
					<TestSteps>
						<TestStep Name="SetVariables">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>c_CommFaultReason</Destination>
										<Source>INVALID_ADDRESS</Source>
									</SetVariable>
									<SetVariable>
										<Destination>c_tmpByte</Destination>
										<Source>0</Source>
									</SetVariable>
									<SetVariable>
										<Destination>t_wdExpired</Destination>
										<Source>false</Source>
									</SetVariable>
									<SetVariable>
										<Destination>t_masterSessionId</Destination>
										<Source>1</Source>
									</SetVariable>
								</SetVariables>
							</Action>
						</TestStep>
						<TestStep Name="SetConnectionData">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>t_connectionId</Destination>
										<Source>3</Source>
									</SetVariable>
									<SetVariable>
										<Destination>t_slaveAddress</Destination>
										<Source>ConnData.SlaveAddress</Source>
									</SetVariable>
									<SetVariable>
										<Destination DestinationIndex="0">t_connData</Destination>
										<Source>t_connectionId</Source>
									</SetVariable>
									<SetVariable>
										<Destination DestinationIndex="2">t_connData</Destination>
										<Source>t_slaveAddress+1</Source>
									</SetVariable>
								</SetVariables>
							</Action>
							<Informations2>
								<Information>
									<Type>Output</Type>
									<Value Param0="t_connectionId" Param1="t_slaveAddress" Param2="t_connData">ConnectionId: {0} (0x{0:x4}), Slave Address: {1} (0x{1:x4}), Connection Data {2}</Value>
								</Information>
							</Informations2>
						</TestStep>
						<TestStep Name="SetParameterData">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>t_safePara</Destination>
										<Source>SafePara</Source>
									</SetVariable>
									<SetVariable>
										<Destination>t_watchdog</Destination>
										<Source>SafePara.Watchdog</Source>
									</SetVariable>
								</SetVariables>
							</Action>
							<Informations2>
								<Information>
									<Type>Output</Type>
									<Value Param0="t_watchdog" Param1="SafeParaSize" Param2="t_safePara">Watchdog: {0} ms, SafeParaSize: {1}, Safe Parameter {2}</Value>
								</Information>
							</Informations2>
						</TestStep>
						<TestStep Name="GotoConnection">
							<Action>
								<CallFunction>
									<Reference>RUN_DUT_TO_CONNECTION</Reference>
								</CallFunction>
							</Action>
						</TestStep>
						<TestStep Name="SetLastCrc">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>LastCrc</Destination>
										<Source>t_slaveFrame.Crc0</Source>
									</SetVariable>
								</SetVariables>
							</Action>
						</TestStep>
						<TestStep Name="SetFrame">
							<Informations1>
								<Information>
									<Type>Verbose</Type>
									<Value Param0="t_connData" Param1="LastCrc" Param2="t_masterSeqNo" Param3="OldMasterCrc" Param4="t_connectionId">SetFrame(Command Parameter, SafeData {0}, LastCrc 0x{1:x4}, ConnectionId 0x{4:x4},  SequenceNo 0x{2:x4}, OldCrc 0x{3:x4}, New true</Value>
								</Information>
							</Informations1>
							<Action>
								<SetFrame Name="t_masterFrame">
									<Command>
										<CommandValue>Parameter</CommandValue>
									</Command>
									<SafeData>
										<SafeDataVariable>t_connData</SafeDataVariable>
									</SafeData>
									<LastCRC>LastCrc</LastCRC>
									<ConnectionID>
										<ConnectionIdVariable>t_connectionId</ConnectionIdVariable>
									</ConnectionID>
									<SequenceNo>t_masterSeqNo</SequenceNo>
									<OldCRC>OldMasterCrc</OldCRC>
									<New>true</New>
								</SetFrame>
							</Action>
						</TestStep>
						<TestStep Name="SendFrame">
							<Action>
								<SendFrame Name="t_masterFrame"/>
							</Action>
							<Informations2>
								<Information>
									<Type>Verbose</Type>
									<Value Param0="t_masterFrame.FrameData">Master Frame: {0}</Value>
								</Information>
							</Informations2>
							<ReturnValue>
								<OnFailure>
									<Type>Error</Type>
									<Value>Failed to send FSoE frame!</Value>
									<Id>256</Id>
								</OnFailure>
							</ReturnValue>
						</TestStep>
						<TestStep Name="CheckReceivedSlaveFrame">
							<Action>
								<CallFunction>
									<Reference>CHECK_RESET_FAIL</Reference>
								</CallFunction>
							</Action>
							<ReturnValue>
								<OnSuccess>
									<Type>Success</Type>
									<Value Param0="c_CommFaultReason">Expected CommFaultReason ({0}) received</Value>
								</OnSuccess>
							</ReturnValue>
						</TestStep>
					</TestSteps>
				</TestCase>
				<TestCase Name="#3.11 CONN_Fail2" CaseId="11">
					<Description>
						<Purpose>Slave shall recognize an invalid address transmitted by the master.</Purpose>
						<PreCondition>-DuT is in Connection state
-The address of the DuT is set to 10</PreCondition>
						<Action>-The FSoE Master transmits an invalid address '0xffff' to the slave in connection state </Action>
						<PostCondition>-The slave shall return to Reset state with CommFault reason 'INVALID_ADDRESS' 
-This test case is skipped if the max Slave Address is 0xffff</PostCondition>
						<References>
							<Reference Specification="ETG 5100" Chapter="8.5.4.1"/>
						</References>
						<Mandatory>true</Mandatory>
					</Description>
					<CaseVariables>
						<Variable>
							<Name>c_CommFaultReason</Name>
							<Type>Byte</Type>
						</Variable>
						<Variable>
							<Name>c_tmpByte</Name>
							<Type>Byte</Type>
						</Variable>
					</CaseVariables>
					<TestSteps>
						<TestStep Name="SetVariables">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>c_CommFaultReason</Destination>
										<Source>INVALID_ADDRESS</Source>
									</SetVariable>
									<SetVariable>
										<Destination>c_tmpByte</Destination>
										<Source>0</Source>
									</SetVariable>
									<SetVariable>
										<Destination>t_wdExpired</Destination>
										<Source>false</Source>
									</SetVariable>
									<SetVariable>
										<Destination>t_masterSessionId</Destination>
										<Source>1</Source>
									</SetVariable>
								</SetVariables>
							</Action>
						</TestStep>
						<TestStep Name="SetConnectionData">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>t_connectionId</Destination>
										<Source>3</Source>
									</SetVariable>
									<SetVariable>
										<Destination>t_slaveAddress</Destination>
										<Source>65535</Source>
									</SetVariable>
									<SetVariable>
										<Destination DestinationIndex="0">t_connData</Destination>
										<Source>t_connectionId</Source>
									</SetVariable>
									<SetVariable>
										<Destination DestinationIndex="2">t_connData</Destination>
										<Source>t_slaveAddress</Source>
									</SetVariable>
								</SetVariables>
							</Action>
							<Informations2>
								<Information>
									<Type>Output</Type>
									<Value Param0="t_connectionId" Param1="t_slaveAddress" Param2="t_connData">ConnectionId: {0} (0x{0:x4}), Slave Address: {1} (0x{1:x4}), Connection Data {2}</Value>
								</Information>
							</Informations2>
						</TestStep>
						<TestStep Name="SetParameterData">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>t_safePara</Destination>
										<Source>SafePara</Source>
									</SetVariable>
									<SetVariable>
										<Destination>t_watchdog</Destination>
										<Source>SafePara.Watchdog</Source>
									</SetVariable>
								</SetVariables>
							</Action>
							<Informations2>
								<Information>
									<Type>Output</Type>
									<Value Param0="t_watchdog" Param1="SafeParaSize" Param2="t_safePara">Watchdog: {0} ms, SafeParaSize: {1}, Safe Parameter {2}</Value>
								</Information>
							</Informations2>
						</TestStep>
						<TestStep Name="GotoConnection">
							<Action>
								<CallFunction>
									<Reference>RUN_DUT_TO_CONNECTION</Reference>
								</CallFunction>
							</Action>
						</TestStep>
						<TestStep Name="SetLastCrc">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>LastCrc</Destination>
										<Source>t_slaveFrame.Crc0</Source>
									</SetVariable>
								</SetVariables>
							</Action>
						</TestStep>
						<TestStep Name="SetFrame">
							<Informations1>
								<Information>
									<Type>Verbose</Type>
									<Value Param0="t_connData" Param1="LastCrc" Param2="t_masterSeqNo" Param3="OldMasterCrc" Param4="t_connectionId">SetFrame(Command Parameter, SafeData {0}, LastCrc 0x{1:x4}, ConnectionId 0x{4:x4},  SequenceNo 0x{2:x4}, OldCrc 0x{3:x4}, New true</Value>
								</Information>
							</Informations1>
							<Action>
								<SetFrame Name="t_masterFrame">
									<Command>
										<CommandValue>Parameter</CommandValue>
									</Command>
									<SafeData>
										<SafeDataVariable>t_connData</SafeDataVariable>
									</SafeData>
									<LastCRC>LastCrc</LastCRC>
									<ConnectionID>
										<ConnectionIdVariable>t_connectionId</ConnectionIdVariable>
									</ConnectionID>
									<SequenceNo>t_masterSeqNo</SequenceNo>
									<OldCRC>OldMasterCrc</OldCRC>
									<New>true</New>
								</SetFrame>
							</Action>
						</TestStep>
						<TestStep Name="SendFrame">
							<Action>
								<SendFrame Name="t_masterFrame"/>
							</Action>
							<Informations2>
								<Information>
									<Type>Verbose</Type>
									<Value Param0="t_masterFrame.FrameData">Master Frame: {0}</Value>
								</Information>
							</Informations2>
							<ReturnValue>
								<OnFailure>
									<Type>Error</Type>
									<Value>Failed to send FSoE frame!</Value>
									<Id>256</Id>
								</OnFailure>
							</ReturnValue>
						</TestStep>
						<TestStep Name="CheckReceivedSlaveFrame">
							<Action>
								<CallFunction>
									<Reference>CHECK_RESET_FAIL</Reference>
								</CallFunction>
							</Action>
							<ReturnValue>
								<OnSuccess>
									<Type>Success</Type>
									<Value Param0="c_CommFaultReason">Expected CommFaultReason ({0}) received</Value>
								</OnSuccess>
							</ReturnValue>
						</TestStep>
					</TestSteps>
				</TestCase>
				<TestCase Name="#3.13 CONN_Fail3" CaseId="13">
					<Description>
						<Purpose>Slave shall recognize an an invalid ConnectionId as part of the frame transmitted by the master. </Purpose>
						<PreCondition>-DuT is in Connection state (ConnectionData.ConnId = 3, Frame.ConnId = 3)</PreCondition>
						<Action>-The FSoE Master request the transition to Parameter with an invalid Frame.ConnId (0)</Action>
						<PostCondition>-The slave shall return to Reset state with CommFault reason 'INVALID_CONNID' </PostCondition>
						<References>
							<Reference Specification="ETG 5100" Chapter="8.5.4.1"/>
						</References>
						<Mandatory>true</Mandatory>
					</Description>
					<CaseVariables>
						<Variable>
							<Name>c_CommFaultReason</Name>
							<Type>Byte</Type>
						</Variable>
						<Variable>
							<Name>c_tmpByte</Name>
							<Type>Byte</Type>
						</Variable>
					</CaseVariables>
					<TestSteps>
						<TestStep Name="SetVariables">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>c_CommFaultReason</Destination>
										<Source>INVALID_CONNID</Source>
									</SetVariable>
									<SetVariable>
										<Destination>c_tmpByte</Destination>
										<Source>0</Source>
									</SetVariable>
									<SetVariable>
										<Destination>t_wdExpired</Destination>
										<Source>false</Source>
									</SetVariable>
									<SetVariable>
										<Destination>t_masterSessionId</Destination>
										<Source>1</Source>
									</SetVariable>
								</SetVariables>
							</Action>
						</TestStep>
						<TestStep Name="SetConnectionData">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>t_connectionId</Destination>
										<Source>3</Source>
									</SetVariable>
									<SetVariable>
										<Destination DestinationIndex="0">t_connData</Destination>
										<Source>t_connectionId</Source>
									</SetVariable>
									<SetVariable>
										<Destination DestinationIndex="2">t_connData</Destination>
										<Source>ConnData.SlaveAddress</Source>
									</SetVariable>
								</SetVariables>
							</Action>
							<Informations2>
								<Information>
									<Type>Output</Type>
									<Value Param0="t_connectionId" Param1="ConnData.SlaveAddress" Param2="t_connData">ConnectionId: {0} (0x{0:x4}), Slave Address: {1} (0x{1:x4}), Connection Data {2}</Value>
								</Information>
							</Informations2>
						</TestStep>
						<TestStep Name="SetParameterData">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>t_safePara</Destination>
										<Source>SafePara</Source>
									</SetVariable>
									<SetVariable>
										<Destination>t_watchdog</Destination>
										<Source>SafePara.Watchdog</Source>
									</SetVariable>
								</SetVariables>
							</Action>
							<Informations2>
								<Information>
									<Type>Output</Type>
									<Value Param0="t_watchdog" Param1="SafeParaSize" Param2="t_safePara">Watchdog: {0} ms, SafeParaSize: {1}, Safe Parameter {2}</Value>
								</Information>
							</Informations2>
						</TestStep>
						<TestStep Name="GotoConnection">
							<Action>
								<CallFunction>
									<Reference>RUN_DUT_TO_CONNECTION</Reference>
								</CallFunction>
							</Action>
						</TestStep>
						<TestStep Name="SetLastCrc">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>LastCrc</Destination>
										<Source>t_slaveFrame.Crc0</Source>
									</SetVariable>
								</SetVariables>
							</Action>
						</TestStep>
						<TestStep Name="SetInvalidConnId">
							<Informations1>
								<Information>
									<Type>Output</Type>
									<Value Param0="t_connectionId">Valid Master ConnID: {0} (0x{0:x4})</Value>
								</Information>
							</Informations1>
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>t_connectionId</Destination>
										<Source>0</Source>
									</SetVariable>
								</SetVariables>
							</Action>
							<Informations2>
								<Information>
									<Type>Output</Type>
									<Value Param0="t_connectionId">Falsified ConnId: {0} (0x{0:x4})</Value>
								</Information>
							</Informations2>
						</TestStep>
						<TestStep Name="SetFrame">
							<Informations1>
								<Information>
									<Type>Verbose</Type>
									<Value Param0="t_connData" Param1="LastCrc" Param2="t_masterSeqNo" Param3="OldMasterCrc" Param4="t_connectionId">SetFrame(Command Parameter, SafeData {0}, LastCrc 0x{1:x4}, ConnectionId 0x{4:x4},  SequenceNo 0x{2:x4}, OldCrc 0x{3:x4}, New true</Value>
								</Information>
							</Informations1>
							<Action>
								<SetFrame Name="t_masterFrame">
									<Command>
										<CommandValue>Parameter</CommandValue>
									</Command>
									<SafeData>
										<SafeDataVariable>t_connData</SafeDataVariable>
									</SafeData>
									<LastCRC>LastCrc</LastCRC>
									<ConnectionID>
										<ConnectionIdVariable>t_connectionId</ConnectionIdVariable>
									</ConnectionID>
									<SequenceNo>t_masterSeqNo</SequenceNo>
									<OldCRC>OldMasterCrc</OldCRC>
									<New>true</New>
								</SetFrame>
							</Action>
						</TestStep>
						<TestStep Name="SendFrame">
							<Action>
								<SendFrame Name="t_masterFrame"/>
							</Action>
							<Informations2>
								<Information>
									<Type>Verbose</Type>
									<Value Param0="t_masterFrame.FrameData">Master Frame: {0}</Value>
								</Information>
							</Informations2>
							<ReturnValue>
								<OnFailure>
									<Type>Error</Type>
									<Value>Failed to send FSoE frame!</Value>
									<Id>256</Id>
								</OnFailure>
							</ReturnValue>
						</TestStep>
						<TestStep Name="CheckReceivedSlaveFrame">
							<Action>
								<CallFunction>
									<Reference>CHECK_RESET_FAIL</Reference>
								</CallFunction>
							</Action>
							<ReturnValue>
								<OnSuccess>
									<Type>Success</Type>
									<Value Param0="c_CommFaultReason">Expected CommFaultReason ({0}) received</Value>
								</OnSuccess>
							</ReturnValue>
						</TestStep>
						<TestStep Name="SetVariables">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>c_CommFaultReason</Destination>
										<Source>INVALID_CONNID</Source>
									</SetVariable>
									<SetVariable>
										<Destination>c_tmpByte</Destination>
										<Source>0</Source>
									</SetVariable>
									<SetVariable>
										<Destination>t_masterSessionId</Destination>
										<Source>1</Source>
									</SetVariable>
									<SetVariable>
										<Destination>t_connectionId</Destination>
										<Source>0</Source>
									</SetVariable>
									<SetVariable>
										<Destination DestinationIndex="0">t_connData</Destination>
										<Source>t_connectionId</Source>
									</SetVariable>
									<SetVariable>
										<Destination DestinationIndex="2">t_connData</Destination>
										<Source>ConnData.SlaveAddress</Source>
									</SetVariable>
								</SetVariables>
							</Action>
							<Informations2>
								<Information>
									<Type>Output</Type>
									<Value Param0="t_connectionId" Param1="ConnData.SlaveAddress" Param2="t_connData">ConnectionId: {0} (0x{0:x4}), Slave Address: {1} (0x{1:x4}), Connection Data {2}</Value>
								</Information>
							</Informations2>
						</TestStep>
						<TestStep Name="GotoSession">
							<Action>
								<CallFunction>
									<Reference>RUN_DUT_TO_SESSION</Reference>
								</CallFunction>
							</Action>
						</TestStep>
						<TestStep Name="SetVars">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>LastCrc</Destination>
										<Source>t_slaveFrame.Crc0</Source>
									</SetVariable>
								</SetVariables>
							</Action>
						</TestStep>
						<TestStep Name="SetFrame">
							<Informations1>
								<Information>
									<Type>Verbose</Type>
									<Value Param0="t_connData" Param1="LastCrc" Param2="t_masterSeqNo" Param3="OldMasterCrc" Param4="t_connectionId">SetFrame(Command Connection, SafeData {0}, LastCrc 0x{1:x4}, ConnectionId 0x{4:x4},  SequenceNo 0x{2:x4}, OldCrc 0x{3:x4}, New true</Value>
								</Information>
							</Informations1>
							<Action>
								<SetFrame Name="t_masterFrame">
									<Command>
										<CommandValue>Connection</CommandValue>
									</Command>
									<SafeData>
										<SafeDataVariable>t_connData</SafeDataVariable>
									</SafeData>
									<LastCRC>LastCrc</LastCRC>
									<ConnectionID>
										<ConnectionIdVariable>t_connectionId</ConnectionIdVariable>
									</ConnectionID>
									<SequenceNo>t_masterSeqNo</SequenceNo>
									<OldCRC>OldMasterCrc</OldCRC>
									<New>true</New>
								</SetFrame>
							</Action>
						</TestStep>
						<TestStep Name="SendFrame">
							<Action>
								<SendFrame Name="t_masterFrame"/>
							</Action>
							<Informations2>
								<Information>
									<Type>Verbose</Type>
									<Value Param0="t_masterFrame.FrameData">Master Frame: {0}</Value>
								</Information>
							</Informations2>
							<ReturnValue>
								<OnFailure>
									<Type>Error</Type>
									<Value>Failed to send FSoE frame!</Value>
									<Id>256</Id>
								</OnFailure>
							</ReturnValue>
						</TestStep>
						<TestStep Name="CheckReceivedSlaveFrame">
							<Action>
								<CallFunction>
									<Reference>CHECK_RESET_FAIL</Reference>
								</CallFunction>
							</Action>
							<ReturnValue>
								<OnSuccess>
									<Type>Success</Type>
									<Value Param0="c_CommFaultReason">Expected CommFaultReason ({0}) received</Value>
								</OnSuccess>
							</ReturnValue>
						</TestStep>
					</TestSteps>
				</TestCase>
				<TestCase Name="#3.14 CONN_Fail3" CaseId="14">
					<Description>
						<Purpose>Slave shall recognize an an invalid ConnectionId as part of the frame transmitted by the master. </Purpose>
						<PreCondition>-DuT is in Connection state (ConnectionData.ConnId = 3, Frame.ConnId = 3)</PreCondition>
						<Action>-The FSoE Master request the transition to Parameter with an invalid Frame.ConnId (2)</Action>
						<PostCondition>-The slave shall return to Reset state with CommFault reason 'INVALID_CONNID' </PostCondition>
						<References>
							<Reference Specification="ETG 5100" Chapter="8.5.4.1"/>
						</References>
						<Mandatory>true</Mandatory>
					</Description>
					<CaseVariables>
						<Variable>
							<Name>c_CommFaultReason</Name>
							<Type>Byte</Type>
						</Variable>
						<Variable>
							<Name>c_tmpByte</Name>
							<Type>Byte</Type>
						</Variable>
					</CaseVariables>
					<TestSteps>
						<TestStep Name="SetVariables">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>c_CommFaultReason</Destination>
										<Source>INVALID_CONNID</Source>
									</SetVariable>
									<SetVariable>
										<Destination>c_tmpByte</Destination>
										<Source>0</Source>
									</SetVariable>
									<SetVariable>
										<Destination>t_wdExpired</Destination>
										<Source>false</Source>
									</SetVariable>
									<SetVariable>
										<Destination>t_masterSessionId</Destination>
										<Source>1</Source>
									</SetVariable>
								</SetVariables>
							</Action>
						</TestStep>
						<TestStep Name="SetConnectionData">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>t_connectionId</Destination>
										<Source>3</Source>
									</SetVariable>
									<SetVariable>
										<Destination DestinationIndex="0">t_connData</Destination>
										<Source>t_connectionId</Source>
									</SetVariable>
									<SetVariable>
										<Destination DestinationIndex="2">t_connData</Destination>
										<Source>ConnData.SlaveAddress</Source>
									</SetVariable>
								</SetVariables>
							</Action>
							<Informations2>
								<Information>
									<Type>Output</Type>
									<Value Param0="t_connectionId" Param1="ConnData.SlaveAddress" Param2="t_connData">ConnectionId: {0} (0x{0:x4}), Slave Address: {1} (0x{1:x4}), Connection Data {2}</Value>
								</Information>
							</Informations2>
						</TestStep>
						<TestStep Name="SetParameterData">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>t_safePara</Destination>
										<Source>SafePara</Source>
									</SetVariable>
									<SetVariable>
										<Destination>t_watchdog</Destination>
										<Source>SafePara.Watchdog</Source>
									</SetVariable>
								</SetVariables>
							</Action>
							<Informations2>
								<Information>
									<Type>Output</Type>
									<Value Param0="t_watchdog" Param1="SafeParaSize" Param2="t_safePara">Watchdog: {0} ms, SafeParaSize: {1}, Safe Parameter {2}</Value>
								</Information>
							</Informations2>
						</TestStep>
						<TestStep Name="GotoConnection">
							<Action>
								<CallFunction>
									<Reference>RUN_DUT_TO_CONNECTION</Reference>
								</CallFunction>
							</Action>
						</TestStep>
						<TestStep Name="SetLastCrc">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>LastCrc</Destination>
										<Source>t_slaveFrame.Crc0</Source>
									</SetVariable>
								</SetVariables>
							</Action>
						</TestStep>
						<TestStep Name="SetInvalidConnId">
							<Informations1>
								<Information>
									<Type>Output</Type>
									<Value Param0="t_connectionId">Valid Master ConnID: {0} (0x{0:x4})</Value>
								</Information>
							</Informations1>
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>t_connectionId</Destination>
										<Source>2</Source>
									</SetVariable>
								</SetVariables>
							</Action>
							<Informations2>
								<Information>
									<Type>Output</Type>
									<Value Param0="t_connectionId">Falsified ConnId: {0} (0x{0:x4})</Value>
								</Information>
							</Informations2>
						</TestStep>
						<TestStep Name="SetFrame">
							<Informations1>
								<Information>
									<Type>Verbose</Type>
									<Value Param0="t_connData" Param1="LastCrc" Param2="t_masterSeqNo" Param3="OldMasterCrc" Param4="t_connectionId">SetFrame(Command Parameter, SafeData {0}, LastCrc 0x{1:x4}, ConnectionId 0x{4:x4},  SequenceNo 0x{2:x4}, OldCrc 0x{3:x4}, New true</Value>
								</Information>
							</Informations1>
							<Action>
								<SetFrame Name="t_masterFrame">
									<Command>
										<CommandValue>Parameter</CommandValue>
									</Command>
									<SafeData>
										<SafeDataVariable>t_connData</SafeDataVariable>
									</SafeData>
									<LastCRC>LastCrc</LastCRC>
									<ConnectionID>
										<ConnectionIdVariable>t_connectionId</ConnectionIdVariable>
									</ConnectionID>
									<SequenceNo>t_masterSeqNo</SequenceNo>
									<OldCRC>OldMasterCrc</OldCRC>
									<New>true</New>
								</SetFrame>
							</Action>
						</TestStep>
						<TestStep Name="SendFrame">
							<Action>
								<SendFrame Name="t_masterFrame"/>
							</Action>
							<Informations2>
								<Information>
									<Type>Verbose</Type>
									<Value Param0="t_masterFrame.FrameData">Master Frame: {0}</Value>
								</Information>
							</Informations2>
							<ReturnValue>
								<OnFailure>
									<Type>Error</Type>
									<Value>Failed to send FSoE frame!</Value>
									<Id>256</Id>
								</OnFailure>
							</ReturnValue>
						</TestStep>
						<TestStep Name="CheckReceivedSlaveFrame">
							<Action>
								<CallFunction>
									<Reference>CHECK_RESET_FAIL</Reference>
								</CallFunction>
							</Action>
							<ReturnValue>
								<OnSuccess>
									<Type>Success</Type>
									<Value Param0="c_CommFaultReason">Expected CommFaultReason ({0}) received</Value>
								</OnSuccess>
							</ReturnValue>
						</TestStep>
						<TestStep Name="SetVariables">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>c_CommFaultReason</Destination>
										<Source>INVALID_CONNID</Source>
									</SetVariable>
									<SetVariable>
										<Destination>c_tmpByte</Destination>
										<Source>0</Source>
									</SetVariable>
									<SetVariable>
										<Destination>t_masterSessionId</Destination>
										<Source>1</Source>
									</SetVariable>
									<SetVariable>
										<Destination>t_connectionId</Destination>
										<Source>0</Source>
									</SetVariable>
									<SetVariable>
										<Destination DestinationIndex="0">t_connData</Destination>
										<Source>t_connectionId</Source>
									</SetVariable>
									<SetVariable>
										<Destination DestinationIndex="2">t_connData</Destination>
										<Source>ConnData.SlaveAddress</Source>
									</SetVariable>
								</SetVariables>
							</Action>
							<Informations2>
								<Information>
									<Type>Output</Type>
									<Value Param0="t_connectionId" Param1="ConnData.SlaveAddress" Param2="t_connData">ConnectionId: {0} (0x{0:x4}), Slave Address: {1} (0x{1:x4}), Connection Data {2}</Value>
								</Information>
							</Informations2>
						</TestStep>
						<TestStep Name="GotoSession">
							<Action>
								<CallFunction>
									<Reference>RUN_DUT_TO_SESSION</Reference>
								</CallFunction>
							</Action>
						</TestStep>
						<TestStep Name="SetVars">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>LastCrc</Destination>
										<Source>t_slaveFrame.Crc0</Source>
									</SetVariable>
								</SetVariables>
							</Action>
						</TestStep>
						<TestStep Name="SetFrame">
							<Informations1>
								<Information>
									<Type>Verbose</Type>
									<Value Param0="t_connData" Param1="LastCrc" Param2="t_masterSeqNo" Param3="OldMasterCrc" Param4="t_connectionId">SetFrame(Command Connection, SafeData {0}, LastCrc 0x{1:x4}, ConnectionId 0x{4:x4},  SequenceNo 0x{2:x4}, OldCrc 0x{3:x4}, New true</Value>
								</Information>
							</Informations1>
							<Action>
								<SetFrame Name="t_masterFrame">
									<Command>
										<CommandValue>Connection</CommandValue>
									</Command>
									<SafeData>
										<SafeDataVariable>t_connData</SafeDataVariable>
									</SafeData>
									<LastCRC>LastCrc</LastCRC>
									<ConnectionID>
										<ConnectionIdVariable>t_connectionId</ConnectionIdVariable>
									</ConnectionID>
									<SequenceNo>t_masterSeqNo</SequenceNo>
									<OldCRC>OldMasterCrc</OldCRC>
									<New>true</New>
								</SetFrame>
							</Action>
						</TestStep>
						<TestStep Name="SendFrame">
							<Action>
								<SendFrame Name="t_masterFrame"/>
							</Action>
							<Informations2>
								<Information>
									<Type>Verbose</Type>
									<Value Param0="t_masterFrame.FrameData">Master Frame: {0}</Value>
								</Information>
							</Informations2>
							<ReturnValue>
								<OnFailure>
									<Type>Error</Type>
									<Value>Failed to send FSoE frame!</Value>
									<Id>256</Id>
								</OnFailure>
							</ReturnValue>
						</TestStep>
						<TestStep Name="CheckReceivedSlaveFrame">
							<Action>
								<CallFunction>
									<Reference>CHECK_RESET_FAIL</Reference>
								</CallFunction>
							</Action>
							<ReturnValue>
								<OnSuccess>
									<Type>Success</Type>
									<Value Param0="c_CommFaultReason">Expected CommFaultReason ({0}) received</Value>
								</OnSuccess>
							</ReturnValue>
						</TestStep>
					</TestSteps>
				</TestCase>
				<TestCase Name="#3.15 CONN_Fail3" CaseId="15">
					<Description>
						<Purpose>Slave shall recognize an an invalid ConnectionId as part of the frame transmitted by the master. </Purpose>
						<PreCondition>-DuT is in Connection state (ConnectionData.ConnId = 3, Frame.ConnId = 3)</PreCondition>
						<Action>-The FSoE Master request the transition to Parameter with an invalid Frame.ConnId (4)</Action>
						<PostCondition>-The slave shall return to Reset state with CommFault reason 'INVALID_CONNID' </PostCondition>
						<References>
							<Reference Specification="ETG 5100" Chapter="8.5.4.1"/>
						</References>
						<Mandatory>true</Mandatory>
					</Description>
					<CaseVariables>
						<Variable>
							<Name>c_CommFaultReason</Name>
							<Type>Byte</Type>
						</Variable>
						<Variable>
							<Name>c_tmpByte</Name>
							<Type>Byte</Type>
						</Variable>
					</CaseVariables>
					<TestSteps>
						<TestStep Name="SetVariables">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>c_CommFaultReason</Destination>
										<Source>INVALID_CONNID</Source>
									</SetVariable>
									<SetVariable>
										<Destination>c_tmpByte</Destination>
										<Source>0</Source>
									</SetVariable>
									<SetVariable>
										<Destination>t_wdExpired</Destination>
										<Source>false</Source>
									</SetVariable>
									<SetVariable>
										<Destination>t_masterSessionId</Destination>
										<Source>1</Source>
									</SetVariable>
								</SetVariables>
							</Action>
						</TestStep>
						<TestStep Name="SetConnectionData">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>t_connectionId</Destination>
										<Source>3</Source>
									</SetVariable>
									<SetVariable>
										<Destination DestinationIndex="0">t_connData</Destination>
										<Source>t_connectionId</Source>
									</SetVariable>
									<SetVariable>
										<Destination DestinationIndex="2">t_connData</Destination>
										<Source>ConnData.SlaveAddress</Source>
									</SetVariable>
								</SetVariables>
							</Action>
							<Informations2>
								<Information>
									<Type>Output</Type>
									<Value Param0="t_connectionId" Param1="ConnData.SlaveAddress" Param2="t_connData">ConnectionId: {0} (0x{0:x4}), Slave Address: {1} (0x{1:x4}), Connection Data {2}</Value>
								</Information>
							</Informations2>
						</TestStep>
						<TestStep Name="SetParameterData">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>t_safePara</Destination>
										<Source>SafePara</Source>
									</SetVariable>
									<SetVariable>
										<Destination>t_watchdog</Destination>
										<Source>SafePara.Watchdog</Source>
									</SetVariable>
								</SetVariables>
							</Action>
							<Informations2>
								<Information>
									<Type>Output</Type>
									<Value Param0="t_watchdog" Param1="SafeParaSize" Param2="t_safePara">Watchdog: {0} ms, SafeParaSize: {1}, Safe Parameter {2}</Value>
								</Information>
							</Informations2>
						</TestStep>
						<TestStep Name="GotoConnection">
							<Action>
								<CallFunction>
									<Reference>RUN_DUT_TO_CONNECTION</Reference>
								</CallFunction>
							</Action>
						</TestStep>
						<TestStep Name="SetLastCrc">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>LastCrc</Destination>
										<Source>t_slaveFrame.Crc0</Source>
									</SetVariable>
								</SetVariables>
							</Action>
						</TestStep>
						<TestStep Name="SetInvalidConnId">
							<Informations1>
								<Information>
									<Type>Output</Type>
									<Value Param0="t_connectionId">Valid Master ConnID: {0} (0x{0:x4})</Value>
								</Information>
							</Informations1>
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>t_connectionId</Destination>
										<Source>4</Source>
									</SetVariable>
								</SetVariables>
							</Action>
							<Informations2>
								<Information>
									<Type>Output</Type>
									<Value Param0="t_connectionId">Falsified ConnId: {0} (0x{0:x4})</Value>
								</Information>
							</Informations2>
						</TestStep>
						<TestStep Name="SetFrame">
							<Informations1>
								<Information>
									<Type>Verbose</Type>
									<Value Param0="t_connData" Param1="LastCrc" Param2="t_masterSeqNo" Param3="OldMasterCrc" Param4="t_connectionId">SetFrame(Command Parameter, SafeData {0}, LastCrc 0x{1:x4}, ConnectionId 0x{4:x4},  SequenceNo 0x{2:x4}, OldCrc 0x{3:x4}, New true</Value>
								</Information>
							</Informations1>
							<Action>
								<SetFrame Name="t_masterFrame">
									<Command>
										<CommandValue>Parameter</CommandValue>
									</Command>
									<SafeData>
										<SafeDataVariable>t_connData</SafeDataVariable>
									</SafeData>
									<LastCRC>LastCrc</LastCRC>
									<ConnectionID>
										<ConnectionIdVariable>t_connectionId</ConnectionIdVariable>
									</ConnectionID>
									<SequenceNo>t_masterSeqNo</SequenceNo>
									<OldCRC>OldMasterCrc</OldCRC>
									<New>true</New>
								</SetFrame>
							</Action>
						</TestStep>
						<TestStep Name="SendFrame">
							<Action>
								<SendFrame Name="t_masterFrame"/>
							</Action>
							<Informations2>
								<Information>
									<Type>Verbose</Type>
									<Value Param0="t_masterFrame.FrameData">Master Frame: {0}</Value>
								</Information>
							</Informations2>
							<ReturnValue>
								<OnFailure>
									<Type>Error</Type>
									<Value>Failed to send FSoE frame!</Value>
									<Id>256</Id>
								</OnFailure>
							</ReturnValue>
						</TestStep>
						<TestStep Name="CheckReceivedSlaveFrame">
							<Action>
								<CallFunction>
									<Reference>CHECK_RESET_FAIL</Reference>
								</CallFunction>
							</Action>
							<ReturnValue>
								<OnSuccess>
									<Type>Success</Type>
									<Value Param0="c_CommFaultReason">Expected CommFaultReason ({0}) received</Value>
								</OnSuccess>
							</ReturnValue>
						</TestStep>
						<TestStep Name="SetVariables">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>c_CommFaultReason</Destination>
										<Source>INVALID_CONNID</Source>
									</SetVariable>
									<SetVariable>
										<Destination>c_tmpByte</Destination>
										<Source>0</Source>
									</SetVariable>
									<SetVariable>
										<Destination>t_masterSessionId</Destination>
										<Source>1</Source>
									</SetVariable>
									<SetVariable>
										<Destination>t_connectionId</Destination>
										<Source>0</Source>
									</SetVariable>
									<SetVariable>
										<Destination DestinationIndex="0">t_connData</Destination>
										<Source>t_connectionId</Source>
									</SetVariable>
									<SetVariable>
										<Destination DestinationIndex="2">t_connData</Destination>
										<Source>ConnData.SlaveAddress</Source>
									</SetVariable>
								</SetVariables>
							</Action>
							<Informations2>
								<Information>
									<Type>Output</Type>
									<Value Param0="t_connectionId" Param1="ConnData.SlaveAddress" Param2="t_connData">ConnectionId: {0} (0x{0:x4}), Slave Address: {1} (0x{1:x4}), Connection Data {2}</Value>
								</Information>
							</Informations2>
						</TestStep>
						<TestStep Name="GotoSession">
							<Action>
								<CallFunction>
									<Reference>RUN_DUT_TO_SESSION</Reference>
								</CallFunction>
							</Action>
						</TestStep>
						<TestStep Name="SetVars">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>LastCrc</Destination>
										<Source>t_slaveFrame.Crc0</Source>
									</SetVariable>
								</SetVariables>
							</Action>
						</TestStep>
						<TestStep Name="SetFrame">
							<Informations1>
								<Information>
									<Type>Verbose</Type>
									<Value Param0="t_connData" Param1="LastCrc" Param2="t_masterSeqNo" Param3="OldMasterCrc" Param4="t_connectionId">SetFrame(Command Connection, SafeData {0}, LastCrc 0x{1:x4}, ConnectionId 0x{4:x4},  SequenceNo 0x{2:x4}, OldCrc 0x{3:x4}, New true</Value>
								</Information>
							</Informations1>
							<Action>
								<SetFrame Name="t_masterFrame">
									<Command>
										<CommandValue>Connection</CommandValue>
									</Command>
									<SafeData>
										<SafeDataVariable>t_connData</SafeDataVariable>
									</SafeData>
									<LastCRC>LastCrc</LastCRC>
									<ConnectionID>
										<ConnectionIdVariable>t_connectionId</ConnectionIdVariable>
									</ConnectionID>
									<SequenceNo>t_masterSeqNo</SequenceNo>
									<OldCRC>OldMasterCrc</OldCRC>
									<New>true</New>
								</SetFrame>
							</Action>
						</TestStep>
						<TestStep Name="SendFrame">
							<Action>
								<SendFrame Name="t_masterFrame"/>
							</Action>
							<Informations2>
								<Information>
									<Type>Verbose</Type>
									<Value Param0="t_masterFrame.FrameData">Master Frame: {0}</Value>
								</Information>
							</Informations2>
							<ReturnValue>
								<OnFailure>
									<Type>Error</Type>
									<Value>Failed to send FSoE frame!</Value>
									<Id>256</Id>
								</OnFailure>
							</ReturnValue>
						</TestStep>
						<TestStep Name="CheckReceivedSlaveFrame">
							<Action>
								<CallFunction>
									<Reference>CHECK_RESET_FAIL</Reference>
								</CallFunction>
							</Action>
							<ReturnValue>
								<OnSuccess>
									<Type>Success</Type>
									<Value Param0="c_CommFaultReason">Expected CommFaultReason ({0}) received</Value>
								</OnSuccess>
							</ReturnValue>
						</TestStep>
					</TestSteps>
				</TestCase>
				<TestCase Name="#3.16 CONN_Fail3" CaseId="16">
					<Description>
						<Purpose>Slave shall recognize an an invalid ConnectionId as part of the frame transmitted by the master. </Purpose>
						<PreCondition>-DuT is in Connection state (ConnectionData.ConnId = 3, Frame.ConnId = 3)</PreCondition>
						<Action>-The FSoE Master request the transition to Parameter with an invalid Frame.ConnId (0xffff)</Action>
						<PostCondition>-The slave shall return to Reset state with CommFault reason 'INVALID_CONNID' </PostCondition>
						<References>
							<Reference Specification="ETG 5100" Chapter="8.5.4.1"/>
						</References>
						<Mandatory>true</Mandatory>
					</Description>
					<CaseVariables>
						<Variable>
							<Name>c_CommFaultReason</Name>
							<Type>Byte</Type>
						</Variable>
						<Variable>
							<Name>c_tmpByte</Name>
							<Type>Byte</Type>
						</Variable>
					</CaseVariables>
					<TestSteps>
						<TestStep Name="SetVariables">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>c_CommFaultReason</Destination>
										<Source>INVALID_CONNID</Source>
									</SetVariable>
									<SetVariable>
										<Destination>c_tmpByte</Destination>
										<Source>0</Source>
									</SetVariable>
									<SetVariable>
										<Destination>t_wdExpired</Destination>
										<Source>false</Source>
									</SetVariable>
									<SetVariable>
										<Destination>t_masterSessionId</Destination>
										<Source>1</Source>
									</SetVariable>
								</SetVariables>
							</Action>
						</TestStep>
						<TestStep Name="SetConnectionData">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>t_connectionId</Destination>
										<Source>3</Source>
									</SetVariable>
									<SetVariable>
										<Destination DestinationIndex="0">t_connData</Destination>
										<Source>t_connectionId</Source>
									</SetVariable>
									<SetVariable>
										<Destination DestinationIndex="2">t_connData</Destination>
										<Source>ConnData.SlaveAddress</Source>
									</SetVariable>
								</SetVariables>
							</Action>
							<Informations2>
								<Information>
									<Type>Output</Type>
									<Value Param0="t_connectionId" Param1="ConnData.SlaveAddress" Param2="t_connData">ConnectionId: {0} (0x{0:x4}), Slave Address: {1} (0x{1:x4}), Connection Data {2}</Value>
								</Information>
							</Informations2>
						</TestStep>
						<TestStep Name="SetParameterData">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>t_safePara</Destination>
										<Source>SafePara</Source>
									</SetVariable>
									<SetVariable>
										<Destination>t_watchdog</Destination>
										<Source>SafePara.Watchdog</Source>
									</SetVariable>
								</SetVariables>
							</Action>
							<Informations2>
								<Information>
									<Type>Output</Type>
									<Value Param0="t_watchdog" Param1="SafeParaSize" Param2="t_safePara">Watchdog: {0} ms, SafeParaSize: {1}, Safe Parameter {2}</Value>
								</Information>
							</Informations2>
						</TestStep>
						<TestStep Name="GotoConnection">
							<Action>
								<CallFunction>
									<Reference>RUN_DUT_TO_CONNECTION</Reference>
								</CallFunction>
							</Action>
						</TestStep>
						<TestStep Name="SetLastCrc">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>LastCrc</Destination>
										<Source>t_slaveFrame.Crc0</Source>
									</SetVariable>
								</SetVariables>
							</Action>
						</TestStep>
						<TestStep Name="SetInvalidConnId">
							<Informations1>
								<Information>
									<Type>Output</Type>
									<Value Param0="t_connectionId">Valid Master ConnID: {0} (0x{0:x4})</Value>
								</Information>
							</Informations1>
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>t_connectionId</Destination>
										<Source>65535</Source>
									</SetVariable>
								</SetVariables>
							</Action>
							<Informations2>
								<Information>
									<Type>Output</Type>
									<Value Param0="t_connectionId">Falsified ConnId: {0} (0x{0:x4})</Value>
								</Information>
							</Informations2>
						</TestStep>
						<TestStep Name="SetFrame">
							<Informations1>
								<Information>
									<Type>Verbose</Type>
									<Value Param0="t_connData" Param1="LastCrc" Param2="t_masterSeqNo" Param3="OldMasterCrc" Param4="t_connectionId">SetFrame(Command Parameter, SafeData {0}, LastCrc 0x{1:x4}, ConnectionId 0x{4:x4},  SequenceNo 0x{2:x4}, OldCrc 0x{3:x4}, New true</Value>
								</Information>
							</Informations1>
							<Action>
								<SetFrame Name="t_masterFrame">
									<Command>
										<CommandValue>Parameter</CommandValue>
									</Command>
									<SafeData>
										<SafeDataVariable>t_connData</SafeDataVariable>
									</SafeData>
									<LastCRC>LastCrc</LastCRC>
									<ConnectionID>
										<ConnectionIdVariable>t_connectionId</ConnectionIdVariable>
									</ConnectionID>
									<SequenceNo>t_masterSeqNo</SequenceNo>
									<OldCRC>OldMasterCrc</OldCRC>
									<New>true</New>
								</SetFrame>
							</Action>
						</TestStep>
						<TestStep Name="SendFrame">
							<Action>
								<SendFrame Name="t_masterFrame"/>
							</Action>
							<Informations2>
								<Information>
									<Type>Verbose</Type>
									<Value Param0="t_masterFrame.FrameData">Master Frame: {0}</Value>
								</Information>
							</Informations2>
							<ReturnValue>
								<OnFailure>
									<Type>Error</Type>
									<Value>Failed to send FSoE frame!</Value>
									<Id>256</Id>
								</OnFailure>
							</ReturnValue>
						</TestStep>
						<TestStep Name="CheckReceivedSlaveFrame">
							<Action>
								<CallFunction>
									<Reference>CHECK_RESET_FAIL</Reference>
								</CallFunction>
							</Action>
							<ReturnValue>
								<OnSuccess>
									<Type>Success</Type>
									<Value Param0="c_CommFaultReason">Expected CommFaultReason ({0}) received</Value>
								</OnSuccess>
							</ReturnValue>
						</TestStep>
						<TestStep Name="SetVariables">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>c_CommFaultReason</Destination>
										<Source>INVALID_CONNID</Source>
									</SetVariable>
									<SetVariable>
										<Destination>c_tmpByte</Destination>
										<Source>0</Source>
									</SetVariable>
									<SetVariable>
										<Destination>t_masterSessionId</Destination>
										<Source>1</Source>
									</SetVariable>
									<SetVariable>
										<Destination>t_connectionId</Destination>
										<Source>0</Source>
									</SetVariable>
									<SetVariable>
										<Destination DestinationIndex="0">t_connData</Destination>
										<Source>t_connectionId</Source>
									</SetVariable>
									<SetVariable>
										<Destination DestinationIndex="2">t_connData</Destination>
										<Source>ConnData.SlaveAddress</Source>
									</SetVariable>
								</SetVariables>
							</Action>
							<Informations2>
								<Information>
									<Type>Output</Type>
									<Value Param0="t_connectionId" Param1="ConnData.SlaveAddress" Param2="t_connData">ConnectionId: {0} (0x{0:x4}), Slave Address: {1} (0x{1:x4}), Connection Data {2}</Value>
								</Information>
							</Informations2>
						</TestStep>
						<TestStep Name="GotoSession">
							<Action>
								<CallFunction>
									<Reference>RUN_DUT_TO_SESSION</Reference>
								</CallFunction>
							</Action>
						</TestStep>
						<TestStep Name="SetVars">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>LastCrc</Destination>
										<Source>t_slaveFrame.Crc0</Source>
									</SetVariable>
								</SetVariables>
							</Action>
						</TestStep>
						<TestStep Name="SetFrame">
							<Informations1>
								<Information>
									<Type>Verbose</Type>
									<Value Param0="t_connData" Param1="LastCrc" Param2="t_masterSeqNo" Param3="OldMasterCrc" Param4="t_connectionId">SetFrame(Command Connection, SafeData {0}, LastCrc 0x{1:x4}, ConnectionId 0x{4:x4},  SequenceNo 0x{2:x4}, OldCrc 0x{3:x4}, New true</Value>
								</Information>
							</Informations1>
							<Action>
								<SetFrame Name="t_masterFrame">
									<Command>
										<CommandValue>Connection</CommandValue>
									</Command>
									<SafeData>
										<SafeDataVariable>t_connData</SafeDataVariable>
									</SafeData>
									<LastCRC>LastCrc</LastCRC>
									<ConnectionID>
										<ConnectionIdVariable>t_connectionId</ConnectionIdVariable>
									</ConnectionID>
									<SequenceNo>t_masterSeqNo</SequenceNo>
									<OldCRC>OldMasterCrc</OldCRC>
									<New>true</New>
								</SetFrame>
							</Action>
						</TestStep>
						<TestStep Name="SendFrame">
							<Action>
								<SendFrame Name="t_masterFrame"/>
							</Action>
							<Informations2>
								<Information>
									<Type>Verbose</Type>
									<Value Param0="t_masterFrame.FrameData">Master Frame: {0}</Value>
								</Information>
							</Informations2>
							<ReturnValue>
								<OnFailure>
									<Type>Error</Type>
									<Value>Failed to send FSoE frame!</Value>
									<Id>256</Id>
								</OnFailure>
							</ReturnValue>
						</TestStep>
						<TestStep Name="CheckReceivedSlaveFrame">
							<Action>
								<CallFunction>
									<Reference>CHECK_RESET_FAIL</Reference>
								</CallFunction>
							</Action>
							<ReturnValue>
								<OnSuccess>
									<Type>Success</Type>
									<Value Param0="c_CommFaultReason">Expected CommFaultReason ({0}) received</Value>
								</OnSuccess>
							</ReturnValue>
						</TestStep>
					</TestSteps>
				</TestCase>
				<TestCase Name="#3.17 CONN_Fail3" CaseId="17">
					<Description>
						<Purpose>Slave shall recognize an an invalid ConnectionId as part of the ConnectionData transmitted by the master. </Purpose>
						<PreCondition>-DuT is in Connection state (ConnectionData.ConnId = 2, Frame.ConnId = 3)</PreCondition>
						<Action>-The FSoE Master request the transition to Parameter (Frame.ConnId =3)</Action>
						<PostCondition>-The slave shall return to Reset state with CommFault reason 'INVALID_CONNID' </PostCondition>
						<References>
							<Reference Specification="ETG 5100" Chapter="8.5.4.1"/>
						</References>
						<Mandatory>true</Mandatory>
					</Description>
					<CaseVariables>
						<Variable>
							<Name>c_falsifiedConnId</Name>
							<Type>UInt16</Type>
						</Variable>
						<Variable>
							<Name>c_CommFaultReason</Name>
							<Type>Byte</Type>
						</Variable>
						<Variable>
							<Name>c_tmpByte</Name>
							<Type>Byte</Type>
						</Variable>
					</CaseVariables>
					<TestSteps>
						<TestStep Name="SetVariables">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>c_CommFaultReason</Destination>
										<Source>INVALID_CONNID</Source>
									</SetVariable>
									<SetVariable>
										<Destination>c_tmpByte</Destination>
										<Source>0</Source>
									</SetVariable>
									<SetVariable>
										<Destination>t_wdExpired</Destination>
										<Source>false</Source>
									</SetVariable>
									<SetVariable>
										<Destination>t_masterSessionId</Destination>
										<Source>1</Source>
									</SetVariable>
								</SetVariables>
							</Action>
						</TestStep>
						<TestStep Name="SetConnectionData">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>t_connectionId</Destination>
										<Source>3</Source>
									</SetVariable>
									<SetVariable>
										<Destination>c_falsifiedConnId</Destination>
										<Source>2</Source>
									</SetVariable>
									<SetVariable>
										<Destination DestinationIndex="0">t_connData</Destination>
										<Source>c_falsifiedConnId</Source>
									</SetVariable>
									<SetVariable>
										<Destination DestinationIndex="2">t_connData</Destination>
										<Source>ConnData.SlaveAddress</Source>
									</SetVariable>
								</SetVariables>
							</Action>
							<Informations2>
								<Information>
									<Type>Output</Type>
									<Value Param0="t_connectionId" Param1="ConnData.SlaveAddress" Param2="t_connData">ConnectionId: {0} (0x{0:x4}), Slave Address: {1} (0x{1:x4}), Connection Data {2}</Value>
								</Information>
								<Information>
									<Type>Output</Type>
									<Value Param0="c_falsifiedConnId">Falsified ConnId: {0} (0x{0:x4}) (as part of the Connection Data)</Value>
								</Information>
							</Informations2>
						</TestStep>
						<TestStep Name="SetParameterData">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>t_safePara</Destination>
										<Source>SafePara</Source>
									</SetVariable>
									<SetVariable>
										<Destination>t_watchdog</Destination>
										<Source>SafePara.Watchdog</Source>
									</SetVariable>
								</SetVariables>
							</Action>
							<Informations2>
								<Information>
									<Type>Output</Type>
									<Value Param0="t_watchdog" Param1="SafeParaSize" Param2="t_safePara">Watchdog: {0} ms, SafeParaSize: {1}, Safe Parameter {2}</Value>
								</Information>
							</Informations2>
						</TestStep>
						<TestStep Name="GotoConnection">
							<Action>
								<CallFunction>
									<Reference>RUN_DUT_TO_CONNECTION</Reference>
								</CallFunction>
							</Action>
						</TestStep>
						<TestStep Name="SetLastCrc">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>LastCrc</Destination>
										<Source>t_slaveFrame.Crc0</Source>
									</SetVariable>
								</SetVariables>
							</Action>
						</TestStep>
						<TestStep Name="SetFrame">
							<Informations1>
								<Information>
									<Type>Verbose</Type>
									<Value Param0="t_connData" Param1="LastCrc" Param2="t_masterSeqNo" Param3="OldMasterCrc" Param4="t_connectionId">SetFrame(Command Parameter, SafeData {0}, LastCrc 0x{1:x4}, ConnectionId 0x{4:x4},  SequenceNo 0x{2:x4}, OldCrc 0x{3:x4}, New true</Value>
								</Information>
							</Informations1>
							<Action>
								<SetFrame Name="t_masterFrame">
									<Command>
										<CommandValue>Parameter</CommandValue>
									</Command>
									<SafeData>
										<SafeDataVariable>t_connData</SafeDataVariable>
									</SafeData>
									<LastCRC>LastCrc</LastCRC>
									<ConnectionID>
										<ConnectionIdVariable>t_connectionId</ConnectionIdVariable>
									</ConnectionID>
									<SequenceNo>t_masterSeqNo</SequenceNo>
									<OldCRC>OldMasterCrc</OldCRC>
									<New>true</New>
								</SetFrame>
							</Action>
						</TestStep>
						<TestStep Name="SendFrame">
							<Action>
								<SendFrame Name="t_masterFrame"/>
							</Action>
							<Informations2>
								<Information>
									<Type>Verbose</Type>
									<Value Param0="t_masterFrame.FrameData">Master Frame: {0}</Value>
								</Information>
							</Informations2>
							<ReturnValue>
								<OnFailure>
									<Type>Error</Type>
									<Value>Failed to send FSoE frame!</Value>
									<Id>256</Id>
								</OnFailure>
							</ReturnValue>
						</TestStep>
						<TestStep Name="CheckReceivedSlaveFrame">
							<Action>
								<CallFunction>
									<Reference>CHECK_RESET_FAIL</Reference>
								</CallFunction>
							</Action>
							<ReturnValue>
								<OnSuccess>
									<Type>Success</Type>
									<Value Param0="c_CommFaultReason">Expected CommFaultReason ({0}) received</Value>
								</OnSuccess>
							</ReturnValue>
						</TestStep>
					</TestSteps>
				</TestCase>
				<TestCase Name="#3.18 CONN_Fail3" CaseId="18">
					<Description>
						<Purpose>Slave shall recognize an an invalid ConnectionId as part of the ConnectionData transmitted by the master. </Purpose>
						<PreCondition>-DuT is in Connection state (ConnectionData.ConnId = 4, Frame.ConnId = 3)</PreCondition>
						<Action>-The FSoE Master request the transition to Parameter (Frame.ConnId =3)</Action>
						<PostCondition>-The slave shall return to Reset state with CommFault reason 'INVALID_CONNID' </PostCondition>
						<References>
							<Reference Specification="ETG 5100" Chapter="8.5.4.1"/>
						</References>
						<Mandatory>true</Mandatory>
					</Description>
					<CaseVariables>
						<Variable>
							<Name>c_falsifiedConnId</Name>
							<Type>UInt16</Type>
						</Variable>
						<Variable>
							<Name>c_CommFaultReason</Name>
							<Type>Byte</Type>
						</Variable>
						<Variable>
							<Name>c_tmpByte</Name>
							<Type>Byte</Type>
						</Variable>
					</CaseVariables>
					<TestSteps>
						<TestStep Name="SetVariables">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>c_CommFaultReason</Destination>
										<Source>INVALID_CONNID</Source>
									</SetVariable>
									<SetVariable>
										<Destination>c_tmpByte</Destination>
										<Source>0</Source>
									</SetVariable>
									<SetVariable>
										<Destination>t_wdExpired</Destination>
										<Source>false</Source>
									</SetVariable>
									<SetVariable>
										<Destination>t_masterSessionId</Destination>
										<Source>1</Source>
									</SetVariable>
								</SetVariables>
							</Action>
						</TestStep>
						<TestStep Name="SetConnectionData">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>t_connectionId</Destination>
										<Source>3</Source>
									</SetVariable>
									<SetVariable>
										<Destination>c_falsifiedConnId</Destination>
										<Source>4</Source>
									</SetVariable>
									<SetVariable>
										<Destination DestinationIndex="0">t_connData</Destination>
										<Source>c_falsifiedConnId</Source>
									</SetVariable>
									<SetVariable>
										<Destination DestinationIndex="2">t_connData</Destination>
										<Source>ConnData.SlaveAddress</Source>
									</SetVariable>
								</SetVariables>
							</Action>
							<Informations2>
								<Information>
									<Type>Output</Type>
									<Value Param0="t_connectionId" Param1="ConnData.SlaveAddress" Param2="t_connData">ConnectionId: {0} (0x{0:x4}), Slave Address: {1} (0x{1:x4}), Connection Data {2}</Value>
								</Information>
								<Information>
									<Type>Output</Type>
									<Value Param0="c_falsifiedConnId">Falsified ConnId: {0} (0x{0:x4}) (as part of the Connection Data)</Value>
								</Information>
							</Informations2>
						</TestStep>
						<TestStep Name="SetParameterData">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>t_safePara</Destination>
										<Source>SafePara</Source>
									</SetVariable>
									<SetVariable>
										<Destination>t_watchdog</Destination>
										<Source>SafePara.Watchdog</Source>
									</SetVariable>
								</SetVariables>
							</Action>
							<Informations2>
								<Information>
									<Type>Output</Type>
									<Value Param0="t_watchdog" Param1="SafeParaSize" Param2="t_safePara">Watchdog: {0} ms, SafeParaSize: {1}, Safe Parameter {2}</Value>
								</Information>
							</Informations2>
						</TestStep>
						<TestStep Name="GotoConnection">
							<Action>
								<CallFunction>
									<Reference>RUN_DUT_TO_CONNECTION</Reference>
								</CallFunction>
							</Action>
						</TestStep>
						<TestStep Name="SetLastCrc">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>LastCrc</Destination>
										<Source>t_slaveFrame.Crc0</Source>
									</SetVariable>
								</SetVariables>
							</Action>
						</TestStep>
						<TestStep Name="SetFrame">
							<Informations1>
								<Information>
									<Type>Verbose</Type>
									<Value Param0="t_connData" Param1="LastCrc" Param2="t_masterSeqNo" Param3="OldMasterCrc" Param4="t_connectionId">SetFrame(Command Parameter, SafeData {0}, LastCrc 0x{1:x4}, ConnectionId 0x{4:x4},  SequenceNo 0x{2:x4}, OldCrc 0x{3:x4}, New true</Value>
								</Information>
							</Informations1>
							<Action>
								<SetFrame Name="t_masterFrame">
									<Command>
										<CommandValue>Parameter</CommandValue>
									</Command>
									<SafeData>
										<SafeDataVariable>t_connData</SafeDataVariable>
									</SafeData>
									<LastCRC>LastCrc</LastCRC>
									<ConnectionID>
										<ConnectionIdVariable>t_connectionId</ConnectionIdVariable>
									</ConnectionID>
									<SequenceNo>t_masterSeqNo</SequenceNo>
									<OldCRC>OldMasterCrc</OldCRC>
									<New>true</New>
								</SetFrame>
							</Action>
						</TestStep>
						<TestStep Name="SendFrame">
							<Action>
								<SendFrame Name="t_masterFrame"/>
							</Action>
							<Informations2>
								<Information>
									<Type>Verbose</Type>
									<Value Param0="t_masterFrame.FrameData">Master Frame: {0}</Value>
								</Information>
							</Informations2>
							<ReturnValue>
								<OnFailure>
									<Type>Error</Type>
									<Value>Failed to send FSoE frame!</Value>
									<Id>256</Id>
								</OnFailure>
							</ReturnValue>
						</TestStep>
						<TestStep Name="CheckReceivedSlaveFrame">
							<Action>
								<CallFunction>
									<Reference>CHECK_RESET_FAIL</Reference>
								</CallFunction>
							</Action>
							<ReturnValue>
								<OnSuccess>
									<Type>Success</Type>
									<Value Param0="c_CommFaultReason">Expected CommFaultReason ({0}) received</Value>
								</OnSuccess>
							</ReturnValue>
						</TestStep>
					</TestSteps>
				</TestCase>
				<TestCase Name="#3.19 CONN_Fail3" CaseId="19">
					<Description>
						<Purpose>Slave shall recognize an an invalid ConnectionId as part of the ConnectionData transmitted by the master. </Purpose>
						<PreCondition>-DuT is in Connection state (ConnectionData.ConnId = 0xffff, Frame.ConnId = 3)</PreCondition>
						<Action>-The FSoE Master request the transition to Parameter (Frame.ConnId =3)</Action>
						<PostCondition>-The slave shall return to Reset state with CommFault reason 'INVALID_CONNID' </PostCondition>
						<References>
							<Reference Specification="ETG 5100" Chapter="8.5.4.1"/>
						</References>
						<Mandatory>true</Mandatory>
					</Description>
					<CaseVariables>
						<Variable>
							<Name>c_falsifiedConnId</Name>
							<Type>UInt16</Type>
						</Variable>
						<Variable>
							<Name>c_CommFaultReason</Name>
							<Type>Byte</Type>
						</Variable>
						<Variable>
							<Name>c_tmpByte</Name>
							<Type>Byte</Type>
						</Variable>
					</CaseVariables>
					<TestSteps>
						<TestStep Name="SetVariables">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>c_CommFaultReason</Destination>
										<Source>INVALID_CONNID</Source>
									</SetVariable>
									<SetVariable>
										<Destination>c_tmpByte</Destination>
										<Source>0</Source>
									</SetVariable>
									<SetVariable>
										<Destination>t_wdExpired</Destination>
										<Source>false</Source>
									</SetVariable>
									<SetVariable>
										<Destination>t_masterSessionId</Destination>
										<Source>1</Source>
									</SetVariable>
								</SetVariables>
							</Action>
						</TestStep>
						<TestStep Name="SetConnectionData">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>c_falsifiedConnId</Destination>
										<Source>65535</Source>
									</SetVariable>
									<SetVariable>
										<Destination>t_connectionId</Destination>
										<Source>3</Source>
									</SetVariable>
									<SetVariable>
										<Destination DestinationIndex="0">t_connData</Destination>
										<Source>c_falsifiedConnId</Source>
									</SetVariable>
									<SetVariable>
										<Destination DestinationIndex="2">t_connData</Destination>
										<Source>ConnData.SlaveAddress</Source>
									</SetVariable>
								</SetVariables>
							</Action>
							<Informations2>
								<Information>
									<Type>Output</Type>
									<Value Param0="t_connectionId" Param1="ConnData.SlaveAddress" Param2="t_connData">ConnectionId: {0} (0x{0:x4}), Slave Address: {1} (0x{1:x4}), Connection Data {2}</Value>
								</Information>
								<Information>
									<Type>Output</Type>
									<Value Param0="c_falsifiedConnId">Falsified ConnId: {0} (0x{0:x4}) (as part of the Connection Data)</Value>
								</Information>
							</Informations2>
						</TestStep>
						<TestStep Name="SetParameterData">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>t_safePara</Destination>
										<Source>SafePara</Source>
									</SetVariable>
									<SetVariable>
										<Destination>t_watchdog</Destination>
										<Source>SafePara.Watchdog</Source>
									</SetVariable>
								</SetVariables>
							</Action>
							<Informations2>
								<Information>
									<Type>Output</Type>
									<Value Param0="t_watchdog" Param1="SafeParaSize" Param2="t_safePara">Watchdog: {0} ms, SafeParaSize: {1}, Safe Parameter {2}</Value>
								</Information>
							</Informations2>
						</TestStep>
						<TestStep Name="GotoConnection">
							<Action>
								<CallFunction>
									<Reference>RUN_DUT_TO_CONNECTION</Reference>
								</CallFunction>
							</Action>
						</TestStep>
						<TestStep Name="SetLastCrc">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>LastCrc</Destination>
										<Source>t_slaveFrame.Crc0</Source>
									</SetVariable>
								</SetVariables>
							</Action>
						</TestStep>
						<TestStep Name="SetFrame">
							<Informations1>
								<Information>
									<Type>Verbose</Type>
									<Value Param0="t_connData" Param1="LastCrc" Param2="t_masterSeqNo" Param3="OldMasterCrc" Param4="t_connectionId">SetFrame(Command Parameter, SafeData {0}, LastCrc 0x{1:x4}, ConnectionId 0x{4:x4},  SequenceNo 0x{2:x4}, OldCrc 0x{3:x4}, New true</Value>
								</Information>
							</Informations1>
							<Action>
								<SetFrame Name="t_masterFrame">
									<Command>
										<CommandValue>Parameter</CommandValue>
									</Command>
									<SafeData>
										<SafeDataVariable>t_connData</SafeDataVariable>
									</SafeData>
									<LastCRC>LastCrc</LastCRC>
									<ConnectionID>
										<ConnectionIdVariable>t_connectionId</ConnectionIdVariable>
									</ConnectionID>
									<SequenceNo>t_masterSeqNo</SequenceNo>
									<OldCRC>OldMasterCrc</OldCRC>
									<New>true</New>
								</SetFrame>
							</Action>
						</TestStep>
						<TestStep Name="SetInvalidCrc0">
							<Informations1>
								<Information>
									<Type>Output</Type>
									<Value Param0="t_masterFrame.Crc0">Valid Crc0 = 0x{0:x4}</Value>
								</Information>
							</Informations1>
							<Action>
								<CallFunction>
									<Reference>DECREMENT_CRC_0</Reference>
								</CallFunction>
							</Action>
							<Informations2>
								<Information>
									<Type>Output</Type>
									<Value Param0="t_masterFrame.Crc0">Falsified Crc0 = 0x{0:x4}</Value>
								</Information>
							</Informations2>
						</TestStep>
						<TestStep Name="SendFrame">
							<Action>
								<SendFrame Name="t_masterFrame"/>
							</Action>
							<Informations2>
								<Information>
									<Type>Verbose</Type>
									<Value Param0="t_masterFrame.FrameData">Master Frame: {0}</Value>
								</Information>
							</Informations2>
							<ReturnValue>
								<OnFailure>
									<Type>Error</Type>
									<Value>Failed to send FSoE frame!</Value>
									<Id>256</Id>
								</OnFailure>
							</ReturnValue>
						</TestStep>
						<TestStep Name="CheckReceivedSlaveFrame">
							<Action>
								<CallFunction>
									<Reference>CHECK_RESET_FAIL</Reference>
								</CallFunction>
							</Action>
							<ReturnValue>
								<OnSuccess>
									<Type>Success</Type>
									<Value Param0="c_CommFaultReason">Expected CommFaultReason ({0}) received</Value>
								</OnSuccess>
							</ReturnValue>
						</TestStep>
					</TestSteps>
				</TestCase>
				<TestCase Name="#3.20 CONN_Fail4" CaseId="20">
					<Comment>Hochlauf mehrere Zyklen, Cmd = Parameter bevor Übergang fertig ist</Comment>
					<CaseVariables>
						<Variable>
							<Name>c_CommFaultReason</Name>
							<Type>Byte</Type>
						</Variable>
						<Variable>
							<Name>c_tmpByte</Name>
							<Type>Byte</Type>
						</Variable>
					</CaseVariables>
					<TestSteps>
						<TestStep Name="CheckSafeDataLength">
							<Compares>
								<Compare>
									<Condition>
										<Value1>SafeDataLength</Value1>
										<Operator>NotEqual</Operator>
										<Value2>1</Value2>
									</Condition>
									<Statement>
										<Return>
											<Type>SkippedCase</Type>
											<Value>SafeDataLength != 1; ==> skip testcase</Value>
										</Return>
									</Statement>
								</Compare>
							</Compares>
						</TestStep>
						<TestStep Name="SetVariables">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>c_CommFaultReason</Destination>
										<Source>INVALID_CMD</Source>
									</SetVariable>
									<SetVariable>
										<Destination>c_tmpByte</Destination>
										<Source>0</Source>
									</SetVariable>
									<SetVariable>
										<Destination>t_masterSessionId</Destination>
										<Source>1</Source>
									</SetVariable>
								</SetVariables>
							</Action>
							<Informations2>
								<Information>
									<Type>Output</Type>
									<Value Param0="t_connectionId" Param1="ConnData.SlaveAddress" Param2="t_connData">ConnectionId: {0} (0x{0:x4}), Slave Address: {1} (0x{1:x4}), Connection Data {2}</Value>
								</Information>
							</Informations2>
						</TestStep>
						<TestStep Name="SetConnectionData">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>t_connectionId</Destination>
										<Source>3</Source>
									</SetVariable>
									<SetVariable>
										<Destination DestinationIndex="0">t_connData</Destination>
										<Source>t_connectionId</Source>
									</SetVariable>
									<SetVariable>
										<Destination DestinationIndex="2">t_connData</Destination>
										<Source>ConnData.SlaveAddress</Source>
									</SetVariable>
								</SetVariables>
							</Action>
							<Informations2>
								<Information>
									<Type>Output</Type>
									<Value Param0="t_connectionId" Param1="ConnData.SlaveAddress" Param2="t_connData">ConnectionId: {0} (0x{0:x4}), Slave Address: {1} (0x{1:x4}), Connection Data {2}</Value>
								</Information>
							</Informations2>
						</TestStep>
						<TestStep Name="SetParameterData">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>t_safePara</Destination>
										<Source>SafePara</Source>
									</SetVariable>
									<SetVariable>
										<Destination>t_watchdog</Destination>
										<Source>SafePara.Watchdog</Source>
									</SetVariable>
								</SetVariables>
							</Action>
							<Informations2>
								<Information>
									<Type>Output</Type>
									<Value Param0="t_watchdog" Param1="SafeParaSize" Param2="t_safePara">Watchdog: {0} ms, SafeParaSize: {1}, Safe Parameter {2}</Value>
								</Information>
							</Informations2>
						</TestStep>
						<TestStep Name="GoToSession">
							<Action>
								<CallFunction>
									<Reference>RUN_DUT_TO_SESSION</Reference>
								</CallFunction>
							</Action>
						</TestStep>
						<TestStep Name="CallSessionOk">
							<Action>
								<CallFunction>
									<Reference>SESSION_OK</Reference>
								</CallFunction>
							</Action>
						</TestStep>
						<TestStep Name="ReceiveEvent">
							<Event>
								<ReceiveFrame>t_slaveFrame</ReceiveFrame>
							</Event>
							<Informations2>
								<Information>
									<Type>Verbose</Type>
									<Value Param0="t_slaveFrame.FrameData">Slave Frame: {0}</Value>
								</Information>
							</Informations2>
						</TestStep>
						<TestStep Name="CheckWatchdog">
							<Event>
								<WatchdogExpired>
									<SetVariables>
										<SetVariable>
											<Destination>t_wdExpired</Destination>
											<Source>true</Source>
										</SetVariable>
									</SetVariables>
								</WatchdogExpired>
							</Event>
							<Compares>
								<Compare>
									<Condition>
										<Value1>t_wdExpired</Value1>
										<Operator>Equal</Operator>
										<Value2>true</Value2>
									</Condition>
									<Statement>
										<SetVariables>
											<SetVariable>
												<Destination>t_wdExpired</Destination>
												<Source>false</Source>
											</SetVariable>
										</SetVariables>
									</Statement>
									<Statement>
										<Return>
											<Type>Error</Type>
											<Value Param0="ElapsedWD">Watchdog expired! {0} ms </Value>
											<Id>5</Id>
										</Return>
									</Statement>
								</Compare>
							</Compares>
							<Informations2>
								<Information>
									<Type>Verbose</Type>
									<Value Param0="t_wdExpired">WD {0}</Value>
								</Information>
							</Informations2>
						</TestStep>
						<TestStep Name="CheckReceivedCrc">
							<Informations1>
								<Information>
									<Type>Verbose</Type>
									<Value Param0="t_slaveFrame.FrameData" Param1="LastCrc" Param2="t_slaveSeqNo" Param3="t_oldSlaveCrc" Param4="true">IsCrcCorrect(Frame {0}, LastCrc 0x{1:X4}, SeqNo {2}, OldCrc 0x{3:X4}, New {4})</Value>
								</Information>
							</Informations1>
							<Action>
								<IsCrcCorrect ReturnValue="crcCorrect">
									<Frame>t_slaveFrame</Frame>
									<LastCrc>LastCrc</LastCrc>
									<SequenceNo>t_slaveSeqNo</SequenceNo>
									<OldCrc>t_oldSlaveCrc</OldCrc>
									<New>true</New>
								</IsCrcCorrect>
							</Action>
							<ReturnValue>
								<OnFailure>
									<Type>Error</Type>
									<Value Param0="t_slaveFrame.Crc0">Invalid Crc0 reveived ({0:x})</Value>
									<Id>4</Id>
								</OnFailure>
							</ReturnValue>
						</TestStep>
						<TestStep Name="CheckConnectionConditions">
							<Compares>
								<Compare>
									<Condition>
										<Value1>t_slaveFrame.Command</Value1>
										<Operator>Equal</Operator>
										<Value2>Connection</Value2>
									</Condition>
									<Condition>
										<Value1>BytesToBeSent</Value1>
										<Operator>Equal</Operator>
										<Value2>0</Value2>
									</Condition>
									<Condition>
										<Value1>crcCorrect</Value1>
										<Operator>Equal</Operator>
										<Value2>true</Value2>
									</Condition>
									<Statement>
										<Return>
											<Type>Error</Type>
											<Value>BytesToBeSent == 0</Value>
											<Id>1</Id>
										</Return>
									</Statement>
								</Compare>
								<Compare>
									<Condition>
										<Value1>t_slaveFrame.Command</Value1>
										<Operator>Equal</Operator>
										<Value2>Connection</Value2>
									</Condition>
									<Condition>
										<Value1>crcCorrect</Value1>
										<Operator>Equal</Operator>
										<Value2>false</Value2>
									</Condition>
									<Statement>
										<Return>
											<Type>Error</Type>
											<Value>Invalid Crc received</Value>
											<Id>4</Id>
										</Return>
									</Statement>
								</Compare>
								<Compare>
									<Condition>
										<Value1>t_slaveFrame.Command</Value1>
										<Operator>Equal</Operator>
										<Value2>Connection</Value2>
									</Condition>
									<Condition>
										<Value1>BytesToBeSent</Value1>
										<Operator>NotEqual</Operator>
										<Value2>0</Value2>
									</Condition>
									<Condition>
										<Value1>crcCorrect</Value1>
										<Operator>Equal</Operator>
										<Value2>true</Value2>
									</Condition>
									<Statement>
										<Information>
											<Type>Output</Type>
											<Value>Invalid transition to Connection before BytesToBeSent = 0</Value>
										</Information>
									</Statement>
									<Statement>
										<CallFunction>CONN_OK</CallFunction>
									</Statement>
								</Compare>
								<Compare>
									<Condition>
										<Value1>t_slaveFrame.Command</Value1>
										<Operator>Equal</Operator>
										<Value2>Reset</Value2>
									</Condition>
									<Statement>
										<Return>
											<Type>Error</Type>
											<Value>Invalid CMD(Reset) received</Value>
											<Id>1</Id>
										</Return>
									</Statement>
								</Compare>
								<Compare>
									<Condition>
										<Value1>t_slaveFrame.Command</Value1>
										<Operator>Equal</Operator>
										<Value2>Session</Value2>
									</Condition>
									<Statement>
										<Return>
											<Type>Error</Type>
											<Value>Invalid CMD (Session) received</Value>
											<Id>1</Id>
										</Return>
									</Statement>
								</Compare>
								<Compare>
									<Condition>
										<Value1>t_slaveFrame.Command</Value1>
										<Operator>Equal</Operator>
										<Value2>Parameter</Value2>
									</Condition>
									<Statement>
										<Return>
											<Type>Error</Type>
											<Value>Invalid CMD (Parameter) received</Value>
											<Id>1</Id>
										</Return>
									</Statement>
								</Compare>
								<Compare>
									<Condition>
										<Value1>t_slaveFrame.Command</Value1>
										<Operator>Equal</Operator>
										<Value2>ProcessData</Value2>
									</Condition>
									<Statement>
										<Return>
											<Type>Error</Type>
											<Value>Invalid CMD (ProcessData) received</Value>
											<Id>1</Id>
										</Return>
									</Statement>
								</Compare>
								<Compare>
									<Condition>
										<Value1>t_slaveFrame.Command</Value1>
										<Operator>Equal</Operator>
										<Value2>FailSafeData</Value2>
									</Condition>
									<Statement>
										<Return>
											<Type>Error</Type>
											<Value>Invalid CMD (FailSafeData) received</Value>
											<Id>1</Id>
										</Return>
									</Statement>
								</Compare>
								<Compare>
									<Condition>
										<Value1>t_slaveFrame.Command</Value1>
										<Operator>NotEqual</Operator>
										<Value2>Reset</Value2>
									</Condition>
									<Condition>
										<Value1>t_slaveFrame.Command</Value1>
										<Operator>NotEqual</Operator>
										<Value2>Session</Value2>
									</Condition>
									<Condition>
										<Value1>t_slaveFrame.Command</Value1>
										<Operator>NotEqual</Operator>
										<Value2>Connection</Value2>
									</Condition>
									<Condition>
										<Value1>t_slaveFrame.Command</Value1>
										<Operator>NotEqual</Operator>
										<Value2>Parameter</Value2>
									</Condition>
									<Condition>
										<Value1>t_slaveFrame.Command</Value1>
										<Operator>NotEqual</Operator>
										<Value2>ProcessData</Value2>
									</Condition>
									<Condition>
										<Value1>t_slaveFrame.Command</Value1>
										<Operator>NotEqual</Operator>
										<Value2>FailSafeData</Value2>
									</Condition>
									<Statement>
										<Return>
											<Type>Error</Type>
											<Value>Unknown CMD received</Value>
											<Id>2</Id>
										</Return>
									</Statement>
								</Compare>
							</Compares>
						</TestStep>
						<TestStep Name="CheckReceivedSlaveFrame">
							<Action>
								<CallFunction>
									<Reference>CHECK_RESET_FAIL</Reference>
								</CallFunction>
							</Action>
							<ReturnValue>
								<OnSuccess>
									<Type>Success</Type>
									<Value Param0="c_CommFaultReason">Expected CommFaultReason ({0}) received</Value>
								</OnSuccess>
							</ReturnValue>
						</TestStep>
					</TestSteps>
				</TestCase>
				<TestCase Name="#3.21 CONN_Fail5" CaseId="21">
					<Comment>Hochlauf mehrere Zyklen, falsche Crc0 (+1) im Übergang</Comment>
					<CaseVariables>
						<Variable>
							<Name>c_CommFaultReason</Name>
							<Type>Byte</Type>
						</Variable>
						<Variable>
							<Name>c_tmpByte</Name>
							<Type>Byte</Type>
						</Variable>
					</CaseVariables>
					<TestSteps>
						<TestStep Name="CheckSafeDataLength">
							<Compares>
								<Compare>
									<Condition>
										<Value1>SafeDataLength</Value1>
										<Operator>NotEqual</Operator>
										<Value2>1</Value2>
									</Condition>
									<Statement>
										<Return>
											<Type>SkippedCase</Type>
											<Value>SafeDataLength != 1; ==> skip testcase</Value>
										</Return>
									</Statement>
								</Compare>
							</Compares>
						</TestStep>
						<TestStep Name="SetVariables">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>c_CommFaultReason</Destination>
										<Source>INVALID_CRC</Source>
									</SetVariable>
									<SetVariable>
										<Destination>c_tmpByte</Destination>
										<Source>0</Source>
									</SetVariable>
									<SetVariable>
										<Destination>t_masterSessionId</Destination>
										<Source>1</Source>
									</SetVariable>
								</SetVariables>
							</Action>
						</TestStep>
						<TestStep Name="SetConnectionData">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>t_connectionId</Destination>
										<Source>3</Source>
									</SetVariable>
									<SetVariable>
										<Destination DestinationIndex="0">t_connData</Destination>
										<Source>t_connectionId</Source>
									</SetVariable>
									<SetVariable>
										<Destination DestinationIndex="2">t_connData</Destination>
										<Source>ConnData.SlaveAddress</Source>
									</SetVariable>
								</SetVariables>
							</Action>
							<Informations2>
								<Information>
									<Type>Output</Type>
									<Value Param0="t_connectionId" Param1="ConnData.SlaveAddress" Param2="t_connData">ConnectionId: {0} (0x{0:x4}), Slave Address: {1} (0x{1:x4}), Connection Data {2}</Value>
								</Information>
							</Informations2>
						</TestStep>
						<TestStep Name="SetParameterData">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>t_safePara</Destination>
										<Source>SafePara</Source>
									</SetVariable>
									<SetVariable>
										<Destination>t_watchdog</Destination>
										<Source>SafePara.Watchdog</Source>
									</SetVariable>
								</SetVariables>
							</Action>
							<Informations2>
								<Information>
									<Type>Output</Type>
									<Value Param0="t_watchdog" Param1="SafeParaSize" Param2="t_safePara">Watchdog: {0} ms, SafeParaSize: {1}, Safe Parameter {2}</Value>
								</Information>
							</Informations2>
						</TestStep>
						<TestStep Name="GoToSession">
							<Action>
								<CallFunction>
									<Reference>RUN_DUT_TO_SESSION</Reference>
								</CallFunction>
							</Action>
						</TestStep>
						<TestStep Name="CallSessionOk">
							<Action>
								<CallFunction>
									<Reference>SESSION_OK</Reference>
								</CallFunction>
							</Action>
						</TestStep>
						<TestStep Name="ReceiveEvent">
							<Event>
								<ReceiveFrame>t_slaveFrame</ReceiveFrame>
							</Event>
							<Informations2>
								<Information>
									<Type>Verbose</Type>
									<Value Param0="t_slaveFrame.FrameData">Slave Frame: {0}</Value>
								</Information>
							</Informations2>
						</TestStep>
						<TestStep Name="CheckWatchdog">
							<Event>
								<WatchdogExpired>
									<SetVariables>
										<SetVariable>
											<Destination>t_wdExpired</Destination>
											<Source>true</Source>
										</SetVariable>
									</SetVariables>
								</WatchdogExpired>
							</Event>
							<Compares>
								<Compare>
									<Condition>
										<Value1>t_wdExpired</Value1>
										<Operator>Equal</Operator>
										<Value2>true</Value2>
									</Condition>
									<Statement>
										<SetVariables>
											<SetVariable>
												<Destination>t_wdExpired</Destination>
												<Source>false</Source>
											</SetVariable>
										</SetVariables>
									</Statement>
									<Statement>
										<Return>
											<Type>Error</Type>
											<Value Param0="ElapsedWD">Watchdog expired! {0} ms </Value>
											<Id>5</Id>
										</Return>
									</Statement>
								</Compare>
							</Compares>
							<Informations2>
								<Information>
									<Type>Verbose</Type>
									<Value Param0="t_wdExpired">WD {0}</Value>
								</Information>
							</Informations2>
						</TestStep>
						<TestStep Name="CheckReceivedCrc">
							<Informations1>
								<Information>
									<Type>Verbose</Type>
									<Value Param0="t_slaveFrame.FrameData" Param1="LastCrc" Param2="t_slaveSeqNo" Param3="t_oldSlaveCrc" Param4="true">IsCrcCorrect(Frame {0}, LastCrc 0x{1:X4}, SeqNo {2}, OldCrc 0x{3:X4}, New {4})</Value>
								</Information>
							</Informations1>
							<Action>
								<IsCrcCorrect ReturnValue="crcCorrect">
									<Frame>t_slaveFrame</Frame>
									<LastCrc>LastCrc</LastCrc>
									<SequenceNo>t_slaveSeqNo</SequenceNo>
									<OldCrc>t_oldSlaveCrc</OldCrc>
									<New>true</New>
								</IsCrcCorrect>
							</Action>
							<ReturnValue>
								<OnFailure>
									<Type>Error</Type>
									<Value Param0="t_slaveFrame.Crc0">Invalid Crc0 reveived ({0:x})</Value>
									<Id>4</Id>
								</OnFailure>
							</ReturnValue>
						</TestStep>
						<TestStep Name="CheckConnectionConditions">
							<Compares>
								<Compare>
									<Condition>
										<Value1>t_slaveFrame.Command</Value1>
										<Operator>Equal</Operator>
										<Value2>Connection</Value2>
									</Condition>
									<Condition>
										<Value1>BytesToBeSent</Value1>
										<Operator>Equal</Operator>
										<Value2>0</Value2>
									</Condition>
									<Condition>
										<Value1>crcCorrect</Value1>
										<Operator>Equal</Operator>
										<Value2>true</Value2>
									</Condition>
									<Statement>
										<Return>
											<Type>Error</Type>
											<Value>BytesToBeSent == 0</Value>
											<Id>1</Id>
										</Return>
									</Statement>
								</Compare>
								<Compare>
									<Condition>
										<Value1>t_slaveFrame.Command</Value1>
										<Operator>Equal</Operator>
										<Value2>Connection</Value2>
									</Condition>
									<Condition>
										<Value1>crcCorrect</Value1>
										<Operator>Equal</Operator>
										<Value2>false</Value2>
									</Condition>
									<Statement>
										<Return>
											<Type>Error</Type>
											<Value>Invalid Crc received</Value>
											<Id>4</Id>
										</Return>
									</Statement>
								</Compare>
								<Compare>
									<Condition>
										<Value1>t_slaveFrame.Command</Value1>
										<Operator>Equal</Operator>
										<Value2>Connection</Value2>
									</Condition>
									<Condition>
										<Value1>BytesToBeSent</Value1>
										<Operator>NotEqual</Operator>
										<Value2>0</Value2>
									</Condition>
									<Condition>
										<Value1>crcCorrect</Value1>
										<Operator>Equal</Operator>
										<Value2>true</Value2>
									</Condition>
									<Statement>
										<CallFunction>CONN_STAY1_INCREMENTED_CRC0</CallFunction>
									</Statement>
								</Compare>
								<Compare>
									<Condition>
										<Value1>t_slaveFrame.Command</Value1>
										<Operator>Equal</Operator>
										<Value2>Reset</Value2>
									</Condition>
									<Statement>
										<Return>
											<Type>Error</Type>
											<Value>Invalid CMD(Reset) received</Value>
											<Id>1</Id>
										</Return>
									</Statement>
								</Compare>
								<Compare>
									<Condition>
										<Value1>t_slaveFrame.Command</Value1>
										<Operator>Equal</Operator>
										<Value2>Session</Value2>
									</Condition>
									<Statement>
										<Return>
											<Type>Error</Type>
											<Value>Invalid CMD (Session) received</Value>
											<Id>1</Id>
										</Return>
									</Statement>
								</Compare>
								<Compare>
									<Condition>
										<Value1>t_slaveFrame.Command</Value1>
										<Operator>Equal</Operator>
										<Value2>Parameter</Value2>
									</Condition>
									<Statement>
										<Return>
											<Type>Error</Type>
											<Value>Invalid CMD (Parameter) received</Value>
											<Id>1</Id>
										</Return>
									</Statement>
								</Compare>
								<Compare>
									<Condition>
										<Value1>t_slaveFrame.Command</Value1>
										<Operator>Equal</Operator>
										<Value2>ProcessData</Value2>
									</Condition>
									<Statement>
										<Return>
											<Type>Error</Type>
											<Value>Invalid CMD (ProcessData) received</Value>
											<Id>1</Id>
										</Return>
									</Statement>
								</Compare>
								<Compare>
									<Condition>
										<Value1>t_slaveFrame.Command</Value1>
										<Operator>Equal</Operator>
										<Value2>FailSafeData</Value2>
									</Condition>
									<Statement>
										<Return>
											<Type>Error</Type>
											<Value>Invalid CMD (FailSafeData) received</Value>
											<Id>1</Id>
										</Return>
									</Statement>
								</Compare>
								<Compare>
									<Condition>
										<Value1>t_slaveFrame.Command</Value1>
										<Operator>NotEqual</Operator>
										<Value2>Reset</Value2>
									</Condition>
									<Condition>
										<Value1>t_slaveFrame.Command</Value1>
										<Operator>NotEqual</Operator>
										<Value2>Session</Value2>
									</Condition>
									<Condition>
										<Value1>t_slaveFrame.Command</Value1>
										<Operator>NotEqual</Operator>
										<Value2>Connection</Value2>
									</Condition>
									<Condition>
										<Value1>t_slaveFrame.Command</Value1>
										<Operator>NotEqual</Operator>
										<Value2>Parameter</Value2>
									</Condition>
									<Condition>
										<Value1>t_slaveFrame.Command</Value1>
										<Operator>NotEqual</Operator>
										<Value2>ProcessData</Value2>
									</Condition>
									<Condition>
										<Value1>t_slaveFrame.Command</Value1>
										<Operator>NotEqual</Operator>
										<Value2>FailSafeData</Value2>
									</Condition>
									<Statement>
										<Return>
											<Type>Error</Type>
											<Value>Unknown CMD received</Value>
											<Id>2</Id>
										</Return>
									</Statement>
								</Compare>
							</Compares>
						</TestStep>
						<TestStep Name="CheckReceivedSlaveFrame">
							<Action>
								<CallFunction>
									<Reference>CHECK_RESET_FAIL</Reference>
								</CallFunction>
							</Action>
							<ReturnValue>
								<OnSuccess>
									<Type>Success</Type>
									<Value Param0="c_CommFaultReason">Expected CommFaultReason ({0}) received</Value>
								</OnSuccess>
							</ReturnValue>
						</TestStep>
					</TestSteps>
				</TestCase>
				<TestCase Name="#3.22 CONN_Fail5" CaseId="22">
					<Comment>Hochlauf mehrere Zyklen, falsche Crc0 (-1) im Übergang</Comment>
					<CaseVariables>
						<Variable>
							<Name>c_CommFaultReason</Name>
							<Type>Byte</Type>
						</Variable>
						<Variable>
							<Name>c_tmpByte</Name>
							<Type>Byte</Type>
						</Variable>
					</CaseVariables>
					<TestSteps>
						<TestStep Name="CheckSafeDataLength">
							<Compares>
								<Compare>
									<Condition>
										<Value1>SafeDataLength</Value1>
										<Operator>NotEqual</Operator>
										<Value2>1</Value2>
									</Condition>
									<Statement>
										<Return>
											<Type>SkippedCase</Type>
											<Value>SafeDataLength != 1; ==> skip testcase</Value>
										</Return>
									</Statement>
								</Compare>
							</Compares>
						</TestStep>
						<TestStep Name="SetVariables">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>c_CommFaultReason</Destination>
										<Source>INVALID_CRC</Source>
									</SetVariable>
									<SetVariable>
										<Destination>c_tmpByte</Destination>
										<Source>0</Source>
									</SetVariable>
									<SetVariable>
										<Destination>t_masterSessionId</Destination>
										<Source>1</Source>
									</SetVariable>
								</SetVariables>
							</Action>
						</TestStep>
						<TestStep Name="SetConnectionData">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>t_connectionId</Destination>
										<Source>3</Source>
									</SetVariable>
									<SetVariable>
										<Destination DestinationIndex="0">t_connData</Destination>
										<Source>t_connectionId</Source>
									</SetVariable>
									<SetVariable>
										<Destination DestinationIndex="2">t_connData</Destination>
										<Source>ConnData.SlaveAddress</Source>
									</SetVariable>
								</SetVariables>
							</Action>
							<Informations2>
								<Information>
									<Type>Output</Type>
									<Value Param0="t_connectionId" Param1="ConnData.SlaveAddress" Param2="t_connData">ConnectionId: {0} (0x{0:x4}), Slave Address: {1} (0x{1:x4}), Connection Data {2}</Value>
								</Information>
							</Informations2>
						</TestStep>
						<TestStep Name="SetParameterData">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>t_safePara</Destination>
										<Source>SafePara</Source>
									</SetVariable>
									<SetVariable>
										<Destination>t_watchdog</Destination>
										<Source>SafePara.Watchdog</Source>
									</SetVariable>
								</SetVariables>
							</Action>
							<Informations2>
								<Information>
									<Type>Output</Type>
									<Value Param0="t_watchdog" Param1="SafeParaSize" Param2="t_safePara">Watchdog: {0} ms, SafeParaSize: {1}, Safe Parameter {2}</Value>
								</Information>
							</Informations2>
						</TestStep>
						<TestStep Name="GoToSession">
							<Action>
								<CallFunction>
									<Reference>RUN_DUT_TO_SESSION</Reference>
								</CallFunction>
							</Action>
						</TestStep>
						<TestStep Name="CallSessionOk">
							<Action>
								<CallFunction>
									<Reference>SESSION_OK</Reference>
								</CallFunction>
							</Action>
						</TestStep>
						<TestStep Name="ReceiveEvent">
							<Event>
								<ReceiveFrame>t_slaveFrame</ReceiveFrame>
							</Event>
							<Informations2>
								<Information>
									<Type>Verbose</Type>
									<Value Param0="t_slaveFrame.FrameData">Slave Frame: {0}</Value>
								</Information>
							</Informations2>
						</TestStep>
						<TestStep Name="CheckWatchdog">
							<Event>
								<WatchdogExpired>
									<SetVariables>
										<SetVariable>
											<Destination>t_wdExpired</Destination>
											<Source>true</Source>
										</SetVariable>
									</SetVariables>
								</WatchdogExpired>
							</Event>
							<Compares>
								<Compare>
									<Condition>
										<Value1>t_wdExpired</Value1>
										<Operator>Equal</Operator>
										<Value2>true</Value2>
									</Condition>
									<Statement>
										<SetVariables>
											<SetVariable>
												<Destination>t_wdExpired</Destination>
												<Source>false</Source>
											</SetVariable>
										</SetVariables>
									</Statement>
									<Statement>
										<Return>
											<Type>Error</Type>
											<Value Param0="ElapsedWD">Watchdog expired! {0} ms </Value>
											<Id>5</Id>
										</Return>
									</Statement>
								</Compare>
							</Compares>
							<Informations2>
								<Information>
									<Type>Verbose</Type>
									<Value Param0="t_wdExpired">WD {0}</Value>
								</Information>
							</Informations2>
						</TestStep>
						<TestStep Name="CheckReceivedCrc">
							<Informations1>
								<Information>
									<Type>Verbose</Type>
									<Value Param0="t_slaveFrame.FrameData" Param1="LastCrc" Param2="t_slaveSeqNo" Param3="t_oldSlaveCrc" Param4="true">IsCrcCorrect(Frame {0}, LastCrc 0x{1:X4}, SeqNo {2}, OldCrc 0x{3:X4}, New {4})</Value>
								</Information>
							</Informations1>
							<Action>
								<IsCrcCorrect ReturnValue="crcCorrect">
									<Frame>t_slaveFrame</Frame>
									<LastCrc>LastCrc</LastCrc>
									<SequenceNo>t_slaveSeqNo</SequenceNo>
									<OldCrc>t_oldSlaveCrc</OldCrc>
									<New>true</New>
								</IsCrcCorrect>
							</Action>
							<ReturnValue>
								<OnFailure>
									<Type>Error</Type>
									<Value Param0="t_slaveFrame.Crc0">Invalid Crc0 reveived ({0:x})</Value>
									<Id>4</Id>
								</OnFailure>
							</ReturnValue>
						</TestStep>
						<TestStep Name="CheckSessionConditions">
							<Compares>
								<Compare>
									<Condition>
										<Value1>t_slaveFrame.Command</Value1>
										<Operator>Equal</Operator>
										<Value2>Connection</Value2>
									</Condition>
									<Condition>
										<Value1>BytesToBeSent</Value1>
										<Operator>Equal</Operator>
										<Value2>0</Value2>
									</Condition>
									<Condition>
										<Value1>crcCorrect</Value1>
										<Operator>Equal</Operator>
										<Value2>true</Value2>
									</Condition>
									<Statement>
										<Return>
											<Type>Error</Type>
											<Value>BytesToBeSent == 0</Value>
											<Id>1</Id>
										</Return>
									</Statement>
								</Compare>
								<Compare>
									<Condition>
										<Value1>t_slaveFrame.Command</Value1>
										<Operator>Equal</Operator>
										<Value2>Connection</Value2>
									</Condition>
									<Condition>
										<Value1>crcCorrect</Value1>
										<Operator>Equal</Operator>
										<Value2>false</Value2>
									</Condition>
									<Statement>
										<Return>
											<Type>Error</Type>
											<Value>Invalid Crc received</Value>
											<Id>4</Id>
										</Return>
									</Statement>
								</Compare>
								<Compare>
									<Condition>
										<Value1>t_slaveFrame.Command</Value1>
										<Operator>Equal</Operator>
										<Value2>Connection</Value2>
									</Condition>
									<Condition>
										<Value1>BytesToBeSent</Value1>
										<Operator>NotEqual</Operator>
										<Value2>0</Value2>
									</Condition>
									<Condition>
										<Value1>crcCorrect</Value1>
										<Operator>Equal</Operator>
										<Value2>true</Value2>
									</Condition>
									<Statement>
										<CallFunction>CONN_STAY1_DECREMENTED_CRC0</CallFunction>
									</Statement>
								</Compare>
								<Compare>
									<Condition>
										<Value1>t_slaveFrame.Command</Value1>
										<Operator>Equal</Operator>
										<Value2>Reset</Value2>
									</Condition>
									<Statement>
										<Return>
											<Type>Error</Type>
											<Value>Invalid CMD(Reset) received</Value>
											<Id>1</Id>
										</Return>
									</Statement>
								</Compare>
								<Compare>
									<Condition>
										<Value1>t_slaveFrame.Command</Value1>
										<Operator>Equal</Operator>
										<Value2>Session</Value2>
									</Condition>
									<Statement>
										<Return>
											<Type>Error</Type>
											<Value>Invalid CMD (Session) received</Value>
											<Id>1</Id>
										</Return>
									</Statement>
								</Compare>
								<Compare>
									<Condition>
										<Value1>t_slaveFrame.Command</Value1>
										<Operator>Equal</Operator>
										<Value2>Parameter</Value2>
									</Condition>
									<Statement>
										<Return>
											<Type>Error</Type>
											<Value>Invalid CMD (Parameter) received</Value>
											<Id>1</Id>
										</Return>
									</Statement>
								</Compare>
								<Compare>
									<Condition>
										<Value1>t_slaveFrame.Command</Value1>
										<Operator>Equal</Operator>
										<Value2>ProcessData</Value2>
									</Condition>
									<Statement>
										<Return>
											<Type>Error</Type>
											<Value>Invalid CMD (ProcessData) received</Value>
											<Id>1</Id>
										</Return>
									</Statement>
								</Compare>
								<Compare>
									<Condition>
										<Value1>t_slaveFrame.Command</Value1>
										<Operator>Equal</Operator>
										<Value2>FailSafeData</Value2>
									</Condition>
									<Statement>
										<Return>
											<Type>Error</Type>
											<Value>Invalid CMD (FailSafeData) received</Value>
											<Id>1</Id>
										</Return>
									</Statement>
								</Compare>
								<Compare>
									<Condition>
										<Value1>t_slaveFrame.Command</Value1>
										<Operator>NotEqual</Operator>
										<Value2>Reset</Value2>
									</Condition>
									<Condition>
										<Value1>t_slaveFrame.Command</Value1>
										<Operator>NotEqual</Operator>
										<Value2>Session</Value2>
									</Condition>
									<Condition>
										<Value1>t_slaveFrame.Command</Value1>
										<Operator>NotEqual</Operator>
										<Value2>Connection</Value2>
									</Condition>
									<Condition>
										<Value1>t_slaveFrame.Command</Value1>
										<Operator>NotEqual</Operator>
										<Value2>Parameter</Value2>
									</Condition>
									<Condition>
										<Value1>t_slaveFrame.Command</Value1>
										<Operator>NotEqual</Operator>
										<Value2>ProcessData</Value2>
									</Condition>
									<Condition>
										<Value1>t_slaveFrame.Command</Value1>
										<Operator>NotEqual</Operator>
										<Value2>FailSafeData</Value2>
									</Condition>
									<Statement>
										<Return>
											<Type>Error</Type>
											<Value>Unknown CMD received</Value>
											<Id>2</Id>
										</Return>
									</Statement>
								</Compare>
							</Compares>
						</TestStep>
						<TestStep Name="CheckReceivedSlaveFrame">
							<Action>
								<CallFunction>
									<Reference>CHECK_RESET_FAIL</Reference>
								</CallFunction>
							</Action>
							<ReturnValue>
								<OnSuccess>
									<Type>Success</Type>
									<Value Param0="c_CommFaultReason">Expected CommFaultReason ({0}) received</Value>
								</OnSuccess>
							</ReturnValue>
						</TestStep>
					</TestSteps>
				</TestCase>
				<TestCase Name="#3.23 CONN_Fail6" CaseId="23">
					<Comment>Hochlauf mehrere Zyklen, falsche Conn-Id (0) im MasterFrame beim Übergang, letzter Frame mit dem Feld Conn-ID wird verschickt</Comment>
					<CaseVariables>
						<Variable>
							<Name>c_CommFaultReason</Name>
							<Type>Byte</Type>
						</Variable>
						<Variable>
							<Name>c_connId</Name>
							<Type>UInt16</Type>
						</Variable>
						<Variable>
							<Name>c_tmpByte</Name>
							<Type>Byte</Type>
						</Variable>
					</CaseVariables>
					<TestSteps>
						<TestStep Name="CheckSafeDataLength">
							<Compares>
								<Compare>
									<Condition>
										<Value1>SafeDataLength</Value1>
										<Operator>Greater</Operator>
										<Value2>2</Value2>
									</Condition>
									<Statement>
										<Return>
											<Type>SkippedCase</Type>
											<Value>SafeDataLength > 2; ==> skip testcase</Value>
										</Return>
									</Statement>
								</Compare>
							</Compares>
						</TestStep>
						<TestStep Name="SetVariables">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>c_CommFaultReason</Destination>
										<Source>INVALID_CONNID</Source>
									</SetVariable>
									<SetVariable>
										<Destination>c_tmpByte</Destination>
										<Source>0</Source>
									</SetVariable>
									<SetVariable>
										<Destination>c_connId</Destination>
										<Source>0</Source>
									</SetVariable>
									<SetVariable>
										<Destination>t_masterSessionId</Destination>
										<Source>1</Source>
									</SetVariable>
								</SetVariables>
							</Action>
						</TestStep>
						<TestStep Name="SetConnectionData">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>t_connectionId</Destination>
										<Source>3</Source>
									</SetVariable>
									<SetVariable>
										<Destination DestinationIndex="0">t_connData</Destination>
										<Source>t_connectionId</Source>
									</SetVariable>
									<SetVariable>
										<Destination DestinationIndex="2">t_connData</Destination>
										<Source>ConnData.SlaveAddress</Source>
									</SetVariable>
								</SetVariables>
							</Action>
							<Informations2>
								<Information>
									<Type>Output</Type>
									<Value Param0="t_connectionId" Param1="ConnData.SlaveAddress" Param2="t_connData">ConnectionId: {0} (0x{0:x4}), Slave Address: {1} (0x{1:x4}), Connection Data {2}</Value>
								</Information>
							</Informations2>
						</TestStep>
						<TestStep Name="SetParameterData">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>t_safePara</Destination>
										<Source>SafePara</Source>
									</SetVariable>
									<SetVariable>
										<Destination>t_watchdog</Destination>
										<Source>SafePara.Watchdog</Source>
									</SetVariable>
								</SetVariables>
							</Action>
							<Informations2>
								<Information>
									<Type>Output</Type>
									<Value Param0="t_watchdog" Param1="SafeParaSize" Param2="t_safePara">Watchdog: {0} ms, SafeParaSize: {1}, Safe Parameter {2}</Value>
								</Information>
							</Informations2>
						</TestStep>
						<TestStep Name="GoToSession">
							<Action>
								<CallFunction>
									<Reference>RUN_DUT_TO_SESSION</Reference>
								</CallFunction>
							</Action>
						</TestStep>
						<TestStep Name="CallSessionOk">
							<Action>
								<CallFunction>
									<Reference>SESSION_OK</Reference>
								</CallFunction>
							</Action>
						</TestStep>
						<TestStep Name="ReceiveEvent">
							<Event>
								<ReceiveFrame>t_slaveFrame</ReceiveFrame>
							</Event>
							<Informations2>
								<Information>
									<Type>Verbose</Type>
									<Value Param0="t_slaveFrame.FrameData">Slave Frame: {0}</Value>
								</Information>
							</Informations2>
						</TestStep>
						<TestStep Name="CheckWatchdog">
							<Event>
								<WatchdogExpired>
									<SetVariables>
										<SetVariable>
											<Destination>t_wdExpired</Destination>
											<Source>true</Source>
										</SetVariable>
									</SetVariables>
								</WatchdogExpired>
							</Event>
							<Compares>
								<Compare>
									<Condition>
										<Value1>t_wdExpired</Value1>
										<Operator>Equal</Operator>
										<Value2>true</Value2>
									</Condition>
									<Statement>
										<SetVariables>
											<SetVariable>
												<Destination>t_wdExpired</Destination>
												<Source>false</Source>
											</SetVariable>
										</SetVariables>
									</Statement>
									<Statement>
										<Return>
											<Type>Error</Type>
											<Value Param0="ElapsedWD">Watchdog expired! {0} ms </Value>
											<Id>5</Id>
										</Return>
									</Statement>
								</Compare>
							</Compares>
							<Informations2>
								<Information>
									<Type>Verbose</Type>
									<Value Param0="t_wdExpired">WD {0}</Value>
								</Information>
							</Informations2>
						</TestStep>
						<TestStep Name="CheckReceivedCrc">
							<Informations1>
								<Information>
									<Type>Verbose</Type>
									<Value Param0="t_slaveFrame.FrameData" Param1="LastCrc" Param2="t_slaveSeqNo" Param3="t_oldSlaveCrc" Param4="true">IsCrcCorrect(Frame {0}, LastCrc 0x{1:X4}, SeqNo {2}, OldCrc 0x{3:X4}, New {4})</Value>
								</Information>
							</Informations1>
							<Action>
								<IsCrcCorrect ReturnValue="crcCorrect">
									<Frame>t_slaveFrame</Frame>
									<LastCrc>LastCrc</LastCrc>
									<SequenceNo>t_slaveSeqNo</SequenceNo>
									<OldCrc>t_oldSlaveCrc</OldCrc>
									<New>true</New>
								</IsCrcCorrect>
							</Action>
							<ReturnValue>
								<OnFailure>
									<Type>Error</Type>
									<Value Param0="t_slaveFrame.Crc0">Invalid Crc0 reveived ({0:x})</Value>
									<Id>4</Id>
								</OnFailure>
							</ReturnValue>
						</TestStep>
						<TestStep Name="CheckSessionConditions">
							<Compares>
								<Compare>
									<Condition>
										<Value1>t_slaveFrame.Command</Value1>
										<Operator>Equal</Operator>
										<Value2>Connection</Value2>
									</Condition>
									<Condition>
										<Value1>BytesToBeSent</Value1>
										<Operator>Equal</Operator>
										<Value2>0</Value2>
									</Condition>
									<Condition>
										<Value1>crcCorrect</Value1>
										<Operator>Equal</Operator>
										<Value2>true</Value2>
									</Condition>
									<Statement>
										<Return>
											<Type>Error</Type>
											<Value>BytesToBeSent == 0</Value>
											<Id>1</Id>
										</Return>
									</Statement>
								</Compare>
								<Compare>
									<Condition>
										<Value1>t_slaveFrame.Command</Value1>
										<Operator>Equal</Operator>
										<Value2>Connection</Value2>
									</Condition>
									<Condition>
										<Value1>crcCorrect</Value1>
										<Operator>Equal</Operator>
										<Value2>false</Value2>
									</Condition>
									<Statement>
										<Return>
											<Type>Error</Type>
											<Value>Invalid Crc received</Value>
											<Id>4</Id>
										</Return>
									</Statement>
								</Compare>
								<Compare>
									<Condition>
										<Value1>t_slaveFrame.Command</Value1>
										<Operator>Equal</Operator>
										<Value2>Connection</Value2>
									</Condition>
									<Condition>
										<Value1>BytesToBeSent</Value1>
										<Operator>LowerOrEqual</Operator>
										<Value2>SafeDataLength</Value2>
									</Condition>
									<Condition>
										<Value1>crcCorrect</Value1>
										<Operator>Equal</Operator>
										<Value2>true</Value2>
									</Condition>
									<Statement>
										<CallFunction>CONN_STAY1_INVALID_CONNID</CallFunction>
									</Statement>
									<Statement>
										<GotoStep>CheckReceivedSlaveFrame</GotoStep>
									</Statement>
								</Compare>
								<Compare>
									<Condition>
										<Value1>t_slaveFrame.Command</Value1>
										<Operator>Equal</Operator>
										<Value2>Connection</Value2>
									</Condition>
									<Condition>
										<Value1>BytesToBeSent</Value1>
										<Operator>NotEqual</Operator>
										<Value2>0</Value2>
									</Condition>
									<Condition>
										<Value1>crcCorrect</Value1>
										<Operator>Equal</Operator>
										<Value2>true</Value2>
									</Condition>
									<Statement>
										<CallFunction>CONN_STAY1</CallFunction>
									</Statement>
									<Statement>
										<GotoStep>ReceiveEvent</GotoStep>
									</Statement>
								</Compare>
								<Compare>
									<Condition>
										<Value1>t_slaveFrame.Command</Value1>
										<Operator>Equal</Operator>
										<Value2>Reset</Value2>
									</Condition>
									<Statement>
										<Return>
											<Type>Error</Type>
											<Value>Invalid CMD(Reset) received</Value>
											<Id>1</Id>
										</Return>
									</Statement>
								</Compare>
								<Compare>
									<Condition>
										<Value1>t_slaveFrame.Command</Value1>
										<Operator>Equal</Operator>
										<Value2>Session</Value2>
									</Condition>
									<Statement>
										<Return>
											<Type>Error</Type>
											<Value>Invalid CMD (Session) received</Value>
											<Id>1</Id>
										</Return>
									</Statement>
								</Compare>
								<Compare>
									<Condition>
										<Value1>t_slaveFrame.Command</Value1>
										<Operator>Equal</Operator>
										<Value2>Parameter</Value2>
									</Condition>
									<Statement>
										<Return>
											<Type>Error</Type>
											<Value>Invalid CMD (Parameter) received</Value>
											<Id>1</Id>
										</Return>
									</Statement>
								</Compare>
								<Compare>
									<Condition>
										<Value1>t_slaveFrame.Command</Value1>
										<Operator>Equal</Operator>
										<Value2>ProcessData</Value2>
									</Condition>
									<Statement>
										<Return>
											<Type>Error</Type>
											<Value>Invalid CMD (ProcessData) received</Value>
											<Id>1</Id>
										</Return>
									</Statement>
								</Compare>
								<Compare>
									<Condition>
										<Value1>t_slaveFrame.Command</Value1>
										<Operator>Equal</Operator>
										<Value2>FailSafeData</Value2>
									</Condition>
									<Statement>
										<Return>
											<Type>Error</Type>
											<Value>Invalid CMD (FailSafeData) received</Value>
											<Id>1</Id>
										</Return>
									</Statement>
								</Compare>
								<Compare>
									<Condition>
										<Value1>t_slaveFrame.Command</Value1>
										<Operator>NotEqual</Operator>
										<Value2>Reset</Value2>
									</Condition>
									<Condition>
										<Value1>t_slaveFrame.Command</Value1>
										<Operator>NotEqual</Operator>
										<Value2>Session</Value2>
									</Condition>
									<Condition>
										<Value1>t_slaveFrame.Command</Value1>
										<Operator>NotEqual</Operator>
										<Value2>Connection</Value2>
									</Condition>
									<Condition>
										<Value1>t_slaveFrame.Command</Value1>
										<Operator>NotEqual</Operator>
										<Value2>Parameter</Value2>
									</Condition>
									<Condition>
										<Value1>t_slaveFrame.Command</Value1>
										<Operator>NotEqual</Operator>
										<Value2>ProcessData</Value2>
									</Condition>
									<Condition>
										<Value1>t_slaveFrame.Command</Value1>
										<Operator>NotEqual</Operator>
										<Value2>FailSafeData</Value2>
									</Condition>
									<Statement>
										<Return>
											<Type>Error</Type>
											<Value>Unknown CMD received</Value>
											<Id>2</Id>
										</Return>
									</Statement>
								</Compare>
							</Compares>
						</TestStep>
						<TestStep Name="CheckReceivedSlaveFrame">
							<Action>
								<CallFunction>
									<Reference>CHECK_RESET_FAIL</Reference>
								</CallFunction>
							</Action>
							<ReturnValue>
								<OnSuccess>
									<Type>Success</Type>
									<Value Param0="c_CommFaultReason">Expected CommFaultReason ({0}) received</Value>
								</OnSuccess>
							</ReturnValue>
						</TestStep>
					</TestSteps>
				</TestCase>
				<TestCase Name="#3.24 CONN_Fail6" CaseId="24">
					<Comment>Hochlauf mehrere Zyklen, falsche Conn-Id (2) im MasterFrame beim Übergang, letzter Frame mit dem Feld Conn-ID wird verschickt</Comment>
					<CaseVariables>
						<Variable>
							<Name>c_CommFaultReason</Name>
							<Type>Byte</Type>
						</Variable>
						<Variable>
							<Name>c_connId</Name>
							<Type>UInt16</Type>
						</Variable>
						<Variable>
							<Name>c_tmpByte</Name>
							<Type>Byte</Type>
						</Variable>
					</CaseVariables>
					<TestSteps>
						<TestStep Name="CheckSafeDataLength">
							<Compares>
								<Compare>
									<Condition>
										<Value1>SafeDataLength</Value1>
										<Operator>Greater</Operator>
										<Value2>2</Value2>
									</Condition>
									<Statement>
										<Return>
											<Type>SkippedCase</Type>
											<Value>SafeDataLength > 2; ==> skip testcase</Value>
										</Return>
									</Statement>
								</Compare>
							</Compares>
						</TestStep>
						<TestStep Name="SetVariables">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>c_CommFaultReason</Destination>
										<Source>INVALID_CONNID</Source>
									</SetVariable>
									<SetVariable>
										<Destination>c_tmpByte</Destination>
										<Source>0</Source>
									</SetVariable>
									<SetVariable>
										<Destination>c_connId</Destination>
										<Source>2</Source>
									</SetVariable>
									<SetVariable>
										<Destination>t_masterSessionId</Destination>
										<Source>1</Source>
									</SetVariable>
								</SetVariables>
							</Action>
						</TestStep>
						<TestStep Name="SetConnectionData">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>t_connectionId</Destination>
										<Source>3</Source>
									</SetVariable>
									<SetVariable>
										<Destination DestinationIndex="0">t_connData</Destination>
										<Source>t_connectionId</Source>
									</SetVariable>
									<SetVariable>
										<Destination DestinationIndex="2">t_connData</Destination>
										<Source>ConnData.SlaveAddress</Source>
									</SetVariable>
								</SetVariables>
							</Action>
							<Informations2>
								<Information>
									<Type>Output</Type>
									<Value Param0="t_connectionId" Param1="ConnData.SlaveAddress" Param2="t_connData">ConnectionId: {0} (0x{0:x4}), Slave Address: {1} (0x{1:x4}), Connection Data {2}</Value>
								</Information>
							</Informations2>
						</TestStep>
						<TestStep Name="SetParameterData">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>t_safePara</Destination>
										<Source>SafePara</Source>
									</SetVariable>
									<SetVariable>
										<Destination>t_watchdog</Destination>
										<Source>SafePara.Watchdog</Source>
									</SetVariable>
								</SetVariables>
							</Action>
							<Informations2>
								<Information>
									<Type>Output</Type>
									<Value Param0="t_watchdog" Param1="SafeParaSize" Param2="t_safePara">Watchdog: {0} ms, SafeParaSize: {1}, Safe Parameter {2}</Value>
								</Information>
							</Informations2>
						</TestStep>
						<TestStep Name="GoToSession">
							<Action>
								<CallFunction>
									<Reference>RUN_DUT_TO_SESSION</Reference>
								</CallFunction>
							</Action>
						</TestStep>
						<TestStep Name="CallSessionOk">
							<Action>
								<CallFunction>
									<Reference>SESSION_OK</Reference>
								</CallFunction>
							</Action>
						</TestStep>
						<TestStep Name="ReceiveEvent">
							<Event>
								<ReceiveFrame>t_slaveFrame</ReceiveFrame>
							</Event>
							<Informations2>
								<Information>
									<Type>Verbose</Type>
									<Value Param0="t_slaveFrame.FrameData">Slave Frame: {0}</Value>
								</Information>
							</Informations2>
						</TestStep>
						<TestStep Name="CheckWatchdog">
							<Event>
								<WatchdogExpired>
									<SetVariables>
										<SetVariable>
											<Destination>t_wdExpired</Destination>
											<Source>true</Source>
										</SetVariable>
									</SetVariables>
								</WatchdogExpired>
							</Event>
							<Compares>
								<Compare>
									<Condition>
										<Value1>t_wdExpired</Value1>
										<Operator>Equal</Operator>
										<Value2>true</Value2>
									</Condition>
									<Statement>
										<SetVariables>
											<SetVariable>
												<Destination>t_wdExpired</Destination>
												<Source>false</Source>
											</SetVariable>
										</SetVariables>
									</Statement>
									<Statement>
										<Return>
											<Type>Error</Type>
											<Value Param0="ElapsedWD">Watchdog expired! {0} ms </Value>
											<Id>5</Id>
										</Return>
									</Statement>
								</Compare>
							</Compares>
							<Informations2>
								<Information>
									<Type>Verbose</Type>
									<Value Param0="t_wdExpired">WD {0}</Value>
								</Information>
							</Informations2>
						</TestStep>
						<TestStep Name="CheckReceivedCrc">
							<Informations1>
								<Information>
									<Type>Verbose</Type>
									<Value Param0="t_slaveFrame.FrameData" Param1="LastCrc" Param2="t_slaveSeqNo" Param3="t_oldSlaveCrc" Param4="true">IsCrcCorrect(Frame {0}, LastCrc 0x{1:X4}, SeqNo {2}, OldCrc 0x{3:X4}, New {4})</Value>
								</Information>
							</Informations1>
							<Action>
								<IsCrcCorrect ReturnValue="crcCorrect">
									<Frame>t_slaveFrame</Frame>
									<LastCrc>LastCrc</LastCrc>
									<SequenceNo>t_slaveSeqNo</SequenceNo>
									<OldCrc>t_oldSlaveCrc</OldCrc>
									<New>true</New>
								</IsCrcCorrect>
							</Action>
							<ReturnValue>
								<OnFailure>
									<Type>Error</Type>
									<Value Param0="t_slaveFrame.Crc0">Invalid Crc0 reveived ({0:x})</Value>
									<Id>4</Id>
								</OnFailure>
							</ReturnValue>
						</TestStep>
						<TestStep Name="CheckSessionConditions">
							<Compares>
								<Compare>
									<Condition>
										<Value1>t_slaveFrame.Command</Value1>
										<Operator>Equal</Operator>
										<Value2>Connection</Value2>
									</Condition>
									<Condition>
										<Value1>BytesToBeSent</Value1>
										<Operator>Equal</Operator>
										<Value2>0</Value2>
									</Condition>
									<Condition>
										<Value1>crcCorrect</Value1>
										<Operator>Equal</Operator>
										<Value2>true</Value2>
									</Condition>
									<Statement>
										<Return>
											<Type>Error</Type>
											<Value>BytesToBeSent == 0</Value>
											<Id>1</Id>
										</Return>
									</Statement>
								</Compare>
								<Compare>
									<Condition>
										<Value1>t_slaveFrame.Command</Value1>
										<Operator>Equal</Operator>
										<Value2>Connection</Value2>
									</Condition>
									<Condition>
										<Value1>crcCorrect</Value1>
										<Operator>Equal</Operator>
										<Value2>false</Value2>
									</Condition>
									<Statement>
										<Return>
											<Type>Error</Type>
											<Value>Invalid Crc received</Value>
											<Id>4</Id>
										</Return>
									</Statement>
								</Compare>
								<Compare>
									<Condition>
										<Value1>t_slaveFrame.Command</Value1>
										<Operator>Equal</Operator>
										<Value2>Connection</Value2>
									</Condition>
									<Condition>
										<Value1>BytesToBeSent</Value1>
										<Operator>LowerOrEqual</Operator>
										<Value2>SafeDataLength</Value2>
									</Condition>
									<Condition>
										<Value1>crcCorrect</Value1>
										<Operator>Equal</Operator>
										<Value2>true</Value2>
									</Condition>
									<Statement>
										<CallFunction>CONN_STAY1_INVALID_CONNID</CallFunction>
									</Statement>
									<Statement>
										<GotoStep>CheckReceivedSlaveFrame</GotoStep>
									</Statement>
								</Compare>
								<Compare>
									<Condition>
										<Value1>t_slaveFrame.Command</Value1>
										<Operator>Equal</Operator>
										<Value2>Connection</Value2>
									</Condition>
									<Condition>
										<Value1>BytesToBeSent</Value1>
										<Operator>NotEqual</Operator>
										<Value2>0</Value2>
									</Condition>
									<Condition>
										<Value1>crcCorrect</Value1>
										<Operator>Equal</Operator>
										<Value2>true</Value2>
									</Condition>
									<Statement>
										<CallFunction>CONN_STAY1</CallFunction>
									</Statement>
									<Statement>
										<GotoStep>ReceiveEvent</GotoStep>
									</Statement>
								</Compare>
								<Compare>
									<Condition>
										<Value1>t_slaveFrame.Command</Value1>
										<Operator>Equal</Operator>
										<Value2>Reset</Value2>
									</Condition>
									<Statement>
										<Return>
											<Type>Error</Type>
											<Value>Invalid CMD(Reset) received</Value>
											<Id>1</Id>
										</Return>
									</Statement>
								</Compare>
								<Compare>
									<Condition>
										<Value1>t_slaveFrame.Command</Value1>
										<Operator>Equal</Operator>
										<Value2>Session</Value2>
									</Condition>
									<Statement>
										<Return>
											<Type>Error</Type>
											<Value>Invalid CMD (Session) received</Value>
											<Id>1</Id>
										</Return>
									</Statement>
								</Compare>
								<Compare>
									<Condition>
										<Value1>t_slaveFrame.Command</Value1>
										<Operator>Equal</Operator>
										<Value2>Parameter</Value2>
									</Condition>
									<Statement>
										<Return>
											<Type>Error</Type>
											<Value>Invalid CMD (Parameter) received</Value>
											<Id>1</Id>
										</Return>
									</Statement>
								</Compare>
								<Compare>
									<Condition>
										<Value1>t_slaveFrame.Command</Value1>
										<Operator>Equal</Operator>
										<Value2>ProcessData</Value2>
									</Condition>
									<Statement>
										<Return>
											<Type>Error</Type>
											<Value>Invalid CMD (ProcessData) received</Value>
											<Id>1</Id>
										</Return>
									</Statement>
								</Compare>
								<Compare>
									<Condition>
										<Value1>t_slaveFrame.Command</Value1>
										<Operator>Equal</Operator>
										<Value2>FailSafeData</Value2>
									</Condition>
									<Statement>
										<Return>
											<Type>Error</Type>
											<Value>Invalid CMD (FailSafeData) received</Value>
											<Id>1</Id>
										</Return>
									</Statement>
								</Compare>
								<Compare>
									<Condition>
										<Value1>t_slaveFrame.Command</Value1>
										<Operator>NotEqual</Operator>
										<Value2>Reset</Value2>
									</Condition>
									<Condition>
										<Value1>t_slaveFrame.Command</Value1>
										<Operator>NotEqual</Operator>
										<Value2>Session</Value2>
									</Condition>
									<Condition>
										<Value1>t_slaveFrame.Command</Value1>
										<Operator>NotEqual</Operator>
										<Value2>Connection</Value2>
									</Condition>
									<Condition>
										<Value1>t_slaveFrame.Command</Value1>
										<Operator>NotEqual</Operator>
										<Value2>Parameter</Value2>
									</Condition>
									<Condition>
										<Value1>t_slaveFrame.Command</Value1>
										<Operator>NotEqual</Operator>
										<Value2>ProcessData</Value2>
									</Condition>
									<Condition>
										<Value1>t_slaveFrame.Command</Value1>
										<Operator>NotEqual</Operator>
										<Value2>FailSafeData</Value2>
									</Condition>
									<Statement>
										<Return>
											<Type>Error</Type>
											<Value>Unknown CMD received</Value>
											<Id>2</Id>
										</Return>
									</Statement>
								</Compare>
							</Compares>
						</TestStep>
						<TestStep Name="CheckReceivedSlaveFrame">
							<Action>
								<CallFunction>
									<Reference>CHECK_RESET_FAIL</Reference>
								</CallFunction>
							</Action>
							<ReturnValue>
								<OnSuccess>
									<Type>Success</Type>
									<Value Param0="c_CommFaultReason">Expected CommFaultReason ({0}) received</Value>
								</OnSuccess>
							</ReturnValue>
						</TestStep>
					</TestSteps>
				</TestCase>
				<TestCase Name="#3.25 CONN_Fail6" CaseId="25">
					<Comment>Hochlauf mehrere Zyklen, falsche Conn-Id (4) im MasterFrame beim Übergang, letzter Frame mit dem Feld Conn-ID wird verschickt</Comment>
					<CaseVariables>
						<Variable>
							<Name>c_CommFaultReason</Name>
							<Type>Byte</Type>
						</Variable>
						<Variable>
							<Name>c_connId</Name>
							<Type>UInt16</Type>
						</Variable>
						<Variable>
							<Name>c_tmpByte</Name>
							<Type>Byte</Type>
						</Variable>
					</CaseVariables>
					<TestSteps>
						<TestStep Name="CheckSafeDataLength">
							<Compares>
								<Compare>
									<Condition>
										<Value1>SafeDataLength</Value1>
										<Operator>Greater</Operator>
										<Value2>2</Value2>
									</Condition>
									<Statement>
										<Return>
											<Type>SkippedCase</Type>
											<Value>SafeDataLength > 2; ==> skip testcase</Value>
										</Return>
									</Statement>
								</Compare>
							</Compares>
						</TestStep>
						<TestStep Name="SetVariables">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>c_CommFaultReason</Destination>
										<Source>INVALID_CONNID</Source>
									</SetVariable>
									<SetVariable>
										<Destination>c_tmpByte</Destination>
										<Source>0</Source>
									</SetVariable>
									<SetVariable>
										<Destination>c_connId</Destination>
										<Source>65535</Source>
									</SetVariable>
									<SetVariable>
										<Destination>t_masterSessionId</Destination>
										<Source>1</Source>
									</SetVariable>
								</SetVariables>
							</Action>
						</TestStep>
						<TestStep Name="SetConnectionData">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>t_connectionId</Destination>
										<Source>3</Source>
									</SetVariable>
									<SetVariable>
										<Destination DestinationIndex="0">t_connData</Destination>
										<Source>t_connectionId</Source>
									</SetVariable>
									<SetVariable>
										<Destination DestinationIndex="2">t_connData</Destination>
										<Source>ConnData.SlaveAddress</Source>
									</SetVariable>
								</SetVariables>
							</Action>
							<Informations2>
								<Information>
									<Type>Output</Type>
									<Value Param0="t_connectionId" Param1="ConnData.SlaveAddress" Param2="t_connData">ConnectionId: {0} (0x{0:x4}), Slave Address: {1} (0x{1:x4}), Connection Data {2}</Value>
								</Information>
							</Informations2>
						</TestStep>
						<TestStep Name="SetParameterData">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>t_safePara</Destination>
										<Source>SafePara</Source>
									</SetVariable>
									<SetVariable>
										<Destination>t_watchdog</Destination>
										<Source>SafePara.Watchdog</Source>
									</SetVariable>
								</SetVariables>
							</Action>
							<Informations2>
								<Information>
									<Type>Output</Type>
									<Value Param0="t_watchdog" Param1="SafeParaSize" Param2="t_safePara">Watchdog: {0} ms, SafeParaSize: {1}, Safe Parameter {2}</Value>
								</Information>
							</Informations2>
						</TestStep>
						<TestStep Name="GoToSession">
							<Action>
								<CallFunction>
									<Reference>RUN_DUT_TO_SESSION</Reference>
								</CallFunction>
							</Action>
						</TestStep>
						<TestStep Name="CallSessionOk">
							<Action>
								<CallFunction>
									<Reference>SESSION_OK</Reference>
								</CallFunction>
							</Action>
						</TestStep>
						<TestStep Name="ReceiveEvent">
							<Event>
								<ReceiveFrame>t_slaveFrame</ReceiveFrame>
							</Event>
							<Informations2>
								<Information>
									<Type>Verbose</Type>
									<Value Param0="t_slaveFrame.FrameData">Slave Frame: {0}</Value>
								</Information>
							</Informations2>
						</TestStep>
						<TestStep Name="CheckWatchdog">
							<Event>
								<WatchdogExpired>
									<SetVariables>
										<SetVariable>
											<Destination>t_wdExpired</Destination>
											<Source>true</Source>
										</SetVariable>
									</SetVariables>
								</WatchdogExpired>
							</Event>
							<Compares>
								<Compare>
									<Condition>
										<Value1>t_wdExpired</Value1>
										<Operator>Equal</Operator>
										<Value2>true</Value2>
									</Condition>
									<Statement>
										<SetVariables>
											<SetVariable>
												<Destination>t_wdExpired</Destination>
												<Source>false</Source>
											</SetVariable>
										</SetVariables>
									</Statement>
									<Statement>
										<Return>
											<Type>Error</Type>
											<Value Param0="ElapsedWD">Watchdog expired! {0} ms </Value>
											<Id>5</Id>
										</Return>
									</Statement>
								</Compare>
							</Compares>
							<Informations2>
								<Information>
									<Type>Verbose</Type>
									<Value Param0="t_wdExpired">WD {0}</Value>
								</Information>
							</Informations2>
						</TestStep>
						<TestStep Name="CheckReceivedCrc">
							<Informations1>
								<Information>
									<Type>Verbose</Type>
									<Value Param0="t_slaveFrame.FrameData" Param1="LastCrc" Param2="t_slaveSeqNo" Param3="t_oldSlaveCrc" Param4="true">IsCrcCorrect(Frame {0}, LastCrc 0x{1:X4}, SeqNo {2}, OldCrc 0x{3:X4}, New {4})</Value>
								</Information>
							</Informations1>
							<Action>
								<IsCrcCorrect ReturnValue="crcCorrect">
									<Frame>t_slaveFrame</Frame>
									<LastCrc>LastCrc</LastCrc>
									<SequenceNo>t_slaveSeqNo</SequenceNo>
									<OldCrc>t_oldSlaveCrc</OldCrc>
									<New>true</New>
								</IsCrcCorrect>
							</Action>
							<ReturnValue>
								<OnFailure>
									<Type>Error</Type>
									<Value Param0="t_slaveFrame.Crc0">Invalid Crc0 reveived ({0:x})</Value>
									<Id>4</Id>
								</OnFailure>
							</ReturnValue>
						</TestStep>
						<TestStep Name="CheckSessionConditions">
							<Compares>
								<Compare>
									<Condition>
										<Value1>t_slaveFrame.Command</Value1>
										<Operator>Equal</Operator>
										<Value2>Connection</Value2>
									</Condition>
									<Condition>
										<Value1>BytesToBeSent</Value1>
										<Operator>Equal</Operator>
										<Value2>0</Value2>
									</Condition>
									<Condition>
										<Value1>crcCorrect</Value1>
										<Operator>Equal</Operator>
										<Value2>true</Value2>
									</Condition>
									<Statement>
										<Return>
											<Type>Error</Type>
											<Value>BytesToBeSent == 0</Value>
											<Id>1</Id>
										</Return>
									</Statement>
								</Compare>
								<Compare>
									<Condition>
										<Value1>t_slaveFrame.Command</Value1>
										<Operator>Equal</Operator>
										<Value2>Connection</Value2>
									</Condition>
									<Condition>
										<Value1>crcCorrect</Value1>
										<Operator>Equal</Operator>
										<Value2>false</Value2>
									</Condition>
									<Statement>
										<Return>
											<Type>Error</Type>
											<Value>Invalid Crc received</Value>
											<Id>4</Id>
										</Return>
									</Statement>
								</Compare>
								<Compare>
									<Condition>
										<Value1>t_slaveFrame.Command</Value1>
										<Operator>Equal</Operator>
										<Value2>Connection</Value2>
									</Condition>
									<Condition>
										<Value1>BytesToBeSent</Value1>
										<Operator>LowerOrEqual</Operator>
										<Value2>SafeDataLength</Value2>
									</Condition>
									<Condition>
										<Value1>crcCorrect</Value1>
										<Operator>Equal</Operator>
										<Value2>true</Value2>
									</Condition>
									<Statement>
										<CallFunction>CONN_STAY1_INVALID_CONNID</CallFunction>
									</Statement>
									<Statement>
										<GotoStep>CheckReceivedSlaveFrame</GotoStep>
									</Statement>
								</Compare>
								<Compare>
									<Condition>
										<Value1>t_slaveFrame.Command</Value1>
										<Operator>Equal</Operator>
										<Value2>Connection</Value2>
									</Condition>
									<Condition>
										<Value1>BytesToBeSent</Value1>
										<Operator>NotEqual</Operator>
										<Value2>0</Value2>
									</Condition>
									<Condition>
										<Value1>crcCorrect</Value1>
										<Operator>Equal</Operator>
										<Value2>true</Value2>
									</Condition>
									<Statement>
										<CallFunction>CONN_STAY1</CallFunction>
									</Statement>
									<Statement>
										<GotoStep>ReceiveEvent</GotoStep>
									</Statement>
								</Compare>
								<Compare>
									<Condition>
										<Value1>t_slaveFrame.Command</Value1>
										<Operator>Equal</Operator>
										<Value2>Reset</Value2>
									</Condition>
									<Statement>
										<Return>
											<Type>Error</Type>
											<Value>Invalid CMD(Reset) received</Value>
											<Id>1</Id>
										</Return>
									</Statement>
								</Compare>
								<Compare>
									<Condition>
										<Value1>t_slaveFrame.Command</Value1>
										<Operator>Equal</Operator>
										<Value2>Session</Value2>
									</Condition>
									<Statement>
										<Return>
											<Type>Error</Type>
											<Value>Invalid CMD (Session) received</Value>
											<Id>1</Id>
										</Return>
									</Statement>
								</Compare>
								<Compare>
									<Condition>
										<Value1>t_slaveFrame.Command</Value1>
										<Operator>Equal</Operator>
										<Value2>Parameter</Value2>
									</Condition>
									<Statement>
										<Return>
											<Type>Error</Type>
											<Value>Invalid CMD (Parameter) received</Value>
											<Id>1</Id>
										</Return>
									</Statement>
								</Compare>
								<Compare>
									<Condition>
										<Value1>t_slaveFrame.Command</Value1>
										<Operator>Equal</Operator>
										<Value2>ProcessData</Value2>
									</Condition>
									<Statement>
										<Return>
											<Type>Error</Type>
											<Value>Invalid CMD (ProcessData) received</Value>
											<Id>1</Id>
										</Return>
									</Statement>
								</Compare>
								<Compare>
									<Condition>
										<Value1>t_slaveFrame.Command</Value1>
										<Operator>Equal</Operator>
										<Value2>FailSafeData</Value2>
									</Condition>
									<Statement>
										<Return>
											<Type>Error</Type>
											<Value>Invalid CMD (FailSafeData) received</Value>
											<Id>1</Id>
										</Return>
									</Statement>
								</Compare>
								<Compare>
									<Condition>
										<Value1>t_slaveFrame.Command</Value1>
										<Operator>NotEqual</Operator>
										<Value2>Reset</Value2>
									</Condition>
									<Condition>
										<Value1>t_slaveFrame.Command</Value1>
										<Operator>NotEqual</Operator>
										<Value2>Session</Value2>
									</Condition>
									<Condition>
										<Value1>t_slaveFrame.Command</Value1>
										<Operator>NotEqual</Operator>
										<Value2>Connection</Value2>
									</Condition>
									<Condition>
										<Value1>t_slaveFrame.Command</Value1>
										<Operator>NotEqual</Operator>
										<Value2>Parameter</Value2>
									</Condition>
									<Condition>
										<Value1>t_slaveFrame.Command</Value1>
										<Operator>NotEqual</Operator>
										<Value2>ProcessData</Value2>
									</Condition>
									<Condition>
										<Value1>t_slaveFrame.Command</Value1>
										<Operator>NotEqual</Operator>
										<Value2>FailSafeData</Value2>
									</Condition>
									<Statement>
										<Return>
											<Type>Error</Type>
											<Value>Unknown CMD received</Value>
											<Id>2</Id>
										</Return>
									</Statement>
								</Compare>
							</Compares>
						</TestStep>
						<TestStep Name="CheckReceivedSlaveFrame">
							<Action>
								<CallFunction>
									<Reference>CHECK_RESET_FAIL</Reference>
								</CallFunction>
							</Action>
							<ReturnValue>
								<OnSuccess>
									<Type>Success</Type>
									<Value Param0="c_CommFaultReason">Expected CommFaultReason ({0}) received</Value>
								</OnSuccess>
							</ReturnValue>
						</TestStep>
					</TestSteps>
				</TestCase>
				<TestCase Name="#3.26 CONN_Fail6" CaseId="26">
					<Comment>Hochlauf mehrere Zyklen, falsche Conn-Id (0xffff) im MasterFrame beim Übergang, letzter Frame mit dem Feld Conn-ID wird verschickt</Comment>
					<CaseVariables>
						<Variable>
							<Name>c_CommFaultReason</Name>
							<Type>Byte</Type>
						</Variable>
						<Variable>
							<Name>c_connId</Name>
							<Type>UInt16</Type>
						</Variable>
						<Variable>
							<Name>c_tmpByte</Name>
							<Type>Byte</Type>
						</Variable>
					</CaseVariables>
					<TestSteps>
						<TestStep Name="CheckSafeDataLength">
							<Compares>
								<Compare>
									<Condition>
										<Value1>SafeDataLength</Value1>
										<Operator>Greater</Operator>
										<Value2>2</Value2>
									</Condition>
									<Statement>
										<Return>
											<Type>SkippedCase</Type>
											<Value>SafeDataLength > 2; ==> skip testcase</Value>
										</Return>
									</Statement>
								</Compare>
							</Compares>
						</TestStep>
						<TestStep Name="SetVariables">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>c_CommFaultReason</Destination>
										<Source>INVALID_CONNID</Source>
									</SetVariable>
									<SetVariable>
										<Destination>c_tmpByte</Destination>
										<Source>0</Source>
									</SetVariable>
									<SetVariable>
										<Destination>c_connId</Destination>
										<Source>4</Source>
									</SetVariable>
									<SetVariable>
										<Destination>t_masterSessionId</Destination>
										<Source>1</Source>
									</SetVariable>
								</SetVariables>
							</Action>
						</TestStep>
						<TestStep Name="SetConnectionData">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>t_connectionId</Destination>
										<Source>3</Source>
									</SetVariable>
									<SetVariable>
										<Destination DestinationIndex="0">t_connData</Destination>
										<Source>t_connectionId</Source>
									</SetVariable>
									<SetVariable>
										<Destination DestinationIndex="2">t_connData</Destination>
										<Source>ConnData.SlaveAddress</Source>
									</SetVariable>
								</SetVariables>
							</Action>
							<Informations2>
								<Information>
									<Type>Output</Type>
									<Value Param0="t_connectionId" Param1="ConnData.SlaveAddress" Param2="t_connData">ConnectionId: {0} (0x{0:x4}), Slave Address: {1} (0x{1:x4}), Connection Data {2}</Value>
								</Information>
							</Informations2>
						</TestStep>
						<TestStep Name="SetParameterData">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>t_safePara</Destination>
										<Source>SafePara</Source>
									</SetVariable>
									<SetVariable>
										<Destination>t_watchdog</Destination>
										<Source>SafePara.Watchdog</Source>
									</SetVariable>
								</SetVariables>
							</Action>
							<Informations2>
								<Information>
									<Type>Output</Type>
									<Value Param0="t_watchdog" Param1="SafeParaSize" Param2="t_safePara">Watchdog: {0} ms, SafeParaSize: {1}, Safe Parameter {2}</Value>
								</Information>
							</Informations2>
						</TestStep>
						<TestStep Name="GoToSession">
							<Action>
								<CallFunction>
									<Reference>RUN_DUT_TO_SESSION</Reference>
								</CallFunction>
							</Action>
						</TestStep>
						<TestStep Name="CallSessionOk">
							<Action>
								<CallFunction>
									<Reference>SESSION_OK</Reference>
								</CallFunction>
							</Action>
						</TestStep>
						<TestStep Name="ReceiveEvent">
							<Event>
								<ReceiveFrame>t_slaveFrame</ReceiveFrame>
							</Event>
							<Informations2>
								<Information>
									<Type>Verbose</Type>
									<Value Param0="t_slaveFrame.FrameData">Slave Frame: {0}</Value>
								</Information>
							</Informations2>
						</TestStep>
						<TestStep Name="CheckWatchdog">
							<Event>
								<WatchdogExpired>
									<SetVariables>
										<SetVariable>
											<Destination>t_wdExpired</Destination>
											<Source>true</Source>
										</SetVariable>
									</SetVariables>
								</WatchdogExpired>
							</Event>
							<Compares>
								<Compare>
									<Condition>
										<Value1>t_wdExpired</Value1>
										<Operator>Equal</Operator>
										<Value2>true</Value2>
									</Condition>
									<Statement>
										<SetVariables>
											<SetVariable>
												<Destination>t_wdExpired</Destination>
												<Source>false</Source>
											</SetVariable>
										</SetVariables>
									</Statement>
									<Statement>
										<Return>
											<Type>Error</Type>
											<Value Param0="ElapsedWD">Watchdog expired! {0} ms </Value>
											<Id>5</Id>
										</Return>
									</Statement>
								</Compare>
							</Compares>
							<Informations2>
								<Information>
									<Type>Verbose</Type>
									<Value Param0="t_wdExpired">WD {0}</Value>
								</Information>
							</Informations2>
						</TestStep>
						<TestStep Name="CheckReceivedCrc">
							<Informations1>
								<Information>
									<Type>Verbose</Type>
									<Value Param0="t_slaveFrame.FrameData" Param1="LastCrc" Param2="t_slaveSeqNo" Param3="t_oldSlaveCrc" Param4="true">IsCrcCorrect(Frame {0}, LastCrc 0x{1:X4}, SeqNo {2}, OldCrc 0x{3:X4}, New {4})</Value>
								</Information>
							</Informations1>
							<Action>
								<IsCrcCorrect ReturnValue="crcCorrect">
									<Frame>t_slaveFrame</Frame>
									<LastCrc>LastCrc</LastCrc>
									<SequenceNo>t_slaveSeqNo</SequenceNo>
									<OldCrc>t_oldSlaveCrc</OldCrc>
									<New>true</New>
								</IsCrcCorrect>
							</Action>
							<ReturnValue>
								<OnFailure>
									<Type>Error</Type>
									<Value Param0="t_slaveFrame.Crc0">Invalid Crc0 reveived ({0:x})</Value>
									<Id>4</Id>
								</OnFailure>
							</ReturnValue>
						</TestStep>
						<TestStep Name="CheckSessionConditions">
							<Compares>
								<Compare>
									<Condition>
										<Value1>t_slaveFrame.Command</Value1>
										<Operator>Equal</Operator>
										<Value2>Connection</Value2>
									</Condition>
									<Condition>
										<Value1>BytesToBeSent</Value1>
										<Operator>Equal</Operator>
										<Value2>0</Value2>
									</Condition>
									<Condition>
										<Value1>crcCorrect</Value1>
										<Operator>Equal</Operator>
										<Value2>true</Value2>
									</Condition>
									<Statement>
										<Return>
											<Type>Error</Type>
											<Value>BytesToBeSent == 0</Value>
											<Id>1</Id>
										</Return>
									</Statement>
								</Compare>
								<Compare>
									<Condition>
										<Value1>t_slaveFrame.Command</Value1>
										<Operator>Equal</Operator>
										<Value2>Connection</Value2>
									</Condition>
									<Condition>
										<Value1>crcCorrect</Value1>
										<Operator>Equal</Operator>
										<Value2>false</Value2>
									</Condition>
									<Statement>
										<Return>
											<Type>Error</Type>
											<Value>Invalid Crc received</Value>
											<Id>4</Id>
										</Return>
									</Statement>
								</Compare>
								<Compare>
									<Condition>
										<Value1>t_slaveFrame.Command</Value1>
										<Operator>Equal</Operator>
										<Value2>Connection</Value2>
									</Condition>
									<Condition>
										<Value1>BytesToBeSent</Value1>
										<Operator>LowerOrEqual</Operator>
										<Value2>SafeDataLength</Value2>
									</Condition>
									<Condition>
										<Value1>crcCorrect</Value1>
										<Operator>Equal</Operator>
										<Value2>true</Value2>
									</Condition>
									<Statement>
										<CallFunction>CONN_STAY1_INVALID_CONNID</CallFunction>
									</Statement>
									<Statement>
										<GotoStep>CheckReceivedSlaveFrame</GotoStep>
									</Statement>
								</Compare>
								<Compare>
									<Condition>
										<Value1>t_slaveFrame.Command</Value1>
										<Operator>Equal</Operator>
										<Value2>Connection</Value2>
									</Condition>
									<Condition>
										<Value1>BytesToBeSent</Value1>
										<Operator>NotEqual</Operator>
										<Value2>0</Value2>
									</Condition>
									<Condition>
										<Value1>crcCorrect</Value1>
										<Operator>Equal</Operator>
										<Value2>true</Value2>
									</Condition>
									<Statement>
										<CallFunction>CONN_STAY1</CallFunction>
									</Statement>
									<Statement>
										<GotoStep>ReceiveEvent</GotoStep>
									</Statement>
								</Compare>
								<Compare>
									<Condition>
										<Value1>t_slaveFrame.Command</Value1>
										<Operator>Equal</Operator>
										<Value2>Reset</Value2>
									</Condition>
									<Statement>
										<Return>
											<Type>Error</Type>
											<Value>Invalid CMD(Reset) received</Value>
											<Id>1</Id>
										</Return>
									</Statement>
								</Compare>
								<Compare>
									<Condition>
										<Value1>t_slaveFrame.Command</Value1>
										<Operator>Equal</Operator>
										<Value2>Session</Value2>
									</Condition>
									<Statement>
										<Return>
											<Type>Error</Type>
											<Value>Invalid CMD (Session) received</Value>
											<Id>1</Id>
										</Return>
									</Statement>
								</Compare>
								<Compare>
									<Condition>
										<Value1>t_slaveFrame.Command</Value1>
										<Operator>Equal</Operator>
										<Value2>Parameter</Value2>
									</Condition>
									<Statement>
										<Return>
											<Type>Error</Type>
											<Value>Invalid CMD (Parameter) received</Value>
											<Id>1</Id>
										</Return>
									</Statement>
								</Compare>
								<Compare>
									<Condition>
										<Value1>t_slaveFrame.Command</Value1>
										<Operator>Equal</Operator>
										<Value2>ProcessData</Value2>
									</Condition>
									<Statement>
										<Return>
											<Type>Error</Type>
											<Value>Invalid CMD (ProcessData) received</Value>
											<Id>1</Id>
										</Return>
									</Statement>
								</Compare>
								<Compare>
									<Condition>
										<Value1>t_slaveFrame.Command</Value1>
										<Operator>Equal</Operator>
										<Value2>FailSafeData</Value2>
									</Condition>
									<Statement>
										<Return>
											<Type>Error</Type>
											<Value>Invalid CMD (FailSafeData) received</Value>
											<Id>1</Id>
										</Return>
									</Statement>
								</Compare>
								<Compare>
									<Condition>
										<Value1>t_slaveFrame.Command</Value1>
										<Operator>NotEqual</Operator>
										<Value2>Reset</Value2>
									</Condition>
									<Condition>
										<Value1>t_slaveFrame.Command</Value1>
										<Operator>NotEqual</Operator>
										<Value2>Session</Value2>
									</Condition>
									<Condition>
										<Value1>t_slaveFrame.Command</Value1>
										<Operator>NotEqual</Operator>
										<Value2>Connection</Value2>
									</Condition>
									<Condition>
										<Value1>t_slaveFrame.Command</Value1>
										<Operator>NotEqual</Operator>
										<Value2>Parameter</Value2>
									</Condition>
									<Condition>
										<Value1>t_slaveFrame.Command</Value1>
										<Operator>NotEqual</Operator>
										<Value2>ProcessData</Value2>
									</Condition>
									<Condition>
										<Value1>t_slaveFrame.Command</Value1>
										<Operator>NotEqual</Operator>
										<Value2>FailSafeData</Value2>
									</Condition>
									<Statement>
										<Return>
											<Type>Error</Type>
											<Value>Unknown CMD received</Value>
											<Id>2</Id>
										</Return>
									</Statement>
								</Compare>
							</Compares>
						</TestStep>
						<TestStep Name="CheckReceivedSlaveFrame">
							<Action>
								<CallFunction>
									<Reference>CHECK_RESET_FAIL</Reference>
								</CallFunction>
							</Action>
							<ReturnValue>
								<OnSuccess>
									<Type>Success</Type>
									<Value Param0="c_CommFaultReason">Expected CommFaultReason ({0}) received</Value>
								</OnSuccess>
							</ReturnValue>
						</TestStep>
					</TestSteps>
				</TestCase>
				<TestCase Name="#3.27 CONN_Fail7" CaseId="27">
					<Comment>Cmd = Connection obwohl bereits Parameter erwartet</Comment>
					<CaseVariables>
						<Variable>
							<Name>c_CommFaultReason</Name>
							<Type>Byte</Type>
						</Variable>
						<Variable>
							<Name>c_tmpByte</Name>
							<Type>Byte</Type>
						</Variable>
					</CaseVariables>
					<TestSteps>
						<TestStep Name="CheckSafeDataLength">
							<Compares>
								<Compare>
									<Condition>
										<Value1>SafeDataLength</Value1>
										<Operator>NotEqual</Operator>
										<Value2>1</Value2>
									</Condition>
									<Statement>
										<Return>
											<Type>SkippedCase</Type>
											<Value>SafeDataLength != 1; ==> skip testcase</Value>
										</Return>
									</Statement>
								</Compare>
							</Compares>
						</TestStep>
						<TestStep Name="SetVariables">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>c_CommFaultReason</Destination>
										<Source>INVALID_CMD</Source>
									</SetVariable>
									<SetVariable>
										<Destination>c_tmpByte</Destination>
										<Source>0</Source>
									</SetVariable>
									<SetVariable>
										<Destination>t_masterSessionId</Destination>
										<Source>1</Source>
									</SetVariable>
								</SetVariables>
							</Action>
						</TestStep>
						<TestStep Name="SetConnectionData">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>t_connectionId</Destination>
										<Source>3</Source>
									</SetVariable>
									<SetVariable>
										<Destination DestinationIndex="0">t_connData</Destination>
										<Source>t_connectionId</Source>
									</SetVariable>
									<SetVariable>
										<Destination DestinationIndex="2">t_connData</Destination>
										<Source>ConnData.SlaveAddress</Source>
									</SetVariable>
								</SetVariables>
							</Action>
							<Informations2>
								<Information>
									<Type>Output</Type>
									<Value Param0="t_connectionId" Param1="ConnData.SlaveAddress" Param2="t_connData">ConnectionId: {0} (0x{0:x4}), Slave Address: {1} (0x{1:x4}), Connection Data {2}</Value>
								</Information>
							</Informations2>
						</TestStep>
						<TestStep Name="SetParameterData">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>t_safePara</Destination>
										<Source>SafePara</Source>
									</SetVariable>
									<SetVariable>
										<Destination>t_watchdog</Destination>
										<Source>SafePara.Watchdog</Source>
									</SetVariable>
								</SetVariables>
							</Action>
							<Informations2>
								<Information>
									<Type>Output</Type>
									<Value Param0="t_watchdog" Param1="SafeParaSize" Param2="t_safePara">Watchdog: {0} ms, SafeParaSize: {1}, Safe Parameter {2}</Value>
								</Information>
							</Informations2>
						</TestStep>
						<TestStep Name="GoToSession">
							<Action>
								<CallFunction>
									<Reference>RUN_DUT_TO_SESSION</Reference>
								</CallFunction>
							</Action>
						</TestStep>
						<TestStep Name="CallSessionOk">
							<Action>
								<CallFunction>
									<Reference>SESSION_OK</Reference>
								</CallFunction>
							</Action>
						</TestStep>
						<TestStep Name="ReceiveEvent">
							<Event>
								<ReceiveFrame>t_slaveFrame</ReceiveFrame>
							</Event>
							<Informations2>
								<Information>
									<Type>Verbose</Type>
									<Value Param0="t_slaveFrame.FrameData">Slave Frame: {0}</Value>
								</Information>
							</Informations2>
						</TestStep>
						<TestStep Name="CheckWatchdog">
							<Event>
								<WatchdogExpired>
									<SetVariables>
										<SetVariable>
											<Destination>t_wdExpired</Destination>
											<Source>true</Source>
										</SetVariable>
									</SetVariables>
								</WatchdogExpired>
							</Event>
							<Compares>
								<Compare>
									<Condition>
										<Value1>t_wdExpired</Value1>
										<Operator>Equal</Operator>
										<Value2>true</Value2>
									</Condition>
									<Statement>
										<SetVariables>
											<SetVariable>
												<Destination>t_wdExpired</Destination>
												<Source>false</Source>
											</SetVariable>
										</SetVariables>
									</Statement>
									<Statement>
										<Return>
											<Type>Error</Type>
											<Value Param0="ElapsedWD">Watchdog expired! {0} ms </Value>
											<Id>5</Id>
										</Return>
									</Statement>
								</Compare>
							</Compares>
							<Informations2>
								<Information>
									<Type>Verbose</Type>
									<Value Param0="t_wdExpired">WD {0}</Value>
								</Information>
							</Informations2>
						</TestStep>
						<TestStep Name="CheckReceivedCrc">
							<Informations1>
								<Information>
									<Type>Verbose</Type>
									<Value Param0="t_slaveFrame.FrameData" Param1="LastCrc" Param2="t_slaveSeqNo" Param3="t_oldSlaveCrc" Param4="true">IsCrcCorrect(Frame {0}, LastCrc 0x{1:X4}, SeqNo {2}, OldCrc 0x{3:X4}, New {4})</Value>
								</Information>
							</Informations1>
							<Action>
								<IsCrcCorrect ReturnValue="crcCorrect">
									<Frame>t_slaveFrame</Frame>
									<LastCrc>LastCrc</LastCrc>
									<SequenceNo>t_slaveSeqNo</SequenceNo>
									<OldCrc>t_oldSlaveCrc</OldCrc>
									<New>true</New>
								</IsCrcCorrect>
							</Action>
							<ReturnValue>
								<OnFailure>
									<Type>Error</Type>
									<Value Param0="t_slaveFrame.Crc0">Invalid Crc0 reveived ({0:x})</Value>
									<Id>4</Id>
								</OnFailure>
							</ReturnValue>
						</TestStep>
						<TestStep Name="CheckSessionConditions">
							<Compares>
								<Compare>
									<Condition>
										<Value1>t_slaveFrame.Command</Value1>
										<Operator>Equal</Operator>
										<Value2>Connection</Value2>
									</Condition>
									<Condition>
										<Value1>BytesToBeSent</Value1>
										<Operator>Equal</Operator>
										<Value2>0</Value2>
									</Condition>
									<Condition>
										<Value1>crcCorrect</Value1>
										<Operator>Equal</Operator>
										<Value2>true</Value2>
									</Condition>
									<Statement>
										<CallFunction>SESSION_OK</CallFunction>
									</Statement>
									<Statement>
										<GotoStep>CheckReceivedSlaveFrame</GotoStep>
									</Statement>
								</Compare>
								<Compare>
									<Condition>
										<Value1>t_slaveFrame.Command</Value1>
										<Operator>Equal</Operator>
										<Value2>Connection</Value2>
									</Condition>
									<Condition>
										<Value1>crcCorrect</Value1>
										<Operator>Equal</Operator>
										<Value2>false</Value2>
									</Condition>
									<Statement>
										<Return>
											<Type>Error</Type>
											<Value>Invalid Crc received</Value>
											<Id>4</Id>
										</Return>
									</Statement>
								</Compare>
								<Compare>
									<Condition>
										<Value1>t_slaveFrame.Command</Value1>
										<Operator>Equal</Operator>
										<Value2>Connection</Value2>
									</Condition>
									<Condition>
										<Value1>BytesToBeSent</Value1>
										<Operator>NotEqual</Operator>
										<Value2>0</Value2>
									</Condition>
									<Condition>
										<Value1>crcCorrect</Value1>
										<Operator>Equal</Operator>
										<Value2>true</Value2>
									</Condition>
									<Statement>
										<CallFunction>CONN_STAY1</CallFunction>
									</Statement>
									<Statement>
										<GotoStep>ReceiveEvent</GotoStep>
									</Statement>
								</Compare>
								<Compare>
									<Condition>
										<Value1>t_slaveFrame.Command</Value1>
										<Operator>Equal</Operator>
										<Value2>Reset</Value2>
									</Condition>
									<Statement>
										<Return>
											<Type>Error</Type>
											<Value>Invalid CMD(Reset) received</Value>
											<Id>1</Id>
										</Return>
									</Statement>
								</Compare>
								<Compare>
									<Condition>
										<Value1>t_slaveFrame.Command</Value1>
										<Operator>Equal</Operator>
										<Value2>Session</Value2>
									</Condition>
									<Statement>
										<Return>
											<Type>Error</Type>
											<Value>Invalid CMD (Session) received</Value>
											<Id>1</Id>
										</Return>
									</Statement>
								</Compare>
								<Compare>
									<Condition>
										<Value1>t_slaveFrame.Command</Value1>
										<Operator>Equal</Operator>
										<Value2>Parameter</Value2>
									</Condition>
									<Statement>
										<Return>
											<Type>Error</Type>
											<Value>Invalid CMD (Parameter) received</Value>
											<Id>1</Id>
										</Return>
									</Statement>
								</Compare>
								<Compare>
									<Condition>
										<Value1>t_slaveFrame.Command</Value1>
										<Operator>Equal</Operator>
										<Value2>ProcessData</Value2>
									</Condition>
									<Statement>
										<Return>
											<Type>Error</Type>
											<Value>Invalid CMD (ProcessData) received</Value>
											<Id>1</Id>
										</Return>
									</Statement>
								</Compare>
								<Compare>
									<Condition>
										<Value1>t_slaveFrame.Command</Value1>
										<Operator>Equal</Operator>
										<Value2>FailSafeData</Value2>
									</Condition>
									<Statement>
										<Return>
											<Type>Error</Type>
											<Value>Invalid CMD (FailSafeData) received</Value>
											<Id>1</Id>
										</Return>
									</Statement>
								</Compare>
								<Compare>
									<Condition>
										<Value1>t_slaveFrame.Command</Value1>
										<Operator>NotEqual</Operator>
										<Value2>Reset</Value2>
									</Condition>
									<Condition>
										<Value1>t_slaveFrame.Command</Value1>
										<Operator>NotEqual</Operator>
										<Value2>Session</Value2>
									</Condition>
									<Condition>
										<Value1>t_slaveFrame.Command</Value1>
										<Operator>NotEqual</Operator>
										<Value2>Connection</Value2>
									</Condition>
									<Condition>
										<Value1>t_slaveFrame.Command</Value1>
										<Operator>NotEqual</Operator>
										<Value2>Parameter</Value2>
									</Condition>
									<Condition>
										<Value1>t_slaveFrame.Command</Value1>
										<Operator>NotEqual</Operator>
										<Value2>ProcessData</Value2>
									</Condition>
									<Condition>
										<Value1>t_slaveFrame.Command</Value1>
										<Operator>NotEqual</Operator>
										<Value2>FailSafeData</Value2>
									</Condition>
									<Statement>
										<Return>
											<Type>Error</Type>
											<Value>Unknown CMD received</Value>
											<Id>2</Id>
										</Return>
									</Statement>
								</Compare>
							</Compares>
						</TestStep>
						<TestStep Name="CheckReceivedSlaveFrame">
							<Action>
								<CallFunction>
									<Reference>CHECK_RESET_FAIL</Reference>
								</CallFunction>
							</Action>
							<ReturnValue>
								<OnSuccess>
									<Type>Success</Type>
									<Value Param0="c_CommFaultReason">Expected CommFaultReason ({0}) received</Value>
								</OnSuccess>
							</ReturnValue>
						</TestStep>
					</TestSteps>
				</TestCase>
				<TestCase Name="#3.28 CONN_Fail8" CaseId="28">
					<Comment>Reset-Kommando vom Master mit falscher CRC(+1)</Comment>
					<CaseVariables>
						<Variable>
							<Name>c_CommFaultReason</Name>
							<Type>Byte</Type>
						</Variable>
						<Variable>
							<Name>c_tmpByte</Name>
							<Type>Byte</Type>
						</Variable>
						<Variable>
							<Name>c_tmpCommFaultReason</Name>
							<Type>Byte</Type>
						</Variable>
						<Variable>
							<Name>c_safeData[SafeDataLength]</Name>
							<Type>ArrayOfBytes</Type>
						</Variable>
					</CaseVariables>
					<TestSteps>
						<TestStep Name="SetVariables">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>c_CommFaultReason</Destination>
										<Source>INVALID_CRC</Source>
									</SetVariable>
									<SetVariable>
										<Destination>c_tmpByte</Destination>
										<Source>0</Source>
									</SetVariable>
									<SetVariable>
										<Destination>t_masterSessionId</Destination>
										<Source>1</Source>
									</SetVariable>
								</SetVariables>
							</Action>
						</TestStep>
						<TestStep Name="SetConnectionData">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>t_connectionId</Destination>
										<Source>3</Source>
									</SetVariable>
									<SetVariable>
										<Destination DestinationIndex="0">t_connData</Destination>
										<Source>t_connectionId</Source>
									</SetVariable>
									<SetVariable>
										<Destination DestinationIndex="2">t_connData</Destination>
										<Source>ConnData.SlaveAddress</Source>
									</SetVariable>
								</SetVariables>
							</Action>
							<Informations2>
								<Information>
									<Type>Output</Type>
									<Value Param0="t_connectionId" Param1="ConnData.SlaveAddress" Param2="t_connData">ConnectionId: {0} (0x{0:x4}), Slave Address: {1} (0x{1:x4}), Connection Data {2}</Value>
								</Information>
							</Informations2>
						</TestStep>
						<TestStep Name="SetParameterData">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>t_safePara</Destination>
										<Source>SafePara</Source>
									</SetVariable>
									<SetVariable>
										<Destination>t_watchdog</Destination>
										<Source>SafePara.Watchdog</Source>
									</SetVariable>
								</SetVariables>
							</Action>
							<Informations2>
								<Information>
									<Type>Output</Type>
									<Value Param0="t_watchdog" Param1="SafeParaSize" Param2="t_safePara">Watchdog: {0} ms, SafeParaSize: {1}, Safe Parameter {2}</Value>
								</Information>
							</Informations2>
						</TestStep>
						<TestStep Name="GotoConnection">
							<Action>
								<CallFunction>
									<Reference>RUN_DUT_TO_CONNECTION</Reference>
								</CallFunction>
							</Action>
						</TestStep>
						<TestStep Name="SetMasterFrameData">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>t_masterSeqNo</Destination>
										<Source>1</Source>
									</SetVariable>
									<SetVariable>
										<Destination>LastCrc</Destination>
										<Source>0</Source>
									</SetVariable>
									<SetVariable>
										<Destination>OldMasterCrc</Destination>
										<Source>0</Source>
									</SetVariable>
									<SetVariable>
										<Destination>c_tmpCommFaultReason</Destination>
										<Source>INVALID_CMD</Source>
									</SetVariable>
									<SetVariable>
										<Destination DestinationIndex="0">c_safeData</Destination>
										<Source>c_tmpCommFaultReason</Source>
									</SetVariable>
								</SetVariables>
							</Action>
						</TestStep>
						<TestStep Name="SetLastCrc">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>LastCrc</Destination>
										<Source>t_slaveFrame.Crc0</Source>
									</SetVariable>
								</SetVariables>
							</Action>
						</TestStep>
						<TestStep Name="SetFrame">
							<Informations1>
								<Information>
									<Type>Verbose</Type>
									<Value Param0="c_safeData" Param1="LastCrc" Param2="t_masterSeqNo" Param3="OldMasterCrc" Param4="0">SetFrame(Command Reset, SafeData {0}, LastCrc 0x{1:x4}, ConnectionId 0x{4:x4},  SequenceNo 0x{2:x4}, OldCrc 0x{3:x4}, New false</Value>
								</Information>
							</Informations1>
							<Action>
								<SetFrame Name="t_masterFrame">
									<Command>
										<CommandValue>Reset</CommandValue>
									</Command>
									<SafeData>
										<SafeDataVariable>c_safeData</SafeDataVariable>
									</SafeData>
									<LastCRC>LastCrc</LastCRC>
									<ConnectionID>
										<UshortValue>0</UshortValue>
									</ConnectionID>
									<SequenceNo>t_masterSeqNo</SequenceNo>
									<OldCRC>OldMasterCrc</OldCRC>
									<New>false</New>
								</SetFrame>
							</Action>
						</TestStep>
						<TestStep Name="SetInvalidCrc0">
							<Informations1>
								<Information>
									<Type>Output</Type>
									<Value Param0="t_masterFrame.Crc0">Valid Crc0 = 0x{0:x4}</Value>
								</Information>
							</Informations1>
							<Action>
								<CallFunction>
									<Reference>INCREMENT_CRC_0</Reference>
								</CallFunction>
							</Action>
							<Informations2>
								<Information>
									<Type>Output</Type>
									<Value Param0="t_masterFrame.Crc0">Falsified Crc0 = 0x{0:x4}</Value>
								</Information>
							</Informations2>
						</TestStep>
						<TestStep Name="SendFrame">
							<Action>
								<SendFrame Name="t_masterFrame"/>
							</Action>
							<Informations2>
								<Information>
									<Type>Verbose</Type>
									<Value Param0="t_masterFrame.FrameData">Master Frame: {0}</Value>
								</Information>
							</Informations2>
							<ReturnValue>
								<OnFailure>
									<Type>Error</Type>
									<Value>Failed to send FSoE frame!</Value>
									<Id>256</Id>
								</OnFailure>
							</ReturnValue>
						</TestStep>
						<TestStep Name="CheckReceivedSlaveFrame">
							<Action>
								<CallFunction>
									<Reference>CHECK_RESET_FAIL</Reference>
								</CallFunction>
							</Action>
							<ReturnValue>
								<OnSuccess>
									<Type>Success</Type>
									<Value Param0="c_CommFaultReason">Expected CommFaultReason ({0}) received</Value>
								</OnSuccess>
							</ReturnValue>
						</TestStep>
					</TestSteps>
				</TestCase>
				<TestCase Name="#3.29 CONN_Fail9" CaseId="29">
					<Comment>Rücksetzen der Connection vom Master, aber falsche CRC(+1)</Comment>
					<CaseVariables>
						<Variable>
							<Name>c_CommFaultReason</Name>
							<Type>Byte</Type>
						</Variable>
						<Variable>
							<Name>c_tmpByte</Name>
							<Type>Byte</Type>
						</Variable>
						<Variable>
							<Name>c_tmpCommFaultReason</Name>
							<Type>Byte</Type>
						</Variable>
						<Variable>
							<Name>c_safeData[SafeDataLength]</Name>
							<Type>ArrayOfBytes</Type>
						</Variable>
					</CaseVariables>
					<TestSteps>
						<TestStep Name="SetVariables">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>c_CommFaultReason</Destination>
										<Source>INVALID_CRC</Source>
									</SetVariable>
									<SetVariable>
										<Destination>c_tmpByte</Destination>
										<Source>0</Source>
									</SetVariable>
									<SetVariable>
										<Destination>t_masterSessionId</Destination>
										<Source>1</Source>
									</SetVariable>
								</SetVariables>
							</Action>
						</TestStep>
						<TestStep Name="SetConnectionData">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>t_connectionId</Destination>
										<Source>3</Source>
									</SetVariable>
									<SetVariable>
										<Destination DestinationIndex="0">t_connData</Destination>
										<Source>t_connectionId</Source>
									</SetVariable>
									<SetVariable>
										<Destination DestinationIndex="2">t_connData</Destination>
										<Source>ConnData.SlaveAddress</Source>
									</SetVariable>
								</SetVariables>
							</Action>
							<Informations2>
								<Information>
									<Type>Output</Type>
									<Value Param0="t_connectionId" Param1="ConnData.SlaveAddress" Param2="t_connData">ConnectionId: {0} (0x{0:x4}), Slave Address: {1} (0x{1:x4}), Connection Data {2}</Value>
								</Information>
							</Informations2>
						</TestStep>
						<TestStep Name="SetParameterData">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>t_safePara</Destination>
										<Source>SafePara</Source>
									</SetVariable>
									<SetVariable>
										<Destination>t_watchdog</Destination>
										<Source>SafePara.Watchdog</Source>
									</SetVariable>
								</SetVariables>
							</Action>
							<Informations2>
								<Information>
									<Type>Output</Type>
									<Value Param0="t_watchdog" Param1="SafeParaSize" Param2="t_safePara">Watchdog: {0} ms, SafeParaSize: {1}, Safe Parameter {2}</Value>
								</Information>
							</Informations2>
						</TestStep>
						<TestStep Name="GotoConnection">
							<Action>
								<CallFunction>
									<Reference>RUN_DUT_TO_CONNECTION</Reference>
								</CallFunction>
							</Action>
						</TestStep>
						<TestStep Name="SetMasterFrameData">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>t_masterSeqNo</Destination>
										<Source>1</Source>
									</SetVariable>
									<SetVariable>
										<Destination>LastCrc</Destination>
										<Source>0</Source>
									</SetVariable>
									<SetVariable>
										<Destination>OldMasterCrc</Destination>
										<Source>0</Source>
									</SetVariable>
									<SetVariable>
										<Destination DestinationIndex="0">c_safeData</Destination>
										<Source>t_masterSessionId</Source>
									</SetVariable>
								</SetVariables>
							</Action>
						</TestStep>
						<TestStep Name="SetFrame">
							<Informations1>
								<Information>
									<Type>Verbose</Type>
									<Value Param0="c_safeData" Param1="LastCrc" Param2="t_masterSeqNo" Param3="OldMasterCrc" Param4="0">SetFrame(Command Session, SafeData {0}, LastCrc 0x{1:x4}, ConnectionId 0x{4:x4},  SequenceNo 0x{2:x4}, OldCrc 0x{3:x4}, New true</Value>
								</Information>
							</Informations1>
							<Action>
								<SetFrame Name="t_masterFrame">
									<Command>
										<CommandValue>Session</CommandValue>
									</Command>
									<SafeData>
										<SafeDataVariable>c_safeData</SafeDataVariable>
									</SafeData>
									<LastCRC>LastCrc</LastCRC>
									<ConnectionID>
										<UshortValue>0</UshortValue>
									</ConnectionID>
									<SequenceNo>t_masterSeqNo</SequenceNo>
									<OldCRC>OldMasterCrc</OldCRC>
									<New>true</New>
								</SetFrame>
							</Action>
						</TestStep>
						<TestStep Name="SetInvalidCrc0">
							<Informations1>
								<Information>
									<Type>Output</Type>
									<Value Param0="t_masterFrame.Crc0">Valid Crc0 = 0x{0:x4}</Value>
								</Information>
							</Informations1>
							<Action>
								<CallFunction>
									<Reference>INCREMENT_CRC_0</Reference>
								</CallFunction>
							</Action>
							<Informations2>
								<Information>
									<Type>Output</Type>
									<Value Param0="t_masterFrame.Crc0">Falsified Crc0 = 0x{0:x4}</Value>
								</Information>
							</Informations2>
						</TestStep>
						<TestStep Name="SendFrame">
							<Action>
								<SendFrame Name="t_masterFrame"/>
							</Action>
							<Informations2>
								<Information>
									<Type>Verbose</Type>
									<Value Param0="t_masterFrame.FrameData">Master Frame: {0}</Value>
								</Information>
							</Informations2>
							<ReturnValue>
								<OnFailure>
									<Type>Error</Type>
									<Value>Failed to send FSoE frame!</Value>
									<Id>256</Id>
								</OnFailure>
							</ReturnValue>
						</TestStep>
						<TestStep Name="CheckReceivedSlaveFrame">
							<Action>
								<CallFunction>
									<Reference>CHECK_RESET_FAIL</Reference>
								</CallFunction>
							</Action>
							<ReturnValue>
								<OnSuccess>
									<Type>Success</Type>
									<Value Param0="c_CommFaultReason">Expected CommFaultReason ({0}) received</Value>
								</OnSuccess>
							</ReturnValue>
						</TestStep>
					</TestSteps>
				</TestCase>
				<TestCase Name="#3.30 CONN_Fail10" CaseId="30">
					<Comment>Falsches Kommando(ProcessData), mit SafePara</Comment>
					<CaseVariables>
						<Variable>
							<Name>c_CommFaultReason</Name>
							<Type>Byte</Type>
						</Variable>
						<Variable>
							<Name>c_tmpByte</Name>
							<Type>Byte</Type>
						</Variable>
						<Variable>
							<Name>c_cmd</Name>
							<Type>Byte</Type>
						</Variable>
						<Variable>
							<Name>c_bytesToBeSent</Name>
							<Type>Int32</Type>
						</Variable>
						<Variable>
							<Name>c_safeData[SafeDataLength]</Name>
							<Type>ArrayOfBytes</Type>
						</Variable>
					</CaseVariables>
					<TestSteps>
						<TestStep Name="SetVariables">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>c_CommFaultReason</Destination>
										<Source>INVALID_CMD</Source>
									</SetVariable>
									<SetVariable>
										<Destination>c_tmpByte</Destination>
										<Source>0</Source>
									</SetVariable>
									<SetVariable>
										<Destination>t_masterSessionId</Destination>
										<Source>1</Source>
									</SetVariable>
								</SetVariables>
							</Action>
						</TestStep>
						<TestStep Name="SetConnectionData">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>t_connectionId</Destination>
										<Source>3</Source>
									</SetVariable>
									<SetVariable>
										<Destination DestinationIndex="0">t_connData</Destination>
										<Source>t_connectionId</Source>
									</SetVariable>
									<SetVariable>
										<Destination DestinationIndex="2">t_connData</Destination>
										<Source>ConnData.SlaveAddress</Source>
									</SetVariable>
								</SetVariables>
							</Action>
							<Informations2>
								<Information>
									<Type>Output</Type>
									<Value Param0="t_connectionId" Param1="ConnData.SlaveAddress" Param2="t_connData">ConnectionId: {0} (0x{0:x4}), Slave Address: {1} (0x{1:x4}), Connection Data {2}</Value>
								</Information>
							</Informations2>
						</TestStep>
						<TestStep Name="SetParameterData">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>t_safePara</Destination>
										<Source>SafePara</Source>
									</SetVariable>
									<SetVariable>
										<Destination>t_watchdog</Destination>
										<Source>SafePara.Watchdog</Source>
									</SetVariable>
								</SetVariables>
							</Action>
							<Informations2>
								<Information>
									<Type>Output</Type>
									<Value Param0="t_watchdog" Param1="SafeParaSize" Param2="t_safePara">Watchdog: {0} ms, SafeParaSize: {1}, Safe Parameter {2}</Value>
								</Information>
							</Informations2>
						</TestStep>
						<TestStep Name="GotoConnection">
							<Action>
								<CallFunction>
									<Reference>RUN_DUT_TO_CONNECTION</Reference>
								</CallFunction>
							</Action>
						</TestStep>
						<TestStep Name="SetMasterFrameData">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>c_cmd</Destination>
										<Source>ProcessData</Source>
									</SetVariable>
									<SetVariable>
										<Destination>LastCrc</Destination>
										<Source>t_slaveFrame.Crc0</Source>
									</SetVariable>
									<SetVariable>
										<Destination>c_safeData</Destination>
										<Source>t_safePara</Source>
									</SetVariable>
									<SetVariable>
										<Destination>c_bytesToBeSent</Destination>
										<Source>SafeDataLength</Source>
									</SetVariable>
								</SetVariables>
							</Action>
							<Informations2>
								<Information>
									<Type>Output</Type>
									<Value Param0="c_cmd">Set invalid Command 0x{0:x2} ProcessData</Value>
								</Information>
							</Informations2>
						</TestStep>
						<TestStep Name="CallInvalidConnectionOk">
							<Action>
								<CallFunction>
									<Reference>SEND_MASTER_FRAME</Reference>
								</CallFunction>
							</Action>
						</TestStep>
						<TestStep Name="CheckReceivedSlaveFrame">
							<Action>
								<CallFunction>
									<Reference>CHECK_RESET_FAIL</Reference>
								</CallFunction>
							</Action>
							<ReturnValue>
								<OnSuccess>
									<Type>Success</Type>
									<Value Param0="c_CommFaultReason">Expected CommFaultReason ({0}) received</Value>
								</OnSuccess>
							</ReturnValue>
						</TestStep>
					</TestSteps>
				</TestCase>
				<TestCase Name="#3.31 CONN_Fail10" CaseId="31">
					<Comment>Falsches Kommando(ProcessData), mit Outputs</Comment>
					<CaseVariables>
						<Variable>
							<Name>c_CommFaultReason</Name>
							<Type>Byte</Type>
						</Variable>
						<Variable>
							<Name>c_tmpByte</Name>
							<Type>Byte</Type>
						</Variable>
						<Variable>
							<Name>c_cmd</Name>
							<Type>Byte</Type>
						</Variable>
						<Variable>
							<Name>c_bytesToBeSent</Name>
							<Type>Int32</Type>
						</Variable>
						<Variable>
							<Name>c_safeData[SafeDataLength]</Name>
							<Type>ArrayOfBytes</Type>
						</Variable>
					</CaseVariables>
					<TestSteps>
						<TestStep Name="SetVariables">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>c_CommFaultReason</Destination>
										<Source>INVALID_CMD</Source>
									</SetVariable>
									<SetVariable>
										<Destination>c_tmpByte</Destination>
										<Source>0</Source>
									</SetVariable>
									<SetVariable>
										<Destination>t_masterSessionId</Destination>
										<Source>1</Source>
									</SetVariable>
								</SetVariables>
							</Action>
						</TestStep>
						<TestStep Name="SetConnectionData">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>t_connectionId</Destination>
										<Source>3</Source>
									</SetVariable>
									<SetVariable>
										<Destination DestinationIndex="0">t_connData</Destination>
										<Source>t_connectionId</Source>
									</SetVariable>
									<SetVariable>
										<Destination DestinationIndex="2">t_connData</Destination>
										<Source>ConnData.SlaveAddress</Source>
									</SetVariable>
								</SetVariables>
							</Action>
							<Informations2>
								<Information>
									<Type>Output</Type>
									<Value Param0="t_connectionId" Param1="ConnData.SlaveAddress" Param2="t_connData">ConnectionId: {0} (0x{0:x4}), Slave Address: {1} (0x{1:x4}), Connection Data {2}</Value>
								</Information>
							</Informations2>
						</TestStep>
						<TestStep Name="SetParameterData">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>t_safePara</Destination>
										<Source>SafePara</Source>
									</SetVariable>
									<SetVariable>
										<Destination>t_watchdog</Destination>
										<Source>SafePara.Watchdog</Source>
									</SetVariable>
								</SetVariables>
							</Action>
							<Informations2>
								<Information>
									<Type>Output</Type>
									<Value Param0="t_watchdog" Param1="SafeParaSize" Param2="t_safePara">Watchdog: {0} ms, SafeParaSize: {1}, Safe Parameter {2}</Value>
								</Information>
							</Informations2>
						</TestStep>
						<TestStep Name="GotoConnection">
							<Action>
								<CallFunction>
									<Reference>RUN_DUT_TO_CONNECTION</Reference>
								</CallFunction>
							</Action>
						</TestStep>
						<TestStep Name="SetMasterFrameData">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>c_cmd</Destination>
										<Source>ProcessData</Source>
									</SetVariable>
									<SetVariable>
										<Destination>LastCrc</Destination>
										<Source>t_slaveFrame.Crc0</Source>
									</SetVariable>
									<SetVariable>
										<Destination>c_bytesToBeSent</Destination>
										<Source>SafeDataLength</Source>
									</SetVariable>
								</SetVariables>
							</Action>
							<Informations2>
								<Information>
									<Type>Output</Type>
									<Value Param0="c_cmd">Set invalid Command 0x{0:x2} ProcessData</Value>
								</Information>
							</Informations2>
						</TestStep>
						<TestStep Name="CallInvalidConnectionOk">
							<Action>
								<CallFunction>
									<Reference>SEND_MASTER_FRAME</Reference>
								</CallFunction>
							</Action>
						</TestStep>
						<TestStep Name="CheckReceivedSlaveFrame">
							<Action>
								<CallFunction>
									<Reference>CHECK_RESET_FAIL</Reference>
								</CallFunction>
							</Action>
							<ReturnValue>
								<OnSuccess>
									<Type>Success</Type>
									<Value Param0="c_CommFaultReason">Expected CommFaultReason ({0}) received</Value>
								</OnSuccess>
							</ReturnValue>
						</TestStep>
					</TestSteps>
				</TestCase>
				<TestCase Name="#3.32 CONN_Fail10" CaseId="32">
					<Comment>Falsches Kommando(FailSafeData), mit SafePara</Comment>
					<CaseVariables>
						<Variable>
							<Name>c_CommFaultReason</Name>
							<Type>Byte</Type>
						</Variable>
						<Variable>
							<Name>c_tmpByte</Name>
							<Type>Byte</Type>
						</Variable>
						<Variable>
							<Name>c_cmd</Name>
							<Type>Byte</Type>
						</Variable>
						<Variable>
							<Name>c_bytesToBeSent</Name>
							<Type>Int32</Type>
						</Variable>
						<Variable>
							<Name>c_safeData[SafeDataLength]</Name>
							<Type>ArrayOfBytes</Type>
						</Variable>
					</CaseVariables>
					<TestSteps>
						<TestStep Name="SetVariables">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>c_CommFaultReason</Destination>
										<Source>INVALID_CMD</Source>
									</SetVariable>
									<SetVariable>
										<Destination>c_tmpByte</Destination>
										<Source>0</Source>
									</SetVariable>
									<SetVariable>
										<Destination>t_masterSessionId</Destination>
										<Source>1</Source>
									</SetVariable>
								</SetVariables>
							</Action>
						</TestStep>
						<TestStep Name="SetConnectionData">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>t_connectionId</Destination>
										<Source>3</Source>
									</SetVariable>
									<SetVariable>
										<Destination DestinationIndex="0">t_connData</Destination>
										<Source>t_connectionId</Source>
									</SetVariable>
									<SetVariable>
										<Destination DestinationIndex="2">t_connData</Destination>
										<Source>ConnData.SlaveAddress</Source>
									</SetVariable>
								</SetVariables>
							</Action>
							<Informations2>
								<Information>
									<Type>Output</Type>
									<Value Param0="t_connectionId" Param1="ConnData.SlaveAddress" Param2="t_connData">ConnectionId: {0} (0x{0:x4}), Slave Address: {1} (0x{1:x4}), Connection Data {2}</Value>
								</Information>
							</Informations2>
						</TestStep>
						<TestStep Name="SetParameterData">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>t_safePara</Destination>
										<Source>SafePara</Source>
									</SetVariable>
									<SetVariable>
										<Destination>t_watchdog</Destination>
										<Source>SafePara.Watchdog</Source>
									</SetVariable>
								</SetVariables>
							</Action>
							<Informations2>
								<Information>
									<Type>Output</Type>
									<Value Param0="t_watchdog" Param1="SafeParaSize" Param2="t_safePara">Watchdog: {0} ms, SafeParaSize: {1}, Safe Parameter {2}</Value>
								</Information>
							</Informations2>
						</TestStep>
						<TestStep Name="GotoConnection">
							<Action>
								<CallFunction>
									<Reference>RUN_DUT_TO_CONNECTION</Reference>
								</CallFunction>
							</Action>
						</TestStep>
						<TestStep Name="SetMasterFrameData">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>c_cmd</Destination>
										<Source>FailSafeData</Source>
									</SetVariable>
									<SetVariable>
										<Destination>LastCrc</Destination>
										<Source>t_slaveFrame.Crc0</Source>
									</SetVariable>
									<SetVariable>
										<Destination>c_safeData</Destination>
										<Source>t_safePara</Source>
									</SetVariable>
									<SetVariable>
										<Destination>c_bytesToBeSent</Destination>
										<Source>SafeDataLength</Source>
									</SetVariable>
								</SetVariables>
							</Action>
							<Informations2>
								<Information>
									<Type>Output</Type>
									<Value Param0="c_cmd">Set invalid Command 0x{0:x2} FailSafeData</Value>
								</Information>
							</Informations2>
						</TestStep>
						<TestStep Name="CallInvalidConnectionOk">
							<Action>
								<CallFunction>
									<Reference>SEND_MASTER_FRAME</Reference>
								</CallFunction>
							</Action>
						</TestStep>
						<TestStep Name="CheckReceivedSlaveFrame">
							<Action>
								<CallFunction>
									<Reference>CHECK_RESET_FAIL</Reference>
								</CallFunction>
							</Action>
							<ReturnValue>
								<OnSuccess>
									<Type>Success</Type>
									<Value Param0="c_CommFaultReason">Expected CommFaultReason ({0}) received</Value>
								</OnSuccess>
							</ReturnValue>
						</TestStep>
					</TestSteps>
				</TestCase>
				<TestCase Name="#3.33 CONN_Fail10" CaseId="33">
					<Comment>Falsches Kommando(FailSafeData)</Comment>
					<CaseVariables>
						<Variable>
							<Name>c_CommFaultReason</Name>
							<Type>Byte</Type>
						</Variable>
						<Variable>
							<Name>c_tmpByte</Name>
							<Type>Byte</Type>
						</Variable>
						<Variable>
							<Name>c_cmd</Name>
							<Type>Byte</Type>
						</Variable>
						<Variable>
							<Name>c_bytesToBeSent</Name>
							<Type>Int32</Type>
						</Variable>
						<Variable>
							<Name>c_safeData[SafeDataLength]</Name>
							<Type>ArrayOfBytes</Type>
						</Variable>
					</CaseVariables>
					<TestSteps>
						<TestStep Name="SetVariables">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>c_CommFaultReason</Destination>
										<Source>INVALID_CMD</Source>
									</SetVariable>
									<SetVariable>
										<Destination>c_tmpByte</Destination>
										<Source>0</Source>
									</SetVariable>
									<SetVariable>
										<Destination>t_masterSessionId</Destination>
										<Source>1</Source>
									</SetVariable>
								</SetVariables>
							</Action>
						</TestStep>
						<TestStep Name="SetConnectionData">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>t_connectionId</Destination>
										<Source>3</Source>
									</SetVariable>
									<SetVariable>
										<Destination DestinationIndex="0">t_connData</Destination>
										<Source>t_connectionId</Source>
									</SetVariable>
									<SetVariable>
										<Destination DestinationIndex="2">t_connData</Destination>
										<Source>ConnData.SlaveAddress</Source>
									</SetVariable>
								</SetVariables>
							</Action>
							<Informations2>
								<Information>
									<Type>Output</Type>
									<Value Param0="t_connectionId" Param1="ConnData.SlaveAddress" Param2="t_connData">ConnectionId: {0} (0x{0:x4}), Slave Address: {1} (0x{1:x4}), Connection Data {2}</Value>
								</Information>
							</Informations2>
						</TestStep>
						<TestStep Name="SetParameterData">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>t_safePara</Destination>
										<Source>SafePara</Source>
									</SetVariable>
									<SetVariable>
										<Destination>t_watchdog</Destination>
										<Source>SafePara.Watchdog</Source>
									</SetVariable>
								</SetVariables>
							</Action>
							<Informations2>
								<Information>
									<Type>Output</Type>
									<Value Param0="t_watchdog" Param1="SafeParaSize" Param2="t_safePara">Watchdog: {0} ms, SafeParaSize: {1}, Safe Parameter {2}</Value>
								</Information>
							</Informations2>
						</TestStep>
						<TestStep Name="GotoConnection">
							<Action>
								<CallFunction>
									<Reference>RUN_DUT_TO_CONNECTION</Reference>
								</CallFunction>
							</Action>
						</TestStep>
						<TestStep Name="SetMasterFrameData">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>c_cmd</Destination>
										<Source>FailSafeData</Source>
									</SetVariable>
									<SetVariable>
										<Destination>LastCrc</Destination>
										<Source>t_slaveFrame.Crc0</Source>
									</SetVariable>
									<SetVariable>
										<Destination>c_bytesToBeSent</Destination>
										<Source>SafeDataLength</Source>
									</SetVariable>
								</SetVariables>
							</Action>
							<Informations2>
								<Information>
									<Type>Output</Type>
									<Value Param0="c_cmd">Set invalid Command 0x{0:x2} FailSafeData</Value>
								</Information>
							</Informations2>
						</TestStep>
						<TestStep Name="CallInvalidConnectionOk">
							<Action>
								<CallFunction>
									<Reference>SEND_MASTER_FRAME</Reference>
								</CallFunction>
							</Action>
						</TestStep>
						<TestStep Name="CheckReceivedSlaveFrame">
							<Action>
								<CallFunction>
									<Reference>CHECK_RESET_FAIL</Reference>
								</CallFunction>
							</Action>
							<ReturnValue>
								<OnSuccess>
									<Type>Success</Type>
									<Value Param0="c_CommFaultReason">Expected CommFaultReason ({0}) received</Value>
								</OnSuccess>
							</ReturnValue>
						</TestStep>
					</TestSteps>
				</TestCase>
				<TestCase Name="#3.34 CONN_Fail11" CaseId="34">
					<Comment>Unbekanntes Kommando(0x00), mit SafePara</Comment>
					<CaseVariables>
						<Variable>
							<Name>c_CommFaultReason</Name>
							<Type>Byte</Type>
						</Variable>
						<Variable>
							<Name>c_tmpByte</Name>
							<Type>Byte</Type>
						</Variable>
						<Variable>
							<Name>c_cmd</Name>
							<Type>Byte</Type>
						</Variable>
						<Variable>
							<Name>c_bytesToBeSent</Name>
							<Type>Int32</Type>
						</Variable>
						<Variable>
							<Name>c_safeData[SafeDataLength]</Name>
							<Type>ArrayOfBytes</Type>
						</Variable>
					</CaseVariables>
					<TestSteps>
						<TestStep Name="SetVariables">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>c_CommFaultReason</Destination>
										<Source>UNKNOWN_CMD</Source>
									</SetVariable>
									<SetVariable>
										<Destination>c_tmpByte</Destination>
										<Source>0</Source>
									</SetVariable>
									<SetVariable>
										<Destination>t_masterSessionId</Destination>
										<Source>1</Source>
									</SetVariable>
								</SetVariables>
							</Action>
						</TestStep>
						<TestStep Name="SetConnectionData">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>t_connectionId</Destination>
										<Source>3</Source>
									</SetVariable>
									<SetVariable>
										<Destination DestinationIndex="0">t_connData</Destination>
										<Source>t_connectionId</Source>
									</SetVariable>
									<SetVariable>
										<Destination DestinationIndex="2">t_connData</Destination>
										<Source>ConnData.SlaveAddress</Source>
									</SetVariable>
								</SetVariables>
							</Action>
							<Informations2>
								<Information>
									<Type>Output</Type>
									<Value Param0="t_connectionId" Param1="ConnData.SlaveAddress" Param2="t_connData">ConnectionId: {0} (0x{0:x4}), Slave Address: {1} (0x{1:x4}), Connection Data {2}</Value>
								</Information>
							</Informations2>
						</TestStep>
						<TestStep Name="SetParameterData">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>t_safePara</Destination>
										<Source>SafePara</Source>
									</SetVariable>
									<SetVariable>
										<Destination>t_watchdog</Destination>
										<Source>SafePara.Watchdog</Source>
									</SetVariable>
								</SetVariables>
							</Action>
							<Informations2>
								<Information>
									<Type>Output</Type>
									<Value Param0="t_watchdog" Param1="SafeParaSize" Param2="t_safePara">Watchdog: {0} ms, SafeParaSize: {1}, Safe Parameter {2}</Value>
								</Information>
							</Informations2>
						</TestStep>
						<TestStep Name="GotoConnection">
							<Action>
								<CallFunction>
									<Reference>RUN_DUT_TO_CONNECTION</Reference>
								</CallFunction>
							</Action>
						</TestStep>
						<TestStep Name="SetMasterFrameData">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>c_cmd</Destination>
										<Source>0</Source>
									</SetVariable>
									<SetVariable>
										<Destination>LastCrc</Destination>
										<Source>t_slaveFrame.Crc0</Source>
									</SetVariable>
									<SetVariable>
										<Destination>c_safeData</Destination>
										<Source>t_safePara</Source>
									</SetVariable>
									<SetVariable>
										<Destination>c_bytesToBeSent</Destination>
										<Source>SafeDataLength</Source>
									</SetVariable>
								</SetVariables>
							</Action>
							<Informations2>
								<Information>
									<Type>Output</Type>
									<Value Param0="c_cmd">Set unknown Command 0x{0:x2}</Value>
								</Information>
							</Informations2>
						</TestStep>
						<TestStep Name="CallInvalidConnectionOk">
							<Action>
								<CallFunction>
									<Reference>SEND_MASTER_FRAME</Reference>
								</CallFunction>
							</Action>
						</TestStep>
						<TestStep Name="CheckReceivedSlaveFrame">
							<Action>
								<CallFunction>
									<Reference>CHECK_RESET_FAIL</Reference>
								</CallFunction>
							</Action>
							<ReturnValue>
								<OnSuccess>
									<Type>Success</Type>
									<Value Param0="c_CommFaultReason">Expected CommFaultReason ({0}) received</Value>
								</OnSuccess>
							</ReturnValue>
						</TestStep>
					</TestSteps>
				</TestCase>
				<TestCase Name="#3.35 CONN_Fail11" CaseId="35">
					<Comment>Unbekanntes Kommando(0x2b), mit SafePara</Comment>
					<CaseVariables>
						<Variable>
							<Name>c_CommFaultReason</Name>
							<Type>Byte</Type>
						</Variable>
						<Variable>
							<Name>c_tmpByte</Name>
							<Type>Byte</Type>
						</Variable>
						<Variable>
							<Name>c_cmd</Name>
							<Type>Byte</Type>
						</Variable>
						<Variable>
							<Name>c_bytesToBeSent</Name>
							<Type>Int32</Type>
						</Variable>
						<Variable>
							<Name>c_safeData[SafeDataLength]</Name>
							<Type>ArrayOfBytes</Type>
						</Variable>
					</CaseVariables>
					<TestSteps>
						<TestStep Name="SetVariables">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>c_CommFaultReason</Destination>
										<Source>UNKNOWN_CMD</Source>
									</SetVariable>
									<SetVariable>
										<Destination>c_tmpByte</Destination>
										<Source>0</Source>
									</SetVariable>
									<SetVariable>
										<Destination>t_masterSessionId</Destination>
										<Source>1</Source>
									</SetVariable>
								</SetVariables>
							</Action>
							<Informations2>
								<Information>
									<Type>Output</Type>
									<Value Param0="t_connectionId" Param1="ConnData.SlaveAddress" Param2="t_connData">ConnectionId: {0} (0x{0:x4}), Slave Address: {1} (0x{1:x4}), Connection Data {2}</Value>
								</Information>
							</Informations2>
						</TestStep>
						<TestStep Name="SetConnectionData">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>t_connectionId</Destination>
										<Source>3</Source>
									</SetVariable>
									<SetVariable>
										<Destination DestinationIndex="0">t_connData</Destination>
										<Source>t_connectionId</Source>
									</SetVariable>
									<SetVariable>
										<Destination DestinationIndex="2">t_connData</Destination>
										<Source>ConnData.SlaveAddress</Source>
									</SetVariable>
								</SetVariables>
							</Action>
							<Informations2>
								<Information>
									<Type>Output</Type>
									<Value Param0="t_connectionId" Param1="ConnData.SlaveAddress" Param2="t_connData">ConnectionId: {0} (0x{0:x4}), Slave Address: {1} (0x{1:x4}), Connection Data {2}</Value>
								</Information>
							</Informations2>
						</TestStep>
						<TestStep Name="SetParameterData">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>t_safePara</Destination>
										<Source>SafePara</Source>
									</SetVariable>
									<SetVariable>
										<Destination>t_watchdog</Destination>
										<Source>SafePara.Watchdog</Source>
									</SetVariable>
								</SetVariables>
							</Action>
							<Informations2>
								<Information>
									<Type>Output</Type>
									<Value Param0="t_watchdog" Param1="SafeParaSize" Param2="t_safePara">Watchdog: {0} ms, SafeParaSize: {1}, Safe Parameter {2}</Value>
								</Information>
							</Informations2>
						</TestStep>
						<TestStep Name="GotoConnection">
							<Action>
								<CallFunction>
									<Reference>RUN_DUT_TO_CONNECTION</Reference>
								</CallFunction>
							</Action>
						</TestStep>
						<TestStep Name="SetMasterFrameData">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>c_cmd</Destination>
										<Source>43</Source>
									</SetVariable>
									<SetVariable>
										<Destination>LastCrc</Destination>
										<Source>t_slaveFrame.Crc0</Source>
									</SetVariable>
									<SetVariable>
										<Destination>c_safeData</Destination>
										<Source>t_safePara</Source>
									</SetVariable>
									<SetVariable>
										<Destination>c_bytesToBeSent</Destination>
										<Source>SafeDataLength</Source>
									</SetVariable>
								</SetVariables>
							</Action>
							<Informations2>
								<Information>
									<Type>Output</Type>
									<Value Param0="c_cmd">Set unknown Command 0x{0:x2}</Value>
								</Information>
							</Informations2>
						</TestStep>
						<TestStep Name="CallInvalidConnectionOk">
							<Action>
								<CallFunction>
									<Reference>SEND_MASTER_FRAME</Reference>
								</CallFunction>
							</Action>
						</TestStep>
						<TestStep Name="CheckReceivedSlaveFrame">
							<Action>
								<CallFunction>
									<Reference>CHECK_RESET_FAIL</Reference>
								</CallFunction>
							</Action>
							<ReturnValue>
								<OnSuccess>
									<Type>Success</Type>
									<Value Param0="c_CommFaultReason">Expected CommFaultReason ({0}) received</Value>
								</OnSuccess>
							</ReturnValue>
						</TestStep>
					</TestSteps>
				</TestCase>
				<TestCase Name="#3.36 CONN_Fail11" CaseId="36">
					<Comment>Unbekanntes Kommando(0x37), mit SafePara</Comment>
					<CaseVariables>
						<Variable>
							<Name>c_CommFaultReason</Name>
							<Type>Byte</Type>
						</Variable>
						<Variable>
							<Name>c_tmpByte</Name>
							<Type>Byte</Type>
						</Variable>
						<Variable>
							<Name>c_cmd</Name>
							<Type>Byte</Type>
						</Variable>
						<Variable>
							<Name>c_bytesToBeSent</Name>
							<Type>Int32</Type>
						</Variable>
						<Variable>
							<Name>c_safeData[SafeDataLength]</Name>
							<Type>ArrayOfBytes</Type>
						</Variable>
					</CaseVariables>
					<TestSteps>
						<TestStep Name="SetVariables">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>c_CommFaultReason</Destination>
										<Source>UNKNOWN_CMD</Source>
									</SetVariable>
									<SetVariable>
										<Destination>c_tmpByte</Destination>
										<Source>0</Source>
									</SetVariable>
									<SetVariable>
										<Destination>t_masterSessionId</Destination>
										<Source>1</Source>
									</SetVariable>
								</SetVariables>
							</Action>
							<Informations2>
								<Information>
									<Type>Output</Type>
									<Value Param0="t_connectionId" Param1="ConnData.SlaveAddress" Param2="t_connData">ConnectionId: {0} (0x{0:x4}), Slave Address: {1} (0x{1:x4}), Connection Data {2}</Value>
								</Information>
							</Informations2>
						</TestStep>
						<TestStep Name="SetConnectionData">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>t_connectionId</Destination>
										<Source>3</Source>
									</SetVariable>
									<SetVariable>
										<Destination DestinationIndex="0">t_connData</Destination>
										<Source>t_connectionId</Source>
									</SetVariable>
									<SetVariable>
										<Destination DestinationIndex="2">t_connData</Destination>
										<Source>ConnData.SlaveAddress</Source>
									</SetVariable>
								</SetVariables>
							</Action>
							<Informations2>
								<Information>
									<Type>Output</Type>
									<Value Param0="t_connectionId" Param1="ConnData.SlaveAddress" Param2="t_connData">ConnectionId: {0} (0x{0:x4}), Slave Address: {1} (0x{1:x4}), Connection Data {2}</Value>
								</Information>
							</Informations2>
						</TestStep>
						<TestStep Name="SetParameterData">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>t_safePara</Destination>
										<Source>SafePara</Source>
									</SetVariable>
									<SetVariable>
										<Destination>t_watchdog</Destination>
										<Source>SafePara.Watchdog</Source>
									</SetVariable>
								</SetVariables>
							</Action>
							<Informations2>
								<Information>
									<Type>Output</Type>
									<Value Param0="t_watchdog" Param1="SafeParaSize" Param2="t_safePara">Watchdog: {0} ms, SafeParaSize: {1}, Safe Parameter {2}</Value>
								</Information>
							</Informations2>
						</TestStep>
						<TestStep Name="GotoConnection">
							<Action>
								<CallFunction>
									<Reference>RUN_DUT_TO_CONNECTION</Reference>
								</CallFunction>
							</Action>
						</TestStep>
						<TestStep Name="SetMasterFrameData">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>c_cmd</Destination>
										<Source>55</Source>
									</SetVariable>
									<SetVariable>
										<Destination>LastCrc</Destination>
										<Source>t_slaveFrame.Crc0</Source>
									</SetVariable>
									<SetVariable>
										<Destination>c_safeData</Destination>
										<Source>t_safePara</Source>
									</SetVariable>
									<SetVariable>
										<Destination>c_bytesToBeSent</Destination>
										<Source>SafeDataLength</Source>
									</SetVariable>
								</SetVariables>
							</Action>
							<Informations2>
								<Information>
									<Type>Output</Type>
									<Value Param0="c_cmd">Set unknown Command 0x{0:x2}</Value>
								</Information>
							</Informations2>
						</TestStep>
						<TestStep Name="CallInvalidConnectionOk">
							<Action>
								<CallFunction>
									<Reference>SEND_MASTER_FRAME</Reference>
								</CallFunction>
							</Action>
						</TestStep>
						<TestStep Name="CheckReceivedSlaveFrame">
							<Action>
								<CallFunction>
									<Reference>CHECK_RESET_FAIL</Reference>
								</CallFunction>
							</Action>
							<ReturnValue>
								<OnSuccess>
									<Type>Success</Type>
									<Value Param0="c_CommFaultReason">Expected CommFaultReason ({0}) received</Value>
								</OnSuccess>
							</ReturnValue>
						</TestStep>
					</TestSteps>
				</TestCase>
				<TestCase Name="#3.37 CONN_Fail11" CaseId="37">
					<Comment>Unbekanntes Kommando(0x95), mit SafePara</Comment>
					<CaseVariables>
						<Variable>
							<Name>c_CommFaultReason</Name>
							<Type>Byte</Type>
						</Variable>
						<Variable>
							<Name>c_tmpByte</Name>
							<Type>Byte</Type>
						</Variable>
						<Variable>
							<Name>c_cmd</Name>
							<Type>Byte</Type>
						</Variable>
						<Variable>
							<Name>c_bytesToBeSent</Name>
							<Type>Int32</Type>
						</Variable>
						<Variable>
							<Name>c_safeData[SafeDataLength]</Name>
							<Type>ArrayOfBytes</Type>
						</Variable>
					</CaseVariables>
					<TestSteps>
						<TestStep Name="SetVariables">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>c_CommFaultReason</Destination>
										<Source>UNKNOWN_CMD</Source>
									</SetVariable>
									<SetVariable>
										<Destination>c_tmpByte</Destination>
										<Source>0</Source>
									</SetVariable>
									<SetVariable>
										<Destination>t_masterSessionId</Destination>
										<Source>1</Source>
									</SetVariable>
								</SetVariables>
							</Action>
							<Informations2>
								<Information>
									<Type>Output</Type>
									<Value Param0="t_connectionId" Param1="ConnData.SlaveAddress" Param2="t_connData">ConnectionId: {0} (0x{0:x4}), Slave Address: {1} (0x{1:x4}), Connection Data {2}</Value>
								</Information>
							</Informations2>
						</TestStep>
						<TestStep Name="SetConnectionData">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>t_connectionId</Destination>
										<Source>3</Source>
									</SetVariable>
									<SetVariable>
										<Destination DestinationIndex="0">t_connData</Destination>
										<Source>t_connectionId</Source>
									</SetVariable>
									<SetVariable>
										<Destination DestinationIndex="2">t_connData</Destination>
										<Source>ConnData.SlaveAddress</Source>
									</SetVariable>
								</SetVariables>
							</Action>
							<Informations2>
								<Information>
									<Type>Output</Type>
									<Value Param0="t_connectionId" Param1="ConnData.SlaveAddress" Param2="t_connData">ConnectionId: {0} (0x{0:x4}), Slave Address: {1} (0x{1:x4}), Connection Data {2}</Value>
								</Information>
							</Informations2>
						</TestStep>
						<TestStep Name="SetParameterData">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>t_safePara</Destination>
										<Source>SafePara</Source>
									</SetVariable>
									<SetVariable>
										<Destination>t_watchdog</Destination>
										<Source>SafePara.Watchdog</Source>
									</SetVariable>
								</SetVariables>
							</Action>
							<Informations2>
								<Information>
									<Type>Output</Type>
									<Value Param0="t_watchdog" Param1="SafeParaSize" Param2="t_safePara">Watchdog: {0} ms, SafeParaSize: {1}, Safe Parameter {2}</Value>
								</Information>
							</Informations2>
						</TestStep>
						<TestStep Name="GotoConnection">
							<Action>
								<CallFunction>
									<Reference>RUN_DUT_TO_CONNECTION</Reference>
								</CallFunction>
							</Action>
						</TestStep>
						<TestStep Name="SetMasterFrameData">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>c_cmd</Destination>
										<Source>149</Source>
									</SetVariable>
									<SetVariable>
										<Destination>LastCrc</Destination>
										<Source>t_slaveFrame.Crc0</Source>
									</SetVariable>
									<SetVariable>
										<Destination>c_safeData</Destination>
										<Source>t_safePara</Source>
									</SetVariable>
									<SetVariable>
										<Destination>c_bytesToBeSent</Destination>
										<Source>SafeDataLength</Source>
									</SetVariable>
								</SetVariables>
							</Action>
							<Informations2>
								<Information>
									<Type>Output</Type>
									<Value Param0="c_cmd">Set unknown Command 0x{0:x2}</Value>
								</Information>
							</Informations2>
						</TestStep>
						<TestStep Name="CallInvalidConnectionOk">
							<Action>
								<CallFunction>
									<Reference>SEND_MASTER_FRAME</Reference>
								</CallFunction>
							</Action>
						</TestStep>
						<TestStep Name="CheckReceivedSlaveFrame">
							<Action>
								<CallFunction>
									<Reference>CHECK_RESET_FAIL</Reference>
								</CallFunction>
							</Action>
							<ReturnValue>
								<OnSuccess>
									<Type>Success</Type>
									<Value Param0="c_CommFaultReason">Expected CommFaultReason ({0}) received</Value>
								</OnSuccess>
							</ReturnValue>
						</TestStep>
					</TestSteps>
				</TestCase>
				<TestCase Name="#3.38 CONN_Fail11" CaseId="38">
					<Comment>Unbekanntes Kommando(0xff), mit SafePara</Comment>
					<CaseVariables>
						<Variable>
							<Name>c_CommFaultReason</Name>
							<Type>Byte</Type>
						</Variable>
						<Variable>
							<Name>c_tmpByte</Name>
							<Type>Byte</Type>
						</Variable>
						<Variable>
							<Name>c_cmd</Name>
							<Type>Byte</Type>
						</Variable>
						<Variable>
							<Name>c_bytesToBeSent</Name>
							<Type>Int32</Type>
						</Variable>
						<Variable>
							<Name>c_safeData[SafeDataLength]</Name>
							<Type>ArrayOfBytes</Type>
						</Variable>
					</CaseVariables>
					<TestSteps>
						<TestStep Name="SetVariables">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>c_CommFaultReason</Destination>
										<Source>UNKNOWN_CMD</Source>
									</SetVariable>
									<SetVariable>
										<Destination>c_tmpByte</Destination>
										<Source>0</Source>
									</SetVariable>
									<SetVariable>
										<Destination>t_masterSessionId</Destination>
										<Source>1</Source>
									</SetVariable>
								</SetVariables>
							</Action>
							<Informations2>
								<Information>
									<Type>Output</Type>
									<Value Param0="t_connectionId" Param1="ConnData.SlaveAddress" Param2="t_connData">ConnectionId: {0} (0x{0:x4}), Slave Address: {1} (0x{1:x4}), Connection Data {2}</Value>
								</Information>
							</Informations2>
						</TestStep>
						<TestStep Name="SetConnectionData">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>t_connectionId</Destination>
										<Source>3</Source>
									</SetVariable>
									<SetVariable>
										<Destination DestinationIndex="0">t_connData</Destination>
										<Source>t_connectionId</Source>
									</SetVariable>
									<SetVariable>
										<Destination DestinationIndex="2">t_connData</Destination>
										<Source>ConnData.SlaveAddress</Source>
									</SetVariable>
								</SetVariables>
							</Action>
							<Informations2>
								<Information>
									<Type>Output</Type>
									<Value Param0="t_connectionId" Param1="ConnData.SlaveAddress" Param2="t_connData">ConnectionId: {0} (0x{0:x4}), Slave Address: {1} (0x{1:x4}), Connection Data {2}</Value>
								</Information>
							</Informations2>
						</TestStep>
						<TestStep Name="SetParameterData">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>t_safePara</Destination>
										<Source>SafePara</Source>
									</SetVariable>
									<SetVariable>
										<Destination>t_watchdog</Destination>
										<Source>SafePara.Watchdog</Source>
									</SetVariable>
								</SetVariables>
							</Action>
							<Informations2>
								<Information>
									<Type>Output</Type>
									<Value Param0="t_watchdog" Param1="SafeParaSize" Param2="t_safePara">Watchdog: {0} ms, SafeParaSize: {1}, Safe Parameter {2}</Value>
								</Information>
							</Informations2>
						</TestStep>
						<TestStep Name="GotoConnection">
							<Action>
								<CallFunction>
									<Reference>RUN_DUT_TO_CONNECTION</Reference>
								</CallFunction>
							</Action>
						</TestStep>
						<TestStep Name="SetMasterFrameData">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>c_cmd</Destination>
										<Source>255</Source>
									</SetVariable>
									<SetVariable>
										<Destination>LastCrc</Destination>
										<Source>t_slaveFrame.Crc0</Source>
									</SetVariable>
									<SetVariable>
										<Destination>c_safeData</Destination>
										<Source>t_safePara</Source>
									</SetVariable>
									<SetVariable>
										<Destination>c_bytesToBeSent</Destination>
										<Source>SafeDataLength</Source>
									</SetVariable>
								</SetVariables>
							</Action>
							<Informations2>
								<Information>
									<Type>Output</Type>
									<Value Param0="c_cmd">Set unknown Command 0x{0:x2}</Value>
								</Information>
							</Informations2>
						</TestStep>
						<TestStep Name="CallInvalidConnectionOk">
							<Action>
								<CallFunction>
									<Reference>SEND_MASTER_FRAME</Reference>
								</CallFunction>
							</Action>
						</TestStep>
						<TestStep Name="CheckReceivedSlaveFrame">
							<Action>
								<CallFunction>
									<Reference>CHECK_RESET_FAIL</Reference>
								</CallFunction>
							</Action>
							<ReturnValue>
								<OnSuccess>
									<Type>Success</Type>
									<Value Param0="c_CommFaultReason">Expected CommFaultReason ({0}) received</Value>
								</OnSuccess>
							</ReturnValue>
						</TestStep>
					</TestSteps>
				</TestCase>
				<TestCase Name="#3.39 CONN_Reset1" CaseId="39">
					<Comment>Reset-Kommando vom Master mit CommFaultReason = 0</Comment>
					<CaseVariables>
						<Variable>
							<Name>c_CommFaultReason</Name>
							<Type>Byte</Type>
						</Variable>
						<Variable>
							<Name>c_tmpByte</Name>
							<Type>Byte</Type>
						</Variable>
						<Variable>
							<Name>c_tmpCommFaultReason</Name>
							<Type>Byte</Type>
						</Variable>
						<Variable>
							<Name>c_safeData[SafeDataLength]</Name>
							<Type>ArrayOfBytes</Type>
						</Variable>
					</CaseVariables>
					<TestSteps>
						<TestStep Name="SetVariables">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>c_CommFaultReason</Destination>
										<Source>0</Source>
									</SetVariable>
									<SetVariable>
										<Destination>c_tmpByte</Destination>
										<Source>0</Source>
									</SetVariable>
									<SetVariable>
										<Destination>t_masterSessionId</Destination>
										<Source>1</Source>
									</SetVariable>
								</SetVariables>
							</Action>
						</TestStep>
						<TestStep Name="SetConnectionData">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>t_connectionId</Destination>
										<Source>3</Source>
									</SetVariable>
									<SetVariable>
										<Destination DestinationIndex="0">t_connData</Destination>
										<Source>t_connectionId</Source>
									</SetVariable>
									<SetVariable>
										<Destination DestinationIndex="2">t_connData</Destination>
										<Source>ConnData.SlaveAddress</Source>
									</SetVariable>
								</SetVariables>
							</Action>
							<Informations2>
								<Information>
									<Type>Output</Type>
									<Value Param0="t_connectionId" Param1="ConnData.SlaveAddress" Param2="t_connData">ConnectionId: {0} (0x{0:x4}), Slave Address: {1} (0x{1:x4}), Connection Data {2}</Value>
								</Information>
							</Informations2>
						</TestStep>
						<TestStep Name="SetParameterData">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>t_safePara</Destination>
										<Source>SafePara</Source>
									</SetVariable>
									<SetVariable>
										<Destination>t_watchdog</Destination>
										<Source>SafePara.Watchdog</Source>
									</SetVariable>
								</SetVariables>
							</Action>
							<Informations2>
								<Information>
									<Type>Output</Type>
									<Value Param0="t_watchdog" Param1="SafeParaSize" Param2="t_safePara">Watchdog: {0} ms, SafeParaSize: {1}, Safe Parameter {2}</Value>
								</Information>
							</Informations2>
						</TestStep>
						<TestStep Name="GotoConnection">
							<Action>
								<CallFunction>
									<Reference>RUN_DUT_TO_CONNECTION</Reference>
								</CallFunction>
							</Action>
						</TestStep>
						<TestStep Name="SetMasterFrameData">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>t_connectionId</Destination>
										<Source>0</Source>
									</SetVariable>
									<SetVariable>
										<Destination>t_masterSeqNo</Destination>
										<Source>1</Source>
									</SetVariable>
									<SetVariable>
										<Destination>LastCrc</Destination>
										<Source>0</Source>
									</SetVariable>
									<SetVariable>
										<Destination>OldMasterCrc</Destination>
										<Source>0</Source>
									</SetVariable>
									<SetVariable>
										<Destination>c_tmpCommFaultReason</Destination>
										<Source>0</Source>
									</SetVariable>
									<SetVariable>
										<Destination DestinationIndex="0">c_safeData</Destination>
										<Source>c_tmpCommFaultReason</Source>
									</SetVariable>
								</SetVariables>
							</Action>
						</TestStep>
						<TestStep Name="SetFrame">
							<Informations1>
								<Information>
									<Type>Verbose</Type>
									<Value Param0="c_safeData" Param1="LastCrc" Param2="t_masterSeqNo" Param3="OldMasterCrc" Param4="0">SetFrame(Command Reset, SafeData {0}, LastCrc 0x{1:x4}, ConnectionId 0x{4:x4},  SequenceNo 0x{2:x4}, OldCrc 0x{3:x4}, New false</Value>
								</Information>
							</Informations1>
							<Action>
								<SetFrame Name="t_masterFrame">
									<Command>
										<CommandValue>Reset</CommandValue>
									</Command>
									<SafeData>
										<SafeDataVariable>c_safeData</SafeDataVariable>
									</SafeData>
									<LastCRC>LastCrc</LastCRC>
									<ConnectionID>
										<UshortValue>0</UshortValue>
									</ConnectionID>
									<SequenceNo>t_masterSeqNo</SequenceNo>
									<OldCRC>OldMasterCrc</OldCRC>
									<New>false</New>
								</SetFrame>
							</Action>
						</TestStep>
						<TestStep Name="SendFrame">
							<Action>
								<SendFrame Name="t_masterFrame"/>
							</Action>
							<Informations2>
								<Information>
									<Type>Verbose</Type>
									<Value Param0="t_masterFrame.FrameData">Master Frame: {0}</Value>
								</Information>
							</Informations2>
							<ReturnValue>
								<OnFailure>
									<Type>Error</Type>
									<Value>Failed to send FSoE frame!</Value>
									<Id>256</Id>
								</OnFailure>
							</ReturnValue>
						</TestStep>
						<TestStep Name="CheckReceivedSlaveFrame">
							<Action>
								<CallFunction>
									<Reference>CHECK_RESET_FAIL</Reference>
								</CallFunction>
							</Action>
							<ReturnValue>
								<OnSuccess>
									<Type>Success</Type>
									<Value Param0="c_CommFaultReason">Expected CommFaultReason ({0}) received</Value>
								</OnSuccess>
							</ReturnValue>
						</TestStep>
					</TestSteps>
				</TestCase>
				<TestCase Name="#3.40 CONN_Reset1" CaseId="40">
					<Comment>Reset-Kommando vom Master mit CommFaultReason = 1</Comment>
					<CaseVariables>
						<Variable>
							<Name>c_CommFaultReason</Name>
							<Type>Byte</Type>
						</Variable>
						<Variable>
							<Name>c_tmpByte</Name>
							<Type>Byte</Type>
						</Variable>
						<Variable>
							<Name>c_tmpCommFaultReason</Name>
							<Type>Byte</Type>
						</Variable>
						<Variable>
							<Name>c_safeData[SafeDataLength]</Name>
							<Type>ArrayOfBytes</Type>
						</Variable>
					</CaseVariables>
					<TestSteps>
						<TestStep Name="SetVariables">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>c_CommFaultReason</Destination>
										<Source>0</Source>
									</SetVariable>
									<SetVariable>
										<Destination>c_tmpByte</Destination>
										<Source>0</Source>
									</SetVariable>
									<SetVariable>
										<Destination>t_masterSessionId</Destination>
										<Source>1</Source>
									</SetVariable>
								</SetVariables>
							</Action>
						</TestStep>
						<TestStep Name="SetConnectionData">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>t_connectionId</Destination>
										<Source>3</Source>
									</SetVariable>
									<SetVariable>
										<Destination DestinationIndex="0">t_connData</Destination>
										<Source>t_connectionId</Source>
									</SetVariable>
									<SetVariable>
										<Destination DestinationIndex="2">t_connData</Destination>
										<Source>ConnData.SlaveAddress</Source>
									</SetVariable>
								</SetVariables>
							</Action>
							<Informations2>
								<Information>
									<Type>Output</Type>
									<Value Param0="t_connectionId" Param1="ConnData.SlaveAddress" Param2="t_connData">ConnectionId: {0} (0x{0:x4}), Slave Address: {1} (0x{1:x4}), Connection Data {2}</Value>
								</Information>
							</Informations2>
						</TestStep>
						<TestStep Name="SetParameterData">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>t_safePara</Destination>
										<Source>SafePara</Source>
									</SetVariable>
									<SetVariable>
										<Destination>t_watchdog</Destination>
										<Source>SafePara.Watchdog</Source>
									</SetVariable>
								</SetVariables>
							</Action>
							<Informations2>
								<Information>
									<Type>Output</Type>
									<Value Param0="t_watchdog" Param1="SafeParaSize" Param2="t_safePara">Watchdog: {0} ms, SafeParaSize: {1}, Safe Parameter {2}</Value>
								</Information>
							</Informations2>
						</TestStep>
						<TestStep Name="GotoConnection">
							<Action>
								<CallFunction>
									<Reference>RUN_DUT_TO_CONNECTION</Reference>
								</CallFunction>
							</Action>
						</TestStep>
						<TestStep Name="SetMasterFrameData">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>t_connectionId</Destination>
										<Source>0</Source>
									</SetVariable>
									<SetVariable>
										<Destination>t_masterSeqNo</Destination>
										<Source>1</Source>
									</SetVariable>
									<SetVariable>
										<Destination>LastCrc</Destination>
										<Source>0</Source>
									</SetVariable>
									<SetVariable>
										<Destination>OldMasterCrc</Destination>
										<Source>0</Source>
									</SetVariable>
									<SetVariable>
										<Destination>c_tmpCommFaultReason</Destination>
										<Source>1</Source>
									</SetVariable>
									<SetVariable>
										<Destination DestinationIndex="0">c_safeData</Destination>
										<Source>c_tmpCommFaultReason</Source>
									</SetVariable>
								</SetVariables>
							</Action>
						</TestStep>
						<TestStep Name="SetFrame">
							<Informations1>
								<Information>
									<Type>Verbose</Type>
									<Value Param0="c_safeData" Param1="LastCrc" Param2="t_masterSeqNo" Param3="OldMasterCrc" Param4="0">SetFrame(Command Reset, SafeData {0}, LastCrc 0x{1:x4}, ConnectionId 0x{4:x4},  SequenceNo 0x{2:x4}, OldCrc 0x{3:x4}, New false</Value>
								</Information>
							</Informations1>
							<Action>
								<SetFrame Name="t_masterFrame">
									<Command>
										<CommandValue>Reset</CommandValue>
									</Command>
									<SafeData>
										<SafeDataVariable>c_safeData</SafeDataVariable>
									</SafeData>
									<LastCRC>LastCrc</LastCRC>
									<ConnectionID>
										<UshortValue>0</UshortValue>
									</ConnectionID>
									<SequenceNo>t_masterSeqNo</SequenceNo>
									<OldCRC>OldMasterCrc</OldCRC>
									<New>false</New>
								</SetFrame>
							</Action>
						</TestStep>
						<TestStep Name="SendFrame">
							<Action>
								<SendFrame Name="t_masterFrame"/>
							</Action>
							<Informations2>
								<Information>
									<Type>Verbose</Type>
									<Value Param0="t_masterFrame.FrameData">Master Frame: {0}</Value>
								</Information>
							</Informations2>
							<ReturnValue>
								<OnFailure>
									<Type>Error</Type>
									<Value>Failed to send FSoE frame!</Value>
									<Id>256</Id>
								</OnFailure>
							</ReturnValue>
						</TestStep>
						<TestStep Name="CheckReceivedSlaveFrame">
							<Action>
								<CallFunction>
									<Reference>CHECK_RESET_FAIL</Reference>
								</CallFunction>
							</Action>
							<ReturnValue>
								<OnSuccess>
									<Type>Success</Type>
									<Value Param0="c_CommFaultReason">Expected CommFaultReason ({0}) received</Value>
								</OnSuccess>
							</ReturnValue>
						</TestStep>
					</TestSteps>
				</TestCase>
				<TestCase Name="#3.41 CONN_Reset1" CaseId="41">
					<Comment>Reset-Kommando vom Master mit CommFaultReason = 14</Comment>
					<CaseVariables>
						<Variable>
							<Name>c_CommFaultReason</Name>
							<Type>Byte</Type>
						</Variable>
						<Variable>
							<Name>c_tmpByte</Name>
							<Type>Byte</Type>
						</Variable>
						<Variable>
							<Name>c_tmpCommFaultReason</Name>
							<Type>Byte</Type>
						</Variable>
						<Variable>
							<Name>c_safeData[SafeDataLength]</Name>
							<Type>ArrayOfBytes</Type>
						</Variable>
					</CaseVariables>
					<TestSteps>
						<TestStep Name="SetVariables">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>c_CommFaultReason</Destination>
										<Source>0</Source>
									</SetVariable>
									<SetVariable>
										<Destination>c_tmpByte</Destination>
										<Source>0</Source>
									</SetVariable>
									<SetVariable>
										<Destination>t_masterSessionId</Destination>
										<Source>1</Source>
									</SetVariable>
								</SetVariables>
							</Action>
						</TestStep>
						<TestStep Name="SetConnectionData">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>t_connectionId</Destination>
										<Source>3</Source>
									</SetVariable>
									<SetVariable>
										<Destination DestinationIndex="0">t_connData</Destination>
										<Source>t_connectionId</Source>
									</SetVariable>
									<SetVariable>
										<Destination DestinationIndex="2">t_connData</Destination>
										<Source>ConnData.SlaveAddress</Source>
									</SetVariable>
								</SetVariables>
							</Action>
							<Informations2>
								<Information>
									<Type>Output</Type>
									<Value Param0="t_connectionId" Param1="ConnData.SlaveAddress" Param2="t_connData">ConnectionId: {0} (0x{0:x4}), Slave Address: {1} (0x{1:x4}), Connection Data {2}</Value>
								</Information>
							</Informations2>
						</TestStep>
						<TestStep Name="SetParameterData">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>t_safePara</Destination>
										<Source>SafePara</Source>
									</SetVariable>
									<SetVariable>
										<Destination>t_watchdog</Destination>
										<Source>SafePara.Watchdog</Source>
									</SetVariable>
								</SetVariables>
							</Action>
							<Informations2>
								<Information>
									<Type>Output</Type>
									<Value Param0="t_watchdog" Param1="SafeParaSize" Param2="t_safePara">Watchdog: {0} ms, SafeParaSize: {1}, Safe Parameter {2}</Value>
								</Information>
							</Informations2>
						</TestStep>
						<TestStep Name="GotoConnection">
							<Action>
								<CallFunction>
									<Reference>RUN_DUT_TO_CONNECTION</Reference>
								</CallFunction>
							</Action>
						</TestStep>
						<TestStep Name="SetMasterFrameData">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>t_connectionId</Destination>
										<Source>0</Source>
									</SetVariable>
									<SetVariable>
										<Destination>t_masterSeqNo</Destination>
										<Source>1</Source>
									</SetVariable>
									<SetVariable>
										<Destination>LastCrc</Destination>
										<Source>0</Source>
									</SetVariable>
									<SetVariable>
										<Destination>OldMasterCrc</Destination>
										<Source>0</Source>
									</SetVariable>
									<SetVariable>
										<Destination>c_tmpCommFaultReason</Destination>
										<Source>14</Source>
									</SetVariable>
									<SetVariable>
										<Destination DestinationIndex="0">c_safeData</Destination>
										<Source>c_tmpCommFaultReason</Source>
									</SetVariable>
								</SetVariables>
							</Action>
						</TestStep>
						<TestStep Name="SetFrame">
							<Informations1>
								<Information>
									<Type>Verbose</Type>
									<Value Param0="c_safeData" Param1="LastCrc" Param2="t_masterSeqNo" Param3="OldMasterCrc" Param4="0">SetFrame(Command Reset, SafeData {0}, LastCrc 0x{1:x4}, ConnectionId 0x{4:x4},  SequenceNo 0x{2:x4}, OldCrc 0x{3:x4}, New false</Value>
								</Information>
							</Informations1>
							<Action>
								<SetFrame Name="t_masterFrame">
									<Command>
										<CommandValue>Reset</CommandValue>
									</Command>
									<SafeData>
										<SafeDataVariable>c_safeData</SafeDataVariable>
									</SafeData>
									<LastCRC>LastCrc</LastCRC>
									<ConnectionID>
										<UshortValue>0</UshortValue>
									</ConnectionID>
									<SequenceNo>t_masterSeqNo</SequenceNo>
									<OldCRC>OldMasterCrc</OldCRC>
									<New>false</New>
								</SetFrame>
							</Action>
						</TestStep>
						<TestStep Name="SendFrame">
							<Action>
								<SendFrame Name="t_masterFrame"/>
							</Action>
							<Informations2>
								<Information>
									<Type>Verbose</Type>
									<Value Param0="t_masterFrame.FrameData">Master Frame: {0}</Value>
								</Information>
							</Informations2>
							<ReturnValue>
								<OnFailure>
									<Type>Error</Type>
									<Value>Failed to send FSoE frame!</Value>
									<Id>256</Id>
								</OnFailure>
							</ReturnValue>
						</TestStep>
						<TestStep Name="CheckReceivedSlaveFrame">
							<Action>
								<CallFunction>
									<Reference>CHECK_RESET_FAIL</Reference>
								</CallFunction>
							</Action>
							<ReturnValue>
								<OnSuccess>
									<Type>Success</Type>
									<Value Param0="c_CommFaultReason">Expected CommFaultReason ({0}) received</Value>
								</OnSuccess>
							</ReturnValue>
						</TestStep>
					</TestSteps>
				</TestCase>
				<TestCase Name="#3.42 CONN_Reset1" CaseId="42">
					<Comment>Reset-Kommando vom Master mit CommFaultReason = 15</Comment>
					<CaseVariables>
						<Variable>
							<Name>c_CommFaultReason</Name>
							<Type>Byte</Type>
						</Variable>
						<Variable>
							<Name>c_tmpByte</Name>
							<Type>Byte</Type>
						</Variable>
						<Variable>
							<Name>c_tmpCommFaultReason</Name>
							<Type>Byte</Type>
						</Variable>
						<Variable>
							<Name>c_safeData[SafeDataLength]</Name>
							<Type>ArrayOfBytes</Type>
						</Variable>
					</CaseVariables>
					<TestSteps>
						<TestStep Name="SetVariables">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>c_CommFaultReason</Destination>
										<Source>0</Source>
									</SetVariable>
									<SetVariable>
										<Destination>c_tmpByte</Destination>
										<Source>0</Source>
									</SetVariable>
									<SetVariable>
										<Destination>t_masterSessionId</Destination>
										<Source>1</Source>
									</SetVariable>
								</SetVariables>
							</Action>
						</TestStep>
						<TestStep Name="SetConnectionData">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>t_connectionId</Destination>
										<Source>3</Source>
									</SetVariable>
									<SetVariable>
										<Destination DestinationIndex="0">t_connData</Destination>
										<Source>t_connectionId</Source>
									</SetVariable>
									<SetVariable>
										<Destination DestinationIndex="2">t_connData</Destination>
										<Source>ConnData.SlaveAddress</Source>
									</SetVariable>
								</SetVariables>
							</Action>
							<Informations2>
								<Information>
									<Type>Output</Type>
									<Value Param0="t_connectionId" Param1="ConnData.SlaveAddress" Param2="t_connData">ConnectionId: {0} (0x{0:x4}), Slave Address: {1} (0x{1:x4}), Connection Data {2}</Value>
								</Information>
							</Informations2>
						</TestStep>
						<TestStep Name="SetParameterData">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>t_safePara</Destination>
										<Source>SafePara</Source>
									</SetVariable>
									<SetVariable>
										<Destination>t_watchdog</Destination>
										<Source>SafePara.Watchdog</Source>
									</SetVariable>
								</SetVariables>
							</Action>
							<Informations2>
								<Information>
									<Type>Output</Type>
									<Value Param0="t_watchdog" Param1="SafeParaSize" Param2="t_safePara">Watchdog: {0} ms, SafeParaSize: {1}, Safe Parameter {2}</Value>
								</Information>
							</Informations2>
						</TestStep>
						<TestStep Name="GotoConnection">
							<Action>
								<CallFunction>
									<Reference>RUN_DUT_TO_CONNECTION</Reference>
								</CallFunction>
							</Action>
						</TestStep>
						<TestStep Name="SetMasterFrameData">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>t_connectionId</Destination>
										<Source>0</Source>
									</SetVariable>
									<SetVariable>
										<Destination>t_masterSeqNo</Destination>
										<Source>1</Source>
									</SetVariable>
									<SetVariable>
										<Destination>LastCrc</Destination>
										<Source>0</Source>
									</SetVariable>
									<SetVariable>
										<Destination>OldMasterCrc</Destination>
										<Source>0</Source>
									</SetVariable>
									<SetVariable>
										<Destination>c_tmpCommFaultReason</Destination>
										<Source>15</Source>
									</SetVariable>
									<SetVariable>
										<Destination DestinationIndex="0">c_safeData</Destination>
										<Source>c_tmpCommFaultReason</Source>
									</SetVariable>
								</SetVariables>
							</Action>
						</TestStep>
						<TestStep Name="SetFrame">
							<Informations1>
								<Information>
									<Type>Verbose</Type>
									<Value Param0="c_safeData" Param1="LastCrc" Param2="t_masterSeqNo" Param3="OldMasterCrc" Param4="0">SetFrame(Command Reset, SafeData {0}, LastCrc 0x{1:x4}, ConnectionId 0x{4:x4},  SequenceNo 0x{2:x4}, OldCrc 0x{3:x4}, New false</Value>
								</Information>
							</Informations1>
							<Action>
								<SetFrame Name="t_masterFrame">
									<Command>
										<CommandValue>Reset</CommandValue>
									</Command>
									<SafeData>
										<SafeDataVariable>c_safeData</SafeDataVariable>
									</SafeData>
									<LastCRC>LastCrc</LastCRC>
									<ConnectionID>
										<UshortValue>0</UshortValue>
									</ConnectionID>
									<SequenceNo>t_masterSeqNo</SequenceNo>
									<OldCRC>OldMasterCrc</OldCRC>
									<New>false</New>
								</SetFrame>
							</Action>
						</TestStep>
						<TestStep Name="SendFrame">
							<Action>
								<SendFrame Name="t_masterFrame"/>
							</Action>
							<Informations2>
								<Information>
									<Type>Verbose</Type>
									<Value Param0="t_masterFrame.FrameData">Master Frame: {0}</Value>
								</Information>
							</Informations2>
							<ReturnValue>
								<OnFailure>
									<Type>Error</Type>
									<Value>Failed to send FSoE frame!</Value>
									<Id>256</Id>
								</OnFailure>
							</ReturnValue>
						</TestStep>
						<TestStep Name="CheckReceivedSlaveFrame">
							<Action>
								<CallFunction>
									<Reference>CHECK_RESET_FAIL</Reference>
								</CallFunction>
							</Action>
							<ReturnValue>
								<OnSuccess>
									<Type>Success</Type>
									<Value Param0="c_CommFaultReason">Expected CommFaultReason ({0}) received</Value>
								</OnSuccess>
							</ReturnValue>
						</TestStep>
					</TestSteps>
				</TestCase>
				<TestCase Name="#3.43 CONN_Reset1" CaseId="43">
					<Comment>Reset-Kommando vom Master mit CommFaultReason = 255</Comment>
					<CaseVariables>
						<Variable>
							<Name>c_CommFaultReason</Name>
							<Type>Byte</Type>
						</Variable>
						<Variable>
							<Name>c_tmpByte</Name>
							<Type>Byte</Type>
						</Variable>
						<Variable>
							<Name>c_tmpCommFaultReason</Name>
							<Type>Byte</Type>
						</Variable>
						<Variable>
							<Name>c_safeData[SafeDataLength]</Name>
							<Type>ArrayOfBytes</Type>
						</Variable>
					</CaseVariables>
					<TestSteps>
						<TestStep Name="SetVariables">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>c_CommFaultReason</Destination>
										<Source>0</Source>
									</SetVariable>
									<SetVariable>
										<Destination>c_tmpByte</Destination>
										<Source>0</Source>
									</SetVariable>
									<SetVariable>
										<Destination>t_masterSessionId</Destination>
										<Source>1</Source>
									</SetVariable>
								</SetVariables>
							</Action>
						</TestStep>
						<TestStep Name="SetConnectionData">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>t_connectionId</Destination>
										<Source>3</Source>
									</SetVariable>
									<SetVariable>
										<Destination DestinationIndex="0">t_connData</Destination>
										<Source>t_connectionId</Source>
									</SetVariable>
									<SetVariable>
										<Destination DestinationIndex="2">t_connData</Destination>
										<Source>ConnData.SlaveAddress</Source>
									</SetVariable>
								</SetVariables>
							</Action>
							<Informations2>
								<Information>
									<Type>Output</Type>
									<Value Param0="t_connectionId" Param1="ConnData.SlaveAddress" Param2="t_connData">ConnectionId: {0} (0x{0:x4}), Slave Address: {1} (0x{1:x4}), Connection Data {2}</Value>
								</Information>
							</Informations2>
						</TestStep>
						<TestStep Name="SetParameterData">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>t_safePara</Destination>
										<Source>SafePara</Source>
									</SetVariable>
									<SetVariable>
										<Destination>t_watchdog</Destination>
										<Source>SafePara.Watchdog</Source>
									</SetVariable>
								</SetVariables>
							</Action>
							<Informations2>
								<Information>
									<Type>Output</Type>
									<Value Param0="t_watchdog" Param1="SafeParaSize" Param2="t_safePara">Watchdog: {0} ms, SafeParaSize: {1}, Safe Parameter {2}</Value>
								</Information>
							</Informations2>
						</TestStep>
						<TestStep Name="GotoConnection">
							<Action>
								<CallFunction>
									<Reference>RUN_DUT_TO_CONNECTION</Reference>
								</CallFunction>
							</Action>
						</TestStep>
						<TestStep Name="SetMasterFrameData">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>t_connectionId</Destination>
										<Source>0</Source>
									</SetVariable>
									<SetVariable>
										<Destination>t_masterSeqNo</Destination>
										<Source>1</Source>
									</SetVariable>
									<SetVariable>
										<Destination>LastCrc</Destination>
										<Source>0</Source>
									</SetVariable>
									<SetVariable>
										<Destination>OldMasterCrc</Destination>
										<Source>0</Source>
									</SetVariable>
									<SetVariable>
										<Destination>c_tmpCommFaultReason</Destination>
										<Source>255</Source>
									</SetVariable>
									<SetVariable>
										<Destination DestinationIndex="0">c_safeData</Destination>
										<Source>c_tmpCommFaultReason</Source>
									</SetVariable>
								</SetVariables>
							</Action>
						</TestStep>
						<TestStep Name="SetFrame">
							<Informations1>
								<Information>
									<Type>Verbose</Type>
									<Value Param0="c_safeData" Param1="LastCrc" Param2="t_masterSeqNo" Param3="OldMasterCrc" Param4="0">SetFrame(Command Reset, SafeData {0}, LastCrc 0x{1:x4}, ConnectionId 0x{4:x4},  SequenceNo 0x{2:x4}, OldCrc 0x{3:x4}, New false</Value>
								</Information>
							</Informations1>
							<Action>
								<SetFrame Name="t_masterFrame">
									<Command>
										<CommandValue>Reset</CommandValue>
									</Command>
									<SafeData>
										<SafeDataVariable>c_safeData</SafeDataVariable>
									</SafeData>
									<LastCRC>LastCrc</LastCRC>
									<ConnectionID>
										<UshortValue>0</UshortValue>
									</ConnectionID>
									<SequenceNo>t_masterSeqNo</SequenceNo>
									<OldCRC>OldMasterCrc</OldCRC>
									<New>false</New>
								</SetFrame>
							</Action>
						</TestStep>
						<TestStep Name="SendFrame">
							<Action>
								<SendFrame Name="t_masterFrame"/>
							</Action>
							<Informations2>
								<Information>
									<Type>Verbose</Type>
									<Value Param0="t_masterFrame.FrameData">Master Frame: {0}</Value>
								</Information>
							</Informations2>
							<ReturnValue>
								<OnFailure>
									<Type>Error</Type>
									<Value>Failed to send FSoE frame!</Value>
									<Id>256</Id>
								</OnFailure>
							</ReturnValue>
						</TestStep>
						<TestStep Name="CheckReceivedSlaveFrame">
							<Action>
								<CallFunction>
									<Reference>CHECK_RESET_FAIL</Reference>
								</CallFunction>
							</Action>
							<ReturnValue>
								<OnSuccess>
									<Type>Success</Type>
									<Value Param0="c_CommFaultReason">Expected CommFaultReason ({0}) received</Value>
								</OnSuccess>
							</ReturnValue>
						</TestStep>
					</TestSteps>
				</TestCase>
				<TestCase Name="#3.44 CONN_Reset2" CaseId="44">
					<Comment>Rücksetzen der Connection vom Master, nach Session</Comment>
					<CaseVariables>
						<Variable>
							<Name>c_sessionId1_Slave</Name>
							<Type>UInt16</Type>
						</Variable>
						<Variable>
							<Name>c_tmpByte</Name>
							<Type>Byte</Type>
						</Variable>
					</CaseVariables>
					<TestSteps>
						<TestStep Name="SetVariables">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>SecondSessionFrameSent</Destination>
										<Source>false</Source>
									</SetVariable>
									<SetVariable>
										<Destination>t_expectedConnId</Destination>
										<Source>0</Source>
									</SetVariable>
									<SetVariable>
										<Destination>t_masterSessionId</Destination>
										<Source>1</Source>
									</SetVariable>
								</SetVariables>
							</Action>
							<Compares>
								<Compare>
									<Condition>
										<Value1>SafeDataLength</Value1>
										<Operator>NotEqual</Operator>
										<Value2>1</Value2>
									</Condition>
									<Statement>
										<SetVariables>
											<SetVariable>
												<Destination>SecondSessionFrameSent</Destination>
												<Source>true</Source>
											</SetVariable>
										</SetVariables>
									</Statement>
								</Compare>
							</Compares>
						</TestStep>
						<TestStep Name="SetConnectionData">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>t_connectionId</Destination>
										<Source>3</Source>
									</SetVariable>
									<SetVariable>
										<Destination DestinationIndex="0">t_connData</Destination>
										<Source>t_connectionId</Source>
									</SetVariable>
									<SetVariable>
										<Destination DestinationIndex="2">t_connData</Destination>
										<Source>ConnData.SlaveAddress</Source>
									</SetVariable>
								</SetVariables>
							</Action>
							<Informations2>
								<Information>
									<Type>Output</Type>
									<Value Param0="t_connectionId" Param1="ConnData.SlaveAddress" Param2="t_connData">ConnectionId: {0} (0x{0:x4}), Slave Address: {1} (0x{1:x4}), Connection Data {2}</Value>
								</Information>
							</Informations2>
						</TestStep>
						<TestStep Name="SetParameterData">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>t_commParaLength</Destination>
										<Source>2</Source>
									</SetVariable>
									<SetVariable>
										<Destination>t_watchdog</Destination>
										<Source>SafePara.Watchdog</Source>
									</SetVariable>
									<SetVariable>
										<Destination>t_safeParaSize</Destination>
										<Source>SafeParaSize</Source>
									</SetVariable>
									<SetVariable>
										<Destination DestinationIndex="0">t_safePara</Destination>
										<Source>t_commParaLength</Source>
									</SetVariable>
									<SetVariable>
										<Destination DestinationIndex="2">t_safePara</Destination>
										<Source>t_watchdog</Source>
									</SetVariable>
								</SetVariables>
							</Action>
							<Informations2>
								<Information>
									<Type>Output</Type>
									<Value Param0="t_commParaLength" Param1="t_watchdog" Param2="t_safeParaSize" Param3="t_safePara">Communication Parameter Length:  {0} (0x{0:x4}), Watchdog: {1}, SafeParaSize: {2}, Safe Parameter {3}</Value>
								</Information>
							</Informations2>
						</TestStep>
						<TestStep Name="GotoConnection">
							<Action>
								<CallFunction>
									<Reference>RUN_DUT_TO_CONNECTION</Reference>
								</CallFunction>
							</Action>
						</TestStep>
						<TestStep Name="StoreSlaveSessionId1">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>c_sessionId1_Slave</Destination>
										<Source>t_slaveSessionId</Source>
									</SetVariable>
									<SetVariable>
										<Destination>t_index</Destination>
										<Source>0</Source>
									</SetVariable>
								</SetVariables>
							</Action>
							<Informations2>
								<Information>
									<Type>Output</Type>
									<Value Param0="t_slaveSessionId">Slave SessionId1: 0x{0:x4}</Value>
								</Information>
							</Informations2>
						</TestStep>
						<TestStep Name="ResetSecondSessionFrameSent">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>SecondSessionFrameSent</Destination>
										<Source>false</Source>
									</SetVariable>
								</SetVariables>
							</Action>
							<Compares>
								<Compare>
									<Condition>
										<Value1>SafeDataLength</Value1>
										<Operator>NotEqual</Operator>
										<Value2>1</Value2>
									</Condition>
									<Statement>
										<SetVariables>
											<SetVariable>
												<Destination>SecondSessionFrameSent</Destination>
												<Source>true</Source>
											</SetVariable>
										</SetVariables>
									</Statement>
								</Compare>
							</Compares>
						</TestStep>
						<TestStep Name="SetSessionId">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>t_masterSessionId</Destination>
										<Source>1</Source>
									</SetVariable>
								</SetVariables>
							</Action>
						</TestStep>
						<TestStep Name="CallConnectionReset1">
							<Action>
								<CallFunction>
									<Reference>CONN_RESET1</Reference>
								</CallFunction>
							</Action>
						</TestStep>
						<TestStep Name="ReceiveEvent">
							<Event>
								<ReceiveFrame>t_slaveFrame</ReceiveFrame>
							</Event>
							<Informations2>
								<Information>
									<Type>Verbose</Type>
									<Value Param0="t_slaveFrame.FrameData">Slave Frame: {0}</Value>
								</Information>
							</Informations2>
						</TestStep>
						<TestStep Name="CheckWatchdog">
							<Event>
								<WatchdogExpired>
									<SetVariables>
										<SetVariable>
											<Destination>t_wdExpired</Destination>
											<Source>true</Source>
										</SetVariable>
									</SetVariables>
								</WatchdogExpired>
							</Event>
							<Compares>
								<Compare>
									<Condition>
										<Value1>t_wdExpired</Value1>
										<Operator>Equal</Operator>
										<Value2>true</Value2>
									</Condition>
									<Statement>
										<SetVariables>
											<SetVariable>
												<Destination>t_wdExpired</Destination>
												<Source>false</Source>
											</SetVariable>
										</SetVariables>
									</Statement>
									<Statement>
										<Return>
											<Type>Error</Type>
											<Value Param0="ElapsedWD">Watchdog expired! {0} ms </Value>
											<Id>5</Id>
										</Return>
									</Statement>
								</Compare>
							</Compares>
						</TestStep>
						<TestStep Name="CheckReceivedCrc">
							<Informations1>
								<Information>
									<Type>Verbose</Type>
									<Value Param0="t_slaveFrame.FrameData" Param1="LastCrc" Param2="t_slaveSeqNo" Param3="t_oldSlaveCrc" Param4="true">IsCrcCorrect(Frame {0}, LastCrc 0x{1:X4}, SeqNo {2}, OldCrc 0x{3:X4}, New {4})</Value>
								</Information>
							</Informations1>
							<Action>
								<IsCrcCorrect ReturnValue="crcCorrect">
									<Frame>t_slaveFrame</Frame>
									<LastCrc>LastCrc</LastCrc>
									<SequenceNo>t_slaveSeqNo</SequenceNo>
									<OldCrc>t_oldSlaveCrc</OldCrc>
									<New>true</New>
								</IsCrcCorrect>
							</Action>
							<ReturnValue>
								<OnFailure>
									<Type>Error</Type>
									<Value Param0="t_slaveFrame.Crc0">Invalid Crc0 reveived ({0:x})</Value>
									<Id>4</Id>
								</OnFailure>
							</ReturnValue>
						</TestStep>
						<TestStep Name="CheckSessionConditions">
							<Compares>
								<Compare>
									<Condition>
										<Value1>t_slaveFrame.ConnId</Value1>
										<Operator>NotEqual</Operator>
										<Value2>t_expectedConnId</Value2>
									</Condition>
									<Statement>
										<Return>
											<Type>Error</Type>
											<Value Param0="t_slaveFrame.ConnId">Invalid ConnId received  {0}, expected 0</Value>
											<Id>3</Id>
										</Return>
									</Statement>
								</Compare>
								<Compare>
									<Condition>
										<Value1>t_slaveFrame.Command</Value1>
										<Operator>Equal</Operator>
										<Value2>Session</Value2>
									</Condition>
									<Condition>
										<Value1>BytesToBeSent</Value1>
										<Operator>Equal</Operator>
										<Value2>0</Value2>
									</Condition>
									<Condition>
										<Value1>crcCorrect</Value1>
										<Operator>Equal</Operator>
										<Value2>true</Value2>
									</Condition>
									<Statement>
										<SetVariables>
											<SetVariable>
												<Destination DestinationIndex="t_index">t_slaveSessionId</Destination>
												<Source>t_slaveFrame.SafeData</Source>
											</SetVariable>
										</SetVariables>
									</Statement>
									<Statement>
										<CallFunction>CHECK_REMAINING_SAFE_DATA_IN_SESSION</CallFunction>
									</Statement>
									<Statement>
										<GotoStep>CompareSlaveSessionIds</GotoStep>
									</Statement>
								</Compare>
								<Compare>
									<Condition>
										<Value1>t_slaveFrame.Command</Value1>
										<Operator>Equal</Operator>
										<Value2>Session</Value2>
									</Condition>
									<Condition>
										<Value1>crcCorrect</Value1>
										<Operator>Equal</Operator>
										<Value2>false</Value2>
									</Condition>
									<Condition>
										<Value1>SecondSessionFrameSent</Value1>
										<Operator>Equal</Operator>
										<Value2>true</Value2>
									</Condition>
									<Statement>
										<Return>
											<Type>Error</Type>
											<Value>Invalid Crc received</Value>
											<Id>4</Id>
										</Return>
									</Statement>
								</Compare>
								<Compare>
									<Condition>
										<Value1>t_slaveFrame.Command</Value1>
										<Operator>Equal</Operator>
										<Value2>Session</Value2>
									</Condition>
									<Condition>
										<Value1>crcCorrect</Value1>
										<Operator>Equal</Operator>
										<Value2>false</Value2>
									</Condition>
									<Condition>
										<Value1>SecondSessionFrameSent</Value1>
										<Operator>Equal</Operator>
										<Value2>false</Value2>
									</Condition>
									<Statement>
										<CallFunction>SESSION_STAY2</CallFunction>
									</Statement>
									<Statement>
										<GotoStep>ReceiveEvent</GotoStep>
									</Statement>
								</Compare>
								<Compare>
									<Condition>
										<Value1>t_slaveFrame.Command</Value1>
										<Operator>Equal</Operator>
										<Value2>Session</Value2>
									</Condition>
									<Condition>
										<Value1>BytesToBeSent</Value1>
										<Operator>NotEqual</Operator>
										<Value2>0</Value2>
									</Condition>
									<Condition>
										<Value1>crcCorrect</Value1>
										<Operator>Equal</Operator>
										<Value2>true</Value2>
									</Condition>
									<Statement>
										<SetVariables>
											<SetVariable>
												<Destination DestinationIndex="t_index">t_slaveSessionId</Destination>
												<Source>t_slaveFrame.SafeData</Source>
											</SetVariable>
										</SetVariables>
									</Statement>
									<Statement>
										<CallFunction>SESSION_STAY1</CallFunction>
									</Statement>
									<Statement>
										<SetVariables>
											<SetVariable>
												<Destination>t_index</Destination>
												<Source>t_index+SafeDataLength</Source>
											</SetVariable>
										</SetVariables>
									</Statement>
									<Statement>
										<CallFunction>CHECK_REMAINING_SAFE_DATA_IN_SESSION</CallFunction>
									</Statement>
									<Statement>
										<GotoStep>ReceiveEvent</GotoStep>
									</Statement>
								</Compare>
								<Compare>
									<Condition>
										<Value1>t_slaveFrame.Command</Value1>
										<Operator>Equal</Operator>
										<Value2>Reset</Value2>
									</Condition>
									<Statement>
										<Return>
											<Type>Error</Type>
											<Value>Invalid CMD(Reset) received</Value>
											<Id>1</Id>
										</Return>
									</Statement>
								</Compare>
								<Compare>
									<Condition>
										<Value1>t_slaveFrame.Command</Value1>
										<Operator>Equal</Operator>
										<Value2>Connection</Value2>
									</Condition>
									<Statement>
										<Return>
											<Type>Error</Type>
											<Value>Invalid CMD(Connection) received</Value>
											<Id>1</Id>
										</Return>
									</Statement>
								</Compare>
								<Compare>
									<Condition>
										<Value1>t_slaveFrame.Command</Value1>
										<Operator>Equal</Operator>
										<Value2>Parameter</Value2>
									</Condition>
									<Statement>
										<Return>
											<Type>Error</Type>
											<Value>Invalid CMD (Parameter) received</Value>
											<Id>1</Id>
										</Return>
									</Statement>
								</Compare>
								<Compare>
									<Condition>
										<Value1>t_slaveFrame.Command</Value1>
										<Operator>Equal</Operator>
										<Value2>ProcessData</Value2>
									</Condition>
									<Statement>
										<Return>
											<Type>Error</Type>
											<Value>Invalid CMD (ProcessData) received</Value>
											<Id>1</Id>
										</Return>
									</Statement>
								</Compare>
								<Compare>
									<Condition>
										<Value1>t_slaveFrame.Command</Value1>
										<Operator>Equal</Operator>
										<Value2>FailSafeData</Value2>
									</Condition>
									<Statement>
										<Return>
											<Type>Error</Type>
											<Value>Invalid CMD (FailSafeData) received</Value>
											<Id>1</Id>
										</Return>
									</Statement>
								</Compare>
								<Compare>
									<Condition>
										<Value1>t_slaveFrame.Command</Value1>
										<Operator>NotEqual</Operator>
										<Value2>Reset</Value2>
									</Condition>
									<Condition>
										<Value1>t_slaveFrame.Command</Value1>
										<Operator>NotEqual</Operator>
										<Value2>Session</Value2>
									</Condition>
									<Condition>
										<Value1>t_slaveFrame.Command</Value1>
										<Operator>NotEqual</Operator>
										<Value2>Connection</Value2>
									</Condition>
									<Condition>
										<Value1>t_slaveFrame.Command</Value1>
										<Operator>NotEqual</Operator>
										<Value2>Parameter</Value2>
									</Condition>
									<Condition>
										<Value1>t_slaveFrame.Command</Value1>
										<Operator>NotEqual</Operator>
										<Value2>ProcessData</Value2>
									</Condition>
									<Condition>
										<Value1>t_slaveFrame.Command</Value1>
										<Operator>NotEqual</Operator>
										<Value2>FailSafeData</Value2>
									</Condition>
									<Statement>
										<Return>
											<Type>Error</Type>
											<Value>Unknown CMD received</Value>
											<Id>2</Id>
										</Return>
									</Statement>
								</Compare>
							</Compares>
						</TestStep>
						<TestStep Name="CompareSlaveSessionIds">
							<Compares>
								<Compare>
									<Condition>
										<Value1>c_sessionId1_Slave</Value1>
										<Operator>NotEqual</Operator>
										<Value2>t_slaveSessionId</Value2>
									</Condition>
									<Statement>
										<Return>
											<Type>Success</Type>
											<Value>DUT State: Session</Value>
										</Return>
									</Statement>
								</Compare>
								<Compare>
									<Condition>
										<Value1>c_sessionId1_Slave</Value1>
										<Operator>Equal</Operator>
										<Value2>t_slaveSessionId</Value2>
									</Condition>
									<Statement>
										<Return>
											<Type>Error</Type>
											<Value Param0="c_sessionId1_Slave" Param1="t_slaveSessionId">Slave SessionId1 (0x{0:x4}) = Slave SessionId2 (0x{1:x4})</Value>
										</Return>
									</Statement>
								</Compare>
							</Compares>
							<Informations2>
								<Information>
									<Type>Output</Type>
									<Value Param0="t_slaveSessionId">Slave SessionId2: 0x{0:x4}</Value>
								</Information>
							</Informations2>
						</TestStep>
					</TestSteps>
				</TestCase>
			</TestCases>
		</TestGroup>
		<TestGroup Name="#4 Parameter State" GroupId="4">
			<Comment>Tests the Parameter State</Comment>
			<TestCases>
				<TestCase Name="#4.1/4.3 Para_Ok1" CaseId="1">
					<Comment>normaler Hochlauf mit ProcessData</Comment>
					<CaseVariables>
						<Variable>
							<Name>c_tmpByte</Name>
							<Type>Byte</Type>
						</Variable>
					</CaseVariables>
					<TestSteps>
						<TestStep Name="SetSessionId">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>t_masterSessionId</Destination>
										<Source>1</Source>
									</SetVariable>
								</SetVariables>
							</Action>
						</TestStep>
						<TestStep Name="SetConnectionData">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>t_connectionId</Destination>
										<Source>3</Source>
									</SetVariable>
									<SetVariable>
										<Destination DestinationIndex="0">t_connData</Destination>
										<Source>t_connectionId</Source>
									</SetVariable>
									<SetVariable>
										<Destination DestinationIndex="2">t_connData</Destination>
										<Source>ConnData.SlaveAddress</Source>
									</SetVariable>
								</SetVariables>
							</Action>
							<Informations2>
								<Information>
									<Type>Output</Type>
									<Value Param0="t_connectionId" Param1="ConnData.SlaveAddress" Param2="t_connData">ConnectionId: {0} (0x{0:x4}), Slave Address: {1} (0x{1:x4}), Connection Data {2}</Value>
								</Information>
							</Informations2>
						</TestStep>
						<TestStep Name="SetParameterData">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>t_safePara</Destination>
										<Source>SafePara</Source>
									</SetVariable>
									<SetVariable>
										<Destination>t_watchdog</Destination>
										<Source>SafePara.Watchdog</Source>
									</SetVariable>
								</SetVariables>
							</Action>
							<Informations2>
								<Information>
									<Type>Output</Type>
									<Value Param0="t_watchdog" Param1="SafeParaSize" Param2="t_safePara">Watchdog: {0} ms, SafeParaSize: {1}, Safe Parameter {2}</Value>
								</Information>
							</Informations2>
						</TestStep>
						<TestStep Name="GotoData">
							<Action>
								<CallFunction>
									<Reference>RUN_DUT_TO_PROCESSDATA</Reference>
								</CallFunction>
							</Action>
							<ReturnValue>
								<OnSuccess>
									<Type>Success</Type>
									<Value>DUT State: Data</Value>
								</OnSuccess>
							</ReturnValue>
						</TestStep>
					</TestSteps>
				</TestCase>
				<TestCase Name="#4.2/4.3 Para_Ok2" CaseId="2">
					<Comment>normaler Hochlauf mit FailSafeData</Comment>
					<CaseVariables>
						<Variable>
							<Name>c_tmpByte</Name>
							<Type>Byte</Type>
						</Variable>
					</CaseVariables>
					<TestSteps>
						<TestStep Name="SetSessionId">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>t_masterSessionId</Destination>
										<Source>1</Source>
									</SetVariable>
								</SetVariables>
							</Action>
						</TestStep>
						<TestStep Name="SetDataCmd">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>DataCommand</Destination>
										<Source>FailSafeData</Source>
									</SetVariable>
								</SetVariables>
							</Action>
						</TestStep>
						<TestStep Name="SetConnectionData">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>t_connectionId</Destination>
										<Source>3</Source>
									</SetVariable>
									<SetVariable>
										<Destination DestinationIndex="0">t_connData</Destination>
										<Source>t_connectionId</Source>
									</SetVariable>
									<SetVariable>
										<Destination DestinationIndex="2">t_connData</Destination>
										<Source>ConnData.SlaveAddress</Source>
									</SetVariable>
								</SetVariables>
							</Action>
							<Informations2>
								<Information>
									<Type>Output</Type>
									<Value Param0="t_connectionId" Param1="ConnData.SlaveAddress" Param2="t_connData">ConnectionId: {0} (0x{0:x4}), Slave Address: {1} (0x{1:x4}), Connection Data {2}</Value>
								</Information>
							</Informations2>
						</TestStep>
						<TestStep Name="SetParameterData">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>t_safePara</Destination>
										<Source>SafePara</Source>
									</SetVariable>
									<SetVariable>
										<Destination>t_watchdog</Destination>
										<Source>SafePara.Watchdog</Source>
									</SetVariable>
								</SetVariables>
							</Action>
							<Informations2>
								<Information>
									<Type>Output</Type>
									<Value Param0="t_watchdog" Param1="SafeParaSize" Param2="t_safePara">Watchdog: {0} ms, SafeParaSize: {1}, Safe Parameter {2}</Value>
								</Information>
							</Informations2>
						</TestStep>
						<TestStep Name="GotoData">
							<Action>
								<CallFunction>
									<Reference>RUN_DUT_TO_DATA</Reference>
								</CallFunction>
							</Action>
							<ReturnValue>
								<OnSuccess>
									<Type>Success</Type>
									<Value>DUT State: Data</Value>
								</OnSuccess>
							</ReturnValue>
						</TestStep>
					</TestSteps>
				</TestCase>
				<TestCase Name="#4.4 Para_Fail1" CaseId="4">
					<Comment>Falsche CRC_0 (+1); Command = ProcessData; SafeData = SafeOutputs</Comment>
					<CaseVariables>
						<Variable>
							<Name>c_crcIndex</Name>
							<Type>Int32</Type>
						</Variable>
						<Variable>
							<Name>c_CommFaultReason</Name>
							<Type>Byte</Type>
						</Variable>
						<Variable>
							<Name>c_tmpByte</Name>
							<Type>Byte</Type>
						</Variable>
					</CaseVariables>
					<TestSteps>
						<TestStep Name="SetVariables">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>c_CommFaultReason</Destination>
										<Source>INVALID_CRC</Source>
									</SetVariable>
									<SetVariable>
										<Destination>c_tmpByte</Destination>
										<Source>0</Source>
									</SetVariable>
									<SetVariable>
										<Destination>t_wdExpired</Destination>
										<Source>false</Source>
									</SetVariable>
									<SetVariable>
										<Destination>t_masterSessionId</Destination>
										<Source>1</Source>
									</SetVariable>
								</SetVariables>
							</Action>
						</TestStep>
						<TestStep Name="SetConnectionData">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>t_connectionId</Destination>
										<Source>3</Source>
									</SetVariable>
									<SetVariable>
										<Destination DestinationIndex="0">t_connData</Destination>
										<Source>t_connectionId</Source>
									</SetVariable>
									<SetVariable>
										<Destination DestinationIndex="2">t_connData</Destination>
										<Source>ConnData.SlaveAddress</Source>
									</SetVariable>
								</SetVariables>
							</Action>
							<Informations2>
								<Information>
									<Type>Output</Type>
									<Value Param0="t_connectionId" Param1="ConnData.SlaveAddress" Param2="t_connData">ConnectionId: {0} (0x{0:x4}), Slave Address: {1} (0x{1:x4}), Connection Data {2}</Value>
								</Information>
							</Informations2>
						</TestStep>
						<TestStep Name="SetParameterData">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>t_safePara</Destination>
										<Source>SafePara</Source>
									</SetVariable>
									<SetVariable>
										<Destination>t_watchdog</Destination>
										<Source>SafePara.Watchdog</Source>
									</SetVariable>
								</SetVariables>
							</Action>
							<Informations2>
								<Information>
									<Type>Output</Type>
									<Value Param0="t_watchdog" Param1="SafeParaSize" Param2="t_safePara">Watchdog: {0} ms, SafeParaSize: {1}, Safe Parameter {2}</Value>
								</Information>
							</Informations2>
						</TestStep>
						<TestStep Name="GotoParameter">
							<Action>
								<CallFunction>
									<Reference>RUN_DUT_TO_PARAMETER</Reference>
								</CallFunction>
							</Action>
						</TestStep>
						<TestStep Name="SetLastCrc">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>LastCrc</Destination>
										<Source>t_slaveFrame.Crc0</Source>
									</SetVariable>
								</SetVariables>
							</Action>
						</TestStep>
						<TestStep Name="SetFrame">
							<Informations1>
								<Information>
									<Type>Verbose</Type>
									<Value Param0="SafeOutputs" Param1="LastCrc" Param2="t_masterSeqNo" Param3="OldMasterCrc" Param4="t_connectionId">SetFrame(Command Processdata, SafeData {0}, LastCrc 0x{1:x4}, ConnectionId 0x{4:x4},  SequenceNo 0x{2:x4}, OldCrc 0x{3:x4}, New true</Value>
								</Information>
							</Informations1>
							<Action>
								<SetFrame Name="t_masterFrame">
									<Command>
										<CommandValue>Data</CommandValue>
									</Command>
									<SafeData>
										<SafeDataVariable>SafeOutputs</SafeDataVariable>
									</SafeData>
									<LastCRC>LastCrc</LastCRC>
									<ConnectionID>
										<ConnectionIdVariable>t_connectionId</ConnectionIdVariable>
									</ConnectionID>
									<SequenceNo>t_masterSeqNo</SequenceNo>
									<OldCRC>OldMasterCrc</OldCRC>
									<New>true</New>
								</SetFrame>
							</Action>
							<ReturnValue>
								<OnFailure>
									<Type>Error</Type>
									<Value>Failed to set FSoE frame!</Value>
									<Id>256</Id>
								</OnFailure>
							</ReturnValue>
						</TestStep>
						<TestStep Name="SetInvalidCrc0">
							<Informations1>
								<Information>
									<Type>Output</Type>
									<Value Param0="t_masterFrame.Crc0">Valid Crc0 = 0x{0:x4}</Value>
								</Information>
							</Informations1>
							<Action>
								<CallFunction>
									<Reference>INCREMENT_CRC_0</Reference>
								</CallFunction>
							</Action>
							<Informations2>
								<Information>
									<Type>Output</Type>
									<Value Param0="t_masterFrame.Crc0">Falsified Crc0 = 0x{0:x4}</Value>
								</Information>
							</Informations2>
						</TestStep>
						<TestStep Name="SendFrame">
							<Action>
								<SendFrame Name="t_masterFrame"/>
							</Action>
							<Informations2>
								<Information>
									<Type>Verbose</Type>
									<Value Param0="t_masterFrame.FrameData">Master Frame: {0}</Value>
								</Information>
							</Informations2>
							<ReturnValue>
								<OnFailure>
									<Type>Error</Type>
									<Value>Failed to send FSoE frame!</Value>
									<Id>256</Id>
								</OnFailure>
							</ReturnValue>
						</TestStep>
						<TestStep Name="CheckReceivedSlaveFrame">
							<Action>
								<CallFunction>
									<Reference>CHECK_RESET_FAIL</Reference>
								</CallFunction>
							</Action>
							<ReturnValue>
								<OnSuccess>
									<Type>Success</Type>
									<Value Param0="c_CommFaultReason">Expected CommFaultReason ({0}) received</Value>
								</OnSuccess>
							</ReturnValue>
						</TestStep>
					</TestSteps>
				</TestCase>
				<TestCase Name="#4.5 Para_Fail1" CaseId="5">
					<Comment>Falsche CRC_0 (-1); Command = ProcessData; SafeData = SafeOutputs</Comment>
					<CaseVariables>
						<Variable>
							<Name>c_crcIndex</Name>
							<Type>Int32</Type>
						</Variable>
						<Variable>
							<Name>c_CommFaultReason</Name>
							<Type>Byte</Type>
						</Variable>
						<Variable>
							<Name>c_tmpByte</Name>
							<Type>Byte</Type>
						</Variable>
					</CaseVariables>
					<TestSteps>
						<TestStep Name="SetVariables">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>c_CommFaultReason</Destination>
										<Source>INVALID_CRC</Source>
									</SetVariable>
									<SetVariable>
										<Destination>c_tmpByte</Destination>
										<Source>0</Source>
									</SetVariable>
									<SetVariable>
										<Destination>t_wdExpired</Destination>
										<Source>false</Source>
									</SetVariable>
									<SetVariable>
										<Destination>t_masterSessionId</Destination>
										<Source>1</Source>
									</SetVariable>
								</SetVariables>
							</Action>
						</TestStep>
						<TestStep Name="SetConnectionData">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>t_connectionId</Destination>
										<Source>3</Source>
									</SetVariable>
									<SetVariable>
										<Destination DestinationIndex="0">t_connData</Destination>
										<Source>t_connectionId</Source>
									</SetVariable>
									<SetVariable>
										<Destination DestinationIndex="2">t_connData</Destination>
										<Source>ConnData.SlaveAddress</Source>
									</SetVariable>
								</SetVariables>
							</Action>
							<Informations2>
								<Information>
									<Type>Output</Type>
									<Value Param0="t_connectionId" Param1="ConnData.SlaveAddress" Param2="t_connData">ConnectionId: {0} (0x{0:x4}), Slave Address: {1} (0x{1:x4}), Connection Data {2}</Value>
								</Information>
							</Informations2>
						</TestStep>
						<TestStep Name="SetParameterData">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>t_safePara</Destination>
										<Source>SafePara</Source>
									</SetVariable>
									<SetVariable>
										<Destination>t_watchdog</Destination>
										<Source>SafePara.Watchdog</Source>
									</SetVariable>
								</SetVariables>
							</Action>
							<Informations2>
								<Information>
									<Type>Output</Type>
									<Value Param0="t_watchdog" Param1="SafeParaSize" Param2="t_safePara">Watchdog: {0} ms, SafeParaSize: {1}, Safe Parameter {2}</Value>
								</Information>
							</Informations2>
						</TestStep>
						<TestStep Name="GotoParameter">
							<Action>
								<CallFunction>
									<Reference>RUN_DUT_TO_PARAMETER</Reference>
								</CallFunction>
							</Action>
						</TestStep>
						<TestStep Name="SetLastCrc">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>LastCrc</Destination>
										<Source>t_slaveFrame.Crc0</Source>
									</SetVariable>
								</SetVariables>
							</Action>
						</TestStep>
						<TestStep Name="SetFrame">
							<Informations1>
								<Information>
									<Type>Verbose</Type>
									<Value Param0="SafeOutputs" Param1="LastCrc" Param2="t_masterSeqNo" Param3="OldMasterCrc" Param4="t_connectionId">SetFrame(Command Processdata, SafeData {0}, LastCrc 0x{1:x4}, ConnectionId 0x{4:x4},  SequenceNo 0x{2:x4}, OldCrc 0x{3:x4}, New true</Value>
								</Information>
							</Informations1>
							<Action>
								<SetFrame Name="t_masterFrame">
									<Command>
										<CommandValue>Data</CommandValue>
									</Command>
									<SafeData>
										<SafeDataVariable>SafeOutputs</SafeDataVariable>
									</SafeData>
									<LastCRC>LastCrc</LastCRC>
									<ConnectionID>
										<ConnectionIdVariable>t_connectionId</ConnectionIdVariable>
									</ConnectionID>
									<SequenceNo>t_masterSeqNo</SequenceNo>
									<OldCRC>OldMasterCrc</OldCRC>
									<New>true</New>
								</SetFrame>
							</Action>
							<ReturnValue>
								<OnFailure>
									<Type>Error</Type>
									<Value>Failed to set FSoE frame!</Value>
									<Id>256</Id>
								</OnFailure>
							</ReturnValue>
						</TestStep>
						<TestStep Name="SetInvalidCrc0">
							<Informations1>
								<Information>
									<Type>Output</Type>
									<Value Param0="t_masterFrame.Crc0">Valid Crc0 = 0x{0:x4}</Value>
								</Information>
							</Informations1>
							<Action>
								<CallFunction>
									<Reference>DECREMENT_CRC_0</Reference>
								</CallFunction>
							</Action>
							<Informations2>
								<Information>
									<Type>Output</Type>
									<Value Param0="t_masterFrame.Crc0">Falsified Crc0 = 0x{0:x4}</Value>
								</Information>
							</Informations2>
						</TestStep>
						<TestStep Name="SendFrame">
							<Action>
								<SendFrame Name="t_masterFrame"/>
							</Action>
							<Informations2>
								<Information>
									<Type>Verbose</Type>
									<Value Param0="t_masterFrame.FrameData">Master Frame: {0}</Value>
								</Information>
							</Informations2>
							<ReturnValue>
								<OnFailure>
									<Type>Error</Type>
									<Value>Failed to send FSoE frame!</Value>
									<Id>256</Id>
								</OnFailure>
							</ReturnValue>
						</TestStep>
						<TestStep Name="CheckReceivedSlaveFrame">
							<Action>
								<CallFunction>
									<Reference>CHECK_RESET_FAIL</Reference>
								</CallFunction>
							</Action>
							<ReturnValue>
								<OnSuccess>
									<Type>Success</Type>
									<Value Param0="c_CommFaultReason">Expected CommFaultReason ({0}) received</Value>
								</OnSuccess>
							</ReturnValue>
						</TestStep>
					</TestSteps>
				</TestCase>
				<TestCase Name="#4.6 Para_Fail1" CaseId="6">
					<Comment>Falsche CRC_0 (+1); Command = FailSafeData; SafeData = FailSafeValue</Comment>
					<CaseVariables>
						<Variable>
							<Name>c_crcIndex</Name>
							<Type>Int32</Type>
						</Variable>
						<Variable>
							<Name>c_CommFaultReason</Name>
							<Type>Byte</Type>
						</Variable>
						<Variable>
							<Name>c_tmpByte</Name>
							<Type>Byte</Type>
						</Variable>
					</CaseVariables>
					<TestSteps>
						<TestStep Name="SetVariables">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>c_CommFaultReason</Destination>
										<Source>INVALID_CRC</Source>
									</SetVariable>
									<SetVariable>
										<Destination>c_tmpByte</Destination>
										<Source>0</Source>
									</SetVariable>
									<SetVariable>
										<Destination>t_wdExpired</Destination>
										<Source>false</Source>
									</SetVariable>
									<SetVariable>
										<Destination>t_masterSessionId</Destination>
										<Source>1</Source>
									</SetVariable>
								</SetVariables>
							</Action>
						</TestStep>
						<TestStep Name="SetConnectionData">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>t_connectionId</Destination>
										<Source>3</Source>
									</SetVariable>
									<SetVariable>
										<Destination DestinationIndex="0">t_connData</Destination>
										<Source>t_connectionId</Source>
									</SetVariable>
									<SetVariable>
										<Destination DestinationIndex="2">t_connData</Destination>
										<Source>ConnData.SlaveAddress</Source>
									</SetVariable>
								</SetVariables>
							</Action>
							<Informations2>
								<Information>
									<Type>Output</Type>
									<Value Param0="t_connectionId" Param1="ConnData.SlaveAddress" Param2="t_connData">ConnectionId: {0} (0x{0:x4}), Slave Address: {1} (0x{1:x4}), Connection Data {2}</Value>
								</Information>
							</Informations2>
						</TestStep>
						<TestStep Name="SetParameterData">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>t_safePara</Destination>
										<Source>SafePara</Source>
									</SetVariable>
									<SetVariable>
										<Destination>t_watchdog</Destination>
										<Source>SafePara.Watchdog</Source>
									</SetVariable>
								</SetVariables>
							</Action>
							<Informations2>
								<Information>
									<Type>Output</Type>
									<Value Param0="t_watchdog" Param1="SafeParaSize" Param2="t_safePara">Watchdog: {0} ms, SafeParaSize: {1}, Safe Parameter {2}</Value>
								</Information>
							</Informations2>
						</TestStep>
						<TestStep Name="GotoParameter">
							<Action>
								<CallFunction>
									<Reference>RUN_DUT_TO_PARAMETER</Reference>
								</CallFunction>
							</Action>
						</TestStep>
						<TestStep Name="SetLastCrc">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>LastCrc</Destination>
										<Source>t_slaveFrame.Crc0</Source>
									</SetVariable>
								</SetVariables>
							</Action>
						</TestStep>
						<TestStep Name="SetFrame">
							<Informations1>
								<Information>
									<Type>Verbose</Type>
									<Value Param0="FailSafeValue" Param1="LastCrc" Param2="t_masterSeqNo" Param3="OldMasterCrc" Param4="t_connectionId">SetFrame(Command FailSafeData, SafeData {0}, LastCrc 0x{1:x4}, ConnectionId 0x{4:x4},  SequenceNo 0x{2:x4}, OldCrc 0x{3:x4}, New true</Value>
								</Information>
							</Informations1>
							<Action>
								<SetFrame Name="t_masterFrame">
									<Command>
										<CommandValue>FailSafeData</CommandValue>
									</Command>
									<SafeData>
										<SafeDataVariable>FailSafeValue</SafeDataVariable>
									</SafeData>
									<LastCRC>LastCrc</LastCRC>
									<ConnectionID>
										<ConnectionIdVariable>t_connectionId</ConnectionIdVariable>
									</ConnectionID>
									<SequenceNo>t_masterSeqNo</SequenceNo>
									<OldCRC>OldMasterCrc</OldCRC>
									<New>true</New>
								</SetFrame>
							</Action>
							<ReturnValue>
								<OnFailure>
									<Type>Error</Type>
									<Value>Failed to set FSoE frame!</Value>
									<Id>256</Id>
								</OnFailure>
							</ReturnValue>
						</TestStep>
						<TestStep Name="SetInvalidCrc0">
							<Informations1>
								<Information>
									<Type>Output</Type>
									<Value Param0="t_masterFrame.Crc0">Valid Crc0 = 0x{0:x4}</Value>
								</Information>
							</Informations1>
							<Action>
								<CallFunction>
									<Reference>INCREMENT_CRC_0</Reference>
								</CallFunction>
							</Action>
							<Informations2>
								<Information>
									<Type>Output</Type>
									<Value Param0="t_masterFrame.Crc0">Falsified Crc0 = 0x{0:x4}</Value>
								</Information>
							</Informations2>
						</TestStep>
						<TestStep Name="SendFrame">
							<Action>
								<SendFrame Name="t_masterFrame"/>
							</Action>
							<Informations2>
								<Information>
									<Type>Verbose</Type>
									<Value Param0="t_masterFrame.FrameData">Master Frame: {0}</Value>
								</Information>
							</Informations2>
							<ReturnValue>
								<OnFailure>
									<Type>Error</Type>
									<Value>Failed to send FSoE frame!</Value>
									<Id>256</Id>
								</OnFailure>
							</ReturnValue>
						</TestStep>
						<TestStep Name="CheckReceivedSlaveFrame">
							<Action>
								<CallFunction>
									<Reference>CHECK_RESET_FAIL</Reference>
								</CallFunction>
							</Action>
							<ReturnValue>
								<OnSuccess>
									<Type>Success</Type>
									<Value Param0="c_CommFaultReason">Expected CommFaultReason ({0}) received</Value>
								</OnSuccess>
							</ReturnValue>
						</TestStep>
					</TestSteps>
				</TestCase>
				<TestCase Name="#4.7 Para_Fail1" CaseId="7">
					<Comment>Falsche CRC_0 (-1); Command = FailSafeData; SafeData = FailSafeValue</Comment>
					<CaseVariables>
						<Variable>
							<Name>c_crcIndex</Name>
							<Type>Int32</Type>
						</Variable>
						<Variable>
							<Name>c_CommFaultReason</Name>
							<Type>Byte</Type>
						</Variable>
						<Variable>
							<Name>c_tmpByte</Name>
							<Type>Byte</Type>
						</Variable>
					</CaseVariables>
					<TestSteps>
						<TestStep Name="SetVariables">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>c_CommFaultReason</Destination>
										<Source>INVALID_CRC</Source>
									</SetVariable>
									<SetVariable>
										<Destination>c_tmpByte</Destination>
										<Source>0</Source>
									</SetVariable>
									<SetVariable>
										<Destination>t_wdExpired</Destination>
										<Source>false</Source>
									</SetVariable>
									<SetVariable>
										<Destination>t_masterSessionId</Destination>
										<Source>1</Source>
									</SetVariable>
								</SetVariables>
							</Action>
						</TestStep>
						<TestStep Name="SetConnectionData">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>t_connectionId</Destination>
										<Source>3</Source>
									</SetVariable>
									<SetVariable>
										<Destination DestinationIndex="0">t_connData</Destination>
										<Source>t_connectionId</Source>
									</SetVariable>
									<SetVariable>
										<Destination DestinationIndex="2">t_connData</Destination>
										<Source>ConnData.SlaveAddress</Source>
									</SetVariable>
								</SetVariables>
							</Action>
							<Informations2>
								<Information>
									<Type>Output</Type>
									<Value Param0="t_connectionId" Param1="ConnData.SlaveAddress" Param2="t_connData">ConnectionId: {0} (0x{0:x4}), Slave Address: {1} (0x{1:x4}), Connection Data {2}</Value>
								</Information>
							</Informations2>
						</TestStep>
						<TestStep Name="SetParameterData">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>t_safePara</Destination>
										<Source>SafePara</Source>
									</SetVariable>
									<SetVariable>
										<Destination>t_watchdog</Destination>
										<Source>SafePara.Watchdog</Source>
									</SetVariable>
								</SetVariables>
							</Action>
							<Informations2>
								<Information>
									<Type>Output</Type>
									<Value Param0="t_watchdog" Param1="SafeParaSize" Param2="t_safePara">Watchdog: {0} ms, SafeParaSize: {1}, Safe Parameter {2}</Value>
								</Information>
							</Informations2>
						</TestStep>
						<TestStep Name="GotoParameter">
							<Action>
								<CallFunction>
									<Reference>RUN_DUT_TO_PARAMETER</Reference>
								</CallFunction>
							</Action>
						</TestStep>
						<TestStep Name="SetLastCrc">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>LastCrc</Destination>
										<Source>t_slaveFrame.Crc0</Source>
									</SetVariable>
								</SetVariables>
							</Action>
						</TestStep>
						<TestStep Name="SetFrame">
							<Informations1>
								<Information>
									<Type>Verbose</Type>
									<Value Param0="FailSafeValue" Param1="LastCrc" Param2="t_masterSeqNo" Param3="OldMasterCrc" Param4="t_connectionId">SetFrame(Command FailSafeData, SafeData {0}, LastCrc 0x{1:x4}, ConnectionId 0x{4:x4},  SequenceNo 0x{2:x4}, OldCrc 0x{3:x4}, New true</Value>
								</Information>
							</Informations1>
							<Action>
								<SetFrame Name="t_masterFrame">
									<Command>
										<CommandValue>FailSafeData</CommandValue>
									</Command>
									<SafeData>
										<SafeDataVariable>FailSafeValue</SafeDataVariable>
									</SafeData>
									<LastCRC>LastCrc</LastCRC>
									<ConnectionID>
										<ConnectionIdVariable>t_connectionId</ConnectionIdVariable>
									</ConnectionID>
									<SequenceNo>t_masterSeqNo</SequenceNo>
									<OldCRC>OldMasterCrc</OldCRC>
									<New>true</New>
								</SetFrame>
							</Action>
							<ReturnValue>
								<OnFailure>
									<Type>Error</Type>
									<Value>Failed to set FSoE frame!</Value>
									<Id>256</Id>
								</OnFailure>
							</ReturnValue>
						</TestStep>
						<TestStep Name="SetInvalidCrc0">
							<Informations1>
								<Information>
									<Type>Output</Type>
									<Value Param0="t_masterFrame.Crc0">Valid Crc0 = 0x{0:x4}</Value>
								</Information>
							</Informations1>
							<Action>
								<CallFunction>
									<Reference>DECREMENT_CRC_0</Reference>
								</CallFunction>
							</Action>
							<Informations2>
								<Information>
									<Type>Output</Type>
									<Value Param0="t_masterFrame.Crc0">Falsified Crc0 = 0x{0:x4}</Value>
								</Information>
							</Informations2>
						</TestStep>
						<TestStep Name="SendFrame">
							<Action>
								<SendFrame Name="t_masterFrame"/>
							</Action>
							<Informations2>
								<Information>
									<Type>Verbose</Type>
									<Value Param0="t_masterFrame.FrameData">Master Frame: {0}</Value>
								</Information>
							</Informations2>
							<ReturnValue>
								<OnFailure>
									<Type>Error</Type>
									<Value>Failed to send FSoE frame!</Value>
									<Id>256</Id>
								</OnFailure>
							</ReturnValue>
						</TestStep>
						<TestStep Name="CheckReceivedSlaveFrame">
							<Action>
								<CallFunction>
									<Reference>CHECK_RESET_FAIL</Reference>
								</CallFunction>
							</Action>
							<ReturnValue>
								<OnSuccess>
									<Type>Success</Type>
									<Value Param0="c_CommFaultReason">Expected CommFaultReason ({0}) received</Value>
								</OnSuccess>
							</ReturnValue>
						</TestStep>
					</TestSteps>
				</TestCase>
				<TestCase Name="#4.8 Para_Fail1" CaseId="8">
					<Comment>Falsche CRC_1 bis CRC_n  (+1); Command = ProcessData; SafeData = SafeOutputs</Comment>
					<CaseVariables>
						<Variable>
							<Name>c_CommFaultReason</Name>
							<Type>Byte</Type>
						</Variable>
						<Variable>
							<Name>c_tmpByte</Name>
							<Type>Byte</Type>
						</Variable>
						<Variable>
							<Name>c_crcIndex</Name>
							<Type>Int32</Type>
						</Variable>
						<Variable>
							<Name>c_tmpCrcn</Name>
							<Type>UInt16</Type>
						</Variable>
					</CaseVariables>
					<TestSteps>
						<TestStep Name="CheckCRCLength">
							<Compares>
								<Compare>
									<Condition>
										<Value1>CrcLength</Value1>
										<Operator>Equal</Operator>
										<Value2>1</Value2>
									</Condition>
									<Statement>
										<Return>
											<Type>SkippedCase</Type>
											<Value>Crc count ==1; ==> skip testcase</Value>
										</Return>
									</Statement>
								</Compare>
							</Compares>
						</TestStep>
						<TestStep Name="SetVariables">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>c_CommFaultReason</Destination>
										<Source>INVALID_CRC</Source>
									</SetVariable>
									<SetVariable>
										<Destination>c_tmpByte</Destination>
										<Source>0</Source>
									</SetVariable>
									<SetVariable>
										<Destination>t_wdExpired</Destination>
										<Source>false</Source>
									</SetVariable>
									<SetVariable>
										<Destination>t_masterSessionId</Destination>
										<Source>1</Source>
									</SetVariable>
									<SetVariable>
										<Destination>c_crcIndex</Destination>
										<Source>1</Source>
									</SetVariable>
								</SetVariables>
							</Action>
						</TestStep>
						<TestStep Name="SetConnectionData">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>t_connectionId</Destination>
										<Source>3</Source>
									</SetVariable>
									<SetVariable>
										<Destination DestinationIndex="0">t_connData</Destination>
										<Source>t_connectionId</Source>
									</SetVariable>
									<SetVariable>
										<Destination DestinationIndex="2">t_connData</Destination>
										<Source>ConnData.SlaveAddress</Source>
									</SetVariable>
								</SetVariables>
							</Action>
							<Informations2>
								<Information>
									<Type>Output</Type>
									<Value Param0="t_connectionId" Param1="ConnData.SlaveAddress" Param2="t_connData">ConnectionId: {0} (0x{0:x4}), Slave Address: {1} (0x{1:x4}), Connection Data {2}</Value>
								</Information>
							</Informations2>
						</TestStep>
						<TestStep Name="SetParameterData">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>t_safePara</Destination>
										<Source>SafePara</Source>
									</SetVariable>
									<SetVariable>
										<Destination>t_watchdog</Destination>
										<Source>SafePara.Watchdog</Source>
									</SetVariable>
								</SetVariables>
							</Action>
							<Informations2>
								<Information>
									<Type>Output</Type>
									<Value Param0="t_watchdog" Param1="SafeParaSize" Param2="t_safePara">Watchdog: {0} ms, SafeParaSize: {1}, Safe Parameter {2}</Value>
								</Information>
							</Informations2>
						</TestStep>
						<TestStep Name="GotoParameter">
							<Action>
								<CallFunction>
									<Reference>RUN_DUT_TO_PARAMETER</Reference>
								</CallFunction>
							</Action>
						</TestStep>
						<TestStep Name="SetLastCrc">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>LastCrc</Destination>
										<Source>t_slaveFrame.Crc0</Source>
									</SetVariable>
								</SetVariables>
							</Action>
						</TestStep>
						<TestStep Name="SetFrame">
							<Informations1>
								<Information>
									<Type>Verbose</Type>
									<Value Param0="SafeOutputs" Param1="LastCrc" Param2="t_masterSeqNo" Param3="OldMasterCrc" Param4="t_connectionId">SetFrame(Command ProcessData, SafeData {0}, LastCrc 0x{1:x4}, ConnectionId 0x{4:x4},  SequenceNo 0x{2:x4}, OldCrc 0x{3:x4}, New true</Value>
								</Information>
							</Informations1>
							<Action>
								<SetFrame Name="t_masterFrame">
									<Command>
										<CommandValue>Data</CommandValue>
									</Command>
									<SafeData>
										<SafeDataVariable>SafeOutputs</SafeDataVariable>
									</SafeData>
									<LastCRC>LastCrc</LastCRC>
									<ConnectionID>
										<ConnectionIdVariable>t_connectionId</ConnectionIdVariable>
									</ConnectionID>
									<SequenceNo>t_masterSeqNo</SequenceNo>
									<OldCRC>OldMasterCrc</OldCRC>
									<New>true</New>
								</SetFrame>
							</Action>
						</TestStep>
						<TestStep Name="SetInvalidCrc_n">
							<Informations1>
								<Information>
									<Type>Output</Type>
									<Value Param0="c_crcIndex" Param1="t_masterFrame.Crcs[c_crcIndex]">Valid Crc[{0}]: 0x{1:x4}</Value>
								</Information>
							</Informations1>
							<Action>
								<CallFunction>
									<Reference>INCREMENT_CRC_N</Reference>
								</CallFunction>
							</Action>
							<Informations2>
								<Information>
									<Type>Output</Type>
									<Value Param0="c_crcIndex" Param1="t_masterFrame.Crcs[c_crcIndex]">Falsified Crc[{0}]: 0x{1:x4}</Value>
								</Information>
							</Informations2>
						</TestStep>
						<TestStep Name="SendFrame">
							<Action>
								<SendFrame Name="t_masterFrame"/>
							</Action>
							<Informations2>
								<Information>
									<Type>Verbose</Type>
									<Value Param0="t_masterFrame.FrameData">Master Frame: {0}</Value>
								</Information>
							</Informations2>
							<ReturnValue>
								<OnFailure>
									<Type>Error</Type>
									<Value>Failed to send FSoE frame!</Value>
									<Id>256</Id>
								</OnFailure>
							</ReturnValue>
						</TestStep>
						<TestStep Name="SetCrcIndex">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>c_crcIndex</Destination>
										<Source>c_crcIndex+1</Source>
									</SetVariable>
								</SetVariables>
							</Action>
							<Informations2>
								<Information>
									<Type>Verbose</Type>
									<Value Param0="c_crcIndex">Index :{0}</Value>
								</Information>
							</Informations2>
						</TestStep>
						<TestStep Name="CheckReceivedSlaveFrame">
							<Action>
								<CallFunction>
									<Reference>CHECK_RESET_FAIL</Reference>
								</CallFunction>
							</Action>
							<Compares>
								<Compare>
									<Condition>
										<Value1>c_crcIndex</Value1>
										<Operator>Lower</Operator>
										<Value2>CrcLength</Value2>
									</Condition>
									<Statement>
										<GotoStep>GotoParameter</GotoStep>
									</Statement>
								</Compare>
								<Compare>
									<Condition>
										<Value1>c_crcIndex</Value1>
										<Operator>GreaterOrEqual</Operator>
										<Value2>CrcLength</Value2>
									</Condition>
									<Statement>
										<Return>
											<Type>Success</Type>
											<Value Param0="c_CommFaultReason">Expected CommFaultReason ({0}) received</Value>
										</Return>
									</Statement>
								</Compare>
							</Compares>
						</TestStep>
					</TestSteps>
				</TestCase>
				<TestCase Name="#4.9 Para_Fail1" CaseId="9">
					<Comment>Falsche CRC_1 bis CRC_n  (-1); Command = ProcessData; SafeData = SafeOutputs</Comment>
					<CaseVariables>
						<Variable>
							<Name>c_CommFaultReason</Name>
							<Type>Byte</Type>
						</Variable>
						<Variable>
							<Name>c_tmpByte</Name>
							<Type>Byte</Type>
						</Variable>
						<Variable>
							<Name>c_crcIndex</Name>
							<Type>Int32</Type>
						</Variable>
						<Variable>
							<Name>c_tmpCrcn</Name>
							<Type>UInt16</Type>
						</Variable>
					</CaseVariables>
					<TestSteps>
						<TestStep Name="CheckCRCLength">
							<Compares>
								<Compare>
									<Condition>
										<Value1>CrcLength</Value1>
										<Operator>Equal</Operator>
										<Value2>1</Value2>
									</Condition>
									<Statement>
										<Return>
											<Type>SkippedCase</Type>
											<Value>Crc count ==1; ==> skip testcase</Value>
										</Return>
									</Statement>
								</Compare>
							</Compares>
						</TestStep>
						<TestStep Name="SetVariables">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>c_CommFaultReason</Destination>
										<Source>INVALID_CRC</Source>
									</SetVariable>
									<SetVariable>
										<Destination>c_tmpByte</Destination>
										<Source>0</Source>
									</SetVariable>
									<SetVariable>
										<Destination>t_wdExpired</Destination>
										<Source>false</Source>
									</SetVariable>
									<SetVariable>
										<Destination>t_masterSessionId</Destination>
										<Source>1</Source>
									</SetVariable>
									<SetVariable>
										<Destination>c_crcIndex</Destination>
										<Source>1</Source>
									</SetVariable>
								</SetVariables>
							</Action>
						</TestStep>
						<TestStep Name="SetConnectionData">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>t_connectionId</Destination>
										<Source>3</Source>
									</SetVariable>
									<SetVariable>
										<Destination DestinationIndex="0">t_connData</Destination>
										<Source>t_connectionId</Source>
									</SetVariable>
									<SetVariable>
										<Destination DestinationIndex="2">t_connData</Destination>
										<Source>ConnData.SlaveAddress</Source>
									</SetVariable>
								</SetVariables>
							</Action>
							<Informations2>
								<Information>
									<Type>Output</Type>
									<Value Param0="t_connectionId" Param1="ConnData.SlaveAddress" Param2="t_connData">ConnectionId: {0} (0x{0:x4}), Slave Address: {1} (0x{1:x4}), Connection Data {2}</Value>
								</Information>
							</Informations2>
						</TestStep>
						<TestStep Name="SetParameterData">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>t_safePara</Destination>
										<Source>SafePara</Source>
									</SetVariable>
									<SetVariable>
										<Destination>t_watchdog</Destination>
										<Source>SafePara.Watchdog</Source>
									</SetVariable>
								</SetVariables>
							</Action>
							<Informations2>
								<Information>
									<Type>Output</Type>
									<Value Param0="t_watchdog" Param1="SafeParaSize" Param2="t_safePara">Watchdog: {0} ms, SafeParaSize: {1}, Safe Parameter {2}</Value>
								</Information>
							</Informations2>
						</TestStep>
						<TestStep Name="GotoParameter">
							<Action>
								<CallFunction>
									<Reference>RUN_DUT_TO_PARAMETER</Reference>
								</CallFunction>
							</Action>
						</TestStep>
						<TestStep Name="SetLastCrc">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>LastCrc</Destination>
										<Source>t_slaveFrame.Crc0</Source>
									</SetVariable>
								</SetVariables>
							</Action>
						</TestStep>
						<TestStep Name="SetFrame">
							<Informations1>
								<Information>
									<Type>Verbose</Type>
									<Value Param0="SafeOutputs" Param1="LastCrc" Param2="t_masterSeqNo" Param3="OldMasterCrc" Param4="t_connectionId">SetFrame(Command ProcessData, SafeData {0}, LastCrc 0x{1:x4}, ConnectionId 0x{4:x4},  SequenceNo 0x{2:x4}, OldCrc 0x{3:x4}, New true</Value>
								</Information>
							</Informations1>
							<Action>
								<SetFrame Name="t_masterFrame">
									<Command>
										<CommandValue>Data</CommandValue>
									</Command>
									<SafeData>
										<SafeDataVariable>SafeOutputs</SafeDataVariable>
									</SafeData>
									<LastCRC>LastCrc</LastCRC>
									<ConnectionID>
										<ConnectionIdVariable>t_connectionId</ConnectionIdVariable>
									</ConnectionID>
									<SequenceNo>t_masterSeqNo</SequenceNo>
									<OldCRC>OldMasterCrc</OldCRC>
									<New>true</New>
								</SetFrame>
							</Action>
						</TestStep>
						<TestStep Name="SetInvalidCrc_n">
							<Informations1>
								<Information>
									<Type>Output</Type>
									<Value Param0="c_crcIndex" Param1="t_masterFrame.Crcs[c_crcIndex]">Valid Crc[{0}]: 0x{1:x4}</Value>
								</Information>
							</Informations1>
							<Action>
								<CallFunction>
									<Reference>DECREMENT_CRC_N</Reference>
								</CallFunction>
							</Action>
							<Informations2>
								<Information>
									<Type>Output</Type>
									<Value Param0="c_crcIndex" Param1="t_masterFrame.Crcs[c_crcIndex]">Falsified Crc[{0}]: 0x{1:x4}</Value>
								</Information>
							</Informations2>
						</TestStep>
						<TestStep Name="SendFrame">
							<Action>
								<SendFrame Name="t_masterFrame"/>
							</Action>
							<Informations2>
								<Information>
									<Type>Verbose</Type>
									<Value Param0="t_masterFrame.FrameData">Master Frame: {0}</Value>
								</Information>
							</Informations2>
							<ReturnValue>
								<OnFailure>
									<Type>Error</Type>
									<Value>Failed to send FSoE frame!</Value>
									<Id>256</Id>
								</OnFailure>
							</ReturnValue>
						</TestStep>
						<TestStep Name="SetCrcIndex">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>c_crcIndex</Destination>
										<Source>c_crcIndex+1</Source>
									</SetVariable>
								</SetVariables>
							</Action>
							<Informations2>
								<Information>
									<Type>Verbose</Type>
									<Value Param0="c_crcIndex">Index :{0}</Value>
								</Information>
							</Informations2>
						</TestStep>
						<TestStep Name="CheckReceivedSlaveFrame">
							<Action>
								<CallFunction>
									<Reference>CHECK_RESET_FAIL</Reference>
								</CallFunction>
							</Action>
							<Compares>
								<Compare>
									<Condition>
										<Value1>c_crcIndex</Value1>
										<Operator>Lower</Operator>
										<Value2>CrcLength</Value2>
									</Condition>
									<Statement>
										<GotoStep>GotoParameter</GotoStep>
									</Statement>
								</Compare>
								<Compare>
									<Condition>
										<Value1>c_crcIndex</Value1>
										<Operator>GreaterOrEqual</Operator>
										<Value2>CrcLength</Value2>
									</Condition>
									<Statement>
										<Return>
											<Type>Success</Type>
											<Value Param0="c_CommFaultReason">Expected CommFaultReason ({0}) received</Value>
										</Return>
									</Statement>
								</Compare>
							</Compares>
						</TestStep>
					</TestSteps>
				</TestCase>
				<TestCase Name="#4.10 Para_Fail1" CaseId="10">
					<Comment>Falsche CRC_1 bis CRC_n  (+1); Command = FailSafeData; SafeData = FailSafeValue</Comment>
					<CaseVariables>
						<Variable>
							<Name>c_CommFaultReason</Name>
							<Type>Byte</Type>
						</Variable>
						<Variable>
							<Name>c_tmpByte</Name>
							<Type>Byte</Type>
						</Variable>
						<Variable>
							<Name>c_crcIndex</Name>
							<Type>Int32</Type>
						</Variable>
						<Variable>
							<Name>c_tmpCrcn</Name>
							<Type>UInt16</Type>
						</Variable>
					</CaseVariables>
					<TestSteps>
						<TestStep Name="CheckCRCLength">
							<Compares>
								<Compare>
									<Condition>
										<Value1>CrcLength</Value1>
										<Operator>Equal</Operator>
										<Value2>1</Value2>
									</Condition>
									<Statement>
										<Return>
											<Type>SkippedCase</Type>
											<Value>Crc count ==1; ==> skip testcase</Value>
										</Return>
									</Statement>
								</Compare>
							</Compares>
						</TestStep>
						<TestStep Name="SetVariables">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>c_CommFaultReason</Destination>
										<Source>INVALID_CRC</Source>
									</SetVariable>
									<SetVariable>
										<Destination>c_tmpByte</Destination>
										<Source>0</Source>
									</SetVariable>
									<SetVariable>
										<Destination>t_wdExpired</Destination>
										<Source>false</Source>
									</SetVariable>
									<SetVariable>
										<Destination>t_masterSessionId</Destination>
										<Source>1</Source>
									</SetVariable>
									<SetVariable>
										<Destination>c_crcIndex</Destination>
										<Source>1</Source>
									</SetVariable>
								</SetVariables>
							</Action>
						</TestStep>
						<TestStep Name="SetConnectionData">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>t_connectionId</Destination>
										<Source>3</Source>
									</SetVariable>
									<SetVariable>
										<Destination DestinationIndex="0">t_connData</Destination>
										<Source>t_connectionId</Source>
									</SetVariable>
									<SetVariable>
										<Destination DestinationIndex="2">t_connData</Destination>
										<Source>ConnData.SlaveAddress</Source>
									</SetVariable>
								</SetVariables>
							</Action>
							<Informations2>
								<Information>
									<Type>Output</Type>
									<Value Param0="t_connectionId" Param1="ConnData.SlaveAddress" Param2="t_connData">ConnectionId: {0} (0x{0:x4}), Slave Address: {1} (0x{1:x4}), Connection Data {2}</Value>
								</Information>
							</Informations2>
						</TestStep>
						<TestStep Name="SetParameterData">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>t_safePara</Destination>
										<Source>SafePara</Source>
									</SetVariable>
									<SetVariable>
										<Destination>t_watchdog</Destination>
										<Source>SafePara.Watchdog</Source>
									</SetVariable>
								</SetVariables>
							</Action>
							<Informations2>
								<Information>
									<Type>Output</Type>
									<Value Param0="t_watchdog" Param1="SafeParaSize" Param2="t_safePara">Watchdog: {0} ms, SafeParaSize: {1}, Safe Parameter {2}</Value>
								</Information>
							</Informations2>
						</TestStep>
						<TestStep Name="GotoParameter">
							<Action>
								<CallFunction>
									<Reference>RUN_DUT_TO_PARAMETER</Reference>
								</CallFunction>
							</Action>
						</TestStep>
						<TestStep Name="SetLastCrc">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>LastCrc</Destination>
										<Source>t_slaveFrame.Crc0</Source>
									</SetVariable>
								</SetVariables>
							</Action>
						</TestStep>
						<TestStep Name="SetFrame">
							<Informations1>
								<Information>
									<Type>Verbose</Type>
									<Value Param0="FailSafeValue" Param1="LastCrc" Param2="t_masterSeqNo" Param3="OldMasterCrc" Param4="t_connectionId">SetFrame(Command FailSafeData, SafeData {0}, LastCrc 0x{1:x4}, ConnectionId 0x{4:x4},  SequenceNo 0x{2:x4}, OldCrc 0x{3:x4}, New true</Value>
								</Information>
							</Informations1>
							<Action>
								<SetFrame Name="t_masterFrame">
									<Command>
										<CommandValue>FailSafeData</CommandValue>
									</Command>
									<SafeData>
										<SafeDataVariable>FailSafeValue</SafeDataVariable>
									</SafeData>
									<LastCRC>LastCrc</LastCRC>
									<ConnectionID>
										<ConnectionIdVariable>t_connectionId</ConnectionIdVariable>
									</ConnectionID>
									<SequenceNo>t_masterSeqNo</SequenceNo>
									<OldCRC>OldMasterCrc</OldCRC>
									<New>true</New>
								</SetFrame>
							</Action>
						</TestStep>
						<TestStep Name="SetInvalidCrc_n">
							<Informations1>
								<Information>
									<Type>Output</Type>
									<Value Param0="c_crcIndex" Param1="t_masterFrame.Crcs[c_crcIndex]">Valid Crc[{0}]: 0x{1:x4}</Value>
								</Information>
							</Informations1>
							<Action>
								<CallFunction>
									<Reference>INCREMENT_CRC_N</Reference>
								</CallFunction>
							</Action>
							<Informations2>
								<Information>
									<Type>Output</Type>
									<Value Param0="c_crcIndex" Param1="t_masterFrame.Crcs[c_crcIndex]">Falsified Crc[{0}]: 0x{1:x4}</Value>
								</Information>
							</Informations2>
						</TestStep>
						<TestStep Name="SendFrame">
							<Action>
								<SendFrame Name="t_masterFrame"/>
							</Action>
							<Informations2>
								<Information>
									<Type>Verbose</Type>
									<Value Param0="t_masterFrame.FrameData">Master Frame: {0}</Value>
								</Information>
							</Informations2>
							<ReturnValue>
								<OnFailure>
									<Type>Error</Type>
									<Value>Failed to send FSoE frame!</Value>
									<Id>256</Id>
								</OnFailure>
							</ReturnValue>
						</TestStep>
						<TestStep Name="SetCrcIndex">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>c_crcIndex</Destination>
										<Source>c_crcIndex+1</Source>
									</SetVariable>
								</SetVariables>
							</Action>
							<Informations2>
								<Information>
									<Type>Verbose</Type>
									<Value Param0="c_crcIndex">Index :{0}</Value>
								</Information>
							</Informations2>
						</TestStep>
						<TestStep Name="CheckReceivedSlaveFrame">
							<Action>
								<CallFunction>
									<Reference>CHECK_RESET_FAIL</Reference>
								</CallFunction>
							</Action>
							<Compares>
								<Compare>
									<Condition>
										<Value1>c_crcIndex</Value1>
										<Operator>Lower</Operator>
										<Value2>CrcLength</Value2>
									</Condition>
									<Statement>
										<GotoStep>GotoParameter</GotoStep>
									</Statement>
								</Compare>
								<Compare>
									<Condition>
										<Value1>c_crcIndex</Value1>
										<Operator>GreaterOrEqual</Operator>
										<Value2>CrcLength</Value2>
									</Condition>
									<Statement>
										<Return>
											<Type>Success</Type>
											<Value Param0="c_CommFaultReason">Expected CommFaultReason ({0}) received</Value>
										</Return>
									</Statement>
								</Compare>
							</Compares>
						</TestStep>
					</TestSteps>
				</TestCase>
				<TestCase Name="#4.11 Para_Fail1" CaseId="11">
					<Comment>Falsche CRC_1 bis CRC_n  (-1); Command = FailSafeData; SafeData = FailSafeValue</Comment>
					<CaseVariables>
						<Variable>
							<Name>c_CommFaultReason</Name>
							<Type>Byte</Type>
						</Variable>
						<Variable>
							<Name>c_tmpByte</Name>
							<Type>Byte</Type>
						</Variable>
						<Variable>
							<Name>c_crcIndex</Name>
							<Type>Int32</Type>
						</Variable>
						<Variable>
							<Name>c_tmpCrcn</Name>
							<Type>UInt16</Type>
						</Variable>
					</CaseVariables>
					<TestSteps>
						<TestStep Name="CheckCRCLength">
							<Compares>
								<Compare>
									<Condition>
										<Value1>CrcLength</Value1>
										<Operator>Equal</Operator>
										<Value2>1</Value2>
									</Condition>
									<Statement>
										<Return>
											<Type>SkippedCase</Type>
											<Value>Crc count ==1; ==> skip testcase</Value>
										</Return>
									</Statement>
								</Compare>
							</Compares>
						</TestStep>
						<TestStep Name="SetVariables">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>c_CommFaultReason</Destination>
										<Source>INVALID_CRC</Source>
									</SetVariable>
									<SetVariable>
										<Destination>c_tmpByte</Destination>
										<Source>0</Source>
									</SetVariable>
									<SetVariable>
										<Destination>t_wdExpired</Destination>
										<Source>false</Source>
									</SetVariable>
									<SetVariable>
										<Destination>t_masterSessionId</Destination>
										<Source>1</Source>
									</SetVariable>
									<SetVariable>
										<Destination>c_crcIndex</Destination>
										<Source>1</Source>
									</SetVariable>
								</SetVariables>
							</Action>
						</TestStep>
						<TestStep Name="SetConnectionData">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>t_connectionId</Destination>
										<Source>3</Source>
									</SetVariable>
									<SetVariable>
										<Destination DestinationIndex="0">t_connData</Destination>
										<Source>t_connectionId</Source>
									</SetVariable>
									<SetVariable>
										<Destination DestinationIndex="2">t_connData</Destination>
										<Source>ConnData.SlaveAddress</Source>
									</SetVariable>
								</SetVariables>
							</Action>
							<Informations2>
								<Information>
									<Type>Output</Type>
									<Value Param0="t_connectionId" Param1="ConnData.SlaveAddress" Param2="t_connData">ConnectionId: {0} (0x{0:x4}), Slave Address: {1} (0x{1:x4}), Connection Data {2}</Value>
								</Information>
							</Informations2>
						</TestStep>
						<TestStep Name="SetParameterData">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>t_safePara</Destination>
										<Source>SafePara</Source>
									</SetVariable>
									<SetVariable>
										<Destination>t_watchdog</Destination>
										<Source>SafePara.Watchdog</Source>
									</SetVariable>
								</SetVariables>
							</Action>
							<Informations2>
								<Information>
									<Type>Output</Type>
									<Value Param0="t_watchdog" Param1="SafeParaSize" Param2="t_safePara">Watchdog: {0} ms, SafeParaSize: {1}, Safe Parameter {2}</Value>
								</Information>
							</Informations2>
						</TestStep>
						<TestStep Name="GotoParameter">
							<Action>
								<CallFunction>
									<Reference>RUN_DUT_TO_PARAMETER</Reference>
								</CallFunction>
							</Action>
						</TestStep>
						<TestStep Name="SetLastCrc">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>LastCrc</Destination>
										<Source>t_slaveFrame.Crc0</Source>
									</SetVariable>
								</SetVariables>
							</Action>
						</TestStep>
						<TestStep Name="SetFrame">
							<Informations1>
								<Information>
									<Type>Verbose</Type>
									<Value Param0="FailSafeValue" Param1="LastCrc" Param2="t_masterSeqNo" Param3="OldMasterCrc" Param4="t_connectionId">SetFrame(Command FailSafeData, SafeData {0}, LastCrc 0x{1:x4}, ConnectionId 0x{4:x4},  SequenceNo 0x{2:x4}, OldCrc 0x{3:x4}, New true</Value>
								</Information>
							</Informations1>
							<Action>
								<SetFrame Name="t_masterFrame">
									<Command>
										<CommandValue>FailSafeData</CommandValue>
									</Command>
									<SafeData>
										<SafeDataVariable>FailSafeValue</SafeDataVariable>
									</SafeData>
									<LastCRC>LastCrc</LastCRC>
									<ConnectionID>
										<ConnectionIdVariable>t_connectionId</ConnectionIdVariable>
									</ConnectionID>
									<SequenceNo>t_masterSeqNo</SequenceNo>
									<OldCRC>OldMasterCrc</OldCRC>
									<New>true</New>
								</SetFrame>
							</Action>
						</TestStep>
						<TestStep Name="SetInvalidCrc_n">
							<Informations1>
								<Information>
									<Type>Output</Type>
									<Value Param0="c_crcIndex" Param1="t_masterFrame.Crcs[c_crcIndex]">Valid Crc[{0}]: 0x{1:x4}</Value>
								</Information>
							</Informations1>
							<Action>
								<CallFunction>
									<Reference>DECREMENT_CRC_N</Reference>
								</CallFunction>
							</Action>
							<Informations2>
								<Information>
									<Type>Output</Type>
									<Value Param0="c_crcIndex" Param1="t_masterFrame.Crcs[c_crcIndex]">Falsified Crc[{0}]: 0x{1:x4}</Value>
								</Information>
							</Informations2>
						</TestStep>
						<TestStep Name="SendFrame">
							<Action>
								<SendFrame Name="t_masterFrame"/>
							</Action>
							<Informations2>
								<Information>
									<Type>Verbose</Type>
									<Value Param0="t_masterFrame.FrameData">Master Frame: {0}</Value>
								</Information>
							</Informations2>
							<ReturnValue>
								<OnFailure>
									<Type>Error</Type>
									<Value>Failed to send FSoE frame!</Value>
									<Id>256</Id>
								</OnFailure>
							</ReturnValue>
						</TestStep>
						<TestStep Name="SetCrcIndex">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>c_crcIndex</Destination>
										<Source>c_crcIndex+1</Source>
									</SetVariable>
								</SetVariables>
							</Action>
							<Informations2>
								<Information>
									<Type>Verbose</Type>
									<Value Param0="c_crcIndex">Index :{0}</Value>
								</Information>
							</Informations2>
						</TestStep>
						<TestStep Name="CheckReceivedSlaveFrame">
							<Action>
								<CallFunction>
									<Reference>CHECK_RESET_FAIL</Reference>
								</CallFunction>
							</Action>
							<Compares>
								<Compare>
									<Condition>
										<Value1>c_crcIndex</Value1>
										<Operator>Lower</Operator>
										<Value2>CrcLength</Value2>
									</Condition>
									<Statement>
										<GotoStep>GotoParameter</GotoStep>
									</Statement>
								</Compare>
								<Compare>
									<Condition>
										<Value1>c_crcIndex</Value1>
										<Operator>GreaterOrEqual</Operator>
										<Value2>CrcLength</Value2>
									</Condition>
									<Statement>
										<Return>
											<Type>Success</Type>
											<Value Param0="c_CommFaultReason">Expected CommFaultReason ({0}) received</Value>
										</Return>
									</Statement>
								</Compare>
							</Compares>
						</TestStep>
					</TestSteps>
				</TestCase>
				<TestCase Name="#4.12 Para_Fail1" CaseId="12">
					<Comment>CRC_0 und CRC1 vertauscht; Command = ProcessData; SafeData = SafeOutputs </Comment>
					<CaseVariables>
						<Variable>
							<Name>c_CommFaultReason</Name>
							<Type>Byte</Type>
						</Variable>
						<Variable>
							<Name>c_tmpByte</Name>
							<Type>Byte</Type>
						</Variable>
						<Variable>
							<Name>c_crcIndex</Name>
							<Type>Int32</Type>
						</Variable>
						<Variable>
							<Name>c_tmpCrc0</Name>
							<Type>UInt16</Type>
						</Variable>
						<Variable>
							<Name>c_tmpCrc1</Name>
							<Type>UInt16</Type>
						</Variable>
					</CaseVariables>
					<TestSteps>
						<TestStep Name="CheckCRCLength">
							<Compares>
								<Compare>
									<Condition>
										<Value1>CrcLength</Value1>
										<Operator>Equal</Operator>
										<Value2>1</Value2>
									</Condition>
									<Statement>
										<Return>
											<Type>SkippedCase</Type>
											<Value>Crc count ==1; ==> skip testcase</Value>
										</Return>
									</Statement>
								</Compare>
							</Compares>
						</TestStep>
						<TestStep Name="SetVariables">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>c_CommFaultReason</Destination>
										<Source>INVALID_CRC</Source>
									</SetVariable>
									<SetVariable>
										<Destination>c_tmpByte</Destination>
										<Source>0</Source>
									</SetVariable>
									<SetVariable>
										<Destination>t_wdExpired</Destination>
										<Source>false</Source>
									</SetVariable>
									<SetVariable>
										<Destination>t_masterSessionId</Destination>
										<Source>1</Source>
									</SetVariable>
								</SetVariables>
							</Action>
						</TestStep>
						<TestStep Name="SetConnectionData">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>t_connectionId</Destination>
										<Source>3</Source>
									</SetVariable>
									<SetVariable>
										<Destination DestinationIndex="0">t_connData</Destination>
										<Source>t_connectionId</Source>
									</SetVariable>
									<SetVariable>
										<Destination DestinationIndex="2">t_connData</Destination>
										<Source>ConnData.SlaveAddress</Source>
									</SetVariable>
								</SetVariables>
							</Action>
							<Informations2>
								<Information>
									<Type>Output</Type>
									<Value Param0="t_connectionId" Param1="ConnData.SlaveAddress" Param2="t_connData">ConnectionId: {0} (0x{0:x4}), Slave Address: {1} (0x{1:x4}), Connection Data {2}</Value>
								</Information>
							</Informations2>
						</TestStep>
						<TestStep Name="SetParameterData">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>t_safePara</Destination>
										<Source>SafePara</Source>
									</SetVariable>
									<SetVariable>
										<Destination>t_watchdog</Destination>
										<Source>SafePara.Watchdog</Source>
									</SetVariable>
								</SetVariables>
							</Action>
							<Informations2>
								<Information>
									<Type>Output</Type>
									<Value Param0="t_watchdog" Param1="SafeParaSize" Param2="t_safePara">Watchdog: {0} ms, SafeParaSize: {1}, Safe Parameter {2}</Value>
								</Information>
							</Informations2>
						</TestStep>
						<TestStep Name="GotoParameter">
							<Action>
								<CallFunction>
									<Reference>RUN_DUT_TO_PARAMETER</Reference>
								</CallFunction>
							</Action>
						</TestStep>
						<TestStep Name="SetLastCrc">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>LastCrc</Destination>
										<Source>t_slaveFrame.Crc0</Source>
									</SetVariable>
								</SetVariables>
							</Action>
						</TestStep>
						<TestStep Name="SetFrame">
							<Informations1>
								<Information>
									<Type>Verbose</Type>
									<Value Param0="SafeOutputs" Param1="LastCrc" Param2="t_masterSeqNo" Param3="OldMasterCrc" Param4="t_connectionId">SetFrame(Command ProcessData, SafeData {0}, LastCrc 0x{1:x4}, ConnectionId 0x{4:x4},  SequenceNo 0x{2:x4}, OldCrc 0x{3:x4}, New true</Value>
								</Information>
							</Informations1>
							<Action>
								<SetFrame Name="t_masterFrame">
									<Command>
										<CommandValue>Data</CommandValue>
									</Command>
									<SafeData>
										<SafeDataVariable>SafeOutputs</SafeDataVariable>
									</SafeData>
									<LastCRC>LastCrc</LastCRC>
									<ConnectionID>
										<ConnectionIdVariable>t_connectionId</ConnectionIdVariable>
									</ConnectionID>
									<SequenceNo>t_masterSeqNo</SequenceNo>
									<OldCRC>OldMasterCrc</OldCRC>
									<New>true</New>
								</SetFrame>
							</Action>
						</TestStep>
						<TestStep Name="SwapCrcs">
							<Informations1>
								<Information>
									<Type>Output</Type>
									<Value Param0="t_masterFrame.Crcs[0]" Param1="t_masterFrame.Crcs[1]">Valid Crc[0]: 0x{0:x4}, Valid Crc[1]: 0x{1:x4} </Value>
								</Information>
							</Informations1>
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>c_tmpCrc0</Destination>
										<Source SourceIndex="0">t_masterFrame.Crcs</Source>
									</SetVariable>
									<SetVariable>
										<Destination>c_tmpCrc1</Destination>
										<Source SourceIndex="1">t_masterFrame.Crcs</Source>
									</SetVariable>
									<SetVariable>
										<Destination DestinationIndex="0">t_masterFrame.Crcs</Destination>
										<Source>c_tmpCrc1</Source>
									</SetVariable>
									<SetVariable>
										<Destination DestinationIndex="1">t_masterFrame.Crcs</Destination>
										<Source>c_tmpCrc0</Source>
									</SetVariable>
								</SetVariables>
							</Action>
							<Informations2>
								<Information>
									<Type>Output</Type>
									<Value Param0="t_masterFrame.Crcs[0]" Param1="t_masterFrame.Crcs[1]">Falsified Crc[0]: 0x{0:x4}, Falsified Crc[1]: 0x{1:x4} </Value>
								</Information>
							</Informations2>
						</TestStep>
						<TestStep Name="SendFrame">
							<Action>
								<SendFrame Name="t_masterFrame"/>
							</Action>
							<Informations2>
								<Information>
									<Type>Verbose</Type>
									<Value Param0="t_masterFrame.FrameData">Master Frame: {0}</Value>
								</Information>
							</Informations2>
							<ReturnValue>
								<OnFailure>
									<Type>Error</Type>
									<Value>Failed to send FSoE frame!</Value>
									<Id>256</Id>
								</OnFailure>
							</ReturnValue>
						</TestStep>
						<TestStep Name="CheckReceivedSlaveFrame">
							<Action>
								<CallFunction>
									<Reference>CHECK_RESET_FAIL</Reference>
								</CallFunction>
							</Action>
							<ReturnValue>
								<OnSuccess>
									<Type>Success</Type>
									<Value Param0="c_CommFaultReason">Expected CommFaultReason ({0}) received</Value>
								</OnSuccess>
							</ReturnValue>
						</TestStep>
					</TestSteps>
				</TestCase>
				<TestCase Name="#4.13 Para_Fail1" CaseId="13">
					<Comment>CRC_0 und CRC1 vertauscht; Command = FailSafeData; SafeData = FailSafeValue </Comment>
					<CaseVariables>
						<Variable>
							<Name>c_CommFaultReason</Name>
							<Type>Byte</Type>
						</Variable>
						<Variable>
							<Name>c_tmpByte</Name>
							<Type>Byte</Type>
						</Variable>
						<Variable>
							<Name>c_crcIndex</Name>
							<Type>Int32</Type>
						</Variable>
						<Variable>
							<Name>c_tmpCrc0</Name>
							<Type>UInt16</Type>
						</Variable>
						<Variable>
							<Name>c_tmpCrc1</Name>
							<Type>UInt16</Type>
						</Variable>
					</CaseVariables>
					<TestSteps>
						<TestStep Name="CheckCRCLength">
							<Compares>
								<Compare>
									<Condition>
										<Value1>CrcLength</Value1>
										<Operator>Equal</Operator>
										<Value2>1</Value2>
									</Condition>
									<Statement>
										<Return>
											<Type>SkippedCase</Type>
											<Value>Crc count ==1; ==> skip testcase</Value>
										</Return>
									</Statement>
								</Compare>
							</Compares>
						</TestStep>
						<TestStep Name="SetVariables">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>c_CommFaultReason</Destination>
										<Source>INVALID_CRC</Source>
									</SetVariable>
									<SetVariable>
										<Destination>c_tmpByte</Destination>
										<Source>0</Source>
									</SetVariable>
									<SetVariable>
										<Destination>t_wdExpired</Destination>
										<Source>false</Source>
									</SetVariable>
									<SetVariable>
										<Destination>t_masterSessionId</Destination>
										<Source>1</Source>
									</SetVariable>
								</SetVariables>
							</Action>
						</TestStep>
						<TestStep Name="SetConnectionData">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>t_connectionId</Destination>
										<Source>3</Source>
									</SetVariable>
									<SetVariable>
										<Destination DestinationIndex="0">t_connData</Destination>
										<Source>t_connectionId</Source>
									</SetVariable>
									<SetVariable>
										<Destination DestinationIndex="2">t_connData</Destination>
										<Source>ConnData.SlaveAddress</Source>
									</SetVariable>
								</SetVariables>
							</Action>
							<Informations2>
								<Information>
									<Type>Output</Type>
									<Value Param0="t_connectionId" Param1="ConnData.SlaveAddress" Param2="t_connData">ConnectionId: {0} (0x{0:x4}), Slave Address: {1} (0x{1:x4}), Connection Data {2}</Value>
								</Information>
							</Informations2>
						</TestStep>
						<TestStep Name="SetParameterData">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>t_safePara</Destination>
										<Source>SafePara</Source>
									</SetVariable>
									<SetVariable>
										<Destination>t_watchdog</Destination>
										<Source>SafePara.Watchdog</Source>
									</SetVariable>
								</SetVariables>
							</Action>
							<Informations2>
								<Information>
									<Type>Output</Type>
									<Value Param0="t_watchdog" Param1="SafeParaSize" Param2="t_safePara">Watchdog: {0} ms, SafeParaSize: {1}, Safe Parameter {2}</Value>
								</Information>
							</Informations2>
						</TestStep>
						<TestStep Name="GotoParameter">
							<Action>
								<CallFunction>
									<Reference>RUN_DUT_TO_PARAMETER</Reference>
								</CallFunction>
							</Action>
						</TestStep>
						<TestStep Name="SetLastCrc">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>LastCrc</Destination>
										<Source>t_slaveFrame.Crc0</Source>
									</SetVariable>
								</SetVariables>
							</Action>
						</TestStep>
						<TestStep Name="SetFrame">
							<Informations1>
								<Information>
									<Type>Verbose</Type>
									<Value Param0="FailSafeValue" Param1="LastCrc" Param2="t_masterSeqNo" Param3="OldMasterCrc" Param4="t_connectionId">SetFrame(Command FailSafeData, SafeData {0}, LastCrc 0x{1:x4}, ConnectionId 0x{4:x4},  SequenceNo 0x{2:x4}, OldCrc 0x{3:x4}, New true</Value>
								</Information>
							</Informations1>
							<Action>
								<SetFrame Name="t_masterFrame">
									<Command>
										<CommandValue>FailSafeData</CommandValue>
									</Command>
									<SafeData>
										<SafeDataVariable>FailSafeValue</SafeDataVariable>
									</SafeData>
									<LastCRC>LastCrc</LastCRC>
									<ConnectionID>
										<ConnectionIdVariable>t_connectionId</ConnectionIdVariable>
									</ConnectionID>
									<SequenceNo>t_masterSeqNo</SequenceNo>
									<OldCRC>OldMasterCrc</OldCRC>
									<New>true</New>
								</SetFrame>
							</Action>
						</TestStep>
						<TestStep Name="SwapCrcs">
							<Informations1>
								<Information>
									<Type>Output</Type>
									<Value Param0="t_masterFrame.Crcs[0]" Param1="t_masterFrame.Crcs[1]">Valid Crc[0]: 0x{0:x4}, Valid Crc[1]: 0x{1:x4} </Value>
								</Information>
							</Informations1>
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>c_tmpCrc0</Destination>
										<Source SourceIndex="0">t_masterFrame.Crcs</Source>
									</SetVariable>
									<SetVariable>
										<Destination>c_tmpCrc1</Destination>
										<Source SourceIndex="1">t_masterFrame.Crcs</Source>
									</SetVariable>
									<SetVariable>
										<Destination DestinationIndex="0">t_masterFrame.Crcs</Destination>
										<Source>c_tmpCrc1</Source>
									</SetVariable>
									<SetVariable>
										<Destination DestinationIndex="1">t_masterFrame.Crcs</Destination>
										<Source>c_tmpCrc0</Source>
									</SetVariable>
								</SetVariables>
							</Action>
							<Informations2>
								<Information>
									<Type>Output</Type>
									<Value Param0="t_masterFrame.Crcs[0]" Param1="t_masterFrame.Crcs[1]">Falsified Crc[0]: 0x{0:x4}, Falsified Crc[1]: 0x{1:x4} </Value>
								</Information>
							</Informations2>
						</TestStep>
						<TestStep Name="SendFrame">
							<Action>
								<SendFrame Name="t_masterFrame"/>
							</Action>
							<Informations2>
								<Information>
									<Type>Verbose</Type>
									<Value Param0="t_masterFrame.FrameData">Master Frame: {0}</Value>
								</Information>
							</Informations2>
							<ReturnValue>
								<OnFailure>
									<Type>Error</Type>
									<Value>Failed to send FSoE frame!</Value>
									<Id>256</Id>
								</OnFailure>
							</ReturnValue>
						</TestStep>
						<TestStep Name="CheckReceivedSlaveFrame">
							<Action>
								<CallFunction>
									<Reference>CHECK_RESET_FAIL</Reference>
								</CallFunction>
							</Action>
							<ReturnValue>
								<OnSuccess>
									<Type>Success</Type>
									<Value Param0="c_CommFaultReason">Expected CommFaultReason ({0}) received</Value>
								</OnSuccess>
							</ReturnValue>
						</TestStep>
					</TestSteps>
				</TestCase>
				<TestCase Name="#4.14 Para_Fail1" CaseId="14">
					<Comment>Falsche Master SequenceNo (-1) ; Command = ProcessData; SafeData = SafeOutputs </Comment>
					<CaseVariables>
						<Variable>
							<Name>c_CommFaultReason</Name>
							<Type>Byte</Type>
						</Variable>
						<Variable>
							<Name>c_tmpByte</Name>
							<Type>Byte</Type>
						</Variable>
					</CaseVariables>
					<TestSteps>
						<TestStep Name="SetVariables">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>c_CommFaultReason</Destination>
										<Source>INVALID_CRC</Source>
									</SetVariable>
									<SetVariable>
										<Destination>c_tmpByte</Destination>
										<Source>0</Source>
									</SetVariable>
									<SetVariable>
										<Destination>t_wdExpired</Destination>
										<Source>false</Source>
									</SetVariable>
									<SetVariable>
										<Destination>t_masterSessionId</Destination>
										<Source>1</Source>
									</SetVariable>
								</SetVariables>
							</Action>
						</TestStep>
						<TestStep Name="SetConnectionData">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>t_connectionId</Destination>
										<Source>3</Source>
									</SetVariable>
									<SetVariable>
										<Destination DestinationIndex="0">t_connData</Destination>
										<Source>t_connectionId</Source>
									</SetVariable>
									<SetVariable>
										<Destination DestinationIndex="2">t_connData</Destination>
										<Source>ConnData.SlaveAddress</Source>
									</SetVariable>
								</SetVariables>
							</Action>
							<Informations2>
								<Information>
									<Type>Output</Type>
									<Value Param0="t_connectionId" Param1="ConnData.SlaveAddress" Param2="t_connData">ConnectionId: {0} (0x{0:x4}), Slave Address: {1} (0x{1:x4}), Connection Data {2}</Value>
								</Information>
							</Informations2>
						</TestStep>
						<TestStep Name="SetParameterData">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>t_safePara</Destination>
										<Source>SafePara</Source>
									</SetVariable>
									<SetVariable>
										<Destination>t_watchdog</Destination>
										<Source>SafePara.Watchdog</Source>
									</SetVariable>
								</SetVariables>
							</Action>
							<Informations2>
								<Information>
									<Type>Output</Type>
									<Value Param0="t_watchdog" Param1="SafeParaSize" Param2="t_safePara">Watchdog: {0} ms, SafeParaSize: {1}, Safe Parameter {2}</Value>
								</Information>
							</Informations2>
						</TestStep>
						<TestStep Name="GotoParameter">
							<Action>
								<CallFunction>
									<Reference>RUN_DUT_TO_PARAMETER</Reference>
								</CallFunction>
							</Action>
						</TestStep>
						<TestStep Name="SetLastCrc">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>LastCrc</Destination>
										<Source>t_slaveFrame.Crc0</Source>
									</SetVariable>
								</SetVariables>
							</Action>
						</TestStep>
						<TestStep Name="SetInvalidMasterSequenceNo">
							<Informations1>
								<Information>
									<Type>Output</Type>
									<Value Param0="t_masterSeqNo">Valid Master SequenceNo: {0}</Value>
								</Information>
							</Informations1>
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>t_masterSeqNo</Destination>
										<Source>t_masterSeqNo-1</Source>
									</SetVariable>
								</SetVariables>
							</Action>
							<Informations2>
								<Information>
									<Type>Output</Type>
									<Value Param0="t_masterSeqNo">Falsified Master SequenceNo: {0}</Value>
								</Information>
							</Informations2>
						</TestStep>
						<TestStep Name="SetFrame">
							<Informations1>
								<Information>
									<Type>Verbose</Type>
									<Value Param0="SafeOutputs" Param1="LastCrc" Param2="t_masterSeqNo" Param3="OldMasterCrc" Param4="t_connectionId">SetFrame(Command Parameter, SafeData {0}, LastCrc 0x{1:x4}, ConnectionId 0x{4:x4},  SequenceNo 0x{2:x4}, OldCrc 0x{3:x4}, New true</Value>
								</Information>
							</Informations1>
							<Action>
								<SetFrame Name="t_masterFrame">
									<Command>
										<CommandValue>Data</CommandValue>
									</Command>
									<SafeData>
										<SafeDataVariable>SafeOutputs</SafeDataVariable>
									</SafeData>
									<LastCRC>LastCrc</LastCRC>
									<ConnectionID>
										<ConnectionIdVariable>t_connectionId</ConnectionIdVariable>
									</ConnectionID>
									<SequenceNo>t_masterSeqNo</SequenceNo>
									<OldCRC>OldMasterCrc</OldCRC>
									<New>true</New>
								</SetFrame>
							</Action>
						</TestStep>
						<TestStep Name="SendFrame">
							<Action>
								<SendFrame Name="t_masterFrame"/>
							</Action>
							<Informations2>
								<Information>
									<Type>Verbose</Type>
									<Value Param0="t_masterFrame.FrameData">Master Frame: {0}</Value>
								</Information>
							</Informations2>
							<ReturnValue>
								<OnFailure>
									<Type>Error</Type>
									<Value>Failed to send FSoE frame!</Value>
									<Id>256</Id>
								</OnFailure>
							</ReturnValue>
						</TestStep>
						<TestStep Name="CheckReceivedSlaveFrame">
							<Action>
								<CallFunction>
									<Reference>CHECK_RESET_FAIL</Reference>
								</CallFunction>
							</Action>
							<ReturnValue>
								<OnSuccess>
									<Type>Success</Type>
									<Value Param0="c_CommFaultReason">Expected CommFaultReason ({0}) received</Value>
								</OnSuccess>
							</ReturnValue>
						</TestStep>
					</TestSteps>
				</TestCase>
				<TestCase Name="#4.15 Para_Fail1" CaseId="15">
					<Comment>Falsche Master SequenceNo (-1) ; Command = FailSafeData; SafeData = FailSafeValue</Comment>
					<CaseVariables>
						<Variable>
							<Name>c_CommFaultReason</Name>
							<Type>Byte</Type>
						</Variable>
						<Variable>
							<Name>c_tmpByte</Name>
							<Type>Byte</Type>
						</Variable>
					</CaseVariables>
					<TestSteps>
						<TestStep Name="SetVariables">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>c_CommFaultReason</Destination>
										<Source>INVALID_CRC</Source>
									</SetVariable>
									<SetVariable>
										<Destination>c_tmpByte</Destination>
										<Source>0</Source>
									</SetVariable>
									<SetVariable>
										<Destination>t_wdExpired</Destination>
										<Source>false</Source>
									</SetVariable>
									<SetVariable>
										<Destination>t_masterSessionId</Destination>
										<Source>1</Source>
									</SetVariable>
								</SetVariables>
							</Action>
						</TestStep>
						<TestStep Name="SetConnectionData">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>t_connectionId</Destination>
										<Source>3</Source>
									</SetVariable>
									<SetVariable>
										<Destination DestinationIndex="0">t_connData</Destination>
										<Source>t_connectionId</Source>
									</SetVariable>
									<SetVariable>
										<Destination DestinationIndex="2">t_connData</Destination>
										<Source>ConnData.SlaveAddress</Source>
									</SetVariable>
								</SetVariables>
							</Action>
							<Informations2>
								<Information>
									<Type>Output</Type>
									<Value Param0="t_connectionId" Param1="ConnData.SlaveAddress" Param2="t_connData">ConnectionId: {0} (0x{0:x4}), Slave Address: {1} (0x{1:x4}), Connection Data {2}</Value>
								</Information>
							</Informations2>
						</TestStep>
						<TestStep Name="SetParameterData">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>t_safePara</Destination>
										<Source>SafePara</Source>
									</SetVariable>
									<SetVariable>
										<Destination>t_watchdog</Destination>
										<Source>SafePara.Watchdog</Source>
									</SetVariable>
								</SetVariables>
							</Action>
							<Informations2>
								<Information>
									<Type>Output</Type>
									<Value Param0="t_watchdog" Param1="SafeParaSize" Param2="t_safePara">Watchdog: {0} ms, SafeParaSize: {1}, Safe Parameter {2}</Value>
								</Information>
							</Informations2>
						</TestStep>
						<TestStep Name="GotoParameter">
							<Action>
								<CallFunction>
									<Reference>RUN_DUT_TO_PARAMETER</Reference>
								</CallFunction>
							</Action>
						</TestStep>
						<TestStep Name="SetLastCrc">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>LastCrc</Destination>
										<Source>t_slaveFrame.Crc0</Source>
									</SetVariable>
								</SetVariables>
							</Action>
						</TestStep>
						<TestStep Name="SetInvalidMasterSequenceNo">
							<Informations1>
								<Information>
									<Type>Output</Type>
									<Value Param0="t_masterSeqNo">Valid Master SequenceNo: {0}</Value>
								</Information>
							</Informations1>
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>t_masterSeqNo</Destination>
										<Source>t_masterSeqNo-1</Source>
									</SetVariable>
								</SetVariables>
							</Action>
							<Informations2>
								<Information>
									<Type>Output</Type>
									<Value Param0="t_masterSeqNo">Falsified Master SequenceNo: {0}</Value>
								</Information>
							</Informations2>
						</TestStep>
						<TestStep Name="SetFrame">
							<Informations1>
								<Information>
									<Type>Verbose</Type>
									<Value Param0="FailSafeValue" Param1="LastCrc" Param2="t_masterSeqNo" Param3="OldMasterCrc" Param4="t_connectionId">SetFrame(Command Parameter, SafeData {0}, LastCrc 0x{1:x4}, ConnectionId 0x{4:x4},  SequenceNo 0x{2:x4}, OldCrc 0x{3:x4}, New true</Value>
								</Information>
							</Informations1>
							<Action>
								<SetFrame Name="t_masterFrame">
									<Command>
										<CommandValue>FailSafeData</CommandValue>
									</Command>
									<SafeData>
										<SafeDataVariable>FailSafeValue</SafeDataVariable>
									</SafeData>
									<LastCRC>LastCrc</LastCRC>
									<ConnectionID>
										<ConnectionIdVariable>t_connectionId</ConnectionIdVariable>
									</ConnectionID>
									<SequenceNo>t_masterSeqNo</SequenceNo>
									<OldCRC>OldMasterCrc</OldCRC>
									<New>true</New>
								</SetFrame>
							</Action>
						</TestStep>
						<TestStep Name="SendFrame">
							<Action>
								<SendFrame Name="t_masterFrame"/>
							</Action>
							<Informations2>
								<Information>
									<Type>Verbose</Type>
									<Value Param0="t_masterFrame.FrameData">Master Frame: {0}</Value>
								</Information>
							</Informations2>
							<ReturnValue>
								<OnFailure>
									<Type>Error</Type>
									<Value>Failed to send FSoE frame!</Value>
									<Id>256</Id>
								</OnFailure>
							</ReturnValue>
						</TestStep>
						<TestStep Name="CheckReceivedSlaveFrame">
							<Action>
								<CallFunction>
									<Reference>CHECK_RESET_FAIL</Reference>
								</CallFunction>
							</Action>
							<ReturnValue>
								<OnSuccess>
									<Type>Success</Type>
									<Value Param0="c_CommFaultReason">Expected CommFaultReason ({0}) received</Value>
								</OnSuccess>
							</ReturnValue>
						</TestStep>
					</TestSteps>
				</TestCase>
				<TestCase Name="#4.16 Para_Fail2" CaseId="16">
					<Comment>Falsche Länge der Kommunikationsparameter (1)</Comment>
					<CaseVariables>
						<Variable>
							<Name>c_CommFaultReason</Name>
							<Type>Byte</Type>
						</Variable>
						<Variable>
							<Name>c_tmpByte</Name>
							<Type>Byte</Type>
						</Variable>
					</CaseVariables>
					<TestSteps>
						<TestStep Name="SetVariables">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>c_CommFaultReason</Destination>
										<Source>INVALID_COMPARA_LEN</Source>
									</SetVariable>
									<SetVariable>
										<Destination>c_tmpByte</Destination>
										<Source>0</Source>
									</SetVariable>
									<SetVariable>
										<Destination>t_wdExpired</Destination>
										<Source>false</Source>
									</SetVariable>
									<SetVariable>
										<Destination>t_masterSessionId</Destination>
										<Source>1</Source>
									</SetVariable>
								</SetVariables>
							</Action>
						</TestStep>
						<TestStep Name="SetConnectionData">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>t_connectionId</Destination>
										<Source>3</Source>
									</SetVariable>
									<SetVariable>
										<Destination DestinationIndex="0">t_connData</Destination>
										<Source>t_connectionId</Source>
									</SetVariable>
									<SetVariable>
										<Destination DestinationIndex="2">t_connData</Destination>
										<Source>ConnData.SlaveAddress</Source>
									</SetVariable>
								</SetVariables>
							</Action>
							<Informations2>
								<Information>
									<Type>Output</Type>
									<Value Param0="t_connectionId" Param1="ConnData.SlaveAddress" Param2="t_connData">ConnectionId: {0} (0x{0:x4}), Slave Address: {1} (0x{1:x4}), Connection Data {2}</Value>
								</Information>
							</Informations2>
						</TestStep>
						<TestStep Name="SetInvalidParameterData">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>t_safePara</Destination>
										<Source>SafePara</Source>
									</SetVariable>
									<SetVariable>
										<Destination>t_commParaLength</Destination>
										<Source>1</Source>
									</SetVariable>
									<SetVariable>
										<Destination DestinationIndex="0">t_safePara</Destination>
										<Source>t_commParaLength</Source>
									</SetVariable>
									<SetVariable>
										<Destination>t_watchdog</Destination>
										<Source>SafePara.Watchdog</Source>
									</SetVariable>
								</SetVariables>
							</Action>
							<Informations2>
								<Information>
									<Type>Output</Type>
									<Value Param0="t_watchdog" Param1="SafeParaSize" Param2="t_safePara" Param3="t_commParaLength">Watchdog: {0} ms, SafeParaSize: {1}, Safe Parameter {2}, CommunicationParaSize {3}  (0x{3:x4})</Value>
								</Information>
							</Informations2>
						</TestStep>
						<TestStep Name="GotoParameter">
							<Action>
								<CallFunction>
									<Reference>RUN_DUT_TO_PARAMETER</Reference>
								</CallFunction>
							</Action>
						</TestStep>
						<TestStep Name="SetLastCrc">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>LastCrc</Destination>
										<Source>t_slaveFrame.Crc0</Source>
									</SetVariable>
								</SetVariables>
							</Action>
						</TestStep>
						<TestStep Name="SetFrame">
							<Informations1>
								<Information>
									<Type>Verbose</Type>
									<Value Param0="t_safePara" Param1="LastCrc" Param2="t_masterSeqNo" Param3="OldMasterCrc" Param4="t_connectionId">SetFrame(Command ProcessData, SafeData {0}, LastCrc 0x{1:x4}, ConnectionId 0x{4:x4},  SequenceNo 0x{2:x4}, OldCrc 0x{3:x4}, New true</Value>
								</Information>
							</Informations1>
							<Action>
								<SetFrame Name="t_masterFrame">
									<Command>
										<CommandValue>Data</CommandValue>
									</Command>
									<SafeData>
										<SafeDataVariable>t_safePara</SafeDataVariable>
									</SafeData>
									<LastCRC>LastCrc</LastCRC>
									<ConnectionID>
										<ConnectionIdVariable>t_connectionId</ConnectionIdVariable>
									</ConnectionID>
									<SequenceNo>t_masterSeqNo</SequenceNo>
									<OldCRC>OldMasterCrc</OldCRC>
									<New>true</New>
								</SetFrame>
							</Action>
						</TestStep>
						<TestStep Name="SendFrame">
							<Action>
								<SendFrame Name="t_masterFrame"/>
							</Action>
							<Informations2>
								<Information>
									<Type>Verbose</Type>
									<Value Param0="t_masterFrame.FrameData">Master Frame: {0}</Value>
								</Information>
							</Informations2>
							<ReturnValue>
								<OnFailure>
									<Type>Error</Type>
									<Value>Failed to send FSoE frame!</Value>
									<Id>256</Id>
								</OnFailure>
							</ReturnValue>
						</TestStep>
						<TestStep Name="CheckReceivedSlaveFrame">
							<Action>
								<CallFunction>
									<Reference>CHECK_RESET_FAIL</Reference>
								</CallFunction>
							</Action>
							<ReturnValue>
								<OnSuccess>
									<Type>Success</Type>
									<Value Param0="c_CommFaultReason">Expected CommFaultReason ({0}) received</Value>
								</OnSuccess>
							</ReturnValue>
						</TestStep>
					</TestSteps>
				</TestCase>
				<TestCase Name="#4.17 Para_Fail2" CaseId="17">
					<Comment>Falsche Länge der Kommunikationsparameter (0xffff)</Comment>
					<CaseVariables>
						<Variable>
							<Name>c_CommFaultReason</Name>
							<Type>Byte</Type>
						</Variable>
						<Variable>
							<Name>c_tmpByte</Name>
							<Type>Byte</Type>
						</Variable>
					</CaseVariables>
					<TestSteps>
						<TestStep Name="SetVariables">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>c_CommFaultReason</Destination>
										<Source>INVALID_COMPARA_LEN</Source>
									</SetVariable>
									<SetVariable>
										<Destination>c_tmpByte</Destination>
										<Source>0</Source>
									</SetVariable>
									<SetVariable>
										<Destination>t_wdExpired</Destination>
										<Source>false</Source>
									</SetVariable>
									<SetVariable>
										<Destination>t_masterSessionId</Destination>
										<Source>1</Source>
									</SetVariable>
								</SetVariables>
							</Action>
						</TestStep>
						<TestStep Name="SetConnectionData">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>t_connectionId</Destination>
										<Source>3</Source>
									</SetVariable>
									<SetVariable>
										<Destination DestinationIndex="0">t_connData</Destination>
										<Source>t_connectionId</Source>
									</SetVariable>
									<SetVariable>
										<Destination DestinationIndex="2">t_connData</Destination>
										<Source>ConnData.SlaveAddress</Source>
									</SetVariable>
								</SetVariables>
							</Action>
							<Informations2>
								<Information>
									<Type>Output</Type>
									<Value Param0="t_connectionId" Param1="ConnData.SlaveAddress" Param2="t_connData">ConnectionId: {0} (0x{0:x4}), Slave Address: {1} (0x{1:x4}), Connection Data {2}</Value>
								</Information>
							</Informations2>
						</TestStep>
						<TestStep Name="SetInvalidParameterData">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>t_safePara</Destination>
										<Source>SafePara</Source>
									</SetVariable>
									<SetVariable>
										<Destination>t_commParaLength</Destination>
										<Source>65535</Source>
									</SetVariable>
									<SetVariable>
										<Destination DestinationIndex="0">t_safePara</Destination>
										<Source>t_commParaLength</Source>
									</SetVariable>
									<SetVariable>
										<Destination>t_watchdog</Destination>
										<Source>SafePara.Watchdog</Source>
									</SetVariable>
								</SetVariables>
							</Action>
							<Informations2>
								<Information>
									<Type>Output</Type>
									<Value Param0="t_watchdog" Param1="SafeParaSize" Param2="t_safePara" Param3="t_commParaLength">Watchdog: {0} ms, SafeParaSize: {1}, Safe Parameter {2}, CommunicationParaSize {3}  (0x{3:x4})</Value>
								</Information>
							</Informations2>
						</TestStep>
						<TestStep Name="GotoParameter">
							<Action>
								<CallFunction>
									<Reference>RUN_DUT_TO_PARAMETER</Reference>
								</CallFunction>
							</Action>
						</TestStep>
						<TestStep Name="SetLastCrc">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>LastCrc</Destination>
										<Source>t_slaveFrame.Crc0</Source>
									</SetVariable>
								</SetVariables>
							</Action>
						</TestStep>
						<TestStep Name="SetFrame">
							<Informations1>
								<Information>
									<Type>Verbose</Type>
									<Value Param0="t_safePara" Param1="LastCrc" Param2="t_masterSeqNo" Param3="OldMasterCrc" Param4="t_connectionId">SetFrame(Command ProcessData, SafeData {0}, LastCrc 0x{1:x4}, ConnectionId 0x{4:x4},  SequenceNo 0x{2:x4}, OldCrc 0x{3:x4}, New true</Value>
								</Information>
							</Informations1>
							<Action>
								<SetFrame Name="t_masterFrame">
									<Command>
										<CommandValue>Data</CommandValue>
									</Command>
									<SafeData>
										<SafeDataVariable>t_safePara</SafeDataVariable>
									</SafeData>
									<LastCRC>LastCrc</LastCRC>
									<ConnectionID>
										<ConnectionIdVariable>t_connectionId</ConnectionIdVariable>
									</ConnectionID>
									<SequenceNo>t_masterSeqNo</SequenceNo>
									<OldCRC>OldMasterCrc</OldCRC>
									<New>true</New>
								</SetFrame>
							</Action>
						</TestStep>
						<TestStep Name="SendFrame">
							<Action>
								<SendFrame Name="t_masterFrame"/>
							</Action>
							<Informations2>
								<Information>
									<Type>Verbose</Type>
									<Value Param0="t_masterFrame.FrameData">Master Frame: {0}</Value>
								</Information>
							</Informations2>
							<ReturnValue>
								<OnFailure>
									<Type>Error</Type>
									<Value>Failed to send FSoE frame!</Value>
									<Id>256</Id>
								</OnFailure>
							</ReturnValue>
						</TestStep>
						<TestStep Name="CheckReceivedSlaveFrame">
							<Action>
								<CallFunction>
									<Reference>CHECK_RESET_FAIL</Reference>
								</CallFunction>
							</Action>
							<ReturnValue>
								<OnSuccess>
									<Type>Success</Type>
									<Value Param0="c_CommFaultReason">Expected CommFaultReason ({0}) received</Value>
								</OnSuccess>
							</ReturnValue>
						</TestStep>
					</TestSteps>
				</TestCase>
				<TestCase Name="#4.18 Para_Fail2" CaseId="18">
					<Comment>Falsche Länge der Anwendungsparameter (+1)</Comment>
					<CaseVariables>
						<Variable>
							<Name>c_CommFaultReason</Name>
							<Type>Byte</Type>
						</Variable>
						<Variable>
							<Name>c_tmpByte</Name>
							<Type>Byte</Type>
						</Variable>
						<Variable>
							<Name>c_tmpApplParaLength</Name>
							<Type>UInt16</Type>
						</Variable>
					</CaseVariables>
					<TestSteps>
						<TestStep Name="SetVariables">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>c_CommFaultReason</Destination>
										<Source>INVALID_USERPARA_LEN</Source>
									</SetVariable>
									<SetVariable>
										<Destination>c_tmpByte</Destination>
										<Source>0</Source>
									</SetVariable>
									<SetVariable>
										<Destination>t_wdExpired</Destination>
										<Source>false</Source>
									</SetVariable>
									<SetVariable>
										<Destination>t_masterSessionId</Destination>
										<Source>1</Source>
									</SetVariable>
								</SetVariables>
							</Action>
						</TestStep>
						<TestStep Name="SetConnectionData">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>t_connectionId</Destination>
										<Source>3</Source>
									</SetVariable>
									<SetVariable>
										<Destination DestinationIndex="0">t_connData</Destination>
										<Source>t_connectionId</Source>
									</SetVariable>
									<SetVariable>
										<Destination DestinationIndex="2">t_connData</Destination>
										<Source>ConnData.SlaveAddress</Source>
									</SetVariable>
								</SetVariables>
							</Action>
							<Informations2>
								<Information>
									<Type>Output</Type>
									<Value Param0="t_connectionId" Param1="ConnData.SlaveAddress" Param2="t_connData">ConnectionId: {0} (0x{0:x4}), Slave Address: {1} (0x{1:x4}), Connection Data {2}</Value>
								</Information>
							</Informations2>
						</TestStep>
						<TestStep Name="SetInvalidParameterData">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>t_safePara</Destination>
										<Source>SafePara</Source>
									</SetVariable>
									<SetVariable>
										<Destination>t_applicationParaLength</Destination>
										<Source>SafePara.ApplicationParaLength</Source>
									</SetVariable>
									<SetVariable>
										<Destination>c_tmpApplParaLength</Destination>
										<Source>t_applicationParaLength+1</Source>
									</SetVariable>
									<SetVariable>
										<Destination DestinationIndex="4">t_safePara</Destination>
										<Source>c_tmpApplParaLength</Source>
									</SetVariable>
									<SetVariable>
										<Destination>t_watchdog</Destination>
										<Source>SafePara.Watchdog</Source>
									</SetVariable>
								</SetVariables>
							</Action>
							<Informations2>
								<Information>
									<Type>Output</Type>
									<Value Param0="t_watchdog" Param1="SafeParaSize" Param2="t_safePara" Param3="t_commParaLength" Param4="t_applicationParaLength">Watchdog: {0} ms, SafeParaSize: {1}, Safe Parameter {2}, CommunicationParaSize {3}  (0x{3:x4}), ApplicationParaLength {4} (0x{4:x4})</Value>
								</Information>
							</Informations2>
						</TestStep>
						<TestStep Name="GotoParameter">
							<Action>
								<CallFunction>
									<Reference>RUN_DUT_TO_PARAMETER</Reference>
								</CallFunction>
							</Action>
						</TestStep>
						<TestStep Name="SetLastCrc">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>LastCrc</Destination>
										<Source>t_slaveFrame.Crc0</Source>
									</SetVariable>
								</SetVariables>
							</Action>
						</TestStep>
						<TestStep Name="SetFrame">
							<Informations1>
								<Information>
									<Type>Verbose</Type>
									<Value Param0="SafeOutputs" Param1="LastCrc" Param2="t_masterSeqNo" Param3="OldMasterCrc" Param4="t_connectionId">SetFrame(Command ProcessData, SafeData {0}, LastCrc 0x{1:x4}, ConnectionId 0x{4:x4},  SequenceNo 0x{2:x4}, OldCrc 0x{3:x4}, New true</Value>
								</Information>
							</Informations1>
							<Action>
								<SetFrame Name="t_masterFrame">
									<Command>
										<CommandValue>Data</CommandValue>
									</Command>
									<SafeData>
										<SafeDataVariable>SafeOutputs</SafeDataVariable>
									</SafeData>
									<LastCRC>LastCrc</LastCRC>
									<ConnectionID>
										<ConnectionIdVariable>t_connectionId</ConnectionIdVariable>
									</ConnectionID>
									<SequenceNo>t_masterSeqNo</SequenceNo>
									<OldCRC>OldMasterCrc</OldCRC>
									<New>true</New>
								</SetFrame>
							</Action>
						</TestStep>
						<TestStep Name="SendFrame">
							<Action>
								<SendFrame Name="t_masterFrame"/>
							</Action>
							<Informations2>
								<Information>
									<Type>Verbose</Type>
									<Value Param0="t_masterFrame.FrameData">Master Frame: {0}</Value>
								</Information>
							</Informations2>
							<ReturnValue>
								<OnFailure>
									<Type>Error</Type>
									<Value>Failed to send FSoE frame!</Value>
									<Id>256</Id>
								</OnFailure>
							</ReturnValue>
						</TestStep>
						<TestStep Name="CheckReceivedSlaveFrame">
							<Action>
								<CallFunction>
									<Reference>CHECK_RESET_FAIL</Reference>
								</CallFunction>
							</Action>
							<ReturnValue>
								<OnSuccess>
									<Type>Success</Type>
									<Value Param0="c_CommFaultReason">Expected CommFaultReason ({0}) received</Value>
								</OnSuccess>
							</ReturnValue>
						</TestStep>
					</TestSteps>
				</TestCase>
				<TestCase Name="#4.19 Para_Fail2" CaseId="19">
					<Comment>Falsche Parameter Watchdogzeit außerhalb der Grenzen (min-1)</Comment>
					<CaseVariables>
						<Variable>
							<Name>c_CommFaultReason</Name>
							<Type>Byte</Type>
						</Variable>
						<Variable>
							<Name>c_tmpByte</Name>
							<Type>Byte</Type>
						</Variable>
						<Variable>
							<Name>c_falsifiedWD</Name>
							<Type>UInt16</Type>
						</Variable>
					</CaseVariables>
					<TestSteps>
						<TestStep Name="SetVariables">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>c_CommFaultReason</Destination>
										<Source>INVALID_COMPARA</Source>
									</SetVariable>
									<SetVariable>
										<Destination>c_tmpByte</Destination>
										<Source>0</Source>
									</SetVariable>
									<SetVariable>
										<Destination>t_wdExpired</Destination>
										<Source>false</Source>
									</SetVariable>
									<SetVariable>
										<Destination>t_masterSessionId</Destination>
										<Source>1</Source>
									</SetVariable>
								</SetVariables>
							</Action>
						</TestStep>
						<TestStep Name="SetConnectionData">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>t_connectionId</Destination>
										<Source>3</Source>
									</SetVariable>
									<SetVariable>
										<Destination DestinationIndex="0">t_connData</Destination>
										<Source>t_connectionId</Source>
									</SetVariable>
									<SetVariable>
										<Destination DestinationIndex="2">t_connData</Destination>
										<Source>ConnData.SlaveAddress</Source>
									</SetVariable>
								</SetVariables>
							</Action>
							<Informations2>
								<Information>
									<Type>Output</Type>
									<Value Param0="t_connectionId" Param1="ConnData.SlaveAddress" Param2="t_connData">ConnectionId: {0} (0x{0:x4}), Slave Address: {1} (0x{1:x4}), Connection Data {2}</Value>
								</Information>
							</Informations2>
						</TestStep>
						<TestStep Name="SetInvalidParameterData">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>t_safePara</Destination>
										<Source>SafePara</Source>
									</SetVariable>
									<SetVariable>
										<Destination>t_applicationParaLength</Destination>
										<Source>SafePara.ApplicationParaLength</Source>
									</SetVariable>
									<SetVariable>
										<Destination>c_falsifiedWD</Destination>
										<Source>MinWatchdog-1</Source>
									</SetVariable>
									<SetVariable>
										<Destination DestinationIndex="2">t_safePara</Destination>
										<Source>c_falsifiedWD</Source>
									</SetVariable>
									<SetVariable>
										<Destination>t_watchdog</Destination>
										<Source>SafePara.Watchdog</Source>
									</SetVariable>
								</SetVariables>
							</Action>
							<Informations2>
								<Information>
									<Type>Output</Type>
									<Value Param0="c_falsifiedWD" Param1="SafeParaSize" Param2="t_safePara" Param3="t_applicationParaLength">Falsified Watchdog: {0} ms, SafeParaSize: {1}, Safe Parameter {2},  ApplicationParaLength {3} (0x{3:x4})</Value>
								</Information>
							</Informations2>
						</TestStep>
						<TestStep Name="GotoParameter">
							<Action>
								<CallFunction>
									<Reference>RUN_DUT_TO_PARAMETER</Reference>
								</CallFunction>
							</Action>
						</TestStep>
						<TestStep Name="SetLastCrc">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>LastCrc</Destination>
										<Source>t_slaveFrame.Crc0</Source>
									</SetVariable>
								</SetVariables>
							</Action>
						</TestStep>
						<TestStep Name="SetFrame">
							<Informations1>
								<Information>
									<Type>Verbose</Type>
									<Value Param0="SafeOutputs" Param1="LastCrc" Param2="t_masterSeqNo" Param3="OldMasterCrc" Param4="t_connectionId">SetFrame(Command ProcessData, SafeData {0}, LastCrc 0x{1:x4}, ConnectionId 0x{4:x4},  SequenceNo 0x{2:x4}, OldCrc 0x{3:x4}, New true</Value>
								</Information>
							</Informations1>
							<Action>
								<SetFrame Name="t_masterFrame">
									<Command>
										<CommandValue>Data</CommandValue>
									</Command>
									<SafeData>
										<SafeDataVariable>SafeOutputs</SafeDataVariable>
									</SafeData>
									<LastCRC>LastCrc</LastCRC>
									<ConnectionID>
										<ConnectionIdVariable>t_connectionId</ConnectionIdVariable>
									</ConnectionID>
									<SequenceNo>t_masterSeqNo</SequenceNo>
									<OldCRC>OldMasterCrc</OldCRC>
									<New>true</New>
								</SetFrame>
							</Action>
						</TestStep>
						<TestStep Name="SendFrame">
							<Action>
								<SendFrame Name="t_masterFrame"/>
							</Action>
							<Informations2>
								<Information>
									<Type>Verbose</Type>
									<Value Param0="t_masterFrame.FrameData">Master Frame: {0}</Value>
								</Information>
							</Informations2>
							<ReturnValue>
								<OnFailure>
									<Type>Error</Type>
									<Value>Failed to send FSoE frame!</Value>
									<Id>256</Id>
								</OnFailure>
							</ReturnValue>
						</TestStep>
						<TestStep Name="CheckReceivedSlaveFrame">
							<Action>
								<CallFunction>
									<Reference>CHECK_RESET_FAIL</Reference>
								</CallFunction>
							</Action>
							<ReturnValue>
								<OnSuccess>
									<Type>Success</Type>
									<Value Param0="c_CommFaultReason">Expected CommFaultReason ({0}) received</Value>
								</OnSuccess>
							</ReturnValue>
						</TestStep>
					</TestSteps>
				</TestCase>
				<TestCase Name="#4.20 Para_Fail2" CaseId="20">
					<Comment>Falsche Parameter Watchdogzeit außerhalb der Grenzen (max+1)</Comment>
					<CaseVariables>
						<Variable>
							<Name>c_CommFaultReason</Name>
							<Type>Byte</Type>
						</Variable>
						<Variable>
							<Name>c_tmpByte</Name>
							<Type>Byte</Type>
						</Variable>
						<Variable>
							<Name>c_falsifiedWD</Name>
							<Type>UInt16</Type>
						</Variable>
						<Variable>
							<Name>c_maxWD</Name>
							<Type>UInt16</Type>
						</Variable>
					</CaseVariables>
					<TestSteps>
						<TestStep Name="CheckTheCurrentMaxWD">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>c_maxWD</Destination>
										<Source>65535</Source>
									</SetVariable>
								</SetVariables>
							</Action>
							<Compares>
								<Compare>
									<Condition>
										<Value1>MaxWatchdog</Value1>
										<Operator>Equal</Operator>
										<Value2>c_maxWD</Value2>
									</Condition>
									<Statement>
										<Return>
											<Type>SkippedCase</Type>
											<Value>Test Case is skipped because the current max watchdog is 0xffff</Value>
										</Return>
									</Statement>
								</Compare>
							</Compares>
						</TestStep>
						<TestStep Name="SetVariables">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>c_CommFaultReason</Destination>
										<Source>INVALID_COMPARA</Source>
									</SetVariable>
									<SetVariable>
										<Destination>c_tmpByte</Destination>
										<Source>0</Source>
									</SetVariable>
									<SetVariable>
										<Destination>t_wdExpired</Destination>
										<Source>false</Source>
									</SetVariable>
									<SetVariable>
										<Destination>t_masterSessionId</Destination>
										<Source>1</Source>
									</SetVariable>
								</SetVariables>
							</Action>
						</TestStep>
						<TestStep Name="SetConnectionData">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>t_connectionId</Destination>
										<Source>3</Source>
									</SetVariable>
									<SetVariable>
										<Destination DestinationIndex="0">t_connData</Destination>
										<Source>t_connectionId</Source>
									</SetVariable>
									<SetVariable>
										<Destination DestinationIndex="2">t_connData</Destination>
										<Source>ConnData.SlaveAddress</Source>
									</SetVariable>
								</SetVariables>
							</Action>
							<Informations2>
								<Information>
									<Type>Output</Type>
									<Value Param0="t_connectionId" Param1="ConnData.SlaveAddress" Param2="t_connData">ConnectionId: {0} (0x{0:x4}), Slave Address: {1} (0x{1:x4}), Connection Data {2}</Value>
								</Information>
							</Informations2>
						</TestStep>
						<TestStep Name="SetInvalidParameterData">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>t_safePara</Destination>
										<Source>SafePara</Source>
									</SetVariable>
									<SetVariable>
										<Destination>t_applicationParaLength</Destination>
										<Source>SafePara.ApplicationParaLength</Source>
									</SetVariable>
									<SetVariable>
										<Destination>c_falsifiedWD</Destination>
										<Source>MaxWatchdog+1</Source>
									</SetVariable>
									<SetVariable>
										<Destination DestinationIndex="2">t_safePara</Destination>
										<Source>c_falsifiedWD</Source>
									</SetVariable>
									<SetVariable>
										<Destination>t_watchdog</Destination>
										<Source>SafePara.Watchdog</Source>
									</SetVariable>
								</SetVariables>
							</Action>
							<Informations2>
								<Information>
									<Type>Output</Type>
									<Value Param0="c_falsifiedWD" Param1="SafeParaSize" Param2="t_safePara" Param3="t_applicationParaLength">Falsified Watchdog: {0} ms, SafeParaSize: {1}, Safe Parameter {2},  ApplicationParaLength {3} (0x{3:x4})</Value>
								</Information>
							</Informations2>
						</TestStep>
						<TestStep Name="GotoParameter">
							<Action>
								<CallFunction>
									<Reference>RUN_DUT_TO_PARAMETER</Reference>
								</CallFunction>
							</Action>
						</TestStep>
						<TestStep Name="SetLastCrc">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>LastCrc</Destination>
										<Source>t_slaveFrame.Crc0</Source>
									</SetVariable>
								</SetVariables>
							</Action>
						</TestStep>
						<TestStep Name="SetFrame">
							<Informations1>
								<Information>
									<Type>Verbose</Type>
									<Value Param0="SafeOutputs" Param1="LastCrc" Param2="t_masterSeqNo" Param3="OldMasterCrc" Param4="t_connectionId">SetFrame(Command ProcessData, SafeData {0}, LastCrc 0x{1:x4}, ConnectionId 0x{4:x4},  SequenceNo 0x{2:x4}, OldCrc 0x{3:x4}, New true</Value>
								</Information>
							</Informations1>
							<Action>
								<SetFrame Name="t_masterFrame">
									<Command>
										<CommandValue>Data</CommandValue>
									</Command>
									<SafeData>
										<SafeDataVariable>SafeOutputs</SafeDataVariable>
									</SafeData>
									<LastCRC>LastCrc</LastCRC>
									<ConnectionID>
										<ConnectionIdVariable>t_connectionId</ConnectionIdVariable>
									</ConnectionID>
									<SequenceNo>t_masterSeqNo</SequenceNo>
									<OldCRC>OldMasterCrc</OldCRC>
									<New>true</New>
								</SetFrame>
							</Action>
						</TestStep>
						<TestStep Name="SendFrame">
							<Action>
								<SendFrame Name="t_masterFrame"/>
							</Action>
							<Informations2>
								<Information>
									<Type>Verbose</Type>
									<Value Param0="t_masterFrame.FrameData">Master Frame: {0}</Value>
								</Information>
							</Informations2>
							<ReturnValue>
								<OnFailure>
									<Type>Error</Type>
									<Value>Failed to send FSoE frame!</Value>
									<Id>256</Id>
								</OnFailure>
							</ReturnValue>
						</TestStep>
						<TestStep Name="CheckReceivedSlaveFrame">
							<Action>
								<CallFunction>
									<Reference>CHECK_RESET_FAIL</Reference>
								</CallFunction>
							</Action>
							<ReturnValue>
								<OnSuccess>
									<Type>Success</Type>
									<Value Param0="c_CommFaultReason">Expected CommFaultReason ({0}) received</Value>
								</OnSuccess>
							</ReturnValue>
						</TestStep>
					</TestSteps>
				</TestCase>
				<TestCase Name="#4.22 Para_Fail3" CaseId="22">
					<Comment>Gültige ConnId = 3, Ungültige ConnId = 0, Cmd = Processdata</Comment>
					<CaseVariables>
						<Variable>
							<Name>c_CommFaultReason</Name>
							<Type>Byte</Type>
						</Variable>
						<Variable>
							<Name>c_tmpByte</Name>
							<Type>Byte</Type>
						</Variable>
					</CaseVariables>
					<TestSteps>
						<TestStep Name="SetVariables">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>c_CommFaultReason</Destination>
										<Source>INVALID_CONNID</Source>
									</SetVariable>
									<SetVariable>
										<Destination>c_tmpByte</Destination>
										<Source>0</Source>
									</SetVariable>
									<SetVariable>
										<Destination>t_wdExpired</Destination>
										<Source>false</Source>
									</SetVariable>
									<SetVariable>
										<Destination>t_masterSessionId</Destination>
										<Source>1</Source>
									</SetVariable>
								</SetVariables>
							</Action>
						</TestStep>
						<TestStep Name="SetConnectionData">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>t_connectionId</Destination>
										<Source>3</Source>
									</SetVariable>
									<SetVariable>
										<Destination DestinationIndex="0">t_connData</Destination>
										<Source>t_connectionId</Source>
									</SetVariable>
									<SetVariable>
										<Destination DestinationIndex="2">t_connData</Destination>
										<Source>ConnData.SlaveAddress</Source>
									</SetVariable>
								</SetVariables>
							</Action>
							<Informations2>
								<Information>
									<Type>Output</Type>
									<Value Param0="t_connectionId" Param1="ConnData.SlaveAddress" Param2="t_connData">ConnectionId: {0} (0x{0:x4}), Slave Address: {1} (0x{1:x4}), Connection Data {2}</Value>
								</Information>
							</Informations2>
						</TestStep>
						<TestStep Name="SetParameterData">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>t_safePara</Destination>
										<Source>SafePara</Source>
									</SetVariable>
									<SetVariable>
										<Destination>t_watchdog</Destination>
										<Source>SafePara.Watchdog</Source>
									</SetVariable>
								</SetVariables>
							</Action>
							<Informations2>
								<Information>
									<Type>Output</Type>
									<Value Param0="t_watchdog" Param1="SafeParaSize" Param2="t_safePara">Watchdog: {0} ms, SafeParaSize: {1}, Safe Parameter {2}</Value>
								</Information>
							</Informations2>
						</TestStep>
						<TestStep Name="GotoParameter">
							<Action>
								<CallFunction>
									<Reference>RUN_DUT_TO_PARAMETER</Reference>
								</CallFunction>
							</Action>
						</TestStep>
						<TestStep Name="SetLastCrc">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>LastCrc</Destination>
										<Source>t_slaveFrame.Crc0</Source>
									</SetVariable>
								</SetVariables>
							</Action>
						</TestStep>
						<TestStep Name="SetInvalidConnId">
							<Informations1>
								<Information>
									<Type>Output</Type>
									<Value Param0="t_connectionId">Valid Master ConnID: {0} (0x{0:x4})</Value>
								</Information>
							</Informations1>
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>t_connectionId</Destination>
										<Source>0</Source>
									</SetVariable>
								</SetVariables>
							</Action>
							<Informations2>
								<Information>
									<Type>Output</Type>
									<Value Param0="t_connectionId">Falsified ConnId: {0} (0x{0:x4})</Value>
								</Information>
							</Informations2>
						</TestStep>
						<TestStep Name="SetFrame">
							<Informations1>
								<Information>
									<Type>Verbose</Type>
									<Value Param0="SafeOutputs" Param1="LastCrc" Param2="t_masterSeqNo" Param3="OldMasterCrc" Param4="t_connectionId">SetFrame(Command ProcessData, SafeData {0}, LastCrc 0x{1:x4}, ConnectionId 0x{4:x4},  SequenceNo 0x{2:x4}, OldCrc 0x{3:x4}, New true</Value>
								</Information>
							</Informations1>
							<Action>
								<SetFrame Name="t_masterFrame">
									<Command>
										<CommandValue>Data</CommandValue>
									</Command>
									<SafeData>
										<SafeDataVariable>SafeOutputs</SafeDataVariable>
									</SafeData>
									<LastCRC>LastCrc</LastCRC>
									<ConnectionID>
										<ConnectionIdVariable>t_connectionId</ConnectionIdVariable>
									</ConnectionID>
									<SequenceNo>t_masterSeqNo</SequenceNo>
									<OldCRC>OldMasterCrc</OldCRC>
									<New>true</New>
								</SetFrame>
							</Action>
						</TestStep>
						<TestStep Name="SendFrame">
							<Action>
								<SendFrame Name="t_masterFrame"/>
							</Action>
							<Informations2>
								<Information>
									<Type>Verbose</Type>
									<Value Param0="t_masterFrame.FrameData">Master Frame: {0}</Value>
								</Information>
							</Informations2>
							<ReturnValue>
								<OnFailure>
									<Type>Error</Type>
									<Value>Failed to send FSoE frame!</Value>
									<Id>256</Id>
								</OnFailure>
							</ReturnValue>
						</TestStep>
						<TestStep Name="CheckReceivedSlaveFrame">
							<Action>
								<CallFunction>
									<Reference>CHECK_RESET_FAIL</Reference>
								</CallFunction>
							</Action>
							<ReturnValue>
								<OnSuccess>
									<Type>Success</Type>
									<Value Param0="c_CommFaultReason">Expected CommFaultReason ({0}) received</Value>
								</OnSuccess>
							</ReturnValue>
						</TestStep>
					</TestSteps>
				</TestCase>
				<TestCase Name="#4.23 Para_Fail3" CaseId="23">
					<Comment>Gültige ConnId = 3, Ungültige ConnId = 2, Cmd = Processdata</Comment>
					<CaseVariables>
						<Variable>
							<Name>c_CommFaultReason</Name>
							<Type>Byte</Type>
						</Variable>
						<Variable>
							<Name>c_tmpByte</Name>
							<Type>Byte</Type>
						</Variable>
					</CaseVariables>
					<TestSteps>
						<TestStep Name="SetVariables">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>c_CommFaultReason</Destination>
										<Source>INVALID_CONNID</Source>
									</SetVariable>
									<SetVariable>
										<Destination>c_tmpByte</Destination>
										<Source>0</Source>
									</SetVariable>
									<SetVariable>
										<Destination>t_wdExpired</Destination>
										<Source>false</Source>
									</SetVariable>
									<SetVariable>
										<Destination>t_masterSessionId</Destination>
										<Source>1</Source>
									</SetVariable>
								</SetVariables>
							</Action>
						</TestStep>
						<TestStep Name="SetConnectionData">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>t_connectionId</Destination>
										<Source>3</Source>
									</SetVariable>
									<SetVariable>
										<Destination DestinationIndex="0">t_connData</Destination>
										<Source>t_connectionId</Source>
									</SetVariable>
									<SetVariable>
										<Destination DestinationIndex="2">t_connData</Destination>
										<Source>ConnData.SlaveAddress</Source>
									</SetVariable>
								</SetVariables>
							</Action>
							<Informations2>
								<Information>
									<Type>Output</Type>
									<Value Param0="t_connectionId" Param1="ConnData.SlaveAddress" Param2="t_connData">ConnectionId: {0} (0x{0:x4}), Slave Address: {1} (0x{1:x4}), Connection Data {2}</Value>
								</Information>
							</Informations2>
						</TestStep>
						<TestStep Name="SetParameterData">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>t_safePara</Destination>
										<Source>SafePara</Source>
									</SetVariable>
									<SetVariable>
										<Destination>t_watchdog</Destination>
										<Source>SafePara.Watchdog</Source>
									</SetVariable>
								</SetVariables>
							</Action>
							<Informations2>
								<Information>
									<Type>Output</Type>
									<Value Param0="t_watchdog" Param1="SafeParaSize" Param2="t_safePara">Watchdog: {0} ms, SafeParaSize: {1}, Safe Parameter {2}</Value>
								</Information>
							</Informations2>
						</TestStep>
						<TestStep Name="GotoParameter">
							<Action>
								<CallFunction>
									<Reference>RUN_DUT_TO_PARAMETER</Reference>
								</CallFunction>
							</Action>
						</TestStep>
						<TestStep Name="SetLastCrc">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>LastCrc</Destination>
										<Source>t_slaveFrame.Crc0</Source>
									</SetVariable>
								</SetVariables>
							</Action>
						</TestStep>
						<TestStep Name="SetInvalidConnId">
							<Informations1>
								<Information>
									<Type>Output</Type>
									<Value Param0="t_connectionId">Valid Master ConnID: {0} (0x{0:x4})</Value>
								</Information>
							</Informations1>
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>t_connectionId</Destination>
										<Source>2</Source>
									</SetVariable>
								</SetVariables>
							</Action>
							<Informations2>
								<Information>
									<Type>Output</Type>
									<Value Param0="t_connectionId">Falsified ConnId: {0} (0x{0:x4})</Value>
								</Information>
							</Informations2>
						</TestStep>
						<TestStep Name="SetFrame">
							<Informations1>
								<Information>
									<Type>Verbose</Type>
									<Value Param0="SafeOutputs" Param1="LastCrc" Param2="t_masterSeqNo" Param3="OldMasterCrc" Param4="t_connectionId">SetFrame(Command ProcessData, SafeData {0}, LastCrc 0x{1:x4}, ConnectionId 0x{4:x4},  SequenceNo 0x{2:x4}, OldCrc 0x{3:x4}, New true</Value>
								</Information>
							</Informations1>
							<Action>
								<SetFrame Name="t_masterFrame">
									<Command>
										<CommandValue>Data</CommandValue>
									</Command>
									<SafeData>
										<SafeDataVariable>SafeOutputs</SafeDataVariable>
									</SafeData>
									<LastCRC>LastCrc</LastCRC>
									<ConnectionID>
										<ConnectionIdVariable>t_connectionId</ConnectionIdVariable>
									</ConnectionID>
									<SequenceNo>t_masterSeqNo</SequenceNo>
									<OldCRC>OldMasterCrc</OldCRC>
									<New>true</New>
								</SetFrame>
							</Action>
						</TestStep>
						<TestStep Name="SendFrame">
							<Action>
								<SendFrame Name="t_masterFrame"/>
							</Action>
							<Informations2>
								<Information>
									<Type>Verbose</Type>
									<Value Param0="t_masterFrame.FrameData">Master Frame: {0}</Value>
								</Information>
							</Informations2>
							<ReturnValue>
								<OnFailure>
									<Type>Error</Type>
									<Value>Failed to send FSoE frame!</Value>
									<Id>256</Id>
								</OnFailure>
							</ReturnValue>
						</TestStep>
						<TestStep Name="CheckReceivedSlaveFrame">
							<Action>
								<CallFunction>
									<Reference>CHECK_RESET_FAIL</Reference>
								</CallFunction>
							</Action>
							<ReturnValue>
								<OnSuccess>
									<Type>Success</Type>
									<Value Param0="c_CommFaultReason">Expected CommFaultReason ({0}) received</Value>
								</OnSuccess>
							</ReturnValue>
						</TestStep>
					</TestSteps>
				</TestCase>
				<TestCase Name="#4.24 Para_Fail3" CaseId="24">
					<Comment>Gültige ConnId = 3, Ungültige ConnId = 4, Cmd = Processdata</Comment>
					<CaseVariables>
						<Variable>
							<Name>c_CommFaultReason</Name>
							<Type>Byte</Type>
						</Variable>
						<Variable>
							<Name>c_tmpByte</Name>
							<Type>Byte</Type>
						</Variable>
					</CaseVariables>
					<TestSteps>
						<TestStep Name="SetVariables">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>c_CommFaultReason</Destination>
										<Source>INVALID_CONNID</Source>
									</SetVariable>
									<SetVariable>
										<Destination>c_tmpByte</Destination>
										<Source>0</Source>
									</SetVariable>
									<SetVariable>
										<Destination>t_wdExpired</Destination>
										<Source>false</Source>
									</SetVariable>
									<SetVariable>
										<Destination>t_masterSessionId</Destination>
										<Source>1</Source>
									</SetVariable>
								</SetVariables>
							</Action>
						</TestStep>
						<TestStep Name="SetConnectionData">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>t_connectionId</Destination>
										<Source>3</Source>
									</SetVariable>
									<SetVariable>
										<Destination DestinationIndex="0">t_connData</Destination>
										<Source>t_connectionId</Source>
									</SetVariable>
									<SetVariable>
										<Destination DestinationIndex="2">t_connData</Destination>
										<Source>ConnData.SlaveAddress</Source>
									</SetVariable>
								</SetVariables>
							</Action>
							<Informations2>
								<Information>
									<Type>Output</Type>
									<Value Param0="t_connectionId" Param1="ConnData.SlaveAddress" Param2="t_connData">ConnectionId: {0} (0x{0:x4}), Slave Address: {1} (0x{1:x4}), Connection Data {2}</Value>
								</Information>
							</Informations2>
						</TestStep>
						<TestStep Name="SetParameterData">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>t_safePara</Destination>
										<Source>SafePara</Source>
									</SetVariable>
									<SetVariable>
										<Destination>t_watchdog</Destination>
										<Source>SafePara.Watchdog</Source>
									</SetVariable>
								</SetVariables>
							</Action>
							<Informations2>
								<Information>
									<Type>Output</Type>
									<Value Param0="t_watchdog" Param1="SafeParaSize" Param2="t_safePara">Watchdog: {0} ms, SafeParaSize: {1}, Safe Parameter {2}</Value>
								</Information>
							</Informations2>
						</TestStep>
						<TestStep Name="GotoParameter">
							<Action>
								<CallFunction>
									<Reference>RUN_DUT_TO_PARAMETER</Reference>
								</CallFunction>
							</Action>
						</TestStep>
						<TestStep Name="SetLastCrc">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>LastCrc</Destination>
										<Source>t_slaveFrame.Crc0</Source>
									</SetVariable>
								</SetVariables>
							</Action>
						</TestStep>
						<TestStep Name="SetInvalidConnId">
							<Informations1>
								<Information>
									<Type>Output</Type>
									<Value Param0="t_connectionId">Valid Master ConnID: {0} (0x{0:x4})</Value>
								</Information>
							</Informations1>
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>t_connectionId</Destination>
										<Source>4</Source>
									</SetVariable>
								</SetVariables>
							</Action>
							<Informations2>
								<Information>
									<Type>Output</Type>
									<Value Param0="t_connectionId">Falsified ConnId: {0} (0x{0:x4})</Value>
								</Information>
							</Informations2>
						</TestStep>
						<TestStep Name="SetFrame">
							<Informations1>
								<Information>
									<Type>Verbose</Type>
									<Value Param0="SafeOutputs" Param1="LastCrc" Param2="t_masterSeqNo" Param3="OldMasterCrc" Param4="t_connectionId">SetFrame(Command ProcessData, SafeData {0}, LastCrc 0x{1:x4}, ConnectionId 0x{4:x4},  SequenceNo 0x{2:x4}, OldCrc 0x{3:x4}, New true</Value>
								</Information>
							</Informations1>
							<Action>
								<SetFrame Name="t_masterFrame">
									<Command>
										<CommandValue>Data</CommandValue>
									</Command>
									<SafeData>
										<SafeDataVariable>SafeOutputs</SafeDataVariable>
									</SafeData>
									<LastCRC>LastCrc</LastCRC>
									<ConnectionID>
										<ConnectionIdVariable>t_connectionId</ConnectionIdVariable>
									</ConnectionID>
									<SequenceNo>t_masterSeqNo</SequenceNo>
									<OldCRC>OldMasterCrc</OldCRC>
									<New>true</New>
								</SetFrame>
							</Action>
						</TestStep>
						<TestStep Name="SendFrame">
							<Action>
								<SendFrame Name="t_masterFrame"/>
							</Action>
							<Informations2>
								<Information>
									<Type>Verbose</Type>
									<Value Param0="t_masterFrame.FrameData">Master Frame: {0}</Value>
								</Information>
							</Informations2>
							<ReturnValue>
								<OnFailure>
									<Type>Error</Type>
									<Value>Failed to send FSoE frame!</Value>
									<Id>256</Id>
								</OnFailure>
							</ReturnValue>
						</TestStep>
						<TestStep Name="CheckReceivedSlaveFrame">
							<Action>
								<CallFunction>
									<Reference>CHECK_RESET_FAIL</Reference>
								</CallFunction>
							</Action>
							<ReturnValue>
								<OnSuccess>
									<Type>Success</Type>
									<Value Param0="c_CommFaultReason">Expected CommFaultReason ({0}) received</Value>
								</OnSuccess>
							</ReturnValue>
						</TestStep>
					</TestSteps>
				</TestCase>
				<TestCase Name="#4.25 Para_Fail3" CaseId="25">
					<Comment>Gültige ConnId = 3, Ungültige ConnId = 0xffff, Cmd = Processdata</Comment>
					<CaseVariables>
						<Variable>
							<Name>c_CommFaultReason</Name>
							<Type>Byte</Type>
						</Variable>
						<Variable>
							<Name>c_tmpByte</Name>
							<Type>Byte</Type>
						</Variable>
					</CaseVariables>
					<TestSteps>
						<TestStep Name="SetVariables">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>c_CommFaultReason</Destination>
										<Source>INVALID_CONNID</Source>
									</SetVariable>
									<SetVariable>
										<Destination>c_tmpByte</Destination>
										<Source>0</Source>
									</SetVariable>
									<SetVariable>
										<Destination>t_wdExpired</Destination>
										<Source>false</Source>
									</SetVariable>
									<SetVariable>
										<Destination>t_masterSessionId</Destination>
										<Source>1</Source>
									</SetVariable>
								</SetVariables>
							</Action>
						</TestStep>
						<TestStep Name="SetConnectionData">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>t_connectionId</Destination>
										<Source>3</Source>
									</SetVariable>
									<SetVariable>
										<Destination DestinationIndex="0">t_connData</Destination>
										<Source>t_connectionId</Source>
									</SetVariable>
									<SetVariable>
										<Destination DestinationIndex="2">t_connData</Destination>
										<Source>ConnData.SlaveAddress</Source>
									</SetVariable>
								</SetVariables>
							</Action>
							<Informations2>
								<Information>
									<Type>Output</Type>
									<Value Param0="t_connectionId" Param1="ConnData.SlaveAddress" Param2="t_connData">ConnectionId: {0} (0x{0:x4}), Slave Address: {1} (0x{1:x4}), Connection Data {2}</Value>
								</Information>
							</Informations2>
						</TestStep>
						<TestStep Name="SetParameterData">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>t_safePara</Destination>
										<Source>SafePara</Source>
									</SetVariable>
									<SetVariable>
										<Destination>t_watchdog</Destination>
										<Source>SafePara.Watchdog</Source>
									</SetVariable>
								</SetVariables>
							</Action>
							<Informations2>
								<Information>
									<Type>Output</Type>
									<Value Param0="t_watchdog" Param1="SafeParaSize" Param2="t_safePara">Watchdog: {0} ms, SafeParaSize: {1}, Safe Parameter {2}</Value>
								</Information>
							</Informations2>
						</TestStep>
						<TestStep Name="GotoParameter">
							<Action>
								<CallFunction>
									<Reference>RUN_DUT_TO_PARAMETER</Reference>
								</CallFunction>
							</Action>
						</TestStep>
						<TestStep Name="SetLastCrc">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>LastCrc</Destination>
										<Source>t_slaveFrame.Crc0</Source>
									</SetVariable>
								</SetVariables>
							</Action>
						</TestStep>
						<TestStep Name="SetInvalidConnId">
							<Informations1>
								<Information>
									<Type>Output</Type>
									<Value Param0="t_connectionId">Valid Master ConnID: {0} (0x{0:x4})</Value>
								</Information>
							</Informations1>
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>t_connectionId</Destination>
										<Source>65535</Source>
									</SetVariable>
								</SetVariables>
							</Action>
							<Informations2>
								<Information>
									<Type>Output</Type>
									<Value Param0="t_connectionId">Falsified ConnId: {0} (0x{0:x4})</Value>
								</Information>
							</Informations2>
						</TestStep>
						<TestStep Name="SetFrame">
							<Informations1>
								<Information>
									<Type>Verbose</Type>
									<Value Param0="SafeOutputs" Param1="LastCrc" Param2="t_masterSeqNo" Param3="OldMasterCrc" Param4="t_connectionId">SetFrame(Command ProcessData, SafeData {0}, LastCrc 0x{1:x4}, ConnectionId 0x{4:x4},  SequenceNo 0x{2:x4}, OldCrc 0x{3:x4}, New true</Value>
								</Information>
							</Informations1>
							<Action>
								<SetFrame Name="t_masterFrame">
									<Command>
										<CommandValue>Data</CommandValue>
									</Command>
									<SafeData>
										<SafeDataVariable>SafeOutputs</SafeDataVariable>
									</SafeData>
									<LastCRC>LastCrc</LastCRC>
									<ConnectionID>
										<ConnectionIdVariable>t_connectionId</ConnectionIdVariable>
									</ConnectionID>
									<SequenceNo>t_masterSeqNo</SequenceNo>
									<OldCRC>OldMasterCrc</OldCRC>
									<New>true</New>
								</SetFrame>
							</Action>
						</TestStep>
						<TestStep Name="SendFrame">
							<Action>
								<SendFrame Name="t_masterFrame"/>
							</Action>
							<Informations2>
								<Information>
									<Type>Verbose</Type>
									<Value Param0="t_masterFrame.FrameData">Master Frame: {0}</Value>
								</Information>
							</Informations2>
							<ReturnValue>
								<OnFailure>
									<Type>Error</Type>
									<Value>Failed to send FSoE frame!</Value>
									<Id>256</Id>
								</OnFailure>
							</ReturnValue>
						</TestStep>
						<TestStep Name="CheckReceivedSlaveFrame">
							<Action>
								<CallFunction>
									<Reference>CHECK_RESET_FAIL</Reference>
								</CallFunction>
							</Action>
							<ReturnValue>
								<OnSuccess>
									<Type>Success</Type>
									<Value Param0="c_CommFaultReason">Expected CommFaultReason ({0}) received</Value>
								</OnSuccess>
							</ReturnValue>
						</TestStep>
					</TestSteps>
				</TestCase>
				<TestCase Name="#4.26 Para_Fail3" CaseId="26">
					<Comment>Gültige ConnId = 3, Ungültige ConnId = 0, Cmd = FailSafeData</Comment>
					<CaseVariables>
						<Variable>
							<Name>c_CommFaultReason</Name>
							<Type>Byte</Type>
						</Variable>
						<Variable>
							<Name>c_tmpByte</Name>
							<Type>Byte</Type>
						</Variable>
					</CaseVariables>
					<TestSteps>
						<TestStep Name="SetVariables">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>c_CommFaultReason</Destination>
										<Source>INVALID_CONNID</Source>
									</SetVariable>
									<SetVariable>
										<Destination>c_tmpByte</Destination>
										<Source>0</Source>
									</SetVariable>
									<SetVariable>
										<Destination>t_wdExpired</Destination>
										<Source>false</Source>
									</SetVariable>
									<SetVariable>
										<Destination>t_masterSessionId</Destination>
										<Source>1</Source>
									</SetVariable>
								</SetVariables>
							</Action>
						</TestStep>
						<TestStep Name="SetConnectionData">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>t_connectionId</Destination>
										<Source>3</Source>
									</SetVariable>
									<SetVariable>
										<Destination DestinationIndex="0">t_connData</Destination>
										<Source>t_connectionId</Source>
									</SetVariable>
									<SetVariable>
										<Destination DestinationIndex="2">t_connData</Destination>
										<Source>ConnData.SlaveAddress</Source>
									</SetVariable>
								</SetVariables>
							</Action>
							<Informations2>
								<Information>
									<Type>Output</Type>
									<Value Param0="t_connectionId" Param1="ConnData.SlaveAddress" Param2="t_connData">ConnectionId: {0} (0x{0:x4}), Slave Address: {1} (0x{1:x4}), Connection Data {2}</Value>
								</Information>
							</Informations2>
						</TestStep>
						<TestStep Name="SetParameterData">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>t_safePara</Destination>
										<Source>SafePara</Source>
									</SetVariable>
									<SetVariable>
										<Destination>t_watchdog</Destination>
										<Source>SafePara.Watchdog</Source>
									</SetVariable>
								</SetVariables>
							</Action>
							<Informations2>
								<Information>
									<Type>Output</Type>
									<Value Param0="t_watchdog" Param1="SafeParaSize" Param2="t_safePara">Watchdog: {0} ms, SafeParaSize: {1}, Safe Parameter {2}</Value>
								</Information>
							</Informations2>
						</TestStep>
						<TestStep Name="GotoParameter">
							<Action>
								<CallFunction>
									<Reference>RUN_DUT_TO_PARAMETER</Reference>
								</CallFunction>
							</Action>
						</TestStep>
						<TestStep Name="SetLastCrc">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>LastCrc</Destination>
										<Source>t_slaveFrame.Crc0</Source>
									</SetVariable>
								</SetVariables>
							</Action>
						</TestStep>
						<TestStep Name="SetInvalidConnId">
							<Informations1>
								<Information>
									<Type>Output</Type>
									<Value Param0="t_connectionId">Valid Master ConnID: {0} (0x{0:x4})</Value>
								</Information>
							</Informations1>
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>t_connectionId</Destination>
										<Source>0</Source>
									</SetVariable>
								</SetVariables>
							</Action>
							<Informations2>
								<Information>
									<Type>Output</Type>
									<Value Param0="t_connectionId">Falsified ConnId: {0} (0x{0:x4})</Value>
								</Information>
							</Informations2>
						</TestStep>
						<TestStep Name="SetFrame">
							<Informations1>
								<Information>
									<Type>Verbose</Type>
									<Value Param0="FailSafeValue" Param1="LastCrc" Param2="t_masterSeqNo" Param3="OldMasterCrc" Param4="t_connectionId">SetFrame(Command FailSafeData, SafeData {0}, LastCrc 0x{1:x4}, ConnectionId 0x{4:x4},  SequenceNo 0x{2:x4}, OldCrc 0x{3:x4}, New true</Value>
								</Information>
							</Informations1>
							<Action>
								<SetFrame Name="t_masterFrame">
									<Command>
										<CommandValue>FailSafeData</CommandValue>
									</Command>
									<SafeData>
										<SafeDataVariable>FailSafeValue</SafeDataVariable>
									</SafeData>
									<LastCRC>LastCrc</LastCRC>
									<ConnectionID>
										<ConnectionIdVariable>t_connectionId</ConnectionIdVariable>
									</ConnectionID>
									<SequenceNo>t_masterSeqNo</SequenceNo>
									<OldCRC>OldMasterCrc</OldCRC>
									<New>true</New>
								</SetFrame>
							</Action>
						</TestStep>
						<TestStep Name="SendFrame">
							<Action>
								<SendFrame Name="t_masterFrame"/>
							</Action>
							<Informations2>
								<Information>
									<Type>Verbose</Type>
									<Value Param0="t_masterFrame.FrameData">Master Frame: {0}</Value>
								</Information>
							</Informations2>
							<ReturnValue>
								<OnFailure>
									<Type>Error</Type>
									<Value>Failed to send FSoE frame!</Value>
									<Id>256</Id>
								</OnFailure>
							</ReturnValue>
						</TestStep>
						<TestStep Name="CheckReceivedSlaveFrame">
							<Action>
								<CallFunction>
									<Reference>CHECK_RESET_FAIL</Reference>
								</CallFunction>
							</Action>
							<ReturnValue>
								<OnSuccess>
									<Type>Success</Type>
									<Value Param0="c_CommFaultReason">Expected CommFaultReason ({0}) received</Value>
								</OnSuccess>
							</ReturnValue>
						</TestStep>
					</TestSteps>
				</TestCase>
				<TestCase Name="#4.27 Para_Fail3" CaseId="27">
					<Comment>Gültige ConnId = 3, Ungültige ConnId = 2, Cmd = FailSafeData</Comment>
					<CaseVariables>
						<Variable>
							<Name>c_CommFaultReason</Name>
							<Type>Byte</Type>
						</Variable>
						<Variable>
							<Name>c_tmpByte</Name>
							<Type>Byte</Type>
						</Variable>
					</CaseVariables>
					<TestSteps>
						<TestStep Name="SetVariables">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>c_CommFaultReason</Destination>
										<Source>INVALID_CONNID</Source>
									</SetVariable>
									<SetVariable>
										<Destination>c_tmpByte</Destination>
										<Source>0</Source>
									</SetVariable>
									<SetVariable>
										<Destination>t_wdExpired</Destination>
										<Source>false</Source>
									</SetVariable>
									<SetVariable>
										<Destination>t_masterSessionId</Destination>
										<Source>1</Source>
									</SetVariable>
								</SetVariables>
							</Action>
						</TestStep>
						<TestStep Name="SetConnectionData">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>t_connectionId</Destination>
										<Source>3</Source>
									</SetVariable>
									<SetVariable>
										<Destination DestinationIndex="0">t_connData</Destination>
										<Source>t_connectionId</Source>
									</SetVariable>
									<SetVariable>
										<Destination DestinationIndex="2">t_connData</Destination>
										<Source>ConnData.SlaveAddress</Source>
									</SetVariable>
								</SetVariables>
							</Action>
							<Informations2>
								<Information>
									<Type>Output</Type>
									<Value Param0="t_connectionId" Param1="ConnData.SlaveAddress" Param2="t_connData">ConnectionId: {0} (0x{0:x4}), Slave Address: {1} (0x{1:x4}), Connection Data {2}</Value>
								</Information>
							</Informations2>
						</TestStep>
						<TestStep Name="SetParameterData">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>t_safePara</Destination>
										<Source>SafePara</Source>
									</SetVariable>
									<SetVariable>
										<Destination>t_watchdog</Destination>
										<Source>SafePara.Watchdog</Source>
									</SetVariable>
								</SetVariables>
							</Action>
							<Informations2>
								<Information>
									<Type>Output</Type>
									<Value Param0="t_watchdog" Param1="SafeParaSize" Param2="t_safePara">Watchdog: {0} ms, SafeParaSize: {1}, Safe Parameter {2}</Value>
								</Information>
							</Informations2>
						</TestStep>
						<TestStep Name="GotoParameter">
							<Action>
								<CallFunction>
									<Reference>RUN_DUT_TO_PARAMETER</Reference>
								</CallFunction>
							</Action>
						</TestStep>
						<TestStep Name="SetLastCrc">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>LastCrc</Destination>
										<Source>t_slaveFrame.Crc0</Source>
									</SetVariable>
								</SetVariables>
							</Action>
						</TestStep>
						<TestStep Name="SetInvalidConnId">
							<Informations1>
								<Information>
									<Type>Output</Type>
									<Value Param0="t_connectionId">Valid Master ConnID: {0} (0x{0:x4})</Value>
								</Information>
							</Informations1>
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>t_connectionId</Destination>
										<Source>2</Source>
									</SetVariable>
								</SetVariables>
							</Action>
							<Informations2>
								<Information>
									<Type>Output</Type>
									<Value Param0="t_connectionId">Falsified ConnId: {0} (0x{0:x4})</Value>
								</Information>
							</Informations2>
						</TestStep>
						<TestStep Name="SetFrame">
							<Informations1>
								<Information>
									<Type>Verbose</Type>
									<Value Param0="FailSafeValue" Param1="LastCrc" Param2="t_masterSeqNo" Param3="OldMasterCrc" Param4="t_connectionId">SetFrame(Command FailSafeData, SafeData {0}, LastCrc 0x{1:x4}, ConnectionId 0x{4:x4},  SequenceNo 0x{2:x4}, OldCrc 0x{3:x4}, New true</Value>
								</Information>
							</Informations1>
							<Action>
								<SetFrame Name="t_masterFrame">
									<Command>
										<CommandValue>FailSafeData</CommandValue>
									</Command>
									<SafeData>
										<SafeDataVariable>FailSafeValue</SafeDataVariable>
									</SafeData>
									<LastCRC>LastCrc</LastCRC>
									<ConnectionID>
										<ConnectionIdVariable>t_connectionId</ConnectionIdVariable>
									</ConnectionID>
									<SequenceNo>t_masterSeqNo</SequenceNo>
									<OldCRC>OldMasterCrc</OldCRC>
									<New>true</New>
								</SetFrame>
							</Action>
						</TestStep>
						<TestStep Name="SendFrame">
							<Action>
								<SendFrame Name="t_masterFrame"/>
							</Action>
							<Informations2>
								<Information>
									<Type>Verbose</Type>
									<Value Param0="t_masterFrame.FrameData">Master Frame: {0}</Value>
								</Information>
							</Informations2>
							<ReturnValue>
								<OnFailure>
									<Type>Error</Type>
									<Value>Failed to send FSoE frame!</Value>
									<Id>256</Id>
								</OnFailure>
							</ReturnValue>
						</TestStep>
						<TestStep Name="CheckReceivedSlaveFrame">
							<Action>
								<CallFunction>
									<Reference>CHECK_RESET_FAIL</Reference>
								</CallFunction>
							</Action>
							<ReturnValue>
								<OnSuccess>
									<Type>Success</Type>
									<Value Param0="c_CommFaultReason">Expected CommFaultReason ({0}) received</Value>
								</OnSuccess>
							</ReturnValue>
						</TestStep>
					</TestSteps>
				</TestCase>
				<TestCase Name="#4.28 Para_Fail3" CaseId="28">
					<Comment>Gültige ConnId = 3, Ungültige ConnId = 4, Cmd = FailSafeData</Comment>
					<CaseVariables>
						<Variable>
							<Name>c_CommFaultReason</Name>
							<Type>Byte</Type>
						</Variable>
						<Variable>
							<Name>c_tmpByte</Name>
							<Type>Byte</Type>
						</Variable>
					</CaseVariables>
					<TestSteps>
						<TestStep Name="SetVariables">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>c_CommFaultReason</Destination>
										<Source>INVALID_CONNID</Source>
									</SetVariable>
									<SetVariable>
										<Destination>c_tmpByte</Destination>
										<Source>0</Source>
									</SetVariable>
									<SetVariable>
										<Destination>t_wdExpired</Destination>
										<Source>false</Source>
									</SetVariable>
									<SetVariable>
										<Destination>t_masterSessionId</Destination>
										<Source>1</Source>
									</SetVariable>
								</SetVariables>
							</Action>
						</TestStep>
						<TestStep Name="SetConnectionData">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>t_connectionId</Destination>
										<Source>3</Source>
									</SetVariable>
									<SetVariable>
										<Destination DestinationIndex="0">t_connData</Destination>
										<Source>t_connectionId</Source>
									</SetVariable>
									<SetVariable>
										<Destination DestinationIndex="2">t_connData</Destination>
										<Source>ConnData.SlaveAddress</Source>
									</SetVariable>
								</SetVariables>
							</Action>
							<Informations2>
								<Information>
									<Type>Output</Type>
									<Value Param0="t_connectionId" Param1="ConnData.SlaveAddress" Param2="t_connData">ConnectionId: {0} (0x{0:x4}), Slave Address: {1} (0x{1:x4}), Connection Data {2}</Value>
								</Information>
							</Informations2>
						</TestStep>
						<TestStep Name="SetParameterData">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>t_safePara</Destination>
										<Source>SafePara</Source>
									</SetVariable>
									<SetVariable>
										<Destination>t_watchdog</Destination>
										<Source>SafePara.Watchdog</Source>
									</SetVariable>
								</SetVariables>
							</Action>
							<Informations2>
								<Information>
									<Type>Output</Type>
									<Value Param0="t_watchdog" Param1="SafeParaSize" Param2="t_safePara">Watchdog: {0} ms, SafeParaSize: {1}, Safe Parameter {2}</Value>
								</Information>
							</Informations2>
						</TestStep>
						<TestStep Name="GotoParameter">
							<Action>
								<CallFunction>
									<Reference>RUN_DUT_TO_PARAMETER</Reference>
								</CallFunction>
							</Action>
						</TestStep>
						<TestStep Name="SetLastCrc">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>LastCrc</Destination>
										<Source>t_slaveFrame.Crc0</Source>
									</SetVariable>
								</SetVariables>
							</Action>
						</TestStep>
						<TestStep Name="SetInvalidConnId">
							<Informations1>
								<Information>
									<Type>Output</Type>
									<Value Param0="t_connectionId">Valid Master ConnID: {0} (0x{0:x4})</Value>
								</Information>
							</Informations1>
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>t_connectionId</Destination>
										<Source>4</Source>
									</SetVariable>
								</SetVariables>
							</Action>
							<Informations2>
								<Information>
									<Type>Output</Type>
									<Value Param0="t_connectionId">Falsified ConnId: {0} (0x{0:x4})</Value>
								</Information>
							</Informations2>
						</TestStep>
						<TestStep Name="SetFrame">
							<Informations1>
								<Information>
									<Type>Verbose</Type>
									<Value Param0="FailSafeValue" Param1="LastCrc" Param2="t_masterSeqNo" Param3="OldMasterCrc" Param4="t_connectionId">SetFrame(Command FailSafeData, SafeData {0}, LastCrc 0x{1:x4}, ConnectionId 0x{4:x4},  SequenceNo 0x{2:x4}, OldCrc 0x{3:x4}, New true</Value>
								</Information>
							</Informations1>
							<Action>
								<SetFrame Name="t_masterFrame">
									<Command>
										<CommandValue>FailSafeData</CommandValue>
									</Command>
									<SafeData>
										<SafeDataVariable>FailSafeValue</SafeDataVariable>
									</SafeData>
									<LastCRC>LastCrc</LastCRC>
									<ConnectionID>
										<ConnectionIdVariable>t_connectionId</ConnectionIdVariable>
									</ConnectionID>
									<SequenceNo>t_masterSeqNo</SequenceNo>
									<OldCRC>OldMasterCrc</OldCRC>
									<New>true</New>
								</SetFrame>
							</Action>
						</TestStep>
						<TestStep Name="SendFrame">
							<Action>
								<SendFrame Name="t_masterFrame"/>
							</Action>
							<Informations2>
								<Information>
									<Type>Verbose</Type>
									<Value Param0="t_masterFrame.FrameData">Master Frame: {0}</Value>
								</Information>
							</Informations2>
							<ReturnValue>
								<OnFailure>
									<Type>Error</Type>
									<Value>Failed to send FSoE frame!</Value>
									<Id>256</Id>
								</OnFailure>
							</ReturnValue>
						</TestStep>
						<TestStep Name="CheckReceivedSlaveFrame">
							<Action>
								<CallFunction>
									<Reference>CHECK_RESET_FAIL</Reference>
								</CallFunction>
							</Action>
							<ReturnValue>
								<OnSuccess>
									<Type>Success</Type>
									<Value Param0="c_CommFaultReason">Expected CommFaultReason ({0}) received</Value>
								</OnSuccess>
							</ReturnValue>
						</TestStep>
					</TestSteps>
				</TestCase>
				<TestCase Name="#4.29 Para_Fail3" CaseId="29">
					<Comment>Gültige ConnId = 3, Ungültige ConnId = 0xffff, Cmd = FailSafeData</Comment>
					<CaseVariables>
						<Variable>
							<Name>c_CommFaultReason</Name>
							<Type>Byte</Type>
						</Variable>
						<Variable>
							<Name>c_tmpByte</Name>
							<Type>Byte</Type>
						</Variable>
					</CaseVariables>
					<TestSteps>
						<TestStep Name="SetVariables">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>c_CommFaultReason</Destination>
										<Source>INVALID_CONNID</Source>
									</SetVariable>
									<SetVariable>
										<Destination>c_tmpByte</Destination>
										<Source>0</Source>
									</SetVariable>
									<SetVariable>
										<Destination>t_wdExpired</Destination>
										<Source>false</Source>
									</SetVariable>
									<SetVariable>
										<Destination>t_masterSessionId</Destination>
										<Source>1</Source>
									</SetVariable>
								</SetVariables>
							</Action>
						</TestStep>
						<TestStep Name="SetConnectionData">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>t_connectionId</Destination>
										<Source>3</Source>
									</SetVariable>
									<SetVariable>
										<Destination DestinationIndex="0">t_connData</Destination>
										<Source>t_connectionId</Source>
									</SetVariable>
									<SetVariable>
										<Destination DestinationIndex="2">t_connData</Destination>
										<Source>ConnData.SlaveAddress</Source>
									</SetVariable>
								</SetVariables>
							</Action>
							<Informations2>
								<Information>
									<Type>Output</Type>
									<Value Param0="t_connectionId" Param1="ConnData.SlaveAddress" Param2="t_connData">ConnectionId: {0} (0x{0:x4}), Slave Address: {1} (0x{1:x4}), Connection Data {2}</Value>
								</Information>
							</Informations2>
						</TestStep>
						<TestStep Name="SetParameterData">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>t_safePara</Destination>
										<Source>SafePara</Source>
									</SetVariable>
									<SetVariable>
										<Destination>t_watchdog</Destination>
										<Source>SafePara.Watchdog</Source>
									</SetVariable>
								</SetVariables>
							</Action>
							<Informations2>
								<Information>
									<Type>Output</Type>
									<Value Param0="t_watchdog" Param1="SafeParaSize" Param2="t_safePara">Watchdog: {0} ms, SafeParaSize: {1}, Safe Parameter {2}</Value>
								</Information>
							</Informations2>
						</TestStep>
						<TestStep Name="GotoParameter">
							<Action>
								<CallFunction>
									<Reference>RUN_DUT_TO_PARAMETER</Reference>
								</CallFunction>
							</Action>
						</TestStep>
						<TestStep Name="SetLastCrc">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>LastCrc</Destination>
										<Source>t_slaveFrame.Crc0</Source>
									</SetVariable>
								</SetVariables>
							</Action>
						</TestStep>
						<TestStep Name="SetInvalidConnId">
							<Informations1>
								<Information>
									<Type>Output</Type>
									<Value Param0="t_connectionId">Valid Master ConnID: {0} (0x{0:x4})</Value>
								</Information>
							</Informations1>
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>t_connectionId</Destination>
										<Source>65535</Source>
									</SetVariable>
								</SetVariables>
							</Action>
							<Informations2>
								<Information>
									<Type>Output</Type>
									<Value Param0="t_connectionId">Falsified ConnId: {0} (0x{0:x4})</Value>
								</Information>
							</Informations2>
						</TestStep>
						<TestStep Name="SetFrame">
							<Informations1>
								<Information>
									<Type>Verbose</Type>
									<Value Param0="FailSafeValue" Param1="LastCrc" Param2="t_masterSeqNo" Param3="OldMasterCrc" Param4="t_connectionId">SetFrame(Command FailSafeData, SafeData {0}, LastCrc 0x{1:x4}, ConnectionId 0x{4:x4},  SequenceNo 0x{2:x4}, OldCrc 0x{3:x4}, New true</Value>
								</Information>
							</Informations1>
							<Action>
								<SetFrame Name="t_masterFrame">
									<Command>
										<CommandValue>FailSafeData</CommandValue>
									</Command>
									<SafeData>
										<SafeDataVariable>FailSafeValue</SafeDataVariable>
									</SafeData>
									<LastCRC>LastCrc</LastCRC>
									<ConnectionID>
										<ConnectionIdVariable>t_connectionId</ConnectionIdVariable>
									</ConnectionID>
									<SequenceNo>t_masterSeqNo</SequenceNo>
									<OldCRC>OldMasterCrc</OldCRC>
									<New>true</New>
								</SetFrame>
							</Action>
						</TestStep>
						<TestStep Name="SendFrame">
							<Action>
								<SendFrame Name="t_masterFrame"/>
							</Action>
							<Informations2>
								<Information>
									<Type>Verbose</Type>
									<Value Param0="t_masterFrame.FrameData">Master Frame: {0}</Value>
								</Information>
							</Informations2>
							<ReturnValue>
								<OnFailure>
									<Type>Error</Type>
									<Value>Failed to send FSoE frame!</Value>
									<Id>256</Id>
								</OnFailure>
							</ReturnValue>
						</TestStep>
						<TestStep Name="CheckReceivedSlaveFrame">
							<Action>
								<CallFunction>
									<Reference>CHECK_RESET_FAIL</Reference>
								</CallFunction>
							</Action>
							<ReturnValue>
								<OnSuccess>
									<Type>Success</Type>
									<Value Param0="c_CommFaultReason">Expected CommFaultReason ({0}) received</Value>
								</OnSuccess>
							</ReturnValue>
						</TestStep>
					</TestSteps>
				</TestCase>
				<TestCase Name="#4.30 Para_Fail3" CaseId="30">
					<Comment>Gültige ConnId = 2, Ungültige ConnId = 3, Cmd = Processdata</Comment>
					<CaseVariables>
						<Variable>
							<Name>c_CommFaultReason</Name>
							<Type>Byte</Type>
						</Variable>
						<Variable>
							<Name>c_tmpByte</Name>
							<Type>Byte</Type>
						</Variable>
					</CaseVariables>
					<TestSteps>
						<TestStep Name="SetVariables">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>c_CommFaultReason</Destination>
										<Source>INVALID_CONNID</Source>
									</SetVariable>
									<SetVariable>
										<Destination>c_tmpByte</Destination>
										<Source>0</Source>
									</SetVariable>
									<SetVariable>
										<Destination>t_wdExpired</Destination>
										<Source>false</Source>
									</SetVariable>
									<SetVariable>
										<Destination>t_masterSessionId</Destination>
										<Source>1</Source>
									</SetVariable>
								</SetVariables>
							</Action>
						</TestStep>
						<TestStep Name="SetConnectionData">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>t_connectionId</Destination>
										<Source>2</Source>
									</SetVariable>
									<SetVariable>
										<Destination DestinationIndex="0">t_connData</Destination>
										<Source>t_connectionId</Source>
									</SetVariable>
									<SetVariable>
										<Destination DestinationIndex="2">t_connData</Destination>
										<Source>ConnData.SlaveAddress</Source>
									</SetVariable>
								</SetVariables>
							</Action>
							<Informations2>
								<Information>
									<Type>Output</Type>
									<Value Param0="t_connectionId" Param1="ConnData.SlaveAddress" Param2="t_connData">ConnectionId: {0} (0x{0:x4}), Slave Address: {1} (0x{1:x4}), Connection Data {2}</Value>
								</Information>
							</Informations2>
						</TestStep>
						<TestStep Name="SetParameterData">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>t_safePara</Destination>
										<Source>SafePara</Source>
									</SetVariable>
									<SetVariable>
										<Destination>t_watchdog</Destination>
										<Source>SafePara.Watchdog</Source>
									</SetVariable>
								</SetVariables>
							</Action>
							<Informations2>
								<Information>
									<Type>Output</Type>
									<Value Param0="t_watchdog" Param1="SafeParaSize" Param2="t_safePara">Watchdog: {0} ms, SafeParaSize: {1}, Safe Parameter {2}</Value>
								</Information>
							</Informations2>
						</TestStep>
						<TestStep Name="GotoParameter">
							<Action>
								<CallFunction>
									<Reference>RUN_DUT_TO_PARAMETER</Reference>
								</CallFunction>
							</Action>
						</TestStep>
						<TestStep Name="SetLastCrc">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>LastCrc</Destination>
										<Source>t_slaveFrame.Crc0</Source>
									</SetVariable>
								</SetVariables>
							</Action>
						</TestStep>
						<TestStep Name="SetInvalidConnId">
							<Informations1>
								<Information>
									<Type>Output</Type>
									<Value Param0="t_connectionId">Valid Master ConnID: {0} (0x{0:x4})</Value>
								</Information>
							</Informations1>
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>t_connectionId</Destination>
										<Source>3</Source>
									</SetVariable>
								</SetVariables>
							</Action>
							<Informations2>
								<Information>
									<Type>Output</Type>
									<Value Param0="t_connectionId">Falsified ConnId: {0} (0x{0:x4})</Value>
								</Information>
							</Informations2>
						</TestStep>
						<TestStep Name="SetFrame">
							<Informations1>
								<Information>
									<Type>Verbose</Type>
									<Value Param0="SafeOutputs" Param1="LastCrc" Param2="t_masterSeqNo" Param3="OldMasterCrc" Param4="t_connectionId">SetFrame(Command ProcessData, SafeData {0}, LastCrc 0x{1:x4}, ConnectionId 0x{4:x4},  SequenceNo 0x{2:x4}, OldCrc 0x{3:x4}, New true</Value>
								</Information>
							</Informations1>
							<Action>
								<SetFrame Name="t_masterFrame">
									<Command>
										<CommandValue>Data</CommandValue>
									</Command>
									<SafeData>
										<SafeDataVariable>SafeOutputs</SafeDataVariable>
									</SafeData>
									<LastCRC>LastCrc</LastCRC>
									<ConnectionID>
										<ConnectionIdVariable>t_connectionId</ConnectionIdVariable>
									</ConnectionID>
									<SequenceNo>t_masterSeqNo</SequenceNo>
									<OldCRC>OldMasterCrc</OldCRC>
									<New>true</New>
								</SetFrame>
							</Action>
						</TestStep>
						<TestStep Name="SendFrame">
							<Action>
								<SendFrame Name="t_masterFrame"/>
							</Action>
							<Informations2>
								<Information>
									<Type>Verbose</Type>
									<Value Param0="t_masterFrame.FrameData">Master Frame: {0}</Value>
								</Information>
							</Informations2>
							<ReturnValue>
								<OnFailure>
									<Type>Error</Type>
									<Value>Failed to send FSoE frame!</Value>
									<Id>256</Id>
								</OnFailure>
							</ReturnValue>
						</TestStep>
						<TestStep Name="CheckReceivedSlaveFrame">
							<Action>
								<CallFunction>
									<Reference>CHECK_RESET_FAIL</Reference>
								</CallFunction>
							</Action>
							<ReturnValue>
								<OnSuccess>
									<Type>Success</Type>
									<Value Param0="c_CommFaultReason">Expected CommFaultReason ({0}) received</Value>
								</OnSuccess>
							</ReturnValue>
						</TestStep>
					</TestSteps>
				</TestCase>
				<TestCase Name="#4.31 Para_Fail3" CaseId="31">
					<Comment>Gültige ConnId = 4, Ungültige ConnId = 3, Cmd = Processdata</Comment>
					<CaseVariables>
						<Variable>
							<Name>c_CommFaultReason</Name>
							<Type>Byte</Type>
						</Variable>
						<Variable>
							<Name>c_tmpByte</Name>
							<Type>Byte</Type>
						</Variable>
					</CaseVariables>
					<TestSteps>
						<TestStep Name="SetVariables">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>c_CommFaultReason</Destination>
										<Source>INVALID_CONNID</Source>
									</SetVariable>
									<SetVariable>
										<Destination>c_tmpByte</Destination>
										<Source>0</Source>
									</SetVariable>
									<SetVariable>
										<Destination>t_wdExpired</Destination>
										<Source>false</Source>
									</SetVariable>
									<SetVariable>
										<Destination>t_masterSessionId</Destination>
										<Source>1</Source>
									</SetVariable>
								</SetVariables>
							</Action>
						</TestStep>
						<TestStep Name="SetConnectionData">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>t_connectionId</Destination>
										<Source>4</Source>
									</SetVariable>
									<SetVariable>
										<Destination DestinationIndex="0">t_connData</Destination>
										<Source>t_connectionId</Source>
									</SetVariable>
									<SetVariable>
										<Destination DestinationIndex="2">t_connData</Destination>
										<Source>ConnData.SlaveAddress</Source>
									</SetVariable>
								</SetVariables>
							</Action>
							<Informations2>
								<Information>
									<Type>Output</Type>
									<Value Param0="t_connectionId" Param1="ConnData.SlaveAddress" Param2="t_connData">ConnectionId: {0} (0x{0:x4}), Slave Address: {1} (0x{1:x4}), Connection Data {2}</Value>
								</Information>
							</Informations2>
						</TestStep>
						<TestStep Name="SetParameterData">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>t_safePara</Destination>
										<Source>SafePara</Source>
									</SetVariable>
									<SetVariable>
										<Destination>t_watchdog</Destination>
										<Source>SafePara.Watchdog</Source>
									</SetVariable>
								</SetVariables>
							</Action>
							<Informations2>
								<Information>
									<Type>Output</Type>
									<Value Param0="t_watchdog" Param1="SafeParaSize" Param2="t_safePara">Watchdog: {0} ms, SafeParaSize: {1}, Safe Parameter {2}</Value>
								</Information>
							</Informations2>
						</TestStep>
						<TestStep Name="GotoParameter">
							<Action>
								<CallFunction>
									<Reference>RUN_DUT_TO_PARAMETER</Reference>
								</CallFunction>
							</Action>
						</TestStep>
						<TestStep Name="SetLastCrc">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>LastCrc</Destination>
										<Source>t_slaveFrame.Crc0</Source>
									</SetVariable>
								</SetVariables>
							</Action>
						</TestStep>
						<TestStep Name="SetInvalidConnId">
							<Informations1>
								<Information>
									<Type>Output</Type>
									<Value Param0="t_connectionId">Valid Master ConnID: {0} (0x{0:x4})</Value>
								</Information>
							</Informations1>
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>t_connectionId</Destination>
										<Source>3</Source>
									</SetVariable>
								</SetVariables>
							</Action>
							<Informations2>
								<Information>
									<Type>Output</Type>
									<Value Param0="t_connectionId">Falsified ConnId: {0} (0x{0:x4})</Value>
								</Information>
							</Informations2>
						</TestStep>
						<TestStep Name="SetFrame">
							<Informations1>
								<Information>
									<Type>Verbose</Type>
									<Value Param0="SafeOutputs" Param1="LastCrc" Param2="t_masterSeqNo" Param3="OldMasterCrc" Param4="t_connectionId">SetFrame(Command ProcessData, SafeData {0}, LastCrc 0x{1:x4}, ConnectionId 0x{4:x4},  SequenceNo 0x{2:x4}, OldCrc 0x{3:x4}, New true</Value>
								</Information>
							</Informations1>
							<Action>
								<SetFrame Name="t_masterFrame">
									<Command>
										<CommandValue>Data</CommandValue>
									</Command>
									<SafeData>
										<SafeDataVariable>SafeOutputs</SafeDataVariable>
									</SafeData>
									<LastCRC>LastCrc</LastCRC>
									<ConnectionID>
										<ConnectionIdVariable>t_connectionId</ConnectionIdVariable>
									</ConnectionID>
									<SequenceNo>t_masterSeqNo</SequenceNo>
									<OldCRC>OldMasterCrc</OldCRC>
									<New>true</New>
								</SetFrame>
							</Action>
						</TestStep>
						<TestStep Name="SendFrame">
							<Action>
								<SendFrame Name="t_masterFrame"/>
							</Action>
							<Informations2>
								<Information>
									<Type>Verbose</Type>
									<Value Param0="t_masterFrame.FrameData">Master Frame: {0}</Value>
								</Information>
							</Informations2>
							<ReturnValue>
								<OnFailure>
									<Type>Error</Type>
									<Value>Failed to send FSoE frame!</Value>
									<Id>256</Id>
								</OnFailure>
							</ReturnValue>
						</TestStep>
						<TestStep Name="CheckReceivedSlaveFrame">
							<Action>
								<CallFunction>
									<Reference>CHECK_RESET_FAIL</Reference>
								</CallFunction>
							</Action>
							<ReturnValue>
								<OnSuccess>
									<Type>Success</Type>
									<Value Param0="c_CommFaultReason">Expected CommFaultReason ({0}) received</Value>
								</OnSuccess>
							</ReturnValue>
						</TestStep>
					</TestSteps>
				</TestCase>
				<TestCase Name="#4.32 Para_Fail3" CaseId="32">
					<Comment>Gültige ConnId = 0xffff, Ungültige ConnId = 3, Cmd = Processdata</Comment>
					<CaseVariables>
						<Variable>
							<Name>c_CommFaultReason</Name>
							<Type>Byte</Type>
						</Variable>
						<Variable>
							<Name>c_tmpByte</Name>
							<Type>Byte</Type>
						</Variable>
					</CaseVariables>
					<TestSteps>
						<TestStep Name="SetVariables">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>c_CommFaultReason</Destination>
										<Source>INVALID_CONNID</Source>
									</SetVariable>
									<SetVariable>
										<Destination>c_tmpByte</Destination>
										<Source>0</Source>
									</SetVariable>
									<SetVariable>
										<Destination>t_wdExpired</Destination>
										<Source>false</Source>
									</SetVariable>
									<SetVariable>
										<Destination>t_masterSessionId</Destination>
										<Source>1</Source>
									</SetVariable>
								</SetVariables>
							</Action>
						</TestStep>
						<TestStep Name="SetConnectionData">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>t_connectionId</Destination>
										<Source>65535</Source>
									</SetVariable>
									<SetVariable>
										<Destination DestinationIndex="0">t_connData</Destination>
										<Source>t_connectionId</Source>
									</SetVariable>
									<SetVariable>
										<Destination DestinationIndex="2">t_connData</Destination>
										<Source>ConnData.SlaveAddress</Source>
									</SetVariable>
								</SetVariables>
							</Action>
							<Informations2>
								<Information>
									<Type>Output</Type>
									<Value Param0="t_connectionId" Param1="ConnData.SlaveAddress" Param2="t_connData">ConnectionId: {0} (0x{0:x4}), Slave Address: {1} (0x{1:x4}), Connection Data {2}</Value>
								</Information>
							</Informations2>
						</TestStep>
						<TestStep Name="SetParameterData">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>t_safePara</Destination>
										<Source>SafePara</Source>
									</SetVariable>
									<SetVariable>
										<Destination>t_watchdog</Destination>
										<Source>SafePara.Watchdog</Source>
									</SetVariable>
								</SetVariables>
							</Action>
							<Informations2>
								<Information>
									<Type>Output</Type>
									<Value Param0="t_watchdog" Param1="SafeParaSize" Param2="t_safePara">Watchdog: {0} ms, SafeParaSize: {1}, Safe Parameter {2}</Value>
								</Information>
							</Informations2>
						</TestStep>
						<TestStep Name="GotoParameter">
							<Action>
								<CallFunction>
									<Reference>RUN_DUT_TO_PARAMETER</Reference>
								</CallFunction>
							</Action>
						</TestStep>
						<TestStep Name="SetLastCrc">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>LastCrc</Destination>
										<Source>t_slaveFrame.Crc0</Source>
									</SetVariable>
								</SetVariables>
							</Action>
						</TestStep>
						<TestStep Name="SetInvalidConnId">
							<Informations1>
								<Information>
									<Type>Output</Type>
									<Value Param0="t_connectionId">Valid Master ConnID: {0} (0x{0:x4})</Value>
								</Information>
							</Informations1>
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>t_connectionId</Destination>
										<Source>3</Source>
									</SetVariable>
								</SetVariables>
							</Action>
							<Informations2>
								<Information>
									<Type>Output</Type>
									<Value Param0="t_connectionId">Falsified ConnId: {0} (0x{0:x4})</Value>
								</Information>
							</Informations2>
						</TestStep>
						<TestStep Name="SetFrame">
							<Informations1>
								<Information>
									<Type>Verbose</Type>
									<Value Param0="SafeOutputs" Param1="LastCrc" Param2="t_masterSeqNo" Param3="OldMasterCrc" Param4="t_connectionId">SetFrame(Command ProcessData, SafeData {0}, LastCrc 0x{1:x4}, ConnectionId 0x{4:x4},  SequenceNo 0x{2:x4}, OldCrc 0x{3:x4}, New true</Value>
								</Information>
							</Informations1>
							<Action>
								<SetFrame Name="t_masterFrame">
									<Command>
										<CommandValue>Data</CommandValue>
									</Command>
									<SafeData>
										<SafeDataVariable>SafeOutputs</SafeDataVariable>
									</SafeData>
									<LastCRC>LastCrc</LastCRC>
									<ConnectionID>
										<ConnectionIdVariable>t_connectionId</ConnectionIdVariable>
									</ConnectionID>
									<SequenceNo>t_masterSeqNo</SequenceNo>
									<OldCRC>OldMasterCrc</OldCRC>
									<New>true</New>
								</SetFrame>
							</Action>
						</TestStep>
						<TestStep Name="SendFrame">
							<Action>
								<SendFrame Name="t_masterFrame"/>
							</Action>
							<Informations2>
								<Information>
									<Type>Verbose</Type>
									<Value Param0="t_masterFrame.FrameData">Master Frame: {0}</Value>
								</Information>
							</Informations2>
							<ReturnValue>
								<OnFailure>
									<Type>Error</Type>
									<Value>Failed to send FSoE frame!</Value>
									<Id>256</Id>
								</OnFailure>
							</ReturnValue>
						</TestStep>
						<TestStep Name="CheckReceivedSlaveFrame">
							<Action>
								<CallFunction>
									<Reference>CHECK_RESET_FAIL</Reference>
								</CallFunction>
							</Action>
							<ReturnValue>
								<OnSuccess>
									<Type>Success</Type>
									<Value Param0="c_CommFaultReason">Expected CommFaultReason ({0}) received</Value>
								</OnSuccess>
							</ReturnValue>
						</TestStep>
					</TestSteps>
				</TestCase>
				<TestCase Name="#4.33 Para_Fail3" CaseId="33">
					<Comment>Gültige ConnId = 2, Ungültige ConnId = 3, Cmd = FailSafeData</Comment>
					<CaseVariables>
						<Variable>
							<Name>c_CommFaultReason</Name>
							<Type>Byte</Type>
						</Variable>
						<Variable>
							<Name>c_tmpByte</Name>
							<Type>Byte</Type>
						</Variable>
					</CaseVariables>
					<TestSteps>
						<TestStep Name="SetVariables">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>c_CommFaultReason</Destination>
										<Source>INVALID_CONNID</Source>
									</SetVariable>
									<SetVariable>
										<Destination>c_tmpByte</Destination>
										<Source>0</Source>
									</SetVariable>
									<SetVariable>
										<Destination>t_wdExpired</Destination>
										<Source>false</Source>
									</SetVariable>
									<SetVariable>
										<Destination>t_masterSessionId</Destination>
										<Source>1</Source>
									</SetVariable>
								</SetVariables>
							</Action>
						</TestStep>
						<TestStep Name="SetConnectionData">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>t_connectionId</Destination>
										<Source>2</Source>
									</SetVariable>
									<SetVariable>
										<Destination DestinationIndex="0">t_connData</Destination>
										<Source>t_connectionId</Source>
									</SetVariable>
									<SetVariable>
										<Destination DestinationIndex="2">t_connData</Destination>
										<Source>ConnData.SlaveAddress</Source>
									</SetVariable>
								</SetVariables>
							</Action>
							<Informations2>
								<Information>
									<Type>Output</Type>
									<Value Param0="t_connectionId" Param1="ConnData.SlaveAddress" Param2="t_connData">ConnectionId: {0} (0x{0:x4}), Slave Address: {1} (0x{1:x4}), Connection Data {2}</Value>
								</Information>
							</Informations2>
						</TestStep>
						<TestStep Name="SetParameterData">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>t_safePara</Destination>
										<Source>SafePara</Source>
									</SetVariable>
									<SetVariable>
										<Destination>t_watchdog</Destination>
										<Source>SafePara.Watchdog</Source>
									</SetVariable>
								</SetVariables>
							</Action>
							<Informations2>
								<Information>
									<Type>Output</Type>
									<Value Param0="t_watchdog" Param1="SafeParaSize" Param2="t_safePara">Watchdog: {0} ms, SafeParaSize: {1}, Safe Parameter {2}</Value>
								</Information>
							</Informations2>
						</TestStep>
						<TestStep Name="GotoParameter">
							<Action>
								<CallFunction>
									<Reference>RUN_DUT_TO_PARAMETER</Reference>
								</CallFunction>
							</Action>
						</TestStep>
						<TestStep Name="SetLastCrc">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>LastCrc</Destination>
										<Source>t_slaveFrame.Crc0</Source>
									</SetVariable>
								</SetVariables>
							</Action>
						</TestStep>
						<TestStep Name="SetInvalidConnId">
							<Informations1>
								<Information>
									<Type>Output</Type>
									<Value Param0="t_connectionId">Valid Master ConnID: {0} (0x{0:x4})</Value>
								</Information>
							</Informations1>
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>t_connectionId</Destination>
										<Source>3</Source>
									</SetVariable>
								</SetVariables>
							</Action>
							<Informations2>
								<Information>
									<Type>Output</Type>
									<Value Param0="t_connectionId">Falsified ConnId: {0} (0x{0:x4})</Value>
								</Information>
							</Informations2>
						</TestStep>
						<TestStep Name="SetFrame">
							<Informations1>
								<Information>
									<Type>Verbose</Type>
									<Value Param0="FailSafeValue" Param1="LastCrc" Param2="t_masterSeqNo" Param3="OldMasterCrc" Param4="t_connectionId">SetFrame(Command FailSafeData, SafeData {0}, LastCrc 0x{1:x4}, ConnectionId 0x{4:x4},  SequenceNo 0x{2:x4}, OldCrc 0x{3:x4}, New true</Value>
								</Information>
							</Informations1>
							<Action>
								<SetFrame Name="t_masterFrame">
									<Command>
										<CommandValue>FailSafeData</CommandValue>
									</Command>
									<SafeData>
										<SafeDataVariable>FailSafeValue</SafeDataVariable>
									</SafeData>
									<LastCRC>LastCrc</LastCRC>
									<ConnectionID>
										<ConnectionIdVariable>t_connectionId</ConnectionIdVariable>
									</ConnectionID>
									<SequenceNo>t_masterSeqNo</SequenceNo>
									<OldCRC>OldMasterCrc</OldCRC>
									<New>true</New>
								</SetFrame>
							</Action>
						</TestStep>
						<TestStep Name="SendFrame">
							<Action>
								<SendFrame Name="t_masterFrame"/>
							</Action>
							<Informations2>
								<Information>
									<Type>Verbose</Type>
									<Value Param0="t_masterFrame.FrameData">Master Frame: {0}</Value>
								</Information>
							</Informations2>
							<ReturnValue>
								<OnFailure>
									<Type>Error</Type>
									<Value>Failed to send FSoE frame!</Value>
									<Id>256</Id>
								</OnFailure>
							</ReturnValue>
						</TestStep>
						<TestStep Name="CheckReceivedSlaveFrame">
							<Action>
								<CallFunction>
									<Reference>CHECK_RESET_FAIL</Reference>
								</CallFunction>
							</Action>
							<ReturnValue>
								<OnSuccess>
									<Type>Success</Type>
									<Value Param0="c_CommFaultReason">Expected CommFaultReason ({0}) received</Value>
								</OnSuccess>
							</ReturnValue>
						</TestStep>
					</TestSteps>
				</TestCase>
				<TestCase Name="#4.34 Para_Fail3" CaseId="34">
					<Comment>Gültige ConnId = 4, Ungültige ConnId = 3, Cmd = FailSafeData</Comment>
					<CaseVariables>
						<Variable>
							<Name>c_CommFaultReason</Name>
							<Type>Byte</Type>
						</Variable>
						<Variable>
							<Name>c_tmpByte</Name>
							<Type>Byte</Type>
						</Variable>
					</CaseVariables>
					<TestSteps>
						<TestStep Name="SetVariables">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>c_CommFaultReason</Destination>
										<Source>INVALID_CONNID</Source>
									</SetVariable>
									<SetVariable>
										<Destination>c_tmpByte</Destination>
										<Source>0</Source>
									</SetVariable>
									<SetVariable>
										<Destination>t_wdExpired</Destination>
										<Source>false</Source>
									</SetVariable>
									<SetVariable>
										<Destination>t_masterSessionId</Destination>
										<Source>1</Source>
									</SetVariable>
								</SetVariables>
							</Action>
						</TestStep>
						<TestStep Name="SetConnectionData">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>t_connectionId</Destination>
										<Source>4</Source>
									</SetVariable>
									<SetVariable>
										<Destination DestinationIndex="0">t_connData</Destination>
										<Source>t_connectionId</Source>
									</SetVariable>
									<SetVariable>
										<Destination DestinationIndex="2">t_connData</Destination>
										<Source>ConnData.SlaveAddress</Source>
									</SetVariable>
								</SetVariables>
							</Action>
							<Informations2>
								<Information>
									<Type>Output</Type>
									<Value Param0="t_connectionId" Param1="ConnData.SlaveAddress" Param2="t_connData">ConnectionId: {0} (0x{0:x4}), Slave Address: {1} (0x{1:x4}), Connection Data {2}</Value>
								</Information>
							</Informations2>
						</TestStep>
						<TestStep Name="SetParameterData">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>t_safePara</Destination>
										<Source>SafePara</Source>
									</SetVariable>
									<SetVariable>
										<Destination>t_watchdog</Destination>
										<Source>SafePara.Watchdog</Source>
									</SetVariable>
								</SetVariables>
							</Action>
							<Informations2>
								<Information>
									<Type>Output</Type>
									<Value Param0="t_watchdog" Param1="SafeParaSize" Param2="t_safePara">Watchdog: {0} ms, SafeParaSize: {1}, Safe Parameter {2}</Value>
								</Information>
							</Informations2>
						</TestStep>
						<TestStep Name="GotoParameter">
							<Action>
								<CallFunction>
									<Reference>RUN_DUT_TO_PARAMETER</Reference>
								</CallFunction>
							</Action>
						</TestStep>
						<TestStep Name="SetLastCrc">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>LastCrc</Destination>
										<Source>t_slaveFrame.Crc0</Source>
									</SetVariable>
								</SetVariables>
							</Action>
						</TestStep>
						<TestStep Name="SetInvalidConnId">
							<Informations1>
								<Information>
									<Type>Output</Type>
									<Value Param0="t_connectionId">Valid Master ConnID: {0} (0x{0:x4})</Value>
								</Information>
							</Informations1>
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>t_connectionId</Destination>
										<Source>3</Source>
									</SetVariable>
								</SetVariables>
							</Action>
							<Informations2>
								<Information>
									<Type>Output</Type>
									<Value Param0="t_connectionId">Falsified ConnId: {0} (0x{0:x4})</Value>
								</Information>
							</Informations2>
						</TestStep>
						<TestStep Name="SetFrame">
							<Informations1>
								<Information>
									<Type>Verbose</Type>
									<Value Param0="FailSafeValue" Param1="LastCrc" Param2="t_masterSeqNo" Param3="OldMasterCrc" Param4="t_connectionId">SetFrame(Command FailSafeData, SafeData {0}, LastCrc 0x{1:x4}, ConnectionId 0x{4:x4},  SequenceNo 0x{2:x4}, OldCrc 0x{3:x4}, New true</Value>
								</Information>
							</Informations1>
							<Action>
								<SetFrame Name="t_masterFrame">
									<Command>
										<CommandValue>FailSafeData</CommandValue>
									</Command>
									<SafeData>
										<SafeDataVariable>FailSafeValue</SafeDataVariable>
									</SafeData>
									<LastCRC>LastCrc</LastCRC>
									<ConnectionID>
										<ConnectionIdVariable>t_connectionId</ConnectionIdVariable>
									</ConnectionID>
									<SequenceNo>t_masterSeqNo</SequenceNo>
									<OldCRC>OldMasterCrc</OldCRC>
									<New>true</New>
								</SetFrame>
							</Action>
						</TestStep>
						<TestStep Name="SendFrame">
							<Action>
								<SendFrame Name="t_masterFrame"/>
							</Action>
							<Informations2>
								<Information>
									<Type>Verbose</Type>
									<Value Param0="t_masterFrame.FrameData">Master Frame: {0}</Value>
								</Information>
							</Informations2>
							<ReturnValue>
								<OnFailure>
									<Type>Error</Type>
									<Value>Failed to send FSoE frame!</Value>
									<Id>256</Id>
								</OnFailure>
							</ReturnValue>
						</TestStep>
						<TestStep Name="CheckReceivedSlaveFrame">
							<Action>
								<CallFunction>
									<Reference>CHECK_RESET_FAIL</Reference>
								</CallFunction>
							</Action>
							<ReturnValue>
								<OnSuccess>
									<Type>Success</Type>
									<Value Param0="c_CommFaultReason">Expected CommFaultReason ({0}) received</Value>
								</OnSuccess>
							</ReturnValue>
						</TestStep>
					</TestSteps>
				</TestCase>
				<TestCase Name="#4.35 Para_Fail3" CaseId="35">
					<Comment>Gültige ConnId = 0xffff, Ungültige ConnId = 3, Cmd = FailSafeData</Comment>
					<CaseVariables>
						<Variable>
							<Name>c_CommFaultReason</Name>
							<Type>Byte</Type>
						</Variable>
						<Variable>
							<Name>c_tmpByte</Name>
							<Type>Byte</Type>
						</Variable>
					</CaseVariables>
					<TestSteps>
						<TestStep Name="SetVariables">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>c_CommFaultReason</Destination>
										<Source>INVALID_CONNID</Source>
									</SetVariable>
									<SetVariable>
										<Destination>c_tmpByte</Destination>
										<Source>0</Source>
									</SetVariable>
									<SetVariable>
										<Destination>t_wdExpired</Destination>
										<Source>false</Source>
									</SetVariable>
									<SetVariable>
										<Destination>t_masterSessionId</Destination>
										<Source>1</Source>
									</SetVariable>
								</SetVariables>
							</Action>
						</TestStep>
						<TestStep Name="SetConnectionData">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>t_connectionId</Destination>
										<Source>65535</Source>
									</SetVariable>
									<SetVariable>
										<Destination DestinationIndex="0">t_connData</Destination>
										<Source>t_connectionId</Source>
									</SetVariable>
									<SetVariable>
										<Destination DestinationIndex="2">t_connData</Destination>
										<Source>ConnData.SlaveAddress</Source>
									</SetVariable>
								</SetVariables>
							</Action>
							<Informations2>
								<Information>
									<Type>Output</Type>
									<Value Param0="t_connectionId" Param1="ConnData.SlaveAddress" Param2="t_connData">ConnectionId: {0} (0x{0:x4}), Slave Address: {1} (0x{1:x4}), Connection Data {2}</Value>
								</Information>
							</Informations2>
						</TestStep>
						<TestStep Name="SetParameterData">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>t_safePara</Destination>
										<Source>SafePara</Source>
									</SetVariable>
									<SetVariable>
										<Destination>t_watchdog</Destination>
										<Source>SafePara.Watchdog</Source>
									</SetVariable>
								</SetVariables>
							</Action>
							<Informations2>
								<Information>
									<Type>Output</Type>
									<Value Param0="t_watchdog" Param1="SafeParaSize" Param2="t_safePara">Watchdog: {0} ms, SafeParaSize: {1}, Safe Parameter {2}</Value>
								</Information>
							</Informations2>
						</TestStep>
						<TestStep Name="GotoParameter">
							<Action>
								<CallFunction>
									<Reference>RUN_DUT_TO_PARAMETER</Reference>
								</CallFunction>
							</Action>
						</TestStep>
						<TestStep Name="SetLastCrc">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>LastCrc</Destination>
										<Source>t_slaveFrame.Crc0</Source>
									</SetVariable>
								</SetVariables>
							</Action>
						</TestStep>
						<TestStep Name="SetInvalidConnId">
							<Informations1>
								<Information>
									<Type>Output</Type>
									<Value Param0="t_connectionId">Valid Master ConnID: {0} (0x{0:x4})</Value>
								</Information>
							</Informations1>
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>t_connectionId</Destination>
										<Source>3</Source>
									</SetVariable>
								</SetVariables>
							</Action>
							<Informations2>
								<Information>
									<Type>Output</Type>
									<Value Param0="t_connectionId">Falsified ConnId: {0} (0x{0:x4})</Value>
								</Information>
							</Informations2>
						</TestStep>
						<TestStep Name="SetFrame">
							<Informations1>
								<Information>
									<Type>Verbose</Type>
									<Value Param0="FailSafeValue" Param1="LastCrc" Param2="t_masterSeqNo" Param3="OldMasterCrc" Param4="t_connectionId">SetFrame(Command FailSafeData, SafeData {0}, LastCrc 0x{1:x4}, ConnectionId 0x{4:x4},  SequenceNo 0x{2:x4}, OldCrc 0x{3:x4}, New true</Value>
								</Information>
							</Informations1>
							<Action>
								<SetFrame Name="t_masterFrame">
									<Command>
										<CommandValue>FailSafeData</CommandValue>
									</Command>
									<SafeData>
										<SafeDataVariable>FailSafeValue</SafeDataVariable>
									</SafeData>
									<LastCRC>LastCrc</LastCRC>
									<ConnectionID>
										<ConnectionIdVariable>t_connectionId</ConnectionIdVariable>
									</ConnectionID>
									<SequenceNo>t_masterSeqNo</SequenceNo>
									<OldCRC>OldMasterCrc</OldCRC>
									<New>true</New>
								</SetFrame>
							</Action>
						</TestStep>
						<TestStep Name="SendFrame">
							<Action>
								<SendFrame Name="t_masterFrame"/>
							</Action>
							<Informations2>
								<Information>
									<Type>Verbose</Type>
									<Value Param0="t_masterFrame.FrameData">Master Frame: {0}</Value>
								</Information>
							</Informations2>
							<ReturnValue>
								<OnFailure>
									<Type>Error</Type>
									<Value>Failed to send FSoE frame!</Value>
									<Id>256</Id>
								</OnFailure>
							</ReturnValue>
						</TestStep>
						<TestStep Name="CheckReceivedSlaveFrame">
							<Action>
								<CallFunction>
									<Reference>CHECK_RESET_FAIL</Reference>
								</CallFunction>
							</Action>
							<ReturnValue>
								<OnSuccess>
									<Type>Success</Type>
									<Value Param0="c_CommFaultReason">Expected CommFaultReason ({0}) received</Value>
								</OnSuccess>
							</ReturnValue>
						</TestStep>
					</TestSteps>
				</TestCase>
				<TestCase Name="#4.36 Para_Fail4" CaseId="36">
					<Comment>Hochlauf mehrere Zyklen, Cmd = ProcessData bevor Übergang fertig ist</Comment>
					<CaseVariables>
						<Variable>
							<Name>c_CommFaultReason</Name>
							<Type>Byte</Type>
						</Variable>
						<Variable>
							<Name>c_tmpByte</Name>
							<Type>Byte</Type>
						</Variable>
					</CaseVariables>
					<TestSteps>
						<TestStep Name="CheckSafeDataLength">
							<Compares>
								<Compare>
									<Condition>
										<Value1>SafeDataLength</Value1>
										<Operator>NotEqual</Operator>
										<Value2>1</Value2>
									</Condition>
									<Statement>
										<Return>
											<Type>SkippedCase</Type>
											<Value>SafeDataLength != 1; ==> skip testcase</Value>
										</Return>
									</Statement>
								</Compare>
							</Compares>
						</TestStep>
						<TestStep Name="SetVariables">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>c_CommFaultReason</Destination>
										<Source>INVALID_CMD</Source>
									</SetVariable>
									<SetVariable>
										<Destination>c_tmpByte</Destination>
										<Source>0</Source>
									</SetVariable>
									<SetVariable>
										<Destination>t_masterSessionId</Destination>
										<Source>1</Source>
									</SetVariable>
								</SetVariables>
							</Action>
							<Informations2>
								<Information>
									<Type>Output</Type>
									<Value Param0="t_connectionId" Param1="ConnData.SlaveAddress" Param2="t_connData">ConnectionId: {0} (0x{0:x4}), Slave Address: {1} (0x{1:x4}), Connection Data {2}</Value>
								</Information>
							</Informations2>
						</TestStep>
						<TestStep Name="SetConnectionData">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>t_connectionId</Destination>
										<Source>3</Source>
									</SetVariable>
									<SetVariable>
										<Destination DestinationIndex="0">t_connData</Destination>
										<Source>t_connectionId</Source>
									</SetVariable>
									<SetVariable>
										<Destination DestinationIndex="2">t_connData</Destination>
										<Source>ConnData.SlaveAddress</Source>
									</SetVariable>
								</SetVariables>
							</Action>
							<Informations2>
								<Information>
									<Type>Output</Type>
									<Value Param0="t_connectionId" Param1="ConnData.SlaveAddress" Param2="t_connData">ConnectionId: {0} (0x{0:x4}), Slave Address: {1} (0x{1:x4}), Connection Data {2}</Value>
								</Information>
							</Informations2>
						</TestStep>
						<TestStep Name="SetParameterData">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>t_safePara</Destination>
										<Source>SafePara</Source>
									</SetVariable>
									<SetVariable>
										<Destination>t_watchdog</Destination>
										<Source>SafePara.Watchdog</Source>
									</SetVariable>
								</SetVariables>
							</Action>
							<Informations2>
								<Information>
									<Type>Output</Type>
									<Value Param0="t_watchdog" Param1="SafeParaSize" Param2="t_safePara">Watchdog: {0} ms, SafeParaSize: {1}, Safe Parameter {2}</Value>
								</Information>
							</Informations2>
						</TestStep>
						<TestStep Name="GoToConnection">
							<Action>
								<CallFunction>
									<Reference>RUN_DUT_TO_CONNECTION</Reference>
								</CallFunction>
							</Action>
						</TestStep>
						<TestStep Name="CallConnectionOk">
							<Action>
								<CallFunction>
									<Reference>CONN_OK</Reference>
								</CallFunction>
							</Action>
						</TestStep>
						<TestStep Name="ReceiveEvent">
							<Event>
								<ReceiveFrame>t_slaveFrame</ReceiveFrame>
							</Event>
							<Informations2>
								<Information>
									<Type>Verbose</Type>
									<Value Param0="t_slaveFrame.FrameData">Slave Frame: {0}</Value>
								</Information>
							</Informations2>
						</TestStep>
						<TestStep Name="CheckWatchdog">
							<Event>
								<WatchdogExpired>
									<SetVariables>
										<SetVariable>
											<Destination>t_wdExpired</Destination>
											<Source>true</Source>
										</SetVariable>
									</SetVariables>
								</WatchdogExpired>
							</Event>
							<Compares>
								<Compare>
									<Condition>
										<Value1>t_wdExpired</Value1>
										<Operator>Equal</Operator>
										<Value2>true</Value2>
									</Condition>
									<Statement>
										<SetVariables>
											<SetVariable>
												<Destination>t_wdExpired</Destination>
												<Source>false</Source>
											</SetVariable>
										</SetVariables>
									</Statement>
									<Statement>
										<Return>
											<Type>Error</Type>
											<Value Param0="ElapsedWD">Watchdog expired! {0} ms </Value>
											<Id>5</Id>
										</Return>
									</Statement>
								</Compare>
							</Compares>
							<Informations2>
								<Information>
									<Type>Verbose</Type>
									<Value Param0="t_wdExpired">WD {0}</Value>
								</Information>
							</Informations2>
						</TestStep>
						<TestStep Name="CheckReceivedCrc">
							<Informations1>
								<Information>
									<Type>Verbose</Type>
									<Value Param0="t_slaveFrame.FrameData" Param1="LastCrc" Param2="t_slaveSeqNo" Param3="t_oldSlaveCrc" Param4="true">IsCrcCorrect(Frame {0}, LastCrc 0x{1:X4}, SeqNo {2}, OldCrc 0x{3:X4}, New {4})</Value>
								</Information>
							</Informations1>
							<Action>
								<IsCrcCorrect ReturnValue="crcCorrect">
									<Frame>t_slaveFrame</Frame>
									<LastCrc>LastCrc</LastCrc>
									<SequenceNo>t_slaveSeqNo</SequenceNo>
									<OldCrc>t_oldSlaveCrc</OldCrc>
									<New>true</New>
								</IsCrcCorrect>
							</Action>
							<ReturnValue>
								<OnFailure>
									<Type>Error</Type>
									<Value Param0="t_slaveFrame.Crc0">Invalid Crc0 reveived ({0:x})</Value>
									<Id>4</Id>
								</OnFailure>
							</ReturnValue>
						</TestStep>
						<TestStep Name="CheckParameterConditions">
							<Compares>
								<Compare>
									<Condition>
										<Value1>t_slaveFrame.Command</Value1>
										<Operator>Equal</Operator>
										<Value2>Parameter</Value2>
									</Condition>
									<Condition>
										<Value1>BytesToBeSent</Value1>
										<Operator>Equal</Operator>
										<Value2>0</Value2>
									</Condition>
									<Condition>
										<Value1>crcCorrect</Value1>
										<Operator>Equal</Operator>
										<Value2>true</Value2>
									</Condition>
									<Statement>
										<Return>
											<Type>Error</Type>
											<Value>BytesToBeSent == 0</Value>
											<Id>1</Id>
										</Return>
									</Statement>
								</Compare>
								<Compare>
									<Condition>
										<Value1>t_slaveFrame.Command</Value1>
										<Operator>Equal</Operator>
										<Value2>Parameter</Value2>
									</Condition>
									<Condition>
										<Value1>crcCorrect</Value1>
										<Operator>Equal</Operator>
										<Value2>false</Value2>
									</Condition>
									<Statement>
										<Return>
											<Type>Error</Type>
											<Value>Invalid Crc received</Value>
											<Id>4</Id>
										</Return>
									</Statement>
								</Compare>
								<Compare>
									<Condition>
										<Value1>t_slaveFrame.Command</Value1>
										<Operator>Equal</Operator>
										<Value2>Parameter</Value2>
									</Condition>
									<Condition>
										<Value1>BytesToBeSent</Value1>
										<Operator>NotEqual</Operator>
										<Value2>0</Value2>
									</Condition>
									<Condition>
										<Value1>crcCorrect</Value1>
										<Operator>Equal</Operator>
										<Value2>true</Value2>
									</Condition>
									<Statement>
										<Information>
											<Type>Output</Type>
											<Value>Invalid transition to Parameter before BytesToBeSent = 0</Value>
										</Information>
									</Statement>
									<Statement>
										<SetVariables>
											<SetVariable>
												<Destination>DataCommand</Destination>
												<Source>ProcessData</Source>
											</SetVariable>
										</SetVariables>
									</Statement>
									<Statement>
										<CallFunction>PARA_OK</CallFunction>
									</Statement>
								</Compare>
								<Compare>
									<Condition>
										<Value1>t_slaveFrame.Command</Value1>
										<Operator>Equal</Operator>
										<Value2>Reset</Value2>
									</Condition>
									<Statement>
										<Return>
											<Type>Error</Type>
											<Value>Invalid CMD(Reset) received</Value>
											<Id>1</Id>
										</Return>
									</Statement>
								</Compare>
								<Compare>
									<Condition>
										<Value1>t_slaveFrame.Command</Value1>
										<Operator>Equal</Operator>
										<Value2>Session</Value2>
									</Condition>
									<Statement>
										<Return>
											<Type>Error</Type>
											<Value>Invalid CMD (Session) received</Value>
											<Id>1</Id>
										</Return>
									</Statement>
								</Compare>
								<Compare>
									<Condition>
										<Value1>t_slaveFrame.Command</Value1>
										<Operator>Equal</Operator>
										<Value2>Connection</Value2>
									</Condition>
									<Statement>
										<Return>
											<Type>Error</Type>
											<Value>Invalid CMD (Connection) received</Value>
										</Return>
									</Statement>
								</Compare>
								<Compare>
									<Condition>
										<Value1>t_slaveFrame.Command</Value1>
										<Operator>Equal</Operator>
										<Value2>ProcessData</Value2>
									</Condition>
									<Statement>
										<Return>
											<Type>Error</Type>
											<Value>Invalid CMD (ProcessData) received</Value>
											<Id>1</Id>
										</Return>
									</Statement>
								</Compare>
								<Compare>
									<Condition>
										<Value1>t_slaveFrame.Command</Value1>
										<Operator>Equal</Operator>
										<Value2>FailSafeData</Value2>
									</Condition>
									<Statement>
										<Return>
											<Type>Error</Type>
											<Value>Invalid CMD (FailSafeData) received</Value>
											<Id>1</Id>
										</Return>
									</Statement>
								</Compare>
								<Compare>
									<Condition>
										<Value1>t_slaveFrame.Command</Value1>
										<Operator>NotEqual</Operator>
										<Value2>Reset</Value2>
									</Condition>
									<Condition>
										<Value1>t_slaveFrame.Command</Value1>
										<Operator>NotEqual</Operator>
										<Value2>Session</Value2>
									</Condition>
									<Condition>
										<Value1>t_slaveFrame.Command</Value1>
										<Operator>NotEqual</Operator>
										<Value2>Connection</Value2>
									</Condition>
									<Condition>
										<Value1>t_slaveFrame.Command</Value1>
										<Operator>NotEqual</Operator>
										<Value2>Parameter</Value2>
									</Condition>
									<Condition>
										<Value1>t_slaveFrame.Command</Value1>
										<Operator>NotEqual</Operator>
										<Value2>ProcessData</Value2>
									</Condition>
									<Condition>
										<Value1>t_slaveFrame.Command</Value1>
										<Operator>NotEqual</Operator>
										<Value2>FailSafeData</Value2>
									</Condition>
									<Statement>
										<Return>
											<Type>Error</Type>
											<Value>Unknown CMD received</Value>
											<Id>2</Id>
										</Return>
									</Statement>
								</Compare>
							</Compares>
						</TestStep>
						<TestStep Name="CheckReceivedSlaveFrame">
							<Action>
								<CallFunction>
									<Reference>CHECK_RESET_FAIL</Reference>
								</CallFunction>
							</Action>
							<ReturnValue>
								<OnSuccess>
									<Type>Success</Type>
									<Value Param0="c_CommFaultReason">Expected CommFaultReason ({0}) received</Value>
								</OnSuccess>
							</ReturnValue>
						</TestStep>
					</TestSteps>
				</TestCase>
				<TestCase Name="#4.37 Para_Fail4" CaseId="37">
					<Comment>Hochlauf mehrere Zyklen, Cmd = FailSafeData bevor Übergang fertig ist</Comment>
					<CaseVariables>
						<Variable>
							<Name>c_CommFaultReason</Name>
							<Type>Byte</Type>
						</Variable>
						<Variable>
							<Name>c_tmpByte</Name>
							<Type>Byte</Type>
						</Variable>
					</CaseVariables>
					<TestSteps>
						<TestStep Name="CheckSafeDataLength">
							<Compares>
								<Compare>
									<Condition>
										<Value1>SafeDataLength</Value1>
										<Operator>NotEqual</Operator>
										<Value2>1</Value2>
									</Condition>
									<Statement>
										<Return>
											<Type>SkippedCase</Type>
											<Value>SafeDataLength != 1; ==> skip testcase</Value>
										</Return>
									</Statement>
								</Compare>
							</Compares>
						</TestStep>
						<TestStep Name="SetVariables">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>c_CommFaultReason</Destination>
										<Source>INVALID_CMD</Source>
									</SetVariable>
									<SetVariable>
										<Destination>c_tmpByte</Destination>
										<Source>0</Source>
									</SetVariable>
									<SetVariable>
										<Destination>t_masterSessionId</Destination>
										<Source>1</Source>
									</SetVariable>
								</SetVariables>
							</Action>
							<Informations2>
								<Information>
									<Type>Output</Type>
									<Value Param0="t_connectionId" Param1="ConnData.SlaveAddress" Param2="t_connData">ConnectionId: {0} (0x{0:x4}), Slave Address: {1} (0x{1:x4}), Connection Data {2}</Value>
								</Information>
							</Informations2>
						</TestStep>
						<TestStep Name="SetConnectionData">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>t_connectionId</Destination>
										<Source>3</Source>
									</SetVariable>
									<SetVariable>
										<Destination DestinationIndex="0">t_connData</Destination>
										<Source>t_connectionId</Source>
									</SetVariable>
									<SetVariable>
										<Destination DestinationIndex="2">t_connData</Destination>
										<Source>ConnData.SlaveAddress</Source>
									</SetVariable>
								</SetVariables>
							</Action>
							<Informations2>
								<Information>
									<Type>Output</Type>
									<Value Param0="t_connectionId" Param1="ConnData.SlaveAddress" Param2="t_connData">ConnectionId: {0} (0x{0:x4}), Slave Address: {1} (0x{1:x4}), Connection Data {2}</Value>
								</Information>
							</Informations2>
						</TestStep>
						<TestStep Name="SetParameterData">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>t_safePara</Destination>
										<Source>SafePara</Source>
									</SetVariable>
									<SetVariable>
										<Destination>t_watchdog</Destination>
										<Source>SafePara.Watchdog</Source>
									</SetVariable>
								</SetVariables>
							</Action>
							<Informations2>
								<Information>
									<Type>Output</Type>
									<Value Param0="t_watchdog" Param1="SafeParaSize" Param2="t_safePara">Watchdog: {0} ms, SafeParaSize: {1}, Safe Parameter {2}</Value>
								</Information>
							</Informations2>
						</TestStep>
						<TestStep Name="GoToConnection">
							<Action>
								<CallFunction>
									<Reference>RUN_DUT_TO_CONNECTION</Reference>
								</CallFunction>
							</Action>
						</TestStep>
						<TestStep Name="CallConnectionOk">
							<Action>
								<CallFunction>
									<Reference>CONN_OK</Reference>
								</CallFunction>
							</Action>
						</TestStep>
						<TestStep Name="ReceiveEvent">
							<Event>
								<ReceiveFrame>t_slaveFrame</ReceiveFrame>
							</Event>
							<Informations2>
								<Information>
									<Type>Verbose</Type>
									<Value Param0="t_slaveFrame.FrameData">Slave Frame: {0}</Value>
								</Information>
							</Informations2>
						</TestStep>
						<TestStep Name="CheckWatchdog">
							<Event>
								<WatchdogExpired>
									<SetVariables>
										<SetVariable>
											<Destination>t_wdExpired</Destination>
											<Source>true</Source>
										</SetVariable>
									</SetVariables>
								</WatchdogExpired>
							</Event>
							<Compares>
								<Compare>
									<Condition>
										<Value1>t_wdExpired</Value1>
										<Operator>Equal</Operator>
										<Value2>true</Value2>
									</Condition>
									<Statement>
										<SetVariables>
											<SetVariable>
												<Destination>t_wdExpired</Destination>
												<Source>false</Source>
											</SetVariable>
										</SetVariables>
									</Statement>
									<Statement>
										<Return>
											<Type>Error</Type>
											<Value Param0="ElapsedWD">Watchdog expired! {0} ms </Value>
											<Id>5</Id>
										</Return>
									</Statement>
								</Compare>
							</Compares>
							<Informations2>
								<Information>
									<Type>Verbose</Type>
									<Value Param0="t_wdExpired">WD {0}</Value>
								</Information>
							</Informations2>
						</TestStep>
						<TestStep Name="CheckReceivedCrc">
							<Informations1>
								<Information>
									<Type>Verbose</Type>
									<Value Param0="t_slaveFrame.FrameData" Param1="LastCrc" Param2="t_slaveSeqNo" Param3="t_oldSlaveCrc" Param4="true">IsCrcCorrect(Frame {0}, LastCrc 0x{1:X4}, SeqNo {2}, OldCrc 0x{3:X4}, New {4})</Value>
								</Information>
							</Informations1>
							<Action>
								<IsCrcCorrect ReturnValue="crcCorrect">
									<Frame>t_slaveFrame</Frame>
									<LastCrc>LastCrc</LastCrc>
									<SequenceNo>t_slaveSeqNo</SequenceNo>
									<OldCrc>t_oldSlaveCrc</OldCrc>
									<New>true</New>
								</IsCrcCorrect>
							</Action>
							<ReturnValue>
								<OnFailure>
									<Type>Error</Type>
									<Value Param0="t_slaveFrame.Crc0">Invalid Crc0 reveived ({0:x})</Value>
									<Id>4</Id>
								</OnFailure>
							</ReturnValue>
						</TestStep>
						<TestStep Name="CheckParameterConditions">
							<Compares>
								<Compare>
									<Condition>
										<Value1>t_slaveFrame.Command</Value1>
										<Operator>Equal</Operator>
										<Value2>Parameter</Value2>
									</Condition>
									<Condition>
										<Value1>BytesToBeSent</Value1>
										<Operator>Equal</Operator>
										<Value2>0</Value2>
									</Condition>
									<Condition>
										<Value1>crcCorrect</Value1>
										<Operator>Equal</Operator>
										<Value2>true</Value2>
									</Condition>
									<Statement>
										<Return>
											<Type>Error</Type>
											<Value>BytesToBeSent == 0</Value>
											<Id>1</Id>
										</Return>
									</Statement>
								</Compare>
								<Compare>
									<Condition>
										<Value1>t_slaveFrame.Command</Value1>
										<Operator>Equal</Operator>
										<Value2>Parameter</Value2>
									</Condition>
									<Condition>
										<Value1>crcCorrect</Value1>
										<Operator>Equal</Operator>
										<Value2>false</Value2>
									</Condition>
									<Statement>
										<Return>
											<Type>Error</Type>
											<Value>Invalid Crc received</Value>
											<Id>4</Id>
										</Return>
									</Statement>
								</Compare>
								<Compare>
									<Condition>
										<Value1>t_slaveFrame.Command</Value1>
										<Operator>Equal</Operator>
										<Value2>Parameter</Value2>
									</Condition>
									<Condition>
										<Value1>BytesToBeSent</Value1>
										<Operator>NotEqual</Operator>
										<Value2>0</Value2>
									</Condition>
									<Condition>
										<Value1>crcCorrect</Value1>
										<Operator>Equal</Operator>
										<Value2>true</Value2>
									</Condition>
									<Statement>
										<Information>
											<Type>Output</Type>
											<Value>Invalid transition to Parameter before BytesToBeSent = 0</Value>
										</Information>
									</Statement>
									<Statement>
										<SetVariables>
											<SetVariable>
												<Destination>DataCommand</Destination>
												<Source>FailSafeData</Source>
											</SetVariable>
											<SetVariable>
												<Destination>SafeOutputs</Destination>
												<Source>FailSafeValue</Source>
											</SetVariable>
										</SetVariables>
									</Statement>
									<Statement>
										<CallFunction>PARA_OK</CallFunction>
									</Statement>
								</Compare>
								<Compare>
									<Condition>
										<Value1>t_slaveFrame.Command</Value1>
										<Operator>Equal</Operator>
										<Value2>Reset</Value2>
									</Condition>
									<Statement>
										<Return>
											<Type>Error</Type>
											<Value>Invalid CMD(Reset) received</Value>
											<Id>1</Id>
										</Return>
									</Statement>
								</Compare>
								<Compare>
									<Condition>
										<Value1>t_slaveFrame.Command</Value1>
										<Operator>Equal</Operator>
										<Value2>Session</Value2>
									</Condition>
									<Statement>
										<Return>
											<Type>Error</Type>
											<Value>Invalid CMD (Session) received</Value>
											<Id>1</Id>
										</Return>
									</Statement>
								</Compare>
								<Compare>
									<Condition>
										<Value1>t_slaveFrame.Command</Value1>
										<Operator>Equal</Operator>
										<Value2>Connection</Value2>
									</Condition>
									<Statement>
										<Return>
											<Type>Error</Type>
											<Value>Invalid CMD (Connection) received</Value>
										</Return>
									</Statement>
								</Compare>
								<Compare>
									<Condition>
										<Value1>t_slaveFrame.Command</Value1>
										<Operator>Equal</Operator>
										<Value2>ProcessData</Value2>
									</Condition>
									<Statement>
										<Return>
											<Type>Error</Type>
											<Value>Invalid CMD (ProcessData) received</Value>
											<Id>1</Id>
										</Return>
									</Statement>
								</Compare>
								<Compare>
									<Condition>
										<Value1>t_slaveFrame.Command</Value1>
										<Operator>Equal</Operator>
										<Value2>FailSafeData</Value2>
									</Condition>
									<Statement>
										<Return>
											<Type>Error</Type>
											<Value>Invalid CMD (FailSafeData) received</Value>
											<Id>1</Id>
										</Return>
									</Statement>
								</Compare>
								<Compare>
									<Condition>
										<Value1>t_slaveFrame.Command</Value1>
										<Operator>NotEqual</Operator>
										<Value2>Reset</Value2>
									</Condition>
									<Condition>
										<Value1>t_slaveFrame.Command</Value1>
										<Operator>NotEqual</Operator>
										<Value2>Session</Value2>
									</Condition>
									<Condition>
										<Value1>t_slaveFrame.Command</Value1>
										<Operator>NotEqual</Operator>
										<Value2>Connection</Value2>
									</Condition>
									<Condition>
										<Value1>t_slaveFrame.Command</Value1>
										<Operator>NotEqual</Operator>
										<Value2>Parameter</Value2>
									</Condition>
									<Condition>
										<Value1>t_slaveFrame.Command</Value1>
										<Operator>NotEqual</Operator>
										<Value2>ProcessData</Value2>
									</Condition>
									<Condition>
										<Value1>t_slaveFrame.Command</Value1>
										<Operator>NotEqual</Operator>
										<Value2>FailSafeData</Value2>
									</Condition>
									<Statement>
										<Return>
											<Type>Error</Type>
											<Value>Unknown CMD received</Value>
											<Id>2</Id>
										</Return>
									</Statement>
								</Compare>
							</Compares>
						</TestStep>
						<TestStep Name="CheckReceivedSlaveFrame">
							<Action>
								<CallFunction>
									<Reference>CHECK_RESET_FAIL</Reference>
								</CallFunction>
							</Action>
							<ReturnValue>
								<OnSuccess>
									<Type>Success</Type>
									<Value Param0="c_CommFaultReason">Expected CommFaultReason ({0}) received</Value>
								</OnSuccess>
							</ReturnValue>
						</TestStep>
					</TestSteps>
				</TestCase>
				<TestCase Name="#4.38 Para_Fail5" CaseId="38">
					<Comment>Hochlauf mehrere Zyklen, falsche Crc0 (+1) im Übergang</Comment>
					<CaseVariables>
						<Variable>
							<Name>c_CommFaultReason</Name>
							<Type>Byte</Type>
						</Variable>
						<Variable>
							<Name>c_tmpByte</Name>
							<Type>Byte</Type>
						</Variable>
					</CaseVariables>
					<TestSteps>
						<TestStep Name="CheckSafeDataLength">
							<Compares>
								<Compare>
									<Condition>
										<Value1>SafeDataLength</Value1>
										<Operator>NotEqual</Operator>
										<Value2>1</Value2>
									</Condition>
									<Statement>
										<Return>
											<Type>SkippedCase</Type>
											<Value>SafeDataLength != 1; ==> skip testcase</Value>
										</Return>
									</Statement>
								</Compare>
							</Compares>
						</TestStep>
						<TestStep Name="SetVariables">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>c_CommFaultReason</Destination>
										<Source>INVALID_CRC</Source>
									</SetVariable>
									<SetVariable>
										<Destination>c_tmpByte</Destination>
										<Source>0</Source>
									</SetVariable>
									<SetVariable>
										<Destination>t_masterSessionId</Destination>
										<Source>1</Source>
									</SetVariable>
								</SetVariables>
							</Action>
						</TestStep>
						<TestStep Name="SetConnectionData">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>t_connectionId</Destination>
										<Source>3</Source>
									</SetVariable>
									<SetVariable>
										<Destination DestinationIndex="0">t_connData</Destination>
										<Source>t_connectionId</Source>
									</SetVariable>
									<SetVariable>
										<Destination DestinationIndex="2">t_connData</Destination>
										<Source>ConnData.SlaveAddress</Source>
									</SetVariable>
								</SetVariables>
							</Action>
							<Informations2>
								<Information>
									<Type>Output</Type>
									<Value Param0="t_connectionId" Param1="ConnData.SlaveAddress" Param2="t_connData">ConnectionId: {0} (0x{0:x4}), Slave Address: {1} (0x{1:x4}), Connection Data {2}</Value>
								</Information>
							</Informations2>
						</TestStep>
						<TestStep Name="SetParameterData">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>t_safePara</Destination>
										<Source>SafePara</Source>
									</SetVariable>
									<SetVariable>
										<Destination>t_watchdog</Destination>
										<Source>SafePara.Watchdog</Source>
									</SetVariable>
								</SetVariables>
							</Action>
							<Informations2>
								<Information>
									<Type>Output</Type>
									<Value Param0="t_watchdog" Param1="SafeParaSize" Param2="t_safePara">Watchdog: {0} ms, SafeParaSize: {1}, Safe Parameter {2}</Value>
								</Information>
							</Informations2>
						</TestStep>
						<TestStep Name="GoToConnection">
							<Action>
								<CallFunction>
									<Reference>RUN_DUT_TO_CONNECTION</Reference>
								</CallFunction>
							</Action>
						</TestStep>
						<TestStep Name="CallConnectionOk">
							<Action>
								<CallFunction>
									<Reference>CONN_OK</Reference>
								</CallFunction>
							</Action>
						</TestStep>
						<TestStep Name="ReceiveEvent">
							<Event>
								<ReceiveFrame>t_slaveFrame</ReceiveFrame>
							</Event>
							<Informations2>
								<Information>
									<Type>Verbose</Type>
									<Value Param0="t_slaveFrame.FrameData">Slave Frame: {0}</Value>
								</Information>
							</Informations2>
						</TestStep>
						<TestStep Name="CheckWatchdog">
							<Event>
								<WatchdogExpired>
									<SetVariables>
										<SetVariable>
											<Destination>t_wdExpired</Destination>
											<Source>true</Source>
										</SetVariable>
									</SetVariables>
								</WatchdogExpired>
							</Event>
							<Compares>
								<Compare>
									<Condition>
										<Value1>t_wdExpired</Value1>
										<Operator>Equal</Operator>
										<Value2>true</Value2>
									</Condition>
									<Statement>
										<SetVariables>
											<SetVariable>
												<Destination>t_wdExpired</Destination>
												<Source>false</Source>
											</SetVariable>
										</SetVariables>
									</Statement>
									<Statement>
										<Return>
											<Type>Error</Type>
											<Value Param0="ElapsedWD">Watchdog expired! {0} ms </Value>
											<Id>5</Id>
										</Return>
									</Statement>
								</Compare>
							</Compares>
							<Informations2>
								<Information>
									<Type>Verbose</Type>
									<Value Param0="t_wdExpired">WD {0}</Value>
								</Information>
							</Informations2>
						</TestStep>
						<TestStep Name="CheckReceivedCrc">
							<Informations1>
								<Information>
									<Type>Verbose</Type>
									<Value Param0="t_slaveFrame.FrameData" Param1="LastCrc" Param2="t_slaveSeqNo" Param3="t_oldSlaveCrc" Param4="true">IsCrcCorrect(Frame {0}, LastCrc 0x{1:X4}, SeqNo {2}, OldCrc 0x{3:X4}, New {4})</Value>
								</Information>
							</Informations1>
							<Action>
								<IsCrcCorrect ReturnValue="crcCorrect">
									<Frame>t_slaveFrame</Frame>
									<LastCrc>LastCrc</LastCrc>
									<SequenceNo>t_slaveSeqNo</SequenceNo>
									<OldCrc>t_oldSlaveCrc</OldCrc>
									<New>true</New>
								</IsCrcCorrect>
							</Action>
							<ReturnValue>
								<OnFailure>
									<Type>Error</Type>
									<Value Param0="t_slaveFrame.Crc0">Invalid Crc0 reveived ({0:x})</Value>
									<Id>4</Id>
								</OnFailure>
							</ReturnValue>
						</TestStep>
						<TestStep Name="CheckParameterConditions">
							<Compares>
								<Compare>
									<Condition>
										<Value1>t_slaveFrame.Command</Value1>
										<Operator>Equal</Operator>
										<Value2>Parameter</Value2>
									</Condition>
									<Condition>
										<Value1>BytesToBeSent</Value1>
										<Operator>Equal</Operator>
										<Value2>0</Value2>
									</Condition>
									<Condition>
										<Value1>crcCorrect</Value1>
										<Operator>Equal</Operator>
										<Value2>true</Value2>
									</Condition>
									<Statement>
										<Return>
											<Type>Error</Type>
											<Value>BytesToBeSent == 0</Value>
											<Id>1</Id>
										</Return>
									</Statement>
								</Compare>
								<Compare>
									<Condition>
										<Value1>t_slaveFrame.Command</Value1>
										<Operator>Equal</Operator>
										<Value2>Parameter</Value2>
									</Condition>
									<Condition>
										<Value1>crcCorrect</Value1>
										<Operator>Equal</Operator>
										<Value2>false</Value2>
									</Condition>
									<Statement>
										<Return>
											<Type>Error</Type>
											<Value>Invalid Crc received</Value>
											<Id>4</Id>
										</Return>
									</Statement>
								</Compare>
								<Compare>
									<Condition>
										<Value1>t_slaveFrame.Command</Value1>
										<Operator>Equal</Operator>
										<Value2>Parameter</Value2>
									</Condition>
									<Condition>
										<Value1>BytesToBeSent</Value1>
										<Operator>NotEqual</Operator>
										<Value2>0</Value2>
									</Condition>
									<Condition>
										<Value1>crcCorrect</Value1>
										<Operator>Equal</Operator>
										<Value2>true</Value2>
									</Condition>
									<Statement>
										<CallFunction>PARA_STAY1_INCREMENTED_CRC0</CallFunction>
									</Statement>
								</Compare>
								<Compare>
									<Condition>
										<Value1>t_slaveFrame.Command</Value1>
										<Operator>Equal</Operator>
										<Value2>Reset</Value2>
									</Condition>
									<Statement>
										<Return>
											<Type>Error</Type>
											<Value>Invalid CMD(Reset) received</Value>
											<Id>1</Id>
										</Return>
									</Statement>
								</Compare>
								<Compare>
									<Condition>
										<Value1>t_slaveFrame.Command</Value1>
										<Operator>Equal</Operator>
										<Value2>Session</Value2>
									</Condition>
									<Statement>
										<Return>
											<Type>Error</Type>
											<Value>Invalid CMD (Session) received</Value>
											<Id>1</Id>
										</Return>
									</Statement>
								</Compare>
								<Compare>
									<Condition>
										<Value1>t_slaveFrame.Command</Value1>
										<Operator>Equal</Operator>
										<Value2>Connection</Value2>
									</Condition>
									<Statement>
										<Return>
											<Type>Error</Type>
											<Value>Invalid CMD (Connection) received</Value>
										</Return>
									</Statement>
								</Compare>
								<Compare>
									<Condition>
										<Value1>t_slaveFrame.Command</Value1>
										<Operator>Equal</Operator>
										<Value2>ProcessData</Value2>
									</Condition>
									<Statement>
										<Return>
											<Type>Error</Type>
											<Value>Invalid CMD (ProcessData) received</Value>
											<Id>1</Id>
										</Return>
									</Statement>
								</Compare>
								<Compare>
									<Condition>
										<Value1>t_slaveFrame.Command</Value1>
										<Operator>Equal</Operator>
										<Value2>FailSafeData</Value2>
									</Condition>
									<Statement>
										<Return>
											<Type>Error</Type>
											<Value>Invalid CMD (FailSafeData) received</Value>
											<Id>1</Id>
										</Return>
									</Statement>
								</Compare>
								<Compare>
									<Condition>
										<Value1>t_slaveFrame.Command</Value1>
										<Operator>NotEqual</Operator>
										<Value2>Reset</Value2>
									</Condition>
									<Condition>
										<Value1>t_slaveFrame.Command</Value1>
										<Operator>NotEqual</Operator>
										<Value2>Session</Value2>
									</Condition>
									<Condition>
										<Value1>t_slaveFrame.Command</Value1>
										<Operator>NotEqual</Operator>
										<Value2>Connection</Value2>
									</Condition>
									<Condition>
										<Value1>t_slaveFrame.Command</Value1>
										<Operator>NotEqual</Operator>
										<Value2>Parameter</Value2>
									</Condition>
									<Condition>
										<Value1>t_slaveFrame.Command</Value1>
										<Operator>NotEqual</Operator>
										<Value2>ProcessData</Value2>
									</Condition>
									<Condition>
										<Value1>t_slaveFrame.Command</Value1>
										<Operator>NotEqual</Operator>
										<Value2>FailSafeData</Value2>
									</Condition>
									<Statement>
										<Return>
											<Type>Error</Type>
											<Value>Unknown CMD received</Value>
											<Id>2</Id>
										</Return>
									</Statement>
								</Compare>
							</Compares>
						</TestStep>
						<TestStep Name="CheckReceivedSlaveFrame">
							<Action>
								<CallFunction>
									<Reference>CHECK_RESET_FAIL</Reference>
								</CallFunction>
							</Action>
							<ReturnValue>
								<OnSuccess>
									<Type>Success</Type>
									<Value Param0="c_CommFaultReason">Expected CommFaultReason ({0}) received</Value>
								</OnSuccess>
							</ReturnValue>
						</TestStep>
					</TestSteps>
				</TestCase>
				<TestCase Name="#4.39 Para_Fail5" CaseId="39">
					<Comment>Hochlauf mehrere Zyklen, falsche Crc0 (-1) im Übergang</Comment>
					<CaseVariables>
						<Variable>
							<Name>c_CommFaultReason</Name>
							<Type>Byte</Type>
						</Variable>
						<Variable>
							<Name>c_tmpByte</Name>
							<Type>Byte</Type>
						</Variable>
					</CaseVariables>
					<TestSteps>
						<TestStep Name="CheckSafeDataLength">
							<Compares>
								<Compare>
									<Condition>
										<Value1>SafeDataLength</Value1>
										<Operator>NotEqual</Operator>
										<Value2>1</Value2>
									</Condition>
									<Statement>
										<Return>
											<Type>SkippedCase</Type>
											<Value>SafeDataLength != 1; ==> skip testcase</Value>
										</Return>
									</Statement>
								</Compare>
							</Compares>
						</TestStep>
						<TestStep Name="SetVariables">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>c_CommFaultReason</Destination>
										<Source>INVALID_CRC</Source>
									</SetVariable>
									<SetVariable>
										<Destination>c_tmpByte</Destination>
										<Source>0</Source>
									</SetVariable>
									<SetVariable>
										<Destination>t_masterSessionId</Destination>
										<Source>1</Source>
									</SetVariable>
								</SetVariables>
							</Action>
						</TestStep>
						<TestStep Name="SetConnectionData">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>t_connectionId</Destination>
										<Source>3</Source>
									</SetVariable>
									<SetVariable>
										<Destination DestinationIndex="0">t_connData</Destination>
										<Source>t_connectionId</Source>
									</SetVariable>
									<SetVariable>
										<Destination DestinationIndex="2">t_connData</Destination>
										<Source>ConnData.SlaveAddress</Source>
									</SetVariable>
								</SetVariables>
							</Action>
							<Informations2>
								<Information>
									<Type>Output</Type>
									<Value Param0="t_connectionId" Param1="ConnData.SlaveAddress" Param2="t_connData">ConnectionId: {0} (0x{0:x4}), Slave Address: {1} (0x{1:x4}), Connection Data {2}</Value>
								</Information>
							</Informations2>
						</TestStep>
						<TestStep Name="SetParameterData">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>t_safePara</Destination>
										<Source>SafePara</Source>
									</SetVariable>
									<SetVariable>
										<Destination>t_watchdog</Destination>
										<Source>SafePara.Watchdog</Source>
									</SetVariable>
								</SetVariables>
							</Action>
							<Informations2>
								<Information>
									<Type>Output</Type>
									<Value Param0="t_watchdog" Param1="SafeParaSize" Param2="t_safePara">Watchdog: {0} ms, SafeParaSize: {1}, Safe Parameter {2}</Value>
								</Information>
							</Informations2>
						</TestStep>
						<TestStep Name="GoToConnection">
							<Action>
								<CallFunction>
									<Reference>RUN_DUT_TO_CONNECTION</Reference>
								</CallFunction>
							</Action>
						</TestStep>
						<TestStep Name="CallConnectionOk">
							<Action>
								<CallFunction>
									<Reference>CONN_OK</Reference>
								</CallFunction>
							</Action>
						</TestStep>
						<TestStep Name="ReceiveEvent">
							<Event>
								<ReceiveFrame>t_slaveFrame</ReceiveFrame>
							</Event>
							<Informations2>
								<Information>
									<Type>Verbose</Type>
									<Value Param0="t_slaveFrame.FrameData">Slave Frame: {0}</Value>
								</Information>
							</Informations2>
						</TestStep>
						<TestStep Name="CheckWatchdog">
							<Event>
								<WatchdogExpired>
									<SetVariables>
										<SetVariable>
											<Destination>t_wdExpired</Destination>
											<Source>true</Source>
										</SetVariable>
									</SetVariables>
								</WatchdogExpired>
							</Event>
							<Compares>
								<Compare>
									<Condition>
										<Value1>t_wdExpired</Value1>
										<Operator>Equal</Operator>
										<Value2>true</Value2>
									</Condition>
									<Statement>
										<SetVariables>
											<SetVariable>
												<Destination>t_wdExpired</Destination>
												<Source>false</Source>
											</SetVariable>
										</SetVariables>
									</Statement>
									<Statement>
										<Return>
											<Type>Error</Type>
											<Value Param0="ElapsedWD">Watchdog expired! {0} ms </Value>
											<Id>5</Id>
										</Return>
									</Statement>
								</Compare>
							</Compares>
							<Informations2>
								<Information>
									<Type>Verbose</Type>
									<Value Param0="t_wdExpired">WD {0}</Value>
								</Information>
							</Informations2>
						</TestStep>
						<TestStep Name="CheckReceivedCrc">
							<Informations1>
								<Information>
									<Type>Verbose</Type>
									<Value Param0="t_slaveFrame.FrameData" Param1="LastCrc" Param2="t_slaveSeqNo" Param3="t_oldSlaveCrc" Param4="true">IsCrcCorrect(Frame {0}, LastCrc 0x{1:X4}, SeqNo {2}, OldCrc 0x{3:X4}, New {4})</Value>
								</Information>
							</Informations1>
							<Action>
								<IsCrcCorrect ReturnValue="crcCorrect">
									<Frame>t_slaveFrame</Frame>
									<LastCrc>LastCrc</LastCrc>
									<SequenceNo>t_slaveSeqNo</SequenceNo>
									<OldCrc>t_oldSlaveCrc</OldCrc>
									<New>true</New>
								</IsCrcCorrect>
							</Action>
							<ReturnValue>
								<OnFailure>
									<Type>Error</Type>
									<Value Param0="t_slaveFrame.Crc0">Invalid Crc0 reveived ({0:x})</Value>
									<Id>4</Id>
								</OnFailure>
							</ReturnValue>
						</TestStep>
						<TestStep Name="CheckParameterConditions">
							<Compares>
								<Compare>
									<Condition>
										<Value1>t_slaveFrame.Command</Value1>
										<Operator>Equal</Operator>
										<Value2>Parameter</Value2>
									</Condition>
									<Condition>
										<Value1>BytesToBeSent</Value1>
										<Operator>Equal</Operator>
										<Value2>0</Value2>
									</Condition>
									<Condition>
										<Value1>crcCorrect</Value1>
										<Operator>Equal</Operator>
										<Value2>true</Value2>
									</Condition>
									<Statement>
										<Return>
											<Type>Error</Type>
											<Value>BytesToBeSent == 0</Value>
											<Id>1</Id>
										</Return>
									</Statement>
								</Compare>
								<Compare>
									<Condition>
										<Value1>t_slaveFrame.Command</Value1>
										<Operator>Equal</Operator>
										<Value2>Parameter</Value2>
									</Condition>
									<Condition>
										<Value1>crcCorrect</Value1>
										<Operator>Equal</Operator>
										<Value2>false</Value2>
									</Condition>
									<Statement>
										<Return>
											<Type>Error</Type>
											<Value>Invalid Crc received</Value>
											<Id>4</Id>
										</Return>
									</Statement>
								</Compare>
								<Compare>
									<Condition>
										<Value1>t_slaveFrame.Command</Value1>
										<Operator>Equal</Operator>
										<Value2>Parameter</Value2>
									</Condition>
									<Condition>
										<Value1>BytesToBeSent</Value1>
										<Operator>NotEqual</Operator>
										<Value2>0</Value2>
									</Condition>
									<Condition>
										<Value1>crcCorrect</Value1>
										<Operator>Equal</Operator>
										<Value2>true</Value2>
									</Condition>
									<Statement>
										<CallFunction>PARA_STAY1_DECREMENTED_CRC0</CallFunction>
									</Statement>
								</Compare>
								<Compare>
									<Condition>
										<Value1>t_slaveFrame.Command</Value1>
										<Operator>Equal</Operator>
										<Value2>Reset</Value2>
									</Condition>
									<Statement>
										<Return>
											<Type>Error</Type>
											<Value>Invalid CMD(Reset) received</Value>
											<Id>1</Id>
										</Return>
									</Statement>
								</Compare>
								<Compare>
									<Condition>
										<Value1>t_slaveFrame.Command</Value1>
										<Operator>Equal</Operator>
										<Value2>Session</Value2>
									</Condition>
									<Statement>
										<Return>
											<Type>Error</Type>
											<Value>Invalid CMD (Session) received</Value>
											<Id>1</Id>
										</Return>
									</Statement>
								</Compare>
								<Compare>
									<Condition>
										<Value1>t_slaveFrame.Command</Value1>
										<Operator>Equal</Operator>
										<Value2>Connection</Value2>
									</Condition>
									<Statement>
										<Return>
											<Type>Error</Type>
											<Value>Invalid CMD (Connection) received</Value>
										</Return>
									</Statement>
								</Compare>
								<Compare>
									<Condition>
										<Value1>t_slaveFrame.Command</Value1>
										<Operator>Equal</Operator>
										<Value2>ProcessData</Value2>
									</Condition>
									<Statement>
										<Return>
											<Type>Error</Type>
											<Value>Invalid CMD (ProcessData) received</Value>
											<Id>1</Id>
										</Return>
									</Statement>
								</Compare>
								<Compare>
									<Condition>
										<Value1>t_slaveFrame.Command</Value1>
										<Operator>Equal</Operator>
										<Value2>FailSafeData</Value2>
									</Condition>
									<Statement>
										<Return>
											<Type>Error</Type>
											<Value>Invalid CMD (FailSafeData) received</Value>
											<Id>1</Id>
										</Return>
									</Statement>
								</Compare>
								<Compare>
									<Condition>
										<Value1>t_slaveFrame.Command</Value1>
										<Operator>NotEqual</Operator>
										<Value2>Reset</Value2>
									</Condition>
									<Condition>
										<Value1>t_slaveFrame.Command</Value1>
										<Operator>NotEqual</Operator>
										<Value2>Session</Value2>
									</Condition>
									<Condition>
										<Value1>t_slaveFrame.Command</Value1>
										<Operator>NotEqual</Operator>
										<Value2>Connection</Value2>
									</Condition>
									<Condition>
										<Value1>t_slaveFrame.Command</Value1>
										<Operator>NotEqual</Operator>
										<Value2>Parameter</Value2>
									</Condition>
									<Condition>
										<Value1>t_slaveFrame.Command</Value1>
										<Operator>NotEqual</Operator>
										<Value2>ProcessData</Value2>
									</Condition>
									<Condition>
										<Value1>t_slaveFrame.Command</Value1>
										<Operator>NotEqual</Operator>
										<Value2>FailSafeData</Value2>
									</Condition>
									<Statement>
										<Return>
											<Type>Error</Type>
											<Value>Unknown CMD received</Value>
											<Id>2</Id>
										</Return>
									</Statement>
								</Compare>
							</Compares>
						</TestStep>
						<TestStep Name="CheckReceivedSlaveFrame">
							<Action>
								<CallFunction>
									<Reference>CHECK_RESET_FAIL</Reference>
								</CallFunction>
							</Action>
							<ReturnValue>
								<OnSuccess>
									<Type>Success</Type>
									<Value Param0="c_CommFaultReason">Expected CommFaultReason ({0}) received</Value>
								</OnSuccess>
							</ReturnValue>
						</TestStep>
					</TestSteps>
				</TestCase>
				<TestCase Name="#4.40 Para_Fail6" CaseId="40">
					<Comment>Hochlauf mehrere Zyklen, falsche Conn-Id (0) im MasterFrame beim Übergang, letzter Frame mit dem Feld Conn-ID wird verschickt</Comment>
					<CaseVariables>
						<Variable>
							<Name>c_CommFaultReason</Name>
							<Type>Byte</Type>
						</Variable>
						<Variable>
							<Name>c_connId</Name>
							<Type>UInt16</Type>
						</Variable>
						<Variable>
							<Name>c_tmpByte</Name>
							<Type>Byte</Type>
						</Variable>
					</CaseVariables>
					<TestSteps>
						<TestStep Name="CheckSafeDataLength">
							<Compares>
								<Compare>
									<Condition>
										<Value1>SafeDataLength</Value1>
										<Operator>Greater</Operator>
										<Value2>2</Value2>
									</Condition>
									<Statement>
										<Return>
											<Type>SkippedCase</Type>
											<Value>SafeDataLength > 2; ==> skip testcase</Value>
										</Return>
									</Statement>
								</Compare>
							</Compares>
						</TestStep>
						<TestStep Name="SetVariables">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>c_CommFaultReason</Destination>
										<Source>INVALID_CONNID</Source>
									</SetVariable>
									<SetVariable>
										<Destination>c_tmpByte</Destination>
										<Source>0</Source>
									</SetVariable>
									<SetVariable>
										<Destination>c_connId</Destination>
										<Source>0</Source>
									</SetVariable>
									<SetVariable>
										<Destination>t_masterSessionId</Destination>
										<Source>1</Source>
									</SetVariable>
								</SetVariables>
							</Action>
						</TestStep>
						<TestStep Name="SetConnectionData">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>t_connectionId</Destination>
										<Source>3</Source>
									</SetVariable>
									<SetVariable>
										<Destination DestinationIndex="0">t_connData</Destination>
										<Source>t_connectionId</Source>
									</SetVariable>
									<SetVariable>
										<Destination DestinationIndex="2">t_connData</Destination>
										<Source>ConnData.SlaveAddress</Source>
									</SetVariable>
								</SetVariables>
							</Action>
							<Informations2>
								<Information>
									<Type>Output</Type>
									<Value Param0="t_connectionId" Param1="ConnData.SlaveAddress" Param2="t_connData">ConnectionId: {0} (0x{0:x4}), Slave Address: {1} (0x{1:x4}), Connection Data {2}</Value>
								</Information>
							</Informations2>
						</TestStep>
						<TestStep Name="SetParameterData">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>t_safePara</Destination>
										<Source>SafePara</Source>
									</SetVariable>
									<SetVariable>
										<Destination>t_watchdog</Destination>
										<Source>SafePara.Watchdog</Source>
									</SetVariable>
								</SetVariables>
							</Action>
							<Informations2>
								<Information>
									<Type>Output</Type>
									<Value Param0="t_watchdog" Param1="SafeParaSize" Param2="t_safePara">Watchdog: {0} ms, SafeParaSize: {1}, Safe Parameter {2}</Value>
								</Information>
							</Informations2>
						</TestStep>
						<TestStep Name="GoToConnection">
							<Action>
								<CallFunction>
									<Reference>RUN_DUT_TO_CONNECTION</Reference>
								</CallFunction>
							</Action>
						</TestStep>
						<TestStep Name="CallConnectionOk">
							<Action>
								<CallFunction>
									<Reference>CONN_OK</Reference>
								</CallFunction>
							</Action>
						</TestStep>
						<TestStep Name="ReceiveEvent">
							<Event>
								<ReceiveFrame>t_slaveFrame</ReceiveFrame>
							</Event>
							<Informations2>
								<Information>
									<Type>Verbose</Type>
									<Value Param0="t_slaveFrame.FrameData">Slave Frame: {0}</Value>
								</Information>
							</Informations2>
						</TestStep>
						<TestStep Name="CheckWatchdog">
							<Event>
								<WatchdogExpired>
									<SetVariables>
										<SetVariable>
											<Destination>t_wdExpired</Destination>
											<Source>true</Source>
										</SetVariable>
									</SetVariables>
								</WatchdogExpired>
							</Event>
							<Compares>
								<Compare>
									<Condition>
										<Value1>t_wdExpired</Value1>
										<Operator>Equal</Operator>
										<Value2>true</Value2>
									</Condition>
									<Statement>
										<SetVariables>
											<SetVariable>
												<Destination>t_wdExpired</Destination>
												<Source>false</Source>
											</SetVariable>
										</SetVariables>
									</Statement>
									<Statement>
										<Return>
											<Type>Error</Type>
											<Value Param0="ElapsedWD">Watchdog expired! {0} ms </Value>
											<Id>5</Id>
										</Return>
									</Statement>
								</Compare>
							</Compares>
							<Informations2>
								<Information>
									<Type>Verbose</Type>
									<Value Param0="t_wdExpired">WD {0}</Value>
								</Information>
							</Informations2>
						</TestStep>
						<TestStep Name="CheckReceivedCrc">
							<Informations1>
								<Information>
									<Type>Verbose</Type>
									<Value Param0="t_slaveFrame.FrameData" Param1="LastCrc" Param2="t_slaveSeqNo" Param3="t_oldSlaveCrc" Param4="true">IsCrcCorrect(Frame {0}, LastCrc 0x{1:X4}, SeqNo {2}, OldCrc 0x{3:X4}, New {4})</Value>
								</Information>
							</Informations1>
							<Action>
								<IsCrcCorrect ReturnValue="crcCorrect">
									<Frame>t_slaveFrame</Frame>
									<LastCrc>LastCrc</LastCrc>
									<SequenceNo>t_slaveSeqNo</SequenceNo>
									<OldCrc>t_oldSlaveCrc</OldCrc>
									<New>true</New>
								</IsCrcCorrect>
							</Action>
							<ReturnValue>
								<OnFailure>
									<Type>Error</Type>
									<Value Param0="t_slaveFrame.Crc0">Invalid Crc0 reveived ({0:x})</Value>
									<Id>4</Id>
								</OnFailure>
							</ReturnValue>
						</TestStep>
						<TestStep Name="CheckSessionConditions">
							<Compares>
								<Compare>
									<Condition>
										<Value1>t_slaveFrame.Command</Value1>
										<Operator>Equal</Operator>
										<Value2>Parameter</Value2>
									</Condition>
									<Condition>
										<Value1>BytesToBeSent</Value1>
										<Operator>Equal</Operator>
										<Value2>0</Value2>
									</Condition>
									<Condition>
										<Value1>crcCorrect</Value1>
										<Operator>Equal</Operator>
										<Value2>true</Value2>
									</Condition>
									<Statement>
										<Return>
											<Type>Error</Type>
											<Value>BytesToBeSent == 0</Value>
											<Id>1</Id>
										</Return>
									</Statement>
								</Compare>
								<Compare>
									<Condition>
										<Value1>t_slaveFrame.Command</Value1>
										<Operator>Equal</Operator>
										<Value2>Parameter</Value2>
									</Condition>
									<Condition>
										<Value1>crcCorrect</Value1>
										<Operator>Equal</Operator>
										<Value2>false</Value2>
									</Condition>
									<Statement>
										<Return>
											<Type>Error</Type>
											<Value>Invalid Crc received</Value>
											<Id>4</Id>
										</Return>
									</Statement>
								</Compare>
								<Compare>
									<Condition>
										<Value1>t_slaveFrame.Command</Value1>
										<Operator>Equal</Operator>
										<Value2>Parameter</Value2>
									</Condition>
									<Condition>
										<Value1>BytesToBeSent</Value1>
										<Operator>LowerOrEqual</Operator>
										<Value2>SafeDataLength</Value2>
									</Condition>
									<Condition>
										<Value1>crcCorrect</Value1>
										<Operator>Equal</Operator>
										<Value2>true</Value2>
									</Condition>
									<Statement>
										<CallFunction>PARA_STAY1_INVALID_CONNID</CallFunction>
									</Statement>
									<Statement>
										<GotoStep>CheckReceivedSlaveFrame</GotoStep>
									</Statement>
								</Compare>
								<Compare>
									<Condition>
										<Value1>t_slaveFrame.Command</Value1>
										<Operator>Equal</Operator>
										<Value2>Parameter</Value2>
									</Condition>
									<Condition>
										<Value1>BytesToBeSent</Value1>
										<Operator>NotEqual</Operator>
										<Value2>0</Value2>
									</Condition>
									<Condition>
										<Value1>crcCorrect</Value1>
										<Operator>Equal</Operator>
										<Value2>true</Value2>
									</Condition>
									<Statement>
										<CallFunction>PARA_STAY1</CallFunction>
									</Statement>
									<Statement>
										<GotoStep>ReceiveEvent</GotoStep>
									</Statement>
								</Compare>
								<Compare>
									<Condition>
										<Value1>t_slaveFrame.Command</Value1>
										<Operator>Equal</Operator>
										<Value2>Reset</Value2>
									</Condition>
									<Statement>
										<Return>
											<Type>Error</Type>
											<Value>Invalid CMD(Reset) received</Value>
											<Id>1</Id>
										</Return>
									</Statement>
								</Compare>
								<Compare>
									<Condition>
										<Value1>t_slaveFrame.Command</Value1>
										<Operator>Equal</Operator>
										<Value2>Session</Value2>
									</Condition>
									<Statement>
										<Return>
											<Type>Error</Type>
											<Value>Invalid CMD (Session) received</Value>
											<Id>1</Id>
										</Return>
									</Statement>
								</Compare>
								<Compare>
									<Condition>
										<Value1>t_slaveFrame.Command</Value1>
										<Operator>Equal</Operator>
										<Value2>Connection</Value2>
									</Condition>
									<Statement>
										<Return>
											<Type>Error</Type>
											<Value>Invalid CMD (Parameter) received</Value>
											<Id>1</Id>
										</Return>
									</Statement>
								</Compare>
								<Compare>
									<Condition>
										<Value1>t_slaveFrame.Command</Value1>
										<Operator>Equal</Operator>
										<Value2>ProcessData</Value2>
									</Condition>
									<Statement>
										<Return>
											<Type>Error</Type>
											<Value>Invalid CMD (ProcessData) received</Value>
											<Id>1</Id>
										</Return>
									</Statement>
								</Compare>
								<Compare>
									<Condition>
										<Value1>t_slaveFrame.Command</Value1>
										<Operator>Equal</Operator>
										<Value2>FailSafeData</Value2>
									</Condition>
									<Statement>
										<Return>
											<Type>Error</Type>
											<Value>Invalid CMD (FailSafeData) received</Value>
											<Id>1</Id>
										</Return>
									</Statement>
								</Compare>
								<Compare>
									<Condition>
										<Value1>t_slaveFrame.Command</Value1>
										<Operator>NotEqual</Operator>
										<Value2>Reset</Value2>
									</Condition>
									<Condition>
										<Value1>t_slaveFrame.Command</Value1>
										<Operator>NotEqual</Operator>
										<Value2>Session</Value2>
									</Condition>
									<Condition>
										<Value1>t_slaveFrame.Command</Value1>
										<Operator>NotEqual</Operator>
										<Value2>Connection</Value2>
									</Condition>
									<Condition>
										<Value1>t_slaveFrame.Command</Value1>
										<Operator>NotEqual</Operator>
										<Value2>Parameter</Value2>
									</Condition>
									<Condition>
										<Value1>t_slaveFrame.Command</Value1>
										<Operator>NotEqual</Operator>
										<Value2>ProcessData</Value2>
									</Condition>
									<Condition>
										<Value1>t_slaveFrame.Command</Value1>
										<Operator>NotEqual</Operator>
										<Value2>FailSafeData</Value2>
									</Condition>
									<Statement>
										<Return>
											<Type>Error</Type>
											<Value>Unknown CMD received</Value>
											<Id>2</Id>
										</Return>
									</Statement>
								</Compare>
							</Compares>
						</TestStep>
						<TestStep Name="CheckReceivedSlaveFrame">
							<Action>
								<CallFunction>
									<Reference>CHECK_RESET_FAIL</Reference>
								</CallFunction>
							</Action>
							<ReturnValue>
								<OnSuccess>
									<Type>Success</Type>
									<Value Param0="c_CommFaultReason">Expected CommFaultReason ({0}) received</Value>
								</OnSuccess>
							</ReturnValue>
						</TestStep>
					</TestSteps>
				</TestCase>
				<TestCase Name="#4.41 Para_Fail6" CaseId="41">
					<Comment>Hochlauf mehrere Zyklen, falsche Conn-Id (2) im MasterFrame beim Übergang, letzter Frame mit dem Feld Conn-ID wird verschickt</Comment>
					<CaseVariables>
						<Variable>
							<Name>c_CommFaultReason</Name>
							<Type>Byte</Type>
						</Variable>
						<Variable>
							<Name>c_connId</Name>
							<Type>UInt16</Type>
						</Variable>
						<Variable>
							<Name>c_tmpByte</Name>
							<Type>Byte</Type>
						</Variable>
					</CaseVariables>
					<TestSteps>
						<TestStep Name="CheckSafeDataLength">
							<Compares>
								<Compare>
									<Condition>
										<Value1>SafeDataLength</Value1>
										<Operator>Greater</Operator>
										<Value2>2</Value2>
									</Condition>
									<Statement>
										<Return>
											<Type>SkippedCase</Type>
											<Value>SafeDataLength > 2; ==> skip testcase</Value>
										</Return>
									</Statement>
								</Compare>
							</Compares>
						</TestStep>
						<TestStep Name="SetVariables">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>c_CommFaultReason</Destination>
										<Source>INVALID_CONNID</Source>
									</SetVariable>
									<SetVariable>
										<Destination>c_tmpByte</Destination>
										<Source>0</Source>
									</SetVariable>
									<SetVariable>
										<Destination>c_connId</Destination>
										<Source>2</Source>
									</SetVariable>
									<SetVariable>
										<Destination>t_masterSessionId</Destination>
										<Source>1</Source>
									</SetVariable>
								</SetVariables>
							</Action>
						</TestStep>
						<TestStep Name="SetConnectionData">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>t_connectionId</Destination>
										<Source>3</Source>
									</SetVariable>
									<SetVariable>
										<Destination DestinationIndex="0">t_connData</Destination>
										<Source>t_connectionId</Source>
									</SetVariable>
									<SetVariable>
										<Destination DestinationIndex="2">t_connData</Destination>
										<Source>ConnData.SlaveAddress</Source>
									</SetVariable>
								</SetVariables>
							</Action>
							<Informations2>
								<Information>
									<Type>Output</Type>
									<Value Param0="t_connectionId" Param1="ConnData.SlaveAddress" Param2="t_connData">ConnectionId: {0} (0x{0:x4}), Slave Address: {1} (0x{1:x4}), Connection Data {2}</Value>
								</Information>
							</Informations2>
						</TestStep>
						<TestStep Name="SetParameterData">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>t_safePara</Destination>
										<Source>SafePara</Source>
									</SetVariable>
									<SetVariable>
										<Destination>t_watchdog</Destination>
										<Source>SafePara.Watchdog</Source>
									</SetVariable>
								</SetVariables>
							</Action>
							<Informations2>
								<Information>
									<Type>Output</Type>
									<Value Param0="t_watchdog" Param1="SafeParaSize" Param2="t_safePara">Watchdog: {0} ms, SafeParaSize: {1}, Safe Parameter {2}</Value>
								</Information>
							</Informations2>
						</TestStep>
						<TestStep Name="GoToConnection">
							<Action>
								<CallFunction>
									<Reference>RUN_DUT_TO_CONNECTION</Reference>
								</CallFunction>
							</Action>
						</TestStep>
						<TestStep Name="CallConnectionOk">
							<Action>
								<CallFunction>
									<Reference>CONN_OK</Reference>
								</CallFunction>
							</Action>
						</TestStep>
						<TestStep Name="ReceiveEvent">
							<Event>
								<ReceiveFrame>t_slaveFrame</ReceiveFrame>
							</Event>
							<Informations2>
								<Information>
									<Type>Verbose</Type>
									<Value Param0="t_slaveFrame.FrameData">Slave Frame: {0}</Value>
								</Information>
							</Informations2>
						</TestStep>
						<TestStep Name="CheckWatchdog">
							<Event>
								<WatchdogExpired>
									<SetVariables>
										<SetVariable>
											<Destination>t_wdExpired</Destination>
											<Source>true</Source>
										</SetVariable>
									</SetVariables>
								</WatchdogExpired>
							</Event>
							<Compares>
								<Compare>
									<Condition>
										<Value1>t_wdExpired</Value1>
										<Operator>Equal</Operator>
										<Value2>true</Value2>
									</Condition>
									<Statement>
										<SetVariables>
											<SetVariable>
												<Destination>t_wdExpired</Destination>
												<Source>false</Source>
											</SetVariable>
										</SetVariables>
									</Statement>
									<Statement>
										<Return>
											<Type>Error</Type>
											<Value Param0="ElapsedWD">Watchdog expired! {0} ms </Value>
											<Id>5</Id>
										</Return>
									</Statement>
								</Compare>
							</Compares>
							<Informations2>
								<Information>
									<Type>Verbose</Type>
									<Value Param0="t_wdExpired">WD {0}</Value>
								</Information>
							</Informations2>
						</TestStep>
						<TestStep Name="CheckReceivedCrc">
							<Informations1>
								<Information>
									<Type>Verbose</Type>
									<Value Param0="t_slaveFrame.FrameData" Param1="LastCrc" Param2="t_slaveSeqNo" Param3="t_oldSlaveCrc" Param4="true">IsCrcCorrect(Frame {0}, LastCrc 0x{1:X4}, SeqNo {2}, OldCrc 0x{3:X4}, New {4})</Value>
								</Information>
							</Informations1>
							<Action>
								<IsCrcCorrect ReturnValue="crcCorrect">
									<Frame>t_slaveFrame</Frame>
									<LastCrc>LastCrc</LastCrc>
									<SequenceNo>t_slaveSeqNo</SequenceNo>
									<OldCrc>t_oldSlaveCrc</OldCrc>
									<New>true</New>
								</IsCrcCorrect>
							</Action>
							<ReturnValue>
								<OnFailure>
									<Type>Error</Type>
									<Value Param0="t_slaveFrame.Crc0">Invalid Crc0 reveived ({0:x})</Value>
									<Id>4</Id>
								</OnFailure>
							</ReturnValue>
						</TestStep>
						<TestStep Name="CheckSessionConditions">
							<Compares>
								<Compare>
									<Condition>
										<Value1>t_slaveFrame.Command</Value1>
										<Operator>Equal</Operator>
										<Value2>Parameter</Value2>
									</Condition>
									<Condition>
										<Value1>BytesToBeSent</Value1>
										<Operator>Equal</Operator>
										<Value2>0</Value2>
									</Condition>
									<Condition>
										<Value1>crcCorrect</Value1>
										<Operator>Equal</Operator>
										<Value2>true</Value2>
									</Condition>
									<Statement>
										<Return>
											<Type>Error</Type>
											<Value>BytesToBeSent == 0</Value>
											<Id>1</Id>
										</Return>
									</Statement>
								</Compare>
								<Compare>
									<Condition>
										<Value1>t_slaveFrame.Command</Value1>
										<Operator>Equal</Operator>
										<Value2>Parameter</Value2>
									</Condition>
									<Condition>
										<Value1>crcCorrect</Value1>
										<Operator>Equal</Operator>
										<Value2>false</Value2>
									</Condition>
									<Statement>
										<Return>
											<Type>Error</Type>
											<Value>Invalid Crc received</Value>
											<Id>4</Id>
										</Return>
									</Statement>
								</Compare>
								<Compare>
									<Condition>
										<Value1>t_slaveFrame.Command</Value1>
										<Operator>Equal</Operator>
										<Value2>Parameter</Value2>
									</Condition>
									<Condition>
										<Value1>BytesToBeSent</Value1>
										<Operator>LowerOrEqual</Operator>
										<Value2>SafeDataLength</Value2>
									</Condition>
									<Condition>
										<Value1>crcCorrect</Value1>
										<Operator>Equal</Operator>
										<Value2>true</Value2>
									</Condition>
									<Statement>
										<CallFunction>PARA_STAY1_INVALID_CONNID</CallFunction>
									</Statement>
									<Statement>
										<GotoStep>CheckReceivedSlaveFrame</GotoStep>
									</Statement>
								</Compare>
								<Compare>
									<Condition>
										<Value1>t_slaveFrame.Command</Value1>
										<Operator>Equal</Operator>
										<Value2>Parameter</Value2>
									</Condition>
									<Condition>
										<Value1>BytesToBeSent</Value1>
										<Operator>NotEqual</Operator>
										<Value2>0</Value2>
									</Condition>
									<Condition>
										<Value1>crcCorrect</Value1>
										<Operator>Equal</Operator>
										<Value2>true</Value2>
									</Condition>
									<Statement>
										<CallFunction>PARA_STAY1</CallFunction>
									</Statement>
									<Statement>
										<GotoStep>ReceiveEvent</GotoStep>
									</Statement>
								</Compare>
								<Compare>
									<Condition>
										<Value1>t_slaveFrame.Command</Value1>
										<Operator>Equal</Operator>
										<Value2>Reset</Value2>
									</Condition>
									<Statement>
										<Return>
											<Type>Error</Type>
											<Value>Invalid CMD(Reset) received</Value>
											<Id>1</Id>
										</Return>
									</Statement>
								</Compare>
								<Compare>
									<Condition>
										<Value1>t_slaveFrame.Command</Value1>
										<Operator>Equal</Operator>
										<Value2>Session</Value2>
									</Condition>
									<Statement>
										<Return>
											<Type>Error</Type>
											<Value>Invalid CMD (Session) received</Value>
											<Id>1</Id>
										</Return>
									</Statement>
								</Compare>
								<Compare>
									<Condition>
										<Value1>t_slaveFrame.Command</Value1>
										<Operator>Equal</Operator>
										<Value2>Connection</Value2>
									</Condition>
									<Statement>
										<Return>
											<Type>Error</Type>
											<Value>Invalid CMD (Parameter) received</Value>
											<Id>1</Id>
										</Return>
									</Statement>
								</Compare>
								<Compare>
									<Condition>
										<Value1>t_slaveFrame.Command</Value1>
										<Operator>Equal</Operator>
										<Value2>ProcessData</Value2>
									</Condition>
									<Statement>
										<Return>
											<Type>Error</Type>
											<Value>Invalid CMD (ProcessData) received</Value>
											<Id>1</Id>
										</Return>
									</Statement>
								</Compare>
								<Compare>
									<Condition>
										<Value1>t_slaveFrame.Command</Value1>
										<Operator>Equal</Operator>
										<Value2>FailSafeData</Value2>
									</Condition>
									<Statement>
										<Return>
											<Type>Error</Type>
											<Value>Invalid CMD (FailSafeData) received</Value>
											<Id>1</Id>
										</Return>
									</Statement>
								</Compare>
								<Compare>
									<Condition>
										<Value1>t_slaveFrame.Command</Value1>
										<Operator>NotEqual</Operator>
										<Value2>Reset</Value2>
									</Condition>
									<Condition>
										<Value1>t_slaveFrame.Command</Value1>
										<Operator>NotEqual</Operator>
										<Value2>Session</Value2>
									</Condition>
									<Condition>
										<Value1>t_slaveFrame.Command</Value1>
										<Operator>NotEqual</Operator>
										<Value2>Connection</Value2>
									</Condition>
									<Condition>
										<Value1>t_slaveFrame.Command</Value1>
										<Operator>NotEqual</Operator>
										<Value2>Parameter</Value2>
									</Condition>
									<Condition>
										<Value1>t_slaveFrame.Command</Value1>
										<Operator>NotEqual</Operator>
										<Value2>ProcessData</Value2>
									</Condition>
									<Condition>
										<Value1>t_slaveFrame.Command</Value1>
										<Operator>NotEqual</Operator>
										<Value2>FailSafeData</Value2>
									</Condition>
									<Statement>
										<Return>
											<Type>Error</Type>
											<Value>Unknown CMD received</Value>
											<Id>2</Id>
										</Return>
									</Statement>
								</Compare>
							</Compares>
						</TestStep>
						<TestStep Name="CheckReceivedSlaveFrame">
							<Action>
								<CallFunction>
									<Reference>CHECK_RESET_FAIL</Reference>
								</CallFunction>
							</Action>
							<ReturnValue>
								<OnSuccess>
									<Type>Success</Type>
									<Value Param0="c_CommFaultReason">Expected CommFaultReason ({0}) received</Value>
								</OnSuccess>
							</ReturnValue>
						</TestStep>
					</TestSteps>
				</TestCase>
				<TestCase Name="#4.42 Para_Fail6" CaseId="42">
					<Comment>Hochlauf mehrere Zyklen, falsche Conn-Id (4) im MasterFrame beim Übergang, letzter Frame mit dem Feld Conn-ID wird verschickt</Comment>
					<CaseVariables>
						<Variable>
							<Name>c_CommFaultReason</Name>
							<Type>Byte</Type>
						</Variable>
						<Variable>
							<Name>c_connId</Name>
							<Type>UInt16</Type>
						</Variable>
						<Variable>
							<Name>c_tmpByte</Name>
							<Type>Byte</Type>
						</Variable>
					</CaseVariables>
					<TestSteps>
						<TestStep Name="CheckSafeDataLength">
							<Compares>
								<Compare>
									<Condition>
										<Value1>SafeDataLength</Value1>
										<Operator>Greater</Operator>
										<Value2>2</Value2>
									</Condition>
									<Statement>
										<Return>
											<Type>SkippedCase</Type>
											<Value>SafeDataLength > 2; ==> skip testcase</Value>
										</Return>
									</Statement>
								</Compare>
							</Compares>
						</TestStep>
						<TestStep Name="SetVariables">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>c_CommFaultReason</Destination>
										<Source>INVALID_CONNID</Source>
									</SetVariable>
									<SetVariable>
										<Destination>c_tmpByte</Destination>
										<Source>0</Source>
									</SetVariable>
									<SetVariable>
										<Destination>c_connId</Destination>
										<Source>4</Source>
									</SetVariable>
									<SetVariable>
										<Destination>t_masterSessionId</Destination>
										<Source>1</Source>
									</SetVariable>
								</SetVariables>
							</Action>
						</TestStep>
						<TestStep Name="SetConnectionData">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>t_connectionId</Destination>
										<Source>3</Source>
									</SetVariable>
									<SetVariable>
										<Destination DestinationIndex="0">t_connData</Destination>
										<Source>t_connectionId</Source>
									</SetVariable>
									<SetVariable>
										<Destination DestinationIndex="2">t_connData</Destination>
										<Source>ConnData.SlaveAddress</Source>
									</SetVariable>
								</SetVariables>
							</Action>
							<Informations2>
								<Information>
									<Type>Output</Type>
									<Value Param0="t_connectionId" Param1="ConnData.SlaveAddress" Param2="t_connData">ConnectionId: {0} (0x{0:x4}), Slave Address: {1} (0x{1:x4}), Connection Data {2}</Value>
								</Information>
							</Informations2>
						</TestStep>
						<TestStep Name="SetParameterData">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>t_safePara</Destination>
										<Source>SafePara</Source>
									</SetVariable>
									<SetVariable>
										<Destination>t_watchdog</Destination>
										<Source>SafePara.Watchdog</Source>
									</SetVariable>
								</SetVariables>
							</Action>
							<Informations2>
								<Information>
									<Type>Output</Type>
									<Value Param0="t_watchdog" Param1="SafeParaSize" Param2="t_safePara">Watchdog: {0} ms, SafeParaSize: {1}, Safe Parameter {2}</Value>
								</Information>
							</Informations2>
						</TestStep>
						<TestStep Name="GoToConnection">
							<Action>
								<CallFunction>
									<Reference>RUN_DUT_TO_CONNECTION</Reference>
								</CallFunction>
							</Action>
						</TestStep>
						<TestStep Name="CallConnectionOk">
							<Action>
								<CallFunction>
									<Reference>CONN_OK</Reference>
								</CallFunction>
							</Action>
						</TestStep>
						<TestStep Name="ReceiveEvent">
							<Event>
								<ReceiveFrame>t_slaveFrame</ReceiveFrame>
							</Event>
							<Informations2>
								<Information>
									<Type>Verbose</Type>
									<Value Param0="t_slaveFrame.FrameData">Slave Frame: {0}</Value>
								</Information>
							</Informations2>
						</TestStep>
						<TestStep Name="CheckWatchdog">
							<Event>
								<WatchdogExpired>
									<SetVariables>
										<SetVariable>
											<Destination>t_wdExpired</Destination>
											<Source>true</Source>
										</SetVariable>
									</SetVariables>
								</WatchdogExpired>
							</Event>
							<Compares>
								<Compare>
									<Condition>
										<Value1>t_wdExpired</Value1>
										<Operator>Equal</Operator>
										<Value2>true</Value2>
									</Condition>
									<Statement>
										<SetVariables>
											<SetVariable>
												<Destination>t_wdExpired</Destination>
												<Source>false</Source>
											</SetVariable>
										</SetVariables>
									</Statement>
									<Statement>
										<Return>
											<Type>Error</Type>
											<Value Param0="ElapsedWD">Watchdog expired! {0} ms </Value>
											<Id>5</Id>
										</Return>
									</Statement>
								</Compare>
							</Compares>
							<Informations2>
								<Information>
									<Type>Verbose</Type>
									<Value Param0="t_wdExpired">WD {0}</Value>
								</Information>
							</Informations2>
						</TestStep>
						<TestStep Name="CheckReceivedCrc">
							<Informations1>
								<Information>
									<Type>Verbose</Type>
									<Value Param0="t_slaveFrame.FrameData" Param1="LastCrc" Param2="t_slaveSeqNo" Param3="t_oldSlaveCrc" Param4="true">IsCrcCorrect(Frame {0}, LastCrc 0x{1:X4}, SeqNo {2}, OldCrc 0x{3:X4}, New {4})</Value>
								</Information>
							</Informations1>
							<Action>
								<IsCrcCorrect ReturnValue="crcCorrect">
									<Frame>t_slaveFrame</Frame>
									<LastCrc>LastCrc</LastCrc>
									<SequenceNo>t_slaveSeqNo</SequenceNo>
									<OldCrc>t_oldSlaveCrc</OldCrc>
									<New>true</New>
								</IsCrcCorrect>
							</Action>
							<ReturnValue>
								<OnFailure>
									<Type>Error</Type>
									<Value Param0="t_slaveFrame.Crc0">Invalid Crc0 reveived ({0:x})</Value>
									<Id>4</Id>
								</OnFailure>
							</ReturnValue>
						</TestStep>
						<TestStep Name="CheckSessionConditions">
							<Compares>
								<Compare>
									<Condition>
										<Value1>t_slaveFrame.Command</Value1>
										<Operator>Equal</Operator>
										<Value2>Parameter</Value2>
									</Condition>
									<Condition>
										<Value1>BytesToBeSent</Value1>
										<Operator>Equal</Operator>
										<Value2>0</Value2>
									</Condition>
									<Condition>
										<Value1>crcCorrect</Value1>
										<Operator>Equal</Operator>
										<Value2>true</Value2>
									</Condition>
									<Statement>
										<Return>
											<Type>Error</Type>
											<Value>BytesToBeSent == 0</Value>
											<Id>1</Id>
										</Return>
									</Statement>
								</Compare>
								<Compare>
									<Condition>
										<Value1>t_slaveFrame.Command</Value1>
										<Operator>Equal</Operator>
										<Value2>Parameter</Value2>
									</Condition>
									<Condition>
										<Value1>crcCorrect</Value1>
										<Operator>Equal</Operator>
										<Value2>false</Value2>
									</Condition>
									<Statement>
										<Return>
											<Type>Error</Type>
											<Value>Invalid Crc received</Value>
											<Id>4</Id>
										</Return>
									</Statement>
								</Compare>
								<Compare>
									<Condition>
										<Value1>t_slaveFrame.Command</Value1>
										<Operator>Equal</Operator>
										<Value2>Parameter</Value2>
									</Condition>
									<Condition>
										<Value1>BytesToBeSent</Value1>
										<Operator>LowerOrEqual</Operator>
										<Value2>SafeDataLength</Value2>
									</Condition>
									<Condition>
										<Value1>crcCorrect</Value1>
										<Operator>Equal</Operator>
										<Value2>true</Value2>
									</Condition>
									<Statement>
										<CallFunction>PARA_STAY1_INVALID_CONNID</CallFunction>
									</Statement>
									<Statement>
										<GotoStep>CheckReceivedSlaveFrame</GotoStep>
									</Statement>
								</Compare>
								<Compare>
									<Condition>
										<Value1>t_slaveFrame.Command</Value1>
										<Operator>Equal</Operator>
										<Value2>Parameter</Value2>
									</Condition>
									<Condition>
										<Value1>BytesToBeSent</Value1>
										<Operator>NotEqual</Operator>
										<Value2>0</Value2>
									</Condition>
									<Condition>
										<Value1>crcCorrect</Value1>
										<Operator>Equal</Operator>
										<Value2>true</Value2>
									</Condition>
									<Statement>
										<CallFunction>PARA_STAY1</CallFunction>
									</Statement>
									<Statement>
										<GotoStep>ReceiveEvent</GotoStep>
									</Statement>
								</Compare>
								<Compare>
									<Condition>
										<Value1>t_slaveFrame.Command</Value1>
										<Operator>Equal</Operator>
										<Value2>Reset</Value2>
									</Condition>
									<Statement>
										<Return>
											<Type>Error</Type>
											<Value>Invalid CMD(Reset) received</Value>
											<Id>1</Id>
										</Return>
									</Statement>
								</Compare>
								<Compare>
									<Condition>
										<Value1>t_slaveFrame.Command</Value1>
										<Operator>Equal</Operator>
										<Value2>Session</Value2>
									</Condition>
									<Statement>
										<Return>
											<Type>Error</Type>
											<Value>Invalid CMD (Session) received</Value>
											<Id>1</Id>
										</Return>
									</Statement>
								</Compare>
								<Compare>
									<Condition>
										<Value1>t_slaveFrame.Command</Value1>
										<Operator>Equal</Operator>
										<Value2>Connection</Value2>
									</Condition>
									<Statement>
										<Return>
											<Type>Error</Type>
											<Value>Invalid CMD (Parameter) received</Value>
											<Id>1</Id>
										</Return>
									</Statement>
								</Compare>
								<Compare>
									<Condition>
										<Value1>t_slaveFrame.Command</Value1>
										<Operator>Equal</Operator>
										<Value2>ProcessData</Value2>
									</Condition>
									<Statement>
										<Return>
											<Type>Error</Type>
											<Value>Invalid CMD (ProcessData) received</Value>
											<Id>1</Id>
										</Return>
									</Statement>
								</Compare>
								<Compare>
									<Condition>
										<Value1>t_slaveFrame.Command</Value1>
										<Operator>Equal</Operator>
										<Value2>FailSafeData</Value2>
									</Condition>
									<Statement>
										<Return>
											<Type>Error</Type>
											<Value>Invalid CMD (FailSafeData) received</Value>
											<Id>1</Id>
										</Return>
									</Statement>
								</Compare>
								<Compare>
									<Condition>
										<Value1>t_slaveFrame.Command</Value1>
										<Operator>NotEqual</Operator>
										<Value2>Reset</Value2>
									</Condition>
									<Condition>
										<Value1>t_slaveFrame.Command</Value1>
										<Operator>NotEqual</Operator>
										<Value2>Session</Value2>
									</Condition>
									<Condition>
										<Value1>t_slaveFrame.Command</Value1>
										<Operator>NotEqual</Operator>
										<Value2>Connection</Value2>
									</Condition>
									<Condition>
										<Value1>t_slaveFrame.Command</Value1>
										<Operator>NotEqual</Operator>
										<Value2>Parameter</Value2>
									</Condition>
									<Condition>
										<Value1>t_slaveFrame.Command</Value1>
										<Operator>NotEqual</Operator>
										<Value2>ProcessData</Value2>
									</Condition>
									<Condition>
										<Value1>t_slaveFrame.Command</Value1>
										<Operator>NotEqual</Operator>
										<Value2>FailSafeData</Value2>
									</Condition>
									<Statement>
										<Return>
											<Type>Error</Type>
											<Value>Unknown CMD received</Value>
											<Id>2</Id>
										</Return>
									</Statement>
								</Compare>
							</Compares>
						</TestStep>
						<TestStep Name="CheckReceivedSlaveFrame">
							<Action>
								<CallFunction>
									<Reference>CHECK_RESET_FAIL</Reference>
								</CallFunction>
							</Action>
							<ReturnValue>
								<OnSuccess>
									<Type>Success</Type>
									<Value Param0="c_CommFaultReason">Expected CommFaultReason ({0}) received</Value>
								</OnSuccess>
							</ReturnValue>
						</TestStep>
					</TestSteps>
				</TestCase>
				<TestCase Name="#4.43 Para_Fail6" CaseId="43">
					<Comment>Hochlauf mehrere Zyklen, falsche Conn-Id (0xffff) im MasterFrame beim Übergang, letzter Frame mit dem Feld Conn-ID wird verschickt</Comment>
					<CaseVariables>
						<Variable>
							<Name>c_CommFaultReason</Name>
							<Type>Byte</Type>
						</Variable>
						<Variable>
							<Name>c_connId</Name>
							<Type>UInt16</Type>
						</Variable>
						<Variable>
							<Name>c_tmpByte</Name>
							<Type>Byte</Type>
						</Variable>
					</CaseVariables>
					<TestSteps>
						<TestStep Name="CheckSafeDataLength">
							<Compares>
								<Compare>
									<Condition>
										<Value1>SafeDataLength</Value1>
										<Operator>Greater</Operator>
										<Value2>2</Value2>
									</Condition>
									<Statement>
										<Return>
											<Type>SkippedCase</Type>
											<Value>SafeDataLength > 2; ==> skip testcase</Value>
										</Return>
									</Statement>
								</Compare>
							</Compares>
						</TestStep>
						<TestStep Name="SetVariables">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>c_CommFaultReason</Destination>
										<Source>INVALID_CONNID</Source>
									</SetVariable>
									<SetVariable>
										<Destination>c_tmpByte</Destination>
										<Source>0</Source>
									</SetVariable>
									<SetVariable>
										<Destination>c_connId</Destination>
										<Source>65535</Source>
									</SetVariable>
									<SetVariable>
										<Destination>t_masterSessionId</Destination>
										<Source>1</Source>
									</SetVariable>
								</SetVariables>
							</Action>
						</TestStep>
						<TestStep Name="SetConnectionData">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>t_connectionId</Destination>
										<Source>3</Source>
									</SetVariable>
									<SetVariable>
										<Destination DestinationIndex="0">t_connData</Destination>
										<Source>t_connectionId</Source>
									</SetVariable>
									<SetVariable>
										<Destination DestinationIndex="2">t_connData</Destination>
										<Source>ConnData.SlaveAddress</Source>
									</SetVariable>
								</SetVariables>
							</Action>
							<Informations2>
								<Information>
									<Type>Output</Type>
									<Value Param0="t_connectionId" Param1="ConnData.SlaveAddress" Param2="t_connData">ConnectionId: {0} (0x{0:x4}), Slave Address: {1} (0x{1:x4}), Connection Data {2}</Value>
								</Information>
							</Informations2>
						</TestStep>
						<TestStep Name="SetParameterData">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>t_safePara</Destination>
										<Source>SafePara</Source>
									</SetVariable>
									<SetVariable>
										<Destination>t_watchdog</Destination>
										<Source>SafePara.Watchdog</Source>
									</SetVariable>
								</SetVariables>
							</Action>
							<Informations2>
								<Information>
									<Type>Output</Type>
									<Value Param0="t_watchdog" Param1="SafeParaSize" Param2="t_safePara">Watchdog: {0} ms, SafeParaSize: {1}, Safe Parameter {2}</Value>
								</Information>
							</Informations2>
						</TestStep>
						<TestStep Name="GoToConnection">
							<Action>
								<CallFunction>
									<Reference>RUN_DUT_TO_CONNECTION</Reference>
								</CallFunction>
							</Action>
						</TestStep>
						<TestStep Name="CallConnectionOk">
							<Action>
								<CallFunction>
									<Reference>CONN_OK</Reference>
								</CallFunction>
							</Action>
						</TestStep>
						<TestStep Name="ReceiveEvent">
							<Event>
								<ReceiveFrame>t_slaveFrame</ReceiveFrame>
							</Event>
							<Informations2>
								<Information>
									<Type>Verbose</Type>
									<Value Param0="t_slaveFrame.FrameData">Slave Frame: {0}</Value>
								</Information>
							</Informations2>
						</TestStep>
						<TestStep Name="CheckWatchdog">
							<Event>
								<WatchdogExpired>
									<SetVariables>
										<SetVariable>
											<Destination>t_wdExpired</Destination>
											<Source>true</Source>
										</SetVariable>
									</SetVariables>
								</WatchdogExpired>
							</Event>
							<Compares>
								<Compare>
									<Condition>
										<Value1>t_wdExpired</Value1>
										<Operator>Equal</Operator>
										<Value2>true</Value2>
									</Condition>
									<Statement>
										<SetVariables>
											<SetVariable>
												<Destination>t_wdExpired</Destination>
												<Source>false</Source>
											</SetVariable>
										</SetVariables>
									</Statement>
									<Statement>
										<Return>
											<Type>Error</Type>
											<Value Param0="ElapsedWD">Watchdog expired! {0} ms </Value>
											<Id>5</Id>
										</Return>
									</Statement>
								</Compare>
							</Compares>
							<Informations2>
								<Information>
									<Type>Verbose</Type>
									<Value Param0="t_wdExpired">WD {0}</Value>
								</Information>
							</Informations2>
						</TestStep>
						<TestStep Name="CheckReceivedCrc">
							<Informations1>
								<Information>
									<Type>Verbose</Type>
									<Value Param0="t_slaveFrame.FrameData" Param1="LastCrc" Param2="t_slaveSeqNo" Param3="t_oldSlaveCrc" Param4="true">IsCrcCorrect(Frame {0}, LastCrc 0x{1:X4}, SeqNo {2}, OldCrc 0x{3:X4}, New {4})</Value>
								</Information>
							</Informations1>
							<Action>
								<IsCrcCorrect ReturnValue="crcCorrect">
									<Frame>t_slaveFrame</Frame>
									<LastCrc>LastCrc</LastCrc>
									<SequenceNo>t_slaveSeqNo</SequenceNo>
									<OldCrc>t_oldSlaveCrc</OldCrc>
									<New>true</New>
								</IsCrcCorrect>
							</Action>
							<ReturnValue>
								<OnFailure>
									<Type>Error</Type>
									<Value Param0="t_slaveFrame.Crc0">Invalid Crc0 reveived ({0:x})</Value>
									<Id>4</Id>
								</OnFailure>
							</ReturnValue>
						</TestStep>
						<TestStep Name="CheckSessionConditions">
							<Compares>
								<Compare>
									<Condition>
										<Value1>t_slaveFrame.Command</Value1>
										<Operator>Equal</Operator>
										<Value2>Parameter</Value2>
									</Condition>
									<Condition>
										<Value1>BytesToBeSent</Value1>
										<Operator>Equal</Operator>
										<Value2>0</Value2>
									</Condition>
									<Condition>
										<Value1>crcCorrect</Value1>
										<Operator>Equal</Operator>
										<Value2>true</Value2>
									</Condition>
									<Statement>
										<Return>
											<Type>Error</Type>
											<Value>BytesToBeSent == 0</Value>
											<Id>1</Id>
										</Return>
									</Statement>
								</Compare>
								<Compare>
									<Condition>
										<Value1>t_slaveFrame.Command</Value1>
										<Operator>Equal</Operator>
										<Value2>Parameter</Value2>
									</Condition>
									<Condition>
										<Value1>crcCorrect</Value1>
										<Operator>Equal</Operator>
										<Value2>false</Value2>
									</Condition>
									<Statement>
										<Return>
											<Type>Error</Type>
											<Value>Invalid Crc received</Value>
											<Id>4</Id>
										</Return>
									</Statement>
								</Compare>
								<Compare>
									<Condition>
										<Value1>t_slaveFrame.Command</Value1>
										<Operator>Equal</Operator>
										<Value2>Parameter</Value2>
									</Condition>
									<Condition>
										<Value1>BytesToBeSent</Value1>
										<Operator>LowerOrEqual</Operator>
										<Value2>SafeDataLength</Value2>
									</Condition>
									<Condition>
										<Value1>crcCorrect</Value1>
										<Operator>Equal</Operator>
										<Value2>true</Value2>
									</Condition>
									<Statement>
										<CallFunction>PARA_STAY1_INVALID_CONNID</CallFunction>
									</Statement>
									<Statement>
										<GotoStep>CheckReceivedSlaveFrame</GotoStep>
									</Statement>
								</Compare>
								<Compare>
									<Condition>
										<Value1>t_slaveFrame.Command</Value1>
										<Operator>Equal</Operator>
										<Value2>Parameter</Value2>
									</Condition>
									<Condition>
										<Value1>BytesToBeSent</Value1>
										<Operator>NotEqual</Operator>
										<Value2>0</Value2>
									</Condition>
									<Condition>
										<Value1>crcCorrect</Value1>
										<Operator>Equal</Operator>
										<Value2>true</Value2>
									</Condition>
									<Statement>
										<CallFunction>PARA_STAY1</CallFunction>
									</Statement>
									<Statement>
										<GotoStep>ReceiveEvent</GotoStep>
									</Statement>
								</Compare>
								<Compare>
									<Condition>
										<Value1>t_slaveFrame.Command</Value1>
										<Operator>Equal</Operator>
										<Value2>Reset</Value2>
									</Condition>
									<Statement>
										<Return>
											<Type>Error</Type>
											<Value>Invalid CMD(Reset) received</Value>
											<Id>1</Id>
										</Return>
									</Statement>
								</Compare>
								<Compare>
									<Condition>
										<Value1>t_slaveFrame.Command</Value1>
										<Operator>Equal</Operator>
										<Value2>Session</Value2>
									</Condition>
									<Statement>
										<Return>
											<Type>Error</Type>
											<Value>Invalid CMD (Session) received</Value>
											<Id>1</Id>
										</Return>
									</Statement>
								</Compare>
								<Compare>
									<Condition>
										<Value1>t_slaveFrame.Command</Value1>
										<Operator>Equal</Operator>
										<Value2>Connection</Value2>
									</Condition>
									<Statement>
										<Return>
											<Type>Error</Type>
											<Value>Invalid CMD (Parameter) received</Value>
											<Id>1</Id>
										</Return>
									</Statement>
								</Compare>
								<Compare>
									<Condition>
										<Value1>t_slaveFrame.Command</Value1>
										<Operator>Equal</Operator>
										<Value2>ProcessData</Value2>
									</Condition>
									<Statement>
										<Return>
											<Type>Error</Type>
											<Value>Invalid CMD (ProcessData) received</Value>
											<Id>1</Id>
										</Return>
									</Statement>
								</Compare>
								<Compare>
									<Condition>
										<Value1>t_slaveFrame.Command</Value1>
										<Operator>Equal</Operator>
										<Value2>FailSafeData</Value2>
									</Condition>
									<Statement>
										<Return>
											<Type>Error</Type>
											<Value>Invalid CMD (FailSafeData) received</Value>
											<Id>1</Id>
										</Return>
									</Statement>
								</Compare>
								<Compare>
									<Condition>
										<Value1>t_slaveFrame.Command</Value1>
										<Operator>NotEqual</Operator>
										<Value2>Reset</Value2>
									</Condition>
									<Condition>
										<Value1>t_slaveFrame.Command</Value1>
										<Operator>NotEqual</Operator>
										<Value2>Session</Value2>
									</Condition>
									<Condition>
										<Value1>t_slaveFrame.Command</Value1>
										<Operator>NotEqual</Operator>
										<Value2>Connection</Value2>
									</Condition>
									<Condition>
										<Value1>t_slaveFrame.Command</Value1>
										<Operator>NotEqual</Operator>
										<Value2>Parameter</Value2>
									</Condition>
									<Condition>
										<Value1>t_slaveFrame.Command</Value1>
										<Operator>NotEqual</Operator>
										<Value2>ProcessData</Value2>
									</Condition>
									<Condition>
										<Value1>t_slaveFrame.Command</Value1>
										<Operator>NotEqual</Operator>
										<Value2>FailSafeData</Value2>
									</Condition>
									<Statement>
										<Return>
											<Type>Error</Type>
											<Value>Unknown CMD received</Value>
											<Id>2</Id>
										</Return>
									</Statement>
								</Compare>
							</Compares>
						</TestStep>
						<TestStep Name="CheckReceivedSlaveFrame">
							<Action>
								<CallFunction>
									<Reference>CHECK_RESET_FAIL</Reference>
								</CallFunction>
							</Action>
							<ReturnValue>
								<OnSuccess>
									<Type>Success</Type>
									<Value Param0="c_CommFaultReason">Expected CommFaultReason ({0}) received</Value>
								</OnSuccess>
							</ReturnValue>
						</TestStep>
					</TestSteps>
				</TestCase>
				<TestCase Name="#4.44 Para_Fail7" CaseId="44">
					<Comment>Cmd = Parameter obwohl bereits ProcessData erwartet</Comment>
					<CaseVariables>
						<Variable>
							<Name>c_CommFaultReason</Name>
							<Type>Byte</Type>
						</Variable>
						<Variable>
							<Name>c_tmpByte</Name>
							<Type>Byte</Type>
						</Variable>
					</CaseVariables>
					<TestSteps>
						<TestStep Name="CheckSafeDataLength">
							<Compares>
								<Compare>
									<Condition>
										<Value1>SafeDataLength</Value1>
										<Operator>NotEqual</Operator>
										<Value2>1</Value2>
									</Condition>
									<Statement>
										<Return>
											<Type>SkippedCase</Type>
											<Value>SafeDataLength != 1; ==> skip testcase</Value>
										</Return>
									</Statement>
								</Compare>
							</Compares>
						</TestStep>
						<TestStep Name="SetVariables">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>c_CommFaultReason</Destination>
										<Source>INVALID_CMD</Source>
									</SetVariable>
									<SetVariable>
										<Destination>c_tmpByte</Destination>
										<Source>0</Source>
									</SetVariable>
									<SetVariable>
										<Destination>t_masterSessionId</Destination>
										<Source>1</Source>
									</SetVariable>
								</SetVariables>
							</Action>
						</TestStep>
						<TestStep Name="SetConnectionData">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>t_connectionId</Destination>
										<Source>3</Source>
									</SetVariable>
									<SetVariable>
										<Destination DestinationIndex="0">t_connData</Destination>
										<Source>t_connectionId</Source>
									</SetVariable>
									<SetVariable>
										<Destination DestinationIndex="2">t_connData</Destination>
										<Source>ConnData.SlaveAddress</Source>
									</SetVariable>
								</SetVariables>
							</Action>
							<Informations2>
								<Information>
									<Type>Output</Type>
									<Value Param0="t_connectionId" Param1="ConnData.SlaveAddress" Param2="t_connData">ConnectionId: {0} (0x{0:x4}), Slave Address: {1} (0x{1:x4}), Connection Data {2}</Value>
								</Information>
							</Informations2>
						</TestStep>
						<TestStep Name="SetParameterData">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>t_safePara</Destination>
										<Source>SafePara</Source>
									</SetVariable>
									<SetVariable>
										<Destination>t_watchdog</Destination>
										<Source>SafePara.Watchdog</Source>
									</SetVariable>
								</SetVariables>
							</Action>
							<Informations2>
								<Information>
									<Type>Output</Type>
									<Value Param0="t_watchdog" Param1="SafeParaSize" Param2="t_safePara">Watchdog: {0} ms, SafeParaSize: {1}, Safe Parameter {2}</Value>
								</Information>
							</Informations2>
						</TestStep>
						<TestStep Name="GoToConnection">
							<Action>
								<CallFunction>
									<Reference>RUN_DUT_TO_CONNECTION</Reference>
								</CallFunction>
							</Action>
						</TestStep>
						<TestStep Name="CallConnOk">
							<Action>
								<CallFunction>
									<Reference>CONN_OK</Reference>
								</CallFunction>
							</Action>
						</TestStep>
						<TestStep Name="ReceiveEvent">
							<Event>
								<ReceiveFrame>t_slaveFrame</ReceiveFrame>
							</Event>
							<Informations2>
								<Information>
									<Type>Verbose</Type>
									<Value Param0="t_slaveFrame.FrameData">Slave Frame: {0}</Value>
								</Information>
							</Informations2>
						</TestStep>
						<TestStep Name="CheckWatchdog">
							<Event>
								<WatchdogExpired>
									<SetVariables>
										<SetVariable>
											<Destination>t_wdExpired</Destination>
											<Source>true</Source>
										</SetVariable>
									</SetVariables>
								</WatchdogExpired>
							</Event>
							<Compares>
								<Compare>
									<Condition>
										<Value1>t_wdExpired</Value1>
										<Operator>Equal</Operator>
										<Value2>true</Value2>
									</Condition>
									<Statement>
										<SetVariables>
											<SetVariable>
												<Destination>t_wdExpired</Destination>
												<Source>false</Source>
											</SetVariable>
										</SetVariables>
									</Statement>
									<Statement>
										<Return>
											<Type>Error</Type>
											<Value Param0="ElapsedWD">Watchdog expired! {0} ms </Value>
											<Id>5</Id>
										</Return>
									</Statement>
								</Compare>
							</Compares>
							<Informations2>
								<Information>
									<Type>Verbose</Type>
									<Value Param0="t_wdExpired">WD {0}</Value>
								</Information>
							</Informations2>
						</TestStep>
						<TestStep Name="CheckReceivedCrc">
							<Informations1>
								<Information>
									<Type>Verbose</Type>
									<Value Param0="t_slaveFrame.FrameData" Param1="LastCrc" Param2="t_slaveSeqNo" Param3="t_oldSlaveCrc" Param4="true">IsCrcCorrect(Frame {0}, LastCrc 0x{1:X4}, SeqNo {2}, OldCrc 0x{3:X4}, New {4})</Value>
								</Information>
							</Informations1>
							<Action>
								<IsCrcCorrect ReturnValue="crcCorrect">
									<Frame>t_slaveFrame</Frame>
									<LastCrc>LastCrc</LastCrc>
									<SequenceNo>t_slaveSeqNo</SequenceNo>
									<OldCrc>t_oldSlaveCrc</OldCrc>
									<New>true</New>
								</IsCrcCorrect>
							</Action>
							<ReturnValue>
								<OnFailure>
									<Type>Error</Type>
									<Value Param0="t_slaveFrame.Crc0">Invalid Crc0 reveived ({0:x})</Value>
									<Id>4</Id>
								</OnFailure>
							</ReturnValue>
						</TestStep>
						<TestStep Name="CheckParaConditions">
							<Compares>
								<Compare>
									<Condition>
										<Value1>t_slaveFrame.Command</Value1>
										<Operator>Equal</Operator>
										<Value2>Parameter</Value2>
									</Condition>
									<Condition>
										<Value1>BytesToBeSent</Value1>
										<Operator>Equal</Operator>
										<Value2>0</Value2>
									</Condition>
									<Condition>
										<Value1>crcCorrect</Value1>
										<Operator>Equal</Operator>
										<Value2>true</Value2>
									</Condition>
									<Statement>
										<CallFunction>CONN_OK</CallFunction>
									</Statement>
									<Statement>
										<GotoStep>CheckReceivedSlaveFrame</GotoStep>
									</Statement>
								</Compare>
								<Compare>
									<Condition>
										<Value1>t_slaveFrame.Command</Value1>
										<Operator>Equal</Operator>
										<Value2>Parameter</Value2>
									</Condition>
									<Condition>
										<Value1>crcCorrect</Value1>
										<Operator>Equal</Operator>
										<Value2>false</Value2>
									</Condition>
									<Statement>
										<Return>
											<Type>Error</Type>
											<Value>Invalid Crc received</Value>
											<Id>4</Id>
										</Return>
									</Statement>
								</Compare>
								<Compare>
									<Condition>
										<Value1>t_slaveFrame.Command</Value1>
										<Operator>Equal</Operator>
										<Value2>Parameter</Value2>
									</Condition>
									<Condition>
										<Value1>BytesToBeSent</Value1>
										<Operator>NotEqual</Operator>
										<Value2>0</Value2>
									</Condition>
									<Condition>
										<Value1>crcCorrect</Value1>
										<Operator>Equal</Operator>
										<Value2>true</Value2>
									</Condition>
									<Statement>
										<CallFunction>PARA_STAY1</CallFunction>
									</Statement>
									<Statement>
										<GotoStep>ReceiveEvent</GotoStep>
									</Statement>
								</Compare>
								<Compare>
									<Condition>
										<Value1>t_slaveFrame.Command</Value1>
										<Operator>Equal</Operator>
										<Value2>Reset</Value2>
									</Condition>
									<Statement>
										<Return>
											<Type>Error</Type>
											<Value>Invalid CMD(Reset) received</Value>
											<Id>1</Id>
										</Return>
									</Statement>
								</Compare>
								<Compare>
									<Condition>
										<Value1>t_slaveFrame.Command</Value1>
										<Operator>Equal</Operator>
										<Value2>Session</Value2>
									</Condition>
									<Statement>
										<Return>
											<Type>Error</Type>
											<Value>Invalid CMD (Session) received</Value>
											<Id>1</Id>
										</Return>
									</Statement>
								</Compare>
								<Compare>
									<Condition>
										<Value1>t_slaveFrame.Command</Value1>
										<Operator>Equal</Operator>
										<Value2>Connection</Value2>
									</Condition>
									<Statement>
										<Return>
											<Type>Error</Type>
											<Value>Invalid CMD (Connection) received</Value>
										</Return>
									</Statement>
								</Compare>
								<Compare>
									<Condition>
										<Value1>t_slaveFrame.Command</Value1>
										<Operator>Equal</Operator>
										<Value2>ProcessData</Value2>
									</Condition>
									<Statement>
										<Return>
											<Type>Error</Type>
											<Value>Invalid CMD (ProcessData) received</Value>
											<Id>1</Id>
										</Return>
									</Statement>
								</Compare>
								<Compare>
									<Condition>
										<Value1>t_slaveFrame.Command</Value1>
										<Operator>Equal</Operator>
										<Value2>FailSafeData</Value2>
									</Condition>
									<Statement>
										<Return>
											<Type>Error</Type>
											<Value>Invalid CMD (FailSafeData) received</Value>
											<Id>1</Id>
										</Return>
									</Statement>
								</Compare>
								<Compare>
									<Condition>
										<Value1>t_slaveFrame.Command</Value1>
										<Operator>NotEqual</Operator>
										<Value2>Reset</Value2>
									</Condition>
									<Condition>
										<Value1>t_slaveFrame.Command</Value1>
										<Operator>NotEqual</Operator>
										<Value2>Session</Value2>
									</Condition>
									<Condition>
										<Value1>t_slaveFrame.Command</Value1>
										<Operator>NotEqual</Operator>
										<Value2>Connection</Value2>
									</Condition>
									<Condition>
										<Value1>t_slaveFrame.Command</Value1>
										<Operator>NotEqual</Operator>
										<Value2>Parameter</Value2>
									</Condition>
									<Condition>
										<Value1>t_slaveFrame.Command</Value1>
										<Operator>NotEqual</Operator>
										<Value2>ProcessData</Value2>
									</Condition>
									<Condition>
										<Value1>t_slaveFrame.Command</Value1>
										<Operator>NotEqual</Operator>
										<Value2>FailSafeData</Value2>
									</Condition>
									<Statement>
										<Return>
											<Type>Error</Type>
											<Value>Unknown CMD received</Value>
											<Id>2</Id>
										</Return>
									</Statement>
								</Compare>
							</Compares>
						</TestStep>
						<TestStep Name="CheckReceivedSlaveFrame">
							<Action>
								<CallFunction>
									<Reference>CHECK_RESET_FAIL</Reference>
								</CallFunction>
							</Action>
							<ReturnValue>
								<OnSuccess>
									<Type>Success</Type>
									<Value Param0="c_CommFaultReason">Expected CommFaultReason ({0}) received</Value>
								</OnSuccess>
							</ReturnValue>
						</TestStep>
					</TestSteps>
				</TestCase>
				<TestCase Name="#4.45 Para_Fail8" CaseId="45">
					<Comment>Reset-Kommando vom Master mit falscher CRC(+1)</Comment>
					<CaseVariables>
						<Variable>
							<Name>c_CommFaultReason</Name>
							<Type>Byte</Type>
						</Variable>
						<Variable>
							<Name>c_tmpByte</Name>
							<Type>Byte</Type>
						</Variable>
						<Variable>
							<Name>c_tmpCommFaultReason</Name>
							<Type>Byte</Type>
						</Variable>
						<Variable>
							<Name>c_safeData[SafeDataLength]</Name>
							<Type>ArrayOfBytes</Type>
						</Variable>
					</CaseVariables>
					<TestSteps>
						<TestStep Name="SetVariables">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>c_CommFaultReason</Destination>
										<Source>INVALID_CRC</Source>
									</SetVariable>
									<SetVariable>
										<Destination>c_tmpByte</Destination>
										<Source>0</Source>
									</SetVariable>
									<SetVariable>
										<Destination>t_masterSessionId</Destination>
										<Source>1</Source>
									</SetVariable>
								</SetVariables>
							</Action>
						</TestStep>
						<TestStep Name="SetConnectionData">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>t_connectionId</Destination>
										<Source>3</Source>
									</SetVariable>
									<SetVariable>
										<Destination DestinationIndex="0">t_connData</Destination>
										<Source>t_connectionId</Source>
									</SetVariable>
									<SetVariable>
										<Destination DestinationIndex="2">t_connData</Destination>
										<Source>ConnData.SlaveAddress</Source>
									</SetVariable>
								</SetVariables>
							</Action>
							<Informations2>
								<Information>
									<Type>Output</Type>
									<Value Param0="t_connectionId" Param1="ConnData.SlaveAddress" Param2="t_connData">ConnectionId: {0} (0x{0:x4}), Slave Address: {1} (0x{1:x4}), Connection Data {2}</Value>
								</Information>
							</Informations2>
						</TestStep>
						<TestStep Name="SetParameterData">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>t_safePara</Destination>
										<Source>SafePara</Source>
									</SetVariable>
									<SetVariable>
										<Destination>t_watchdog</Destination>
										<Source>SafePara.Watchdog</Source>
									</SetVariable>
								</SetVariables>
							</Action>
							<Informations2>
								<Information>
									<Type>Output</Type>
									<Value Param0="t_watchdog" Param1="SafeParaSize" Param2="t_safePara">Watchdog: {0} ms, SafeParaSize: {1}, Safe Parameter {2}</Value>
								</Information>
							</Informations2>
						</TestStep>
						<TestStep Name="GotoParameter">
							<Action>
								<CallFunction>
									<Reference>RUN_DUT_TO_PARAMETER</Reference>
								</CallFunction>
							</Action>
						</TestStep>
						<TestStep Name="SetMasterFrameData">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>t_masterSeqNo</Destination>
										<Source>1</Source>
									</SetVariable>
									<SetVariable>
										<Destination>LastCrc</Destination>
										<Source>0</Source>
									</SetVariable>
									<SetVariable>
										<Destination>OldMasterCrc</Destination>
										<Source>0</Source>
									</SetVariable>
									<SetVariable>
										<Destination>c_tmpCommFaultReason</Destination>
										<Source>INVALID_CMD</Source>
									</SetVariable>
									<SetVariable>
										<Destination DestinationIndex="0">c_safeData</Destination>
										<Source>c_tmpCommFaultReason</Source>
									</SetVariable>
								</SetVariables>
							</Action>
						</TestStep>
						<TestStep Name="SetLastCrc">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>LastCrc</Destination>
										<Source>t_slaveFrame.Crc0</Source>
									</SetVariable>
								</SetVariables>
							</Action>
						</TestStep>
						<TestStep Name="SetFrame">
							<Informations1>
								<Information>
									<Type>Verbose</Type>
									<Value Param0="c_safeData" Param1="LastCrc" Param2="t_masterSeqNo" Param3="OldMasterCrc" Param4="0">SetFrame(Command Reset, SafeData {0}, LastCrc 0x{1:x4}, ConnectionId 0x{4:x4},  SequenceNo 0x{2:x4}, OldCrc 0x{3:x4}, New false</Value>
								</Information>
							</Informations1>
							<Action>
								<SetFrame Name="t_masterFrame">
									<Command>
										<CommandValue>Reset</CommandValue>
									</Command>
									<SafeData>
										<SafeDataVariable>c_safeData</SafeDataVariable>
									</SafeData>
									<LastCRC>LastCrc</LastCRC>
									<ConnectionID>
										<UshortValue>0</UshortValue>
									</ConnectionID>
									<SequenceNo>t_masterSeqNo</SequenceNo>
									<OldCRC>OldMasterCrc</OldCRC>
									<New>false</New>
								</SetFrame>
							</Action>
						</TestStep>
						<TestStep Name="SetInvalidCrc0">
							<Informations1>
								<Information>
									<Type>Output</Type>
									<Value Param0="t_masterFrame.Crc0">Valid Crc0 = 0x{0:x4}</Value>
								</Information>
							</Informations1>
							<Action>
								<CallFunction>
									<Reference>INCREMENT_CRC_0</Reference>
								</CallFunction>
							</Action>
							<Informations2>
								<Information>
									<Type>Output</Type>
									<Value Param0="t_masterFrame.Crc0">Falsified Crc0 = 0x{0:x4}</Value>
								</Information>
							</Informations2>
						</TestStep>
						<TestStep Name="SendFrame">
							<Action>
								<SendFrame Name="t_masterFrame"/>
							</Action>
							<Informations2>
								<Information>
									<Type>Verbose</Type>
									<Value Param0="t_masterFrame.FrameData">Master Frame: {0}</Value>
								</Information>
							</Informations2>
							<ReturnValue>
								<OnFailure>
									<Type>Error</Type>
									<Value>Failed to send FSoE frame!</Value>
									<Id>256</Id>
								</OnFailure>
							</ReturnValue>
						</TestStep>
						<TestStep Name="CheckReceivedSlaveFrame">
							<Action>
								<CallFunction>
									<Reference>CHECK_RESET_FAIL</Reference>
								</CallFunction>
							</Action>
							<ReturnValue>
								<OnSuccess>
									<Type>Success</Type>
									<Value Param0="c_CommFaultReason">Expected CommFaultReason ({0}) received</Value>
								</OnSuccess>
							</ReturnValue>
						</TestStep>
					</TestSteps>
				</TestCase>
				<TestCase Name="#4.46 Para_Fail9" CaseId="46">
					<Comment>Rücksetzen der Connection vom Master, aber falsche CRC(+1)</Comment>
					<CaseVariables>
						<Variable>
							<Name>c_CommFaultReason</Name>
							<Type>Byte</Type>
						</Variable>
						<Variable>
							<Name>c_tmpByte</Name>
							<Type>Byte</Type>
						</Variable>
						<Variable>
							<Name>c_tmpCommFaultReason</Name>
							<Type>Byte</Type>
						</Variable>
						<Variable>
							<Name>c_safeData[SafeDataLength]</Name>
							<Type>ArrayOfBytes</Type>
						</Variable>
					</CaseVariables>
					<TestSteps>
						<TestStep Name="SetVariables">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>c_CommFaultReason</Destination>
										<Source>INVALID_CRC</Source>
									</SetVariable>
									<SetVariable>
										<Destination>c_tmpByte</Destination>
										<Source>0</Source>
									</SetVariable>
									<SetVariable>
										<Destination>t_masterSessionId</Destination>
										<Source>1</Source>
									</SetVariable>
								</SetVariables>
							</Action>
						</TestStep>
						<TestStep Name="SetConnectionData">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>t_connectionId</Destination>
										<Source>3</Source>
									</SetVariable>
									<SetVariable>
										<Destination DestinationIndex="0">t_connData</Destination>
										<Source>t_connectionId</Source>
									</SetVariable>
									<SetVariable>
										<Destination DestinationIndex="2">t_connData</Destination>
										<Source>ConnData.SlaveAddress</Source>
									</SetVariable>
								</SetVariables>
							</Action>
							<Informations2>
								<Information>
									<Type>Output</Type>
									<Value Param0="t_connectionId" Param1="ConnData.SlaveAddress" Param2="t_connData">ConnectionId: {0} (0x{0:x4}), Slave Address: {1} (0x{1:x4}), Connection Data {2}</Value>
								</Information>
							</Informations2>
						</TestStep>
						<TestStep Name="SetParameterData">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>t_safePara</Destination>
										<Source>SafePara</Source>
									</SetVariable>
									<SetVariable>
										<Destination>t_watchdog</Destination>
										<Source>SafePara.Watchdog</Source>
									</SetVariable>
								</SetVariables>
							</Action>
							<Informations2>
								<Information>
									<Type>Output</Type>
									<Value Param0="t_watchdog" Param1="SafeParaSize" Param2="t_safePara">Watchdog: {0} ms, SafeParaSize: {1}, Safe Parameter {2}</Value>
								</Information>
							</Informations2>
						</TestStep>
						<TestStep Name="GotoParameter">
							<Action>
								<CallFunction>
									<Reference>RUN_DUT_TO_PARAMETER</Reference>
								</CallFunction>
							</Action>
						</TestStep>
						<TestStep Name="SetMasterFrameData">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>t_masterSeqNo</Destination>
										<Source>1</Source>
									</SetVariable>
									<SetVariable>
										<Destination>LastCrc</Destination>
										<Source>0</Source>
									</SetVariable>
									<SetVariable>
										<Destination>OldMasterCrc</Destination>
										<Source>0</Source>
									</SetVariable>
									<SetVariable>
										<Destination DestinationIndex="0">c_safeData</Destination>
										<Source>t_masterSessionId</Source>
									</SetVariable>
								</SetVariables>
							</Action>
						</TestStep>
						<TestStep Name="SetFrame">
							<Informations1>
								<Information>
									<Type>Verbose</Type>
									<Value Param0="c_safeData" Param1="LastCrc" Param2="t_masterSeqNo" Param3="OldMasterCrc" Param4="0">SetFrame(Command Session, SafeData {0}, LastCrc 0x{1:x4}, ConnectionId 0x{4:x4},  SequenceNo 0x{2:x4}, OldCrc 0x{3:x4}, New true</Value>
								</Information>
							</Informations1>
							<Action>
								<SetFrame Name="t_masterFrame">
									<Command>
										<CommandValue>Session</CommandValue>
									</Command>
									<SafeData>
										<SafeDataVariable>c_safeData</SafeDataVariable>
									</SafeData>
									<LastCRC>LastCrc</LastCRC>
									<ConnectionID>
										<UshortValue>0</UshortValue>
									</ConnectionID>
									<SequenceNo>t_masterSeqNo</SequenceNo>
									<OldCRC>OldMasterCrc</OldCRC>
									<New>true</New>
								</SetFrame>
							</Action>
						</TestStep>
						<TestStep Name="SetInvalidCrc0">
							<Informations1>
								<Information>
									<Type>Output</Type>
									<Value Param0="t_masterFrame.Crc0">Valid Crc0 = 0x{0:x4}</Value>
								</Information>
							</Informations1>
							<Action>
								<CallFunction>
									<Reference>INCREMENT_CRC_0</Reference>
								</CallFunction>
							</Action>
							<Informations2>
								<Information>
									<Type>Output</Type>
									<Value Param0="t_masterFrame.Crc0">Falsified Crc0 = 0x{0:x4}</Value>
								</Information>
							</Informations2>
						</TestStep>
						<TestStep Name="SendFrame">
							<Action>
								<SendFrame Name="t_masterFrame"/>
							</Action>
							<Informations2>
								<Information>
									<Type>Verbose</Type>
									<Value Param0="t_masterFrame.FrameData">Master Frame: {0}</Value>
								</Information>
							</Informations2>
							<ReturnValue>
								<OnFailure>
									<Type>Error</Type>
									<Value>Failed to send FSoE frame!</Value>
									<Id>256</Id>
								</OnFailure>
							</ReturnValue>
						</TestStep>
						<TestStep Name="CheckReceivedSlaveFrame">
							<Action>
								<CallFunction>
									<Reference>CHECK_RESET_FAIL</Reference>
								</CallFunction>
							</Action>
							<ReturnValue>
								<OnSuccess>
									<Type>Success</Type>
									<Value Param0="c_CommFaultReason">Expected CommFaultReason ({0}) received</Value>
								</OnSuccess>
							</ReturnValue>
						</TestStep>
					</TestSteps>
				</TestCase>
				<TestCase Name="#4.47 Para_Fail10" CaseId="47">
					<Comment>Falsches Kommando(Connection), mit SafeOutputs</Comment>
					<CaseVariables>
						<Variable>
							<Name>c_CommFaultReason</Name>
							<Type>Byte</Type>
						</Variable>
						<Variable>
							<Name>c_tmpByte</Name>
							<Type>Byte</Type>
						</Variable>
						<Variable>
							<Name>c_cmd</Name>
							<Type>Byte</Type>
						</Variable>
						<Variable>
							<Name>c_bytesToBeSent</Name>
							<Type>Int32</Type>
						</Variable>
						<Variable>
							<Name>c_safeData[SafeDataLength]</Name>
							<Type>ArrayOfBytes</Type>
						</Variable>
					</CaseVariables>
					<TestSteps>
						<TestStep Name="SetVariables">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>c_CommFaultReason</Destination>
										<Source>INVALID_CMD</Source>
									</SetVariable>
									<SetVariable>
										<Destination>c_tmpByte</Destination>
										<Source>0</Source>
									</SetVariable>
									<SetVariable>
										<Destination>t_masterSessionId</Destination>
										<Source>1</Source>
									</SetVariable>
								</SetVariables>
							</Action>
						</TestStep>
						<TestStep Name="SetConnectionData">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>t_connectionId</Destination>
										<Source>3</Source>
									</SetVariable>
									<SetVariable>
										<Destination DestinationIndex="0">t_connData</Destination>
										<Source>t_connectionId</Source>
									</SetVariable>
									<SetVariable>
										<Destination DestinationIndex="2">t_connData</Destination>
										<Source>ConnData.SlaveAddress</Source>
									</SetVariable>
								</SetVariables>
							</Action>
							<Informations2>
								<Information>
									<Type>Output</Type>
									<Value Param0="t_connectionId" Param1="ConnData.SlaveAddress" Param2="t_connData">ConnectionId: {0} (0x{0:x4}), Slave Address: {1} (0x{1:x4}), Connection Data {2}</Value>
								</Information>
							</Informations2>
						</TestStep>
						<TestStep Name="SetParameterData">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>t_safePara</Destination>
										<Source>SafePara</Source>
									</SetVariable>
									<SetVariable>
										<Destination>t_watchdog</Destination>
										<Source>SafePara.Watchdog</Source>
									</SetVariable>
								</SetVariables>
							</Action>
							<Informations2>
								<Information>
									<Type>Output</Type>
									<Value Param0="t_watchdog" Param1="SafeParaSize" Param2="t_safePara">Watchdog: {0} ms, SafeParaSize: {1}, Safe Parameter {2}</Value>
								</Information>
							</Informations2>
						</TestStep>
						<TestStep Name="GotoParameter">
							<Action>
								<CallFunction>
									<Reference>RUN_DUT_TO_PARAMETER</Reference>
								</CallFunction>
							</Action>
						</TestStep>
						<TestStep Name="SetMasterFrameData">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>c_cmd</Destination>
										<Source>Connection</Source>
									</SetVariable>
									<SetVariable>
										<Destination>LastCrc</Destination>
										<Source>t_slaveFrame.Crc0</Source>
									</SetVariable>
									<SetVariable>
										<Destination>c_safeData</Destination>
										<Source>SafeOutputs</Source>
									</SetVariable>
									<SetVariable>
										<Destination>c_bytesToBeSent</Destination>
										<Source>SafeDataLength</Source>
									</SetVariable>
								</SetVariables>
							</Action>
							<Informations2>
								<Information>
									<Type>Output</Type>
									<Value Param0="c_cmd">Set invalid Command 0x{0:x2}</Value>
								</Information>
							</Informations2>
						</TestStep>
						<TestStep Name="CallInvalidParameterOk">
							<Action>
								<CallFunction>
									<Reference>SEND_MASTER_FRAME</Reference>
								</CallFunction>
							</Action>
						</TestStep>
						<TestStep Name="CheckReceivedSlaveFrame">
							<Action>
								<CallFunction>
									<Reference>CHECK_RESET_FAIL</Reference>
								</CallFunction>
							</Action>
							<ReturnValue>
								<OnSuccess>
									<Type>Success</Type>
									<Value Param0="c_CommFaultReason">Expected CommFaultReason ({0}) received</Value>
								</OnSuccess>
							</ReturnValue>
						</TestStep>
					</TestSteps>
				</TestCase>
				<TestCase Name="#4.48 Para_Fail10" CaseId="48">
					<Comment>Falsches Kommando(Connection), ConnectionData</Comment>
					<CaseVariables>
						<Variable>
							<Name>c_CommFaultReason</Name>
							<Type>Byte</Type>
						</Variable>
						<Variable>
							<Name>c_tmpByte</Name>
							<Type>Byte</Type>
						</Variable>
						<Variable>
							<Name>c_cmd</Name>
							<Type>Byte</Type>
						</Variable>
						<Variable>
							<Name>c_bytesToBeSent</Name>
							<Type>Int32</Type>
						</Variable>
						<Variable>
							<Name>c_safeData[SafeDataLength]</Name>
							<Type>ArrayOfBytes</Type>
						</Variable>
					</CaseVariables>
					<TestSteps>
						<TestStep Name="SetVariables">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>c_CommFaultReason</Destination>
										<Source>INVALID_CMD</Source>
									</SetVariable>
									<SetVariable>
										<Destination>c_tmpByte</Destination>
										<Source>0</Source>
									</SetVariable>
									<SetVariable>
										<Destination>t_masterSessionId</Destination>
										<Source>1</Source>
									</SetVariable>
								</SetVariables>
							</Action>
						</TestStep>
						<TestStep Name="SetConnectionData">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>t_connectionId</Destination>
										<Source>3</Source>
									</SetVariable>
									<SetVariable>
										<Destination DestinationIndex="0">t_connData</Destination>
										<Source>t_connectionId</Source>
									</SetVariable>
									<SetVariable>
										<Destination DestinationIndex="2">t_connData</Destination>
										<Source>ConnData.SlaveAddress</Source>
									</SetVariable>
								</SetVariables>
							</Action>
							<Informations2>
								<Information>
									<Type>Output</Type>
									<Value Param0="t_connectionId" Param1="ConnData.SlaveAddress" Param2="t_connData">ConnectionId: {0} (0x{0:x4}), Slave Address: {1} (0x{1:x4}), Connection Data {2}</Value>
								</Information>
							</Informations2>
						</TestStep>
						<TestStep Name="SetParameterData">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>t_safePara</Destination>
										<Source>SafePara</Source>
									</SetVariable>
									<SetVariable>
										<Destination>t_watchdog</Destination>
										<Source>SafePara.Watchdog</Source>
									</SetVariable>
								</SetVariables>
							</Action>
							<Informations2>
								<Information>
									<Type>Output</Type>
									<Value Param0="t_watchdog" Param1="SafeParaSize" Param2="t_safePara">Watchdog: {0} ms, SafeParaSize: {1}, Safe Parameter {2}</Value>
								</Information>
							</Informations2>
						</TestStep>
						<TestStep Name="GotoParameter">
							<Action>
								<CallFunction>
									<Reference>RUN_DUT_TO_PARAMETER</Reference>
								</CallFunction>
							</Action>
						</TestStep>
						<TestStep Name="SetMasterFrameData">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>c_cmd</Destination>
										<Source>Connection</Source>
									</SetVariable>
									<SetVariable>
										<Destination>LastCrc</Destination>
										<Source>t_slaveFrame.Crc0</Source>
									</SetVariable>
									<SetVariable>
										<Destination>c_bytesToBeSent</Destination>
										<Source>4</Source>
									</SetVariable>
									<SetVariable>
										<Destination>c_safeData</Destination>
										<Source>t_connData</Source>
									</SetVariable>
								</SetVariables>
							</Action>
							<Informations2>
								<Information>
									<Type>Output</Type>
									<Value Param0="c_cmd">Set invalid Command 0x{0:x2}</Value>
								</Information>
							</Informations2>
						</TestStep>
						<TestStep Name="CallInvalidConnectionOk">
							<Action>
								<CallFunction>
									<Reference>SEND_MASTER_FRAME</Reference>
								</CallFunction>
							</Action>
						</TestStep>
						<TestStep Name="CheckReceivedSlaveFrame">
							<Action>
								<CallFunction>
									<Reference>CHECK_RESET_FAIL</Reference>
								</CallFunction>
							</Action>
							<ReturnValue>
								<OnSuccess>
									<Type>Success</Type>
									<Value Param0="c_CommFaultReason">Expected CommFaultReason ({0}) received</Value>
								</OnSuccess>
							</ReturnValue>
						</TestStep>
					</TestSteps>
				</TestCase>
				<TestCase Name="#4.49 Para_Fail11" CaseId="49">
					<Comment>Unbekanntes Kommando(0x00), mit SafeOutputs</Comment>
					<CaseVariables>
						<Variable>
							<Name>c_CommFaultReason</Name>
							<Type>Byte</Type>
						</Variable>
						<Variable>
							<Name>c_tmpByte</Name>
							<Type>Byte</Type>
						</Variable>
						<Variable>
							<Name>c_cmd</Name>
							<Type>Byte</Type>
						</Variable>
						<Variable>
							<Name>c_bytesToBeSent</Name>
							<Type>Int32</Type>
						</Variable>
						<Variable>
							<Name>c_safeData[SafeDataLength]</Name>
							<Type>ArrayOfBytes</Type>
						</Variable>
					</CaseVariables>
					<TestSteps>
						<TestStep Name="SetVariables">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>c_CommFaultReason</Destination>
										<Source>UNKNOWN_CMD</Source>
									</SetVariable>
									<SetVariable>
										<Destination>c_tmpByte</Destination>
										<Source>0</Source>
									</SetVariable>
									<SetVariable>
										<Destination>t_masterSessionId</Destination>
										<Source>1</Source>
									</SetVariable>
								</SetVariables>
							</Action>
						</TestStep>
						<TestStep Name="SetConnectionData">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>t_connectionId</Destination>
										<Source>3</Source>
									</SetVariable>
									<SetVariable>
										<Destination DestinationIndex="0">t_connData</Destination>
										<Source>t_connectionId</Source>
									</SetVariable>
									<SetVariable>
										<Destination DestinationIndex="2">t_connData</Destination>
										<Source>ConnData.SlaveAddress</Source>
									</SetVariable>
								</SetVariables>
							</Action>
							<Informations2>
								<Information>
									<Type>Output</Type>
									<Value Param0="t_connectionId" Param1="ConnData.SlaveAddress" Param2="t_connData">ConnectionId: {0} (0x{0:x4}), Slave Address: {1} (0x{1:x4}), Connection Data {2}</Value>
								</Information>
							</Informations2>
						</TestStep>
						<TestStep Name="SetParameterData">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>t_safePara</Destination>
										<Source>SafePara</Source>
									</SetVariable>
									<SetVariable>
										<Destination>t_watchdog</Destination>
										<Source>SafePara.Watchdog</Source>
									</SetVariable>
								</SetVariables>
							</Action>
							<Informations2>
								<Information>
									<Type>Output</Type>
									<Value Param0="t_watchdog" Param1="SafeParaSize" Param2="t_safePara">Watchdog: {0} ms, SafeParaSize: {1}, Safe Parameter {2}</Value>
								</Information>
							</Informations2>
						</TestStep>
						<TestStep Name="GotoParameter">
							<Action>
								<CallFunction>
									<Reference>RUN_DUT_TO_PARAMETER</Reference>
								</CallFunction>
							</Action>
						</TestStep>
						<TestStep Name="SetMasterFrameData">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>c_cmd</Destination>
										<Source>0</Source>
									</SetVariable>
									<SetVariable>
										<Destination>LastCrc</Destination>
										<Source>t_slaveFrame.Crc0</Source>
									</SetVariable>
									<SetVariable>
										<Destination>c_safeData</Destination>
										<Source>SafeOutputs</Source>
									</SetVariable>
									<SetVariable>
										<Destination>c_bytesToBeSent</Destination>
										<Source>SafeDataLength</Source>
									</SetVariable>
								</SetVariables>
							</Action>
							<Informations2>
								<Information>
									<Type>Output</Type>
									<Value Param0="c_cmd">Set invalid Command 0x{0:x2}</Value>
								</Information>
							</Informations2>
						</TestStep>
						<TestStep Name="CallInvalidParameterOk">
							<Action>
								<CallFunction>
									<Reference>SEND_MASTER_FRAME</Reference>
								</CallFunction>
							</Action>
						</TestStep>
						<TestStep Name="CheckReceivedSlaveFrame">
							<Action>
								<CallFunction>
									<Reference>CHECK_RESET_FAIL</Reference>
								</CallFunction>
							</Action>
							<ReturnValue>
								<OnSuccess>
									<Type>Success</Type>
									<Value Param0="c_CommFaultReason">Expected CommFaultReason ({0}) received</Value>
								</OnSuccess>
							</ReturnValue>
						</TestStep>
					</TestSteps>
				</TestCase>
				<TestCase Name="#4.50 Para_Fail11" CaseId="50">
					<Comment>Unbekanntes Kommando(0x2b), mit SafeOutputs</Comment>
					<CaseVariables>
						<Variable>
							<Name>c_CommFaultReason</Name>
							<Type>Byte</Type>
						</Variable>
						<Variable>
							<Name>c_tmpByte</Name>
							<Type>Byte</Type>
						</Variable>
						<Variable>
							<Name>c_cmd</Name>
							<Type>Byte</Type>
						</Variable>
						<Variable>
							<Name>c_bytesToBeSent</Name>
							<Type>Int32</Type>
						</Variable>
						<Variable>
							<Name>c_safeData[SafeDataLength]</Name>
							<Type>ArrayOfBytes</Type>
						</Variable>
					</CaseVariables>
					<TestSteps>
						<TestStep Name="SetVariables">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>c_CommFaultReason</Destination>
										<Source>UNKNOWN_CMD</Source>
									</SetVariable>
									<SetVariable>
										<Destination>c_tmpByte</Destination>
										<Source>0</Source>
									</SetVariable>
									<SetVariable>
										<Destination>t_masterSessionId</Destination>
										<Source>1</Source>
									</SetVariable>
								</SetVariables>
							</Action>
						</TestStep>
						<TestStep Name="SetConnectionData">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>t_connectionId</Destination>
										<Source>3</Source>
									</SetVariable>
									<SetVariable>
										<Destination DestinationIndex="0">t_connData</Destination>
										<Source>t_connectionId</Source>
									</SetVariable>
									<SetVariable>
										<Destination DestinationIndex="2">t_connData</Destination>
										<Source>ConnData.SlaveAddress</Source>
									</SetVariable>
								</SetVariables>
							</Action>
							<Informations2>
								<Information>
									<Type>Output</Type>
									<Value Param0="t_connectionId" Param1="ConnData.SlaveAddress" Param2="t_connData">ConnectionId: {0} (0x{0:x4}), Slave Address: {1} (0x{1:x4}), Connection Data {2}</Value>
								</Information>
							</Informations2>
						</TestStep>
						<TestStep Name="SetParameterData">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>t_safePara</Destination>
										<Source>SafePara</Source>
									</SetVariable>
									<SetVariable>
										<Destination>t_watchdog</Destination>
										<Source>SafePara.Watchdog</Source>
									</SetVariable>
								</SetVariables>
							</Action>
							<Informations2>
								<Information>
									<Type>Output</Type>
									<Value Param0="t_watchdog" Param1="SafeParaSize" Param2="t_safePara">Watchdog: {0} ms, SafeParaSize: {1}, Safe Parameter {2}</Value>
								</Information>
							</Informations2>
						</TestStep>
						<TestStep Name="GotoParameter">
							<Action>
								<CallFunction>
									<Reference>RUN_DUT_TO_PARAMETER</Reference>
								</CallFunction>
							</Action>
						</TestStep>
						<TestStep Name="SetMasterFrameData">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>c_cmd</Destination>
										<Source>43</Source>
									</SetVariable>
									<SetVariable>
										<Destination>LastCrc</Destination>
										<Source>t_slaveFrame.Crc0</Source>
									</SetVariable>
									<SetVariable>
										<Destination>c_safeData</Destination>
										<Source>SafeOutputs</Source>
									</SetVariable>
									<SetVariable>
										<Destination>c_bytesToBeSent</Destination>
										<Source>SafeDataLength</Source>
									</SetVariable>
								</SetVariables>
							</Action>
							<Informations2>
								<Information>
									<Type>Output</Type>
									<Value Param0="c_cmd">Set invalid Command 0x{0:x2}</Value>
								</Information>
							</Informations2>
						</TestStep>
						<TestStep Name="CallInvalidParameterOk">
							<Action>
								<CallFunction>
									<Reference>SEND_MASTER_FRAME</Reference>
								</CallFunction>
							</Action>
						</TestStep>
						<TestStep Name="CheckReceivedSlaveFrame">
							<Action>
								<CallFunction>
									<Reference>CHECK_RESET_FAIL</Reference>
								</CallFunction>
							</Action>
							<ReturnValue>
								<OnSuccess>
									<Type>Success</Type>
									<Value Param0="c_CommFaultReason">Expected CommFaultReason ({0}) received</Value>
								</OnSuccess>
							</ReturnValue>
						</TestStep>
					</TestSteps>
				</TestCase>
				<TestCase Name="#4.51 Para_Fail11" CaseId="51">
					<Comment>Unbekanntes Kommando(0x37), mit SafeOutputs</Comment>
					<CaseVariables>
						<Variable>
							<Name>c_CommFaultReason</Name>
							<Type>Byte</Type>
						</Variable>
						<Variable>
							<Name>c_tmpByte</Name>
							<Type>Byte</Type>
						</Variable>
						<Variable>
							<Name>c_cmd</Name>
							<Type>Byte</Type>
						</Variable>
						<Variable>
							<Name>c_bytesToBeSent</Name>
							<Type>Int32</Type>
						</Variable>
						<Variable>
							<Name>c_safeData[SafeDataLength]</Name>
							<Type>ArrayOfBytes</Type>
						</Variable>
					</CaseVariables>
					<TestSteps>
						<TestStep Name="SetVariables">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>c_CommFaultReason</Destination>
										<Source>UNKNOWN_CMD</Source>
									</SetVariable>
									<SetVariable>
										<Destination>c_tmpByte</Destination>
										<Source>0</Source>
									</SetVariable>
									<SetVariable>
										<Destination>t_masterSessionId</Destination>
										<Source>1</Source>
									</SetVariable>
								</SetVariables>
							</Action>
						</TestStep>
						<TestStep Name="SetConnectionData">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>t_connectionId</Destination>
										<Source>3</Source>
									</SetVariable>
									<SetVariable>
										<Destination DestinationIndex="0">t_connData</Destination>
										<Source>t_connectionId</Source>
									</SetVariable>
									<SetVariable>
										<Destination DestinationIndex="2">t_connData</Destination>
										<Source>ConnData.SlaveAddress</Source>
									</SetVariable>
								</SetVariables>
							</Action>
							<Informations2>
								<Information>
									<Type>Output</Type>
									<Value Param0="t_connectionId" Param1="ConnData.SlaveAddress" Param2="t_connData">ConnectionId: {0} (0x{0:x4}), Slave Address: {1} (0x{1:x4}), Connection Data {2}</Value>
								</Information>
							</Informations2>
						</TestStep>
						<TestStep Name="SetParameterData">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>t_safePara</Destination>
										<Source>SafePara</Source>
									</SetVariable>
									<SetVariable>
										<Destination>t_watchdog</Destination>
										<Source>SafePara.Watchdog</Source>
									</SetVariable>
								</SetVariables>
							</Action>
							<Informations2>
								<Information>
									<Type>Output</Type>
									<Value Param0="t_watchdog" Param1="SafeParaSize" Param2="t_safePara">Watchdog: {0} ms, SafeParaSize: {1}, Safe Parameter {2}</Value>
								</Information>
							</Informations2>
						</TestStep>
						<TestStep Name="GotoParameter">
							<Action>
								<CallFunction>
									<Reference>RUN_DUT_TO_PARAMETER</Reference>
								</CallFunction>
							</Action>
						</TestStep>
						<TestStep Name="SetMasterFrameData">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>c_cmd</Destination>
										<Source>55</Source>
									</SetVariable>
									<SetVariable>
										<Destination>LastCrc</Destination>
										<Source>t_slaveFrame.Crc0</Source>
									</SetVariable>
									<SetVariable>
										<Destination>c_safeData</Destination>
										<Source>SafeOutputs</Source>
									</SetVariable>
									<SetVariable>
										<Destination>c_bytesToBeSent</Destination>
										<Source>SafeDataLength</Source>
									</SetVariable>
								</SetVariables>
							</Action>
							<Informations2>
								<Information>
									<Type>Output</Type>
									<Value Param0="c_cmd">Set invalid Command 0x{0:x2}</Value>
								</Information>
							</Informations2>
						</TestStep>
						<TestStep Name="CallInvalidParameterOk">
							<Action>
								<CallFunction>
									<Reference>SEND_MASTER_FRAME</Reference>
								</CallFunction>
							</Action>
						</TestStep>
						<TestStep Name="CheckReceivedSlaveFrame">
							<Action>
								<CallFunction>
									<Reference>CHECK_RESET_FAIL</Reference>
								</CallFunction>
							</Action>
							<ReturnValue>
								<OnSuccess>
									<Type>Success</Type>
									<Value Param0="c_CommFaultReason">Expected CommFaultReason ({0}) received</Value>
								</OnSuccess>
							</ReturnValue>
						</TestStep>
					</TestSteps>
				</TestCase>
				<TestCase Name="#4.52 Para_Fail11" CaseId="52">
					<Comment>Unbekanntes Kommando(0x95), mit SafeOutputs</Comment>
					<CaseVariables>
						<Variable>
							<Name>c_CommFaultReason</Name>
							<Type>Byte</Type>
						</Variable>
						<Variable>
							<Name>c_tmpByte</Name>
							<Type>Byte</Type>
						</Variable>
						<Variable>
							<Name>c_cmd</Name>
							<Type>Byte</Type>
						</Variable>
						<Variable>
							<Name>c_bytesToBeSent</Name>
							<Type>Int32</Type>
						</Variable>
						<Variable>
							<Name>c_safeData[SafeDataLength]</Name>
							<Type>ArrayOfBytes</Type>
						</Variable>
					</CaseVariables>
					<TestSteps>
						<TestStep Name="SetVariables">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>c_CommFaultReason</Destination>
										<Source>UNKNOWN_CMD</Source>
									</SetVariable>
									<SetVariable>
										<Destination>c_tmpByte</Destination>
										<Source>0</Source>
									</SetVariable>
									<SetVariable>
										<Destination>t_masterSessionId</Destination>
										<Source>1</Source>
									</SetVariable>
								</SetVariables>
							</Action>
						</TestStep>
						<TestStep Name="SetConnectionData">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>t_connectionId</Destination>
										<Source>3</Source>
									</SetVariable>
									<SetVariable>
										<Destination DestinationIndex="0">t_connData</Destination>
										<Source>t_connectionId</Source>
									</SetVariable>
									<SetVariable>
										<Destination DestinationIndex="2">t_connData</Destination>
										<Source>ConnData.SlaveAddress</Source>
									</SetVariable>
								</SetVariables>
							</Action>
							<Informations2>
								<Information>
									<Type>Output</Type>
									<Value Param0="t_connectionId" Param1="ConnData.SlaveAddress" Param2="t_connData">ConnectionId: {0} (0x{0:x4}), Slave Address: {1} (0x{1:x4}), Connection Data {2}</Value>
								</Information>
							</Informations2>
						</TestStep>
						<TestStep Name="SetParameterData">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>t_safePara</Destination>
										<Source>SafePara</Source>
									</SetVariable>
									<SetVariable>
										<Destination>t_watchdog</Destination>
										<Source>SafePara.Watchdog</Source>
									</SetVariable>
								</SetVariables>
							</Action>
							<Informations2>
								<Information>
									<Type>Output</Type>
									<Value Param0="t_watchdog" Param1="SafeParaSize" Param2="t_safePara">Watchdog: {0} ms, SafeParaSize: {1}, Safe Parameter {2}</Value>
								</Information>
							</Informations2>
						</TestStep>
						<TestStep Name="GotoParameter">
							<Action>
								<CallFunction>
									<Reference>RUN_DUT_TO_PARAMETER</Reference>
								</CallFunction>
							</Action>
						</TestStep>
						<TestStep Name="SetMasterFrameData">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>c_cmd</Destination>
										<Source>149</Source>
									</SetVariable>
									<SetVariable>
										<Destination>LastCrc</Destination>
										<Source>t_slaveFrame.Crc0</Source>
									</SetVariable>
									<SetVariable>
										<Destination>c_safeData</Destination>
										<Source>SafeOutputs</Source>
									</SetVariable>
									<SetVariable>
										<Destination>c_bytesToBeSent</Destination>
										<Source>SafeDataLength</Source>
									</SetVariable>
								</SetVariables>
							</Action>
							<Informations2>
								<Information>
									<Type>Output</Type>
									<Value Param0="c_cmd">Set invalid Command 0x{0:x2}</Value>
								</Information>
							</Informations2>
						</TestStep>
						<TestStep Name="CallInvalidParameterOk">
							<Action>
								<CallFunction>
									<Reference>SEND_MASTER_FRAME</Reference>
								</CallFunction>
							</Action>
						</TestStep>
						<TestStep Name="CheckReceivedSlaveFrame">
							<Action>
								<CallFunction>
									<Reference>CHECK_RESET_FAIL</Reference>
								</CallFunction>
							</Action>
							<ReturnValue>
								<OnSuccess>
									<Type>Success</Type>
									<Value Param0="c_CommFaultReason">Expected CommFaultReason ({0}) received</Value>
								</OnSuccess>
							</ReturnValue>
						</TestStep>
					</TestSteps>
				</TestCase>
				<TestCase Name="#4.53 Para_Fail11" CaseId="53">
					<Comment>Unbekanntes Kommando(0xff), mit SafeOutputs</Comment>
					<CaseVariables>
						<Variable>
							<Name>c_CommFaultReason</Name>
							<Type>Byte</Type>
						</Variable>
						<Variable>
							<Name>c_tmpByte</Name>
							<Type>Byte</Type>
						</Variable>
						<Variable>
							<Name>c_cmd</Name>
							<Type>Byte</Type>
						</Variable>
						<Variable>
							<Name>c_bytesToBeSent</Name>
							<Type>Int32</Type>
						</Variable>
						<Variable>
							<Name>c_safeData[SafeDataLength]</Name>
							<Type>ArrayOfBytes</Type>
						</Variable>
					</CaseVariables>
					<TestSteps>
						<TestStep Name="SetVariables">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>c_CommFaultReason</Destination>
										<Source>UNKNOWN_CMD</Source>
									</SetVariable>
									<SetVariable>
										<Destination>c_tmpByte</Destination>
										<Source>0</Source>
									</SetVariable>
									<SetVariable>
										<Destination>t_masterSessionId</Destination>
										<Source>1</Source>
									</SetVariable>
								</SetVariables>
							</Action>
						</TestStep>
						<TestStep Name="SetConnectionData">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>t_connectionId</Destination>
										<Source>3</Source>
									</SetVariable>
									<SetVariable>
										<Destination DestinationIndex="0">t_connData</Destination>
										<Source>t_connectionId</Source>
									</SetVariable>
									<SetVariable>
										<Destination DestinationIndex="2">t_connData</Destination>
										<Source>ConnData.SlaveAddress</Source>
									</SetVariable>
								</SetVariables>
							</Action>
							<Informations2>
								<Information>
									<Type>Output</Type>
									<Value Param0="t_connectionId" Param1="ConnData.SlaveAddress" Param2="t_connData">ConnectionId: {0} (0x{0:x4}), Slave Address: {1} (0x{1:x4}), Connection Data {2}</Value>
								</Information>
							</Informations2>
						</TestStep>
						<TestStep Name="SetParameterData">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>t_safePara</Destination>
										<Source>SafePara</Source>
									</SetVariable>
									<SetVariable>
										<Destination>t_watchdog</Destination>
										<Source>SafePara.Watchdog</Source>
									</SetVariable>
								</SetVariables>
							</Action>
							<Informations2>
								<Information>
									<Type>Output</Type>
									<Value Param0="t_watchdog" Param1="SafeParaSize" Param2="t_safePara">Watchdog: {0} ms, SafeParaSize: {1}, Safe Parameter {2}</Value>
								</Information>
							</Informations2>
						</TestStep>
						<TestStep Name="GotoParameter">
							<Action>
								<CallFunction>
									<Reference>RUN_DUT_TO_PARAMETER</Reference>
								</CallFunction>
							</Action>
						</TestStep>
						<TestStep Name="SetMasterFrameData">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>c_cmd</Destination>
										<Source>255</Source>
									</SetVariable>
									<SetVariable>
										<Destination>LastCrc</Destination>
										<Source>t_slaveFrame.Crc0</Source>
									</SetVariable>
									<SetVariable>
										<Destination>c_safeData</Destination>
										<Source>SafeOutputs</Source>
									</SetVariable>
									<SetVariable>
										<Destination>c_bytesToBeSent</Destination>
										<Source>SafeDataLength</Source>
									</SetVariable>
								</SetVariables>
							</Action>
							<Informations2>
								<Information>
									<Type>Output</Type>
									<Value Param0="c_cmd">Set invalid Command 0x{0:x2}</Value>
								</Information>
							</Informations2>
						</TestStep>
						<TestStep Name="CallInvalidParameterOk">
							<Action>
								<CallFunction>
									<Reference>SEND_MASTER_FRAME</Reference>
								</CallFunction>
							</Action>
						</TestStep>
						<TestStep Name="CheckReceivedSlaveFrame">
							<Action>
								<CallFunction>
									<Reference>CHECK_RESET_FAIL</Reference>
								</CallFunction>
							</Action>
							<ReturnValue>
								<OnSuccess>
									<Type>Success</Type>
									<Value Param0="c_CommFaultReason">Expected CommFaultReason ({0}) received</Value>
								</OnSuccess>
							</ReturnValue>
						</TestStep>
					</TestSteps>
				</TestCase>
				<TestCase Name="#4.54 Para_Reset1" CaseId="54">
					<Comment>Reset-Kommando vom Master mit CommFaultReason = 0</Comment>
					<CaseVariables>
						<Variable>
							<Name>c_CommFaultReason</Name>
							<Type>Byte</Type>
						</Variable>
						<Variable>
							<Name>c_tmpByte</Name>
							<Type>Byte</Type>
						</Variable>
						<Variable>
							<Name>c_tmpCommFaultReason</Name>
							<Type>Byte</Type>
						</Variable>
						<Variable>
							<Name>c_safeData[SafeDataLength]</Name>
							<Type>ArrayOfBytes</Type>
						</Variable>
					</CaseVariables>
					<TestSteps>
						<TestStep Name="SetVariables">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>c_CommFaultReason</Destination>
										<Source>0</Source>
									</SetVariable>
									<SetVariable>
										<Destination>c_tmpByte</Destination>
										<Source>0</Source>
									</SetVariable>
									<SetVariable>
										<Destination>t_masterSessionId</Destination>
										<Source>1</Source>
									</SetVariable>
								</SetVariables>
							</Action>
						</TestStep>
						<TestStep Name="SetConnectionData">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>t_connectionId</Destination>
										<Source>3</Source>
									</SetVariable>
									<SetVariable>
										<Destination DestinationIndex="0">t_connData</Destination>
										<Source>t_connectionId</Source>
									</SetVariable>
									<SetVariable>
										<Destination DestinationIndex="2">t_connData</Destination>
										<Source>ConnData.SlaveAddress</Source>
									</SetVariable>
								</SetVariables>
							</Action>
							<Informations2>
								<Information>
									<Type>Output</Type>
									<Value Param0="t_connectionId" Param1="ConnData.SlaveAddress" Param2="t_connData">ConnectionId: {0} (0x{0:x4}), Slave Address: {1} (0x{1:x4}), Connection Data {2}</Value>
								</Information>
							</Informations2>
						</TestStep>
						<TestStep Name="SetParameterData">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>t_safePara</Destination>
										<Source>SafePara</Source>
									</SetVariable>
									<SetVariable>
										<Destination>t_watchdog</Destination>
										<Source>SafePara.Watchdog</Source>
									</SetVariable>
								</SetVariables>
							</Action>
							<Informations2>
								<Information>
									<Type>Output</Type>
									<Value Param0="t_watchdog" Param1="SafeParaSize" Param2="t_safePara">Watchdog: {0} ms, SafeParaSize: {1}, Safe Parameter {2}</Value>
								</Information>
							</Informations2>
						</TestStep>
						<TestStep Name="GotoParameter">
							<Action>
								<CallFunction>
									<Reference>RUN_DUT_TO_PARAMETER</Reference>
								</CallFunction>
							</Action>
						</TestStep>
						<TestStep Name="SetMasterFrameData">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>t_connectionId</Destination>
										<Source>0</Source>
									</SetVariable>
									<SetVariable>
										<Destination>t_masterSeqNo</Destination>
										<Source>1</Source>
									</SetVariable>
									<SetVariable>
										<Destination>LastCrc</Destination>
										<Source>0</Source>
									</SetVariable>
									<SetVariable>
										<Destination>OldMasterCrc</Destination>
										<Source>0</Source>
									</SetVariable>
									<SetVariable>
										<Destination>c_tmpCommFaultReason</Destination>
										<Source>0</Source>
									</SetVariable>
									<SetVariable>
										<Destination DestinationIndex="0">c_safeData</Destination>
										<Source>c_tmpCommFaultReason</Source>
									</SetVariable>
								</SetVariables>
							</Action>
						</TestStep>
						<TestStep Name="SetFrame">
							<Informations1>
								<Information>
									<Type>Verbose</Type>
									<Value Param0="c_safeData" Param1="LastCrc" Param2="t_masterSeqNo" Param3="OldMasterCrc" Param4="0">SetFrame(Command Reset, SafeData {0}, LastCrc 0x{1:x4}, ConnectionId 0x{4:x4},  SequenceNo 0x{2:x4}, OldCrc 0x{3:x4}, New false</Value>
								</Information>
							</Informations1>
							<Action>
								<SetFrame Name="t_masterFrame">
									<Command>
										<CommandValue>Reset</CommandValue>
									</Command>
									<SafeData>
										<SafeDataVariable>c_safeData</SafeDataVariable>
									</SafeData>
									<LastCRC>LastCrc</LastCRC>
									<ConnectionID>
										<UshortValue>0</UshortValue>
									</ConnectionID>
									<SequenceNo>t_masterSeqNo</SequenceNo>
									<OldCRC>OldMasterCrc</OldCRC>
									<New>false</New>
								</SetFrame>
							</Action>
						</TestStep>
						<TestStep Name="SendFrame">
							<Action>
								<SendFrame Name="t_masterFrame"/>
							</Action>
							<Informations2>
								<Information>
									<Type>Verbose</Type>
									<Value Param0="t_masterFrame.FrameData">Master Frame: {0}</Value>
								</Information>
							</Informations2>
							<ReturnValue>
								<OnFailure>
									<Type>Error</Type>
									<Value>Failed to send FSoE frame!</Value>
									<Id>256</Id>
								</OnFailure>
							</ReturnValue>
						</TestStep>
						<TestStep Name="CheckReceivedSlaveFrame">
							<Action>
								<CallFunction>
									<Reference>CHECK_RESET_FAIL</Reference>
								</CallFunction>
							</Action>
							<ReturnValue>
								<OnSuccess>
									<Type>Success</Type>
									<Value Param0="c_CommFaultReason">Expected CommFaultReason ({0}) received</Value>
								</OnSuccess>
							</ReturnValue>
						</TestStep>
					</TestSteps>
				</TestCase>
				<TestCase Name="#4.55 Para_Reset1" CaseId="55">
					<Comment>Reset-Kommando vom Master mit CommFaultReason = 1</Comment>
					<CaseVariables>
						<Variable>
							<Name>c_CommFaultReason</Name>
							<Type>Byte</Type>
						</Variable>
						<Variable>
							<Name>c_tmpByte</Name>
							<Type>Byte</Type>
						</Variable>
						<Variable>
							<Name>c_tmpCommFaultReason</Name>
							<Type>Byte</Type>
						</Variable>
						<Variable>
							<Name>c_safeData[SafeDataLength]</Name>
							<Type>ArrayOfBytes</Type>
						</Variable>
					</CaseVariables>
					<TestSteps>
						<TestStep Name="SetVariables">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>c_CommFaultReason</Destination>
										<Source>0</Source>
									</SetVariable>
									<SetVariable>
										<Destination>c_tmpByte</Destination>
										<Source>0</Source>
									</SetVariable>
									<SetVariable>
										<Destination>t_masterSessionId</Destination>
										<Source>1</Source>
									</SetVariable>
								</SetVariables>
							</Action>
						</TestStep>
						<TestStep Name="SetConnectionData">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>t_connectionId</Destination>
										<Source>3</Source>
									</SetVariable>
									<SetVariable>
										<Destination DestinationIndex="0">t_connData</Destination>
										<Source>t_connectionId</Source>
									</SetVariable>
									<SetVariable>
										<Destination DestinationIndex="2">t_connData</Destination>
										<Source>ConnData.SlaveAddress</Source>
									</SetVariable>
								</SetVariables>
							</Action>
							<Informations2>
								<Information>
									<Type>Output</Type>
									<Value Param0="t_connectionId" Param1="ConnData.SlaveAddress" Param2="t_connData">ConnectionId: {0} (0x{0:x4}), Slave Address: {1} (0x{1:x4}), Connection Data {2}</Value>
								</Information>
							</Informations2>
						</TestStep>
						<TestStep Name="SetParameterData">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>t_safePara</Destination>
										<Source>SafePara</Source>
									</SetVariable>
									<SetVariable>
										<Destination>t_watchdog</Destination>
										<Source>SafePara.Watchdog</Source>
									</SetVariable>
								</SetVariables>
							</Action>
							<Informations2>
								<Information>
									<Type>Output</Type>
									<Value Param0="t_watchdog" Param1="SafeParaSize" Param2="t_safePara">Watchdog: {0} ms, SafeParaSize: {1}, Safe Parameter {2}</Value>
								</Information>
							</Informations2>
						</TestStep>
						<TestStep Name="GotoParameter">
							<Action>
								<CallFunction>
									<Reference>RUN_DUT_TO_PARAMETER</Reference>
								</CallFunction>
							</Action>
						</TestStep>
						<TestStep Name="SetMasterFrameData">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>t_connectionId</Destination>
										<Source>0</Source>
									</SetVariable>
									<SetVariable>
										<Destination>t_masterSeqNo</Destination>
										<Source>1</Source>
									</SetVariable>
									<SetVariable>
										<Destination>LastCrc</Destination>
										<Source>0</Source>
									</SetVariable>
									<SetVariable>
										<Destination>OldMasterCrc</Destination>
										<Source>0</Source>
									</SetVariable>
									<SetVariable>
										<Destination>c_tmpCommFaultReason</Destination>
										<Source>1</Source>
									</SetVariable>
									<SetVariable>
										<Destination DestinationIndex="0">c_safeData</Destination>
										<Source>c_tmpCommFaultReason</Source>
									</SetVariable>
								</SetVariables>
							</Action>
						</TestStep>
						<TestStep Name="SetFrame">
							<Informations1>
								<Information>
									<Type>Verbose</Type>
									<Value Param0="c_safeData" Param1="LastCrc" Param2="t_masterSeqNo" Param3="OldMasterCrc" Param4="0">SetFrame(Command Reset, SafeData {0}, LastCrc 0x{1:x4}, ConnectionId 0x{4:x4},  SequenceNo 0x{2:x4}, OldCrc 0x{3:x4}, New false</Value>
								</Information>
							</Informations1>
							<Action>
								<SetFrame Name="t_masterFrame">
									<Command>
										<CommandValue>Reset</CommandValue>
									</Command>
									<SafeData>
										<SafeDataVariable>c_safeData</SafeDataVariable>
									</SafeData>
									<LastCRC>LastCrc</LastCRC>
									<ConnectionID>
										<UshortValue>0</UshortValue>
									</ConnectionID>
									<SequenceNo>t_masterSeqNo</SequenceNo>
									<OldCRC>OldMasterCrc</OldCRC>
									<New>false</New>
								</SetFrame>
							</Action>
						</TestStep>
						<TestStep Name="SendFrame">
							<Action>
								<SendFrame Name="t_masterFrame"/>
							</Action>
							<Informations2>
								<Information>
									<Type>Verbose</Type>
									<Value Param0="t_masterFrame.FrameData">Master Frame: {0}</Value>
								</Information>
							</Informations2>
							<ReturnValue>
								<OnFailure>
									<Type>Error</Type>
									<Value>Failed to send FSoE frame!</Value>
									<Id>256</Id>
								</OnFailure>
							</ReturnValue>
						</TestStep>
						<TestStep Name="CheckReceivedSlaveFrame">
							<Action>
								<CallFunction>
									<Reference>CHECK_RESET_FAIL</Reference>
								</CallFunction>
							</Action>
							<ReturnValue>
								<OnSuccess>
									<Type>Success</Type>
									<Value Param0="c_CommFaultReason">Expected CommFaultReason ({0}) received</Value>
								</OnSuccess>
							</ReturnValue>
						</TestStep>
					</TestSteps>
				</TestCase>
				<TestCase Name="#4.56 Para_Reset1" CaseId="56">
					<Comment>Reset-Kommando vom Master mit CommFaultReason = 14</Comment>
					<CaseVariables>
						<Variable>
							<Name>c_CommFaultReason</Name>
							<Type>Byte</Type>
						</Variable>
						<Variable>
							<Name>c_tmpByte</Name>
							<Type>Byte</Type>
						</Variable>
						<Variable>
							<Name>c_tmpCommFaultReason</Name>
							<Type>Byte</Type>
						</Variable>
						<Variable>
							<Name>c_safeData[SafeDataLength]</Name>
							<Type>ArrayOfBytes</Type>
						</Variable>
					</CaseVariables>
					<TestSteps>
						<TestStep Name="SetVariables">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>c_CommFaultReason</Destination>
										<Source>0</Source>
									</SetVariable>
									<SetVariable>
										<Destination>c_tmpByte</Destination>
										<Source>0</Source>
									</SetVariable>
									<SetVariable>
										<Destination>t_masterSessionId</Destination>
										<Source>1</Source>
									</SetVariable>
								</SetVariables>
							</Action>
						</TestStep>
						<TestStep Name="SetConnectionData">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>t_connectionId</Destination>
										<Source>3</Source>
									</SetVariable>
									<SetVariable>
										<Destination DestinationIndex="0">t_connData</Destination>
										<Source>t_connectionId</Source>
									</SetVariable>
									<SetVariable>
										<Destination DestinationIndex="2">t_connData</Destination>
										<Source>ConnData.SlaveAddress</Source>
									</SetVariable>
								</SetVariables>
							</Action>
							<Informations2>
								<Information>
									<Type>Output</Type>
									<Value Param0="t_connectionId" Param1="ConnData.SlaveAddress" Param2="t_connData">ConnectionId: {0} (0x{0:x4}), Slave Address: {1} (0x{1:x4}), Connection Data {2}</Value>
								</Information>
							</Informations2>
						</TestStep>
						<TestStep Name="SetParameterData">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>t_safePara</Destination>
										<Source>SafePara</Source>
									</SetVariable>
									<SetVariable>
										<Destination>t_watchdog</Destination>
										<Source>SafePara.Watchdog</Source>
									</SetVariable>
								</SetVariables>
							</Action>
							<Informations2>
								<Information>
									<Type>Output</Type>
									<Value Param0="t_watchdog" Param1="SafeParaSize" Param2="t_safePara">Watchdog: {0} ms, SafeParaSize: {1}, Safe Parameter {2}</Value>
								</Information>
							</Informations2>
						</TestStep>
						<TestStep Name="GotoParameter">
							<Action>
								<CallFunction>
									<Reference>RUN_DUT_TO_PARAMETER</Reference>
								</CallFunction>
							</Action>
						</TestStep>
						<TestStep Name="SetMasterFrameData">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>t_connectionId</Destination>
										<Source>0</Source>
									</SetVariable>
									<SetVariable>
										<Destination>t_masterSeqNo</Destination>
										<Source>1</Source>
									</SetVariable>
									<SetVariable>
										<Destination>LastCrc</Destination>
										<Source>0</Source>
									</SetVariable>
									<SetVariable>
										<Destination>OldMasterCrc</Destination>
										<Source>0</Source>
									</SetVariable>
									<SetVariable>
										<Destination>c_tmpCommFaultReason</Destination>
										<Source>14</Source>
									</SetVariable>
									<SetVariable>
										<Destination DestinationIndex="0">c_safeData</Destination>
										<Source>c_tmpCommFaultReason</Source>
									</SetVariable>
								</SetVariables>
							</Action>
						</TestStep>
						<TestStep Name="SetFrame">
							<Informations1>
								<Information>
									<Type>Verbose</Type>
									<Value Param0="c_safeData" Param1="LastCrc" Param2="t_masterSeqNo" Param3="OldMasterCrc" Param4="0">SetFrame(Command Reset, SafeData {0}, LastCrc 0x{1:x4}, ConnectionId 0x{4:x4},  SequenceNo 0x{2:x4}, OldCrc 0x{3:x4}, New false</Value>
								</Information>
							</Informations1>
							<Action>
								<SetFrame Name="t_masterFrame">
									<Command>
										<CommandValue>Reset</CommandValue>
									</Command>
									<SafeData>
										<SafeDataVariable>c_safeData</SafeDataVariable>
									</SafeData>
									<LastCRC>LastCrc</LastCRC>
									<ConnectionID>
										<UshortValue>0</UshortValue>
									</ConnectionID>
									<SequenceNo>t_masterSeqNo</SequenceNo>
									<OldCRC>OldMasterCrc</OldCRC>
									<New>false</New>
								</SetFrame>
							</Action>
						</TestStep>
						<TestStep Name="SendFrame">
							<Action>
								<SendFrame Name="t_masterFrame"/>
							</Action>
							<Informations2>
								<Information>
									<Type>Verbose</Type>
									<Value Param0="t_masterFrame.FrameData">Master Frame: {0}</Value>
								</Information>
							</Informations2>
							<ReturnValue>
								<OnFailure>
									<Type>Error</Type>
									<Value>Failed to send FSoE frame!</Value>
									<Id>256</Id>
								</OnFailure>
							</ReturnValue>
						</TestStep>
						<TestStep Name="CheckReceivedSlaveFrame">
							<Action>
								<CallFunction>
									<Reference>CHECK_RESET_FAIL</Reference>
								</CallFunction>
							</Action>
							<ReturnValue>
								<OnSuccess>
									<Type>Success</Type>
									<Value Param0="c_CommFaultReason">Expected CommFaultReason ({0}) received</Value>
								</OnSuccess>
							</ReturnValue>
						</TestStep>
					</TestSteps>
				</TestCase>
				<TestCase Name="#4.57 Para_Reset1" CaseId="57">
					<Comment>Reset-Kommando vom Master mit CommFaultReason = 15</Comment>
					<CaseVariables>
						<Variable>
							<Name>c_CommFaultReason</Name>
							<Type>Byte</Type>
						</Variable>
						<Variable>
							<Name>c_tmpByte</Name>
							<Type>Byte</Type>
						</Variable>
						<Variable>
							<Name>c_tmpCommFaultReason</Name>
							<Type>Byte</Type>
						</Variable>
						<Variable>
							<Name>c_safeData[SafeDataLength]</Name>
							<Type>ArrayOfBytes</Type>
						</Variable>
					</CaseVariables>
					<TestSteps>
						<TestStep Name="SetVariables">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>c_CommFaultReason</Destination>
										<Source>0</Source>
									</SetVariable>
									<SetVariable>
										<Destination>c_tmpByte</Destination>
										<Source>0</Source>
									</SetVariable>
									<SetVariable>
										<Destination>t_masterSessionId</Destination>
										<Source>1</Source>
									</SetVariable>
								</SetVariables>
							</Action>
						</TestStep>
						<TestStep Name="SetConnectionData">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>t_connectionId</Destination>
										<Source>3</Source>
									</SetVariable>
									<SetVariable>
										<Destination DestinationIndex="0">t_connData</Destination>
										<Source>t_connectionId</Source>
									</SetVariable>
									<SetVariable>
										<Destination DestinationIndex="2">t_connData</Destination>
										<Source>ConnData.SlaveAddress</Source>
									</SetVariable>
								</SetVariables>
							</Action>
							<Informations2>
								<Information>
									<Type>Output</Type>
									<Value Param0="t_connectionId" Param1="ConnData.SlaveAddress" Param2="t_connData">ConnectionId: {0} (0x{0:x4}), Slave Address: {1} (0x{1:x4}), Connection Data {2}</Value>
								</Information>
							</Informations2>
						</TestStep>
						<TestStep Name="SetParameterData">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>t_safePara</Destination>
										<Source>SafePara</Source>
									</SetVariable>
									<SetVariable>
										<Destination>t_watchdog</Destination>
										<Source>SafePara.Watchdog</Source>
									</SetVariable>
								</SetVariables>
							</Action>
							<Informations2>
								<Information>
									<Type>Output</Type>
									<Value Param0="t_watchdog" Param1="SafeParaSize" Param2="t_safePara">Watchdog: {0} ms, SafeParaSize: {1}, Safe Parameter {2}</Value>
								</Information>
							</Informations2>
						</TestStep>
						<TestStep Name="GotoParameter">
							<Action>
								<CallFunction>
									<Reference>RUN_DUT_TO_PARAMETER</Reference>
								</CallFunction>
							</Action>
						</TestStep>
						<TestStep Name="SetMasterFrameData">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>t_connectionId</Destination>
										<Source>0</Source>
									</SetVariable>
									<SetVariable>
										<Destination>t_masterSeqNo</Destination>
										<Source>1</Source>
									</SetVariable>
									<SetVariable>
										<Destination>LastCrc</Destination>
										<Source>0</Source>
									</SetVariable>
									<SetVariable>
										<Destination>OldMasterCrc</Destination>
										<Source>0</Source>
									</SetVariable>
									<SetVariable>
										<Destination>c_tmpCommFaultReason</Destination>
										<Source>15</Source>
									</SetVariable>
									<SetVariable>
										<Destination DestinationIndex="0">c_safeData</Destination>
										<Source>c_tmpCommFaultReason</Source>
									</SetVariable>
								</SetVariables>
							</Action>
						</TestStep>
						<TestStep Name="SetFrame">
							<Informations1>
								<Information>
									<Type>Verbose</Type>
									<Value Param0="c_safeData" Param1="LastCrc" Param2="t_masterSeqNo" Param3="OldMasterCrc" Param4="0">SetFrame(Command Reset, SafeData {0}, LastCrc 0x{1:x4}, ConnectionId 0x{4:x4},  SequenceNo 0x{2:x4}, OldCrc 0x{3:x4}, New false</Value>
								</Information>
							</Informations1>
							<Action>
								<SetFrame Name="t_masterFrame">
									<Command>
										<CommandValue>Reset</CommandValue>
									</Command>
									<SafeData>
										<SafeDataVariable>c_safeData</SafeDataVariable>
									</SafeData>
									<LastCRC>LastCrc</LastCRC>
									<ConnectionID>
										<UshortValue>0</UshortValue>
									</ConnectionID>
									<SequenceNo>t_masterSeqNo</SequenceNo>
									<OldCRC>OldMasterCrc</OldCRC>
									<New>false</New>
								</SetFrame>
							</Action>
						</TestStep>
						<TestStep Name="SendFrame">
							<Action>
								<SendFrame Name="t_masterFrame"/>
							</Action>
							<Informations2>
								<Information>
									<Type>Verbose</Type>
									<Value Param0="t_masterFrame.FrameData">Master Frame: {0}</Value>
								</Information>
							</Informations2>
							<ReturnValue>
								<OnFailure>
									<Type>Error</Type>
									<Value>Failed to send FSoE frame!</Value>
									<Id>256</Id>
								</OnFailure>
							</ReturnValue>
						</TestStep>
						<TestStep Name="CheckReceivedSlaveFrame">
							<Action>
								<CallFunction>
									<Reference>CHECK_RESET_FAIL</Reference>
								</CallFunction>
							</Action>
							<ReturnValue>
								<OnSuccess>
									<Type>Success</Type>
									<Value Param0="c_CommFaultReason">Expected CommFaultReason ({0}) received</Value>
								</OnSuccess>
							</ReturnValue>
						</TestStep>
					</TestSteps>
				</TestCase>
				<TestCase Name="#4.58 Para_Reset1" CaseId="58">
					<Comment>Reset-Kommando vom Master mit CommFaultReason = 255</Comment>
					<CaseVariables>
						<Variable>
							<Name>c_CommFaultReason</Name>
							<Type>Byte</Type>
						</Variable>
						<Variable>
							<Name>c_tmpByte</Name>
							<Type>Byte</Type>
						</Variable>
						<Variable>
							<Name>c_tmpCommFaultReason</Name>
							<Type>Byte</Type>
						</Variable>
						<Variable>
							<Name>c_safeData[SafeDataLength]</Name>
							<Type>ArrayOfBytes</Type>
						</Variable>
					</CaseVariables>
					<TestSteps>
						<TestStep Name="SetVariables">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>c_CommFaultReason</Destination>
										<Source>0</Source>
									</SetVariable>
									<SetVariable>
										<Destination>c_tmpByte</Destination>
										<Source>0</Source>
									</SetVariable>
									<SetVariable>
										<Destination>t_masterSessionId</Destination>
										<Source>1</Source>
									</SetVariable>
								</SetVariables>
							</Action>
						</TestStep>
						<TestStep Name="SetConnectionData">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>t_connectionId</Destination>
										<Source>3</Source>
									</SetVariable>
									<SetVariable>
										<Destination DestinationIndex="0">t_connData</Destination>
										<Source>t_connectionId</Source>
									</SetVariable>
									<SetVariable>
										<Destination DestinationIndex="2">t_connData</Destination>
										<Source>ConnData.SlaveAddress</Source>
									</SetVariable>
								</SetVariables>
							</Action>
							<Informations2>
								<Information>
									<Type>Output</Type>
									<Value Param0="t_connectionId" Param1="ConnData.SlaveAddress" Param2="t_connData">ConnectionId: {0} (0x{0:x4}), Slave Address: {1} (0x{1:x4}), Connection Data {2}</Value>
								</Information>
							</Informations2>
						</TestStep>
						<TestStep Name="SetParameterData">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>t_safePara</Destination>
										<Source>SafePara</Source>
									</SetVariable>
									<SetVariable>
										<Destination>t_watchdog</Destination>
										<Source>SafePara.Watchdog</Source>
									</SetVariable>
								</SetVariables>
							</Action>
							<Informations2>
								<Information>
									<Type>Output</Type>
									<Value Param0="t_watchdog" Param1="SafeParaSize" Param2="t_safePara">Watchdog: {0} ms, SafeParaSize: {1}, Safe Parameter {2}</Value>
								</Information>
							</Informations2>
						</TestStep>
						<TestStep Name="GotoParameter">
							<Action>
								<CallFunction>
									<Reference>RUN_DUT_TO_PARAMETER</Reference>
								</CallFunction>
							</Action>
						</TestStep>
						<TestStep Name="SetMasterFrameData">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>t_connectionId</Destination>
										<Source>0</Source>
									</SetVariable>
									<SetVariable>
										<Destination>t_masterSeqNo</Destination>
										<Source>1</Source>
									</SetVariable>
									<SetVariable>
										<Destination>LastCrc</Destination>
										<Source>0</Source>
									</SetVariable>
									<SetVariable>
										<Destination>OldMasterCrc</Destination>
										<Source>0</Source>
									</SetVariable>
									<SetVariable>
										<Destination>c_tmpCommFaultReason</Destination>
										<Source>255</Source>
									</SetVariable>
									<SetVariable>
										<Destination DestinationIndex="0">c_safeData</Destination>
										<Source>c_tmpCommFaultReason</Source>
									</SetVariable>
								</SetVariables>
							</Action>
						</TestStep>
						<TestStep Name="SetFrame">
							<Informations1>
								<Information>
									<Type>Verbose</Type>
									<Value Param0="c_safeData" Param1="LastCrc" Param2="t_masterSeqNo" Param3="OldMasterCrc" Param4="0">SetFrame(Command Reset, SafeData {0}, LastCrc 0x{1:x4}, ConnectionId 0x{4:x4},  SequenceNo 0x{2:x4}, OldCrc 0x{3:x4}, New false</Value>
								</Information>
							</Informations1>
							<Action>
								<SetFrame Name="t_masterFrame">
									<Command>
										<CommandValue>Reset</CommandValue>
									</Command>
									<SafeData>
										<SafeDataVariable>c_safeData</SafeDataVariable>
									</SafeData>
									<LastCRC>LastCrc</LastCRC>
									<ConnectionID>
										<UshortValue>0</UshortValue>
									</ConnectionID>
									<SequenceNo>t_masterSeqNo</SequenceNo>
									<OldCRC>OldMasterCrc</OldCRC>
									<New>false</New>
								</SetFrame>
							</Action>
						</TestStep>
						<TestStep Name="SendFrame">
							<Action>
								<SendFrame Name="t_masterFrame"/>
							</Action>
							<Informations2>
								<Information>
									<Type>Verbose</Type>
									<Value Param0="t_masterFrame.FrameData">Master Frame: {0}</Value>
								</Information>
							</Informations2>
							<ReturnValue>
								<OnFailure>
									<Type>Error</Type>
									<Value>Failed to send FSoE frame!</Value>
									<Id>256</Id>
								</OnFailure>
							</ReturnValue>
						</TestStep>
						<TestStep Name="CheckReceivedSlaveFrame">
							<Action>
								<CallFunction>
									<Reference>CHECK_RESET_FAIL</Reference>
								</CallFunction>
							</Action>
							<ReturnValue>
								<OnSuccess>
									<Type>Success</Type>
									<Value Param0="c_CommFaultReason">Expected CommFaultReason ({0}) received</Value>
								</OnSuccess>
							</ReturnValue>
						</TestStep>
					</TestSteps>
				</TestCase>
				<TestCase Name="#4.59 Para_Reset2" CaseId="59">
					<Comment>Rücksetzen der Connection vom Master, nach Session</Comment>
					<CaseVariables>
						<Variable>
							<Name>c_sessionId1_Slave</Name>
							<Type>UInt16</Type>
						</Variable>
						<Variable>
							<Name>c_tmpByte</Name>
							<Type>Byte</Type>
						</Variable>
					</CaseVariables>
					<TestSteps>
						<TestStep Name="SetVariables">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>SecondSessionFrameSent</Destination>
										<Source>false</Source>
									</SetVariable>
									<SetVariable>
										<Destination>t_expectedConnId</Destination>
										<Source>0</Source>
									</SetVariable>
									<SetVariable>
										<Destination>t_masterSessionId</Destination>
										<Source>1</Source>
									</SetVariable>
								</SetVariables>
							</Action>
							<Compares>
								<Compare>
									<Condition>
										<Value1>SafeDataLength</Value1>
										<Operator>NotEqual</Operator>
										<Value2>1</Value2>
									</Condition>
									<Statement>
										<SetVariables>
											<SetVariable>
												<Destination>SecondSessionFrameSent</Destination>
												<Source>true</Source>
											</SetVariable>
										</SetVariables>
									</Statement>
								</Compare>
							</Compares>
						</TestStep>
						<TestStep Name="SetConnectionData">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>t_connectionId</Destination>
										<Source>3</Source>
									</SetVariable>
									<SetVariable>
										<Destination DestinationIndex="0">t_connData</Destination>
										<Source>t_connectionId</Source>
									</SetVariable>
									<SetVariable>
										<Destination DestinationIndex="2">t_connData</Destination>
										<Source>ConnData.SlaveAddress</Source>
									</SetVariable>
								</SetVariables>
							</Action>
							<Informations2>
								<Information>
									<Type>Output</Type>
									<Value Param0="t_connectionId" Param1="ConnData.SlaveAddress" Param2="t_connData">ConnectionId: {0} (0x{0:x4}), Slave Address: {1} (0x{1:x4}), Connection Data {2}</Value>
								</Information>
							</Informations2>
						</TestStep>
						<TestStep Name="SetParameterData">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>t_safePara</Destination>
										<Source>SafePara</Source>
									</SetVariable>
									<SetVariable>
										<Destination>t_watchdog</Destination>
										<Source>SafePara.Watchdog</Source>
									</SetVariable>
								</SetVariables>
							</Action>
							<Informations2>
								<Information>
									<Type>Output</Type>
									<Value Param0="t_watchdog" Param1="SafeParaSize" Param2="t_safePara">Watchdog: {0} ms, SafeParaSize: {1}, Safe Parameter {2}</Value>
								</Information>
							</Informations2>
						</TestStep>
						<TestStep Name="GotoParameter">
							<Action>
								<CallFunction>
									<Reference>RUN_DUT_TO_PARAMETER</Reference>
								</CallFunction>
							</Action>
						</TestStep>
						<TestStep Name="StoreSlaveSessionId1">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>c_sessionId1_Slave</Destination>
										<Source>t_slaveSessionId</Source>
									</SetVariable>
									<SetVariable>
										<Destination>t_index</Destination>
										<Source>0</Source>
									</SetVariable>
								</SetVariables>
							</Action>
							<Informations2>
								<Information>
									<Type>Output</Type>
									<Value Param0="t_slaveSessionId">Slave SessionId1: 0x{0:x4}</Value>
								</Information>
							</Informations2>
						</TestStep>
						<TestStep Name="ResetSecondSessionFrameSent">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>SecondSessionFrameSent</Destination>
										<Source>false</Source>
									</SetVariable>
								</SetVariables>
							</Action>
							<Compares>
								<Compare>
									<Condition>
										<Value1>SafeDataLength</Value1>
										<Operator>NotEqual</Operator>
										<Value2>1</Value2>
									</Condition>
									<Statement>
										<SetVariables>
											<SetVariable>
												<Destination>SecondSessionFrameSent</Destination>
												<Source>true</Source>
											</SetVariable>
										</SetVariables>
									</Statement>
								</Compare>
							</Compares>
						</TestStep>
						<TestStep Name="SetSessionId">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>t_masterSessionId</Destination>
										<Source>1</Source>
									</SetVariable>
								</SetVariables>
							</Action>
						</TestStep>
						<TestStep Name="CallParameterReset1">
							<Action>
								<CallFunction>
									<Reference>PARA_RESET1</Reference>
								</CallFunction>
							</Action>
						</TestStep>
						<TestStep Name="ReceiveEvent">
							<Event>
								<ReceiveFrame>t_slaveFrame</ReceiveFrame>
							</Event>
							<Informations2>
								<Information>
									<Type>Verbose</Type>
									<Value Param0="t_slaveFrame.FrameData">Slave Frame: {0}</Value>
								</Information>
							</Informations2>
						</TestStep>
						<TestStep Name="CheckWatchdog">
							<Event>
								<WatchdogExpired>
									<SetVariables>
										<SetVariable>
											<Destination>t_wdExpired</Destination>
											<Source>true</Source>
										</SetVariable>
									</SetVariables>
								</WatchdogExpired>
							</Event>
							<Compares>
								<Compare>
									<Condition>
										<Value1>t_wdExpired</Value1>
										<Operator>Equal</Operator>
										<Value2>true</Value2>
									</Condition>
									<Statement>
										<SetVariables>
											<SetVariable>
												<Destination>t_wdExpired</Destination>
												<Source>false</Source>
											</SetVariable>
										</SetVariables>
									</Statement>
									<Statement>
										<Return>
											<Type>Error</Type>
											<Value Param0="ElapsedWD">Watchdog expired! {0} ms </Value>
											<Id>5</Id>
										</Return>
									</Statement>
								</Compare>
							</Compares>
						</TestStep>
						<TestStep Name="CheckReceivedCrc">
							<Informations1>
								<Information>
									<Type>Verbose</Type>
									<Value Param0="t_slaveFrame.FrameData" Param1="LastCrc" Param2="t_slaveSeqNo" Param3="t_oldSlaveCrc" Param4="true">IsCrcCorrect(Frame {0}, LastCrc 0x{1:X4}, SeqNo {2}, OldCrc 0x{3:X4}, New {4})</Value>
								</Information>
							</Informations1>
							<Action>
								<IsCrcCorrect ReturnValue="crcCorrect">
									<Frame>t_slaveFrame</Frame>
									<LastCrc>LastCrc</LastCrc>
									<SequenceNo>t_slaveSeqNo</SequenceNo>
									<OldCrc>t_oldSlaveCrc</OldCrc>
									<New>true</New>
								</IsCrcCorrect>
							</Action>
							<ReturnValue>
								<OnFailure>
									<Type>Error</Type>
									<Value Param0="t_slaveFrame.Crc0">Invalid Crc0 reveived ({0:x})</Value>
									<Id>4</Id>
								</OnFailure>
							</ReturnValue>
						</TestStep>
						<TestStep Name="CheckSessionConditions">
							<Compares>
								<Compare>
									<Condition>
										<Value1>t_slaveFrame.ConnId</Value1>
										<Operator>NotEqual</Operator>
										<Value2>t_expectedConnId</Value2>
									</Condition>
									<Statement>
										<Return>
											<Type>Error</Type>
											<Value Param0="t_slaveFrame.ConnId">Invalid ConnId received  {0}, expected 0</Value>
											<Id>3</Id>
										</Return>
									</Statement>
								</Compare>
								<Compare>
									<Condition>
										<Value1>t_slaveFrame.Command</Value1>
										<Operator>Equal</Operator>
										<Value2>Session</Value2>
									</Condition>
									<Condition>
										<Value1>BytesToBeSent</Value1>
										<Operator>Equal</Operator>
										<Value2>0</Value2>
									</Condition>
									<Condition>
										<Value1>crcCorrect</Value1>
										<Operator>Equal</Operator>
										<Value2>true</Value2>
									</Condition>
									<Statement>
										<SetVariables>
											<SetVariable>
												<Destination DestinationIndex="t_index">t_slaveSessionId</Destination>
												<Source>t_slaveFrame.SafeData</Source>
											</SetVariable>
										</SetVariables>
									</Statement>
									<Statement>
										<CallFunction>CHECK_REMAINING_SAFE_DATA_IN_SESSION</CallFunction>
									</Statement>
									<Statement>
										<GotoStep>CompareSlaveSessionIds</GotoStep>
									</Statement>
								</Compare>
								<Compare>
									<Condition>
										<Value1>t_slaveFrame.Command</Value1>
										<Operator>Equal</Operator>
										<Value2>Session</Value2>
									</Condition>
									<Condition>
										<Value1>crcCorrect</Value1>
										<Operator>Equal</Operator>
										<Value2>false</Value2>
									</Condition>
									<Condition>
										<Value1>SecondSessionFrameSent</Value1>
										<Operator>Equal</Operator>
										<Value2>true</Value2>
									</Condition>
									<Statement>
										<Return>
											<Type>Error</Type>
											<Value>Invalid Crc received</Value>
											<Id>4</Id>
										</Return>
									</Statement>
								</Compare>
								<Compare>
									<Condition>
										<Value1>t_slaveFrame.Command</Value1>
										<Operator>Equal</Operator>
										<Value2>Session</Value2>
									</Condition>
									<Condition>
										<Value1>crcCorrect</Value1>
										<Operator>Equal</Operator>
										<Value2>false</Value2>
									</Condition>
									<Condition>
										<Value1>SecondSessionFrameSent</Value1>
										<Operator>Equal</Operator>
										<Value2>false</Value2>
									</Condition>
									<Statement>
										<CallFunction>SESSION_STAY2</CallFunction>
									</Statement>
									<Statement>
										<GotoStep>ReceiveEvent</GotoStep>
									</Statement>
								</Compare>
								<Compare>
									<Condition>
										<Value1>t_slaveFrame.Command</Value1>
										<Operator>Equal</Operator>
										<Value2>Session</Value2>
									</Condition>
									<Condition>
										<Value1>BytesToBeSent</Value1>
										<Operator>NotEqual</Operator>
										<Value2>0</Value2>
									</Condition>
									<Condition>
										<Value1>crcCorrect</Value1>
										<Operator>Equal</Operator>
										<Value2>true</Value2>
									</Condition>
									<Statement>
										<SetVariables>
											<SetVariable>
												<Destination DestinationIndex="t_index">t_slaveSessionId</Destination>
												<Source>t_slaveFrame.SafeData</Source>
											</SetVariable>
										</SetVariables>
									</Statement>
									<Statement>
										<CallFunction>SESSION_STAY1</CallFunction>
									</Statement>
									<Statement>
										<SetVariables>
											<SetVariable>
												<Destination>t_index</Destination>
												<Source>t_index+SafeDataLength</Source>
											</SetVariable>
										</SetVariables>
									</Statement>
									<Statement>
										<CallFunction>CHECK_REMAINING_SAFE_DATA_IN_SESSION</CallFunction>
									</Statement>
									<Statement>
										<GotoStep>ReceiveEvent</GotoStep>
									</Statement>
								</Compare>
								<Compare>
									<Condition>
										<Value1>t_slaveFrame.Command</Value1>
										<Operator>Equal</Operator>
										<Value2>Reset</Value2>
									</Condition>
									<Statement>
										<Return>
											<Type>Error</Type>
											<Value>Invalid CMD(Reset) received</Value>
											<Id>1</Id>
										</Return>
									</Statement>
								</Compare>
								<Compare>
									<Condition>
										<Value1>t_slaveFrame.Command</Value1>
										<Operator>Equal</Operator>
										<Value2>Connection</Value2>
									</Condition>
									<Statement>
										<Return>
											<Type>Error</Type>
											<Value>Invalid CMD(Connection) received</Value>
											<Id>1</Id>
										</Return>
									</Statement>
								</Compare>
								<Compare>
									<Condition>
										<Value1>t_slaveFrame.Command</Value1>
										<Operator>Equal</Operator>
										<Value2>Parameter</Value2>
									</Condition>
									<Statement>
										<Return>
											<Type>Error</Type>
											<Value>Invalid CMD (Parameter) received</Value>
											<Id>1</Id>
										</Return>
									</Statement>
								</Compare>
								<Compare>
									<Condition>
										<Value1>t_slaveFrame.Command</Value1>
										<Operator>Equal</Operator>
										<Value2>ProcessData</Value2>
									</Condition>
									<Statement>
										<Return>
											<Type>Error</Type>
											<Value>Invalid CMD (ProcessData) received</Value>
											<Id>1</Id>
										</Return>
									</Statement>
								</Compare>
								<Compare>
									<Condition>
										<Value1>t_slaveFrame.Command</Value1>
										<Operator>Equal</Operator>
										<Value2>FailSafeData</Value2>
									</Condition>
									<Statement>
										<Return>
											<Type>Error</Type>
											<Value>Invalid CMD (FailSafeData) received</Value>
											<Id>1</Id>
										</Return>
									</Statement>
								</Compare>
								<Compare>
									<Condition>
										<Value1>t_slaveFrame.Command</Value1>
										<Operator>NotEqual</Operator>
										<Value2>Reset</Value2>
									</Condition>
									<Condition>
										<Value1>t_slaveFrame.Command</Value1>
										<Operator>NotEqual</Operator>
										<Value2>Session</Value2>
									</Condition>
									<Condition>
										<Value1>t_slaveFrame.Command</Value1>
										<Operator>NotEqual</Operator>
										<Value2>Connection</Value2>
									</Condition>
									<Condition>
										<Value1>t_slaveFrame.Command</Value1>
										<Operator>NotEqual</Operator>
										<Value2>Parameter</Value2>
									</Condition>
									<Condition>
										<Value1>t_slaveFrame.Command</Value1>
										<Operator>NotEqual</Operator>
										<Value2>ProcessData</Value2>
									</Condition>
									<Condition>
										<Value1>t_slaveFrame.Command</Value1>
										<Operator>NotEqual</Operator>
										<Value2>FailSafeData</Value2>
									</Condition>
									<Statement>
										<Return>
											<Type>Error</Type>
											<Value>Unknown CMD received</Value>
											<Id>2</Id>
										</Return>
									</Statement>
								</Compare>
							</Compares>
						</TestStep>
						<TestStep Name="CompareSlaveSessionIds">
							<Compares>
								<Compare>
									<Condition>
										<Value1>c_sessionId1_Slave</Value1>
										<Operator>NotEqual</Operator>
										<Value2>t_slaveSessionId</Value2>
									</Condition>
									<Statement>
										<Return>
											<Type>Success</Type>
											<Value>DUT State: Session</Value>
										</Return>
									</Statement>
								</Compare>
								<Compare>
									<Condition>
										<Value1>c_sessionId1_Slave</Value1>
										<Operator>Equal</Operator>
										<Value2>t_slaveSessionId</Value2>
									</Condition>
									<Statement>
										<Return>
											<Type>Error</Type>
											<Value Param0="c_sessionId1_Slave" Param1="t_slaveSessionId">Slave SessionId1 (0x{0:x4}) = Slave SessionId2 (0x{1:x4})</Value>
										</Return>
									</Statement>
								</Compare>
							</Compares>
							<Informations2>
								<Information>
									<Type>Output</Type>
									<Value Param0="t_slaveSessionId">Slave SessionId2: 0x{0:x4}</Value>
								</Information>
							</Informations2>
						</TestStep>
					</TestSteps>
				</TestCase>
				<TestCase Name="#4.60 Para_Ok2" CaseId="60">
					<Comment>normaler Hochlauf mit FailsafeData aber SafeOutputs != 0</Comment>
					<CaseVariables>
						<Variable>
							<Name>c_index</Name>
							<Type>Int32</Type>
						</Variable>
						<Variable>
							<Name>c_tmpByte</Name>
							<Type>Byte</Type>
						</Variable>
						<Variable>
							<Name>c_maxByte</Name>
							<Type>Byte</Type>
						</Variable>
						<Variable>
							<Name>c_outputs[SafeDataLength]</Name>
							<Type>ArrayOfBytes</Type>
						</Variable>
						<Variable>
							<Name>c_byte</Name>
							<Type>Byte</Type>
						</Variable>
					</CaseVariables>
					<TestSteps>
						<TestStep Name="SetDataCmd">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>DataCommand</Destination>
										<Source>FailSafeData</Source>
									</SetVariable>
								</SetVariables>
							</Action>
							<ReturnValue>
								<OnFailure>
									<Type>Error</Type>
									<Value>Failed to set DataCommand</Value>
								</OnFailure>
							</ReturnValue>
						</TestStep>
						<TestStep Name="SetSessionId">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>t_masterSessionId</Destination>
										<Source>1</Source>
									</SetVariable>
								</SetVariables>
							</Action>
						</TestStep>
						<TestStep Name="SetSafeOutputsData">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>c_maxByte</Destination>
										<Source>255</Source>
									</SetVariable>
								</SetVariables>
							</Action>
						</TestStep>
						<TestStep Name="SetSafeOutputsData" From="0" To="SafeDataLength">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination DestinationIndex="c_index">c_outputs</Destination>
										<Source>c_byte</Source>
									</SetVariable>
									<SetVariable>
										<Destination>c_index</Destination>
										<Source>c_index+1</Source>
									</SetVariable>
									<SetVariable>
										<Destination>c_byte</Destination>
										<Source>c_byte+1</Source>
									</SetVariable>
								</SetVariables>
							</Action>
							<Compares>
								<Compare>
									<Condition>
										<Value1>c_byte</Value1>
										<Operator>Equal</Operator>
										<Value2>c_maxByte</Value2>
									</Condition>
									<Statement>
										<SetVariables>
											<SetVariable>
												<Destination>c_byte</Destination>
												<Source>0</Source>
											</SetVariable>
										</SetVariables>
									</Statement>
								</Compare>
							</Compares>
							<ReturnValue>
								<OnFailure>
									<Type>Error</Type>
									<Value>Failed to set SafeOutputs</Value>
								</OnFailure>
							</ReturnValue>
						</TestStep>
						<TestStep Name="SetConnectionData">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>t_connectionId</Destination>
										<Source>3</Source>
									</SetVariable>
									<SetVariable>
										<Destination DestinationIndex="0">t_connData</Destination>
										<Source>t_connectionId</Source>
									</SetVariable>
									<SetVariable>
										<Destination DestinationIndex="2">t_connData</Destination>
										<Source>ConnData.SlaveAddress</Source>
									</SetVariable>
								</SetVariables>
							</Action>
							<Informations2>
								<Information>
									<Type>Output</Type>
									<Value Param0="SafeOutputs">Safeoutputs: {0}</Value>
								</Information>
								<Information>
									<Type>Output</Type>
									<Value Param0="t_connectionId" Param1="ConnData.SlaveAddress" Param2="t_connData">ConnectionId: {0} (0x{0:x4}), Slave Address: {1} (0x{1:x4}), Connection Data {2}</Value>
								</Information>
							</Informations2>
						</TestStep>
						<TestStep Name="SetParameterData">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>t_safePara</Destination>
										<Source>SafePara</Source>
									</SetVariable>
									<SetVariable>
										<Destination>t_watchdog</Destination>
										<Source>SafePara.Watchdog</Source>
									</SetVariable>
								</SetVariables>
							</Action>
							<Informations2>
								<Information>
									<Type>Output</Type>
									<Value Param0="t_watchdog" Param1="SafeParaSize" Param2="t_safePara">Watchdog: {0} ms, SafeParaSize: {1}, Safe Parameter {2}</Value>
								</Information>
							</Informations2>
						</TestStep>
						<TestStep Name="GotoData">
							<Action>
								<CallFunction>
									<Reference>RUN_DUT_TO_DATA</Reference>
								</CallFunction>
							</Action>
							<ReturnValue>
								<OnSuccess>
									<Type>Success</Type>
									<Value>DUT State: Data</Value>
								</OnSuccess>
							</ReturnValue>
						</TestStep>
					</TestSteps>
				</TestCase>
			</TestCases>
		</TestGroup>
		<TestGroup Name="#5 Data State" GroupId="5">
			<Comment>Tests the Data State</Comment>
			<TestCases>
				<TestCase Name="#5.1 Data_Ok1" CaseId="1">
					<Comment>normaler Austausch mit ProcessData bis die SlaveSequenceNo = 257 überschritten wurde.</Comment>
					<CaseVariables>
						<Variable>
							<Name>c_tmpByte</Name>
							<Type>Byte</Type>
						</Variable>
						<Variable>
							<Name>c_maxSeqNo</Name>
							<Type>UInt16</Type>
						</Variable>
					</CaseVariables>
					<TestSteps>
						<TestStep Name="SetMaxSeqNo">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>c_maxSeqNo</Destination>
										<Source>257</Source>
									</SetVariable>
								</SetVariables>
							</Action>
						</TestStep>
						<TestStep Name="SetConnectionData">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>t_connectionId</Destination>
										<Source>3</Source>
									</SetVariable>
									<SetVariable>
										<Destination DestinationIndex="0">t_connData</Destination>
										<Source>t_connectionId</Source>
									</SetVariable>
									<SetVariable>
										<Destination DestinationIndex="2">t_connData</Destination>
										<Source>ConnData.SlaveAddress</Source>
									</SetVariable>
								</SetVariables>
							</Action>
							<Informations2>
								<Information>
									<Type>Output</Type>
									<Value Param0="t_connectionId" Param1="ConnData.SlaveAddress" Param2="t_connData">ConnectionId: {0} (0x{0:x4}), Slave Address: {1} (0x{1:x4}), Connection Data {2}</Value>
								</Information>
							</Informations2>
						</TestStep>
						<TestStep Name="SetParameterData">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>t_safePara</Destination>
										<Source>SafePara</Source>
									</SetVariable>
									<SetVariable>
										<Destination>t_watchdog</Destination>
										<Source>SafePara.Watchdog</Source>
									</SetVariable>
								</SetVariables>
							</Action>
							<Informations2>
								<Information>
									<Type>Output</Type>
									<Value Param0="t_watchdog" Param1="SafeParaSize" Param2="t_safePara">Watchdog: {0} ms, SafeParaSize: {1}, Safe Parameter {2}</Value>
								</Information>
							</Informations2>
						</TestStep>
						<TestStep Name="GoToParameter">
							<Action>
								<CallFunction>
									<Reference>RUN_DUT_TO_PARAMETER</Reference>
								</CallFunction>
							</Action>
						</TestStep>
						<TestStep Name="SetDataCmd">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>DataCommand</Destination>
										<Source>ProcessData</Source>
									</SetVariable>
								</SetVariables>
							</Action>
						</TestStep>
						<TestStep Name="CallParaOk">
							<Action>
								<CallFunction>
									<Reference>PARA_OK</Reference>
								</CallFunction>
							</Action>
						</TestStep>
						<TestStep Name="ReceiveEvent">
							<Event>
								<ReceiveFrame>t_slaveFrame</ReceiveFrame>
							</Event>
							<Informations2>
								<Information>
									<Type>Verbose</Type>
									<Value Param0="t_slaveFrame.FrameData">Slave Frame: {0}</Value>
								</Information>
							</Informations2>
						</TestStep>
						<TestStep Name="CheckWatchdog">
							<Event>
								<WatchdogExpired>
									<Return>
										<Type>Error</Type>
										<Value Param0="ElapsedWD">Watchdog expired!  {0} ms</Value>
										<Id>5</Id>
									</Return>
								</WatchdogExpired>
							</Event>
						</TestStep>
						<TestStep Name="CheckReceivedCrc">
							<Action>
								<IsCrcCorrect ReturnValue="crcCorrect">
									<Frame>t_slaveFrame</Frame>
									<LastCrc>LastCrc</LastCrc>
									<SequenceNo>t_slaveSeqNo</SequenceNo>
									<OldCrc>t_oldSlaveCrc</OldCrc>
									<New>true</New>
								</IsCrcCorrect>
							</Action>
							<ReturnValue>
								<OnFailure>
									<Type>Error</Type>
									<Value Param0="t_slaveFrame.Crc0">Invalid Crc0 reveived ({0:x})</Value>
									<Id>4</Id>
								</OnFailure>
							</ReturnValue>
						</TestStep>
						<TestStep Name="CheckDataCondition">
							<Compares>
								<Compare>
									<Condition>
										<Value1>t_slaveSeqNo</Value1>
										<Operator>Equal</Operator>
										<Value2>c_maxSeqNo</Value2>
									</Condition>
									<Statement>
										<Return>
											<Type>Success</Type>
											<Value Param0="c_maxSeqNo">SlaveSeqNo = {0}</Value>
										</Return>
									</Statement>
								</Compare>
								<Compare>
									<Condition>
										<Value1>t_slaveFrame.Command</Value1>
										<Operator>Equal</Operator>
										<Value2>ProcessData</Value2>
									</Condition>
									<Condition>
										<Value1>t_slaveFrame.ConnId</Value1>
										<Operator>Equal</Operator>
										<Value2>t_connectionId</Value2>
									</Condition>
									<Condition>
										<Value1>crcCorrect</Value1>
										<Operator>Equal</Operator>
										<Value2>true</Value2>
									</Condition>
									<Statement>
										<CallFunction>DATA_OK1</CallFunction>
									</Statement>
									<Statement>
										<GotoStep>ReceiveEvent</GotoStep>
									</Statement>
								</Compare>
								<Compare>
									<Condition>
										<Value1>t_slaveFrame.Command</Value1>
										<Operator>Equal</Operator>
										<Value2>FailSafeData</Value2>
									</Condition>
									<Condition>
										<Value1>t_slaveFrame.ConnId</Value1>
										<Operator>Equal</Operator>
										<Value2>t_connectionId</Value2>
									</Condition>
									<Condition>
										<Value1>crcCorrect</Value1>
										<Operator>Equal</Operator>
										<Value2>true</Value2>
									</Condition>
									<Statement>
										<CallFunction>DATA_OK2</CallFunction>
									</Statement>
									<Statement>
										<GotoStep>ReceiveEvent</GotoStep>
									</Statement>
								</Compare>
								<Compare>
									<Condition>
										<Value1>t_slaveFrame.Command</Value1>
										<Operator>Equal</Operator>
										<Value2>ProcessData</Value2>
									</Condition>
									<Condition>
										<Value1>t_slaveFrame.ConnId</Value1>
										<Operator>Equal</Operator>
										<Value2>t_connectionId</Value2>
									</Condition>
									<Condition>
										<Value1>crcCorrect</Value1>
										<Operator>Equal</Operator>
										<Value2>false</Value2>
									</Condition>
									<Statement>
										<Return>
											<Type>Error</Type>
											<Value>Invalid Crc received</Value>
											<Id>4</Id>
										</Return>
									</Statement>
								</Compare>
								<Compare>
									<Condition>
										<Value1>t_slaveFrame.Command</Value1>
										<Operator>Equal</Operator>
										<Value2>ProcessData</Value2>
									</Condition>
									<Condition>
										<Value1>t_slaveFrame.ConnId</Value1>
										<Operator>NotEqual</Operator>
										<Value2>t_connectionId</Value2>
									</Condition>
									<Statement>
										<Return>
											<Type>Error</Type>
											<Value>Invalid Connection Id received</Value>
											<Id>3</Id>
										</Return>
									</Statement>
								</Compare>
								<Compare>
									<Condition>
										<Value1>t_slaveFrame.Command</Value1>
										<Operator>Equal</Operator>
										<Value2>FailSafeData</Value2>
									</Condition>
									<Condition>
										<Value1>t_slaveFrame.ConnId</Value1>
										<Operator>NotEqual</Operator>
										<Value2>t_connectionId</Value2>
									</Condition>
									<Statement>
										<Return>
											<Type>Error</Type>
											<Value>Invalid Connection Id received||Back to Reset</Value>
										</Return>
									</Statement>
								</Compare>
								<Compare>
									<Condition>
										<Value1>t_slaveFrame.Command</Value1>
										<Operator>Equal</Operator>
										<Value2>Reset</Value2>
									</Condition>
									<Statement>
										<CallFunction>GET_COMM_FAULT_REASON</CallFunction>
									</Statement>
									<Statement>
										<Return>
											<Type>Error</Type>
											<Value Param0="t_commFaultReason">Reset Cmd received , CommFaultReason: {0}</Value>
										</Return>
									</Statement>
								</Compare>
								<Compare>
									<Condition>
										<Value1>t_slaveFrame.Command</Value1>
										<Operator>Equal</Operator>
										<Value2>Session</Value2>
									</Condition>
									<Statement>
										<Return>
											<Type>Error</Type>
											<Value>Invalid Session Cmd received</Value>
										</Return>
									</Statement>
								</Compare>
								<Compare>
									<Condition>
										<Value1>t_slaveFrame.Command</Value1>
										<Operator>Equal</Operator>
										<Value2>Connection</Value2>
									</Condition>
									<Statement>
										<Return>
											<Type>Error</Type>
											<Value>Invalid Connection Cmd received</Value>
										</Return>
									</Statement>
								</Compare>
								<Compare>
									<Condition>
										<Value1>t_slaveFrame.Command</Value1>
										<Operator>Equal</Operator>
										<Value2>Parameter</Value2>
									</Condition>
									<Statement>
										<Return>
											<Type>Error</Type>
											<Value>Invalid Parameter Cmd received</Value>
										</Return>
									</Statement>
								</Compare>
								<Compare>
									<Condition>
										<Value1>t_slaveFrame.Command</Value1>
										<Operator>NotEqual</Operator>
										<Value2>Reset</Value2>
									</Condition>
									<Condition>
										<Value1>t_slaveFrame.Command</Value1>
										<Operator>NotEqual</Operator>
										<Value2>Session</Value2>
									</Condition>
									<Condition>
										<Value1>t_slaveFrame.Command</Value1>
										<Operator>NotEqual</Operator>
										<Value2>Connection</Value2>
									</Condition>
									<Condition>
										<Value1>t_slaveFrame.Command</Value1>
										<Operator>NotEqual</Operator>
										<Value2>Parameter</Value2>
									</Condition>
									<Condition>
										<Value1>t_slaveFrame.Command</Value1>
										<Operator>NotEqual</Operator>
										<Value2>ProcessData</Value2>
									</Condition>
									<Condition>
										<Value1>t_slaveFrame.Command</Value1>
										<Operator>NotEqual</Operator>
										<Value2>FailSafeData</Value2>
									</Condition>
									<Statement>
										<Return>
											<Type>Error</Type>
											<Value>Unknown CMD received</Value>
											<Id>2</Id>
										</Return>
									</Statement>
								</Compare>
								<Compare>
									<Condition>
										<Value1>1</Value1>
										<Operator>Equal</Operator>
										<Value2>1</Value2>
									</Condition>
									<Statement>
										<Return>
											<Type>Error</Type>
											<Value>General state machine error!</Value>
										</Return>
									</Statement>
								</Compare>
							</Compares>
						</TestStep>
					</TestSteps>
				</TestCase>
				<TestCase Name="#5.1a Data_Ok1" CaseId="2">
					<Comment>normaler Hochlauf mit connId = 1.</Comment>
					<CaseVariables>
						<Variable>
							<Name>c_tmpByte</Name>
							<Type>Byte</Type>
						</Variable>
						<Variable>
							<Name>c_dataOk</Name>
							<Type>Bool</Type>
						</Variable>
					</CaseVariables>
					<TestSteps>
						<TestStep Name="SetConnectionData">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>t_connectionId</Destination>
										<Source>1</Source>
									</SetVariable>
									<SetVariable>
										<Destination DestinationIndex="0">t_connData</Destination>
										<Source>t_connectionId</Source>
									</SetVariable>
									<SetVariable>
										<Destination DestinationIndex="2">t_connData</Destination>
										<Source>ConnData.SlaveAddress</Source>
									</SetVariable>
								</SetVariables>
							</Action>
							<Informations2>
								<Information>
									<Type>Output</Type>
									<Value Param0="t_connectionId" Param1="ConnData.SlaveAddress" Param2="t_connData">ConnectionId: {0} (0x{0:x4}), Slave Address: {1} (0x{1:x4}), Connection Data {2}</Value>
								</Information>
							</Informations2>
						</TestStep>
						<TestStep Name="SetParameterData">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>t_safePara</Destination>
										<Source>SafePara</Source>
									</SetVariable>
									<SetVariable>
										<Destination>t_watchdog</Destination>
										<Source>SafePara.Watchdog</Source>
									</SetVariable>
								</SetVariables>
							</Action>
							<Informations2>
								<Information>
									<Type>Output</Type>
									<Value Param0="t_watchdog" Param1="SafeParaSize" Param2="t_safePara">Watchdog: {0} ms, SafeParaSize: {1}, Safe Parameter {2}</Value>
								</Information>
							</Informations2>
						</TestStep>
						<TestStep Name="GoToParameter">
							<Action>
								<CallFunction>
									<Reference>RUN_DUT_TO_PARAMETER</Reference>
								</CallFunction>
							</Action>
						</TestStep>
						<TestStep Name="SetDataCmd">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>DataCommand</Destination>
										<Source>ProcessData</Source>
									</SetVariable>
								</SetVariables>
							</Action>
						</TestStep>
						<TestStep Name="CallParaOk">
							<Action>
								<CallFunction>
									<Reference>PARA_OK</Reference>
								</CallFunction>
							</Action>
						</TestStep>
						<TestStep Name="ReceiveEvent">
							<Event>
								<ReceiveFrame>t_slaveFrame</ReceiveFrame>
							</Event>
							<Informations2>
								<Information>
									<Type>Verbose</Type>
									<Value Param0="t_slaveFrame.FrameData">Slave Frame: {0}</Value>
								</Information>
							</Informations2>
						</TestStep>
						<TestStep Name="CheckWatchdog">
							<Event>
								<WatchdogExpired>
									<Return>
										<Type>Error</Type>
										<Value Param0="ElapsedWD">Watchdog expired!  {0} ms</Value>
										<Id>5</Id>
									</Return>
								</WatchdogExpired>
							</Event>
						</TestStep>
						<TestStep Name="CheckReceivedCrc">
							<Informations1>
								<Information>
									<Type>Verbose</Type>
									<Value Param0="t_slaveFrame.FrameData" Param1="LastCrc" Param2="t_slaveSeqNo" Param3="t_oldSlaveCrc" Param4="true">IsCrcCorrect(Frame {0}, LastCrc 0x{1:X4}, SeqNo {2}, OldCrc 0x{3:X4}, New {4})</Value>
								</Information>
							</Informations1>
							<Action>
								<IsCrcCorrect ReturnValue="crcCorrect">
									<Frame>t_slaveFrame</Frame>
									<LastCrc>LastCrc</LastCrc>
									<SequenceNo>t_slaveSeqNo</SequenceNo>
									<OldCrc>t_oldSlaveCrc</OldCrc>
									<New>true</New>
								</IsCrcCorrect>
							</Action>
							<ReturnValue>
								<OnFailure>
									<Type>Error</Type>
									<Value Param0="t_slaveFrame.Crc0">Invalid Crc0 reveived ({0:x})</Value>
									<Id>4</Id>
								</OnFailure>
							</ReturnValue>
						</TestStep>
						<TestStep Name="CheckDataCondition">
							<Compares>
								<Compare>
									<Condition>
										<Value1>c_dataOk</Value1>
										<Operator>Equal</Operator>
										<Value2>true</Value2>
									</Condition>
									<Condition>
										<Value1>t_slaveFrame.Command</Value1>
										<Operator>Equal</Operator>
										<Value2>ProcessData</Value2>
									</Condition>
									<Condition>
										<Value1>t_slaveFrame.ConnId</Value1>
										<Operator>Equal</Operator>
										<Value2>t_connectionId</Value2>
									</Condition>
									<Condition>
										<Value1>crcCorrect</Value1>
										<Operator>Equal</Operator>
										<Value2>true</Value2>
									</Condition>
									<Statement>
										<Return>
											<Type>Success</Type>
											<Value Param0="t_connectionId">DuT state DATA (ProcessData), ConnectionId {0}</Value>
										</Return>
									</Statement>
								</Compare>
								<Compare>
									<Condition>
										<Value1>c_dataOk</Value1>
										<Operator>Equal</Operator>
										<Value2>true</Value2>
									</Condition>
									<Condition>
										<Value1>t_slaveFrame.Command</Value1>
										<Operator>Equal</Operator>
										<Value2>FailSafeData</Value2>
									</Condition>
									<Condition>
										<Value1>t_slaveFrame.ConnId</Value1>
										<Operator>Equal</Operator>
										<Value2>t_connectionId</Value2>
									</Condition>
									<Condition>
										<Value1>crcCorrect</Value1>
										<Operator>Equal</Operator>
										<Value2>true</Value2>
									</Condition>
									<Statement>
										<Return>
											<Type>Success</Type>
											<Value Param0="t_connectionId">DuT state DATA (FailSafeData), ConnectionId {0}</Value>
										</Return>
									</Statement>
								</Compare>
								<Compare>
									<Condition>
										<Value1>t_slaveFrame.Command</Value1>
										<Operator>Equal</Operator>
										<Value2>ProcessData</Value2>
									</Condition>
									<Condition>
										<Value1>t_slaveFrame.ConnId</Value1>
										<Operator>Equal</Operator>
										<Value2>t_connectionId</Value2>
									</Condition>
									<Condition>
										<Value1>crcCorrect</Value1>
										<Operator>Equal</Operator>
										<Value2>true</Value2>
									</Condition>
									<Statement>
										<CallFunction>DATA_OK1</CallFunction>
									</Statement>
									<Statement>
										<SetVariables>
											<SetVariable>
												<Destination>c_dataOk</Destination>
												<Source>true</Source>
											</SetVariable>
										</SetVariables>
									</Statement>
									<Statement>
										<GotoStep>ReceiveEvent</GotoStep>
									</Statement>
								</Compare>
								<Compare>
									<Condition>
										<Value1>t_slaveFrame.Command</Value1>
										<Operator>Equal</Operator>
										<Value2>FailSafeData</Value2>
									</Condition>
									<Condition>
										<Value1>t_slaveFrame.ConnId</Value1>
										<Operator>Equal</Operator>
										<Value2>t_connectionId</Value2>
									</Condition>
									<Condition>
										<Value1>crcCorrect</Value1>
										<Operator>Equal</Operator>
										<Value2>true</Value2>
									</Condition>
									<Statement>
										<CallFunction>DATA_OK2</CallFunction>
									</Statement>
									<Statement>
										<SetVariables>
											<SetVariable>
												<Destination>c_dataOk</Destination>
												<Source>true</Source>
											</SetVariable>
										</SetVariables>
									</Statement>
									<Statement>
										<GotoStep>ReceiveEvent</GotoStep>
									</Statement>
								</Compare>
								<Compare>
									<Condition>
										<Value1>t_slaveFrame.Command</Value1>
										<Operator>Equal</Operator>
										<Value2>ProcessData</Value2>
									</Condition>
									<Condition>
										<Value1>t_slaveFrame.ConnId</Value1>
										<Operator>Equal</Operator>
										<Value2>t_connectionId</Value2>
									</Condition>
									<Condition>
										<Value1>crcCorrect</Value1>
										<Operator>Equal</Operator>
										<Value2>false</Value2>
									</Condition>
									<Statement>
										<Return>
											<Type>Error</Type>
											<Value>Invalid Crc received</Value>
											<Id>4</Id>
										</Return>
									</Statement>
								</Compare>
								<Compare>
									<Condition>
										<Value1>t_slaveFrame.Command</Value1>
										<Operator>Equal</Operator>
										<Value2>ProcessData</Value2>
									</Condition>
									<Condition>
										<Value1>t_slaveFrame.ConnId</Value1>
										<Operator>NotEqual</Operator>
										<Value2>t_connectionId</Value2>
									</Condition>
									<Statement>
										<Return>
											<Type>Error</Type>
											<Value>Invalid Connection Id received</Value>
											<Id>3</Id>
										</Return>
									</Statement>
								</Compare>
								<Compare>
									<Condition>
										<Value1>t_slaveFrame.Command</Value1>
										<Operator>Equal</Operator>
										<Value2>FailSafeData</Value2>
									</Condition>
									<Condition>
										<Value1>t_slaveFrame.ConnId</Value1>
										<Operator>NotEqual</Operator>
										<Value2>t_connectionId</Value2>
									</Condition>
									<Statement>
										<Return>
											<Type>Error</Type>
											<Value>Invalid Connection Id received||Back to Reset</Value>
										</Return>
									</Statement>
								</Compare>
								<Compare>
									<Condition>
										<Value1>t_slaveFrame.Command</Value1>
										<Operator>Equal</Operator>
										<Value2>Reset</Value2>
									</Condition>
									<Statement>
										<CallFunction>GET_COMM_FAULT_REASON</CallFunction>
									</Statement>
									<Statement>
										<Return>
											<Type>Error</Type>
											<Value Param0="t_commFaultReason">Reset Cmd received , CommFaultReason: {0}</Value>
										</Return>
									</Statement>
								</Compare>
								<Compare>
									<Condition>
										<Value1>t_slaveFrame.Command</Value1>
										<Operator>Equal</Operator>
										<Value2>Session</Value2>
									</Condition>
									<Statement>
										<Return>
											<Type>Error</Type>
											<Value>Invalid Session Cmd received</Value>
										</Return>
									</Statement>
								</Compare>
								<Compare>
									<Condition>
										<Value1>t_slaveFrame.Command</Value1>
										<Operator>Equal</Operator>
										<Value2>Connection</Value2>
									</Condition>
									<Statement>
										<Return>
											<Type>Error</Type>
											<Value>Invalid Connection Cmd received</Value>
										</Return>
									</Statement>
								</Compare>
								<Compare>
									<Condition>
										<Value1>t_slaveFrame.Command</Value1>
										<Operator>Equal</Operator>
										<Value2>Parameter</Value2>
									</Condition>
									<Statement>
										<Return>
											<Type>Error</Type>
											<Value>Invalid Parameter Cmd received</Value>
										</Return>
									</Statement>
								</Compare>
								<Compare>
									<Condition>
										<Value1>t_slaveFrame.Command</Value1>
										<Operator>NotEqual</Operator>
										<Value2>Reset</Value2>
									</Condition>
									<Condition>
										<Value1>t_slaveFrame.Command</Value1>
										<Operator>NotEqual</Operator>
										<Value2>Session</Value2>
									</Condition>
									<Condition>
										<Value1>t_slaveFrame.Command</Value1>
										<Operator>NotEqual</Operator>
										<Value2>Connection</Value2>
									</Condition>
									<Condition>
										<Value1>t_slaveFrame.Command</Value1>
										<Operator>NotEqual</Operator>
										<Value2>Parameter</Value2>
									</Condition>
									<Condition>
										<Value1>t_slaveFrame.Command</Value1>
										<Operator>NotEqual</Operator>
										<Value2>ProcessData</Value2>
									</Condition>
									<Condition>
										<Value1>t_slaveFrame.Command</Value1>
										<Operator>NotEqual</Operator>
										<Value2>FailSafeData</Value2>
									</Condition>
									<Statement>
										<Return>
											<Type>Error</Type>
											<Value>Unknown CMD received</Value>
											<Id>2</Id>
										</Return>
									</Statement>
								</Compare>
								<Compare>
									<Condition>
										<Value1>1</Value1>
										<Operator>Equal</Operator>
										<Value2>1</Value2>
									</Condition>
									<Statement>
										<Return>
											<Type>Error</Type>
											<Value>General state machine error!</Value>
										</Return>
									</Statement>
								</Compare>
							</Compares>
						</TestStep>
					</TestSteps>
				</TestCase>
				<TestCase Name="#5.1b Data_Ok1" CaseId="3">
					<Comment>normaler Hochlauf mit connId = 65535.</Comment>
					<CaseVariables>
						<Variable>
							<Name>c_tmpByte</Name>
							<Type>Byte</Type>
						</Variable>
						<Variable>
							<Name>c_dataOk</Name>
							<Type>Bool</Type>
						</Variable>
					</CaseVariables>
					<TestSteps>
						<TestStep Name="SetConnectionData">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>t_connectionId</Destination>
										<Source>65535</Source>
									</SetVariable>
									<SetVariable>
										<Destination DestinationIndex="0">t_connData</Destination>
										<Source>t_connectionId</Source>
									</SetVariable>
									<SetVariable>
										<Destination DestinationIndex="2">t_connData</Destination>
										<Source>ConnData.SlaveAddress</Source>
									</SetVariable>
								</SetVariables>
							</Action>
							<Informations2>
								<Information>
									<Type>Output</Type>
									<Value Param0="t_connectionId" Param1="ConnData.SlaveAddress" Param2="t_connData">ConnectionId: {0} (0x{0:x4}), Slave Address: {1} (0x{1:x4}), Connection Data {2}</Value>
								</Information>
							</Informations2>
						</TestStep>
						<TestStep Name="SetParameterData">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>t_safePara</Destination>
										<Source>SafePara</Source>
									</SetVariable>
									<SetVariable>
										<Destination>t_watchdog</Destination>
										<Source>SafePara.Watchdog</Source>
									</SetVariable>
								</SetVariables>
							</Action>
							<Informations2>
								<Information>
									<Type>Output</Type>
									<Value Param0="t_watchdog" Param1="SafeParaSize" Param2="t_safePara">Watchdog: {0} ms, SafeParaSize: {1}, Safe Parameter {2}</Value>
								</Information>
							</Informations2>
						</TestStep>
						<TestStep Name="GoToParameter">
							<Action>
								<CallFunction>
									<Reference>RUN_DUT_TO_PARAMETER</Reference>
								</CallFunction>
							</Action>
						</TestStep>
						<TestStep Name="SetDataCmd">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>DataCommand</Destination>
										<Source>ProcessData</Source>
									</SetVariable>
								</SetVariables>
							</Action>
						</TestStep>
						<TestStep Name="CallParaOk">
							<Action>
								<CallFunction>
									<Reference>PARA_OK</Reference>
								</CallFunction>
							</Action>
						</TestStep>
						<TestStep Name="ReceiveEvent">
							<Event>
								<ReceiveFrame>t_slaveFrame</ReceiveFrame>
							</Event>
							<Informations2>
								<Information>
									<Type>Verbose</Type>
									<Value Param0="t_slaveFrame.FrameData">Slave Frame: {0}</Value>
								</Information>
							</Informations2>
						</TestStep>
						<TestStep Name="CheckWatchdog">
							<Event>
								<WatchdogExpired>
									<Return>
										<Type>Error</Type>
										<Value Param0="ElapsedWD">Watchdog expired!  {0} ms</Value>
										<Id>5</Id>
									</Return>
								</WatchdogExpired>
							</Event>
						</TestStep>
						<TestStep Name="CheckReceivedCrc">
							<Informations1>
								<Information>
									<Type>Verbose</Type>
									<Value Param0="t_slaveFrame.FrameData" Param1="LastCrc" Param2="t_slaveSeqNo" Param3="t_oldSlaveCrc" Param4="true">IsCrcCorrect(Frame {0}, LastCrc 0x{1:X4}, SeqNo {2}, OldCrc 0x{3:X4}, New {4})</Value>
								</Information>
							</Informations1>
							<Action>
								<IsCrcCorrect ReturnValue="crcCorrect">
									<Frame>t_slaveFrame</Frame>
									<LastCrc>LastCrc</LastCrc>
									<SequenceNo>t_slaveSeqNo</SequenceNo>
									<OldCrc>t_oldSlaveCrc</OldCrc>
									<New>true</New>
								</IsCrcCorrect>
							</Action>
							<ReturnValue>
								<OnFailure>
									<Type>Error</Type>
									<Value Param0="t_slaveFrame.Crc0">Invalid Crc0 reveived ({0:x})</Value>
									<Id>4</Id>
								</OnFailure>
							</ReturnValue>
						</TestStep>
						<TestStep Name="CheckDataCondition">
							<Compares>
								<Compare>
									<Condition>
										<Value1>c_dataOk</Value1>
										<Operator>Equal</Operator>
										<Value2>true</Value2>
									</Condition>
									<Condition>
										<Value1>t_slaveFrame.Command</Value1>
										<Operator>Equal</Operator>
										<Value2>ProcessData</Value2>
									</Condition>
									<Condition>
										<Value1>t_slaveFrame.ConnId</Value1>
										<Operator>Equal</Operator>
										<Value2>t_connectionId</Value2>
									</Condition>
									<Condition>
										<Value1>crcCorrect</Value1>
										<Operator>Equal</Operator>
										<Value2>true</Value2>
									</Condition>
									<Statement>
										<Return>
											<Type>Success</Type>
											<Value Param0="t_connectionId">DuT state DATA (ProcessData), ConnectionId {0}</Value>
										</Return>
									</Statement>
								</Compare>
								<Compare>
									<Condition>
										<Value1>c_dataOk</Value1>
										<Operator>Equal</Operator>
										<Value2>true</Value2>
									</Condition>
									<Condition>
										<Value1>t_slaveFrame.Command</Value1>
										<Operator>Equal</Operator>
										<Value2>FailSafeData</Value2>
									</Condition>
									<Condition>
										<Value1>t_slaveFrame.ConnId</Value1>
										<Operator>Equal</Operator>
										<Value2>t_connectionId</Value2>
									</Condition>
									<Condition>
										<Value1>crcCorrect</Value1>
										<Operator>Equal</Operator>
										<Value2>true</Value2>
									</Condition>
									<Statement>
										<Return>
											<Type>Success</Type>
											<Value Param0="t_connectionId">DuT state DATA (FailSafeData), ConnectionId {0}</Value>
										</Return>
									</Statement>
								</Compare>
								<Compare>
									<Condition>
										<Value1>t_slaveFrame.Command</Value1>
										<Operator>Equal</Operator>
										<Value2>ProcessData</Value2>
									</Condition>
									<Condition>
										<Value1>t_slaveFrame.ConnId</Value1>
										<Operator>Equal</Operator>
										<Value2>t_connectionId</Value2>
									</Condition>
									<Condition>
										<Value1>crcCorrect</Value1>
										<Operator>Equal</Operator>
										<Value2>true</Value2>
									</Condition>
									<Statement>
										<CallFunction>DATA_OK1</CallFunction>
									</Statement>
									<Statement>
										<SetVariables>
											<SetVariable>
												<Destination>c_dataOk</Destination>
												<Source>true</Source>
											</SetVariable>
										</SetVariables>
									</Statement>
									<Statement>
										<GotoStep>ReceiveEvent</GotoStep>
									</Statement>
								</Compare>
								<Compare>
									<Condition>
										<Value1>t_slaveFrame.Command</Value1>
										<Operator>Equal</Operator>
										<Value2>FailSafeData</Value2>
									</Condition>
									<Condition>
										<Value1>t_slaveFrame.ConnId</Value1>
										<Operator>Equal</Operator>
										<Value2>t_connectionId</Value2>
									</Condition>
									<Condition>
										<Value1>crcCorrect</Value1>
										<Operator>Equal</Operator>
										<Value2>true</Value2>
									</Condition>
									<Statement>
										<CallFunction>DATA_OK2</CallFunction>
									</Statement>
									<Statement>
										<SetVariables>
											<SetVariable>
												<Destination>c_dataOk</Destination>
												<Source>true</Source>
											</SetVariable>
										</SetVariables>
									</Statement>
									<Statement>
										<GotoStep>ReceiveEvent</GotoStep>
									</Statement>
								</Compare>
								<Compare>
									<Condition>
										<Value1>t_slaveFrame.Command</Value1>
										<Operator>Equal</Operator>
										<Value2>ProcessData</Value2>
									</Condition>
									<Condition>
										<Value1>t_slaveFrame.ConnId</Value1>
										<Operator>Equal</Operator>
										<Value2>t_connectionId</Value2>
									</Condition>
									<Condition>
										<Value1>crcCorrect</Value1>
										<Operator>Equal</Operator>
										<Value2>false</Value2>
									</Condition>
									<Statement>
										<Return>
											<Type>Error</Type>
											<Value>Invalid Crc received</Value>
											<Id>4</Id>
										</Return>
									</Statement>
								</Compare>
								<Compare>
									<Condition>
										<Value1>t_slaveFrame.Command</Value1>
										<Operator>Equal</Operator>
										<Value2>ProcessData</Value2>
									</Condition>
									<Condition>
										<Value1>t_slaveFrame.ConnId</Value1>
										<Operator>NotEqual</Operator>
										<Value2>t_connectionId</Value2>
									</Condition>
									<Statement>
										<Return>
											<Type>Error</Type>
											<Value>Invalid Connection Id received</Value>
											<Id>3</Id>
										</Return>
									</Statement>
								</Compare>
								<Compare>
									<Condition>
										<Value1>t_slaveFrame.Command</Value1>
										<Operator>Equal</Operator>
										<Value2>FailSafeData</Value2>
									</Condition>
									<Condition>
										<Value1>t_slaveFrame.ConnId</Value1>
										<Operator>NotEqual</Operator>
										<Value2>t_connectionId</Value2>
									</Condition>
									<Statement>
										<Return>
											<Type>Error</Type>
											<Value>Invalid Connection Id received||Back to Reset</Value>
										</Return>
									</Statement>
								</Compare>
								<Compare>
									<Condition>
										<Value1>t_slaveFrame.Command</Value1>
										<Operator>Equal</Operator>
										<Value2>Reset</Value2>
									</Condition>
									<Statement>
										<CallFunction>GET_COMM_FAULT_REASON</CallFunction>
									</Statement>
									<Statement>
										<Return>
											<Type>Error</Type>
											<Value Param0="t_commFaultReason">Reset Cmd received , CommFaultReason: {0}</Value>
										</Return>
									</Statement>
								</Compare>
								<Compare>
									<Condition>
										<Value1>t_slaveFrame.Command</Value1>
										<Operator>Equal</Operator>
										<Value2>Session</Value2>
									</Condition>
									<Statement>
										<Return>
											<Type>Error</Type>
											<Value>Invalid Session Cmd received</Value>
										</Return>
									</Statement>
								</Compare>
								<Compare>
									<Condition>
										<Value1>t_slaveFrame.Command</Value1>
										<Operator>Equal</Operator>
										<Value2>Connection</Value2>
									</Condition>
									<Statement>
										<Return>
											<Type>Error</Type>
											<Value>Invalid Connection Cmd received</Value>
										</Return>
									</Statement>
								</Compare>
								<Compare>
									<Condition>
										<Value1>t_slaveFrame.Command</Value1>
										<Operator>Equal</Operator>
										<Value2>Parameter</Value2>
									</Condition>
									<Statement>
										<Return>
											<Type>Error</Type>
											<Value>Invalid Parameter Cmd received</Value>
										</Return>
									</Statement>
								</Compare>
								<Compare>
									<Condition>
										<Value1>t_slaveFrame.Command</Value1>
										<Operator>NotEqual</Operator>
										<Value2>Reset</Value2>
									</Condition>
									<Condition>
										<Value1>t_slaveFrame.Command</Value1>
										<Operator>NotEqual</Operator>
										<Value2>Session</Value2>
									</Condition>
									<Condition>
										<Value1>t_slaveFrame.Command</Value1>
										<Operator>NotEqual</Operator>
										<Value2>Connection</Value2>
									</Condition>
									<Condition>
										<Value1>t_slaveFrame.Command</Value1>
										<Operator>NotEqual</Operator>
										<Value2>Parameter</Value2>
									</Condition>
									<Condition>
										<Value1>t_slaveFrame.Command</Value1>
										<Operator>NotEqual</Operator>
										<Value2>ProcessData</Value2>
									</Condition>
									<Condition>
										<Value1>t_slaveFrame.Command</Value1>
										<Operator>NotEqual</Operator>
										<Value2>FailSafeData</Value2>
									</Condition>
									<Statement>
										<Return>
											<Type>Error</Type>
											<Value>Unknown CMD received</Value>
											<Id>2</Id>
										</Return>
									</Statement>
								</Compare>
								<Compare>
									<Condition>
										<Value1>1</Value1>
										<Operator>Equal</Operator>
										<Value2>1</Value2>
									</Condition>
									<Statement>
										<Return>
											<Type>Error</Type>
											<Value>General state machine error!</Value>
										</Return>
									</Statement>
								</Compare>
							</Compares>
						</TestStep>
					</TestSteps>
				</TestCase>
				<TestCase Name="#5.1c Data_Ok1" CaseId="4">
					<Comment>normaler Hochlauf mit sessionId = 0</Comment>
					<CaseVariables>
						<Variable>
							<Name>c_tmpByte</Name>
							<Type>Byte</Type>
						</Variable>
						<Variable>
							<Name>c_dataOk</Name>
							<Type>Bool</Type>
						</Variable>
					</CaseVariables>
					<TestSteps>
						<TestStep Name="SetSessionId">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>t_masterSessionId</Destination>
										<Source>0</Source>
									</SetVariable>
								</SetVariables>
							</Action>
							<Informations2>
								<Information>
									<Type>Output</Type>
									<Value Param0="t_masterSessionId" Param1="ConnData.SlaveAddress" Param2="t_connData">MasterSessionId: {0} (0x{0:x4})</Value>
								</Information>
							</Informations2>
						</TestStep>
						<TestStep Name="SetConnectionData">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>t_connectionId</Destination>
										<Source>3</Source>
									</SetVariable>
									<SetVariable>
										<Destination DestinationIndex="0">t_connData</Destination>
										<Source>t_connectionId</Source>
									</SetVariable>
									<SetVariable>
										<Destination DestinationIndex="2">t_connData</Destination>
										<Source>ConnData.SlaveAddress</Source>
									</SetVariable>
								</SetVariables>
							</Action>
							<Informations2>
								<Information>
									<Type>Output</Type>
									<Value Param0="t_connectionId" Param1="ConnData.SlaveAddress" Param2="t_connData">ConnectionId: {0} (0x{0:x4}), Slave Address: {1} (0x{1:x4}), Connection Data {2}</Value>
								</Information>
							</Informations2>
						</TestStep>
						<TestStep Name="SetParameterData">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>t_safePara</Destination>
										<Source>SafePara</Source>
									</SetVariable>
									<SetVariable>
										<Destination>t_watchdog</Destination>
										<Source>SafePara.Watchdog</Source>
									</SetVariable>
								</SetVariables>
							</Action>
							<Informations2>
								<Information>
									<Type>Output</Type>
									<Value Param0="t_watchdog" Param1="SafeParaSize" Param2="t_safePara">Watchdog: {0} ms, SafeParaSize: {1}, Safe Parameter {2}</Value>
								</Information>
							</Informations2>
						</TestStep>
						<TestStep Name="GoToParameter">
							<Action>
								<CallFunction>
									<Reference>RUN_DUT_TO_PARAMETER</Reference>
								</CallFunction>
							</Action>
						</TestStep>
						<TestStep Name="SetDataCmd">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>DataCommand</Destination>
										<Source>ProcessData</Source>
									</SetVariable>
								</SetVariables>
							</Action>
						</TestStep>
						<TestStep Name="CallParaOk">
							<Action>
								<CallFunction>
									<Reference>PARA_OK</Reference>
								</CallFunction>
							</Action>
						</TestStep>
						<TestStep Name="ReceiveEvent">
							<Event>
								<ReceiveFrame>t_slaveFrame</ReceiveFrame>
							</Event>
							<Informations2>
								<Information>
									<Type>Verbose</Type>
									<Value Param0="t_slaveFrame.FrameData">Slave Frame: {0}</Value>
								</Information>
							</Informations2>
						</TestStep>
						<TestStep Name="CheckWatchdog">
							<Event>
								<WatchdogExpired>
									<Return>
										<Type>Error</Type>
										<Value Param0="ElapsedWD">Watchdog expired!  {0} ms</Value>
										<Id>5</Id>
									</Return>
								</WatchdogExpired>
							</Event>
						</TestStep>
						<TestStep Name="CheckReceivedCrc">
							<Informations1>
								<Information>
									<Type>Verbose</Type>
									<Value Param0="t_slaveFrame.FrameData" Param1="LastCrc" Param2="t_slaveSeqNo" Param3="t_oldSlaveCrc" Param4="true">IsCrcCorrect(Frame {0}, LastCrc 0x{1:X4}, SeqNo {2}, OldCrc 0x{3:X4}, New {4})</Value>
								</Information>
							</Informations1>
							<Action>
								<IsCrcCorrect ReturnValue="crcCorrect">
									<Frame>t_slaveFrame</Frame>
									<LastCrc>LastCrc</LastCrc>
									<SequenceNo>t_slaveSeqNo</SequenceNo>
									<OldCrc>t_oldSlaveCrc</OldCrc>
									<New>true</New>
								</IsCrcCorrect>
							</Action>
							<ReturnValue>
								<OnFailure>
									<Type>Error</Type>
									<Value Param0="t_slaveFrame.Crc0">Invalid Crc0 reveived ({0:x})</Value>
									<Id>4</Id>
								</OnFailure>
							</ReturnValue>
						</TestStep>
						<TestStep Name="CheckDataCondition">
							<Compares>
								<Compare>
									<Condition>
										<Value1>c_dataOk</Value1>
										<Operator>Equal</Operator>
										<Value2>true</Value2>
									</Condition>
									<Condition>
										<Value1>t_slaveFrame.Command</Value1>
										<Operator>Equal</Operator>
										<Value2>ProcessData</Value2>
									</Condition>
									<Condition>
										<Value1>t_slaveFrame.ConnId</Value1>
										<Operator>Equal</Operator>
										<Value2>t_connectionId</Value2>
									</Condition>
									<Condition>
										<Value1>crcCorrect</Value1>
										<Operator>Equal</Operator>
										<Value2>true</Value2>
									</Condition>
									<Statement>
										<Return>
											<Type>Success</Type>
											<Value Param0="t_masterSessionId">DuT state DATA (ProcessData), MasterSessionId {0}</Value>
										</Return>
									</Statement>
								</Compare>
								<Compare>
									<Condition>
										<Value1>c_dataOk</Value1>
										<Operator>Equal</Operator>
										<Value2>true</Value2>
									</Condition>
									<Condition>
										<Value1>t_slaveFrame.Command</Value1>
										<Operator>Equal</Operator>
										<Value2>FailSafeData</Value2>
									</Condition>
									<Condition>
										<Value1>t_slaveFrame.ConnId</Value1>
										<Operator>Equal</Operator>
										<Value2>t_connectionId</Value2>
									</Condition>
									<Condition>
										<Value1>crcCorrect</Value1>
										<Operator>Equal</Operator>
										<Value2>true</Value2>
									</Condition>
									<Statement>
										<Return>
											<Type>Success</Type>
											<Value Param0="t_masterSessionId">DuT state DATA (FailSafeData), MasterSessionId {0}</Value>
										</Return>
									</Statement>
								</Compare>
								<Compare>
									<Condition>
										<Value1>t_slaveFrame.Command</Value1>
										<Operator>Equal</Operator>
										<Value2>ProcessData</Value2>
									</Condition>
									<Condition>
										<Value1>t_slaveFrame.ConnId</Value1>
										<Operator>Equal</Operator>
										<Value2>t_connectionId</Value2>
									</Condition>
									<Condition>
										<Value1>crcCorrect</Value1>
										<Operator>Equal</Operator>
										<Value2>true</Value2>
									</Condition>
									<Statement>
										<CallFunction>DATA_OK1</CallFunction>
									</Statement>
									<Statement>
										<SetVariables>
											<SetVariable>
												<Destination>c_dataOk</Destination>
												<Source>true</Source>
											</SetVariable>
										</SetVariables>
									</Statement>
									<Statement>
										<GotoStep>ReceiveEvent</GotoStep>
									</Statement>
								</Compare>
								<Compare>
									<Condition>
										<Value1>t_slaveFrame.Command</Value1>
										<Operator>Equal</Operator>
										<Value2>FailSafeData</Value2>
									</Condition>
									<Condition>
										<Value1>t_slaveFrame.ConnId</Value1>
										<Operator>Equal</Operator>
										<Value2>t_connectionId</Value2>
									</Condition>
									<Condition>
										<Value1>crcCorrect</Value1>
										<Operator>Equal</Operator>
										<Value2>true</Value2>
									</Condition>
									<Statement>
										<CallFunction>DATA_OK2</CallFunction>
									</Statement>
									<Statement>
										<SetVariables>
											<SetVariable>
												<Destination>c_dataOk</Destination>
												<Source>true</Source>
											</SetVariable>
										</SetVariables>
									</Statement>
									<Statement>
										<GotoStep>ReceiveEvent</GotoStep>
									</Statement>
								</Compare>
								<Compare>
									<Condition>
										<Value1>t_slaveFrame.Command</Value1>
										<Operator>Equal</Operator>
										<Value2>ProcessData</Value2>
									</Condition>
									<Condition>
										<Value1>t_slaveFrame.ConnId</Value1>
										<Operator>Equal</Operator>
										<Value2>t_connectionId</Value2>
									</Condition>
									<Condition>
										<Value1>crcCorrect</Value1>
										<Operator>Equal</Operator>
										<Value2>false</Value2>
									</Condition>
									<Statement>
										<Return>
											<Type>Error</Type>
											<Value>Invalid Crc received</Value>
											<Id>4</Id>
										</Return>
									</Statement>
								</Compare>
								<Compare>
									<Condition>
										<Value1>t_slaveFrame.Command</Value1>
										<Operator>Equal</Operator>
										<Value2>ProcessData</Value2>
									</Condition>
									<Condition>
										<Value1>t_slaveFrame.ConnId</Value1>
										<Operator>NotEqual</Operator>
										<Value2>t_connectionId</Value2>
									</Condition>
									<Statement>
										<Return>
											<Type>Error</Type>
											<Value>Invalid Connection Id received</Value>
											<Id>3</Id>
										</Return>
									</Statement>
								</Compare>
								<Compare>
									<Condition>
										<Value1>t_slaveFrame.Command</Value1>
										<Operator>Equal</Operator>
										<Value2>FailSafeData</Value2>
									</Condition>
									<Condition>
										<Value1>t_slaveFrame.ConnId</Value1>
										<Operator>NotEqual</Operator>
										<Value2>t_connectionId</Value2>
									</Condition>
									<Statement>
										<Return>
											<Type>Error</Type>
											<Value>Invalid Connection Id received||Back to Reset</Value>
										</Return>
									</Statement>
								</Compare>
								<Compare>
									<Condition>
										<Value1>t_slaveFrame.Command</Value1>
										<Operator>Equal</Operator>
										<Value2>Reset</Value2>
									</Condition>
									<Statement>
										<CallFunction>GET_COMM_FAULT_REASON</CallFunction>
									</Statement>
									<Statement>
										<Return>
											<Type>Error</Type>
											<Value Param0="t_commFaultReason">Reset Cmd received , CommFaultReason: {0}</Value>
										</Return>
									</Statement>
								</Compare>
								<Compare>
									<Condition>
										<Value1>t_slaveFrame.Command</Value1>
										<Operator>Equal</Operator>
										<Value2>Session</Value2>
									</Condition>
									<Statement>
										<Return>
											<Type>Error</Type>
											<Value>Invalid Session Cmd received</Value>
										</Return>
									</Statement>
								</Compare>
								<Compare>
									<Condition>
										<Value1>t_slaveFrame.Command</Value1>
										<Operator>Equal</Operator>
										<Value2>Connection</Value2>
									</Condition>
									<Statement>
										<Return>
											<Type>Error</Type>
											<Value>Invalid Connection Cmd received</Value>
										</Return>
									</Statement>
								</Compare>
								<Compare>
									<Condition>
										<Value1>t_slaveFrame.Command</Value1>
										<Operator>Equal</Operator>
										<Value2>Parameter</Value2>
									</Condition>
									<Statement>
										<Return>
											<Type>Error</Type>
											<Value>Invalid Parameter Cmd received</Value>
										</Return>
									</Statement>
								</Compare>
								<Compare>
									<Condition>
										<Value1>t_slaveFrame.Command</Value1>
										<Operator>NotEqual</Operator>
										<Value2>Reset</Value2>
									</Condition>
									<Condition>
										<Value1>t_slaveFrame.Command</Value1>
										<Operator>NotEqual</Operator>
										<Value2>Session</Value2>
									</Condition>
									<Condition>
										<Value1>t_slaveFrame.Command</Value1>
										<Operator>NotEqual</Operator>
										<Value2>Connection</Value2>
									</Condition>
									<Condition>
										<Value1>t_slaveFrame.Command</Value1>
										<Operator>NotEqual</Operator>
										<Value2>Parameter</Value2>
									</Condition>
									<Condition>
										<Value1>t_slaveFrame.Command</Value1>
										<Operator>NotEqual</Operator>
										<Value2>ProcessData</Value2>
									</Condition>
									<Condition>
										<Value1>t_slaveFrame.Command</Value1>
										<Operator>NotEqual</Operator>
										<Value2>FailSafeData</Value2>
									</Condition>
									<Statement>
										<Return>
											<Type>Error</Type>
											<Value>Unknown CMD received</Value>
											<Id>2</Id>
										</Return>
									</Statement>
								</Compare>
								<Compare>
									<Condition>
										<Value1>1</Value1>
										<Operator>Equal</Operator>
										<Value2>1</Value2>
									</Condition>
									<Statement>
										<Return>
											<Type>Error</Type>
											<Value>General state machine error!</Value>
										</Return>
									</Statement>
								</Compare>
							</Compares>
						</TestStep>
					</TestSteps>
				</TestCase>
				<TestCase Name="#5.1d Data_Ok1" CaseId="5">
					<Comment>normaler Hochlauf mit sessionId = 65535</Comment>
					<CaseVariables>
						<Variable>
							<Name>c_tmpByte</Name>
							<Type>Byte</Type>
						</Variable>
						<Variable>
							<Name>c_dataOk</Name>
							<Type>Bool</Type>
						</Variable>
					</CaseVariables>
					<TestSteps>
						<TestStep Name="SetSessionId">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>t_masterSessionId</Destination>
										<Source>65535</Source>
									</SetVariable>
								</SetVariables>
							</Action>
							<Informations2>
								<Information>
									<Type>Output</Type>
									<Value Param0="t_masterSessionId" Param1="ConnData.SlaveAddress" Param2="t_connData">MasterSessionId: {0} (0x{0:x4})</Value>
								</Information>
							</Informations2>
						</TestStep>
						<TestStep Name="SetConnectionData">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>t_connectionId</Destination>
										<Source>3</Source>
									</SetVariable>
									<SetVariable>
										<Destination DestinationIndex="0">t_connData</Destination>
										<Source>t_connectionId</Source>
									</SetVariable>
									<SetVariable>
										<Destination DestinationIndex="2">t_connData</Destination>
										<Source>ConnData.SlaveAddress</Source>
									</SetVariable>
								</SetVariables>
							</Action>
							<Informations2>
								<Information>
									<Type>Output</Type>
									<Value Param0="t_connectionId" Param1="ConnData.SlaveAddress" Param2="t_connData">ConnectionId: {0} (0x{0:x4}), Slave Address: {1} (0x{1:x4}), Connection Data {2}</Value>
								</Information>
							</Informations2>
						</TestStep>
						<TestStep Name="SetParameterData">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>t_safePara</Destination>
										<Source>SafePara</Source>
									</SetVariable>
									<SetVariable>
										<Destination>t_watchdog</Destination>
										<Source>SafePara.Watchdog</Source>
									</SetVariable>
								</SetVariables>
							</Action>
							<Informations2>
								<Information>
									<Type>Output</Type>
									<Value Param0="t_watchdog" Param1="SafeParaSize" Param2="t_safePara">Watchdog: {0} ms, SafeParaSize: {1}, Safe Parameter {2}</Value>
								</Information>
							</Informations2>
						</TestStep>
						<TestStep Name="GoToParameter">
							<Action>
								<CallFunction>
									<Reference>RUN_DUT_TO_PARAMETER</Reference>
								</CallFunction>
							</Action>
						</TestStep>
						<TestStep Name="SetDataCmd">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>DataCommand</Destination>
										<Source>ProcessData</Source>
									</SetVariable>
								</SetVariables>
							</Action>
						</TestStep>
						<TestStep Name="CallParaOk">
							<Action>
								<CallFunction>
									<Reference>PARA_OK</Reference>
								</CallFunction>
							</Action>
						</TestStep>
						<TestStep Name="ReceiveEvent">
							<Event>
								<ReceiveFrame>t_slaveFrame</ReceiveFrame>
							</Event>
							<Informations2>
								<Information>
									<Type>Verbose</Type>
									<Value Param0="t_slaveFrame.FrameData">Slave Frame: {0}</Value>
								</Information>
							</Informations2>
						</TestStep>
						<TestStep Name="CheckWatchdog">
							<Event>
								<WatchdogExpired>
									<Return>
										<Type>Error</Type>
										<Value Param0="ElapsedWD">Watchdog expired!  {0} ms</Value>
										<Id>5</Id>
									</Return>
								</WatchdogExpired>
							</Event>
						</TestStep>
						<TestStep Name="CheckReceivedCrc">
							<Informations1>
								<Information>
									<Type>Verbose</Type>
									<Value Param0="t_slaveFrame.FrameData" Param1="LastCrc" Param2="t_slaveSeqNo" Param3="t_oldSlaveCrc" Param4="true">IsCrcCorrect(Frame {0}, LastCrc 0x{1:X4}, SeqNo {2}, OldCrc 0x{3:X4}, New {4})</Value>
								</Information>
							</Informations1>
							<Action>
								<IsCrcCorrect ReturnValue="crcCorrect">
									<Frame>t_slaveFrame</Frame>
									<LastCrc>LastCrc</LastCrc>
									<SequenceNo>t_slaveSeqNo</SequenceNo>
									<OldCrc>t_oldSlaveCrc</OldCrc>
									<New>true</New>
								</IsCrcCorrect>
							</Action>
							<ReturnValue>
								<OnFailure>
									<Type>Error</Type>
									<Value Param0="t_slaveFrame.Crc0">Invalid Crc0 reveived ({0:x})</Value>
									<Id>4</Id>
								</OnFailure>
							</ReturnValue>
						</TestStep>
						<TestStep Name="CheckDataCondition">
							<Compares>
								<Compare>
									<Condition>
										<Value1>c_dataOk</Value1>
										<Operator>Equal</Operator>
										<Value2>true</Value2>
									</Condition>
									<Condition>
										<Value1>t_slaveFrame.Command</Value1>
										<Operator>Equal</Operator>
										<Value2>ProcessData</Value2>
									</Condition>
									<Condition>
										<Value1>t_slaveFrame.ConnId</Value1>
										<Operator>Equal</Operator>
										<Value2>t_connectionId</Value2>
									</Condition>
									<Condition>
										<Value1>crcCorrect</Value1>
										<Operator>Equal</Operator>
										<Value2>true</Value2>
									</Condition>
									<Statement>
										<Return>
											<Type>Success</Type>
											<Value Param0="t_masterSessionId">DuT state DATA (ProcessData), MasterSessionId {0}</Value>
										</Return>
									</Statement>
								</Compare>
								<Compare>
									<Condition>
										<Value1>c_dataOk</Value1>
										<Operator>Equal</Operator>
										<Value2>true</Value2>
									</Condition>
									<Condition>
										<Value1>t_slaveFrame.Command</Value1>
										<Operator>Equal</Operator>
										<Value2>FailSafeData</Value2>
									</Condition>
									<Condition>
										<Value1>t_slaveFrame.ConnId</Value1>
										<Operator>Equal</Operator>
										<Value2>t_connectionId</Value2>
									</Condition>
									<Condition>
										<Value1>crcCorrect</Value1>
										<Operator>Equal</Operator>
										<Value2>true</Value2>
									</Condition>
									<Statement>
										<Return>
											<Type>Success</Type>
											<Value Param0="t_masterSessionId">DuT state DATA (FailSafeData), MasterSessionId {0}</Value>
										</Return>
									</Statement>
								</Compare>
								<Compare>
									<Condition>
										<Value1>t_slaveFrame.Command</Value1>
										<Operator>Equal</Operator>
										<Value2>ProcessData</Value2>
									</Condition>
									<Condition>
										<Value1>t_slaveFrame.ConnId</Value1>
										<Operator>Equal</Operator>
										<Value2>t_connectionId</Value2>
									</Condition>
									<Condition>
										<Value1>crcCorrect</Value1>
										<Operator>Equal</Operator>
										<Value2>true</Value2>
									</Condition>
									<Statement>
										<CallFunction>DATA_OK1</CallFunction>
									</Statement>
									<Statement>
										<SetVariables>
											<SetVariable>
												<Destination>c_dataOk</Destination>
												<Source>true</Source>
											</SetVariable>
										</SetVariables>
									</Statement>
									<Statement>
										<GotoStep>ReceiveEvent</GotoStep>
									</Statement>
								</Compare>
								<Compare>
									<Condition>
										<Value1>t_slaveFrame.Command</Value1>
										<Operator>Equal</Operator>
										<Value2>FailSafeData</Value2>
									</Condition>
									<Condition>
										<Value1>t_slaveFrame.ConnId</Value1>
										<Operator>Equal</Operator>
										<Value2>t_connectionId</Value2>
									</Condition>
									<Condition>
										<Value1>crcCorrect</Value1>
										<Operator>Equal</Operator>
										<Value2>true</Value2>
									</Condition>
									<Statement>
										<CallFunction>DATA_OK2</CallFunction>
									</Statement>
									<Statement>
										<SetVariables>
											<SetVariable>
												<Destination>c_dataOk</Destination>
												<Source>true</Source>
											</SetVariable>
										</SetVariables>
									</Statement>
									<Statement>
										<GotoStep>ReceiveEvent</GotoStep>
									</Statement>
								</Compare>
								<Compare>
									<Condition>
										<Value1>t_slaveFrame.Command</Value1>
										<Operator>Equal</Operator>
										<Value2>ProcessData</Value2>
									</Condition>
									<Condition>
										<Value1>t_slaveFrame.ConnId</Value1>
										<Operator>Equal</Operator>
										<Value2>t_connectionId</Value2>
									</Condition>
									<Condition>
										<Value1>crcCorrect</Value1>
										<Operator>Equal</Operator>
										<Value2>false</Value2>
									</Condition>
									<Statement>
										<Return>
											<Type>Error</Type>
											<Value>Invalid Crc received</Value>
											<Id>4</Id>
										</Return>
									</Statement>
								</Compare>
								<Compare>
									<Condition>
										<Value1>t_slaveFrame.Command</Value1>
										<Operator>Equal</Operator>
										<Value2>ProcessData</Value2>
									</Condition>
									<Condition>
										<Value1>t_slaveFrame.ConnId</Value1>
										<Operator>NotEqual</Operator>
										<Value2>t_connectionId</Value2>
									</Condition>
									<Statement>
										<Return>
											<Type>Error</Type>
											<Value>Invalid Connection Id received</Value>
											<Id>3</Id>
										</Return>
									</Statement>
								</Compare>
								<Compare>
									<Condition>
										<Value1>t_slaveFrame.Command</Value1>
										<Operator>Equal</Operator>
										<Value2>FailSafeData</Value2>
									</Condition>
									<Condition>
										<Value1>t_slaveFrame.ConnId</Value1>
										<Operator>NotEqual</Operator>
										<Value2>t_connectionId</Value2>
									</Condition>
									<Statement>
										<Return>
											<Type>Error</Type>
											<Value>Invalid Connection Id received||Back to Reset</Value>
										</Return>
									</Statement>
								</Compare>
								<Compare>
									<Condition>
										<Value1>t_slaveFrame.Command</Value1>
										<Operator>Equal</Operator>
										<Value2>Reset</Value2>
									</Condition>
									<Statement>
										<CallFunction>GET_COMM_FAULT_REASON</CallFunction>
									</Statement>
									<Statement>
										<Return>
											<Type>Error</Type>
											<Value Param0="t_commFaultReason">Reset Cmd received , CommFaultReason: {0}</Value>
										</Return>
									</Statement>
								</Compare>
								<Compare>
									<Condition>
										<Value1>t_slaveFrame.Command</Value1>
										<Operator>Equal</Operator>
										<Value2>Session</Value2>
									</Condition>
									<Statement>
										<Return>
											<Type>Error</Type>
											<Value>Invalid Session Cmd received</Value>
										</Return>
									</Statement>
								</Compare>
								<Compare>
									<Condition>
										<Value1>t_slaveFrame.Command</Value1>
										<Operator>Equal</Operator>
										<Value2>Connection</Value2>
									</Condition>
									<Statement>
										<Return>
											<Type>Error</Type>
											<Value>Invalid Connection Cmd received</Value>
										</Return>
									</Statement>
								</Compare>
								<Compare>
									<Condition>
										<Value1>t_slaveFrame.Command</Value1>
										<Operator>Equal</Operator>
										<Value2>Parameter</Value2>
									</Condition>
									<Statement>
										<Return>
											<Type>Error</Type>
											<Value>Invalid Parameter Cmd received</Value>
										</Return>
									</Statement>
								</Compare>
								<Compare>
									<Condition>
										<Value1>t_slaveFrame.Command</Value1>
										<Operator>NotEqual</Operator>
										<Value2>Reset</Value2>
									</Condition>
									<Condition>
										<Value1>t_slaveFrame.Command</Value1>
										<Operator>NotEqual</Operator>
										<Value2>Session</Value2>
									</Condition>
									<Condition>
										<Value1>t_slaveFrame.Command</Value1>
										<Operator>NotEqual</Operator>
										<Value2>Connection</Value2>
									</Condition>
									<Condition>
										<Value1>t_slaveFrame.Command</Value1>
										<Operator>NotEqual</Operator>
										<Value2>Parameter</Value2>
									</Condition>
									<Condition>
										<Value1>t_slaveFrame.Command</Value1>
										<Operator>NotEqual</Operator>
										<Value2>ProcessData</Value2>
									</Condition>
									<Condition>
										<Value1>t_slaveFrame.Command</Value1>
										<Operator>NotEqual</Operator>
										<Value2>FailSafeData</Value2>
									</Condition>
									<Statement>
										<Return>
											<Type>Error</Type>
											<Value>Unknown CMD received</Value>
											<Id>2</Id>
										</Return>
									</Statement>
								</Compare>
								<Compare>
									<Condition>
										<Value1>1</Value1>
										<Operator>Equal</Operator>
										<Value2>1</Value2>
									</Condition>
									<Statement>
										<Return>
											<Type>Error</Type>
											<Value>General state machine error!</Value>
										</Return>
									</Statement>
								</Compare>
							</Compares>
						</TestStep>
					</TestSteps>
				</TestCase>
				<TestCase Name="#5.2 Data_Ok2" CaseId="6">
					<Comment>normaler Austausch mit FailSafeData bis die SlaveSequenceNo = 257 überschritten wurde.</Comment>
					<CaseVariables>
						<Variable>
							<Name>c_tmpByte</Name>
							<Type>Byte</Type>
						</Variable>
						<Variable>
							<Name>c_maxSeqNo</Name>
							<Type>UInt16</Type>
						</Variable>
					</CaseVariables>
					<TestSteps>
						<TestStep Name="SetMaxSeqNo">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>c_maxSeqNo</Destination>
										<Source>257</Source>
									</SetVariable>
								</SetVariables>
							</Action>
						</TestStep>
						<TestStep Name="SetConnectionData">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>t_connectionId</Destination>
										<Source>3</Source>
									</SetVariable>
									<SetVariable>
										<Destination DestinationIndex="0">t_connData</Destination>
										<Source>t_connectionId</Source>
									</SetVariable>
									<SetVariable>
										<Destination DestinationIndex="2">t_connData</Destination>
										<Source>ConnData.SlaveAddress</Source>
									</SetVariable>
								</SetVariables>
							</Action>
							<Informations2>
								<Information>
									<Type>Output</Type>
									<Value Param0="t_connectionId" Param1="ConnData.SlaveAddress" Param2="t_connData">ConnectionId: {0} (0x{0:x4}), Slave Address: {1} (0x{1:x4}), Connection Data {2}</Value>
								</Information>
							</Informations2>
						</TestStep>
						<TestStep Name="SetParameterData">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>t_safePara</Destination>
										<Source>SafePara</Source>
									</SetVariable>
									<SetVariable>
										<Destination>t_watchdog</Destination>
										<Source>SafePara.Watchdog</Source>
									</SetVariable>
								</SetVariables>
							</Action>
							<Informations2>
								<Information>
									<Type>Output</Type>
									<Value Param0="t_watchdog" Param1="SafeParaSize" Param2="t_safePara">Watchdog: {0} ms, SafeParaSize: {1}, Safe Parameter {2}</Value>
								</Information>
							</Informations2>
						</TestStep>
						<TestStep Name="GoToParameter">
							<Action>
								<CallFunction>
									<Reference>RUN_DUT_TO_PARAMETER</Reference>
								</CallFunction>
							</Action>
						</TestStep>
						<TestStep Name="SetDataCmd">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>DataCommand</Destination>
										<Source>FailSafeData</Source>
									</SetVariable>
								</SetVariables>
							</Action>
						</TestStep>
						<TestStep Name="CallParaOk">
							<Action>
								<CallFunction>
									<Reference>PARA_OK</Reference>
								</CallFunction>
							</Action>
						</TestStep>
						<TestStep Name="ReceiveEvent">
							<Event>
								<ReceiveFrame>t_slaveFrame</ReceiveFrame>
							</Event>
							<Informations2>
								<Information>
									<Type>Verbose</Type>
									<Value Param0="t_slaveFrame.FrameData">Slave Frame: {0}</Value>
								</Information>
							</Informations2>
						</TestStep>
						<TestStep Name="CheckWatchdog">
							<Event>
								<WatchdogExpired>
									<Return>
										<Type>Error</Type>
										<Value Param0="ElapsedWD">Watchdog expired!  {0} ms</Value>
										<Id>5</Id>
									</Return>
								</WatchdogExpired>
							</Event>
						</TestStep>
						<TestStep Name="CheckReceivedCrc">
							<Action>
								<IsCrcCorrect ReturnValue="crcCorrect">
									<Frame>t_slaveFrame</Frame>
									<LastCrc>LastCrc</LastCrc>
									<SequenceNo>t_slaveSeqNo</SequenceNo>
									<OldCrc>t_oldSlaveCrc</OldCrc>
									<New>true</New>
								</IsCrcCorrect>
							</Action>
							<ReturnValue>
								<OnFailure>
									<Type>Error</Type>
									<Value Param0="t_slaveFrame.Crc0">Invalid Crc0 reveived ({0:x})</Value>
									<Id>4</Id>
								</OnFailure>
							</ReturnValue>
						</TestStep>
						<TestStep Name="CheckDataCondition">
							<Compares>
								<Compare>
									<Condition>
										<Value1>t_slaveSeqNo</Value1>
										<Operator>Equal</Operator>
										<Value2>c_maxSeqNo</Value2>
									</Condition>
									<Statement>
										<Return>
											<Type>Success</Type>
											<Value Param0="c_maxSeqNo">SlaveSeqNo = {0}</Value>
										</Return>
									</Statement>
								</Compare>
								<Compare>
									<Condition>
										<Value1>t_slaveFrame.Command</Value1>
										<Operator>Equal</Operator>
										<Value2>ProcessData</Value2>
									</Condition>
									<Condition>
										<Value1>t_slaveFrame.ConnId</Value1>
										<Operator>Equal</Operator>
										<Value2>t_connectionId</Value2>
									</Condition>
									<Condition>
										<Value1>crcCorrect</Value1>
										<Operator>Equal</Operator>
										<Value2>true</Value2>
									</Condition>
									<Statement>
										<CallFunction>DATA_OK1</CallFunction>
									</Statement>
									<Statement>
										<GotoStep>ReceiveEvent</GotoStep>
									</Statement>
								</Compare>
								<Compare>
									<Condition>
										<Value1>t_slaveFrame.Command</Value1>
										<Operator>Equal</Operator>
										<Value2>FailSafeData</Value2>
									</Condition>
									<Condition>
										<Value1>t_slaveFrame.ConnId</Value1>
										<Operator>Equal</Operator>
										<Value2>t_connectionId</Value2>
									</Condition>
									<Condition>
										<Value1>crcCorrect</Value1>
										<Operator>Equal</Operator>
										<Value2>true</Value2>
									</Condition>
									<Statement>
										<CallFunction>DATA_OK2</CallFunction>
									</Statement>
									<Statement>
										<GotoStep>ReceiveEvent</GotoStep>
									</Statement>
								</Compare>
								<Compare>
									<Condition>
										<Value1>t_slaveFrame.Command</Value1>
										<Operator>Equal</Operator>
										<Value2>ProcessData</Value2>
									</Condition>
									<Condition>
										<Value1>t_slaveFrame.ConnId</Value1>
										<Operator>Equal</Operator>
										<Value2>t_connectionId</Value2>
									</Condition>
									<Condition>
										<Value1>crcCorrect</Value1>
										<Operator>Equal</Operator>
										<Value2>false</Value2>
									</Condition>
									<Statement>
										<Return>
											<Type>Error</Type>
											<Value>Invalid Crc received</Value>
											<Id>4</Id>
										</Return>
									</Statement>
								</Compare>
								<Compare>
									<Condition>
										<Value1>t_slaveFrame.Command</Value1>
										<Operator>Equal</Operator>
										<Value2>ProcessData</Value2>
									</Condition>
									<Condition>
										<Value1>t_slaveFrame.ConnId</Value1>
										<Operator>NotEqual</Operator>
										<Value2>t_connectionId</Value2>
									</Condition>
									<Statement>
										<Return>
											<Type>Error</Type>
											<Value>Invalid Connection Id received</Value>
											<Id>3</Id>
										</Return>
									</Statement>
								</Compare>
								<Compare>
									<Condition>
										<Value1>t_slaveFrame.Command</Value1>
										<Operator>Equal</Operator>
										<Value2>FailSafeData</Value2>
									</Condition>
									<Condition>
										<Value1>t_slaveFrame.ConnId</Value1>
										<Operator>NotEqual</Operator>
										<Value2>t_connectionId</Value2>
									</Condition>
									<Statement>
										<Return>
											<Type>Error</Type>
											<Value>Invalid Connection Id received||Back to Reset</Value>
										</Return>
									</Statement>
								</Compare>
								<Compare>
									<Condition>
										<Value1>t_slaveFrame.Command</Value1>
										<Operator>Equal</Operator>
										<Value2>Reset</Value2>
									</Condition>
									<Statement>
										<CallFunction>GET_COMM_FAULT_REASON</CallFunction>
									</Statement>
									<Statement>
										<Return>
											<Type>Error</Type>
											<Value Param0="t_commFaultReason">Reset Cmd received , CommFaultReason: {0}</Value>
										</Return>
									</Statement>
								</Compare>
								<Compare>
									<Condition>
										<Value1>t_slaveFrame.Command</Value1>
										<Operator>Equal</Operator>
										<Value2>Session</Value2>
									</Condition>
									<Statement>
										<Return>
											<Type>Error</Type>
											<Value>Invalid Session Cmd received</Value>
										</Return>
									</Statement>
								</Compare>
								<Compare>
									<Condition>
										<Value1>t_slaveFrame.Command</Value1>
										<Operator>Equal</Operator>
										<Value2>Connection</Value2>
									</Condition>
									<Statement>
										<Return>
											<Type>Error</Type>
											<Value>Invalid Connection Cmd received</Value>
										</Return>
									</Statement>
								</Compare>
								<Compare>
									<Condition>
										<Value1>t_slaveFrame.Command</Value1>
										<Operator>Equal</Operator>
										<Value2>Parameter</Value2>
									</Condition>
									<Statement>
										<Return>
											<Type>Error</Type>
											<Value>Invalid Parameter Cmd received</Value>
										</Return>
									</Statement>
								</Compare>
								<Compare>
									<Condition>
										<Value1>t_slaveFrame.Command</Value1>
										<Operator>NotEqual</Operator>
										<Value2>Reset</Value2>
									</Condition>
									<Condition>
										<Value1>t_slaveFrame.Command</Value1>
										<Operator>NotEqual</Operator>
										<Value2>Session</Value2>
									</Condition>
									<Condition>
										<Value1>t_slaveFrame.Command</Value1>
										<Operator>NotEqual</Operator>
										<Value2>Connection</Value2>
									</Condition>
									<Condition>
										<Value1>t_slaveFrame.Command</Value1>
										<Operator>NotEqual</Operator>
										<Value2>Parameter</Value2>
									</Condition>
									<Condition>
										<Value1>t_slaveFrame.Command</Value1>
										<Operator>NotEqual</Operator>
										<Value2>ProcessData</Value2>
									</Condition>
									<Condition>
										<Value1>t_slaveFrame.Command</Value1>
										<Operator>NotEqual</Operator>
										<Value2>FailSafeData</Value2>
									</Condition>
									<Statement>
										<Return>
											<Type>Error</Type>
											<Value>Unknown CMD received</Value>
											<Id>2</Id>
										</Return>
									</Statement>
								</Compare>
								<Compare>
									<Condition>
										<Value1>1</Value1>
										<Operator>Equal</Operator>
										<Value2>1</Value2>
									</Condition>
									<Statement>
										<Return>
											<Type>Error</Type>
											<Value>General state machine error!</Value>
										</Return>
									</Statement>
								</Compare>
							</Compares>
						</TestStep>
					</TestSteps>
				</TestCase>
				<TestCase Name="#5.3 Data_Fail1" CaseId="7">
					<Comment>Falsche CRC_0 (+1); Command = ProcessData; SafeData = SafeOutputs</Comment>
					<CaseVariables>
						<Variable>
							<Name>c_crcIndex</Name>
							<Type>Int32</Type>
						</Variable>
						<Variable>
							<Name>c_CommFaultReason</Name>
							<Type>Byte</Type>
						</Variable>
						<Variable>
							<Name>c_tmpByte</Name>
							<Type>Byte</Type>
						</Variable>
					</CaseVariables>
					<TestSteps>
						<TestStep Name="SetVariables">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>c_CommFaultReason</Destination>
										<Source>INVALID_CRC</Source>
									</SetVariable>
									<SetVariable>
										<Destination>c_tmpByte</Destination>
										<Source>0</Source>
									</SetVariable>
									<SetVariable>
										<Destination>t_wdExpired</Destination>
										<Source>false</Source>
									</SetVariable>
									<SetVariable>
										<Destination>t_masterSessionId</Destination>
										<Source>1</Source>
									</SetVariable>
								</SetVariables>
							</Action>
						</TestStep>
						<TestStep Name="SetConnectionData">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>t_connectionId</Destination>
										<Source>3</Source>
									</SetVariable>
									<SetVariable>
										<Destination DestinationIndex="0">t_connData</Destination>
										<Source>t_connectionId</Source>
									</SetVariable>
									<SetVariable>
										<Destination DestinationIndex="2">t_connData</Destination>
										<Source>ConnData.SlaveAddress</Source>
									</SetVariable>
								</SetVariables>
							</Action>
							<Informations2>
								<Information>
									<Type>Output</Type>
									<Value Param0="t_connectionId" Param1="ConnData.SlaveAddress" Param2="t_connData">ConnectionId: {0} (0x{0:x4}), Slave Address: {1} (0x{1:x4}), Connection Data {2}</Value>
								</Information>
							</Informations2>
						</TestStep>
						<TestStep Name="SetParameterData">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>t_safePara</Destination>
										<Source>SafePara</Source>
									</SetVariable>
									<SetVariable>
										<Destination>t_watchdog</Destination>
										<Source>SafePara.Watchdog</Source>
									</SetVariable>
								</SetVariables>
							</Action>
							<Informations2>
								<Information>
									<Type>Output</Type>
									<Value Param0="t_watchdog" Param1="SafeParaSize" Param2="t_safePara">Watchdog: {0} ms, SafeParaSize: {1}, Safe Parameter {2}</Value>
								</Information>
							</Informations2>
						</TestStep>
						<TestStep Name="GotoData">
							<Action>
								<CallFunction>
									<Reference>RUN_DUT_TO_DATA</Reference>
								</CallFunction>
							</Action>
						</TestStep>
						<TestStep Name="SetLastCrc">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>LastCrc</Destination>
										<Source>t_slaveFrame.Crc0</Source>
									</SetVariable>
								</SetVariables>
							</Action>
						</TestStep>
						<TestStep Name="SetFrame">
							<Informations1>
								<Information>
									<Type>Verbose</Type>
									<Value Param0="SafeOutputs" Param1="LastCrc" Param2="t_masterSeqNo" Param3="OldMasterCrc" Param4="t_connectionId">SetFrame(Command Processdata, SafeData {0}, LastCrc 0x{1:x4}, ConnectionId 0x{4:x4},  SequenceNo 0x{2:x4}, OldCrc 0x{3:x4}, New true</Value>
								</Information>
							</Informations1>
							<Action>
								<SetFrame Name="t_masterFrame">
									<Command>
										<CommandValue>Data</CommandValue>
									</Command>
									<SafeData>
										<SafeDataVariable>SafeOutputs</SafeDataVariable>
									</SafeData>
									<LastCRC>LastCrc</LastCRC>
									<ConnectionID>
										<ConnectionIdVariable>t_connectionId</ConnectionIdVariable>
									</ConnectionID>
									<SequenceNo>t_masterSeqNo</SequenceNo>
									<OldCRC>OldMasterCrc</OldCRC>
									<New>true</New>
								</SetFrame>
							</Action>
							<ReturnValue>
								<OnFailure>
									<Type>Error</Type>
									<Value>Failed to set FSoE frame!</Value>
									<Id>256</Id>
								</OnFailure>
							</ReturnValue>
						</TestStep>
						<TestStep Name="SetInvalidCrc0">
							<Informations1>
								<Information>
									<Type>Output</Type>
									<Value Param0="t_masterFrame.Crc0">Valid Crc0 = 0x{0:x4}</Value>
								</Information>
							</Informations1>
							<Action>
								<CallFunction>
									<Reference>INCREMENT_CRC_0</Reference>
								</CallFunction>
							</Action>
							<Informations2>
								<Information>
									<Type>Output</Type>
									<Value Param0="t_masterFrame.Crc0">Falsified Crc0 = 0x{0:x4}</Value>
								</Information>
							</Informations2>
						</TestStep>
						<TestStep Name="SendFrame">
							<Action>
								<SendFrame Name="t_masterFrame"/>
							</Action>
							<Informations2>
								<Information>
									<Type>Verbose</Type>
									<Value Param0="t_masterFrame.FrameData">Master Frame: {0}</Value>
								</Information>
							</Informations2>
							<ReturnValue>
								<OnFailure>
									<Type>Error</Type>
									<Value>Failed to send FSoE frame!</Value>
									<Id>256</Id>
								</OnFailure>
							</ReturnValue>
						</TestStep>
						<TestStep Name="CheckReceivedSlaveFrame">
							<Action>
								<CallFunction>
									<Reference>CHECK_RESET_FAIL</Reference>
								</CallFunction>
							</Action>
							<ReturnValue>
								<OnSuccess>
									<Type>Success</Type>
									<Value Param0="c_CommFaultReason">Expected CommFaultReason ({0}) received</Value>
								</OnSuccess>
							</ReturnValue>
						</TestStep>
					</TestSteps>
				</TestCase>
				<TestCase Name="#5.4 Data_Fail1" CaseId="8">
					<Comment>Falsche CRC_0 (-1); Command = ProcessData; SafeData = SafeOutputs</Comment>
					<CaseVariables>
						<Variable>
							<Name>c_crcIndex</Name>
							<Type>Int32</Type>
						</Variable>
						<Variable>
							<Name>c_CommFaultReason</Name>
							<Type>Byte</Type>
						</Variable>
						<Variable>
							<Name>c_tmpByte</Name>
							<Type>Byte</Type>
						</Variable>
					</CaseVariables>
					<TestSteps>
						<TestStep Name="SetVariables">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>c_CommFaultReason</Destination>
										<Source>INVALID_CRC</Source>
									</SetVariable>
									<SetVariable>
										<Destination>c_tmpByte</Destination>
										<Source>0</Source>
									</SetVariable>
									<SetVariable>
										<Destination>t_wdExpired</Destination>
										<Source>false</Source>
									</SetVariable>
									<SetVariable>
										<Destination>t_masterSessionId</Destination>
										<Source>1</Source>
									</SetVariable>
								</SetVariables>
							</Action>
						</TestStep>
						<TestStep Name="SetConnectionData">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>t_connectionId</Destination>
										<Source>3</Source>
									</SetVariable>
									<SetVariable>
										<Destination DestinationIndex="0">t_connData</Destination>
										<Source>t_connectionId</Source>
									</SetVariable>
									<SetVariable>
										<Destination DestinationIndex="2">t_connData</Destination>
										<Source>ConnData.SlaveAddress</Source>
									</SetVariable>
								</SetVariables>
							</Action>
							<Informations2>
								<Information>
									<Type>Output</Type>
									<Value Param0="t_connectionId" Param1="ConnData.SlaveAddress" Param2="t_connData">ConnectionId: {0} (0x{0:x4}), Slave Address: {1} (0x{1:x4}), Connection Data {2}</Value>
								</Information>
							</Informations2>
						</TestStep>
						<TestStep Name="SetParameterData">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>t_safePara</Destination>
										<Source>SafePara</Source>
									</SetVariable>
									<SetVariable>
										<Destination>t_watchdog</Destination>
										<Source>SafePara.Watchdog</Source>
									</SetVariable>
								</SetVariables>
							</Action>
							<Informations2>
								<Information>
									<Type>Output</Type>
									<Value Param0="t_watchdog" Param1="SafeParaSize" Param2="t_safePara">Watchdog: {0} ms, SafeParaSize: {1}, Safe Parameter {2}</Value>
								</Information>
							</Informations2>
						</TestStep>
						<TestStep Name="GotoData">
							<Action>
								<CallFunction>
									<Reference>RUN_DUT_TO_DATA</Reference>
								</CallFunction>
							</Action>
						</TestStep>
						<TestStep Name="SetLastCrc">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>LastCrc</Destination>
										<Source>t_slaveFrame.Crc0</Source>
									</SetVariable>
								</SetVariables>
							</Action>
						</TestStep>
						<TestStep Name="SetFrame">
							<Informations1>
								<Information>
									<Type>Verbose</Type>
									<Value Param0="SafeOutputs" Param1="LastCrc" Param2="t_masterSeqNo" Param3="OldMasterCrc" Param4="t_connectionId">SetFrame(Command Processdata, SafeData {0}, LastCrc 0x{1:x4}, ConnectionId 0x{4:x4},  SequenceNo 0x{2:x4}, OldCrc 0x{3:x4}, New true</Value>
								</Information>
							</Informations1>
							<Action>
								<SetFrame Name="t_masterFrame">
									<Command>
										<CommandValue>Data</CommandValue>
									</Command>
									<SafeData>
										<SafeDataVariable>SafeOutputs</SafeDataVariable>
									</SafeData>
									<LastCRC>LastCrc</LastCRC>
									<ConnectionID>
										<ConnectionIdVariable>t_connectionId</ConnectionIdVariable>
									</ConnectionID>
									<SequenceNo>t_masterSeqNo</SequenceNo>
									<OldCRC>OldMasterCrc</OldCRC>
									<New>true</New>
								</SetFrame>
							</Action>
							<ReturnValue>
								<OnFailure>
									<Type>Error</Type>
									<Value>Failed to set FSoE frame!</Value>
									<Id>256</Id>
								</OnFailure>
							</ReturnValue>
						</TestStep>
						<TestStep Name="SetInvalidCrc0">
							<Informations1>
								<Information>
									<Type>Output</Type>
									<Value Param0="t_masterFrame.Crc0">Valid Crc0 = 0x{0:x4}</Value>
								</Information>
							</Informations1>
							<Action>
								<CallFunction>
									<Reference>DECREMENT_CRC_0</Reference>
								</CallFunction>
							</Action>
							<Informations2>
								<Information>
									<Type>Output</Type>
									<Value Param0="t_masterFrame.Crc0">Falsified Crc0 = 0x{0:x4}</Value>
								</Information>
							</Informations2>
						</TestStep>
						<TestStep Name="SendFrame">
							<Action>
								<SendFrame Name="t_masterFrame"/>
							</Action>
							<Informations2>
								<Information>
									<Type>Verbose</Type>
									<Value Param0="t_masterFrame.FrameData">Master Frame: {0}</Value>
								</Information>
							</Informations2>
							<ReturnValue>
								<OnFailure>
									<Type>Error</Type>
									<Value>Failed to send FSoE frame!</Value>
									<Id>256</Id>
								</OnFailure>
							</ReturnValue>
						</TestStep>
						<TestStep Name="CheckReceivedSlaveFrame">
							<Action>
								<CallFunction>
									<Reference>CHECK_RESET_FAIL</Reference>
								</CallFunction>
							</Action>
							<ReturnValue>
								<OnSuccess>
									<Type>Success</Type>
									<Value Param0="c_CommFaultReason">Expected CommFaultReason ({0}) received</Value>
								</OnSuccess>
							</ReturnValue>
						</TestStep>
					</TestSteps>
				</TestCase>
				<TestCase Name="#5.5 Data_Fail1" CaseId="9">
					<Comment>Falsche CRC_0 (+1); Command = FailSafeData; SafeData = FailSafeValue</Comment>
					<CaseVariables>
						<Variable>
							<Name>c_crcIndex</Name>
							<Type>Int32</Type>
						</Variable>
						<Variable>
							<Name>c_CommFaultReason</Name>
							<Type>Byte</Type>
						</Variable>
						<Variable>
							<Name>c_tmpByte</Name>
							<Type>Byte</Type>
						</Variable>
					</CaseVariables>
					<TestSteps>
						<TestStep Name="SetVariables">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>c_CommFaultReason</Destination>
										<Source>INVALID_CRC</Source>
									</SetVariable>
									<SetVariable>
										<Destination>c_tmpByte</Destination>
										<Source>0</Source>
									</SetVariable>
									<SetVariable>
										<Destination>t_wdExpired</Destination>
										<Source>false</Source>
									</SetVariable>
									<SetVariable>
										<Destination>t_masterSessionId</Destination>
										<Source>1</Source>
									</SetVariable>
								</SetVariables>
							</Action>
						</TestStep>
						<TestStep Name="SetConnectionData">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>t_connectionId</Destination>
										<Source>3</Source>
									</SetVariable>
									<SetVariable>
										<Destination DestinationIndex="0">t_connData</Destination>
										<Source>t_connectionId</Source>
									</SetVariable>
									<SetVariable>
										<Destination DestinationIndex="2">t_connData</Destination>
										<Source>ConnData.SlaveAddress</Source>
									</SetVariable>
								</SetVariables>
							</Action>
							<Informations2>
								<Information>
									<Type>Output</Type>
									<Value Param0="t_connectionId" Param1="ConnData.SlaveAddress" Param2="t_connData">ConnectionId: {0} (0x{0:x4}), Slave Address: {1} (0x{1:x4}), Connection Data {2}</Value>
								</Information>
							</Informations2>
						</TestStep>
						<TestStep Name="SetParameterData">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>t_safePara</Destination>
										<Source>SafePara</Source>
									</SetVariable>
									<SetVariable>
										<Destination>t_watchdog</Destination>
										<Source>SafePara.Watchdog</Source>
									</SetVariable>
								</SetVariables>
							</Action>
							<Informations2>
								<Information>
									<Type>Output</Type>
									<Value Param0="t_watchdog" Param1="SafeParaSize" Param2="t_safePara">Watchdog: {0} ms, SafeParaSize: {1}, Safe Parameter {2}</Value>
								</Information>
							</Informations2>
						</TestStep>
						<TestStep Name="GotoData">
							<Action>
								<CallFunction>
									<Reference>RUN_DUT_TO_DATA</Reference>
								</CallFunction>
							</Action>
						</TestStep>
						<TestStep Name="SetLastCrc">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>LastCrc</Destination>
										<Source>t_slaveFrame.Crc0</Source>
									</SetVariable>
								</SetVariables>
							</Action>
						</TestStep>
						<TestStep Name="SetFrame">
							<Informations1>
								<Information>
									<Type>Verbose</Type>
									<Value Param0="FailSafeValue" Param1="LastCrc" Param2="t_masterSeqNo" Param3="OldMasterCrc" Param4="t_connectionId">SetFrame(Command FailSafeData, SafeData {0}, LastCrc 0x{1:x4}, ConnectionId 0x{4:x4},  SequenceNo 0x{2:x4}, OldCrc 0x{3:x4}, New true</Value>
								</Information>
							</Informations1>
							<Action>
								<SetFrame Name="t_masterFrame">
									<Command>
										<CommandValue>FailSafeData</CommandValue>
									</Command>
									<SafeData>
										<SafeDataVariable>FailSafeValue</SafeDataVariable>
									</SafeData>
									<LastCRC>LastCrc</LastCRC>
									<ConnectionID>
										<ConnectionIdVariable>t_connectionId</ConnectionIdVariable>
									</ConnectionID>
									<SequenceNo>t_masterSeqNo</SequenceNo>
									<OldCRC>OldMasterCrc</OldCRC>
									<New>true</New>
								</SetFrame>
							</Action>
							<ReturnValue>
								<OnFailure>
									<Type>Error</Type>
									<Value>Failed to set FSoE frame!</Value>
									<Id>256</Id>
								</OnFailure>
							</ReturnValue>
						</TestStep>
						<TestStep Name="SetInvalidCrc0">
							<Informations1>
								<Information>
									<Type>Output</Type>
									<Value Param0="t_masterFrame.Crc0">Valid Crc0 = 0x{0:x4}</Value>
								</Information>
							</Informations1>
							<Action>
								<CallFunction>
									<Reference>INCREMENT_CRC_0</Reference>
								</CallFunction>
							</Action>
							<Informations2>
								<Information>
									<Type>Output</Type>
									<Value Param0="t_masterFrame.Crc0">Falsified Crc0 = 0x{0:x4}</Value>
								</Information>
							</Informations2>
						</TestStep>
						<TestStep Name="SendFrame">
							<Action>
								<SendFrame Name="t_masterFrame"/>
							</Action>
							<Informations2>
								<Information>
									<Type>Verbose</Type>
									<Value Param0="t_masterFrame.FrameData">Master Frame: {0}</Value>
								</Information>
							</Informations2>
							<ReturnValue>
								<OnFailure>
									<Type>Error</Type>
									<Value>Failed to send FSoE frame!</Value>
									<Id>256</Id>
								</OnFailure>
							</ReturnValue>
						</TestStep>
						<TestStep Name="CheckReceivedSlaveFrame">
							<Action>
								<CallFunction>
									<Reference>CHECK_RESET_FAIL</Reference>
								</CallFunction>
							</Action>
							<ReturnValue>
								<OnSuccess>
									<Type>Success</Type>
									<Value Param0="c_CommFaultReason">Expected CommFaultReason ({0}) received</Value>
								</OnSuccess>
							</ReturnValue>
						</TestStep>
					</TestSteps>
				</TestCase>
				<TestCase Name="#5.6 Data_Fail1" CaseId="10">
					<Comment>Falsche CRC_0 (-1); Command = FailSafeData; SafeData = FailSafeValue</Comment>
					<CaseVariables>
						<Variable>
							<Name>c_crcIndex</Name>
							<Type>Int32</Type>
						</Variable>
						<Variable>
							<Name>c_CommFaultReason</Name>
							<Type>Byte</Type>
						</Variable>
						<Variable>
							<Name>c_tmpByte</Name>
							<Type>Byte</Type>
						</Variable>
					</CaseVariables>
					<TestSteps>
						<TestStep Name="SetVariables">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>c_CommFaultReason</Destination>
										<Source>INVALID_CRC</Source>
									</SetVariable>
									<SetVariable>
										<Destination>c_tmpByte</Destination>
										<Source>0</Source>
									</SetVariable>
									<SetVariable>
										<Destination>t_wdExpired</Destination>
										<Source>false</Source>
									</SetVariable>
									<SetVariable>
										<Destination>t_masterSessionId</Destination>
										<Source>1</Source>
									</SetVariable>
								</SetVariables>
							</Action>
						</TestStep>
						<TestStep Name="SetConnectionData">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>t_connectionId</Destination>
										<Source>3</Source>
									</SetVariable>
									<SetVariable>
										<Destination DestinationIndex="0">t_connData</Destination>
										<Source>t_connectionId</Source>
									</SetVariable>
									<SetVariable>
										<Destination DestinationIndex="2">t_connData</Destination>
										<Source>ConnData.SlaveAddress</Source>
									</SetVariable>
								</SetVariables>
							</Action>
							<Informations2>
								<Information>
									<Type>Output</Type>
									<Value Param0="t_connectionId" Param1="ConnData.SlaveAddress" Param2="t_connData">ConnectionId: {0} (0x{0:x4}), Slave Address: {1} (0x{1:x4}), Connection Data {2}</Value>
								</Information>
							</Informations2>
						</TestStep>
						<TestStep Name="SetParameterData">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>t_safePara</Destination>
										<Source>SafePara</Source>
									</SetVariable>
									<SetVariable>
										<Destination>t_watchdog</Destination>
										<Source>SafePara.Watchdog</Source>
									</SetVariable>
								</SetVariables>
							</Action>
							<Informations2>
								<Information>
									<Type>Output</Type>
									<Value Param0="t_watchdog" Param1="SafeParaSize" Param2="t_safePara">Watchdog: {0} ms, SafeParaSize: {1}, Safe Parameter {2}</Value>
								</Information>
							</Informations2>
						</TestStep>
						<TestStep Name="GotoData">
							<Action>
								<CallFunction>
									<Reference>RUN_DUT_TO_DATA</Reference>
								</CallFunction>
							</Action>
						</TestStep>
						<TestStep Name="SetLastCrc">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>LastCrc</Destination>
										<Source>t_slaveFrame.Crc0</Source>
									</SetVariable>
								</SetVariables>
							</Action>
						</TestStep>
						<TestStep Name="SetFrame">
							<Informations1>
								<Information>
									<Type>Verbose</Type>
									<Value Param0="FailSafeValue" Param1="LastCrc" Param2="t_masterSeqNo" Param3="OldMasterCrc" Param4="t_connectionId">SetFrame(Command FailSafeData, SafeData {0}, LastCrc 0x{1:x4}, ConnectionId 0x{4:x4},  SequenceNo 0x{2:x4}, OldCrc 0x{3:x4}, New true</Value>
								</Information>
							</Informations1>
							<Action>
								<SetFrame Name="t_masterFrame">
									<Command>
										<CommandValue>FailSafeData</CommandValue>
									</Command>
									<SafeData>
										<SafeDataVariable>FailSafeValue</SafeDataVariable>
									</SafeData>
									<LastCRC>LastCrc</LastCRC>
									<ConnectionID>
										<ConnectionIdVariable>t_connectionId</ConnectionIdVariable>
									</ConnectionID>
									<SequenceNo>t_masterSeqNo</SequenceNo>
									<OldCRC>OldMasterCrc</OldCRC>
									<New>true</New>
								</SetFrame>
							</Action>
							<ReturnValue>
								<OnFailure>
									<Type>Error</Type>
									<Value>Failed to set FSoE frame!</Value>
									<Id>256</Id>
								</OnFailure>
							</ReturnValue>
						</TestStep>
						<TestStep Name="SetInvalidCrc0">
							<Informations1>
								<Information>
									<Type>Output</Type>
									<Value Param0="t_masterFrame.Crc0">Valid Crc0 = 0x{0:x4}</Value>
								</Information>
							</Informations1>
							<Action>
								<CallFunction>
									<Reference>DECREMENT_CRC_0</Reference>
								</CallFunction>
							</Action>
							<Informations2>
								<Information>
									<Type>Output</Type>
									<Value Param0="t_masterFrame.Crc0">Falsified Crc0 = 0x{0:x4}</Value>
								</Information>
							</Informations2>
						</TestStep>
						<TestStep Name="SendFrame">
							<Action>
								<SendFrame Name="t_masterFrame"/>
							</Action>
							<Informations2>
								<Information>
									<Type>Verbose</Type>
									<Value Param0="t_masterFrame.FrameData">Master Frame: {0}</Value>
								</Information>
							</Informations2>
							<ReturnValue>
								<OnFailure>
									<Type>Error</Type>
									<Value>Failed to send FSoE frame!</Value>
									<Id>256</Id>
								</OnFailure>
							</ReturnValue>
						</TestStep>
						<TestStep Name="CheckReceivedSlaveFrame">
							<Action>
								<CallFunction>
									<Reference>CHECK_RESET_FAIL</Reference>
								</CallFunction>
							</Action>
							<ReturnValue>
								<OnSuccess>
									<Type>Success</Type>
									<Value Param0="c_CommFaultReason">Expected CommFaultReason ({0}) received</Value>
								</OnSuccess>
							</ReturnValue>
						</TestStep>
					</TestSteps>
				</TestCase>
				<TestCase Name="#5.7 Data_Fail1" CaseId="11">
					<Comment>Falsche CRC_1 bis CRC_n  (+1); Command = ProcessData; SafeData = SafeOutputs</Comment>
					<CaseVariables>
						<Variable>
							<Name>c_CommFaultReason</Name>
							<Type>Byte</Type>
						</Variable>
						<Variable>
							<Name>c_tmpByte</Name>
							<Type>Byte</Type>
						</Variable>
						<Variable>
							<Name>c_crcIndex</Name>
							<Type>Int32</Type>
						</Variable>
						<Variable>
							<Name>c_tmpCrcn</Name>
							<Type>UInt16</Type>
						</Variable>
					</CaseVariables>
					<TestSteps>
						<TestStep Name="CheckCRCLength">
							<Compares>
								<Compare>
									<Condition>
										<Value1>CrcLength</Value1>
										<Operator>Equal</Operator>
										<Value2>1</Value2>
									</Condition>
									<Statement>
										<Return>
											<Type>SkippedCase</Type>
											<Value>Crc count ==1; ==> skip testcase</Value>
										</Return>
									</Statement>
								</Compare>
							</Compares>
						</TestStep>
						<TestStep Name="SetVariables">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>c_CommFaultReason</Destination>
										<Source>INVALID_CRC</Source>
									</SetVariable>
									<SetVariable>
										<Destination>c_tmpByte</Destination>
										<Source>0</Source>
									</SetVariable>
									<SetVariable>
										<Destination>t_wdExpired</Destination>
										<Source>false</Source>
									</SetVariable>
									<SetVariable>
										<Destination>t_masterSessionId</Destination>
										<Source>1</Source>
									</SetVariable>
									<SetVariable>
										<Destination>c_crcIndex</Destination>
										<Source>1</Source>
									</SetVariable>
								</SetVariables>
							</Action>
						</TestStep>
						<TestStep Name="SetConnectionData">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>t_connectionId</Destination>
										<Source>3</Source>
									</SetVariable>
									<SetVariable>
										<Destination DestinationIndex="0">t_connData</Destination>
										<Source>t_connectionId</Source>
									</SetVariable>
									<SetVariable>
										<Destination DestinationIndex="2">t_connData</Destination>
										<Source>ConnData.SlaveAddress</Source>
									</SetVariable>
								</SetVariables>
							</Action>
							<Informations2>
								<Information>
									<Type>Output</Type>
									<Value Param0="t_connectionId" Param1="ConnData.SlaveAddress" Param2="t_connData">ConnectionId: {0} (0x{0:x4}), Slave Address: {1} (0x{1:x4}), Connection Data {2}</Value>
								</Information>
							</Informations2>
						</TestStep>
						<TestStep Name="SetParameterData">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>t_safePara</Destination>
										<Source>SafePara</Source>
									</SetVariable>
									<SetVariable>
										<Destination>t_watchdog</Destination>
										<Source>SafePara.Watchdog</Source>
									</SetVariable>
								</SetVariables>
							</Action>
							<Informations2>
								<Information>
									<Type>Output</Type>
									<Value Param0="t_watchdog" Param1="SafeParaSize" Param2="t_safePara">Watchdog: {0} ms, SafeParaSize: {1}, Safe Parameter {2}</Value>
								</Information>
							</Informations2>
						</TestStep>
						<TestStep Name="GotoData">
							<Action>
								<CallFunction>
									<Reference>RUN_DUT_TO_DATA</Reference>
								</CallFunction>
							</Action>
						</TestStep>
						<TestStep Name="SetLastCrc">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>LastCrc</Destination>
										<Source>t_slaveFrame.Crc0</Source>
									</SetVariable>
								</SetVariables>
							</Action>
						</TestStep>
						<TestStep Name="SetFrame">
							<Informations1>
								<Information>
									<Type>Verbose</Type>
									<Value Param0="SafeOutputs" Param1="LastCrc" Param2="t_masterSeqNo" Param3="OldMasterCrc" Param4="t_connectionId">SetFrame(Command ProcessData, SafeData {0}, LastCrc 0x{1:x4}, ConnectionId 0x{4:x4},  SequenceNo 0x{2:x4}, OldCrc 0x{3:x4}, New true</Value>
								</Information>
							</Informations1>
							<Action>
								<SetFrame Name="t_masterFrame">
									<Command>
										<CommandValue>Data</CommandValue>
									</Command>
									<SafeData>
										<SafeDataVariable>SafeOutputs</SafeDataVariable>
									</SafeData>
									<LastCRC>LastCrc</LastCRC>
									<ConnectionID>
										<ConnectionIdVariable>t_connectionId</ConnectionIdVariable>
									</ConnectionID>
									<SequenceNo>t_masterSeqNo</SequenceNo>
									<OldCRC>OldMasterCrc</OldCRC>
									<New>true</New>
								</SetFrame>
							</Action>
						</TestStep>
						<TestStep Name="SetInvalidCrc_n">
							<Informations1>
								<Information>
									<Type>Output</Type>
									<Value Param0="c_crcIndex" Param1="t_masterFrame.Crcs[c_crcIndex]">Valid Crc[{0}]: 0x{1:x4}</Value>
								</Information>
							</Informations1>
							<Action>
								<CallFunction>
									<Reference>INCREMENT_CRC_N</Reference>
								</CallFunction>
							</Action>
							<Informations2>
								<Information>
									<Type>Output</Type>
									<Value Param0="c_crcIndex" Param1="t_masterFrame.Crcs[c_crcIndex]">Falsified Crc[{0}]: 0x{1:x4}</Value>
								</Information>
							</Informations2>
						</TestStep>
						<TestStep Name="SendFrame">
							<Action>
								<SendFrame Name="t_masterFrame"/>
							</Action>
							<Informations2>
								<Information>
									<Type>Verbose</Type>
									<Value Param0="t_masterFrame.FrameData">Master Frame: {0}</Value>
								</Information>
							</Informations2>
							<ReturnValue>
								<OnFailure>
									<Type>Error</Type>
									<Value>Failed to send FSoE frame!</Value>
									<Id>256</Id>
								</OnFailure>
							</ReturnValue>
						</TestStep>
						<TestStep Name="SetCrcIndex">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>c_crcIndex</Destination>
										<Source>c_crcIndex+1</Source>
									</SetVariable>
								</SetVariables>
							</Action>
							<Informations2>
								<Information>
									<Type>Verbose</Type>
									<Value Param0="c_crcIndex">Index :{0}</Value>
								</Information>
							</Informations2>
						</TestStep>
						<TestStep Name="CheckReceivedSlaveFrame">
							<Action>
								<CallFunction>
									<Reference>CHECK_RESET_FAIL</Reference>
								</CallFunction>
							</Action>
							<Compares>
								<Compare>
									<Condition>
										<Value1>c_crcIndex</Value1>
										<Operator>Lower</Operator>
										<Value2>CrcLength</Value2>
									</Condition>
									<Statement>
										<GotoStep>GotoData</GotoStep>
									</Statement>
								</Compare>
								<Compare>
									<Condition>
										<Value1>c_crcIndex</Value1>
										<Operator>GreaterOrEqual</Operator>
										<Value2>CrcLength</Value2>
									</Condition>
									<Statement>
										<Return>
											<Type>Success</Type>
											<Value Param0="c_CommFaultReason">Expected CommFaultReason ({0}) received</Value>
										</Return>
									</Statement>
								</Compare>
							</Compares>
						</TestStep>
					</TestSteps>
				</TestCase>
				<TestCase Name="#5.8 Data_Fail1" CaseId="12">
					<Comment>Falsche CRC_1 bis CRC_n  (-1); Command = ProcessData; SafeData = SafeOutputs</Comment>
					<CaseVariables>
						<Variable>
							<Name>c_CommFaultReason</Name>
							<Type>Byte</Type>
						</Variable>
						<Variable>
							<Name>c_tmpByte</Name>
							<Type>Byte</Type>
						</Variable>
						<Variable>
							<Name>c_crcIndex</Name>
							<Type>Int32</Type>
						</Variable>
						<Variable>
							<Name>c_tmpCrcn</Name>
							<Type>UInt16</Type>
						</Variable>
					</CaseVariables>
					<TestSteps>
						<TestStep Name="CheckCRCLength">
							<Compares>
								<Compare>
									<Condition>
										<Value1>CrcLength</Value1>
										<Operator>Equal</Operator>
										<Value2>1</Value2>
									</Condition>
									<Statement>
										<Return>
											<Type>SkippedCase</Type>
											<Value>Crc count ==1; ==> skip testcase</Value>
										</Return>
									</Statement>
								</Compare>
							</Compares>
						</TestStep>
						<TestStep Name="SetVariables">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>c_CommFaultReason</Destination>
										<Source>INVALID_CRC</Source>
									</SetVariable>
									<SetVariable>
										<Destination>c_tmpByte</Destination>
										<Source>0</Source>
									</SetVariable>
									<SetVariable>
										<Destination>t_wdExpired</Destination>
										<Source>false</Source>
									</SetVariable>
									<SetVariable>
										<Destination>t_masterSessionId</Destination>
										<Source>1</Source>
									</SetVariable>
									<SetVariable>
										<Destination>c_crcIndex</Destination>
										<Source>1</Source>
									</SetVariable>
								</SetVariables>
							</Action>
						</TestStep>
						<TestStep Name="SetConnectionData">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>t_connectionId</Destination>
										<Source>3</Source>
									</SetVariable>
									<SetVariable>
										<Destination DestinationIndex="0">t_connData</Destination>
										<Source>t_connectionId</Source>
									</SetVariable>
									<SetVariable>
										<Destination DestinationIndex="2">t_connData</Destination>
										<Source>ConnData.SlaveAddress</Source>
									</SetVariable>
								</SetVariables>
							</Action>
							<Informations2>
								<Information>
									<Type>Output</Type>
									<Value Param0="t_connectionId" Param1="ConnData.SlaveAddress" Param2="t_connData">ConnectionId: {0} (0x{0:x4}), Slave Address: {1} (0x{1:x4}), Connection Data {2}</Value>
								</Information>
							</Informations2>
						</TestStep>
						<TestStep Name="SetParameterData">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>t_safePara</Destination>
										<Source>SafePara</Source>
									</SetVariable>
									<SetVariable>
										<Destination>t_watchdog</Destination>
										<Source>SafePara.Watchdog</Source>
									</SetVariable>
								</SetVariables>
							</Action>
							<Informations2>
								<Information>
									<Type>Output</Type>
									<Value Param0="t_watchdog" Param1="SafeParaSize" Param2="t_safePara">Watchdog: {0} ms, SafeParaSize: {1}, Safe Parameter {2}</Value>
								</Information>
							</Informations2>
						</TestStep>
						<TestStep Name="GotoData">
							<Action>
								<CallFunction>
									<Reference>RUN_DUT_TO_DATA</Reference>
								</CallFunction>
							</Action>
						</TestStep>
						<TestStep Name="SetLastCrc">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>LastCrc</Destination>
										<Source>t_slaveFrame.Crc0</Source>
									</SetVariable>
								</SetVariables>
							</Action>
						</TestStep>
						<TestStep Name="SetFrame">
							<Informations1>
								<Information>
									<Type>Verbose</Type>
									<Value Param0="SafeOutputs" Param1="LastCrc" Param2="t_masterSeqNo" Param3="OldMasterCrc" Param4="t_connectionId">SetFrame(Command ProcessData, SafeData {0}, LastCrc 0x{1:x4}, ConnectionId 0x{4:x4},  SequenceNo 0x{2:x4}, OldCrc 0x{3:x4}, New true</Value>
								</Information>
							</Informations1>
							<Action>
								<SetFrame Name="t_masterFrame">
									<Command>
										<CommandValue>Data</CommandValue>
									</Command>
									<SafeData>
										<SafeDataVariable>SafeOutputs</SafeDataVariable>
									</SafeData>
									<LastCRC>LastCrc</LastCRC>
									<ConnectionID>
										<ConnectionIdVariable>t_connectionId</ConnectionIdVariable>
									</ConnectionID>
									<SequenceNo>t_masterSeqNo</SequenceNo>
									<OldCRC>OldMasterCrc</OldCRC>
									<New>true</New>
								</SetFrame>
							</Action>
						</TestStep>
						<TestStep Name="SetInvalidCrc_n">
							<Informations1>
								<Information>
									<Type>Output</Type>
									<Value Param0="c_crcIndex" Param1="t_masterFrame.Crcs[c_crcIndex]">Valid Crc[{0}]: 0x{1:x4}</Value>
								</Information>
							</Informations1>
							<Action>
								<CallFunction>
									<Reference>DECREMENT_CRC_N</Reference>
								</CallFunction>
							</Action>
							<Informations2>
								<Information>
									<Type>Output</Type>
									<Value Param0="c_crcIndex" Param1="t_masterFrame.Crcs[c_crcIndex]">Falsified Crc[{0}]: 0x{1:x4}</Value>
								</Information>
							</Informations2>
						</TestStep>
						<TestStep Name="SendFrame">
							<Action>
								<SendFrame Name="t_masterFrame"/>
							</Action>
							<Informations2>
								<Information>
									<Type>Verbose</Type>
									<Value Param0="t_masterFrame.FrameData">Master Frame: {0}</Value>
								</Information>
							</Informations2>
							<ReturnValue>
								<OnFailure>
									<Type>Error</Type>
									<Value>Failed to send FSoE frame!</Value>
									<Id>256</Id>
								</OnFailure>
							</ReturnValue>
						</TestStep>
						<TestStep Name="SetCrcIndex">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>c_crcIndex</Destination>
										<Source>c_crcIndex+1</Source>
									</SetVariable>
								</SetVariables>
							</Action>
							<Informations2>
								<Information>
									<Type>Verbose</Type>
									<Value Param0="c_crcIndex">Index :{0}</Value>
								</Information>
							</Informations2>
						</TestStep>
						<TestStep Name="CheckReceivedSlaveFrame">
							<Action>
								<CallFunction>
									<Reference>CHECK_RESET_FAIL</Reference>
								</CallFunction>
							</Action>
							<Compares>
								<Compare>
									<Condition>
										<Value1>c_crcIndex</Value1>
										<Operator>Lower</Operator>
										<Value2>CrcLength</Value2>
									</Condition>
									<Statement>
										<GotoStep>GotoData</GotoStep>
									</Statement>
								</Compare>
								<Compare>
									<Condition>
										<Value1>c_crcIndex</Value1>
										<Operator>GreaterOrEqual</Operator>
										<Value2>CrcLength</Value2>
									</Condition>
									<Statement>
										<Return>
											<Type>Success</Type>
											<Value Param0="c_CommFaultReason">Expected CommFaultReason ({0}) received</Value>
										</Return>
									</Statement>
								</Compare>
							</Compares>
						</TestStep>
					</TestSteps>
				</TestCase>
				<TestCase Name="#5.9 Data_Fail1" CaseId="13">
					<Comment>Falsche CRC_1 bis CRC_n  (+1); Command = FailSafeData; SafeData = FailSafeValue</Comment>
					<CaseVariables>
						<Variable>
							<Name>c_CommFaultReason</Name>
							<Type>Byte</Type>
						</Variable>
						<Variable>
							<Name>c_tmpByte</Name>
							<Type>Byte</Type>
						</Variable>
						<Variable>
							<Name>c_crcIndex</Name>
							<Type>Int32</Type>
						</Variable>
						<Variable>
							<Name>c_tmpCrcn</Name>
							<Type>UInt16</Type>
						</Variable>
					</CaseVariables>
					<TestSteps>
						<TestStep Name="CheckCRCLength">
							<Compares>
								<Compare>
									<Condition>
										<Value1>CrcLength</Value1>
										<Operator>Equal</Operator>
										<Value2>1</Value2>
									</Condition>
									<Statement>
										<Return>
											<Type>SkippedCase</Type>
											<Value>Crc count ==1; ==> skip testcase</Value>
										</Return>
									</Statement>
								</Compare>
							</Compares>
						</TestStep>
						<TestStep Name="SetVariables">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>c_CommFaultReason</Destination>
										<Source>INVALID_CRC</Source>
									</SetVariable>
									<SetVariable>
										<Destination>c_tmpByte</Destination>
										<Source>0</Source>
									</SetVariable>
									<SetVariable>
										<Destination>t_wdExpired</Destination>
										<Source>false</Source>
									</SetVariable>
									<SetVariable>
										<Destination>t_masterSessionId</Destination>
										<Source>1</Source>
									</SetVariable>
									<SetVariable>
										<Destination>c_crcIndex</Destination>
										<Source>1</Source>
									</SetVariable>
								</SetVariables>
							</Action>
						</TestStep>
						<TestStep Name="SetConnectionData">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>t_connectionId</Destination>
										<Source>3</Source>
									</SetVariable>
									<SetVariable>
										<Destination DestinationIndex="0">t_connData</Destination>
										<Source>t_connectionId</Source>
									</SetVariable>
									<SetVariable>
										<Destination DestinationIndex="2">t_connData</Destination>
										<Source>ConnData.SlaveAddress</Source>
									</SetVariable>
								</SetVariables>
							</Action>
							<Informations2>
								<Information>
									<Type>Output</Type>
									<Value Param0="t_connectionId" Param1="ConnData.SlaveAddress" Param2="t_connData">ConnectionId: {0} (0x{0:x4}), Slave Address: {1} (0x{1:x4}), Connection Data {2}</Value>
								</Information>
							</Informations2>
						</TestStep>
						<TestStep Name="SetParameterData">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>t_safePara</Destination>
										<Source>SafePara</Source>
									</SetVariable>
									<SetVariable>
										<Destination>t_watchdog</Destination>
										<Source>SafePara.Watchdog</Source>
									</SetVariable>
								</SetVariables>
							</Action>
							<Informations2>
								<Information>
									<Type>Output</Type>
									<Value Param0="t_watchdog" Param1="SafeParaSize" Param2="t_safePara">Watchdog: {0} ms, SafeParaSize: {1}, Safe Parameter {2}</Value>
								</Information>
							</Informations2>
						</TestStep>
						<TestStep Name="GotoData">
							<Action>
								<CallFunction>
									<Reference>RUN_DUT_TO_DATA</Reference>
								</CallFunction>
							</Action>
						</TestStep>
						<TestStep Name="SetLastCrc">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>LastCrc</Destination>
										<Source>t_slaveFrame.Crc0</Source>
									</SetVariable>
								</SetVariables>
							</Action>
						</TestStep>
						<TestStep Name="SetFrame">
							<Informations1>
								<Information>
									<Type>Verbose</Type>
									<Value Param0="FailSafeValue" Param1="LastCrc" Param2="t_masterSeqNo" Param3="OldMasterCrc" Param4="t_connectionId">SetFrame(Command FailSafeData, SafeData {0}, LastCrc 0x{1:x4}, ConnectionId 0x{4:x4},  SequenceNo 0x{2:x4}, OldCrc 0x{3:x4}, New true</Value>
								</Information>
							</Informations1>
							<Action>
								<SetFrame Name="t_masterFrame">
									<Command>
										<CommandValue>FailSafeData</CommandValue>
									</Command>
									<SafeData>
										<SafeDataVariable>FailSafeValue</SafeDataVariable>
									</SafeData>
									<LastCRC>LastCrc</LastCRC>
									<ConnectionID>
										<ConnectionIdVariable>t_connectionId</ConnectionIdVariable>
									</ConnectionID>
									<SequenceNo>t_masterSeqNo</SequenceNo>
									<OldCRC>OldMasterCrc</OldCRC>
									<New>true</New>
								</SetFrame>
							</Action>
						</TestStep>
						<TestStep Name="SetInvalidCrc_n">
							<Informations1>
								<Information>
									<Type>Output</Type>
									<Value Param0="c_crcIndex" Param1="t_masterFrame.Crcs[c_crcIndex]">Valid Crc[{0}]: 0x{1:x4}</Value>
								</Information>
							</Informations1>
							<Action>
								<CallFunction>
									<Reference>INCREMENT_CRC_N</Reference>
								</CallFunction>
							</Action>
							<Informations2>
								<Information>
									<Type>Output</Type>
									<Value Param0="c_crcIndex" Param1="t_masterFrame.Crcs[c_crcIndex]">Falsified Crc[{0}]: 0x{1:x4}</Value>
								</Information>
							</Informations2>
						</TestStep>
						<TestStep Name="SendFrame">
							<Action>
								<SendFrame Name="t_masterFrame"/>
							</Action>
							<Informations2>
								<Information>
									<Type>Verbose</Type>
									<Value Param0="t_masterFrame.FrameData">Master Frame: {0}</Value>
								</Information>
							</Informations2>
							<ReturnValue>
								<OnFailure>
									<Type>Error</Type>
									<Value>Failed to send FSoE frame!</Value>
									<Id>256</Id>
								</OnFailure>
							</ReturnValue>
						</TestStep>
						<TestStep Name="SetCrcIndex">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>c_crcIndex</Destination>
										<Source>c_crcIndex+1</Source>
									</SetVariable>
								</SetVariables>
							</Action>
							<Informations2>
								<Information>
									<Type>Verbose</Type>
									<Value Param0="c_crcIndex">Index :{0}</Value>
								</Information>
							</Informations2>
						</TestStep>
						<TestStep Name="CheckReceivedSlaveFrame">
							<Action>
								<CallFunction>
									<Reference>CHECK_RESET_FAIL</Reference>
								</CallFunction>
							</Action>
							<Compares>
								<Compare>
									<Condition>
										<Value1>c_crcIndex</Value1>
										<Operator>Lower</Operator>
										<Value2>CrcLength</Value2>
									</Condition>
									<Statement>
										<GotoStep>GotoData</GotoStep>
									</Statement>
								</Compare>
								<Compare>
									<Condition>
										<Value1>c_crcIndex</Value1>
										<Operator>GreaterOrEqual</Operator>
										<Value2>CrcLength</Value2>
									</Condition>
									<Statement>
										<Return>
											<Type>Success</Type>
											<Value Param0="c_CommFaultReason">Expected CommFaultReason ({0}) received</Value>
										</Return>
									</Statement>
								</Compare>
							</Compares>
						</TestStep>
					</TestSteps>
				</TestCase>
				<TestCase Name="#5.10 Data_Fail1" CaseId="14">
					<Comment>Falsche CRC_1 bis CRC_n  (-1); Command = FailSafeData; SafeData = FailSafeValue</Comment>
					<CaseVariables>
						<Variable>
							<Name>c_CommFaultReason</Name>
							<Type>Byte</Type>
						</Variable>
						<Variable>
							<Name>c_tmpByte</Name>
							<Type>Byte</Type>
						</Variable>
						<Variable>
							<Name>c_crcIndex</Name>
							<Type>Int32</Type>
						</Variable>
						<Variable>
							<Name>c_tmpCrcn</Name>
							<Type>UInt16</Type>
						</Variable>
					</CaseVariables>
					<TestSteps>
						<TestStep Name="CheckCRCLength">
							<Compares>
								<Compare>
									<Condition>
										<Value1>CrcLength</Value1>
										<Operator>Equal</Operator>
										<Value2>1</Value2>
									</Condition>
									<Statement>
										<Return>
											<Type>SkippedCase</Type>
											<Value>Crc count ==1; ==> skip testcase</Value>
										</Return>
									</Statement>
								</Compare>
							</Compares>
						</TestStep>
						<TestStep Name="SetVariables">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>c_CommFaultReason</Destination>
										<Source>INVALID_CRC</Source>
									</SetVariable>
									<SetVariable>
										<Destination>c_tmpByte</Destination>
										<Source>0</Source>
									</SetVariable>
									<SetVariable>
										<Destination>t_wdExpired</Destination>
										<Source>false</Source>
									</SetVariable>
									<SetVariable>
										<Destination>t_masterSessionId</Destination>
										<Source>1</Source>
									</SetVariable>
									<SetVariable>
										<Destination>c_crcIndex</Destination>
										<Source>1</Source>
									</SetVariable>
								</SetVariables>
							</Action>
						</TestStep>
						<TestStep Name="SetConnectionData">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>t_connectionId</Destination>
										<Source>3</Source>
									</SetVariable>
									<SetVariable>
										<Destination DestinationIndex="0">t_connData</Destination>
										<Source>t_connectionId</Source>
									</SetVariable>
									<SetVariable>
										<Destination DestinationIndex="2">t_connData</Destination>
										<Source>ConnData.SlaveAddress</Source>
									</SetVariable>
								</SetVariables>
							</Action>
							<Informations2>
								<Information>
									<Type>Output</Type>
									<Value Param0="t_connectionId" Param1="ConnData.SlaveAddress" Param2="t_connData">ConnectionId: {0} (0x{0:x4}), Slave Address: {1} (0x{1:x4}), Connection Data {2}</Value>
								</Information>
							</Informations2>
						</TestStep>
						<TestStep Name="SetParameterData">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>t_safePara</Destination>
										<Source>SafePara</Source>
									</SetVariable>
									<SetVariable>
										<Destination>t_watchdog</Destination>
										<Source>SafePara.Watchdog</Source>
									</SetVariable>
								</SetVariables>
							</Action>
							<Informations2>
								<Information>
									<Type>Output</Type>
									<Value Param0="t_watchdog" Param1="SafeParaSize" Param2="t_safePara">Watchdog: {0} ms, SafeParaSize: {1}, Safe Parameter {2}</Value>
								</Information>
							</Informations2>
						</TestStep>
						<TestStep Name="GotoData">
							<Action>
								<CallFunction>
									<Reference>RUN_DUT_TO_DATA</Reference>
								</CallFunction>
							</Action>
						</TestStep>
						<TestStep Name="SetLastCrc">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>LastCrc</Destination>
										<Source>t_slaveFrame.Crc0</Source>
									</SetVariable>
								</SetVariables>
							</Action>
						</TestStep>
						<TestStep Name="SetFrame">
							<Informations1>
								<Information>
									<Type>Verbose</Type>
									<Value Param0="FailSafeValue" Param1="LastCrc" Param2="t_masterSeqNo" Param3="OldMasterCrc" Param4="t_connectionId">SetFrame(Command FailSafeData, SafeData {0}, LastCrc 0x{1:x4}, ConnectionId 0x{4:x4},  SequenceNo 0x{2:x4}, OldCrc 0x{3:x4}, New true</Value>
								</Information>
							</Informations1>
							<Action>
								<SetFrame Name="t_masterFrame">
									<Command>
										<CommandValue>FailSafeData</CommandValue>
									</Command>
									<SafeData>
										<SafeDataVariable>FailSafeValue</SafeDataVariable>
									</SafeData>
									<LastCRC>LastCrc</LastCRC>
									<ConnectionID>
										<ConnectionIdVariable>t_connectionId</ConnectionIdVariable>
									</ConnectionID>
									<SequenceNo>t_masterSeqNo</SequenceNo>
									<OldCRC>OldMasterCrc</OldCRC>
									<New>true</New>
								</SetFrame>
							</Action>
						</TestStep>
						<TestStep Name="SetInvalidCrc_n">
							<Informations1>
								<Information>
									<Type>Output</Type>
									<Value Param0="c_crcIndex" Param1="t_masterFrame.Crcs[c_crcIndex]">Valid Crc[{0}]: 0x{1:x4}</Value>
								</Information>
							</Informations1>
							<Action>
								<CallFunction>
									<Reference>DECREMENT_CRC_N</Reference>
								</CallFunction>
							</Action>
							<Informations2>
								<Information>
									<Type>Output</Type>
									<Value Param0="c_crcIndex" Param1="t_masterFrame.Crcs[c_crcIndex]">Falsified Crc[{0}]: 0x{1:x4}</Value>
								</Information>
							</Informations2>
						</TestStep>
						<TestStep Name="SendFrame">
							<Action>
								<SendFrame Name="t_masterFrame"/>
							</Action>
							<Informations2>
								<Information>
									<Type>Verbose</Type>
									<Value Param0="t_masterFrame.FrameData">Master Frame: {0}</Value>
								</Information>
							</Informations2>
							<ReturnValue>
								<OnFailure>
									<Type>Error</Type>
									<Value>Failed to send FSoE frame!</Value>
									<Id>256</Id>
								</OnFailure>
							</ReturnValue>
						</TestStep>
						<TestStep Name="SetCrcIndex">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>c_crcIndex</Destination>
										<Source>c_crcIndex+1</Source>
									</SetVariable>
								</SetVariables>
							</Action>
							<Informations2>
								<Information>
									<Type>Verbose</Type>
									<Value Param0="c_crcIndex">Index :{0}</Value>
								</Information>
							</Informations2>
						</TestStep>
						<TestStep Name="CheckReceivedSlaveFrame">
							<Action>
								<CallFunction>
									<Reference>CHECK_RESET_FAIL</Reference>
								</CallFunction>
							</Action>
							<Compares>
								<Compare>
									<Condition>
										<Value1>c_crcIndex</Value1>
										<Operator>Lower</Operator>
										<Value2>CrcLength</Value2>
									</Condition>
									<Statement>
										<GotoStep>GotoData</GotoStep>
									</Statement>
								</Compare>
								<Compare>
									<Condition>
										<Value1>c_crcIndex</Value1>
										<Operator>GreaterOrEqual</Operator>
										<Value2>CrcLength</Value2>
									</Condition>
									<Statement>
										<Return>
											<Type>Success</Type>
											<Value Param0="c_CommFaultReason">Expected CommFaultReason ({0}) received</Value>
										</Return>
									</Statement>
								</Compare>
							</Compares>
						</TestStep>
					</TestSteps>
				</TestCase>
				<TestCase Name="#5.11 Data_Fail1" CaseId="15">
					<Comment>CRC_0 und CRC1 vertauscht; Command = ProcessData; SafeData = SafeOutputs </Comment>
					<CaseVariables>
						<Variable>
							<Name>c_CommFaultReason</Name>
							<Type>Byte</Type>
						</Variable>
						<Variable>
							<Name>c_tmpByte</Name>
							<Type>Byte</Type>
						</Variable>
						<Variable>
							<Name>c_crcIndex</Name>
							<Type>Int32</Type>
						</Variable>
						<Variable>
							<Name>c_tmpCrc0</Name>
							<Type>UInt16</Type>
						</Variable>
						<Variable>
							<Name>c_tmpCrc1</Name>
							<Type>UInt16</Type>
						</Variable>
					</CaseVariables>
					<TestSteps>
						<TestStep Name="CheckCRCLength">
							<Compares>
								<Compare>
									<Condition>
										<Value1>CrcLength</Value1>
										<Operator>Equal</Operator>
										<Value2>1</Value2>
									</Condition>
									<Statement>
										<Return>
											<Type>SkippedCase</Type>
											<Value>Crc count ==1; ==> skip testcase</Value>
										</Return>
									</Statement>
								</Compare>
							</Compares>
						</TestStep>
						<TestStep Name="SetVariables">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>c_CommFaultReason</Destination>
										<Source>INVALID_CRC</Source>
									</SetVariable>
									<SetVariable>
										<Destination>c_tmpByte</Destination>
										<Source>0</Source>
									</SetVariable>
									<SetVariable>
										<Destination>t_wdExpired</Destination>
										<Source>false</Source>
									</SetVariable>
									<SetVariable>
										<Destination>t_masterSessionId</Destination>
										<Source>1</Source>
									</SetVariable>
								</SetVariables>
							</Action>
						</TestStep>
						<TestStep Name="SetConnectionData">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>t_connectionId</Destination>
										<Source>3</Source>
									</SetVariable>
									<SetVariable>
										<Destination DestinationIndex="0">t_connData</Destination>
										<Source>t_connectionId</Source>
									</SetVariable>
									<SetVariable>
										<Destination DestinationIndex="2">t_connData</Destination>
										<Source>ConnData.SlaveAddress</Source>
									</SetVariable>
								</SetVariables>
							</Action>
							<Informations2>
								<Information>
									<Type>Output</Type>
									<Value Param0="t_connectionId" Param1="ConnData.SlaveAddress" Param2="t_connData">ConnectionId: {0} (0x{0:x4}), Slave Address: {1} (0x{1:x4}), Connection Data {2}</Value>
								</Information>
							</Informations2>
						</TestStep>
						<TestStep Name="SetParameterData">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>t_safePara</Destination>
										<Source>SafePara</Source>
									</SetVariable>
									<SetVariable>
										<Destination>t_watchdog</Destination>
										<Source>SafePara.Watchdog</Source>
									</SetVariable>
								</SetVariables>
							</Action>
							<Informations2>
								<Information>
									<Type>Output</Type>
									<Value Param0="t_watchdog" Param1="SafeParaSize" Param2="t_safePara">Watchdog: {0} ms, SafeParaSize: {1}, Safe Parameter {2}</Value>
								</Information>
							</Informations2>
						</TestStep>
						<TestStep Name="GotoData">
							<Action>
								<CallFunction>
									<Reference>RUN_DUT_TO_DATA</Reference>
								</CallFunction>
							</Action>
						</TestStep>
						<TestStep Name="SetLastCrc">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>LastCrc</Destination>
										<Source>t_slaveFrame.Crc0</Source>
									</SetVariable>
								</SetVariables>
							</Action>
						</TestStep>
						<TestStep Name="SetFrame">
							<Informations1>
								<Information>
									<Type>Verbose</Type>
									<Value Param0="SafeOutputs" Param1="LastCrc" Param2="t_masterSeqNo" Param3="OldMasterCrc" Param4="t_connectionId">SetFrame(Command ProcessData, SafeData {0}, LastCrc 0x{1:x4}, ConnectionId 0x{4:x4},  SequenceNo 0x{2:x4}, OldCrc 0x{3:x4}, New true</Value>
								</Information>
							</Informations1>
							<Action>
								<SetFrame Name="t_masterFrame">
									<Command>
										<CommandValue>Data</CommandValue>
									</Command>
									<SafeData>
										<SafeDataVariable>SafeOutputs</SafeDataVariable>
									</SafeData>
									<LastCRC>LastCrc</LastCRC>
									<ConnectionID>
										<ConnectionIdVariable>t_connectionId</ConnectionIdVariable>
									</ConnectionID>
									<SequenceNo>t_masterSeqNo</SequenceNo>
									<OldCRC>OldMasterCrc</OldCRC>
									<New>true</New>
								</SetFrame>
							</Action>
						</TestStep>
						<TestStep Name="SwapCrcs">
							<Informations1>
								<Information>
									<Type>Output</Type>
									<Value Param0="t_masterFrame.Crcs[0]" Param1="t_masterFrame.Crcs[1]">Valid Crc[0]: 0x{0:x4}, Valid Crc[1]: 0x{1:x4} </Value>
								</Information>
							</Informations1>
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>c_tmpCrc0</Destination>
										<Source SourceIndex="0">t_masterFrame.Crcs</Source>
									</SetVariable>
									<SetVariable>
										<Destination>c_tmpCrc1</Destination>
										<Source SourceIndex="1">t_masterFrame.Crcs</Source>
									</SetVariable>
									<SetVariable>
										<Destination DestinationIndex="0">t_masterFrame.Crcs</Destination>
										<Source>c_tmpCrc1</Source>
									</SetVariable>
									<SetVariable>
										<Destination DestinationIndex="1">t_masterFrame.Crcs</Destination>
										<Source>c_tmpCrc0</Source>
									</SetVariable>
								</SetVariables>
							</Action>
							<Informations2>
								<Information>
									<Type>Output</Type>
									<Value Param0="t_masterFrame.Crcs[0]" Param1="t_masterFrame.Crcs[1]">Falsified Crc[0]: 0x{0:x4}, Falsified Crc[1]: 0x{1:x4} </Value>
								</Information>
							</Informations2>
						</TestStep>
						<TestStep Name="SendFrame">
							<Action>
								<SendFrame Name="t_masterFrame"/>
							</Action>
							<Informations2>
								<Information>
									<Type>Verbose</Type>
									<Value Param0="t_masterFrame.FrameData">Master Frame: {0}</Value>
								</Information>
							</Informations2>
							<ReturnValue>
								<OnFailure>
									<Type>Error</Type>
									<Value>Failed to send FSoE frame!</Value>
									<Id>256</Id>
								</OnFailure>
							</ReturnValue>
						</TestStep>
						<TestStep Name="CheckReceivedSlaveFrame">
							<Action>
								<CallFunction>
									<Reference>CHECK_RESET_FAIL</Reference>
								</CallFunction>
							</Action>
							<ReturnValue>
								<OnSuccess>
									<Type>Success</Type>
									<Value Param0="c_CommFaultReason">Expected CommFaultReason ({0}) received</Value>
								</OnSuccess>
							</ReturnValue>
						</TestStep>
					</TestSteps>
				</TestCase>
				<TestCase Name="#5.12 Data_Fail1" CaseId="16">
					<Comment>CRC_0 und CRC1 vertauscht; Command = FailSafeData; SafeData = FailSafeValue </Comment>
					<CaseVariables>
						<Variable>
							<Name>c_CommFaultReason</Name>
							<Type>Byte</Type>
						</Variable>
						<Variable>
							<Name>c_tmpByte</Name>
							<Type>Byte</Type>
						</Variable>
						<Variable>
							<Name>c_crcIndex</Name>
							<Type>Int32</Type>
						</Variable>
						<Variable>
							<Name>c_tmpCrc0</Name>
							<Type>UInt16</Type>
						</Variable>
						<Variable>
							<Name>c_tmpCrc1</Name>
							<Type>UInt16</Type>
						</Variable>
					</CaseVariables>
					<TestSteps>
						<TestStep Name="CheckCRCLength">
							<Compares>
								<Compare>
									<Condition>
										<Value1>CrcLength</Value1>
										<Operator>Equal</Operator>
										<Value2>1</Value2>
									</Condition>
									<Statement>
										<Return>
											<Type>SkippedCase</Type>
											<Value>Crc count ==1; ==> skip testcase</Value>
										</Return>
									</Statement>
								</Compare>
							</Compares>
						</TestStep>
						<TestStep Name="SetVariables">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>c_CommFaultReason</Destination>
										<Source>INVALID_CRC</Source>
									</SetVariable>
									<SetVariable>
										<Destination>c_tmpByte</Destination>
										<Source>0</Source>
									</SetVariable>
									<SetVariable>
										<Destination>t_wdExpired</Destination>
										<Source>false</Source>
									</SetVariable>
									<SetVariable>
										<Destination>t_masterSessionId</Destination>
										<Source>1</Source>
									</SetVariable>
								</SetVariables>
							</Action>
						</TestStep>
						<TestStep Name="SetConnectionData">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>t_connectionId</Destination>
										<Source>3</Source>
									</SetVariable>
									<SetVariable>
										<Destination DestinationIndex="0">t_connData</Destination>
										<Source>t_connectionId</Source>
									</SetVariable>
									<SetVariable>
										<Destination DestinationIndex="2">t_connData</Destination>
										<Source>ConnData.SlaveAddress</Source>
									</SetVariable>
								</SetVariables>
							</Action>
							<Informations2>
								<Information>
									<Type>Output</Type>
									<Value Param0="t_connectionId" Param1="ConnData.SlaveAddress" Param2="t_connData">ConnectionId: {0} (0x{0:x4}), Slave Address: {1} (0x{1:x4}), Connection Data {2}</Value>
								</Information>
							</Informations2>
						</TestStep>
						<TestStep Name="SetParameterData">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>t_safePara</Destination>
										<Source>SafePara</Source>
									</SetVariable>
									<SetVariable>
										<Destination>t_watchdog</Destination>
										<Source>SafePara.Watchdog</Source>
									</SetVariable>
								</SetVariables>
							</Action>
							<Informations2>
								<Information>
									<Type>Output</Type>
									<Value Param0="t_watchdog" Param1="SafeParaSize" Param2="t_safePara">Watchdog: {0} ms, SafeParaSize: {1}, Safe Parameter {2}</Value>
								</Information>
							</Informations2>
						</TestStep>
						<TestStep Name="GotoData">
							<Action>
								<CallFunction>
									<Reference>RUN_DUT_TO_DATA</Reference>
								</CallFunction>
							</Action>
						</TestStep>
						<TestStep Name="SetLastCrc">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>LastCrc</Destination>
										<Source>t_slaveFrame.Crc0</Source>
									</SetVariable>
								</SetVariables>
							</Action>
						</TestStep>
						<TestStep Name="SetFrame">
							<Informations1>
								<Information>
									<Type>Verbose</Type>
									<Value Param0="FailSafeValue" Param1="LastCrc" Param2="t_masterSeqNo" Param3="OldMasterCrc" Param4="t_connectionId">SetFrame(Command FailSafeData, SafeData {0}, LastCrc 0x{1:x4}, ConnectionId 0x{4:x4},  SequenceNo 0x{2:x4}, OldCrc 0x{3:x4}, New true</Value>
								</Information>
							</Informations1>
							<Action>
								<SetFrame Name="t_masterFrame">
									<Command>
										<CommandValue>FailSafeData</CommandValue>
									</Command>
									<SafeData>
										<SafeDataVariable>FailSafeValue</SafeDataVariable>
									</SafeData>
									<LastCRC>LastCrc</LastCRC>
									<ConnectionID>
										<ConnectionIdVariable>t_connectionId</ConnectionIdVariable>
									</ConnectionID>
									<SequenceNo>t_masterSeqNo</SequenceNo>
									<OldCRC>OldMasterCrc</OldCRC>
									<New>true</New>
								</SetFrame>
							</Action>
						</TestStep>
						<TestStep Name="SwapCrcs">
							<Informations1>
								<Information>
									<Type>Output</Type>
									<Value Param0="t_masterFrame.Crcs[0]" Param1="t_masterFrame.Crcs[1]">Valid Crc[0]: 0x{0:x4}, Valid Crc[1]: 0x{1:x4} </Value>
								</Information>
							</Informations1>
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>c_tmpCrc0</Destination>
										<Source SourceIndex="0">t_masterFrame.Crcs</Source>
									</SetVariable>
									<SetVariable>
										<Destination>c_tmpCrc1</Destination>
										<Source SourceIndex="1">t_masterFrame.Crcs</Source>
									</SetVariable>
									<SetVariable>
										<Destination DestinationIndex="0">t_masterFrame.Crcs</Destination>
										<Source>c_tmpCrc1</Source>
									</SetVariable>
									<SetVariable>
										<Destination DestinationIndex="1">t_masterFrame.Crcs</Destination>
										<Source>c_tmpCrc0</Source>
									</SetVariable>
								</SetVariables>
							</Action>
							<Informations2>
								<Information>
									<Type>Output</Type>
									<Value Param0="t_masterFrame.Crcs[0]" Param1="t_masterFrame.Crcs[1]">Falsified Crc[0]: 0x{0:x4}, Falsified Crc[1]: 0x{1:x4} </Value>
								</Information>
							</Informations2>
						</TestStep>
						<TestStep Name="SendFrame">
							<Action>
								<SendFrame Name="t_masterFrame"/>
							</Action>
							<Informations2>
								<Information>
									<Type>Verbose</Type>
									<Value Param0="t_masterFrame.FrameData">Master Frame: {0}</Value>
								</Information>
							</Informations2>
							<ReturnValue>
								<OnFailure>
									<Type>Error</Type>
									<Value>Failed to send FSoE frame!</Value>
									<Id>256</Id>
								</OnFailure>
							</ReturnValue>
						</TestStep>
						<TestStep Name="CheckReceivedSlaveFrame">
							<Action>
								<CallFunction>
									<Reference>CHECK_RESET_FAIL</Reference>
								</CallFunction>
							</Action>
							<ReturnValue>
								<OnSuccess>
									<Type>Success</Type>
									<Value Param0="c_CommFaultReason">Expected CommFaultReason ({0}) received</Value>
								</OnSuccess>
							</ReturnValue>
						</TestStep>
					</TestSteps>
				</TestCase>
				<TestCase Name="#5.13 Data_Fail2" CaseId="17">
					<Comment>Gültige ConnId = 3, Ungültige ConnId = 0, Cmd = Processdata</Comment>
					<CaseVariables>
						<Variable>
							<Name>c_CommFaultReason</Name>
							<Type>Byte</Type>
						</Variable>
						<Variable>
							<Name>c_tmpByte</Name>
							<Type>Byte</Type>
						</Variable>
					</CaseVariables>
					<TestSteps>
						<TestStep Name="SetVariables">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>c_CommFaultReason</Destination>
										<Source>INVALID_CONNID</Source>
									</SetVariable>
									<SetVariable>
										<Destination>c_tmpByte</Destination>
										<Source>0</Source>
									</SetVariable>
									<SetVariable>
										<Destination>t_wdExpired</Destination>
										<Source>false</Source>
									</SetVariable>
									<SetVariable>
										<Destination>t_masterSessionId</Destination>
										<Source>1</Source>
									</SetVariable>
								</SetVariables>
							</Action>
						</TestStep>
						<TestStep Name="SetConnectionData">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>t_connectionId</Destination>
										<Source>3</Source>
									</SetVariable>
									<SetVariable>
										<Destination DestinationIndex="0">t_connData</Destination>
										<Source>t_connectionId</Source>
									</SetVariable>
									<SetVariable>
										<Destination DestinationIndex="2">t_connData</Destination>
										<Source>ConnData.SlaveAddress</Source>
									</SetVariable>
								</SetVariables>
							</Action>
							<Informations2>
								<Information>
									<Type>Output</Type>
									<Value Param0="t_connectionId" Param1="ConnData.SlaveAddress" Param2="t_connData">ConnectionId: {0} (0x{0:x4}), Slave Address: {1} (0x{1:x4}), Connection Data {2}</Value>
								</Information>
							</Informations2>
						</TestStep>
						<TestStep Name="SetParameterData">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>t_safePara</Destination>
										<Source>SafePara</Source>
									</SetVariable>
									<SetVariable>
										<Destination>t_watchdog</Destination>
										<Source>SafePara.Watchdog</Source>
									</SetVariable>
								</SetVariables>
							</Action>
							<Informations2>
								<Information>
									<Type>Output</Type>
									<Value Param0="t_watchdog" Param1="SafeParaSize" Param2="t_safePara">Watchdog: {0} ms, SafeParaSize: {1}, Safe Parameter {2}</Value>
								</Information>
							</Informations2>
						</TestStep>
						<TestStep Name="GotoData">
							<Action>
								<CallFunction>
									<Reference>RUN_DUT_TO_DATA</Reference>
								</CallFunction>
							</Action>
						</TestStep>
						<TestStep Name="SetLastCrc">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>LastCrc</Destination>
										<Source>t_slaveFrame.Crc0</Source>
									</SetVariable>
								</SetVariables>
							</Action>
						</TestStep>
						<TestStep Name="SetInvalidConnId">
							<Informations1>
								<Information>
									<Type>Output</Type>
									<Value Param0="t_connectionId">Valid Master ConnID: {0} (0x{0:x4})</Value>
								</Information>
							</Informations1>
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>t_connectionId</Destination>
										<Source>0</Source>
									</SetVariable>
								</SetVariables>
							</Action>
							<Informations2>
								<Information>
									<Type>Output</Type>
									<Value Param0="t_connectionId">Falsified ConnId: {0} (0x{0:x4})</Value>
								</Information>
							</Informations2>
						</TestStep>
						<TestStep Name="SetFrame">
							<Informations1>
								<Information>
									<Type>Verbose</Type>
									<Value Param0="SafeOutputs" Param1="LastCrc" Param2="t_masterSeqNo" Param3="OldMasterCrc" Param4="t_connectionId">SetFrame(Command ProcessData, SafeData {0}, LastCrc 0x{1:x4}, ConnectionId 0x{4:x4},  SequenceNo 0x{2:x4}, OldCrc 0x{3:x4}, New true</Value>
								</Information>
							</Informations1>
							<Action>
								<SetFrame Name="t_masterFrame">
									<Command>
										<CommandValue>Data</CommandValue>
									</Command>
									<SafeData>
										<SafeDataVariable>SafeOutputs</SafeDataVariable>
									</SafeData>
									<LastCRC>LastCrc</LastCRC>
									<ConnectionID>
										<ConnectionIdVariable>t_connectionId</ConnectionIdVariable>
									</ConnectionID>
									<SequenceNo>t_masterSeqNo</SequenceNo>
									<OldCRC>OldMasterCrc</OldCRC>
									<New>true</New>
								</SetFrame>
							</Action>
						</TestStep>
						<TestStep Name="SendFrame">
							<Action>
								<SendFrame Name="t_masterFrame"/>
							</Action>
							<Informations2>
								<Information>
									<Type>Verbose</Type>
									<Value Param0="t_masterFrame.FrameData">Master Frame: {0}</Value>
								</Information>
							</Informations2>
							<ReturnValue>
								<OnFailure>
									<Type>Error</Type>
									<Value>Failed to send FSoE frame!</Value>
									<Id>256</Id>
								</OnFailure>
							</ReturnValue>
						</TestStep>
						<TestStep Name="CheckReceivedSlaveFrame">
							<Action>
								<CallFunction>
									<Reference>CHECK_RESET_FAIL</Reference>
								</CallFunction>
							</Action>
							<ReturnValue>
								<OnSuccess>
									<Type>Success</Type>
									<Value Param0="c_CommFaultReason">Expected CommFaultReason ({0}) received</Value>
								</OnSuccess>
							</ReturnValue>
						</TestStep>
					</TestSteps>
				</TestCase>
				<TestCase Name="#5.14 Data_Fail2" CaseId="18">
					<Comment>Gültige ConnId = 3, Ungültige ConnId = 2, Cmd = Processdata</Comment>
					<CaseVariables>
						<Variable>
							<Name>c_CommFaultReason</Name>
							<Type>Byte</Type>
						</Variable>
						<Variable>
							<Name>c_tmpByte</Name>
							<Type>Byte</Type>
						</Variable>
					</CaseVariables>
					<TestSteps>
						<TestStep Name="SetVariables">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>c_CommFaultReason</Destination>
										<Source>INVALID_CONNID</Source>
									</SetVariable>
									<SetVariable>
										<Destination>c_tmpByte</Destination>
										<Source>0</Source>
									</SetVariable>
									<SetVariable>
										<Destination>t_wdExpired</Destination>
										<Source>false</Source>
									</SetVariable>
									<SetVariable>
										<Destination>t_masterSessionId</Destination>
										<Source>1</Source>
									</SetVariable>
								</SetVariables>
							</Action>
						</TestStep>
						<TestStep Name="SetConnectionData">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>t_connectionId</Destination>
										<Source>3</Source>
									</SetVariable>
									<SetVariable>
										<Destination DestinationIndex="0">t_connData</Destination>
										<Source>t_connectionId</Source>
									</SetVariable>
									<SetVariable>
										<Destination DestinationIndex="2">t_connData</Destination>
										<Source>ConnData.SlaveAddress</Source>
									</SetVariable>
								</SetVariables>
							</Action>
							<Informations2>
								<Information>
									<Type>Output</Type>
									<Value Param0="t_connectionId" Param1="ConnData.SlaveAddress" Param2="t_connData">ConnectionId: {0} (0x{0:x4}), Slave Address: {1} (0x{1:x4}), Connection Data {2}</Value>
								</Information>
							</Informations2>
						</TestStep>
						<TestStep Name="SetParameterData">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>t_safePara</Destination>
										<Source>SafePara</Source>
									</SetVariable>
									<SetVariable>
										<Destination>t_watchdog</Destination>
										<Source>SafePara.Watchdog</Source>
									</SetVariable>
								</SetVariables>
							</Action>
							<Informations2>
								<Information>
									<Type>Output</Type>
									<Value Param0="t_watchdog" Param1="SafeParaSize" Param2="t_safePara">Watchdog: {0} ms, SafeParaSize: {1}, Safe Parameter {2}</Value>
								</Information>
							</Informations2>
						</TestStep>
						<TestStep Name="GotoData">
							<Action>
								<CallFunction>
									<Reference>RUN_DUT_TO_DATA</Reference>
								</CallFunction>
							</Action>
						</TestStep>
						<TestStep Name="SetLastCrc">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>LastCrc</Destination>
										<Source>t_slaveFrame.Crc0</Source>
									</SetVariable>
								</SetVariables>
							</Action>
						</TestStep>
						<TestStep Name="SetInvalidConnId">
							<Informations1>
								<Information>
									<Type>Output</Type>
									<Value Param0="t_connectionId">Valid Master ConnID: {0} (0x{0:x4})</Value>
								</Information>
							</Informations1>
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>t_connectionId</Destination>
										<Source>2</Source>
									</SetVariable>
								</SetVariables>
							</Action>
							<Informations2>
								<Information>
									<Type>Output</Type>
									<Value Param0="t_connectionId">Falsified ConnId: {0} (0x{0:x4})</Value>
								</Information>
							</Informations2>
						</TestStep>
						<TestStep Name="SetFrame">
							<Informations1>
								<Information>
									<Type>Verbose</Type>
									<Value Param0="SafeOutputs" Param1="LastCrc" Param2="t_masterSeqNo" Param3="OldMasterCrc" Param4="t_connectionId">SetFrame(Command ProcessData, SafeData {0}, LastCrc 0x{1:x4}, ConnectionId 0x{4:x4},  SequenceNo 0x{2:x4}, OldCrc 0x{3:x4}, New true</Value>
								</Information>
							</Informations1>
							<Action>
								<SetFrame Name="t_masterFrame">
									<Command>
										<CommandValue>Data</CommandValue>
									</Command>
									<SafeData>
										<SafeDataVariable>SafeOutputs</SafeDataVariable>
									</SafeData>
									<LastCRC>LastCrc</LastCRC>
									<ConnectionID>
										<ConnectionIdVariable>t_connectionId</ConnectionIdVariable>
									</ConnectionID>
									<SequenceNo>t_masterSeqNo</SequenceNo>
									<OldCRC>OldMasterCrc</OldCRC>
									<New>true</New>
								</SetFrame>
							</Action>
						</TestStep>
						<TestStep Name="SendFrame">
							<Action>
								<SendFrame Name="t_masterFrame"/>
							</Action>
							<Informations2>
								<Information>
									<Type>Verbose</Type>
									<Value Param0="t_masterFrame.FrameData">Master Frame: {0}</Value>
								</Information>
							</Informations2>
							<ReturnValue>
								<OnFailure>
									<Type>Error</Type>
									<Value>Failed to send FSoE frame!</Value>
									<Id>256</Id>
								</OnFailure>
							</ReturnValue>
						</TestStep>
						<TestStep Name="CheckReceivedSlaveFrame">
							<Action>
								<CallFunction>
									<Reference>CHECK_RESET_FAIL</Reference>
								</CallFunction>
							</Action>
							<ReturnValue>
								<OnSuccess>
									<Type>Success</Type>
									<Value Param0="c_CommFaultReason">Expected CommFaultReason ({0}) received</Value>
								</OnSuccess>
							</ReturnValue>
						</TestStep>
					</TestSteps>
				</TestCase>
				<TestCase Name="#5.15 Data_Fail2" CaseId="19">
					<Comment>Gültige ConnId = 3, Ungültige ConnId = 4, Cmd = Processdata</Comment>
					<CaseVariables>
						<Variable>
							<Name>c_CommFaultReason</Name>
							<Type>Byte</Type>
						</Variable>
						<Variable>
							<Name>c_tmpByte</Name>
							<Type>Byte</Type>
						</Variable>
					</CaseVariables>
					<TestSteps>
						<TestStep Name="SetVariables">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>c_CommFaultReason</Destination>
										<Source>INVALID_CONNID</Source>
									</SetVariable>
									<SetVariable>
										<Destination>c_tmpByte</Destination>
										<Source>0</Source>
									</SetVariable>
									<SetVariable>
										<Destination>t_wdExpired</Destination>
										<Source>false</Source>
									</SetVariable>
									<SetVariable>
										<Destination>t_masterSessionId</Destination>
										<Source>1</Source>
									</SetVariable>
								</SetVariables>
							</Action>
						</TestStep>
						<TestStep Name="SetConnectionData">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>t_connectionId</Destination>
										<Source>3</Source>
									</SetVariable>
									<SetVariable>
										<Destination DestinationIndex="0">t_connData</Destination>
										<Source>t_connectionId</Source>
									</SetVariable>
									<SetVariable>
										<Destination DestinationIndex="2">t_connData</Destination>
										<Source>ConnData.SlaveAddress</Source>
									</SetVariable>
								</SetVariables>
							</Action>
							<Informations2>
								<Information>
									<Type>Output</Type>
									<Value Param0="t_connectionId" Param1="ConnData.SlaveAddress" Param2="t_connData">ConnectionId: {0} (0x{0:x4}), Slave Address: {1} (0x{1:x4}), Connection Data {2}</Value>
								</Information>
							</Informations2>
						</TestStep>
						<TestStep Name="SetParameterData">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>t_safePara</Destination>
										<Source>SafePara</Source>
									</SetVariable>
									<SetVariable>
										<Destination>t_watchdog</Destination>
										<Source>SafePara.Watchdog</Source>
									</SetVariable>
								</SetVariables>
							</Action>
							<Informations2>
								<Information>
									<Type>Output</Type>
									<Value Param0="t_watchdog" Param1="SafeParaSize" Param2="t_safePara">Watchdog: {0} ms, SafeParaSize: {1}, Safe Parameter {2}</Value>
								</Information>
							</Informations2>
						</TestStep>
						<TestStep Name="GotoData">
							<Action>
								<CallFunction>
									<Reference>RUN_DUT_TO_DATA</Reference>
								</CallFunction>
							</Action>
						</TestStep>
						<TestStep Name="SetLastCrc">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>LastCrc</Destination>
										<Source>t_slaveFrame.Crc0</Source>
									</SetVariable>
								</SetVariables>
							</Action>
						</TestStep>
						<TestStep Name="SetInvalidConnId">
							<Informations1>
								<Information>
									<Type>Output</Type>
									<Value Param0="t_connectionId">Valid Master ConnID: {0} (0x{0:x4})</Value>
								</Information>
							</Informations1>
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>t_connectionId</Destination>
										<Source>4</Source>
									</SetVariable>
								</SetVariables>
							</Action>
							<Informations2>
								<Information>
									<Type>Output</Type>
									<Value Param0="t_connectionId">Falsified ConnId: {0} (0x{0:x4})</Value>
								</Information>
							</Informations2>
						</TestStep>
						<TestStep Name="SetFrame">
							<Informations1>
								<Information>
									<Type>Verbose</Type>
									<Value Param0="SafeOutputs" Param1="LastCrc" Param2="t_masterSeqNo" Param3="OldMasterCrc" Param4="t_connectionId">SetFrame(Command ProcessData, SafeData {0}, LastCrc 0x{1:x4}, ConnectionId 0x{4:x4},  SequenceNo 0x{2:x4}, OldCrc 0x{3:x4}, New true</Value>
								</Information>
							</Informations1>
							<Action>
								<SetFrame Name="t_masterFrame">
									<Command>
										<CommandValue>Data</CommandValue>
									</Command>
									<SafeData>
										<SafeDataVariable>SafeOutputs</SafeDataVariable>
									</SafeData>
									<LastCRC>LastCrc</LastCRC>
									<ConnectionID>
										<ConnectionIdVariable>t_connectionId</ConnectionIdVariable>
									</ConnectionID>
									<SequenceNo>t_masterSeqNo</SequenceNo>
									<OldCRC>OldMasterCrc</OldCRC>
									<New>true</New>
								</SetFrame>
							</Action>
						</TestStep>
						<TestStep Name="SendFrame">
							<Action>
								<SendFrame Name="t_masterFrame"/>
							</Action>
							<Informations2>
								<Information>
									<Type>Verbose</Type>
									<Value Param0="t_masterFrame.FrameData">Master Frame: {0}</Value>
								</Information>
							</Informations2>
							<ReturnValue>
								<OnFailure>
									<Type>Error</Type>
									<Value>Failed to send FSoE frame!</Value>
									<Id>256</Id>
								</OnFailure>
							</ReturnValue>
						</TestStep>
						<TestStep Name="CheckReceivedSlaveFrame">
							<Action>
								<CallFunction>
									<Reference>CHECK_RESET_FAIL</Reference>
								</CallFunction>
							</Action>
							<ReturnValue>
								<OnSuccess>
									<Type>Success</Type>
									<Value Param0="c_CommFaultReason">Expected CommFaultReason ({0}) received</Value>
								</OnSuccess>
							</ReturnValue>
						</TestStep>
					</TestSteps>
				</TestCase>
				<TestCase Name="#5.16 Data_Fail2" CaseId="20">
					<Comment>Gültige ConnId = 3, Ungültige ConnId = 0xffff, Cmd = Processdata</Comment>
					<CaseVariables>
						<Variable>
							<Name>c_CommFaultReason</Name>
							<Type>Byte</Type>
						</Variable>
						<Variable>
							<Name>c_tmpByte</Name>
							<Type>Byte</Type>
						</Variable>
					</CaseVariables>
					<TestSteps>
						<TestStep Name="SetVariables">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>c_CommFaultReason</Destination>
										<Source>INVALID_CONNID</Source>
									</SetVariable>
									<SetVariable>
										<Destination>c_tmpByte</Destination>
										<Source>0</Source>
									</SetVariable>
									<SetVariable>
										<Destination>t_wdExpired</Destination>
										<Source>false</Source>
									</SetVariable>
									<SetVariable>
										<Destination>t_masterSessionId</Destination>
										<Source>1</Source>
									</SetVariable>
								</SetVariables>
							</Action>
						</TestStep>
						<TestStep Name="SetConnectionData">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>t_connectionId</Destination>
										<Source>3</Source>
									</SetVariable>
									<SetVariable>
										<Destination DestinationIndex="0">t_connData</Destination>
										<Source>t_connectionId</Source>
									</SetVariable>
									<SetVariable>
										<Destination DestinationIndex="2">t_connData</Destination>
										<Source>ConnData.SlaveAddress</Source>
									</SetVariable>
								</SetVariables>
							</Action>
							<Informations2>
								<Information>
									<Type>Output</Type>
									<Value Param0="t_connectionId" Param1="ConnData.SlaveAddress" Param2="t_connData">ConnectionId: {0} (0x{0:x4}), Slave Address: {1} (0x{1:x4}), Connection Data {2}</Value>
								</Information>
							</Informations2>
						</TestStep>
						<TestStep Name="SetParameterData">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>t_safePara</Destination>
										<Source>SafePara</Source>
									</SetVariable>
									<SetVariable>
										<Destination>t_watchdog</Destination>
										<Source>SafePara.Watchdog</Source>
									</SetVariable>
								</SetVariables>
							</Action>
							<Informations2>
								<Information>
									<Type>Output</Type>
									<Value Param0="t_watchdog" Param1="SafeParaSize" Param2="t_safePara">Watchdog: {0} ms, SafeParaSize: {1}, Safe Parameter {2}</Value>
								</Information>
							</Informations2>
						</TestStep>
						<TestStep Name="GotoData">
							<Action>
								<CallFunction>
									<Reference>RUN_DUT_TO_DATA</Reference>
								</CallFunction>
							</Action>
						</TestStep>
						<TestStep Name="SetLastCrc">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>LastCrc</Destination>
										<Source>t_slaveFrame.Crc0</Source>
									</SetVariable>
								</SetVariables>
							</Action>
						</TestStep>
						<TestStep Name="SetInvalidConnId">
							<Informations1>
								<Information>
									<Type>Output</Type>
									<Value Param0="t_connectionId">Valid Master ConnID: {0} (0x{0:x4})</Value>
								</Information>
							</Informations1>
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>t_connectionId</Destination>
										<Source>65535</Source>
									</SetVariable>
								</SetVariables>
							</Action>
							<Informations2>
								<Information>
									<Type>Output</Type>
									<Value Param0="t_connectionId">Falsified ConnId: {0} (0x{0:x4})</Value>
								</Information>
							</Informations2>
						</TestStep>
						<TestStep Name="SetFrame">
							<Informations1>
								<Information>
									<Type>Verbose</Type>
									<Value Param0="SafeOutputs" Param1="LastCrc" Param2="t_masterSeqNo" Param3="OldMasterCrc" Param4="t_connectionId">SetFrame(Command ProcessData, SafeData {0}, LastCrc 0x{1:x4}, ConnectionId 0x{4:x4},  SequenceNo 0x{2:x4}, OldCrc 0x{3:x4}, New true</Value>
								</Information>
							</Informations1>
							<Action>
								<SetFrame Name="t_masterFrame">
									<Command>
										<CommandValue>Data</CommandValue>
									</Command>
									<SafeData>
										<SafeDataVariable>SafeOutputs</SafeDataVariable>
									</SafeData>
									<LastCRC>LastCrc</LastCRC>
									<ConnectionID>
										<ConnectionIdVariable>t_connectionId</ConnectionIdVariable>
									</ConnectionID>
									<SequenceNo>t_masterSeqNo</SequenceNo>
									<OldCRC>OldMasterCrc</OldCRC>
									<New>true</New>
								</SetFrame>
							</Action>
						</TestStep>
						<TestStep Name="SendFrame">
							<Action>
								<SendFrame Name="t_masterFrame"/>
							</Action>
							<Informations2>
								<Information>
									<Type>Verbose</Type>
									<Value Param0="t_masterFrame.FrameData">Master Frame: {0}</Value>
								</Information>
							</Informations2>
							<ReturnValue>
								<OnFailure>
									<Type>Error</Type>
									<Value>Failed to send FSoE frame!</Value>
									<Id>256</Id>
								</OnFailure>
							</ReturnValue>
						</TestStep>
						<TestStep Name="CheckReceivedSlaveFrame">
							<Action>
								<CallFunction>
									<Reference>CHECK_RESET_FAIL</Reference>
								</CallFunction>
							</Action>
							<ReturnValue>
								<OnSuccess>
									<Type>Success</Type>
									<Value Param0="c_CommFaultReason">Expected CommFaultReason ({0}) received</Value>
								</OnSuccess>
							</ReturnValue>
						</TestStep>
					</TestSteps>
				</TestCase>
				<TestCase Name="#5.17 Data_Fail2" CaseId="21">
					<Comment>Gültige ConnId = 3, Ungültige ConnId = 0, Cmd = FailSafeData</Comment>
					<CaseVariables>
						<Variable>
							<Name>c_CommFaultReason</Name>
							<Type>Byte</Type>
						</Variable>
						<Variable>
							<Name>c_tmpByte</Name>
							<Type>Byte</Type>
						</Variable>
					</CaseVariables>
					<TestSteps>
						<TestStep Name="SetVariables">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>c_CommFaultReason</Destination>
										<Source>INVALID_CONNID</Source>
									</SetVariable>
									<SetVariable>
										<Destination>c_tmpByte</Destination>
										<Source>0</Source>
									</SetVariable>
									<SetVariable>
										<Destination>t_wdExpired</Destination>
										<Source>false</Source>
									</SetVariable>
									<SetVariable>
										<Destination>t_masterSessionId</Destination>
										<Source>1</Source>
									</SetVariable>
								</SetVariables>
							</Action>
						</TestStep>
						<TestStep Name="SetConnectionData">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>t_connectionId</Destination>
										<Source>3</Source>
									</SetVariable>
									<SetVariable>
										<Destination DestinationIndex="0">t_connData</Destination>
										<Source>t_connectionId</Source>
									</SetVariable>
									<SetVariable>
										<Destination DestinationIndex="2">t_connData</Destination>
										<Source>ConnData.SlaveAddress</Source>
									</SetVariable>
								</SetVariables>
							</Action>
							<Informations2>
								<Information>
									<Type>Output</Type>
									<Value Param0="t_connectionId" Param1="ConnData.SlaveAddress" Param2="t_connData">ConnectionId: {0} (0x{0:x4}), Slave Address: {1} (0x{1:x4}), Connection Data {2}</Value>
								</Information>
							</Informations2>
						</TestStep>
						<TestStep Name="SetParameterData">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>t_safePara</Destination>
										<Source>SafePara</Source>
									</SetVariable>
									<SetVariable>
										<Destination>t_watchdog</Destination>
										<Source>SafePara.Watchdog</Source>
									</SetVariable>
								</SetVariables>
							</Action>
							<Informations2>
								<Information>
									<Type>Output</Type>
									<Value Param0="t_watchdog" Param1="SafeParaSize" Param2="t_safePara">Watchdog: {0} ms, SafeParaSize: {1}, Safe Parameter {2}</Value>
								</Information>
							</Informations2>
						</TestStep>
						<TestStep Name="GotoData">
							<Action>
								<CallFunction>
									<Reference>RUN_DUT_TO_DATA</Reference>
								</CallFunction>
							</Action>
						</TestStep>
						<TestStep Name="SetLastCrc">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>LastCrc</Destination>
										<Source>t_slaveFrame.Crc0</Source>
									</SetVariable>
								</SetVariables>
							</Action>
						</TestStep>
						<TestStep Name="SetInvalidConnId">
							<Informations1>
								<Information>
									<Type>Output</Type>
									<Value Param0="t_connectionId">Valid Master ConnID: {0} (0x{0:x4})</Value>
								</Information>
							</Informations1>
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>t_connectionId</Destination>
										<Source>0</Source>
									</SetVariable>
								</SetVariables>
							</Action>
							<Informations2>
								<Information>
									<Type>Output</Type>
									<Value Param0="t_connectionId">Falsified ConnId: {0} (0x{0:x4})</Value>
								</Information>
							</Informations2>
						</TestStep>
						<TestStep Name="SetFrame">
							<Informations1>
								<Information>
									<Type>Verbose</Type>
									<Value Param0="FailSafeValue" Param1="LastCrc" Param2="t_masterSeqNo" Param3="OldMasterCrc" Param4="t_connectionId">SetFrame(Command FailSafeData, SafeData {0}, LastCrc 0x{1:x4}, ConnectionId 0x{4:x4},  SequenceNo 0x{2:x4}, OldCrc 0x{3:x4}, New true</Value>
								</Information>
							</Informations1>
							<Action>
								<SetFrame Name="t_masterFrame">
									<Command>
										<CommandValue>FailSafeData</CommandValue>
									</Command>
									<SafeData>
										<SafeDataVariable>FailSafeValue</SafeDataVariable>
									</SafeData>
									<LastCRC>LastCrc</LastCRC>
									<ConnectionID>
										<ConnectionIdVariable>t_connectionId</ConnectionIdVariable>
									</ConnectionID>
									<SequenceNo>t_masterSeqNo</SequenceNo>
									<OldCRC>OldMasterCrc</OldCRC>
									<New>true</New>
								</SetFrame>
							</Action>
						</TestStep>
						<TestStep Name="SendFrame">
							<Action>
								<SendFrame Name="t_masterFrame"/>
							</Action>
							<Informations2>
								<Information>
									<Type>Verbose</Type>
									<Value Param0="t_masterFrame.FrameData">Master Frame: {0}</Value>
								</Information>
							</Informations2>
							<ReturnValue>
								<OnFailure>
									<Type>Error</Type>
									<Value>Failed to send FSoE frame!</Value>
									<Id>256</Id>
								</OnFailure>
							</ReturnValue>
						</TestStep>
						<TestStep Name="CheckReceivedSlaveFrame">
							<Action>
								<CallFunction>
									<Reference>CHECK_RESET_FAIL</Reference>
								</CallFunction>
							</Action>
							<ReturnValue>
								<OnSuccess>
									<Type>Success</Type>
									<Value Param0="c_CommFaultReason">Expected CommFaultReason ({0}) received</Value>
								</OnSuccess>
							</ReturnValue>
						</TestStep>
					</TestSteps>
				</TestCase>
				<TestCase Name="#5.18 Data_Fail2" CaseId="22">
					<Comment>Gültige ConnId = 3, Ungültige ConnId = 2, Cmd = FailSafeData</Comment>
					<CaseVariables>
						<Variable>
							<Name>c_CommFaultReason</Name>
							<Type>Byte</Type>
						</Variable>
						<Variable>
							<Name>c_tmpByte</Name>
							<Type>Byte</Type>
						</Variable>
					</CaseVariables>
					<TestSteps>
						<TestStep Name="SetVariables">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>c_CommFaultReason</Destination>
										<Source>INVALID_CONNID</Source>
									</SetVariable>
									<SetVariable>
										<Destination>c_tmpByte</Destination>
										<Source>0</Source>
									</SetVariable>
									<SetVariable>
										<Destination>t_wdExpired</Destination>
										<Source>false</Source>
									</SetVariable>
									<SetVariable>
										<Destination>t_masterSessionId</Destination>
										<Source>1</Source>
									</SetVariable>
								</SetVariables>
							</Action>
						</TestStep>
						<TestStep Name="SetConnectionData">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>t_connectionId</Destination>
										<Source>3</Source>
									</SetVariable>
									<SetVariable>
										<Destination DestinationIndex="0">t_connData</Destination>
										<Source>t_connectionId</Source>
									</SetVariable>
									<SetVariable>
										<Destination DestinationIndex="2">t_connData</Destination>
										<Source>ConnData.SlaveAddress</Source>
									</SetVariable>
								</SetVariables>
							</Action>
							<Informations2>
								<Information>
									<Type>Output</Type>
									<Value Param0="t_connectionId" Param1="ConnData.SlaveAddress" Param2="t_connData">ConnectionId: {0} (0x{0:x4}), Slave Address: {1} (0x{1:x4}), Connection Data {2}</Value>
								</Information>
							</Informations2>
						</TestStep>
						<TestStep Name="SetParameterData">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>t_safePara</Destination>
										<Source>SafePara</Source>
									</SetVariable>
									<SetVariable>
										<Destination>t_watchdog</Destination>
										<Source>SafePara.Watchdog</Source>
									</SetVariable>
								</SetVariables>
							</Action>
							<Informations2>
								<Information>
									<Type>Output</Type>
									<Value Param0="t_watchdog" Param1="SafeParaSize" Param2="t_safePara">Watchdog: {0} ms, SafeParaSize: {1}, Safe Parameter {2}</Value>
								</Information>
							</Informations2>
						</TestStep>
						<TestStep Name="GotoData">
							<Action>
								<CallFunction>
									<Reference>RUN_DUT_TO_DATA</Reference>
								</CallFunction>
							</Action>
						</TestStep>
						<TestStep Name="SetLastCrc">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>LastCrc</Destination>
										<Source>t_slaveFrame.Crc0</Source>
									</SetVariable>
								</SetVariables>
							</Action>
						</TestStep>
						<TestStep Name="SetInvalidConnId">
							<Informations1>
								<Information>
									<Type>Output</Type>
									<Value Param0="t_connectionId">Valid Master ConnID: {0} (0x{0:x4})</Value>
								</Information>
							</Informations1>
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>t_connectionId</Destination>
										<Source>2</Source>
									</SetVariable>
								</SetVariables>
							</Action>
							<Informations2>
								<Information>
									<Type>Output</Type>
									<Value Param0="t_connectionId">Falsified ConnId: {0} (0x{0:x4})</Value>
								</Information>
							</Informations2>
						</TestStep>
						<TestStep Name="SetFrame">
							<Informations1>
								<Information>
									<Type>Verbose</Type>
									<Value Param0="FailSafeValue" Param1="LastCrc" Param2="t_masterSeqNo" Param3="OldMasterCrc" Param4="t_connectionId">SetFrame(Command FailSafeData, SafeData {0}, LastCrc 0x{1:x4}, ConnectionId 0x{4:x4},  SequenceNo 0x{2:x4}, OldCrc 0x{3:x4}, New true</Value>
								</Information>
							</Informations1>
							<Action>
								<SetFrame Name="t_masterFrame">
									<Command>
										<CommandValue>FailSafeData</CommandValue>
									</Command>
									<SafeData>
										<SafeDataVariable>FailSafeValue</SafeDataVariable>
									</SafeData>
									<LastCRC>LastCrc</LastCRC>
									<ConnectionID>
										<ConnectionIdVariable>t_connectionId</ConnectionIdVariable>
									</ConnectionID>
									<SequenceNo>t_masterSeqNo</SequenceNo>
									<OldCRC>OldMasterCrc</OldCRC>
									<New>true</New>
								</SetFrame>
							</Action>
						</TestStep>
						<TestStep Name="SendFrame">
							<Action>
								<SendFrame Name="t_masterFrame"/>
							</Action>
							<Informations2>
								<Information>
									<Type>Verbose</Type>
									<Value Param0="t_masterFrame.FrameData">Master Frame: {0}</Value>
								</Information>
							</Informations2>
							<ReturnValue>
								<OnFailure>
									<Type>Error</Type>
									<Value>Failed to send FSoE frame!</Value>
									<Id>256</Id>
								</OnFailure>
							</ReturnValue>
						</TestStep>
						<TestStep Name="CheckReceivedSlaveFrame">
							<Action>
								<CallFunction>
									<Reference>CHECK_RESET_FAIL</Reference>
								</CallFunction>
							</Action>
							<ReturnValue>
								<OnSuccess>
									<Type>Success</Type>
									<Value Param0="c_CommFaultReason">Expected CommFaultReason ({0}) received</Value>
								</OnSuccess>
							</ReturnValue>
						</TestStep>
					</TestSteps>
				</TestCase>
				<TestCase Name="#5.19 Data_Fail2" CaseId="23">
					<Comment>Gültige ConnId = 3, Ungültige ConnId = 4, Cmd = FailSafeData</Comment>
					<CaseVariables>
						<Variable>
							<Name>c_CommFaultReason</Name>
							<Type>Byte</Type>
						</Variable>
						<Variable>
							<Name>c_tmpByte</Name>
							<Type>Byte</Type>
						</Variable>
					</CaseVariables>
					<TestSteps>
						<TestStep Name="SetVariables">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>c_CommFaultReason</Destination>
										<Source>INVALID_CONNID</Source>
									</SetVariable>
									<SetVariable>
										<Destination>c_tmpByte</Destination>
										<Source>0</Source>
									</SetVariable>
									<SetVariable>
										<Destination>t_wdExpired</Destination>
										<Source>false</Source>
									</SetVariable>
									<SetVariable>
										<Destination>t_masterSessionId</Destination>
										<Source>1</Source>
									</SetVariable>
								</SetVariables>
							</Action>
						</TestStep>
						<TestStep Name="SetConnectionData">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>t_connectionId</Destination>
										<Source>3</Source>
									</SetVariable>
									<SetVariable>
										<Destination DestinationIndex="0">t_connData</Destination>
										<Source>t_connectionId</Source>
									</SetVariable>
									<SetVariable>
										<Destination DestinationIndex="2">t_connData</Destination>
										<Source>ConnData.SlaveAddress</Source>
									</SetVariable>
								</SetVariables>
							</Action>
							<Informations2>
								<Information>
									<Type>Output</Type>
									<Value Param0="t_connectionId" Param1="ConnData.SlaveAddress" Param2="t_connData">ConnectionId: {0} (0x{0:x4}), Slave Address: {1} (0x{1:x4}), Connection Data {2}</Value>
								</Information>
							</Informations2>
						</TestStep>
						<TestStep Name="SetParameterData">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>t_safePara</Destination>
										<Source>SafePara</Source>
									</SetVariable>
									<SetVariable>
										<Destination>t_watchdog</Destination>
										<Source>SafePara.Watchdog</Source>
									</SetVariable>
								</SetVariables>
							</Action>
							<Informations2>
								<Information>
									<Type>Output</Type>
									<Value Param0="t_watchdog" Param1="SafeParaSize" Param2="t_safePara">Watchdog: {0} ms, SafeParaSize: {1}, Safe Parameter {2}</Value>
								</Information>
							</Informations2>
						</TestStep>
						<TestStep Name="GotoData">
							<Action>
								<CallFunction>
									<Reference>RUN_DUT_TO_DATA</Reference>
								</CallFunction>
							</Action>
						</TestStep>
						<TestStep Name="SetLastCrc">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>LastCrc</Destination>
										<Source>t_slaveFrame.Crc0</Source>
									</SetVariable>
								</SetVariables>
							</Action>
						</TestStep>
						<TestStep Name="SetInvalidConnId">
							<Informations1>
								<Information>
									<Type>Output</Type>
									<Value Param0="t_connectionId">Valid Master ConnID: {0} (0x{0:x4})</Value>
								</Information>
							</Informations1>
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>t_connectionId</Destination>
										<Source>4</Source>
									</SetVariable>
								</SetVariables>
							</Action>
							<Informations2>
								<Information>
									<Type>Output</Type>
									<Value Param0="t_connectionId">Falsified ConnId: {0} (0x{0:x4})</Value>
								</Information>
							</Informations2>
						</TestStep>
						<TestStep Name="SetFrame">
							<Informations1>
								<Information>
									<Type>Verbose</Type>
									<Value Param0="FailSafeValue" Param1="LastCrc" Param2="t_masterSeqNo" Param3="OldMasterCrc" Param4="t_connectionId">SetFrame(Command FailSafeData, SafeData {0}, LastCrc 0x{1:x4}, ConnectionId 0x{4:x4},  SequenceNo 0x{2:x4}, OldCrc 0x{3:x4}, New true</Value>
								</Information>
							</Informations1>
							<Action>
								<SetFrame Name="t_masterFrame">
									<Command>
										<CommandValue>FailSafeData</CommandValue>
									</Command>
									<SafeData>
										<SafeDataVariable>FailSafeValue</SafeDataVariable>
									</SafeData>
									<LastCRC>LastCrc</LastCRC>
									<ConnectionID>
										<ConnectionIdVariable>t_connectionId</ConnectionIdVariable>
									</ConnectionID>
									<SequenceNo>t_masterSeqNo</SequenceNo>
									<OldCRC>OldMasterCrc</OldCRC>
									<New>true</New>
								</SetFrame>
							</Action>
						</TestStep>
						<TestStep Name="SendFrame">
							<Action>
								<SendFrame Name="t_masterFrame"/>
							</Action>
							<Informations2>
								<Information>
									<Type>Verbose</Type>
									<Value Param0="t_masterFrame.FrameData">Master Frame: {0}</Value>
								</Information>
							</Informations2>
							<ReturnValue>
								<OnFailure>
									<Type>Error</Type>
									<Value>Failed to send FSoE frame!</Value>
									<Id>256</Id>
								</OnFailure>
							</ReturnValue>
						</TestStep>
						<TestStep Name="CheckReceivedSlaveFrame">
							<Action>
								<CallFunction>
									<Reference>CHECK_RESET_FAIL</Reference>
								</CallFunction>
							</Action>
							<ReturnValue>
								<OnSuccess>
									<Type>Success</Type>
									<Value Param0="c_CommFaultReason">Expected CommFaultReason ({0}) received</Value>
								</OnSuccess>
							</ReturnValue>
						</TestStep>
					</TestSteps>
				</TestCase>
				<TestCase Name="#5.20 Data_Fail2" CaseId="24">
					<Comment>Gültige ConnId = 3, Ungültige ConnId = 0xffff, Cmd = FailSafeData</Comment>
					<CaseVariables>
						<Variable>
							<Name>c_CommFaultReason</Name>
							<Type>Byte</Type>
						</Variable>
						<Variable>
							<Name>c_tmpByte</Name>
							<Type>Byte</Type>
						</Variable>
					</CaseVariables>
					<TestSteps>
						<TestStep Name="SetVariables">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>c_CommFaultReason</Destination>
										<Source>INVALID_CONNID</Source>
									</SetVariable>
									<SetVariable>
										<Destination>c_tmpByte</Destination>
										<Source>0</Source>
									</SetVariable>
									<SetVariable>
										<Destination>t_wdExpired</Destination>
										<Source>false</Source>
									</SetVariable>
									<SetVariable>
										<Destination>t_masterSessionId</Destination>
										<Source>1</Source>
									</SetVariable>
								</SetVariables>
							</Action>
						</TestStep>
						<TestStep Name="SetConnectionData">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>t_connectionId</Destination>
										<Source>3</Source>
									</SetVariable>
									<SetVariable>
										<Destination DestinationIndex="0">t_connData</Destination>
										<Source>t_connectionId</Source>
									</SetVariable>
									<SetVariable>
										<Destination DestinationIndex="2">t_connData</Destination>
										<Source>ConnData.SlaveAddress</Source>
									</SetVariable>
								</SetVariables>
							</Action>
							<Informations2>
								<Information>
									<Type>Output</Type>
									<Value Param0="t_connectionId" Param1="ConnData.SlaveAddress" Param2="t_connData">ConnectionId: {0} (0x{0:x4}), Slave Address: {1} (0x{1:x4}), Connection Data {2}</Value>
								</Information>
							</Informations2>
						</TestStep>
						<TestStep Name="SetParameterData">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>t_safePara</Destination>
										<Source>SafePara</Source>
									</SetVariable>
									<SetVariable>
										<Destination>t_watchdog</Destination>
										<Source>SafePara.Watchdog</Source>
									</SetVariable>
								</SetVariables>
							</Action>
							<Informations2>
								<Information>
									<Type>Output</Type>
									<Value Param0="t_watchdog" Param1="SafeParaSize" Param2="t_safePara">Watchdog: {0} ms, SafeParaSize: {1}, Safe Parameter {2}</Value>
								</Information>
							</Informations2>
						</TestStep>
						<TestStep Name="GotoData">
							<Action>
								<CallFunction>
									<Reference>RUN_DUT_TO_DATA</Reference>
								</CallFunction>
							</Action>
						</TestStep>
						<TestStep Name="SetLastCrc">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>LastCrc</Destination>
										<Source>t_slaveFrame.Crc0</Source>
									</SetVariable>
								</SetVariables>
							</Action>
						</TestStep>
						<TestStep Name="SetInvalidConnId">
							<Informations1>
								<Information>
									<Type>Output</Type>
									<Value Param0="t_connectionId">Valid Master ConnID: {0} (0x{0:x4})</Value>
								</Information>
							</Informations1>
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>t_connectionId</Destination>
										<Source>65535</Source>
									</SetVariable>
								</SetVariables>
							</Action>
							<Informations2>
								<Information>
									<Type>Output</Type>
									<Value Param0="t_connectionId">Falsified ConnId: {0} (0x{0:x4})</Value>
								</Information>
							</Informations2>
						</TestStep>
						<TestStep Name="SetFrame">
							<Informations1>
								<Information>
									<Type>Verbose</Type>
									<Value Param0="FailSafeValue" Param1="LastCrc" Param2="t_masterSeqNo" Param3="OldMasterCrc" Param4="t_connectionId">SetFrame(Command FailSafeData, SafeData {0}, LastCrc 0x{1:x4}, ConnectionId 0x{4:x4},  SequenceNo 0x{2:x4}, OldCrc 0x{3:x4}, New true</Value>
								</Information>
							</Informations1>
							<Action>
								<SetFrame Name="t_masterFrame">
									<Command>
										<CommandValue>FailSafeData</CommandValue>
									</Command>
									<SafeData>
										<SafeDataVariable>FailSafeValue</SafeDataVariable>
									</SafeData>
									<LastCRC>LastCrc</LastCRC>
									<ConnectionID>
										<ConnectionIdVariable>t_connectionId</ConnectionIdVariable>
									</ConnectionID>
									<SequenceNo>t_masterSeqNo</SequenceNo>
									<OldCRC>OldMasterCrc</OldCRC>
									<New>true</New>
								</SetFrame>
							</Action>
						</TestStep>
						<TestStep Name="SendFrame">
							<Action>
								<SendFrame Name="t_masterFrame"/>
							</Action>
							<Informations2>
								<Information>
									<Type>Verbose</Type>
									<Value Param0="t_masterFrame.FrameData">Master Frame: {0}</Value>
								</Information>
							</Informations2>
							<ReturnValue>
								<OnFailure>
									<Type>Error</Type>
									<Value>Failed to send FSoE frame!</Value>
									<Id>256</Id>
								</OnFailure>
							</ReturnValue>
						</TestStep>
						<TestStep Name="CheckReceivedSlaveFrame">
							<Action>
								<CallFunction>
									<Reference>CHECK_RESET_FAIL</Reference>
								</CallFunction>
							</Action>
							<ReturnValue>
								<OnSuccess>
									<Type>Success</Type>
									<Value Param0="c_CommFaultReason">Expected CommFaultReason ({0}) received</Value>
								</OnSuccess>
							</ReturnValue>
						</TestStep>
					</TestSteps>
				</TestCase>
				<TestCase Name="#5.21 Data_Fail2" CaseId="25">
					<Comment>Gültige ConnId = 2, Ungültige ConnId = 3, Cmd = Processdata</Comment>
					<CaseVariables>
						<Variable>
							<Name>c_CommFaultReason</Name>
							<Type>Byte</Type>
						</Variable>
						<Variable>
							<Name>c_tmpByte</Name>
							<Type>Byte</Type>
						</Variable>
					</CaseVariables>
					<TestSteps>
						<TestStep Name="SetVariables">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>c_CommFaultReason</Destination>
										<Source>INVALID_CONNID</Source>
									</SetVariable>
									<SetVariable>
										<Destination>c_tmpByte</Destination>
										<Source>0</Source>
									</SetVariable>
									<SetVariable>
										<Destination>t_wdExpired</Destination>
										<Source>false</Source>
									</SetVariable>
									<SetVariable>
										<Destination>t_masterSessionId</Destination>
										<Source>1</Source>
									</SetVariable>
								</SetVariables>
							</Action>
						</TestStep>
						<TestStep Name="SetConnectionData">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>t_connectionId</Destination>
										<Source>2</Source>
									</SetVariable>
									<SetVariable>
										<Destination DestinationIndex="0">t_connData</Destination>
										<Source>t_connectionId</Source>
									</SetVariable>
									<SetVariable>
										<Destination DestinationIndex="2">t_connData</Destination>
										<Source>ConnData.SlaveAddress</Source>
									</SetVariable>
								</SetVariables>
							</Action>
							<Informations2>
								<Information>
									<Type>Output</Type>
									<Value Param0="t_connectionId" Param1="ConnData.SlaveAddress" Param2="t_connData">ConnectionId: {0} (0x{0:x4}), Slave Address: {1} (0x{1:x4}), Connection Data {2}</Value>
								</Information>
							</Informations2>
						</TestStep>
						<TestStep Name="SetParameterData">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>t_safePara</Destination>
										<Source>SafePara</Source>
									</SetVariable>
									<SetVariable>
										<Destination>t_watchdog</Destination>
										<Source>SafePara.Watchdog</Source>
									</SetVariable>
								</SetVariables>
							</Action>
							<Informations2>
								<Information>
									<Type>Output</Type>
									<Value Param0="t_watchdog" Param1="SafeParaSize" Param2="t_safePara">Watchdog: {0} ms, SafeParaSize: {1}, Safe Parameter {2}</Value>
								</Information>
							</Informations2>
						</TestStep>
						<TestStep Name="GotoData">
							<Action>
								<CallFunction>
									<Reference>RUN_DUT_TO_DATA</Reference>
								</CallFunction>
							</Action>
						</TestStep>
						<TestStep Name="SetLastCrc">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>LastCrc</Destination>
										<Source>t_slaveFrame.Crc0</Source>
									</SetVariable>
								</SetVariables>
							</Action>
						</TestStep>
						<TestStep Name="SetInvalidConnId">
							<Informations1>
								<Information>
									<Type>Output</Type>
									<Value Param0="t_connectionId">Valid Master ConnID: {0} (0x{0:x4})</Value>
								</Information>
							</Informations1>
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>t_connectionId</Destination>
										<Source>3</Source>
									</SetVariable>
								</SetVariables>
							</Action>
							<Informations2>
								<Information>
									<Type>Output</Type>
									<Value Param0="t_connectionId">Falsified ConnId: {0} (0x{0:x4})</Value>
								</Information>
							</Informations2>
						</TestStep>
						<TestStep Name="SetFrame">
							<Informations1>
								<Information>
									<Type>Verbose</Type>
									<Value Param0="SafeOutputs" Param1="LastCrc" Param2="t_masterSeqNo" Param3="OldMasterCrc" Param4="t_connectionId">SetFrame(Command ProcessData, SafeData {0}, LastCrc 0x{1:x4}, ConnectionId 0x{4:x4},  SequenceNo 0x{2:x4}, OldCrc 0x{3:x4}, New true</Value>
								</Information>
							</Informations1>
							<Action>
								<SetFrame Name="t_masterFrame">
									<Command>
										<CommandValue>Data</CommandValue>
									</Command>
									<SafeData>
										<SafeDataVariable>SafeOutputs</SafeDataVariable>
									</SafeData>
									<LastCRC>LastCrc</LastCRC>
									<ConnectionID>
										<ConnectionIdVariable>t_connectionId</ConnectionIdVariable>
									</ConnectionID>
									<SequenceNo>t_masterSeqNo</SequenceNo>
									<OldCRC>OldMasterCrc</OldCRC>
									<New>true</New>
								</SetFrame>
							</Action>
						</TestStep>
						<TestStep Name="SendFrame">
							<Action>
								<SendFrame Name="t_masterFrame"/>
							</Action>
							<Informations2>
								<Information>
									<Type>Verbose</Type>
									<Value Param0="t_masterFrame.FrameData">Master Frame: {0}</Value>
								</Information>
							</Informations2>
							<ReturnValue>
								<OnFailure>
									<Type>Error</Type>
									<Value>Failed to send FSoE frame!</Value>
									<Id>256</Id>
								</OnFailure>
							</ReturnValue>
						</TestStep>
						<TestStep Name="CheckReceivedSlaveFrame">
							<Action>
								<CallFunction>
									<Reference>CHECK_RESET_FAIL</Reference>
								</CallFunction>
							</Action>
							<ReturnValue>
								<OnSuccess>
									<Type>Success</Type>
									<Value Param0="c_CommFaultReason">Expected CommFaultReason ({0}) received</Value>
								</OnSuccess>
							</ReturnValue>
						</TestStep>
					</TestSteps>
				</TestCase>
				<TestCase Name="#5.22 Data_Fail2" CaseId="26">
					<Comment>Gültige ConnId = 4, Ungültige ConnId = 3, Cmd = Processdata</Comment>
					<CaseVariables>
						<Variable>
							<Name>c_CommFaultReason</Name>
							<Type>Byte</Type>
						</Variable>
						<Variable>
							<Name>c_tmpByte</Name>
							<Type>Byte</Type>
						</Variable>
					</CaseVariables>
					<TestSteps>
						<TestStep Name="SetVariables">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>c_CommFaultReason</Destination>
										<Source>INVALID_CONNID</Source>
									</SetVariable>
									<SetVariable>
										<Destination>c_tmpByte</Destination>
										<Source>0</Source>
									</SetVariable>
									<SetVariable>
										<Destination>t_wdExpired</Destination>
										<Source>false</Source>
									</SetVariable>
									<SetVariable>
										<Destination>t_masterSessionId</Destination>
										<Source>1</Source>
									</SetVariable>
								</SetVariables>
							</Action>
						</TestStep>
						<TestStep Name="SetConnectionData">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>t_connectionId</Destination>
										<Source>4</Source>
									</SetVariable>
									<SetVariable>
										<Destination DestinationIndex="0">t_connData</Destination>
										<Source>t_connectionId</Source>
									</SetVariable>
									<SetVariable>
										<Destination DestinationIndex="2">t_connData</Destination>
										<Source>ConnData.SlaveAddress</Source>
									</SetVariable>
								</SetVariables>
							</Action>
							<Informations2>
								<Information>
									<Type>Output</Type>
									<Value Param0="t_connectionId" Param1="ConnData.SlaveAddress" Param2="t_connData">ConnectionId: {0} (0x{0:x4}), Slave Address: {1} (0x{1:x4}), Connection Data {2}</Value>
								</Information>
							</Informations2>
						</TestStep>
						<TestStep Name="SetParameterData">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>t_safePara</Destination>
										<Source>SafePara</Source>
									</SetVariable>
									<SetVariable>
										<Destination>t_watchdog</Destination>
										<Source>SafePara.Watchdog</Source>
									</SetVariable>
								</SetVariables>
							</Action>
							<Informations2>
								<Information>
									<Type>Output</Type>
									<Value Param0="t_watchdog" Param1="SafeParaSize" Param2="t_safePara">Watchdog: {0} ms, SafeParaSize: {1}, Safe Parameter {2}</Value>
								</Information>
							</Informations2>
						</TestStep>
						<TestStep Name="GotoData">
							<Action>
								<CallFunction>
									<Reference>RUN_DUT_TO_DATA</Reference>
								</CallFunction>
							</Action>
						</TestStep>
						<TestStep Name="SetLastCrc">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>LastCrc</Destination>
										<Source>t_slaveFrame.Crc0</Source>
									</SetVariable>
								</SetVariables>
							</Action>
						</TestStep>
						<TestStep Name="SetInvalidConnId">
							<Informations1>
								<Information>
									<Type>Output</Type>
									<Value Param0="t_connectionId">Valid Master ConnID: {0} (0x{0:x4})</Value>
								</Information>
							</Informations1>
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>t_connectionId</Destination>
										<Source>3</Source>
									</SetVariable>
								</SetVariables>
							</Action>
							<Informations2>
								<Information>
									<Type>Output</Type>
									<Value Param0="t_connectionId">Falsified ConnId: {0} (0x{0:x4})</Value>
								</Information>
							</Informations2>
						</TestStep>
						<TestStep Name="SetFrame">
							<Informations1>
								<Information>
									<Type>Verbose</Type>
									<Value Param0="SafeOutputs" Param1="LastCrc" Param2="t_masterSeqNo" Param3="OldMasterCrc" Param4="t_connectionId">SetFrame(Command ProcessData, SafeData {0}, LastCrc 0x{1:x4}, ConnectionId 0x{4:x4},  SequenceNo 0x{2:x4}, OldCrc 0x{3:x4}, New true</Value>
								</Information>
							</Informations1>
							<Action>
								<SetFrame Name="t_masterFrame">
									<Command>
										<CommandValue>Data</CommandValue>
									</Command>
									<SafeData>
										<SafeDataVariable>SafeOutputs</SafeDataVariable>
									</SafeData>
									<LastCRC>LastCrc</LastCRC>
									<ConnectionID>
										<ConnectionIdVariable>t_connectionId</ConnectionIdVariable>
									</ConnectionID>
									<SequenceNo>t_masterSeqNo</SequenceNo>
									<OldCRC>OldMasterCrc</OldCRC>
									<New>true</New>
								</SetFrame>
							</Action>
						</TestStep>
						<TestStep Name="SendFrame">
							<Action>
								<SendFrame Name="t_masterFrame"/>
							</Action>
							<Informations2>
								<Information>
									<Type>Verbose</Type>
									<Value Param0="t_masterFrame.FrameData">Master Frame: {0}</Value>
								</Information>
							</Informations2>
							<ReturnValue>
								<OnFailure>
									<Type>Error</Type>
									<Value>Failed to send FSoE frame!</Value>
									<Id>256</Id>
								</OnFailure>
							</ReturnValue>
						</TestStep>
						<TestStep Name="CheckReceivedSlaveFrame">
							<Action>
								<CallFunction>
									<Reference>CHECK_RESET_FAIL</Reference>
								</CallFunction>
							</Action>
							<ReturnValue>
								<OnSuccess>
									<Type>Success</Type>
									<Value Param0="c_CommFaultReason">Expected CommFaultReason ({0}) received</Value>
								</OnSuccess>
							</ReturnValue>
						</TestStep>
					</TestSteps>
				</TestCase>
				<TestCase Name="#5.23 Data_Fail2" CaseId="27">
					<Comment>Gültige ConnId = 0xffff, Ungültige ConnId = 3, Cmd = Processdata</Comment>
					<CaseVariables>
						<Variable>
							<Name>c_CommFaultReason</Name>
							<Type>Byte</Type>
						</Variable>
						<Variable>
							<Name>c_tmpByte</Name>
							<Type>Byte</Type>
						</Variable>
					</CaseVariables>
					<TestSteps>
						<TestStep Name="SetVariables">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>c_CommFaultReason</Destination>
										<Source>INVALID_CONNID</Source>
									</SetVariable>
									<SetVariable>
										<Destination>c_tmpByte</Destination>
										<Source>0</Source>
									</SetVariable>
									<SetVariable>
										<Destination>t_wdExpired</Destination>
										<Source>false</Source>
									</SetVariable>
									<SetVariable>
										<Destination>t_masterSessionId</Destination>
										<Source>1</Source>
									</SetVariable>
								</SetVariables>
							</Action>
						</TestStep>
						<TestStep Name="SetConnectionData">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>t_connectionId</Destination>
										<Source>65535</Source>
									</SetVariable>
									<SetVariable>
										<Destination DestinationIndex="0">t_connData</Destination>
										<Source>t_connectionId</Source>
									</SetVariable>
									<SetVariable>
										<Destination DestinationIndex="2">t_connData</Destination>
										<Source>ConnData.SlaveAddress</Source>
									</SetVariable>
								</SetVariables>
							</Action>
							<Informations2>
								<Information>
									<Type>Output</Type>
									<Value Param0="t_connectionId" Param1="ConnData.SlaveAddress" Param2="t_connData">ConnectionId: {0} (0x{0:x4}), Slave Address: {1} (0x{1:x4}), Connection Data {2}</Value>
								</Information>
							</Informations2>
						</TestStep>
						<TestStep Name="SetParameterData">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>t_safePara</Destination>
										<Source>SafePara</Source>
									</SetVariable>
									<SetVariable>
										<Destination>t_watchdog</Destination>
										<Source>SafePara.Watchdog</Source>
									</SetVariable>
								</SetVariables>
							</Action>
							<Informations2>
								<Information>
									<Type>Output</Type>
									<Value Param0="t_watchdog" Param1="SafeParaSize" Param2="t_safePara">Watchdog: {0} ms, SafeParaSize: {1}, Safe Parameter {2}</Value>
								</Information>
							</Informations2>
						</TestStep>
						<TestStep Name="GotoData">
							<Action>
								<CallFunction>
									<Reference>RUN_DUT_TO_DATA</Reference>
								</CallFunction>
							</Action>
						</TestStep>
						<TestStep Name="SetLastCrc">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>LastCrc</Destination>
										<Source>t_slaveFrame.Crc0</Source>
									</SetVariable>
								</SetVariables>
							</Action>
						</TestStep>
						<TestStep Name="SetInvalidConnId">
							<Informations1>
								<Information>
									<Type>Output</Type>
									<Value Param0="t_connectionId">Valid Master ConnID: {0} (0x{0:x4})</Value>
								</Information>
							</Informations1>
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>t_connectionId</Destination>
										<Source>3</Source>
									</SetVariable>
								</SetVariables>
							</Action>
							<Informations2>
								<Information>
									<Type>Output</Type>
									<Value Param0="t_connectionId">Falsified ConnId: {0} (0x{0:x4})</Value>
								</Information>
							</Informations2>
						</TestStep>
						<TestStep Name="SetFrame">
							<Informations1>
								<Information>
									<Type>Verbose</Type>
									<Value Param0="SafeOutputs" Param1="LastCrc" Param2="t_masterSeqNo" Param3="OldMasterCrc" Param4="t_connectionId">SetFrame(Command ProcessData, SafeData {0}, LastCrc 0x{1:x4}, ConnectionId 0x{4:x4},  SequenceNo 0x{2:x4}, OldCrc 0x{3:x4}, New true</Value>
								</Information>
							</Informations1>
							<Action>
								<SetFrame Name="t_masterFrame">
									<Command>
										<CommandValue>Data</CommandValue>
									</Command>
									<SafeData>
										<SafeDataVariable>SafeOutputs</SafeDataVariable>
									</SafeData>
									<LastCRC>LastCrc</LastCRC>
									<ConnectionID>
										<ConnectionIdVariable>t_connectionId</ConnectionIdVariable>
									</ConnectionID>
									<SequenceNo>t_masterSeqNo</SequenceNo>
									<OldCRC>OldMasterCrc</OldCRC>
									<New>true</New>
								</SetFrame>
							</Action>
						</TestStep>
						<TestStep Name="SendFrame">
							<Action>
								<SendFrame Name="t_masterFrame"/>
							</Action>
							<Informations2>
								<Information>
									<Type>Verbose</Type>
									<Value Param0="t_masterFrame.FrameData">Master Frame: {0}</Value>
								</Information>
							</Informations2>
							<ReturnValue>
								<OnFailure>
									<Type>Error</Type>
									<Value>Failed to send FSoE frame!</Value>
									<Id>256</Id>
								</OnFailure>
							</ReturnValue>
						</TestStep>
						<TestStep Name="CheckReceivedSlaveFrame">
							<Action>
								<CallFunction>
									<Reference>CHECK_RESET_FAIL</Reference>
								</CallFunction>
							</Action>
							<ReturnValue>
								<OnSuccess>
									<Type>Success</Type>
									<Value Param0="c_CommFaultReason">Expected CommFaultReason ({0}) received</Value>
								</OnSuccess>
							</ReturnValue>
						</TestStep>
					</TestSteps>
				</TestCase>
				<TestCase Name="#5.24 Data_Fail2" CaseId="28">
					<Comment>Gültige ConnId = 2, Ungültige ConnId = 3, Cmd = FailSafeData</Comment>
					<CaseVariables>
						<Variable>
							<Name>c_CommFaultReason</Name>
							<Type>Byte</Type>
						</Variable>
						<Variable>
							<Name>c_tmpByte</Name>
							<Type>Byte</Type>
						</Variable>
					</CaseVariables>
					<TestSteps>
						<TestStep Name="SetVariables">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>c_CommFaultReason</Destination>
										<Source>INVALID_CONNID</Source>
									</SetVariable>
									<SetVariable>
										<Destination>c_tmpByte</Destination>
										<Source>0</Source>
									</SetVariable>
									<SetVariable>
										<Destination>t_wdExpired</Destination>
										<Source>false</Source>
									</SetVariable>
									<SetVariable>
										<Destination>t_masterSessionId</Destination>
										<Source>1</Source>
									</SetVariable>
								</SetVariables>
							</Action>
						</TestStep>
						<TestStep Name="SetConnectionData">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>t_connectionId</Destination>
										<Source>2</Source>
									</SetVariable>
									<SetVariable>
										<Destination DestinationIndex="0">t_connData</Destination>
										<Source>t_connectionId</Source>
									</SetVariable>
									<SetVariable>
										<Destination DestinationIndex="2">t_connData</Destination>
										<Source>ConnData.SlaveAddress</Source>
									</SetVariable>
								</SetVariables>
							</Action>
							<Informations2>
								<Information>
									<Type>Output</Type>
									<Value Param0="t_connectionId" Param1="ConnData.SlaveAddress" Param2="t_connData">ConnectionId: {0} (0x{0:x4}), Slave Address: {1} (0x{1:x4}), Connection Data {2}</Value>
								</Information>
							</Informations2>
						</TestStep>
						<TestStep Name="SetParameterData">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>t_safePara</Destination>
										<Source>SafePara</Source>
									</SetVariable>
									<SetVariable>
										<Destination>t_watchdog</Destination>
										<Source>SafePara.Watchdog</Source>
									</SetVariable>
								</SetVariables>
							</Action>
							<Informations2>
								<Information>
									<Type>Output</Type>
									<Value Param0="t_watchdog" Param1="SafeParaSize" Param2="t_safePara">Watchdog: {0} ms, SafeParaSize: {1}, Safe Parameter {2}</Value>
								</Information>
							</Informations2>
						</TestStep>
						<TestStep Name="GotoData">
							<Action>
								<CallFunction>
									<Reference>RUN_DUT_TO_DATA</Reference>
								</CallFunction>
							</Action>
						</TestStep>
						<TestStep Name="SetLastCrc">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>LastCrc</Destination>
										<Source>t_slaveFrame.Crc0</Source>
									</SetVariable>
								</SetVariables>
							</Action>
						</TestStep>
						<TestStep Name="SetInvalidConnId">
							<Informations1>
								<Information>
									<Type>Output</Type>
									<Value Param0="t_connectionId">Valid Master ConnID: {0} (0x{0:x4})</Value>
								</Information>
							</Informations1>
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>t_connectionId</Destination>
										<Source>3</Source>
									</SetVariable>
								</SetVariables>
							</Action>
							<Informations2>
								<Information>
									<Type>Output</Type>
									<Value Param0="t_connectionId">Falsified ConnId: {0} (0x{0:x4})</Value>
								</Information>
							</Informations2>
						</TestStep>
						<TestStep Name="SetFrame">
							<Informations1>
								<Information>
									<Type>Verbose</Type>
									<Value Param0="FailSafeValue" Param1="LastCrc" Param2="t_masterSeqNo" Param3="OldMasterCrc" Param4="t_connectionId">SetFrame(Command FailSafeData, SafeData {0}, LastCrc 0x{1:x4}, ConnectionId 0x{4:x4},  SequenceNo 0x{2:x4}, OldCrc 0x{3:x4}, New true</Value>
								</Information>
							</Informations1>
							<Action>
								<SetFrame Name="t_masterFrame">
									<Command>
										<CommandValue>FailSafeData</CommandValue>
									</Command>
									<SafeData>
										<SafeDataVariable>FailSafeValue</SafeDataVariable>
									</SafeData>
									<LastCRC>LastCrc</LastCRC>
									<ConnectionID>
										<ConnectionIdVariable>t_connectionId</ConnectionIdVariable>
									</ConnectionID>
									<SequenceNo>t_masterSeqNo</SequenceNo>
									<OldCRC>OldMasterCrc</OldCRC>
									<New>true</New>
								</SetFrame>
							</Action>
						</TestStep>
						<TestStep Name="SendFrame">
							<Action>
								<SendFrame Name="t_masterFrame"/>
							</Action>
							<Informations2>
								<Information>
									<Type>Verbose</Type>
									<Value Param0="t_masterFrame.FrameData">Master Frame: {0}</Value>
								</Information>
							</Informations2>
							<ReturnValue>
								<OnFailure>
									<Type>Error</Type>
									<Value>Failed to send FSoE frame!</Value>
									<Id>256</Id>
								</OnFailure>
							</ReturnValue>
						</TestStep>
						<TestStep Name="CheckReceivedSlaveFrame">
							<Action>
								<CallFunction>
									<Reference>CHECK_RESET_FAIL</Reference>
								</CallFunction>
							</Action>
							<ReturnValue>
								<OnSuccess>
									<Type>Success</Type>
									<Value Param0="c_CommFaultReason">Expected CommFaultReason ({0}) received</Value>
								</OnSuccess>
							</ReturnValue>
						</TestStep>
					</TestSteps>
				</TestCase>
				<TestCase Name="#5.25 Data_Fail2" CaseId="29">
					<Comment>Gültige ConnId = 4, Ungültige ConnId = 3, Cmd = FailSafeData</Comment>
					<CaseVariables>
						<Variable>
							<Name>c_CommFaultReason</Name>
							<Type>Byte</Type>
						</Variable>
						<Variable>
							<Name>c_tmpByte</Name>
							<Type>Byte</Type>
						</Variable>
					</CaseVariables>
					<TestSteps>
						<TestStep Name="SetVariables">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>c_CommFaultReason</Destination>
										<Source>INVALID_CONNID</Source>
									</SetVariable>
									<SetVariable>
										<Destination>c_tmpByte</Destination>
										<Source>0</Source>
									</SetVariable>
									<SetVariable>
										<Destination>t_wdExpired</Destination>
										<Source>false</Source>
									</SetVariable>
									<SetVariable>
										<Destination>t_masterSessionId</Destination>
										<Source>1</Source>
									</SetVariable>
								</SetVariables>
							</Action>
						</TestStep>
						<TestStep Name="SetConnectionData">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>t_connectionId</Destination>
										<Source>4</Source>
									</SetVariable>
									<SetVariable>
										<Destination DestinationIndex="0">t_connData</Destination>
										<Source>t_connectionId</Source>
									</SetVariable>
									<SetVariable>
										<Destination DestinationIndex="2">t_connData</Destination>
										<Source>ConnData.SlaveAddress</Source>
									</SetVariable>
								</SetVariables>
							</Action>
							<Informations2>
								<Information>
									<Type>Output</Type>
									<Value Param0="t_connectionId" Param1="ConnData.SlaveAddress" Param2="t_connData">ConnectionId: {0} (0x{0:x4}), Slave Address: {1} (0x{1:x4}), Connection Data {2}</Value>
								</Information>
							</Informations2>
						</TestStep>
						<TestStep Name="SetParameterData">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>t_safePara</Destination>
										<Source>SafePara</Source>
									</SetVariable>
									<SetVariable>
										<Destination>t_watchdog</Destination>
										<Source>SafePara.Watchdog</Source>
									</SetVariable>
								</SetVariables>
							</Action>
							<Informations2>
								<Information>
									<Type>Output</Type>
									<Value Param0="t_watchdog" Param1="SafeParaSize" Param2="t_safePara">Watchdog: {0} ms, SafeParaSize: {1}, Safe Parameter {2}</Value>
								</Information>
							</Informations2>
						</TestStep>
						<TestStep Name="GotoData">
							<Action>
								<CallFunction>
									<Reference>RUN_DUT_TO_DATA</Reference>
								</CallFunction>
							</Action>
						</TestStep>
						<TestStep Name="SetLastCrc">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>LastCrc</Destination>
										<Source>t_slaveFrame.Crc0</Source>
									</SetVariable>
								</SetVariables>
							</Action>
						</TestStep>
						<TestStep Name="SetInvalidConnId">
							<Informations1>
								<Information>
									<Type>Output</Type>
									<Value Param0="t_connectionId">Valid Master ConnID: {0} (0x{0:x4})</Value>
								</Information>
							</Informations1>
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>t_connectionId</Destination>
										<Source>3</Source>
									</SetVariable>
								</SetVariables>
							</Action>
							<Informations2>
								<Information>
									<Type>Output</Type>
									<Value Param0="t_connectionId">Falsified ConnId: {0} (0x{0:x4})</Value>
								</Information>
							</Informations2>
						</TestStep>
						<TestStep Name="SetFrame">
							<Informations1>
								<Information>
									<Type>Verbose</Type>
									<Value Param0="FailSafeValue" Param1="LastCrc" Param2="t_masterSeqNo" Param3="OldMasterCrc" Param4="t_connectionId">SetFrame(Command FailSafeData, SafeData {0}, LastCrc 0x{1:x4}, ConnectionId 0x{4:x4},  SequenceNo 0x{2:x4}, OldCrc 0x{3:x4}, New true</Value>
								</Information>
							</Informations1>
							<Action>
								<SetFrame Name="t_masterFrame">
									<Command>
										<CommandValue>FailSafeData</CommandValue>
									</Command>
									<SafeData>
										<SafeDataVariable>FailSafeValue</SafeDataVariable>
									</SafeData>
									<LastCRC>LastCrc</LastCRC>
									<ConnectionID>
										<ConnectionIdVariable>t_connectionId</ConnectionIdVariable>
									</ConnectionID>
									<SequenceNo>t_masterSeqNo</SequenceNo>
									<OldCRC>OldMasterCrc</OldCRC>
									<New>true</New>
								</SetFrame>
							</Action>
						</TestStep>
						<TestStep Name="SendFrame">
							<Action>
								<SendFrame Name="t_masterFrame"/>
							</Action>
							<Informations2>
								<Information>
									<Type>Verbose</Type>
									<Value Param0="t_masterFrame.FrameData">Master Frame: {0}</Value>
								</Information>
							</Informations2>
							<ReturnValue>
								<OnFailure>
									<Type>Error</Type>
									<Value>Failed to send FSoE frame!</Value>
									<Id>256</Id>
								</OnFailure>
							</ReturnValue>
						</TestStep>
						<TestStep Name="CheckReceivedSlaveFrame">
							<Action>
								<CallFunction>
									<Reference>CHECK_RESET_FAIL</Reference>
								</CallFunction>
							</Action>
							<ReturnValue>
								<OnSuccess>
									<Type>Success</Type>
									<Value Param0="c_CommFaultReason">Expected CommFaultReason ({0}) received</Value>
								</OnSuccess>
							</ReturnValue>
						</TestStep>
					</TestSteps>
				</TestCase>
				<TestCase Name="#5.26 Data_Fail2" CaseId="30">
					<Comment>Gültige ConnId = 0xffff, Ungültige ConnId = 3, Cmd = FailSafeData</Comment>
					<CaseVariables>
						<Variable>
							<Name>c_CommFaultReason</Name>
							<Type>Byte</Type>
						</Variable>
						<Variable>
							<Name>c_tmpByte</Name>
							<Type>Byte</Type>
						</Variable>
					</CaseVariables>
					<TestSteps>
						<TestStep Name="SetVariables">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>c_CommFaultReason</Destination>
										<Source>INVALID_CONNID</Source>
									</SetVariable>
									<SetVariable>
										<Destination>c_tmpByte</Destination>
										<Source>0</Source>
									</SetVariable>
									<SetVariable>
										<Destination>t_wdExpired</Destination>
										<Source>false</Source>
									</SetVariable>
									<SetVariable>
										<Destination>t_masterSessionId</Destination>
										<Source>1</Source>
									</SetVariable>
								</SetVariables>
							</Action>
						</TestStep>
						<TestStep Name="SetConnectionData">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>t_connectionId</Destination>
										<Source>65535</Source>
									</SetVariable>
									<SetVariable>
										<Destination DestinationIndex="0">t_connData</Destination>
										<Source>t_connectionId</Source>
									</SetVariable>
									<SetVariable>
										<Destination DestinationIndex="2">t_connData</Destination>
										<Source>ConnData.SlaveAddress</Source>
									</SetVariable>
								</SetVariables>
							</Action>
							<Informations2>
								<Information>
									<Type>Output</Type>
									<Value Param0="t_connectionId" Param1="ConnData.SlaveAddress" Param2="t_connData">ConnectionId: {0} (0x{0:x4}), Slave Address: {1} (0x{1:x4}), Connection Data {2}</Value>
								</Information>
							</Informations2>
						</TestStep>
						<TestStep Name="SetParameterData">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>t_safePara</Destination>
										<Source>SafePara</Source>
									</SetVariable>
									<SetVariable>
										<Destination>t_watchdog</Destination>
										<Source>SafePara.Watchdog</Source>
									</SetVariable>
								</SetVariables>
							</Action>
							<Informations2>
								<Information>
									<Type>Output</Type>
									<Value Param0="t_watchdog" Param1="SafeParaSize" Param2="t_safePara">Watchdog: {0} ms, SafeParaSize: {1}, Safe Parameter {2}</Value>
								</Information>
							</Informations2>
						</TestStep>
						<TestStep Name="GotoData">
							<Action>
								<CallFunction>
									<Reference>RUN_DUT_TO_DATA</Reference>
								</CallFunction>
							</Action>
						</TestStep>
						<TestStep Name="SetLastCrc">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>LastCrc</Destination>
										<Source>t_slaveFrame.Crc0</Source>
									</SetVariable>
								</SetVariables>
							</Action>
						</TestStep>
						<TestStep Name="SetInvalidConnId">
							<Informations1>
								<Information>
									<Type>Output</Type>
									<Value Param0="t_connectionId">Valid Master ConnID: {0} (0x{0:x4})</Value>
								</Information>
							</Informations1>
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>t_connectionId</Destination>
										<Source>3</Source>
									</SetVariable>
								</SetVariables>
							</Action>
							<Informations2>
								<Information>
									<Type>Output</Type>
									<Value Param0="t_connectionId">Falsified ConnId: {0} (0x{0:x4})</Value>
								</Information>
							</Informations2>
						</TestStep>
						<TestStep Name="SetFrame">
							<Informations1>
								<Information>
									<Type>Verbose</Type>
									<Value Param0="FailSafeValue" Param1="LastCrc" Param2="t_masterSeqNo" Param3="OldMasterCrc" Param4="t_connectionId">SetFrame(Command FailSafeData, SafeData {0}, LastCrc 0x{1:x4}, ConnectionId 0x{4:x4},  SequenceNo 0x{2:x4}, OldCrc 0x{3:x4}, New true</Value>
								</Information>
							</Informations1>
							<Action>
								<SetFrame Name="t_masterFrame">
									<Command>
										<CommandValue>FailSafeData</CommandValue>
									</Command>
									<SafeData>
										<SafeDataVariable>FailSafeValue</SafeDataVariable>
									</SafeData>
									<LastCRC>LastCrc</LastCRC>
									<ConnectionID>
										<ConnectionIdVariable>t_connectionId</ConnectionIdVariable>
									</ConnectionID>
									<SequenceNo>t_masterSeqNo</SequenceNo>
									<OldCRC>OldMasterCrc</OldCRC>
									<New>true</New>
								</SetFrame>
							</Action>
						</TestStep>
						<TestStep Name="SendFrame">
							<Action>
								<SendFrame Name="t_masterFrame"/>
							</Action>
							<Informations2>
								<Information>
									<Type>Verbose</Type>
									<Value Param0="t_masterFrame.FrameData">Master Frame: {0}</Value>
								</Information>
							</Informations2>
							<ReturnValue>
								<OnFailure>
									<Type>Error</Type>
									<Value>Failed to send FSoE frame!</Value>
									<Id>256</Id>
								</OnFailure>
							</ReturnValue>
						</TestStep>
						<TestStep Name="CheckReceivedSlaveFrame">
							<Action>
								<CallFunction>
									<Reference>CHECK_RESET_FAIL</Reference>
								</CallFunction>
							</Action>
							<ReturnValue>
								<OnSuccess>
									<Type>Success</Type>
									<Value Param0="c_CommFaultReason">Expected CommFaultReason ({0}) received</Value>
								</OnSuccess>
							</ReturnValue>
						</TestStep>
					</TestSteps>
				</TestCase>
				<TestCase Name="#5.27 Data_Reset1" CaseId="31">
					<Comment>Reset-Kommando vom Master mit CommFaultReason = 0</Comment>
					<CaseVariables>
						<Variable>
							<Name>c_CommFaultReason</Name>
							<Type>Byte</Type>
						</Variable>
						<Variable>
							<Name>c_tmpByte</Name>
							<Type>Byte</Type>
						</Variable>
						<Variable>
							<Name>c_tmpCommFaultReason</Name>
							<Type>Byte</Type>
						</Variable>
						<Variable>
							<Name>c_safeData[SafeDataLength]</Name>
							<Type>ArrayOfBytes</Type>
						</Variable>
					</CaseVariables>
					<TestSteps>
						<TestStep Name="SetVariables">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>c_CommFaultReason</Destination>
										<Source>0</Source>
									</SetVariable>
									<SetVariable>
										<Destination>c_tmpByte</Destination>
										<Source>0</Source>
									</SetVariable>
									<SetVariable>
										<Destination>t_masterSessionId</Destination>
										<Source>1</Source>
									</SetVariable>
								</SetVariables>
							</Action>
						</TestStep>
						<TestStep Name="SetConnectionData">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>t_connectionId</Destination>
										<Source>3</Source>
									</SetVariable>
									<SetVariable>
										<Destination DestinationIndex="0">t_connData</Destination>
										<Source>t_connectionId</Source>
									</SetVariable>
									<SetVariable>
										<Destination DestinationIndex="2">t_connData</Destination>
										<Source>ConnData.SlaveAddress</Source>
									</SetVariable>
								</SetVariables>
							</Action>
							<Informations2>
								<Information>
									<Type>Output</Type>
									<Value Param0="t_connectionId" Param1="ConnData.SlaveAddress" Param2="t_connData">ConnectionId: {0} (0x{0:x4}), Slave Address: {1} (0x{1:x4}), Connection Data {2}</Value>
								</Information>
							</Informations2>
						</TestStep>
						<TestStep Name="SetParameterData">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>t_safePara</Destination>
										<Source>SafePara</Source>
									</SetVariable>
									<SetVariable>
										<Destination>t_watchdog</Destination>
										<Source>SafePara.Watchdog</Source>
									</SetVariable>
								</SetVariables>
							</Action>
							<Informations2>
								<Information>
									<Type>Output</Type>
									<Value Param0="t_watchdog" Param1="SafeParaSize" Param2="t_safePara">Watchdog: {0} ms, SafeParaSize: {1}, Safe Parameter {2}</Value>
								</Information>
							</Informations2>
						</TestStep>
						<TestStep Name="GotoData">
							<Action>
								<CallFunction>
									<Reference>RUN_DUT_TO_DATA</Reference>
								</CallFunction>
							</Action>
						</TestStep>
						<TestStep Name="SetMasterFrameData">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>t_connectionId</Destination>
										<Source>0</Source>
									</SetVariable>
									<SetVariable>
										<Destination>t_masterSeqNo</Destination>
										<Source>1</Source>
									</SetVariable>
									<SetVariable>
										<Destination>LastCrc</Destination>
										<Source>0</Source>
									</SetVariable>
									<SetVariable>
										<Destination>OldMasterCrc</Destination>
										<Source>0</Source>
									</SetVariable>
									<SetVariable>
										<Destination>c_tmpCommFaultReason</Destination>
										<Source>0</Source>
									</SetVariable>
									<SetVariable>
										<Destination DestinationIndex="0">c_safeData</Destination>
										<Source>c_tmpCommFaultReason</Source>
									</SetVariable>
								</SetVariables>
							</Action>
						</TestStep>
						<TestStep Name="SetFrame">
							<Informations1>
								<Information>
									<Type>Verbose</Type>
									<Value Param0="c_safeData" Param1="LastCrc" Param2="t_masterSeqNo" Param3="OldMasterCrc" Param4="0">SetFrame(Command Reset, SafeData {0}, LastCrc 0x{1:x4}, ConnectionId 0x{4:x4},  SequenceNo 0x{2:x4}, OldCrc 0x{3:x4}, New false</Value>
								</Information>
							</Informations1>
							<Action>
								<SetFrame Name="t_masterFrame">
									<Command>
										<CommandValue>Reset</CommandValue>
									</Command>
									<SafeData>
										<SafeDataVariable>c_safeData</SafeDataVariable>
									</SafeData>
									<LastCRC>LastCrc</LastCRC>
									<ConnectionID>
										<UshortValue>0</UshortValue>
									</ConnectionID>
									<SequenceNo>t_masterSeqNo</SequenceNo>
									<OldCRC>OldMasterCrc</OldCRC>
									<New>false</New>
								</SetFrame>
							</Action>
						</TestStep>
						<TestStep Name="SendFrame">
							<Action>
								<SendFrame Name="t_masterFrame"/>
							</Action>
							<Informations2>
								<Information>
									<Type>Verbose</Type>
									<Value Param0="t_masterFrame.FrameData">Master Frame: {0}</Value>
								</Information>
							</Informations2>
							<ReturnValue>
								<OnFailure>
									<Type>Error</Type>
									<Value>Failed to send FSoE frame!</Value>
									<Id>256</Id>
								</OnFailure>
							</ReturnValue>
						</TestStep>
						<TestStep Name="CheckReceivedSlaveFrame">
							<Action>
								<CallFunction>
									<Reference>CHECK_RESET_FAIL</Reference>
								</CallFunction>
							</Action>
							<ReturnValue>
								<OnSuccess>
									<Type>Success</Type>
									<Value Param0="c_CommFaultReason">Expected CommFaultReason ({0}) received</Value>
								</OnSuccess>
							</ReturnValue>
						</TestStep>
					</TestSteps>
				</TestCase>
				<TestCase Name="#5.28 Data_Reset1" CaseId="32">
					<Comment>Reset-Kommando vom Master mit CommFaultReason = 1</Comment>
					<CaseVariables>
						<Variable>
							<Name>c_CommFaultReason</Name>
							<Type>Byte</Type>
						</Variable>
						<Variable>
							<Name>c_tmpByte</Name>
							<Type>Byte</Type>
						</Variable>
						<Variable>
							<Name>c_tmpCommFaultReason</Name>
							<Type>Byte</Type>
						</Variable>
						<Variable>
							<Name>c_safeData[SafeDataLength]</Name>
							<Type>ArrayOfBytes</Type>
						</Variable>
					</CaseVariables>
					<TestSteps>
						<TestStep Name="SetVariables">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>c_CommFaultReason</Destination>
										<Source>0</Source>
									</SetVariable>
									<SetVariable>
										<Destination>c_tmpByte</Destination>
										<Source>0</Source>
									</SetVariable>
									<SetVariable>
										<Destination>t_masterSessionId</Destination>
										<Source>1</Source>
									</SetVariable>
								</SetVariables>
							</Action>
						</TestStep>
						<TestStep Name="SetConnectionData">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>t_connectionId</Destination>
										<Source>3</Source>
									</SetVariable>
									<SetVariable>
										<Destination DestinationIndex="0">t_connData</Destination>
										<Source>t_connectionId</Source>
									</SetVariable>
									<SetVariable>
										<Destination DestinationIndex="2">t_connData</Destination>
										<Source>ConnData.SlaveAddress</Source>
									</SetVariable>
								</SetVariables>
							</Action>
							<Informations2>
								<Information>
									<Type>Output</Type>
									<Value Param0="t_connectionId" Param1="ConnData.SlaveAddress" Param2="t_connData">ConnectionId: {0} (0x{0:x4}), Slave Address: {1} (0x{1:x4}), Connection Data {2}</Value>
								</Information>
							</Informations2>
						</TestStep>
						<TestStep Name="SetParameterData">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>t_safePara</Destination>
										<Source>SafePara</Source>
									</SetVariable>
									<SetVariable>
										<Destination>t_watchdog</Destination>
										<Source>SafePara.Watchdog</Source>
									</SetVariable>
								</SetVariables>
							</Action>
							<Informations2>
								<Information>
									<Type>Output</Type>
									<Value Param0="t_watchdog" Param1="SafeParaSize" Param2="t_safePara">Watchdog: {0} ms, SafeParaSize: {1}, Safe Parameter {2}</Value>
								</Information>
							</Informations2>
						</TestStep>
						<TestStep Name="GotoData">
							<Action>
								<CallFunction>
									<Reference>RUN_DUT_TO_DATA</Reference>
								</CallFunction>
							</Action>
						</TestStep>
						<TestStep Name="SetMasterFrameData">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>t_connectionId</Destination>
										<Source>0</Source>
									</SetVariable>
									<SetVariable>
										<Destination>t_masterSeqNo</Destination>
										<Source>1</Source>
									</SetVariable>
									<SetVariable>
										<Destination>LastCrc</Destination>
										<Source>0</Source>
									</SetVariable>
									<SetVariable>
										<Destination>OldMasterCrc</Destination>
										<Source>0</Source>
									</SetVariable>
									<SetVariable>
										<Destination>c_tmpCommFaultReason</Destination>
										<Source>1</Source>
									</SetVariable>
									<SetVariable>
										<Destination DestinationIndex="0">c_safeData</Destination>
										<Source>c_tmpCommFaultReason</Source>
									</SetVariable>
								</SetVariables>
							</Action>
						</TestStep>
						<TestStep Name="SetFrame">
							<Informations1>
								<Information>
									<Type>Verbose</Type>
									<Value Param0="c_safeData" Param1="LastCrc" Param2="t_masterSeqNo" Param3="OldMasterCrc" Param4="0">SetFrame(Command Reset, SafeData {0}, LastCrc 0x{1:x4}, ConnectionId 0x{4:x4},  SequenceNo 0x{2:x4}, OldCrc 0x{3:x4}, New false</Value>
								</Information>
							</Informations1>
							<Action>
								<SetFrame Name="t_masterFrame">
									<Command>
										<CommandValue>Reset</CommandValue>
									</Command>
									<SafeData>
										<SafeDataVariable>c_safeData</SafeDataVariable>
									</SafeData>
									<LastCRC>LastCrc</LastCRC>
									<ConnectionID>
										<UshortValue>0</UshortValue>
									</ConnectionID>
									<SequenceNo>t_masterSeqNo</SequenceNo>
									<OldCRC>OldMasterCrc</OldCRC>
									<New>false</New>
								</SetFrame>
							</Action>
						</TestStep>
						<TestStep Name="SendFrame">
							<Action>
								<SendFrame Name="t_masterFrame"/>
							</Action>
							<Informations2>
								<Information>
									<Type>Verbose</Type>
									<Value Param0="t_masterFrame.FrameData">Master Frame: {0}</Value>
								</Information>
							</Informations2>
							<ReturnValue>
								<OnFailure>
									<Type>Error</Type>
									<Value>Failed to send FSoE frame!</Value>
									<Id>256</Id>
								</OnFailure>
							</ReturnValue>
						</TestStep>
						<TestStep Name="CheckReceivedSlaveFrame">
							<Action>
								<CallFunction>
									<Reference>CHECK_RESET_FAIL</Reference>
								</CallFunction>
							</Action>
							<ReturnValue>
								<OnSuccess>
									<Type>Success</Type>
									<Value Param0="c_CommFaultReason">Expected CommFaultReason ({0}) received</Value>
								</OnSuccess>
							</ReturnValue>
						</TestStep>
					</TestSteps>
				</TestCase>
				<TestCase Name="#5.29 Data_Reset1" CaseId="33">
					<Comment>Reset-Kommando vom Master mit CommFaultReason = 14</Comment>
					<CaseVariables>
						<Variable>
							<Name>c_CommFaultReason</Name>
							<Type>Byte</Type>
						</Variable>
						<Variable>
							<Name>c_tmpByte</Name>
							<Type>Byte</Type>
						</Variable>
						<Variable>
							<Name>c_tmpCommFaultReason</Name>
							<Type>Byte</Type>
						</Variable>
						<Variable>
							<Name>c_safeData[SafeDataLength]</Name>
							<Type>ArrayOfBytes</Type>
						</Variable>
					</CaseVariables>
					<TestSteps>
						<TestStep Name="SetVariables">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>c_CommFaultReason</Destination>
										<Source>0</Source>
									</SetVariable>
									<SetVariable>
										<Destination>c_tmpByte</Destination>
										<Source>0</Source>
									</SetVariable>
									<SetVariable>
										<Destination>t_masterSessionId</Destination>
										<Source>1</Source>
									</SetVariable>
								</SetVariables>
							</Action>
						</TestStep>
						<TestStep Name="SetConnectionData">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>t_connectionId</Destination>
										<Source>3</Source>
									</SetVariable>
									<SetVariable>
										<Destination DestinationIndex="0">t_connData</Destination>
										<Source>t_connectionId</Source>
									</SetVariable>
									<SetVariable>
										<Destination DestinationIndex="2">t_connData</Destination>
										<Source>ConnData.SlaveAddress</Source>
									</SetVariable>
								</SetVariables>
							</Action>
							<Informations2>
								<Information>
									<Type>Output</Type>
									<Value Param0="t_connectionId" Param1="ConnData.SlaveAddress" Param2="t_connData">ConnectionId: {0} (0x{0:x4}), Slave Address: {1} (0x{1:x4}), Connection Data {2}</Value>
								</Information>
							</Informations2>
						</TestStep>
						<TestStep Name="SetParameterData">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>t_safePara</Destination>
										<Source>SafePara</Source>
									</SetVariable>
									<SetVariable>
										<Destination>t_watchdog</Destination>
										<Source>SafePara.Watchdog</Source>
									</SetVariable>
								</SetVariables>
							</Action>
							<Informations2>
								<Information>
									<Type>Output</Type>
									<Value Param0="t_watchdog" Param1="SafeParaSize" Param2="t_safePara">Watchdog: {0} ms, SafeParaSize: {1}, Safe Parameter {2}</Value>
								</Information>
							</Informations2>
						</TestStep>
						<TestStep Name="GotoData">
							<Action>
								<CallFunction>
									<Reference>RUN_DUT_TO_DATA</Reference>
								</CallFunction>
							</Action>
						</TestStep>
						<TestStep Name="SetMasterFrameData">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>t_connectionId</Destination>
										<Source>0</Source>
									</SetVariable>
									<SetVariable>
										<Destination>t_masterSeqNo</Destination>
										<Source>1</Source>
									</SetVariable>
									<SetVariable>
										<Destination>LastCrc</Destination>
										<Source>0</Source>
									</SetVariable>
									<SetVariable>
										<Destination>OldMasterCrc</Destination>
										<Source>0</Source>
									</SetVariable>
									<SetVariable>
										<Destination>c_tmpCommFaultReason</Destination>
										<Source>14</Source>
									</SetVariable>
									<SetVariable>
										<Destination DestinationIndex="0">c_safeData</Destination>
										<Source>c_tmpCommFaultReason</Source>
									</SetVariable>
								</SetVariables>
							</Action>
						</TestStep>
						<TestStep Name="SetFrame">
							<Informations1>
								<Information>
									<Type>Verbose</Type>
									<Value Param0="c_safeData" Param1="LastCrc" Param2="t_masterSeqNo" Param3="OldMasterCrc" Param4="0">SetFrame(Command Reset, SafeData {0}, LastCrc 0x{1:x4}, ConnectionId 0x{4:x4},  SequenceNo 0x{2:x4}, OldCrc 0x{3:x4}, New false</Value>
								</Information>
							</Informations1>
							<Action>
								<SetFrame Name="t_masterFrame">
									<Command>
										<CommandValue>Reset</CommandValue>
									</Command>
									<SafeData>
										<SafeDataVariable>c_safeData</SafeDataVariable>
									</SafeData>
									<LastCRC>LastCrc</LastCRC>
									<ConnectionID>
										<UshortValue>0</UshortValue>
									</ConnectionID>
									<SequenceNo>t_masterSeqNo</SequenceNo>
									<OldCRC>OldMasterCrc</OldCRC>
									<New>false</New>
								</SetFrame>
							</Action>
						</TestStep>
						<TestStep Name="SendFrame">
							<Action>
								<SendFrame Name="t_masterFrame"/>
							</Action>
							<Informations2>
								<Information>
									<Type>Verbose</Type>
									<Value Param0="t_masterFrame.FrameData">Master Frame: {0}</Value>
								</Information>
							</Informations2>
							<ReturnValue>
								<OnFailure>
									<Type>Error</Type>
									<Value>Failed to send FSoE frame!</Value>
									<Id>256</Id>
								</OnFailure>
							</ReturnValue>
						</TestStep>
						<TestStep Name="CheckReceivedSlaveFrame">
							<Action>
								<CallFunction>
									<Reference>CHECK_RESET_FAIL</Reference>
								</CallFunction>
							</Action>
							<ReturnValue>
								<OnSuccess>
									<Type>Success</Type>
									<Value Param0="c_CommFaultReason">Expected CommFaultReason ({0}) received</Value>
								</OnSuccess>
							</ReturnValue>
						</TestStep>
					</TestSteps>
				</TestCase>
				<TestCase Name="#5.30 Data_Reset1" CaseId="34">
					<Comment>Reset-Kommando vom Master mit CommFaultReason = 15</Comment>
					<CaseVariables>
						<Variable>
							<Name>c_CommFaultReason</Name>
							<Type>Byte</Type>
						</Variable>
						<Variable>
							<Name>c_tmpByte</Name>
							<Type>Byte</Type>
						</Variable>
						<Variable>
							<Name>c_tmpCommFaultReason</Name>
							<Type>Byte</Type>
						</Variable>
						<Variable>
							<Name>c_safeData[SafeDataLength]</Name>
							<Type>ArrayOfBytes</Type>
						</Variable>
					</CaseVariables>
					<TestSteps>
						<TestStep Name="SetVariables">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>c_CommFaultReason</Destination>
										<Source>0</Source>
									</SetVariable>
									<SetVariable>
										<Destination>c_tmpByte</Destination>
										<Source>0</Source>
									</SetVariable>
									<SetVariable>
										<Destination>t_masterSessionId</Destination>
										<Source>1</Source>
									</SetVariable>
								</SetVariables>
							</Action>
						</TestStep>
						<TestStep Name="SetConnectionData">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>t_connectionId</Destination>
										<Source>3</Source>
									</SetVariable>
									<SetVariable>
										<Destination DestinationIndex="0">t_connData</Destination>
										<Source>t_connectionId</Source>
									</SetVariable>
									<SetVariable>
										<Destination DestinationIndex="2">t_connData</Destination>
										<Source>ConnData.SlaveAddress</Source>
									</SetVariable>
								</SetVariables>
							</Action>
							<Informations2>
								<Information>
									<Type>Output</Type>
									<Value Param0="t_connectionId" Param1="ConnData.SlaveAddress" Param2="t_connData">ConnectionId: {0} (0x{0:x4}), Slave Address: {1} (0x{1:x4}), Connection Data {2}</Value>
								</Information>
							</Informations2>
						</TestStep>
						<TestStep Name="SetParameterData">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>t_safePara</Destination>
										<Source>SafePara</Source>
									</SetVariable>
									<SetVariable>
										<Destination>t_watchdog</Destination>
										<Source>SafePara.Watchdog</Source>
									</SetVariable>
								</SetVariables>
							</Action>
							<Informations2>
								<Information>
									<Type>Output</Type>
									<Value Param0="t_watchdog" Param1="SafeParaSize" Param2="t_safePara">Watchdog: {0} ms, SafeParaSize: {1}, Safe Parameter {2}</Value>
								</Information>
							</Informations2>
						</TestStep>
						<TestStep Name="GotoData">
							<Action>
								<CallFunction>
									<Reference>RUN_DUT_TO_DATA</Reference>
								</CallFunction>
							</Action>
						</TestStep>
						<TestStep Name="SetMasterFrameData">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>t_connectionId</Destination>
										<Source>0</Source>
									</SetVariable>
									<SetVariable>
										<Destination>t_masterSeqNo</Destination>
										<Source>1</Source>
									</SetVariable>
									<SetVariable>
										<Destination>LastCrc</Destination>
										<Source>0</Source>
									</SetVariable>
									<SetVariable>
										<Destination>OldMasterCrc</Destination>
										<Source>0</Source>
									</SetVariable>
									<SetVariable>
										<Destination>c_tmpCommFaultReason</Destination>
										<Source>15</Source>
									</SetVariable>
									<SetVariable>
										<Destination DestinationIndex="0">c_safeData</Destination>
										<Source>c_tmpCommFaultReason</Source>
									</SetVariable>
								</SetVariables>
							</Action>
						</TestStep>
						<TestStep Name="SetFrame">
							<Informations1>
								<Information>
									<Type>Verbose</Type>
									<Value Param0="c_safeData" Param1="LastCrc" Param2="t_masterSeqNo" Param3="OldMasterCrc" Param4="0">SetFrame(Command Reset, SafeData {0}, LastCrc 0x{1:x4}, ConnectionId 0x{4:x4},  SequenceNo 0x{2:x4}, OldCrc 0x{3:x4}, New false</Value>
								</Information>
							</Informations1>
							<Action>
								<SetFrame Name="t_masterFrame">
									<Command>
										<CommandValue>Reset</CommandValue>
									</Command>
									<SafeData>
										<SafeDataVariable>c_safeData</SafeDataVariable>
									</SafeData>
									<LastCRC>LastCrc</LastCRC>
									<ConnectionID>
										<UshortValue>0</UshortValue>
									</ConnectionID>
									<SequenceNo>t_masterSeqNo</SequenceNo>
									<OldCRC>OldMasterCrc</OldCRC>
									<New>false</New>
								</SetFrame>
							</Action>
						</TestStep>
						<TestStep Name="SendFrame">
							<Action>
								<SendFrame Name="t_masterFrame"/>
							</Action>
							<Informations2>
								<Information>
									<Type>Verbose</Type>
									<Value Param0="t_masterFrame.FrameData">Master Frame: {0}</Value>
								</Information>
							</Informations2>
							<ReturnValue>
								<OnFailure>
									<Type>Error</Type>
									<Value>Failed to send FSoE frame!</Value>
									<Id>256</Id>
								</OnFailure>
							</ReturnValue>
						</TestStep>
						<TestStep Name="CheckReceivedSlaveFrame">
							<Action>
								<CallFunction>
									<Reference>CHECK_RESET_FAIL</Reference>
								</CallFunction>
							</Action>
							<ReturnValue>
								<OnSuccess>
									<Type>Success</Type>
									<Value Param0="c_CommFaultReason">Expected CommFaultReason ({0}) received</Value>
								</OnSuccess>
							</ReturnValue>
						</TestStep>
					</TestSteps>
				</TestCase>
				<TestCase Name="#5.31 Data_Reset1" CaseId="35">
					<Comment>Reset-Kommando vom Master mit CommFaultReason = 255</Comment>
					<CaseVariables>
						<Variable>
							<Name>c_CommFaultReason</Name>
							<Type>Byte</Type>
						</Variable>
						<Variable>
							<Name>c_tmpByte</Name>
							<Type>Byte</Type>
						</Variable>
						<Variable>
							<Name>c_tmpCommFaultReason</Name>
							<Type>Byte</Type>
						</Variable>
						<Variable>
							<Name>c_safeData[SafeDataLength]</Name>
							<Type>ArrayOfBytes</Type>
						</Variable>
					</CaseVariables>
					<TestSteps>
						<TestStep Name="SetVariables">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>c_CommFaultReason</Destination>
										<Source>0</Source>
									</SetVariable>
									<SetVariable>
										<Destination>c_tmpByte</Destination>
										<Source>0</Source>
									</SetVariable>
									<SetVariable>
										<Destination>t_masterSessionId</Destination>
										<Source>1</Source>
									</SetVariable>
								</SetVariables>
							</Action>
						</TestStep>
						<TestStep Name="SetConnectionData">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>t_connectionId</Destination>
										<Source>3</Source>
									</SetVariable>
									<SetVariable>
										<Destination DestinationIndex="0">t_connData</Destination>
										<Source>t_connectionId</Source>
									</SetVariable>
									<SetVariable>
										<Destination DestinationIndex="2">t_connData</Destination>
										<Source>ConnData.SlaveAddress</Source>
									</SetVariable>
								</SetVariables>
							</Action>
							<Informations2>
								<Information>
									<Type>Output</Type>
									<Value Param0="t_connectionId" Param1="ConnData.SlaveAddress" Param2="t_connData">ConnectionId: {0} (0x{0:x4}), Slave Address: {1} (0x{1:x4}), Connection Data {2}</Value>
								</Information>
							</Informations2>
						</TestStep>
						<TestStep Name="SetParameterData">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>t_safePara</Destination>
										<Source>SafePara</Source>
									</SetVariable>
									<SetVariable>
										<Destination>t_watchdog</Destination>
										<Source>SafePara.Watchdog</Source>
									</SetVariable>
								</SetVariables>
							</Action>
							<Informations2>
								<Information>
									<Type>Output</Type>
									<Value Param0="t_watchdog" Param1="SafeParaSize" Param2="t_safePara">Watchdog: {0} ms, SafeParaSize: {1}, Safe Parameter {2}</Value>
								</Information>
							</Informations2>
						</TestStep>
						<TestStep Name="GotoData">
							<Action>
								<CallFunction>
									<Reference>RUN_DUT_TO_DATA</Reference>
								</CallFunction>
							</Action>
						</TestStep>
						<TestStep Name="SetMasterFrameData">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>t_connectionId</Destination>
										<Source>0</Source>
									</SetVariable>
									<SetVariable>
										<Destination>t_masterSeqNo</Destination>
										<Source>1</Source>
									</SetVariable>
									<SetVariable>
										<Destination>LastCrc</Destination>
										<Source>0</Source>
									</SetVariable>
									<SetVariable>
										<Destination>OldMasterCrc</Destination>
										<Source>0</Source>
									</SetVariable>
									<SetVariable>
										<Destination>c_tmpCommFaultReason</Destination>
										<Source>255</Source>
									</SetVariable>
									<SetVariable>
										<Destination DestinationIndex="0">c_safeData</Destination>
										<Source>c_tmpCommFaultReason</Source>
									</SetVariable>
								</SetVariables>
							</Action>
						</TestStep>
						<TestStep Name="SetFrame">
							<Informations1>
								<Information>
									<Type>Verbose</Type>
									<Value Param0="c_safeData" Param1="LastCrc" Param2="t_masterSeqNo" Param3="OldMasterCrc" Param4="0">SetFrame(Command Reset, SafeData {0}, LastCrc 0x{1:x4}, ConnectionId 0x{4:x4},  SequenceNo 0x{2:x4}, OldCrc 0x{3:x4}, New false</Value>
								</Information>
							</Informations1>
							<Action>
								<SetFrame Name="t_masterFrame">
									<Command>
										<CommandValue>Reset</CommandValue>
									</Command>
									<SafeData>
										<SafeDataVariable>c_safeData</SafeDataVariable>
									</SafeData>
									<LastCRC>LastCrc</LastCRC>
									<ConnectionID>
										<UshortValue>0</UshortValue>
									</ConnectionID>
									<SequenceNo>t_masterSeqNo</SequenceNo>
									<OldCRC>OldMasterCrc</OldCRC>
									<New>false</New>
								</SetFrame>
							</Action>
						</TestStep>
						<TestStep Name="SendFrame">
							<Action>
								<SendFrame Name="t_masterFrame"/>
							</Action>
							<Informations2>
								<Information>
									<Type>Verbose</Type>
									<Value Param0="t_masterFrame.FrameData">Master Frame: {0}</Value>
								</Information>
							</Informations2>
							<ReturnValue>
								<OnFailure>
									<Type>Error</Type>
									<Value>Failed to send FSoE frame!</Value>
									<Id>256</Id>
								</OnFailure>
							</ReturnValue>
						</TestStep>
						<TestStep Name="CheckReceivedSlaveFrame">
							<Action>
								<CallFunction>
									<Reference>CHECK_RESET_FAIL</Reference>
								</CallFunction>
							</Action>
							<ReturnValue>
								<OnSuccess>
									<Type>Success</Type>
									<Value Param0="c_CommFaultReason">Expected CommFaultReason ({0}) received</Value>
								</OnSuccess>
							</ReturnValue>
						</TestStep>
					</TestSteps>
				</TestCase>
				<TestCase Name="#5.32 Data_Fail3" CaseId="36">
					<Comment>Reset-Kommando vom Master mit falscher CRC(+1)</Comment>
					<CaseVariables>
						<Variable>
							<Name>c_CommFaultReason</Name>
							<Type>Byte</Type>
						</Variable>
						<Variable>
							<Name>c_tmpByte</Name>
							<Type>Byte</Type>
						</Variable>
						<Variable>
							<Name>c_tmpCommFaultReason</Name>
							<Type>Byte</Type>
						</Variable>
						<Variable>
							<Name>c_safeData[SafeDataLength]</Name>
							<Type>ArrayOfBytes</Type>
						</Variable>
					</CaseVariables>
					<TestSteps>
						<TestStep Name="SetVariables">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>c_CommFaultReason</Destination>
										<Source>INVALID_CRC</Source>
									</SetVariable>
									<SetVariable>
										<Destination>c_tmpByte</Destination>
										<Source>0</Source>
									</SetVariable>
									<SetVariable>
										<Destination>t_masterSessionId</Destination>
										<Source>1</Source>
									</SetVariable>
								</SetVariables>
							</Action>
						</TestStep>
						<TestStep Name="SetConnectionData">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>t_connectionId</Destination>
										<Source>3</Source>
									</SetVariable>
									<SetVariable>
										<Destination DestinationIndex="0">t_connData</Destination>
										<Source>t_connectionId</Source>
									</SetVariable>
									<SetVariable>
										<Destination DestinationIndex="2">t_connData</Destination>
										<Source>ConnData.SlaveAddress</Source>
									</SetVariable>
								</SetVariables>
							</Action>
							<Informations2>
								<Information>
									<Type>Output</Type>
									<Value Param0="t_connectionId" Param1="ConnData.SlaveAddress" Param2="t_connData">ConnectionId: {0} (0x{0:x4}), Slave Address: {1} (0x{1:x4}), Connection Data {2}</Value>
								</Information>
							</Informations2>
						</TestStep>
						<TestStep Name="SetParameterData">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>t_safePara</Destination>
										<Source>SafePara</Source>
									</SetVariable>
									<SetVariable>
										<Destination>t_watchdog</Destination>
										<Source>SafePara.Watchdog</Source>
									</SetVariable>
								</SetVariables>
							</Action>
							<Informations2>
								<Information>
									<Type>Output</Type>
									<Value Param0="t_watchdog" Param1="SafeParaSize" Param2="t_safePara">Watchdog: {0} ms, SafeParaSize: {1}, Safe Parameter {2}</Value>
								</Information>
							</Informations2>
						</TestStep>
						<TestStep Name="GotoData">
							<Action>
								<CallFunction>
									<Reference>RUN_DUT_TO_DATA</Reference>
								</CallFunction>
							</Action>
						</TestStep>
						<TestStep Name="SetMasterFrameData">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>t_masterSeqNo</Destination>
										<Source>1</Source>
									</SetVariable>
									<SetVariable>
										<Destination>LastCrc</Destination>
										<Source>0</Source>
									</SetVariable>
									<SetVariable>
										<Destination>OldMasterCrc</Destination>
										<Source>0</Source>
									</SetVariable>
									<SetVariable>
										<Destination>c_tmpCommFaultReason</Destination>
										<Source>INVALID_CMD</Source>
									</SetVariable>
									<SetVariable>
										<Destination DestinationIndex="0">c_safeData</Destination>
										<Source>c_tmpCommFaultReason</Source>
									</SetVariable>
								</SetVariables>
							</Action>
						</TestStep>
						<TestStep Name="SetLastCrc">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>LastCrc</Destination>
										<Source>t_slaveFrame.Crc0</Source>
									</SetVariable>
								</SetVariables>
							</Action>
						</TestStep>
						<TestStep Name="SetFrame">
							<Informations1>
								<Information>
									<Type>Verbose</Type>
									<Value Param0="c_safeData" Param1="LastCrc" Param2="t_masterSeqNo" Param3="OldMasterCrc" Param4="0">SetFrame(Command Reset, SafeData {0}, LastCrc 0x{1:x4}, ConnectionId 0x{4:x4},  SequenceNo 0x{2:x4}, OldCrc 0x{3:x4}, New false</Value>
								</Information>
							</Informations1>
							<Action>
								<SetFrame Name="t_masterFrame">
									<Command>
										<CommandValue>Reset</CommandValue>
									</Command>
									<SafeData>
										<SafeDataVariable>c_safeData</SafeDataVariable>
									</SafeData>
									<LastCRC>LastCrc</LastCRC>
									<ConnectionID>
										<UshortValue>0</UshortValue>
									</ConnectionID>
									<SequenceNo>t_masterSeqNo</SequenceNo>
									<OldCRC>OldMasterCrc</OldCRC>
									<New>false</New>
								</SetFrame>
							</Action>
						</TestStep>
						<TestStep Name="SetInvalidCrc0">
							<Informations1>
								<Information>
									<Type>Output</Type>
									<Value Param0="t_masterFrame.Crc0">Valid Crc0 = 0x{0:x4}</Value>
								</Information>
							</Informations1>
							<Action>
								<CallFunction>
									<Reference>INCREMENT_CRC_0</Reference>
								</CallFunction>
							</Action>
							<Informations2>
								<Information>
									<Type>Output</Type>
									<Value Param0="t_masterFrame.Crc0">Falsified Crc0 = 0x{0:x4}</Value>
								</Information>
							</Informations2>
						</TestStep>
						<TestStep Name="SendFrame">
							<Action>
								<SendFrame Name="t_masterFrame"/>
							</Action>
							<Informations2>
								<Information>
									<Type>Verbose</Type>
									<Value Param0="t_masterFrame.FrameData">Master Frame: {0}</Value>
								</Information>
							</Informations2>
							<ReturnValue>
								<OnFailure>
									<Type>Error</Type>
									<Value>Failed to send FSoE frame!</Value>
									<Id>256</Id>
								</OnFailure>
							</ReturnValue>
						</TestStep>
						<TestStep Name="CheckReceivedSlaveFrame">
							<Action>
								<CallFunction>
									<Reference>CHECK_RESET_FAIL</Reference>
								</CallFunction>
							</Action>
							<ReturnValue>
								<OnSuccess>
									<Type>Success</Type>
									<Value Param0="c_CommFaultReason">Expected CommFaultReason ({0}) received</Value>
								</OnSuccess>
							</ReturnValue>
						</TestStep>
					</TestSteps>
				</TestCase>
				<TestCase Name="#5.33 Data_Fail4" CaseId="37">
					<Comment>Rücksetzen der Connection vom Master, aber falsche CRC(+1)</Comment>
					<CaseVariables>
						<Variable>
							<Name>c_CommFaultReason</Name>
							<Type>Byte</Type>
						</Variable>
						<Variable>
							<Name>c_tmpByte</Name>
							<Type>Byte</Type>
						</Variable>
						<Variable>
							<Name>c_tmpCommFaultReason</Name>
							<Type>Byte</Type>
						</Variable>
						<Variable>
							<Name>c_safeData[SafeDataLength]</Name>
							<Type>ArrayOfBytes</Type>
						</Variable>
					</CaseVariables>
					<TestSteps>
						<TestStep Name="SetVariables">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>c_CommFaultReason</Destination>
										<Source>INVALID_CRC</Source>
									</SetVariable>
									<SetVariable>
										<Destination>c_tmpByte</Destination>
										<Source>0</Source>
									</SetVariable>
									<SetVariable>
										<Destination>t_masterSessionId</Destination>
										<Source>1</Source>
									</SetVariable>
								</SetVariables>
							</Action>
						</TestStep>
						<TestStep Name="SetConnectionData">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>t_connectionId</Destination>
										<Source>3</Source>
									</SetVariable>
									<SetVariable>
										<Destination DestinationIndex="0">t_connData</Destination>
										<Source>t_connectionId</Source>
									</SetVariable>
									<SetVariable>
										<Destination DestinationIndex="2">t_connData</Destination>
										<Source>ConnData.SlaveAddress</Source>
									</SetVariable>
								</SetVariables>
							</Action>
							<Informations2>
								<Information>
									<Type>Output</Type>
									<Value Param0="t_connectionId" Param1="ConnData.SlaveAddress" Param2="t_connData">ConnectionId: {0} (0x{0:x4}), Slave Address: {1} (0x{1:x4}), Connection Data {2}</Value>
								</Information>
							</Informations2>
						</TestStep>
						<TestStep Name="SetParameterData">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>t_safePara</Destination>
										<Source>SafePara</Source>
									</SetVariable>
									<SetVariable>
										<Destination>t_watchdog</Destination>
										<Source>SafePara.Watchdog</Source>
									</SetVariable>
								</SetVariables>
							</Action>
							<Informations2>
								<Information>
									<Type>Output</Type>
									<Value Param0="t_watchdog" Param1="SafeParaSize" Param2="t_safePara">Watchdog: {0} ms, SafeParaSize: {1}, Safe Parameter {2}</Value>
								</Information>
							</Informations2>
						</TestStep>
						<TestStep Name="GotoData">
							<Action>
								<CallFunction>
									<Reference>RUN_DUT_TO_DATA</Reference>
								</CallFunction>
							</Action>
						</TestStep>
						<TestStep Name="SetMasterFrameData">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>t_masterSeqNo</Destination>
										<Source>1</Source>
									</SetVariable>
									<SetVariable>
										<Destination>LastCrc</Destination>
										<Source>0</Source>
									</SetVariable>
									<SetVariable>
										<Destination>OldMasterCrc</Destination>
										<Source>0</Source>
									</SetVariable>
									<SetVariable>
										<Destination DestinationIndex="0">c_safeData</Destination>
										<Source>t_masterSessionId</Source>
									</SetVariable>
								</SetVariables>
							</Action>
						</TestStep>
						<TestStep Name="SetFrame">
							<Informations1>
								<Information>
									<Type>Verbose</Type>
									<Value Param0="c_safeData" Param1="LastCrc" Param2="t_masterSeqNo" Param3="OldMasterCrc" Param4="0">SetFrame(Command Session, SafeData {0}, LastCrc 0x{1:x4}, ConnectionId 0x{4:x4},  SequenceNo 0x{2:x4}, OldCrc 0x{3:x4}, New true</Value>
								</Information>
							</Informations1>
							<Action>
								<SetFrame Name="t_masterFrame">
									<Command>
										<CommandValue>Session</CommandValue>
									</Command>
									<SafeData>
										<SafeDataVariable>c_safeData</SafeDataVariable>
									</SafeData>
									<LastCRC>LastCrc</LastCRC>
									<ConnectionID>
										<UshortValue>0</UshortValue>
									</ConnectionID>
									<SequenceNo>t_masterSeqNo</SequenceNo>
									<OldCRC>OldMasterCrc</OldCRC>
									<New>true</New>
								</SetFrame>
							</Action>
						</TestStep>
						<TestStep Name="SetInvalidCrc0">
							<Informations1>
								<Information>
									<Type>Output</Type>
									<Value Param0="t_masterFrame.Crc0">Valid Crc0 = 0x{0:x4}</Value>
								</Information>
							</Informations1>
							<Action>
								<CallFunction>
									<Reference>INCREMENT_CRC_0</Reference>
								</CallFunction>
							</Action>
							<Informations2>
								<Information>
									<Type>Output</Type>
									<Value Param0="t_masterFrame.Crc0">Falsified Crc0 = 0x{0:x4}</Value>
								</Information>
							</Informations2>
						</TestStep>
						<TestStep Name="SendFrame">
							<Action>
								<SendFrame Name="t_masterFrame"/>
							</Action>
							<Informations2>
								<Information>
									<Type>Verbose</Type>
									<Value Param0="t_masterFrame.FrameData">Master Frame: {0}</Value>
								</Information>
							</Informations2>
							<ReturnValue>
								<OnFailure>
									<Type>Error</Type>
									<Value>Failed to send FSoE frame!</Value>
									<Id>256</Id>
								</OnFailure>
							</ReturnValue>
						</TestStep>
						<TestStep Name="CheckReceivedSlaveFrame">
							<Action>
								<CallFunction>
									<Reference>CHECK_RESET_FAIL</Reference>
								</CallFunction>
							</Action>
							<ReturnValue>
								<OnSuccess>
									<Type>Success</Type>
									<Value Param0="c_CommFaultReason">Expected CommFaultReason ({0}) received</Value>
								</OnSuccess>
							</ReturnValue>
						</TestStep>
					</TestSteps>
				</TestCase>
				<TestCase Name="#5.34 Data_Fail5" CaseId="38">
					<Comment>Falsches Kommando(Connection), mit SafeOutputs</Comment>
					<CaseVariables>
						<Variable>
							<Name>c_CommFaultReason</Name>
							<Type>Byte</Type>
						</Variable>
						<Variable>
							<Name>c_tmpByte</Name>
							<Type>Byte</Type>
						</Variable>
						<Variable>
							<Name>c_cmd</Name>
							<Type>Byte</Type>
						</Variable>
						<Variable>
							<Name>c_bytesToBeSent</Name>
							<Type>Int32</Type>
						</Variable>
						<Variable>
							<Name>c_safeData[SafeDataLength]</Name>
							<Type>ArrayOfBytes</Type>
						</Variable>
					</CaseVariables>
					<TestSteps>
						<TestStep Name="SetVariables">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>c_CommFaultReason</Destination>
										<Source>INVALID_CMD</Source>
									</SetVariable>
									<SetVariable>
										<Destination>c_tmpByte</Destination>
										<Source>0</Source>
									</SetVariable>
									<SetVariable>
										<Destination>t_masterSessionId</Destination>
										<Source>1</Source>
									</SetVariable>
								</SetVariables>
							</Action>
						</TestStep>
						<TestStep Name="SetConnectionData">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>t_connectionId</Destination>
										<Source>3</Source>
									</SetVariable>
									<SetVariable>
										<Destination DestinationIndex="0">t_connData</Destination>
										<Source>t_connectionId</Source>
									</SetVariable>
									<SetVariable>
										<Destination DestinationIndex="2">t_connData</Destination>
										<Source>ConnData.SlaveAddress</Source>
									</SetVariable>
								</SetVariables>
							</Action>
							<Informations2>
								<Information>
									<Type>Output</Type>
									<Value Param0="t_connectionId" Param1="ConnData.SlaveAddress" Param2="t_connData">ConnectionId: {0} (0x{0:x4}), Slave Address: {1} (0x{1:x4}), Connection Data {2}</Value>
								</Information>
							</Informations2>
						</TestStep>
						<TestStep Name="SetParameterData">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>t_safePara</Destination>
										<Source>SafePara</Source>
									</SetVariable>
									<SetVariable>
										<Destination>t_watchdog</Destination>
										<Source>SafePara.Watchdog</Source>
									</SetVariable>
								</SetVariables>
							</Action>
							<Informations2>
								<Information>
									<Type>Output</Type>
									<Value Param0="t_watchdog" Param1="SafeParaSize" Param2="t_safePara">Watchdog: {0} ms, SafeParaSize: {1}, Safe Parameter {2}</Value>
								</Information>
							</Informations2>
						</TestStep>
						<TestStep Name="GotoData">
							<Action>
								<CallFunction>
									<Reference>RUN_DUT_TO_DATA</Reference>
								</CallFunction>
							</Action>
						</TestStep>
						<TestStep Name="SetMasterFrameData">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>c_cmd</Destination>
										<Source>Connection</Source>
									</SetVariable>
									<SetVariable>
										<Destination>LastCrc</Destination>
										<Source>t_slaveFrame.Crc0</Source>
									</SetVariable>
									<SetVariable>
										<Destination>c_safeData</Destination>
										<Source>SafeOutputs</Source>
									</SetVariable>
									<SetVariable>
										<Destination>c_bytesToBeSent</Destination>
										<Source>SafeDataLength</Source>
									</SetVariable>
								</SetVariables>
							</Action>
							<Informations2>
								<Information>
									<Type>Output</Type>
									<Value Param0="c_cmd">Set invalid Command 0x{0:x2}</Value>
								</Information>
							</Informations2>
						</TestStep>
						<TestStep Name="CallInvalidParameterOk">
							<Action>
								<CallFunction>
									<Reference>SEND_MASTER_FRAME</Reference>
								</CallFunction>
							</Action>
						</TestStep>
						<TestStep Name="CheckReceivedSlaveFrame">
							<Action>
								<CallFunction>
									<Reference>CHECK_RESET_FAIL</Reference>
								</CallFunction>
							</Action>
							<ReturnValue>
								<OnSuccess>
									<Type>Success</Type>
									<Value Param0="c_CommFaultReason">Expected CommFaultReason ({0}) received</Value>
								</OnSuccess>
							</ReturnValue>
						</TestStep>
					</TestSteps>
				</TestCase>
				<TestCase Name="#5.35 Data_Fail5" CaseId="39">
					<Comment>Falsches Kommando(Connection), ConnectionData</Comment>
					<CaseVariables>
						<Variable>
							<Name>c_CommFaultReason</Name>
							<Type>Byte</Type>
						</Variable>
						<Variable>
							<Name>c_tmpByte</Name>
							<Type>Byte</Type>
						</Variable>
						<Variable>
							<Name>c_cmd</Name>
							<Type>Byte</Type>
						</Variable>
						<Variable>
							<Name>c_bytesToBeSent</Name>
							<Type>Int32</Type>
						</Variable>
						<Variable>
							<Name>c_safeData[SafeDataLength]</Name>
							<Type>ArrayOfBytes</Type>
						</Variable>
					</CaseVariables>
					<TestSteps>
						<TestStep Name="SetVariables">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>c_CommFaultReason</Destination>
										<Source>INVALID_CMD</Source>
									</SetVariable>
									<SetVariable>
										<Destination>c_tmpByte</Destination>
										<Source>0</Source>
									</SetVariable>
									<SetVariable>
										<Destination>t_masterSessionId</Destination>
										<Source>1</Source>
									</SetVariable>
								</SetVariables>
							</Action>
						</TestStep>
						<TestStep Name="SetConnectionData">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>t_connectionId</Destination>
										<Source>3</Source>
									</SetVariable>
									<SetVariable>
										<Destination DestinationIndex="0">t_connData</Destination>
										<Source>t_connectionId</Source>
									</SetVariable>
									<SetVariable>
										<Destination DestinationIndex="2">t_connData</Destination>
										<Source>ConnData.SlaveAddress</Source>
									</SetVariable>
								</SetVariables>
							</Action>
							<Informations2>
								<Information>
									<Type>Output</Type>
									<Value Param0="t_connectionId" Param1="ConnData.SlaveAddress" Param2="t_connData">ConnectionId: {0} (0x{0:x4}), Slave Address: {1} (0x{1:x4}), Connection Data {2}</Value>
								</Information>
							</Informations2>
						</TestStep>
						<TestStep Name="SetParameterData">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>t_safePara</Destination>
										<Source>SafePara</Source>
									</SetVariable>
									<SetVariable>
										<Destination>t_watchdog</Destination>
										<Source>SafePara.Watchdog</Source>
									</SetVariable>
								</SetVariables>
							</Action>
							<Informations2>
								<Information>
									<Type>Output</Type>
									<Value Param0="t_watchdog" Param1="SafeParaSize" Param2="t_safePara">Watchdog: {0} ms, SafeParaSize: {1}, Safe Parameter {2}</Value>
								</Information>
							</Informations2>
						</TestStep>
						<TestStep Name="GotoData">
							<Action>
								<CallFunction>
									<Reference>RUN_DUT_TO_DATA</Reference>
								</CallFunction>
							</Action>
						</TestStep>
						<TestStep Name="SetMasterFrameData">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>c_cmd</Destination>
										<Source>Connection</Source>
									</SetVariable>
									<SetVariable>
										<Destination>LastCrc</Destination>
										<Source>t_slaveFrame.Crc0</Source>
									</SetVariable>
									<SetVariable>
										<Destination>c_bytesToBeSent</Destination>
										<Source>4</Source>
									</SetVariable>
									<SetVariable>
										<Destination>c_safeData</Destination>
										<Source>t_connData</Source>
									</SetVariable>
								</SetVariables>
							</Action>
							<Informations2>
								<Information>
									<Type>Output</Type>
									<Value Param0="c_cmd">Set invalid Command 0x{0:x2}</Value>
								</Information>
							</Informations2>
						</TestStep>
						<TestStep Name="CallInvalidConnectionOk">
							<Action>
								<CallFunction>
									<Reference>SEND_MASTER_FRAME</Reference>
								</CallFunction>
							</Action>
						</TestStep>
						<TestStep Name="CheckReceivedSlaveFrame">
							<Action>
								<CallFunction>
									<Reference>CHECK_RESET_FAIL</Reference>
								</CallFunction>
							</Action>
							<ReturnValue>
								<OnSuccess>
									<Type>Success</Type>
									<Value Param0="c_CommFaultReason">Expected CommFaultReason ({0}) received</Value>
								</OnSuccess>
							</ReturnValue>
						</TestStep>
					</TestSteps>
				</TestCase>
				<TestCase Name="#5.36 Data_Fail5" CaseId="40">
					<Comment>Falsches Kommando(Parameter), mit SafeOutputs</Comment>
					<CaseVariables>
						<Variable>
							<Name>c_CommFaultReason</Name>
							<Type>Byte</Type>
						</Variable>
						<Variable>
							<Name>c_tmpByte</Name>
							<Type>Byte</Type>
						</Variable>
						<Variable>
							<Name>c_cmd</Name>
							<Type>Byte</Type>
						</Variable>
						<Variable>
							<Name>c_bytesToBeSent</Name>
							<Type>Int32</Type>
						</Variable>
						<Variable>
							<Name>c_safeData[SafeDataLength]</Name>
							<Type>ArrayOfBytes</Type>
						</Variable>
					</CaseVariables>
					<TestSteps>
						<TestStep Name="SetVariables">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>c_CommFaultReason</Destination>
										<Source>INVALID_CMD</Source>
									</SetVariable>
									<SetVariable>
										<Destination>c_tmpByte</Destination>
										<Source>0</Source>
									</SetVariable>
									<SetVariable>
										<Destination>t_masterSessionId</Destination>
										<Source>1</Source>
									</SetVariable>
								</SetVariables>
							</Action>
						</TestStep>
						<TestStep Name="SetConnectionData">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>t_connectionId</Destination>
										<Source>3</Source>
									</SetVariable>
									<SetVariable>
										<Destination DestinationIndex="0">t_connData</Destination>
										<Source>t_connectionId</Source>
									</SetVariable>
									<SetVariable>
										<Destination DestinationIndex="2">t_connData</Destination>
										<Source>ConnData.SlaveAddress</Source>
									</SetVariable>
								</SetVariables>
							</Action>
							<Informations2>
								<Information>
									<Type>Output</Type>
									<Value Param0="t_connectionId" Param1="ConnData.SlaveAddress" Param2="t_connData">ConnectionId: {0} (0x{0:x4}), Slave Address: {1} (0x{1:x4}), Connection Data {2}</Value>
								</Information>
							</Informations2>
						</TestStep>
						<TestStep Name="SetParameterData">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>t_safePara</Destination>
										<Source>SafePara</Source>
									</SetVariable>
									<SetVariable>
										<Destination>t_watchdog</Destination>
										<Source>SafePara.Watchdog</Source>
									</SetVariable>
								</SetVariables>
							</Action>
							<Informations2>
								<Information>
									<Type>Output</Type>
									<Value Param0="t_watchdog" Param1="SafeParaSize" Param2="t_safePara">Watchdog: {0} ms, SafeParaSize: {1}, Safe Parameter {2}</Value>
								</Information>
							</Informations2>
						</TestStep>
						<TestStep Name="GotoData">
							<Action>
								<CallFunction>
									<Reference>RUN_DUT_TO_DATA</Reference>
								</CallFunction>
							</Action>
						</TestStep>
						<TestStep Name="SetMasterFrameData">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>c_cmd</Destination>
										<Source>Parameter</Source>
									</SetVariable>
									<SetVariable>
										<Destination>LastCrc</Destination>
										<Source>t_slaveFrame.Crc0</Source>
									</SetVariable>
									<SetVariable>
										<Destination>c_safeData</Destination>
										<Source>SafeOutputs</Source>
									</SetVariable>
									<SetVariable>
										<Destination>c_bytesToBeSent</Destination>
										<Source>SafeDataLength</Source>
									</SetVariable>
								</SetVariables>
							</Action>
							<Informations2>
								<Information>
									<Type>Output</Type>
									<Value Param0="c_cmd">Set invalid Command 0x{0:x2}</Value>
								</Information>
							</Informations2>
						</TestStep>
						<TestStep Name="CallInvalidParameterOk">
							<Action>
								<CallFunction>
									<Reference>SEND_MASTER_FRAME</Reference>
								</CallFunction>
							</Action>
						</TestStep>
						<TestStep Name="CheckReceivedSlaveFrame">
							<Action>
								<CallFunction>
									<Reference>CHECK_RESET_FAIL</Reference>
								</CallFunction>
							</Action>
							<ReturnValue>
								<OnSuccess>
									<Type>Success</Type>
									<Value Param0="c_CommFaultReason">Expected CommFaultReason ({0}) received</Value>
								</OnSuccess>
							</ReturnValue>
						</TestStep>
					</TestSteps>
				</TestCase>
				<TestCase Name="#5.37 Data_Fail5" CaseId="41">
					<Comment>Falsches Kommando(Parameter), SafePara</Comment>
					<CaseVariables>
						<Variable>
							<Name>c_CommFaultReason</Name>
							<Type>Byte</Type>
						</Variable>
						<Variable>
							<Name>c_tmpByte</Name>
							<Type>Byte</Type>
						</Variable>
						<Variable>
							<Name>c_cmd</Name>
							<Type>Byte</Type>
						</Variable>
						<Variable>
							<Name>c_bytesToBeSent</Name>
							<Type>Int32</Type>
						</Variable>
						<Variable>
							<Name>c_safeData[SafeDataLength]</Name>
							<Type>ArrayOfBytes</Type>
						</Variable>
					</CaseVariables>
					<TestSteps>
						<TestStep Name="SetVariables">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>c_CommFaultReason</Destination>
										<Source>INVALID_CMD</Source>
									</SetVariable>
									<SetVariable>
										<Destination>c_tmpByte</Destination>
										<Source>0</Source>
									</SetVariable>
									<SetVariable>
										<Destination>t_masterSessionId</Destination>
										<Source>1</Source>
									</SetVariable>
								</SetVariables>
							</Action>
						</TestStep>
						<TestStep Name="SetConnectionData">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>t_connectionId</Destination>
										<Source>3</Source>
									</SetVariable>
									<SetVariable>
										<Destination DestinationIndex="0">t_connData</Destination>
										<Source>t_connectionId</Source>
									</SetVariable>
									<SetVariable>
										<Destination DestinationIndex="2">t_connData</Destination>
										<Source>ConnData.SlaveAddress</Source>
									</SetVariable>
								</SetVariables>
							</Action>
							<Informations2>
								<Information>
									<Type>Output</Type>
									<Value Param0="t_connectionId" Param1="ConnData.SlaveAddress" Param2="t_connData">ConnectionId: {0} (0x{0:x4}), Slave Address: {1} (0x{1:x4}), Connection Data {2}</Value>
								</Information>
							</Informations2>
						</TestStep>
						<TestStep Name="SetParameterData">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>t_safePara</Destination>
										<Source>SafePara</Source>
									</SetVariable>
									<SetVariable>
										<Destination>t_watchdog</Destination>
										<Source>SafePara.Watchdog</Source>
									</SetVariable>
								</SetVariables>
							</Action>
							<Informations2>
								<Information>
									<Type>Output</Type>
									<Value Param0="t_watchdog" Param1="SafeParaSize" Param2="t_safePara">Watchdog: {0} ms, SafeParaSize: {1}, Safe Parameter {2}</Value>
								</Information>
							</Informations2>
						</TestStep>
						<TestStep Name="GotoData">
							<Action>
								<CallFunction>
									<Reference>RUN_DUT_TO_DATA</Reference>
								</CallFunction>
							</Action>
						</TestStep>
						<TestStep Name="SetMasterFrameData">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>c_cmd</Destination>
										<Source>Parameter</Source>
									</SetVariable>
									<SetVariable>
										<Destination>LastCrc</Destination>
										<Source>t_slaveFrame.Crc0</Source>
									</SetVariable>
									<SetVariable>
										<Destination>c_bytesToBeSent</Destination>
										<Source>SafeDataLength</Source>
									</SetVariable>
									<SetVariable>
										<Destination>c_safeData</Destination>
										<Source>t_safePara</Source>
									</SetVariable>
								</SetVariables>
							</Action>
							<Informations2>
								<Information>
									<Type>Output</Type>
									<Value Param0="c_cmd">Set invalid Command 0x{0:x2}</Value>
								</Information>
							</Informations2>
						</TestStep>
						<TestStep Name="CallInvalidConnectionOk">
							<Action>
								<CallFunction>
									<Reference>SEND_MASTER_FRAME</Reference>
								</CallFunction>
							</Action>
						</TestStep>
						<TestStep Name="CheckReceivedSlaveFrame">
							<Action>
								<CallFunction>
									<Reference>CHECK_RESET_FAIL</Reference>
								</CallFunction>
							</Action>
							<ReturnValue>
								<OnSuccess>
									<Type>Success</Type>
									<Value Param0="c_CommFaultReason">Expected CommFaultReason ({0}) received</Value>
								</OnSuccess>
							</ReturnValue>
						</TestStep>
					</TestSteps>
				</TestCase>
				<TestCase Name="#5.38 Data_Fail6" CaseId="42">
					<Comment>Unbekanntes Kommando(0x00), mit SafeOutputs</Comment>
					<CaseVariables>
						<Variable>
							<Name>c_CommFaultReason</Name>
							<Type>Byte</Type>
						</Variable>
						<Variable>
							<Name>c_tmpByte</Name>
							<Type>Byte</Type>
						</Variable>
						<Variable>
							<Name>c_cmd</Name>
							<Type>Byte</Type>
						</Variable>
						<Variable>
							<Name>c_bytesToBeSent</Name>
							<Type>Int32</Type>
						</Variable>
						<Variable>
							<Name>c_safeData[SafeDataLength]</Name>
							<Type>ArrayOfBytes</Type>
						</Variable>
					</CaseVariables>
					<TestSteps>
						<TestStep Name="SetVariables">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>c_CommFaultReason</Destination>
										<Source>UNKNOWN_CMD</Source>
									</SetVariable>
									<SetVariable>
										<Destination>c_tmpByte</Destination>
										<Source>0</Source>
									</SetVariable>
									<SetVariable>
										<Destination>t_masterSessionId</Destination>
										<Source>1</Source>
									</SetVariable>
								</SetVariables>
							</Action>
						</TestStep>
						<TestStep Name="SetConnectionData">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>t_connectionId</Destination>
										<Source>3</Source>
									</SetVariable>
									<SetVariable>
										<Destination DestinationIndex="0">t_connData</Destination>
										<Source>t_connectionId</Source>
									</SetVariable>
									<SetVariable>
										<Destination DestinationIndex="2">t_connData</Destination>
										<Source>ConnData.SlaveAddress</Source>
									</SetVariable>
								</SetVariables>
							</Action>
							<Informations2>
								<Information>
									<Type>Output</Type>
									<Value Param0="t_connectionId" Param1="ConnData.SlaveAddress" Param2="t_connData">ConnectionId: {0} (0x{0:x4}), Slave Address: {1} (0x{1:x4}), Connection Data {2}</Value>
								</Information>
							</Informations2>
						</TestStep>
						<TestStep Name="SetParameterData">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>t_safePara</Destination>
										<Source>SafePara</Source>
									</SetVariable>
									<SetVariable>
										<Destination>t_watchdog</Destination>
										<Source>SafePara.Watchdog</Source>
									</SetVariable>
								</SetVariables>
							</Action>
							<Informations2>
								<Information>
									<Type>Output</Type>
									<Value Param0="t_watchdog" Param1="SafeParaSize" Param2="t_safePara">Watchdog: {0} ms, SafeParaSize: {1}, Safe Parameter {2}</Value>
								</Information>
							</Informations2>
						</TestStep>
						<TestStep Name="GotoData">
							<Action>
								<CallFunction>
									<Reference>RUN_DUT_TO_DATA</Reference>
								</CallFunction>
							</Action>
						</TestStep>
						<TestStep Name="SetMasterFrameData">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>c_cmd</Destination>
										<Source>0</Source>
									</SetVariable>
									<SetVariable>
										<Destination>LastCrc</Destination>
										<Source>t_slaveFrame.Crc0</Source>
									</SetVariable>
									<SetVariable>
										<Destination>c_safeData</Destination>
										<Source>SafeOutputs</Source>
									</SetVariable>
									<SetVariable>
										<Destination>c_bytesToBeSent</Destination>
										<Source>SafeDataLength</Source>
									</SetVariable>
								</SetVariables>
							</Action>
							<Informations2>
								<Information>
									<Type>Output</Type>
									<Value Param0="c_cmd">Set invalid Command 0x{0:x2}</Value>
								</Information>
							</Informations2>
						</TestStep>
						<TestStep Name="CallInvalidParameterOk">
							<Action>
								<CallFunction>
									<Reference>SEND_MASTER_FRAME</Reference>
								</CallFunction>
							</Action>
						</TestStep>
						<TestStep Name="CheckReceivedSlaveFrame">
							<Action>
								<CallFunction>
									<Reference>CHECK_RESET_FAIL</Reference>
								</CallFunction>
							</Action>
							<ReturnValue>
								<OnSuccess>
									<Type>Success</Type>
									<Value Param0="c_CommFaultReason">Expected CommFaultReason ({0}) received</Value>
								</OnSuccess>
							</ReturnValue>
						</TestStep>
					</TestSteps>
				</TestCase>
				<TestCase Name="#5.39 Data_Fail6" CaseId="43">
					<Comment>Unbekanntes Kommando(0x2b), mit SafeOutputs</Comment>
					<CaseVariables>
						<Variable>
							<Name>c_CommFaultReason</Name>
							<Type>Byte</Type>
						</Variable>
						<Variable>
							<Name>c_tmpByte</Name>
							<Type>Byte</Type>
						</Variable>
						<Variable>
							<Name>c_cmd</Name>
							<Type>Byte</Type>
						</Variable>
						<Variable>
							<Name>c_bytesToBeSent</Name>
							<Type>Int32</Type>
						</Variable>
						<Variable>
							<Name>c_safeData[SafeDataLength]</Name>
							<Type>ArrayOfBytes</Type>
						</Variable>
					</CaseVariables>
					<TestSteps>
						<TestStep Name="SetVariables">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>c_CommFaultReason</Destination>
										<Source>UNKNOWN_CMD</Source>
									</SetVariable>
									<SetVariable>
										<Destination>c_tmpByte</Destination>
										<Source>0</Source>
									</SetVariable>
									<SetVariable>
										<Destination>t_masterSessionId</Destination>
										<Source>1</Source>
									</SetVariable>
								</SetVariables>
							</Action>
						</TestStep>
						<TestStep Name="SetConnectionData">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>t_connectionId</Destination>
										<Source>3</Source>
									</SetVariable>
									<SetVariable>
										<Destination DestinationIndex="0">t_connData</Destination>
										<Source>t_connectionId</Source>
									</SetVariable>
									<SetVariable>
										<Destination DestinationIndex="2">t_connData</Destination>
										<Source>ConnData.SlaveAddress</Source>
									</SetVariable>
								</SetVariables>
							</Action>
							<Informations2>
								<Information>
									<Type>Output</Type>
									<Value Param0="t_connectionId" Param1="ConnData.SlaveAddress" Param2="t_connData">ConnectionId: {0} (0x{0:x4}), Slave Address: {1} (0x{1:x4}), Connection Data {2}</Value>
								</Information>
							</Informations2>
						</TestStep>
						<TestStep Name="SetParameterData">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>t_safePara</Destination>
										<Source>SafePara</Source>
									</SetVariable>
									<SetVariable>
										<Destination>t_watchdog</Destination>
										<Source>SafePara.Watchdog</Source>
									</SetVariable>
								</SetVariables>
							</Action>
							<Informations2>
								<Information>
									<Type>Output</Type>
									<Value Param0="t_watchdog" Param1="SafeParaSize" Param2="t_safePara">Watchdog: {0} ms, SafeParaSize: {1}, Safe Parameter {2}</Value>
								</Information>
							</Informations2>
						</TestStep>
						<TestStep Name="GotoData">
							<Action>
								<CallFunction>
									<Reference>RUN_DUT_TO_DATA</Reference>
								</CallFunction>
							</Action>
						</TestStep>
						<TestStep Name="SetMasterFrameData">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>c_cmd</Destination>
										<Source>43</Source>
									</SetVariable>
									<SetVariable>
										<Destination>LastCrc</Destination>
										<Source>t_slaveFrame.Crc0</Source>
									</SetVariable>
									<SetVariable>
										<Destination>c_safeData</Destination>
										<Source>SafeOutputs</Source>
									</SetVariable>
									<SetVariable>
										<Destination>c_bytesToBeSent</Destination>
										<Source>SafeDataLength</Source>
									</SetVariable>
								</SetVariables>
							</Action>
							<Informations2>
								<Information>
									<Type>Output</Type>
									<Value Param0="c_cmd">Set invalid Command 0x{0:x2}</Value>
								</Information>
							</Informations2>
						</TestStep>
						<TestStep Name="CallInvalidParameterOk">
							<Action>
								<CallFunction>
									<Reference>SEND_MASTER_FRAME</Reference>
								</CallFunction>
							</Action>
						</TestStep>
						<TestStep Name="CheckReceivedSlaveFrame">
							<Action>
								<CallFunction>
									<Reference>CHECK_RESET_FAIL</Reference>
								</CallFunction>
							</Action>
							<ReturnValue>
								<OnSuccess>
									<Type>Success</Type>
									<Value Param0="c_CommFaultReason">Expected CommFaultReason ({0}) received</Value>
								</OnSuccess>
							</ReturnValue>
						</TestStep>
					</TestSteps>
				</TestCase>
				<TestCase Name="#5.40 Data_Fail6" CaseId="44">
					<Comment>Unbekanntes Kommando(0x37), mit SafeOutputs</Comment>
					<CaseVariables>
						<Variable>
							<Name>c_CommFaultReason</Name>
							<Type>Byte</Type>
						</Variable>
						<Variable>
							<Name>c_tmpByte</Name>
							<Type>Byte</Type>
						</Variable>
						<Variable>
							<Name>c_cmd</Name>
							<Type>Byte</Type>
						</Variable>
						<Variable>
							<Name>c_bytesToBeSent</Name>
							<Type>Int32</Type>
						</Variable>
						<Variable>
							<Name>c_safeData[SafeDataLength]</Name>
							<Type>ArrayOfBytes</Type>
						</Variable>
					</CaseVariables>
					<TestSteps>
						<TestStep Name="SetVariables">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>c_CommFaultReason</Destination>
										<Source>UNKNOWN_CMD</Source>
									</SetVariable>
									<SetVariable>
										<Destination>c_tmpByte</Destination>
										<Source>0</Source>
									</SetVariable>
									<SetVariable>
										<Destination>t_masterSessionId</Destination>
										<Source>1</Source>
									</SetVariable>
								</SetVariables>
							</Action>
						</TestStep>
						<TestStep Name="SetConnectionData">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>t_connectionId</Destination>
										<Source>3</Source>
									</SetVariable>
									<SetVariable>
										<Destination DestinationIndex="0">t_connData</Destination>
										<Source>t_connectionId</Source>
									</SetVariable>
									<SetVariable>
										<Destination DestinationIndex="2">t_connData</Destination>
										<Source>ConnData.SlaveAddress</Source>
									</SetVariable>
								</SetVariables>
							</Action>
							<Informations2>
								<Information>
									<Type>Output</Type>
									<Value Param0="t_connectionId" Param1="ConnData.SlaveAddress" Param2="t_connData">ConnectionId: {0} (0x{0:x4}), Slave Address: {1} (0x{1:x4}), Connection Data {2}</Value>
								</Information>
							</Informations2>
						</TestStep>
						<TestStep Name="SetParameterData">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>t_safePara</Destination>
										<Source>SafePara</Source>
									</SetVariable>
									<SetVariable>
										<Destination>t_watchdog</Destination>
										<Source>SafePara.Watchdog</Source>
									</SetVariable>
								</SetVariables>
							</Action>
							<Informations2>
								<Information>
									<Type>Output</Type>
									<Value Param0="t_watchdog" Param1="SafeParaSize" Param2="t_safePara">Watchdog: {0} ms, SafeParaSize: {1}, Safe Parameter {2}</Value>
								</Information>
							</Informations2>
						</TestStep>
						<TestStep Name="GotoData">
							<Action>
								<CallFunction>
									<Reference>RUN_DUT_TO_DATA</Reference>
								</CallFunction>
							</Action>
						</TestStep>
						<TestStep Name="SetMasterFrameData">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>c_cmd</Destination>
										<Source>55</Source>
									</SetVariable>
									<SetVariable>
										<Destination>LastCrc</Destination>
										<Source>t_slaveFrame.Crc0</Source>
									</SetVariable>
									<SetVariable>
										<Destination>c_safeData</Destination>
										<Source>SafeOutputs</Source>
									</SetVariable>
									<SetVariable>
										<Destination>c_bytesToBeSent</Destination>
										<Source>SafeDataLength</Source>
									</SetVariable>
								</SetVariables>
							</Action>
							<Informations2>
								<Information>
									<Type>Output</Type>
									<Value Param0="c_cmd">Set invalid Command 0x{0:x2}</Value>
								</Information>
							</Informations2>
						</TestStep>
						<TestStep Name="CallInvalidParameterOk">
							<Action>
								<CallFunction>
									<Reference>SEND_MASTER_FRAME</Reference>
								</CallFunction>
							</Action>
						</TestStep>
						<TestStep Name="CheckReceivedSlaveFrame">
							<Action>
								<CallFunction>
									<Reference>CHECK_RESET_FAIL</Reference>
								</CallFunction>
							</Action>
							<ReturnValue>
								<OnSuccess>
									<Type>Success</Type>
									<Value Param0="c_CommFaultReason">Expected CommFaultReason ({0}) received</Value>
								</OnSuccess>
							</ReturnValue>
						</TestStep>
					</TestSteps>
				</TestCase>
				<TestCase Name="#5.41 Data_Fail6" CaseId="45">
					<Comment>Unbekanntes Kommando(0x95), mit SafeOutputs</Comment>
					<CaseVariables>
						<Variable>
							<Name>c_CommFaultReason</Name>
							<Type>Byte</Type>
						</Variable>
						<Variable>
							<Name>c_tmpByte</Name>
							<Type>Byte</Type>
						</Variable>
						<Variable>
							<Name>c_cmd</Name>
							<Type>Byte</Type>
						</Variable>
						<Variable>
							<Name>c_bytesToBeSent</Name>
							<Type>Int32</Type>
						</Variable>
						<Variable>
							<Name>c_safeData[SafeDataLength]</Name>
							<Type>ArrayOfBytes</Type>
						</Variable>
					</CaseVariables>
					<TestSteps>
						<TestStep Name="SetVariables">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>c_CommFaultReason</Destination>
										<Source>UNKNOWN_CMD</Source>
									</SetVariable>
									<SetVariable>
										<Destination>c_tmpByte</Destination>
										<Source>0</Source>
									</SetVariable>
									<SetVariable>
										<Destination>t_masterSessionId</Destination>
										<Source>1</Source>
									</SetVariable>
								</SetVariables>
							</Action>
						</TestStep>
						<TestStep Name="SetConnectionData">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>t_connectionId</Destination>
										<Source>3</Source>
									</SetVariable>
									<SetVariable>
										<Destination DestinationIndex="0">t_connData</Destination>
										<Source>t_connectionId</Source>
									</SetVariable>
									<SetVariable>
										<Destination DestinationIndex="2">t_connData</Destination>
										<Source>ConnData.SlaveAddress</Source>
									</SetVariable>
								</SetVariables>
							</Action>
							<Informations2>
								<Information>
									<Type>Output</Type>
									<Value Param0="t_connectionId" Param1="ConnData.SlaveAddress" Param2="t_connData">ConnectionId: {0} (0x{0:x4}), Slave Address: {1} (0x{1:x4}), Connection Data {2}</Value>
								</Information>
							</Informations2>
						</TestStep>
						<TestStep Name="SetParameterData">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>t_safePara</Destination>
										<Source>SafePara</Source>
									</SetVariable>
									<SetVariable>
										<Destination>t_watchdog</Destination>
										<Source>SafePara.Watchdog</Source>
									</SetVariable>
								</SetVariables>
							</Action>
							<Informations2>
								<Information>
									<Type>Output</Type>
									<Value Param0="t_watchdog" Param1="SafeParaSize" Param2="t_safePara">Watchdog: {0} ms, SafeParaSize: {1}, Safe Parameter {2}</Value>
								</Information>
							</Informations2>
						</TestStep>
						<TestStep Name="GotoData">
							<Action>
								<CallFunction>
									<Reference>RUN_DUT_TO_DATA</Reference>
								</CallFunction>
							</Action>
						</TestStep>
						<TestStep Name="SetMasterFrameData">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>c_cmd</Destination>
										<Source>149</Source>
									</SetVariable>
									<SetVariable>
										<Destination>LastCrc</Destination>
										<Source>t_slaveFrame.Crc0</Source>
									</SetVariable>
									<SetVariable>
										<Destination>c_safeData</Destination>
										<Source>SafeOutputs</Source>
									</SetVariable>
									<SetVariable>
										<Destination>c_bytesToBeSent</Destination>
										<Source>SafeDataLength</Source>
									</SetVariable>
								</SetVariables>
							</Action>
							<Informations2>
								<Information>
									<Type>Output</Type>
									<Value Param0="c_cmd">Set invalid Command 0x{0:x2}</Value>
								</Information>
							</Informations2>
						</TestStep>
						<TestStep Name="CallInvalidParameterOk">
							<Action>
								<CallFunction>
									<Reference>SEND_MASTER_FRAME</Reference>
								</CallFunction>
							</Action>
						</TestStep>
						<TestStep Name="CheckReceivedSlaveFrame">
							<Action>
								<CallFunction>
									<Reference>CHECK_RESET_FAIL</Reference>
								</CallFunction>
							</Action>
							<ReturnValue>
								<OnSuccess>
									<Type>Success</Type>
									<Value Param0="c_CommFaultReason">Expected CommFaultReason ({0}) received</Value>
								</OnSuccess>
							</ReturnValue>
						</TestStep>
					</TestSteps>
				</TestCase>
				<TestCase Name="#5.42 Data_Fail6" CaseId="46">
					<Comment>Unbekanntes Kommando(0xff), mit SafeOutputs</Comment>
					<CaseVariables>
						<Variable>
							<Name>c_CommFaultReason</Name>
							<Type>Byte</Type>
						</Variable>
						<Variable>
							<Name>c_tmpByte</Name>
							<Type>Byte</Type>
						</Variable>
						<Variable>
							<Name>c_cmd</Name>
							<Type>Byte</Type>
						</Variable>
						<Variable>
							<Name>c_bytesToBeSent</Name>
							<Type>Int32</Type>
						</Variable>
						<Variable>
							<Name>c_safeData[SafeDataLength]</Name>
							<Type>ArrayOfBytes</Type>
						</Variable>
					</CaseVariables>
					<TestSteps>
						<TestStep Name="SetVariables">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>c_CommFaultReason</Destination>
										<Source>UNKNOWN_CMD</Source>
									</SetVariable>
									<SetVariable>
										<Destination>c_tmpByte</Destination>
										<Source>0</Source>
									</SetVariable>
									<SetVariable>
										<Destination>t_masterSessionId</Destination>
										<Source>1</Source>
									</SetVariable>
								</SetVariables>
							</Action>
						</TestStep>
						<TestStep Name="SetConnectionData">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>t_connectionId</Destination>
										<Source>3</Source>
									</SetVariable>
									<SetVariable>
										<Destination DestinationIndex="0">t_connData</Destination>
										<Source>t_connectionId</Source>
									</SetVariable>
									<SetVariable>
										<Destination DestinationIndex="2">t_connData</Destination>
										<Source>ConnData.SlaveAddress</Source>
									</SetVariable>
								</SetVariables>
							</Action>
							<Informations2>
								<Information>
									<Type>Output</Type>
									<Value Param0="t_connectionId" Param1="ConnData.SlaveAddress" Param2="t_connData">ConnectionId: {0} (0x{0:x4}), Slave Address: {1} (0x{1:x4}), Connection Data {2}</Value>
								</Information>
							</Informations2>
						</TestStep>
						<TestStep Name="SetParameterData">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>t_safePara</Destination>
										<Source>SafePara</Source>
									</SetVariable>
									<SetVariable>
										<Destination>t_watchdog</Destination>
										<Source>SafePara.Watchdog</Source>
									</SetVariable>
								</SetVariables>
							</Action>
							<Informations2>
								<Information>
									<Type>Output</Type>
									<Value Param0="t_watchdog" Param1="SafeParaSize" Param2="t_safePara">Watchdog: {0} ms, SafeParaSize: {1}, Safe Parameter {2}</Value>
								</Information>
							</Informations2>
						</TestStep>
						<TestStep Name="GotoData">
							<Action>
								<CallFunction>
									<Reference>RUN_DUT_TO_DATA</Reference>
								</CallFunction>
							</Action>
						</TestStep>
						<TestStep Name="SetMasterFrameData">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>c_cmd</Destination>
										<Source>255</Source>
									</SetVariable>
									<SetVariable>
										<Destination>LastCrc</Destination>
										<Source>t_slaveFrame.Crc0</Source>
									</SetVariable>
									<SetVariable>
										<Destination>c_safeData</Destination>
										<Source>SafeOutputs</Source>
									</SetVariable>
									<SetVariable>
										<Destination>c_bytesToBeSent</Destination>
										<Source>SafeDataLength</Source>
									</SetVariable>
								</SetVariables>
							</Action>
							<Informations2>
								<Information>
									<Type>Output</Type>
									<Value Param0="c_cmd">Set invalid Command 0x{0:x2}</Value>
								</Information>
							</Informations2>
						</TestStep>
						<TestStep Name="CallInvalidParameterOk">
							<Action>
								<CallFunction>
									<Reference>SEND_MASTER_FRAME</Reference>
								</CallFunction>
							</Action>
						</TestStep>
						<TestStep Name="CheckReceivedSlaveFrame">
							<Action>
								<CallFunction>
									<Reference>CHECK_RESET_FAIL</Reference>
								</CallFunction>
							</Action>
							<ReturnValue>
								<OnSuccess>
									<Type>Success</Type>
									<Value Param0="c_CommFaultReason">Expected CommFaultReason ({0}) received</Value>
								</OnSuccess>
							</ReturnValue>
						</TestStep>
					</TestSteps>
				</TestCase>
				<TestCase Name="#5.43 Data_Reset2" CaseId="47">
					<Comment>Rücksetzen der Connection vom Master, nach Session</Comment>
					<CaseVariables>
						<Variable>
							<Name>c_sessionId1_Slave</Name>
							<Type>UInt16</Type>
						</Variable>
						<Variable>
							<Name>c_tmpByte</Name>
							<Type>Byte</Type>
						</Variable>
					</CaseVariables>
					<TestSteps>
						<TestStep Name="SetVariables">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>SecondSessionFrameSent</Destination>
										<Source>false</Source>
									</SetVariable>
									<SetVariable>
										<Destination>t_masterSessionId</Destination>
										<Source>1</Source>
									</SetVariable>
									<SetVariable>
										<Destination>t_expectedConnId</Destination>
										<Source>0</Source>
									</SetVariable>
								</SetVariables>
							</Action>
							<Compares>
								<Compare>
									<Condition>
										<Value1>SafeDataLength</Value1>
										<Operator>NotEqual</Operator>
										<Value2>1</Value2>
									</Condition>
									<Statement>
										<SetVariables>
											<SetVariable>
												<Destination>SecondSessionFrameSent</Destination>
												<Source>true</Source>
											</SetVariable>
										</SetVariables>
									</Statement>
								</Compare>
							</Compares>
						</TestStep>
						<TestStep Name="SetConnectionData">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>t_connectionId</Destination>
										<Source>3</Source>
									</SetVariable>
									<SetVariable>
										<Destination DestinationIndex="0">t_connData</Destination>
										<Source>t_connectionId</Source>
									</SetVariable>
									<SetVariable>
										<Destination DestinationIndex="2">t_connData</Destination>
										<Source>ConnData.SlaveAddress</Source>
									</SetVariable>
								</SetVariables>
							</Action>
							<Informations2>
								<Information>
									<Type>Output</Type>
									<Value Param0="t_connectionId" Param1="ConnData.SlaveAddress" Param2="t_connData">ConnectionId: {0} (0x{0:x4}), Slave Address: {1} (0x{1:x4}), Connection Data {2}</Value>
								</Information>
							</Informations2>
						</TestStep>
						<TestStep Name="SetParameterData">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>t_safePara</Destination>
										<Source>SafePara</Source>
									</SetVariable>
									<SetVariable>
										<Destination>t_watchdog</Destination>
										<Source>SafePara.Watchdog</Source>
									</SetVariable>
								</SetVariables>
							</Action>
							<Informations2>
								<Information>
									<Type>Output</Type>
									<Value Param0="t_watchdog" Param1="SafeParaSize" Param2="t_safePara">Watchdog: {0} ms, SafeParaSize: {1}, Safe Parameter {2}</Value>
								</Information>
							</Informations2>
						</TestStep>
						<TestStep Name="GotoData">
							<Action>
								<CallFunction>
									<Reference>RUN_DUT_TO_DATA</Reference>
								</CallFunction>
							</Action>
						</TestStep>
						<TestStep Name="StoreSlaveSessionId1">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>c_sessionId1_Slave</Destination>
										<Source>t_slaveSessionId</Source>
									</SetVariable>
									<SetVariable>
										<Destination>t_index</Destination>
										<Source>0</Source>
									</SetVariable>
								</SetVariables>
							</Action>
							<Informations2>
								<Information>
									<Type>Output</Type>
									<Value Param0="t_slaveSessionId">Slave SessionId1: 0x{0:x4}</Value>
								</Information>
							</Informations2>
						</TestStep>
						<TestStep Name="ResetSecondSessionFrameSent">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>SecondSessionFrameSent</Destination>
										<Source>false</Source>
									</SetVariable>
								</SetVariables>
							</Action>
							<Compares>
								<Compare>
									<Condition>
										<Value1>SafeDataLength</Value1>
										<Operator>NotEqual</Operator>
										<Value2>1</Value2>
									</Condition>
									<Statement>
										<SetVariables>
											<SetVariable>
												<Destination>SecondSessionFrameSent</Destination>
												<Source>true</Source>
											</SetVariable>
										</SetVariables>
									</Statement>
								</Compare>
							</Compares>
						</TestStep>
						<TestStep Name="SetSessionId">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>t_masterSessionId</Destination>
										<Source>1</Source>
									</SetVariable>
								</SetVariables>
							</Action>
						</TestStep>
						<TestStep Name="CallDataReset2">
							<Action>
								<CallFunction>
									<Reference>DATA_RESET1</Reference>
								</CallFunction>
							</Action>
						</TestStep>
						<TestStep Name="ReceiveEvent">
							<Event>
								<ReceiveFrame>t_slaveFrame</ReceiveFrame>
							</Event>
							<Informations2>
								<Information>
									<Type>Verbose</Type>
									<Value Param0="t_slaveFrame.FrameData">Slave Frame: {0}</Value>
								</Information>
							</Informations2>
						</TestStep>
						<TestStep Name="CheckWatchdog">
							<Event>
								<WatchdogExpired>
									<SetVariables>
										<SetVariable>
											<Destination>t_wdExpired</Destination>
											<Source>true</Source>
										</SetVariable>
									</SetVariables>
								</WatchdogExpired>
							</Event>
							<Compares>
								<Compare>
									<Condition>
										<Value1>t_wdExpired</Value1>
										<Operator>Equal</Operator>
										<Value2>true</Value2>
									</Condition>
									<Statement>
										<SetVariables>
											<SetVariable>
												<Destination>t_wdExpired</Destination>
												<Source>false</Source>
											</SetVariable>
										</SetVariables>
									</Statement>
									<Statement>
										<Return>
											<Type>Error</Type>
											<Value Param0="ElapsedWD">Watchdog expired! {0} ms </Value>
											<Id>5</Id>
										</Return>
									</Statement>
								</Compare>
							</Compares>
						</TestStep>
						<TestStep Name="CheckReceivedCrc">
							<Informations1>
								<Information>
									<Type>Verbose</Type>
									<Value Param0="t_slaveFrame.FrameData" Param1="LastCrc" Param2="t_slaveSeqNo" Param3="t_oldSlaveCrc" Param4="true">IsCrcCorrect(Frame {0}, LastCrc 0x{1:X4}, SeqNo {2}, OldCrc 0x{3:X4}, New {4})</Value>
								</Information>
							</Informations1>
							<Action>
								<IsCrcCorrect ReturnValue="crcCorrect">
									<Frame>t_slaveFrame</Frame>
									<LastCrc>LastCrc</LastCrc>
									<SequenceNo>t_slaveSeqNo</SequenceNo>
									<OldCrc>t_oldSlaveCrc</OldCrc>
									<New>true</New>
								</IsCrcCorrect>
							</Action>
							<ReturnValue>
								<OnFailure>
									<Type>Error</Type>
									<Value Param0="t_slaveFrame.Crc0">Invalid Crc0 reveived ({0:x})</Value>
									<Id>4</Id>
								</OnFailure>
							</ReturnValue>
						</TestStep>
						<TestStep Name="CheckSessionConditions">
							<Compares>
								<Compare>
									<Condition>
										<Value1>t_slaveFrame.ConnId</Value1>
										<Operator>NotEqual</Operator>
										<Value2>t_expectedConnId</Value2>
									</Condition>
									<Statement>
										<Return>
											<Type>Error</Type>
											<Value Param0="t_slaveFrame.ConnId">Invalid ConnId received  {0}, expected 0</Value>
											<Id>3</Id>
										</Return>
									</Statement>
								</Compare>
								<Compare>
									<Condition>
										<Value1>t_slaveFrame.Command</Value1>
										<Operator>Equal</Operator>
										<Value2>Session</Value2>
									</Condition>
									<Condition>
										<Value1>BytesToBeSent</Value1>
										<Operator>Equal</Operator>
										<Value2>0</Value2>
									</Condition>
									<Condition>
										<Value1>crcCorrect</Value1>
										<Operator>Equal</Operator>
										<Value2>true</Value2>
									</Condition>
									<Statement>
										<SetVariables>
											<SetVariable>
												<Destination DestinationIndex="t_index">t_slaveSessionId</Destination>
												<Source>t_slaveFrame.SafeData</Source>
											</SetVariable>
										</SetVariables>
									</Statement>
									<Statement>
										<CallFunction>CHECK_REMAINING_SAFE_DATA_IN_SESSION</CallFunction>
									</Statement>
									<Statement>
										<GotoStep>CompareSlaveSessionIds</GotoStep>
									</Statement>
								</Compare>
								<Compare>
									<Condition>
										<Value1>t_slaveFrame.Command</Value1>
										<Operator>Equal</Operator>
										<Value2>Session</Value2>
									</Condition>
									<Condition>
										<Value1>crcCorrect</Value1>
										<Operator>Equal</Operator>
										<Value2>false</Value2>
									</Condition>
									<Condition>
										<Value1>SecondSessionFrameSent</Value1>
										<Operator>Equal</Operator>
										<Value2>true</Value2>
									</Condition>
									<Statement>
										<Return>
											<Type>Error</Type>
											<Value>Invalid Crc received</Value>
											<Id>4</Id>
										</Return>
									</Statement>
								</Compare>
								<Compare>
									<Condition>
										<Value1>t_slaveFrame.Command</Value1>
										<Operator>Equal</Operator>
										<Value2>Session</Value2>
									</Condition>
									<Condition>
										<Value1>crcCorrect</Value1>
										<Operator>Equal</Operator>
										<Value2>false</Value2>
									</Condition>
									<Condition>
										<Value1>SecondSessionFrameSent</Value1>
										<Operator>Equal</Operator>
										<Value2>false</Value2>
									</Condition>
									<Statement>
										<CallFunction>SESSION_STAY2</CallFunction>
									</Statement>
									<Statement>
										<GotoStep>ReceiveEvent</GotoStep>
									</Statement>
								</Compare>
								<Compare>
									<Condition>
										<Value1>t_slaveFrame.Command</Value1>
										<Operator>Equal</Operator>
										<Value2>Session</Value2>
									</Condition>
									<Condition>
										<Value1>BytesToBeSent</Value1>
										<Operator>NotEqual</Operator>
										<Value2>0</Value2>
									</Condition>
									<Condition>
										<Value1>crcCorrect</Value1>
										<Operator>Equal</Operator>
										<Value2>true</Value2>
									</Condition>
									<Statement>
										<SetVariables>
											<SetVariable>
												<Destination DestinationIndex="t_index">t_slaveSessionId</Destination>
												<Source>t_slaveFrame.SafeData</Source>
											</SetVariable>
										</SetVariables>
									</Statement>
									<Statement>
										<CallFunction>SESSION_STAY1</CallFunction>
									</Statement>
									<Statement>
										<SetVariables>
											<SetVariable>
												<Destination>t_index</Destination>
												<Source>t_index+SafeDataLength</Source>
											</SetVariable>
										</SetVariables>
									</Statement>
									<Statement>
										<CallFunction>CHECK_REMAINING_SAFE_DATA_IN_SESSION</CallFunction>
									</Statement>
									<Statement>
										<GotoStep>ReceiveEvent</GotoStep>
									</Statement>
								</Compare>
								<Compare>
									<Condition>
										<Value1>t_slaveFrame.Command</Value1>
										<Operator>Equal</Operator>
										<Value2>Reset</Value2>
									</Condition>
									<Statement>
										<Return>
											<Type>Error</Type>
											<Value>Invalid CMD(Reset) received</Value>
											<Id>1</Id>
										</Return>
									</Statement>
								</Compare>
								<Compare>
									<Condition>
										<Value1>t_slaveFrame.Command</Value1>
										<Operator>Equal</Operator>
										<Value2>Connection</Value2>
									</Condition>
									<Statement>
										<Return>
											<Type>Error</Type>
											<Value>Invalid CMD(Connection) received</Value>
											<Id>1</Id>
										</Return>
									</Statement>
								</Compare>
								<Compare>
									<Condition>
										<Value1>t_slaveFrame.Command</Value1>
										<Operator>Equal</Operator>
										<Value2>Parameter</Value2>
									</Condition>
									<Statement>
										<Return>
											<Type>Error</Type>
											<Value>Invalid CMD (Parameter) received</Value>
											<Id>1</Id>
										</Return>
									</Statement>
								</Compare>
								<Compare>
									<Condition>
										<Value1>t_slaveFrame.Command</Value1>
										<Operator>Equal</Operator>
										<Value2>ProcessData</Value2>
									</Condition>
									<Statement>
										<Return>
											<Type>Error</Type>
											<Value>Invalid CMD (ProcessData) received</Value>
											<Id>1</Id>
										</Return>
									</Statement>
								</Compare>
								<Compare>
									<Condition>
										<Value1>t_slaveFrame.Command</Value1>
										<Operator>Equal</Operator>
										<Value2>FailSafeData</Value2>
									</Condition>
									<Statement>
										<Return>
											<Type>Error</Type>
											<Value>Invalid CMD (FailSafeData) received</Value>
											<Id>1</Id>
										</Return>
									</Statement>
								</Compare>
								<Compare>
									<Condition>
										<Value1>t_slaveFrame.Command</Value1>
										<Operator>NotEqual</Operator>
										<Value2>Reset</Value2>
									</Condition>
									<Condition>
										<Value1>t_slaveFrame.Command</Value1>
										<Operator>NotEqual</Operator>
										<Value2>Session</Value2>
									</Condition>
									<Condition>
										<Value1>t_slaveFrame.Command</Value1>
										<Operator>NotEqual</Operator>
										<Value2>Connection</Value2>
									</Condition>
									<Condition>
										<Value1>t_slaveFrame.Command</Value1>
										<Operator>NotEqual</Operator>
										<Value2>Parameter</Value2>
									</Condition>
									<Condition>
										<Value1>t_slaveFrame.Command</Value1>
										<Operator>NotEqual</Operator>
										<Value2>ProcessData</Value2>
									</Condition>
									<Condition>
										<Value1>t_slaveFrame.Command</Value1>
										<Operator>NotEqual</Operator>
										<Value2>FailSafeData</Value2>
									</Condition>
									<Statement>
										<Return>
											<Type>Error</Type>
											<Value>Unknown CMD received</Value>
											<Id>2</Id>
										</Return>
									</Statement>
								</Compare>
							</Compares>
						</TestStep>
						<TestStep Name="CompareSlaveSessionIds">
							<Compares>
								<Compare>
									<Condition>
										<Value1>c_sessionId1_Slave</Value1>
										<Operator>NotEqual</Operator>
										<Value2>t_slaveSessionId</Value2>
									</Condition>
									<Statement>
										<Return>
											<Type>Success</Type>
											<Value>DUT State: Session</Value>
										</Return>
									</Statement>
								</Compare>
								<Compare>
									<Condition>
										<Value1>c_sessionId1_Slave</Value1>
										<Operator>Equal</Operator>
										<Value2>t_slaveSessionId</Value2>
									</Condition>
									<Statement>
										<Return>
											<Type>Error</Type>
											<Value Param0="c_sessionId1_Slave" Param1="t_slaveSessionId">Slave SessionId1 (0x{0:x4}) = Slave SessionId2 (0x{1:x4})</Value>
										</Return>
									</Statement>
								</Compare>
							</Compares>
							<Informations2>
								<Information>
									<Type>Output</Type>
									<Value Param0="t_slaveSessionId">Slave SessionId2: 0x{0:x4}</Value>
								</Information>
							</Informations2>
						</TestStep>
					</TestSteps>
				</TestCase>
				<TestCase Name="#5.44 Data_Ok2" CaseId="48">
					<Comment>normaler Hochlauf mit FailsafeData aber SafeOutputs != 0</Comment>
					<CaseVariables>
						<Variable>
							<Name>c_tmpByte</Name>
							<Type>Byte</Type>
						</Variable>
						<Variable>
							<Name>c_index</Name>
							<Type>Int32</Type>
						</Variable>
						<Variable>
							<Name>c_byte</Name>
							<Type>Byte</Type>
						</Variable>
						<Variable>
							<Name>c_maxByte</Name>
							<Type>Byte</Type>
						</Variable>
						<Variable>
							<Name>c_outputs[SafeDataLength]</Name>
							<Type>ArrayOfBytes</Type>
						</Variable>
					</CaseVariables>
					<TestSteps>
						<TestStep Name="SetSafeOutputsData">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>c_maxByte</Destination>
										<Source>255</Source>
									</SetVariable>
								</SetVariables>
							</Action>
						</TestStep>
						<TestStep Name="SetSafeOutputsData" From="0" To="SafeDataLength">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination DestinationIndex="c_index">c_outputs</Destination>
										<Source>c_byte</Source>
									</SetVariable>
									<SetVariable>
										<Destination>c_index</Destination>
										<Source>c_index+1</Source>
									</SetVariable>
									<SetVariable>
										<Destination>c_byte</Destination>
										<Source>c_byte+1</Source>
									</SetVariable>
								</SetVariables>
							</Action>
							<Compares>
								<Compare>
									<Condition>
										<Value1>c_byte</Value1>
										<Operator>Equal</Operator>
										<Value2>c_maxByte</Value2>
									</Condition>
									<Statement>
										<SetVariables>
											<SetVariable>
												<Destination>c_byte</Destination>
												<Source>0</Source>
											</SetVariable>
										</SetVariables>
									</Statement>
								</Compare>
							</Compares>
							<ReturnValue>
								<OnFailure>
									<Type>Error</Type>
									<Value>Failed to set SafeOutputs</Value>
								</OnFailure>
							</ReturnValue>
						</TestStep>
						<TestStep Name="SetConnectionData">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>t_connectionId</Destination>
										<Source>3</Source>
									</SetVariable>
									<SetVariable>
										<Destination DestinationIndex="0">t_connData</Destination>
										<Source>t_connectionId</Source>
									</SetVariable>
									<SetVariable>
										<Destination DestinationIndex="2">t_connData</Destination>
										<Source>ConnData.SlaveAddress</Source>
									</SetVariable>
								</SetVariables>
							</Action>
							<Informations2>
								<Information>
									<Type>Output</Type>
									<Value Param0="c_outputs">Safeoutputs: {0}</Value>
								</Information>
								<Information>
									<Type>Output</Type>
									<Value Param0="t_connectionId" Param1="ConnData.SlaveAddress" Param2="t_connData">ConnectionId: {0} (0x{0:x4}), Slave Address: {1} (0x{1:x4}), Connection Data {2}</Value>
								</Information>
							</Informations2>
						</TestStep>
						<TestStep Name="SetParameterData">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>t_safePara</Destination>
										<Source>SafePara</Source>
									</SetVariable>
									<SetVariable>
										<Destination>t_watchdog</Destination>
										<Source>SafePara.Watchdog</Source>
									</SetVariable>
								</SetVariables>
							</Action>
							<Informations2>
								<Information>
									<Type>Output</Type>
									<Value Param0="t_watchdog" Param1="SafeParaSize" Param2="t_safePara">Watchdog: {0} ms, SafeParaSize: {1}, Safe Parameter {2}</Value>
								</Information>
							</Informations2>
						</TestStep>
						<TestStep Name="GotoData">
							<Action>
								<CallFunction>
									<Reference>RUN_DUT_TO_DATA</Reference>
								</CallFunction>
							</Action>
						</TestStep>
						<TestStep Name="SetDataCmd">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>DataCommand</Destination>
										<Source>FailSafeData</Source>
									</SetVariable>
									<SetVariable>
										<Destination>SafeOutputs</Destination>
										<Source>c_outputs</Source>
									</SetVariable>
								</SetVariables>
							</Action>
							<ReturnValue>
								<OnFailure>
									<Type>Error</Type>
									<Value>Failed to set DataCommand</Value>
								</OnFailure>
							</ReturnValue>
						</TestStep>
						<TestStep Name="CallDataOk">
							<Action>
								<CallFunction>
									<Reference>DATA_OK1</Reference>
								</CallFunction>
							</Action>
						</TestStep>
						<TestStep Name="ReceiveEvent">
							<Event>
								<ReceiveFrame>t_slaveFrame</ReceiveFrame>
							</Event>
							<Informations2>
								<Information>
									<Type>Verbose</Type>
									<Value Param0="t_slaveFrame.FrameData">Slave Frame: {0}</Value>
								</Information>
							</Informations2>
						</TestStep>
						<TestStep Name="CheckWatchdog">
							<Event>
								<WatchdogExpired>
									<Return>
										<Type>Error</Type>
										<Value Param0="ElapsedWD">Watchdog expired!  {0} ms</Value>
										<Id>5</Id>
									</Return>
								</WatchdogExpired>
							</Event>
						</TestStep>
						<TestStep Name="CheckReceivedCrc">
							<Informations1>
								<Information>
									<Type>Verbose</Type>
									<Value Param0="t_slaveFrame.FrameData" Param1="LastCrc" Param2="t_slaveSeqNo" Param3="t_oldSlaveCrc" Param4="true">IsCrcCorrect(Frame {0}, LastCrc 0x{1:X4}, SeqNo {2}, OldCrc 0x{3:X4}, New {4})</Value>
								</Information>
							</Informations1>
							<Action>
								<IsCrcCorrect ReturnValue="crcCorrect">
									<Frame>t_slaveFrame</Frame>
									<LastCrc>LastCrc</LastCrc>
									<SequenceNo>t_slaveSeqNo</SequenceNo>
									<OldCrc>t_oldSlaveCrc</OldCrc>
									<New>true</New>
								</IsCrcCorrect>
							</Action>
							<ReturnValue>
								<OnFailure>
									<Type>Error</Type>
									<Value Param0="t_slaveFrame.Crc0">Invalid Crc0 reveived ({0:x})</Value>
									<Id>4</Id>
								</OnFailure>
							</ReturnValue>
						</TestStep>
						<TestStep Name="CheckDataCondition">
							<Compares>
								<Compare>
									<Condition>
										<Value1>t_slaveFrame.Command</Value1>
										<Operator>Equal</Operator>
										<Value2>ProcessData</Value2>
									</Condition>
									<Condition>
										<Value1>t_slaveFrame.ConnId</Value1>
										<Operator>Equal</Operator>
										<Value2>t_connectionId</Value2>
									</Condition>
									<Condition>
										<Value1>crcCorrect</Value1>
										<Operator>Equal</Operator>
										<Value2>true</Value2>
									</Condition>
									<Statement>
										<Return>
											<Type>Output</Type>
											<Value>DUT State: ProcessData</Value>
										</Return>
									</Statement>
								</Compare>
								<Compare>
									<Condition>
										<Value1>t_slaveFrame.Command</Value1>
										<Operator>Equal</Operator>
										<Value2>FailSafeData</Value2>
									</Condition>
									<Condition>
										<Value1>t_slaveFrame.ConnId</Value1>
										<Operator>Equal</Operator>
										<Value2>t_connectionId</Value2>
									</Condition>
									<Condition>
										<Value1>crcCorrect</Value1>
										<Operator>Equal</Operator>
										<Value2>true</Value2>
									</Condition>
									<Statement>
										<Return>
											<Type>Success</Type>
											<Value>DUT State: FailSafeData</Value>
										</Return>
									</Statement>
								</Compare>
								<Compare>
									<Condition>
										<Value1>t_slaveFrame.Command</Value1>
										<Operator>Equal</Operator>
										<Value2>ProcessData</Value2>
									</Condition>
									<Condition>
										<Value1>t_slaveFrame.ConnId</Value1>
										<Operator>Equal</Operator>
										<Value2>t_connectionId</Value2>
									</Condition>
									<Condition>
										<Value1>crcCorrect</Value1>
										<Operator>Equal</Operator>
										<Value2>false</Value2>
									</Condition>
									<Statement>
										<Return>
											<Type>Error</Type>
											<Value>Invalid Crc received</Value>
											<Id>4</Id>
										</Return>
									</Statement>
								</Compare>
								<Compare>
									<Condition>
										<Value1>t_slaveFrame.Command</Value1>
										<Operator>Equal</Operator>
										<Value2>ProcessData</Value2>
									</Condition>
									<Condition>
										<Value1>t_slaveFrame.ConnId</Value1>
										<Operator>NotEqual</Operator>
										<Value2>t_connectionId</Value2>
									</Condition>
									<Statement>
										<Return>
											<Type>Error</Type>
											<Value>Invalid Connection Id received</Value>
											<Id>3</Id>
										</Return>
									</Statement>
								</Compare>
								<Compare>
									<Condition>
										<Value1>t_slaveFrame.Command</Value1>
										<Operator>Equal</Operator>
										<Value2>FailSafeData</Value2>
									</Condition>
									<Condition>
										<Value1>t_slaveFrame.ConnId</Value1>
										<Operator>NotEqual</Operator>
										<Value2>t_connectionId</Value2>
									</Condition>
									<Statement>
										<Return>
											<Type>Error</Type>
											<Value>Invalid Connection Id received||Back to Reset</Value>
										</Return>
									</Statement>
								</Compare>
								<Compare>
									<Condition>
										<Value1>t_slaveFrame.Command</Value1>
										<Operator>Equal</Operator>
										<Value2>Reset</Value2>
									</Condition>
									<Statement>
										<CallFunction>GET_COMM_FAULT_REASON</CallFunction>
									</Statement>
									<Statement>
										<Return>
											<Type>Error</Type>
											<Value Param0="t_commFaultReason">Reset Cmd received , CommFaultReason: {0}</Value>
										</Return>
									</Statement>
								</Compare>
								<Compare>
									<Condition>
										<Value1>t_slaveFrame.Command</Value1>
										<Operator>Equal</Operator>
										<Value2>Session</Value2>
									</Condition>
									<Statement>
										<Return>
											<Type>Error</Type>
											<Value>Invalid Session Cmd received</Value>
										</Return>
									</Statement>
								</Compare>
								<Compare>
									<Condition>
										<Value1>t_slaveFrame.Command</Value1>
										<Operator>Equal</Operator>
										<Value2>Connection</Value2>
									</Condition>
									<Statement>
										<Return>
											<Type>Error</Type>
											<Value>Invalid Connection Cmd received</Value>
										</Return>
									</Statement>
								</Compare>
								<Compare>
									<Condition>
										<Value1>t_slaveFrame.Command</Value1>
										<Operator>Equal</Operator>
										<Value2>Parameter</Value2>
									</Condition>
									<Statement>
										<Return>
											<Type>Error</Type>
											<Value>Invalid Parameter Cmd received</Value>
										</Return>
									</Statement>
								</Compare>
								<Compare>
									<Condition>
										<Value1>t_slaveFrame.Command</Value1>
										<Operator>NotEqual</Operator>
										<Value2>Reset</Value2>
									</Condition>
									<Condition>
										<Value1>t_slaveFrame.Command</Value1>
										<Operator>NotEqual</Operator>
										<Value2>Session</Value2>
									</Condition>
									<Condition>
										<Value1>t_slaveFrame.Command</Value1>
										<Operator>NotEqual</Operator>
										<Value2>Connection</Value2>
									</Condition>
									<Condition>
										<Value1>t_slaveFrame.Command</Value1>
										<Operator>NotEqual</Operator>
										<Value2>Parameter</Value2>
									</Condition>
									<Condition>
										<Value1>t_slaveFrame.Command</Value1>
										<Operator>NotEqual</Operator>
										<Value2>ProcessData</Value2>
									</Condition>
									<Condition>
										<Value1>t_slaveFrame.Command</Value1>
										<Operator>NotEqual</Operator>
										<Value2>FailSafeData</Value2>
									</Condition>
									<Statement>
										<Return>
											<Type>Error</Type>
											<Value>Unknown CMD received</Value>
											<Id>2</Id>
										</Return>
									</Statement>
								</Compare>
								<Compare>
									<Condition>
										<Value1>1</Value1>
										<Operator>Equal</Operator>
										<Value2>1</Value2>
									</Condition>
									<Statement>
										<Return>
											<Type>Error</Type>
											<Value>General state machine error!</Value>
										</Return>
									</Statement>
								</Compare>
							</Compares>
						</TestStep>
					</TestSteps>
				</TestCase>
				<TestCase Name="#5.45 Data_WD" CaseId="49">
					<Comment>Normaler Hochlauf nach DATA mit ProcessData und Watchdog ablaufen lassen</Comment>
					<CaseVariables>
						<Variable>
							<Name>c_CommFaultReason</Name>
							<Type>Byte</Type>
						</Variable>
						<Variable>
							<Name>c_tmpByte</Name>
							<Type>Byte</Type>
						</Variable>
					</CaseVariables>
					<TestSteps>
						<TestStep Name="SetVariables">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>c_CommFaultReason</Destination>
										<Source>WD_EXPIRED</Source>
									</SetVariable>
									<SetVariable>
										<Destination>c_tmpByte</Destination>
										<Source>0</Source>
									</SetVariable>
									<SetVariable>
										<Destination>t_masterSessionId</Destination>
										<Source>1</Source>
									</SetVariable>
								</SetVariables>
							</Action>
						</TestStep>
						<TestStep Name="SetConnectionData">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>t_connectionId</Destination>
										<Source>3</Source>
									</SetVariable>
									<SetVariable>
										<Destination DestinationIndex="0">t_connData</Destination>
										<Source>t_connectionId</Source>
									</SetVariable>
									<SetVariable>
										<Destination DestinationIndex="2">t_connData</Destination>
										<Source>ConnData.SlaveAddress</Source>
									</SetVariable>
								</SetVariables>
							</Action>
							<Informations2>
								<Information>
									<Type>Output</Type>
									<Value Param0="t_connectionId" Param1="ConnData.SlaveAddress" Param2="t_connData">ConnectionId: {0} (0x{0:x4}), Slave Address: {1} (0x{1:x4}), Connection Data {2}</Value>
								</Information>
							</Informations2>
						</TestStep>
						<TestStep Name="SetParameterData">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>t_safePara</Destination>
										<Source>SafePara</Source>
									</SetVariable>
									<SetVariable>
										<Destination>t_watchdog</Destination>
										<Source>SafePara.Watchdog</Source>
									</SetVariable>
								</SetVariables>
							</Action>
							<Informations2>
								<Information>
									<Type>Output</Type>
									<Value Param0="t_watchdog" Param1="SafeParaSize" Param2="t_safePara">Watchdog: {0} ms, SafeParaSize: {1}, Safe Parameter {2}</Value>
								</Information>
							</Informations2>
						</TestStep>
						<TestStep Name="GotoData" Delay="t_watchdog+1">
							<Action>
								<CallFunction>
									<Reference>RUN_DUT_TO_PROCESSDATA</Reference>
								</CallFunction>
							</Action>
							<Informations2>
								<Information>
									<Type>Output</Type>
									<Value Param0="t_watchdog">Wait for: {0} + 1 ms</Value>
								</Information>
							</Informations2>
						</TestStep>
						<TestStep Name="CheckReceivedSlaveFrame">
							<Action>
								<CallFunction>
									<Reference>CHECK_RESET_FAIL_WO_WD</Reference>
								</CallFunction>
							</Action>
							<ReturnValue>
								<OnSuccess>
									<Type>Success</Type>
									<Value Param0="c_CommFaultReason">Expected CommFaultReason ({0}) received</Value>
								</OnSuccess>
							</ReturnValue>
						</TestStep>
					</TestSteps>
				</TestCase>
				<TestCase Name="#5.45c Data_Ok1" CaseId="52">
					<Comment>Normal boot-up to data with ProcessData and max watchdog</Comment>
					<CaseVariables>
						<Variable>
							<Name>c_tmpByte</Name>
							<Type>Byte</Type>
						</Variable>
						<Variable>
							<Name>c_dataOk</Name>
							<Type>Bool</Type>
						</Variable>
					</CaseVariables>
					<TestSteps>
						<TestStep Name="SetVariables">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>t_masterSessionId</Destination>
										<Source>1</Source>
									</SetVariable>
								</SetVariables>
							</Action>
						</TestStep>
						<TestStep Name="SetConnectionData">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>t_connectionId</Destination>
										<Source>3</Source>
									</SetVariable>
									<SetVariable>
										<Destination DestinationIndex="0">t_connData</Destination>
										<Source>t_connectionId</Source>
									</SetVariable>
									<SetVariable>
										<Destination DestinationIndex="2">t_connData</Destination>
										<Source>ConnData.SlaveAddress</Source>
									</SetVariable>
								</SetVariables>
							</Action>
							<Informations2>
								<Information>
									<Type>Output</Type>
									<Value Param0="t_connectionId" Param1="ConnData.SlaveAddress" Param2="t_connData">ConnectionId: {0} (0x{0:x4}), Slave Address: {1} (0x{1:x4}), Connection Data {2}</Value>
								</Information>
							</Informations2>
						</TestStep>
						<TestStep Name="SetParameterData">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>t_safePara</Destination>
										<Source>SafePara</Source>
									</SetVariable>
									<SetVariable>
										<Destination DestinationIndex="2">t_safePara</Destination>
										<Source>MaxWatchdog</Source>
									</SetVariable>
									<SetVariable>
										<Destination>t_watchdog</Destination>
										<Source>MaxWatchdog</Source>
									</SetVariable>
								</SetVariables>
							</Action>
							<Informations2>
								<Information>
									<Type>Output</Type>
									<Value Param0="t_watchdog" Param1="SafeParaSize" Param2="t_safePara">Watchdog: {0} ms, SafeParaSize: {1}, Safe Parameter {2}</Value>
								</Information>
							</Informations2>
						</TestStep>
						<TestStep Name="GoToParameter">
							<Action>
								<CallFunction>
									<Reference>RUN_DUT_TO_PARAMETER</Reference>
								</CallFunction>
							</Action>
						</TestStep>
						<TestStep Name="SetDataCmd">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>DataCommand</Destination>
										<Source>ProcessData</Source>
									</SetVariable>
								</SetVariables>
							</Action>
						</TestStep>
						<TestStep Name="CallParaOk">
							<Action>
								<CallFunction>
									<Reference>PARA_OK</Reference>
								</CallFunction>
							</Action>
						</TestStep>
						<TestStep Name="ReceiveEvent">
							<Event>
								<ReceiveFrame>t_slaveFrame</ReceiveFrame>
							</Event>
							<Informations2>
								<Information>
									<Type>Verbose</Type>
									<Value Param0="t_slaveFrame.FrameData">Slave Frame: {0}</Value>
								</Information>
							</Informations2>
						</TestStep>
						<TestStep Name="CheckWatchdog">
							<Event>
								<WatchdogExpired>
									<Return>
										<Type>Error</Type>
										<Value Param0="ElapsedWD">Watchdog expired!  {0} ms</Value>
										<Id>5</Id>
									</Return>
								</WatchdogExpired>
							</Event>
						</TestStep>
						<TestStep Name="CheckReceivedCrc">
							<Informations1>
								<Information>
									<Type>Verbose</Type>
									<Value Param0="t_slaveFrame.FrameData" Param1="LastCrc" Param2="t_slaveSeqNo" Param3="t_oldSlaveCrc" Param4="true">IsCrcCorrect(Frame {0}, LastCrc 0x{1:X4}, SeqNo {2}, OldCrc 0x{3:X4}, New {4})</Value>
								</Information>
							</Informations1>
							<Action>
								<IsCrcCorrect ReturnValue="crcCorrect">
									<Frame>t_slaveFrame</Frame>
									<LastCrc>LastCrc</LastCrc>
									<SequenceNo>t_slaveSeqNo</SequenceNo>
									<OldCrc>t_oldSlaveCrc</OldCrc>
									<New>true</New>
								</IsCrcCorrect>
							</Action>
							<ReturnValue>
								<OnFailure>
									<Type>Error</Type>
									<Value Param0="t_slaveFrame.Crc0">Invalid Crc0 reveived ({0:x})</Value>
									<Id>4</Id>
								</OnFailure>
							</ReturnValue>
						</TestStep>
						<TestStep Name="CheckDataCondition">
							<Compares>
								<Compare>
									<Condition>
										<Value1>c_dataOk</Value1>
										<Operator>Equal</Operator>
										<Value2>true</Value2>
									</Condition>
									<Condition>
										<Value1>t_slaveFrame.Command</Value1>
										<Operator>Equal</Operator>
										<Value2>ProcessData</Value2>
									</Condition>
									<Condition>
										<Value1>t_slaveFrame.ConnId</Value1>
										<Operator>Equal</Operator>
										<Value2>t_connectionId</Value2>
									</Condition>
									<Condition>
										<Value1>crcCorrect</Value1>
										<Operator>Equal</Operator>
										<Value2>true</Value2>
									</Condition>
									<Statement>
										<Return>
											<Type>Success</Type>
											<Value Param0="MaxWatchdog">DuT state DATA (ProcessData), Watchdog {0}ms</Value>
										</Return>
									</Statement>
								</Compare>
								<Compare>
									<Condition>
										<Value1>c_dataOk</Value1>
										<Operator>Equal</Operator>
										<Value2>true</Value2>
									</Condition>
									<Condition>
										<Value1>t_slaveFrame.Command</Value1>
										<Operator>Equal</Operator>
										<Value2>FailSafeData</Value2>
									</Condition>
									<Condition>
										<Value1>t_slaveFrame.ConnId</Value1>
										<Operator>Equal</Operator>
										<Value2>t_connectionId</Value2>
									</Condition>
									<Condition>
										<Value1>crcCorrect</Value1>
										<Operator>Equal</Operator>
										<Value2>true</Value2>
									</Condition>
									<Statement>
										<Return>
											<Type>Success</Type>
											<Value Param0="MaxWatchdog">DuT state DATA (FailSafeData), Watchdog {0}ms</Value>
										</Return>
									</Statement>
								</Compare>
								<Compare>
									<Condition>
										<Value1>t_slaveFrame.Command</Value1>
										<Operator>Equal</Operator>
										<Value2>ProcessData</Value2>
									</Condition>
									<Condition>
										<Value1>t_slaveFrame.ConnId</Value1>
										<Operator>Equal</Operator>
										<Value2>t_connectionId</Value2>
									</Condition>
									<Condition>
										<Value1>crcCorrect</Value1>
										<Operator>Equal</Operator>
										<Value2>true</Value2>
									</Condition>
									<Statement>
										<CallFunction>DATA_OK1</CallFunction>
									</Statement>
									<Statement>
										<SetVariables>
											<SetVariable>
												<Destination>c_dataOk</Destination>
												<Source>true</Source>
											</SetVariable>
										</SetVariables>
									</Statement>
									<Statement>
										<GotoStep>ReceiveEvent</GotoStep>
									</Statement>
								</Compare>
								<Compare>
									<Condition>
										<Value1>t_slaveFrame.Command</Value1>
										<Operator>Equal</Operator>
										<Value2>FailSafeData</Value2>
									</Condition>
									<Condition>
										<Value1>t_slaveFrame.ConnId</Value1>
										<Operator>Equal</Operator>
										<Value2>t_connectionId</Value2>
									</Condition>
									<Condition>
										<Value1>crcCorrect</Value1>
										<Operator>Equal</Operator>
										<Value2>true</Value2>
									</Condition>
									<Statement>
										<CallFunction>DATA_OK2</CallFunction>
									</Statement>
									<Statement>
										<SetVariables>
											<SetVariable>
												<Destination>c_dataOk</Destination>
												<Source>true</Source>
											</SetVariable>
										</SetVariables>
									</Statement>
									<Statement>
										<GotoStep>ReceiveEvent</GotoStep>
									</Statement>
								</Compare>
								<Compare>
									<Condition>
										<Value1>t_slaveFrame.Command</Value1>
										<Operator>Equal</Operator>
										<Value2>ProcessData</Value2>
									</Condition>
									<Condition>
										<Value1>t_slaveFrame.ConnId</Value1>
										<Operator>Equal</Operator>
										<Value2>t_connectionId</Value2>
									</Condition>
									<Condition>
										<Value1>crcCorrect</Value1>
										<Operator>Equal</Operator>
										<Value2>false</Value2>
									</Condition>
									<Statement>
										<Return>
											<Type>Error</Type>
											<Value>Invalid Crc received</Value>
											<Id>4</Id>
										</Return>
									</Statement>
								</Compare>
								<Compare>
									<Condition>
										<Value1>t_slaveFrame.Command</Value1>
										<Operator>Equal</Operator>
										<Value2>ProcessData</Value2>
									</Condition>
									<Condition>
										<Value1>t_slaveFrame.ConnId</Value1>
										<Operator>NotEqual</Operator>
										<Value2>t_connectionId</Value2>
									</Condition>
									<Statement>
										<Return>
											<Type>Error</Type>
											<Value>Invalid Connection Id received</Value>
											<Id>3</Id>
										</Return>
									</Statement>
								</Compare>
								<Compare>
									<Condition>
										<Value1>t_slaveFrame.Command</Value1>
										<Operator>Equal</Operator>
										<Value2>FailSafeData</Value2>
									</Condition>
									<Condition>
										<Value1>t_slaveFrame.ConnId</Value1>
										<Operator>NotEqual</Operator>
										<Value2>t_connectionId</Value2>
									</Condition>
									<Statement>
										<Return>
											<Type>Error</Type>
											<Value>Invalid Connection Id received||Back to Reset</Value>
										</Return>
									</Statement>
								</Compare>
								<Compare>
									<Condition>
										<Value1>t_slaveFrame.Command</Value1>
										<Operator>Equal</Operator>
										<Value2>Reset</Value2>
									</Condition>
									<Statement>
										<CallFunction>GET_COMM_FAULT_REASON</CallFunction>
									</Statement>
									<Statement>
										<Return>
											<Type>Error</Type>
											<Value Param0="t_commFaultReason">Reset Cmd received , CommFaultReason: {0}</Value>
										</Return>
									</Statement>
								</Compare>
								<Compare>
									<Condition>
										<Value1>t_slaveFrame.Command</Value1>
										<Operator>Equal</Operator>
										<Value2>Session</Value2>
									</Condition>
									<Statement>
										<Return>
											<Type>Error</Type>
											<Value>Invalid Session Cmd received</Value>
										</Return>
									</Statement>
								</Compare>
								<Compare>
									<Condition>
										<Value1>t_slaveFrame.Command</Value1>
										<Operator>Equal</Operator>
										<Value2>Connection</Value2>
									</Condition>
									<Statement>
										<Return>
											<Type>Error</Type>
											<Value>Invalid Connection Cmd received</Value>
										</Return>
									</Statement>
								</Compare>
								<Compare>
									<Condition>
										<Value1>t_slaveFrame.Command</Value1>
										<Operator>Equal</Operator>
										<Value2>Parameter</Value2>
									</Condition>
									<Statement>
										<Return>
											<Type>Error</Type>
											<Value>Invalid Parameter Cmd received</Value>
										</Return>
									</Statement>
								</Compare>
								<Compare>
									<Condition>
										<Value1>t_slaveFrame.Command</Value1>
										<Operator>NotEqual</Operator>
										<Value2>Reset</Value2>
									</Condition>
									<Condition>
										<Value1>t_slaveFrame.Command</Value1>
										<Operator>NotEqual</Operator>
										<Value2>Session</Value2>
									</Condition>
									<Condition>
										<Value1>t_slaveFrame.Command</Value1>
										<Operator>NotEqual</Operator>
										<Value2>Connection</Value2>
									</Condition>
									<Condition>
										<Value1>t_slaveFrame.Command</Value1>
										<Operator>NotEqual</Operator>
										<Value2>Parameter</Value2>
									</Condition>
									<Condition>
										<Value1>t_slaveFrame.Command</Value1>
										<Operator>NotEqual</Operator>
										<Value2>ProcessData</Value2>
									</Condition>
									<Condition>
										<Value1>t_slaveFrame.Command</Value1>
										<Operator>NotEqual</Operator>
										<Value2>FailSafeData</Value2>
									</Condition>
									<Statement>
										<Return>
											<Type>Error</Type>
											<Value>Unknown CMD received</Value>
											<Id>2</Id>
										</Return>
									</Statement>
								</Compare>
								<Compare>
									<Condition>
										<Value1>1</Value1>
										<Operator>Equal</Operator>
										<Value2>1</Value2>
									</Condition>
									<Statement>
										<Return>
											<Type>Error</Type>
											<Value>General state machine error!</Value>
										</Return>
									</Statement>
								</Compare>
							</Compares>
						</TestStep>
					</TestSteps>
				</TestCase>
				<TestCase Name="#5.46 Data_WD" CaseId="54">
					<Comment>Normaler Hochlauf nach DATA mit FailsafeData und Watchdog ablaufen lassen</Comment>
					<CaseVariables>
						<Variable>
							<Name>c_CommFaultReason</Name>
							<Type>Byte</Type>
						</Variable>
						<Variable>
							<Name>c_tmpByte</Name>
							<Type>Byte</Type>
						</Variable>
					</CaseVariables>
					<TestSteps>
						<TestStep Name="SetVariables">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>c_CommFaultReason</Destination>
										<Source>WD_EXPIRED</Source>
									</SetVariable>
									<SetVariable>
										<Destination>c_tmpByte</Destination>
										<Source>0</Source>
									</SetVariable>
									<SetVariable>
										<Destination>t_masterSessionId</Destination>
										<Source>1</Source>
									</SetVariable>
								</SetVariables>
							</Action>
						</TestStep>
						<TestStep Name="SetConnectionData">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>t_connectionId</Destination>
										<Source>3</Source>
									</SetVariable>
									<SetVariable>
										<Destination DestinationIndex="0">t_connData</Destination>
										<Source>t_connectionId</Source>
									</SetVariable>
									<SetVariable>
										<Destination DestinationIndex="2">t_connData</Destination>
										<Source>ConnData.SlaveAddress</Source>
									</SetVariable>
								</SetVariables>
							</Action>
							<Informations2>
								<Information>
									<Type>Output</Type>
									<Value Param0="t_connectionId" Param1="ConnData.SlaveAddress" Param2="t_connData">ConnectionId: {0} (0x{0:x4}), Slave Address: {1} (0x{1:x4}), Connection Data {2}</Value>
								</Information>
							</Informations2>
						</TestStep>
						<TestStep Name="SetParameterData">
							<Action>
								<SetVariables>
									<SetVariable>
										<Destination>t_safePara</Destination>
										<Source>SafePara</Source>
									</SetVariable>
									<SetVariable>
										<Destination>t_watchdog</Destination>
										<Source>SafePara.Watchdog</Source>
									</SetVariable>
								</SetVariables>
							</Action>
							<Informations2>
								<Information>
									<Type>Output</Type>
									<Value Param0="t_watchdog" Param1="SafeParaSize" Param2="t_safePara">Watchdog: {0} ms, SafeParaSize: {1}, Safe Parameter {2}</Value>
								</Information>
							</Informations2>
						</TestStep>
						<TestStep Name="GotoData" Delay="t_watchdog+1">
							<Action>
								<CallFunction>
									<Reference>RUN_DUT_TO_DATA</Reference>
								</CallFunction>
							</Action>
							<Informations2>
								<Information>
									<Type>Output</Type>
									<Value Param0="t_watchdog">Wait for: {0}+1 ms</Value>
								</Information>
							</Informations2>
						</TestStep>
						<TestStep Name="CheckReceivedSlaveFrame">
							<Action>
								<CallFunction>
									<Reference>CHECK_RESET_FAIL_WO_WD</Reference>
								</CallFunction>
							</Action>
							<ReturnValue>
								<OnSuccess>
									<Type>Success</Type>
									<Value Param0="c_CommFaultReason">Expected CommFaultReason ({0}) received</Value>
								</OnSuccess>
							</ReturnValue>
						</TestStep>
					</TestSteps>
				</TestCase>
			</TestCases>
		</TestGroup>
	</TestGroups>
</FSoETest>
